<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="965.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="116528"><g><title>std::sys::unix::futex::futex_wait (52 samples, 0.04%)</title><rect x="0.0069%" y="565" width="0.0446%" height="15" fill="rgb(227,0,7)" fg:x="8" fg:w="52"/><text x="0.2569%" y="575.50"></text></g><g><title>syscall (42 samples, 0.04%)</title><rect x="0.0154%" y="549" width="0.0360%" height="15" fill="rgb(217,0,24)" fg:x="18" fg:w="42"/><text x="0.2654%" y="559.50"></text></g><g><title>std::panic::catch_unwind (60 samples, 0.05%)</title><rect x="0.0009%" y="789" width="0.0515%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="60"/><text x="0.2509%" y="799.50"></text></g><g><title>std::panicking::try (60 samples, 0.05%)</title><rect x="0.0009%" y="773" width="0.0515%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="60"/><text x="0.2509%" y="783.50"></text></g><g><title>std::panicking::try::do_call (60 samples, 0.05%)</title><rect x="0.0009%" y="757" width="0.0515%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="60"/><text x="0.2509%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (60 samples, 0.05%)</title><rect x="0.0009%" y="741" width="0.0515%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="60"/><text x="0.2509%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (60 samples, 0.05%)</title><rect x="0.0009%" y="725" width="0.0515%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="60"/><text x="0.2509%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (60 samples, 0.05%)</title><rect x="0.0009%" y="709" width="0.0515%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="60"/><text x="0.2509%" y="719.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (60 samples, 0.05%)</title><rect x="0.0009%" y="693" width="0.0515%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="60"/><text x="0.2509%" y="703.50"></text></g><g><title>async_io::driver::main_loop (60 samples, 0.05%)</title><rect x="0.0009%" y="677" width="0.0515%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="60"/><text x="0.2509%" y="687.50"></text></g><g><title>parking::Parker::park_timeout (54 samples, 0.05%)</title><rect x="0.0060%" y="661" width="0.0463%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="54"/><text x="0.2560%" y="671.50"></text></g><g><title>parking::Inner::park (54 samples, 0.05%)</title><rect x="0.0060%" y="645" width="0.0463%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="54"/><text x="0.2560%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (54 samples, 0.05%)</title><rect x="0.0060%" y="629" width="0.0463%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="54"/><text x="0.2560%" y="639.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (54 samples, 0.05%)</title><rect x="0.0060%" y="613" width="0.0463%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="54"/><text x="0.2560%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_timeout (54 samples, 0.05%)</title><rect x="0.0060%" y="597" width="0.0463%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="54"/><text x="0.2560%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (54 samples, 0.05%)</title><rect x="0.0060%" y="581" width="0.0463%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="54"/><text x="0.2560%" y="591.50"></text></g><g><title>async-io (61 samples, 0.05%)</title><rect x="0.0009%" y="917" width="0.0523%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="61"/><text x="0.2509%" y="927.50"></text></g><g><title>clone (61 samples, 0.05%)</title><rect x="0.0009%" y="901" width="0.0523%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="61"/><text x="0.2509%" y="911.50"></text></g><g><title>start_thread (61 samples, 0.05%)</title><rect x="0.0009%" y="885" width="0.0523%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="61"/><text x="0.2509%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (61 samples, 0.05%)</title><rect x="0.0009%" y="869" width="0.0523%" height="15" fill="rgb(226,26,5)" fg:x="1" fg:w="61"/><text x="0.2509%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (61 samples, 0.05%)</title><rect x="0.0009%" y="853" width="0.0523%" height="15" fill="rgb(249,33,26)" fg:x="1" fg:w="61"/><text x="0.2509%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (61 samples, 0.05%)</title><rect x="0.0009%" y="837" width="0.0523%" height="15" fill="rgb(235,183,28)" fg:x="1" fg:w="61"/><text x="0.2509%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (61 samples, 0.05%)</title><rect x="0.0009%" y="821" width="0.0523%" height="15" fill="rgb(221,5,38)" fg:x="1" fg:w="61"/><text x="0.2509%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (61 samples, 0.05%)</title><rect x="0.0009%" y="805" width="0.0523%" height="15" fill="rgb(247,18,42)" fg:x="1" fg:w="61"/><text x="0.2509%" y="815.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (27 samples, 0.02%)</title><rect x="0.0541%" y="901" width="0.0232%" height="15" fill="rgb(241,131,45)" fg:x="63" fg:w="27"/><text x="0.3041%" y="911.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.01%)</title><rect x="0.0858%" y="901" width="0.0120%" height="15" fill="rgb(249,31,29)" fg:x="100" fg:w="14"/><text x="0.3358%" y="911.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (21 samples, 0.02%)</title><rect x="0.1227%" y="885" width="0.0180%" height="15" fill="rgb(225,111,53)" fg:x="143" fg:w="21"/><text x="0.3727%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="0.1407%" y="885" width="0.0112%" height="15" fill="rgb(238,160,17)" fg:x="164" fg:w="13"/><text x="0.3907%" y="895.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (19 samples, 0.02%)</title><rect x="0.1519%" y="885" width="0.0163%" height="15" fill="rgb(214,148,48)" fg:x="177" fg:w="19"/><text x="0.4019%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.02%)</title><rect x="0.1682%" y="885" width="0.0240%" height="15" fill="rgb(232,36,49)" fg:x="196" fg:w="28"/><text x="0.4182%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="0.1939%" y="885" width="0.0146%" height="15" fill="rgb(209,103,24)" fg:x="226" fg:w="17"/><text x="0.4439%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="0.2171%" y="885" width="0.0154%" height="15" fill="rgb(229,88,8)" fg:x="253" fg:w="18"/><text x="0.4671%" y="895.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="0.2394%" y="885" width="0.0206%" height="15" fill="rgb(213,181,19)" fg:x="279" fg:w="24"/><text x="0.4894%" y="895.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.03%)</title><rect x="0.2600%" y="885" width="0.0343%" height="15" fill="rgb(254,191,54)" fg:x="303" fg:w="40"/><text x="0.5100%" y="895.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (17 samples, 0.01%)</title><rect x="0.3759%" y="869" width="0.0146%" height="15" fill="rgb(241,83,37)" fg:x="438" fg:w="17"/><text x="0.6259%" y="879.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (117 samples, 0.10%)</title><rect x="0.2943%" y="885" width="0.1004%" height="15" fill="rgb(233,36,39)" fg:x="343" fg:w="117"/><text x="0.5443%" y="895.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="0.3948%" y="885" width="0.0163%" height="15" fill="rgb(226,3,54)" fg:x="460" fg:w="19"/><text x="0.6448%" y="895.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (12 samples, 0.01%)</title><rect x="0.5106%" y="869" width="0.0103%" height="15" fill="rgb(245,192,40)" fg:x="595" fg:w="12"/><text x="0.7606%" y="879.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (129 samples, 0.11%)</title><rect x="0.4111%" y="885" width="0.1107%" height="15" fill="rgb(238,167,29)" fg:x="479" fg:w="129"/><text x="0.6611%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (30 samples, 0.03%)</title><rect x="0.6968%" y="869" width="0.0257%" height="15" fill="rgb(232,182,51)" fg:x="812" fg:w="30"/><text x="0.9468%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (329 samples, 0.28%)</title><rect x="0.5218%" y="885" width="0.2823%" height="15" fill="rgb(231,60,39)" fg:x="608" fg:w="329"/><text x="0.7718%" y="895.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (86 samples, 0.07%)</title><rect x="0.7303%" y="869" width="0.0738%" height="15" fill="rgb(208,69,12)" fg:x="851" fg:w="86"/><text x="0.9803%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (49 samples, 0.04%)</title><rect x="0.8041%" y="885" width="0.0420%" height="15" fill="rgb(235,93,37)" fg:x="937" fg:w="49"/><text x="1.0541%" y="895.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="0.8496%" y="885" width="0.0154%" height="15" fill="rgb(213,116,39)" fg:x="990" fg:w="18"/><text x="1.0996%" y="895.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (30 samples, 0.03%)</title><rect x="0.8650%" y="885" width="0.0257%" height="15" fill="rgb(222,207,29)" fg:x="1008" fg:w="30"/><text x="1.1150%" y="895.50"></text></g><g><title>&lt;tremor_pipeline::op::EventAndInsights as core::convert::From&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt;&gt;::from (34 samples, 0.03%)</title><rect x="0.8908%" y="885" width="0.0292%" height="15" fill="rgb(206,96,30)" fg:x="1038" fg:w="34"/><text x="1.1408%" y="895.50"></text></g><g><title>&lt;tremor_pipeline::op::grouper::bucket::Grouper as tremor_pipeline::op::Operator&gt;::on_event (77 samples, 0.07%)</title><rect x="0.9200%" y="885" width="0.0661%" height="15" fill="rgb(218,138,4)" fg:x="1072" fg:w="77"/><text x="1.1700%" y="895.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::operator::TrickleOperator as tremor_pipeline::op::Operator&gt;::on_event (26 samples, 0.02%)</title><rect x="0.9860%" y="885" width="0.0223%" height="15" fill="rgb(250,191,14)" fg:x="1149" fg:w="26"/><text x="1.2360%" y="895.50"></text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::decode (21 samples, 0.02%)</title><rect x="1.0135%" y="885" width="0.0180%" height="15" fill="rgb(239,60,40)" fg:x="1181" fg:w="21"/><text x="1.2635%" y="895.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (94 samples, 0.08%)</title><rect x="1.0384%" y="885" width="0.0807%" height="15" fill="rgb(206,27,48)" fg:x="1210" fg:w="94"/><text x="1.2884%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (43 samples, 0.04%)</title><rect x="1.0821%" y="869" width="0.0369%" height="15" fill="rgb(225,35,8)" fg:x="1261" fg:w="43"/><text x="1.3321%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (29 samples, 0.02%)</title><rect x="1.0942%" y="853" width="0.0249%" height="15" fill="rgb(250,213,24)" fg:x="1275" fg:w="29"/><text x="1.3442%" y="863.50"></text></g><g><title>[libc-2.31.so] (138 samples, 0.12%)</title><rect x="1.1431%" y="885" width="0.1184%" height="15" fill="rgb(247,123,22)" fg:x="1332" fg:w="138"/><text x="1.3931%" y="895.50"></text></g><g><title>__clock_gettime (59 samples, 0.05%)</title><rect x="1.2615%" y="885" width="0.0506%" height="15" fill="rgb(231,138,38)" fg:x="1470" fg:w="59"/><text x="1.5115%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (28 samples, 0.02%)</title><rect x="1.3224%" y="885" width="0.0240%" height="15" fill="rgb(231,145,46)" fg:x="1541" fg:w="28"/><text x="1.5724%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.01%)</title><rect x="1.3344%" y="869" width="0.0120%" height="15" fill="rgb(251,118,11)" fg:x="1555" fg:w="14"/><text x="1.5844%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (50 samples, 0.04%)</title><rect x="1.3525%" y="885" width="0.0429%" height="15" fill="rgb(217,147,25)" fg:x="1576" fg:w="50"/><text x="1.6025%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (14 samples, 0.01%)</title><rect x="1.3954%" y="885" width="0.0120%" height="15" fill="rgb(247,81,37)" fg:x="1626" fg:w="14"/><text x="1.6454%" y="895.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (12 samples, 0.01%)</title><rect x="1.4074%" y="885" width="0.0103%" height="15" fill="rgb(209,12,38)" fg:x="1640" fg:w="12"/><text x="1.6574%" y="895.50"></text></g><g><title>async_executor::State::notify (12 samples, 0.01%)</title><rect x="1.4177%" y="885" width="0.0103%" height="15" fill="rgb(227,1,9)" fg:x="1652" fg:w="12"/><text x="1.6677%" y="895.50"></text></g><g><title>async_executor::Ticker::wake (14 samples, 0.01%)</title><rect x="1.4366%" y="885" width="0.0120%" height="15" fill="rgb(248,47,43)" fg:x="1674" fg:w="14"/><text x="1.6866%" y="895.50"></text></g><g><title>async_executor::steal (155 samples, 0.13%)</title><rect x="1.4486%" y="885" width="0.1330%" height="15" fill="rgb(221,10,30)" fg:x="1688" fg:w="155"/><text x="1.6986%" y="895.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (271 samples, 0.23%)</title><rect x="1.6013%" y="885" width="0.2326%" height="15" fill="rgb(210,229,1)" fg:x="1866" fg:w="271"/><text x="1.8513%" y="895.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (32 samples, 0.03%)</title><rect x="1.8339%" y="885" width="0.0275%" height="15" fill="rgb(222,148,37)" fg:x="2137" fg:w="32"/><text x="2.0839%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (38 samples, 0.03%)</title><rect x="1.8614%" y="885" width="0.0326%" height="15" fill="rgb(234,67,33)" fg:x="2169" fg:w="38"/><text x="2.1114%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (12 samples, 0.01%)</title><rect x="1.8940%" y="885" width="0.0103%" height="15" fill="rgb(247,98,35)" fg:x="2207" fg:w="12"/><text x="2.1440%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[tremor_value::value::Value]&gt; (31 samples, 0.03%)</title><rect x="1.9043%" y="885" width="0.0266%" height="15" fill="rgb(247,138,52)" fg:x="2219" fg:w="31"/><text x="2.1543%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (15 samples, 0.01%)</title><rect x="1.9429%" y="885" width="0.0129%" height="15" fill="rgb(213,79,30)" fg:x="2264" fg:w="15"/><text x="2.1929%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="1.9558%" y="885" width="0.0137%" height="15" fill="rgb(246,177,23)" fg:x="2279" fg:w="16"/><text x="2.2058%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_source_reply::{{closure}}&gt;&gt; (15 samples, 0.01%)</title><rect x="1.9695%" y="885" width="0.0129%" height="15" fill="rgb(230,62,27)" fg:x="2295" fg:w="15"/><text x="2.2195%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="1.9824%" y="885" width="0.0137%" height="15" fill="rgb(216,154,8)" fg:x="2310" fg:w="16"/><text x="2.2324%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="1.9961%" y="885" width="0.0197%" height="15" fill="rgb(244,35,45)" fg:x="2326" fg:w="23"/><text x="2.2461%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="2.0158%" y="885" width="0.0197%" height="15" fill="rgb(251,115,12)" fg:x="2349" fg:w="23"/><text x="2.2658%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (16 samples, 0.01%)</title><rect x="2.0218%" y="869" width="0.0137%" height="15" fill="rgb(240,54,50)" fg:x="2356" fg:w="16"/><text x="2.2718%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (26 samples, 0.02%)</title><rect x="2.0356%" y="885" width="0.0223%" height="15" fill="rgb(233,84,52)" fg:x="2372" fg:w="26"/><text x="2.2856%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (114 samples, 0.10%)</title><rect x="2.0639%" y="885" width="0.0978%" height="15" fill="rgb(207,117,47)" fg:x="2405" fg:w="114"/><text x="2.3139%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (20 samples, 0.02%)</title><rect x="2.1772%" y="869" width="0.0172%" height="15" fill="rgb(249,43,39)" fg:x="2537" fg:w="20"/><text x="2.4272%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20 samples, 0.02%)</title><rect x="2.1772%" y="853" width="0.0172%" height="15" fill="rgb(209,38,44)" fg:x="2537" fg:w="20"/><text x="2.4272%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.02%)</title><rect x="2.1772%" y="837" width="0.0172%" height="15" fill="rgb(236,212,23)" fg:x="2537" fg:w="20"/><text x="2.4272%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="2.1772%" y="821" width="0.0172%" height="15" fill="rgb(242,79,21)" fg:x="2537" fg:w="20"/><text x="2.4272%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="2.1772%" y="805" width="0.0172%" height="15" fill="rgb(211,96,35)" fg:x="2537" fg:w="20"/><text x="2.4272%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="2.1772%" y="789" width="0.0172%" height="15" fill="rgb(253,215,40)" fg:x="2537" fg:w="20"/><text x="2.4272%" y="799.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="2.1772%" y="773" width="0.0172%" height="15" fill="rgb(211,81,21)" fg:x="2537" fg:w="20"/><text x="2.4272%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="2.1772%" y="757" width="0.0172%" height="15" fill="rgb(208,190,38)" fg:x="2537" fg:w="20"/><text x="2.4272%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (42 samples, 0.04%)</title><rect x="2.1660%" y="885" width="0.0360%" height="15" fill="rgb(235,213,38)" fg:x="2524" fg:w="42"/><text x="2.4160%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (24 samples, 0.02%)</title><rect x="2.2020%" y="885" width="0.0206%" height="15" fill="rgb(237,122,38)" fg:x="2566" fg:w="24"/><text x="2.4520%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (27 samples, 0.02%)</title><rect x="2.5084%" y="869" width="0.0232%" height="15" fill="rgb(244,218,35)" fg:x="2923" fg:w="27"/><text x="2.7584%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (27 samples, 0.02%)</title><rect x="2.5084%" y="853" width="0.0232%" height="15" fill="rgb(240,68,47)" fg:x="2923" fg:w="27"/><text x="2.7584%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (393 samples, 0.34%)</title><rect x="2.2226%" y="885" width="0.3373%" height="15" fill="rgb(210,16,53)" fg:x="2590" fg:w="393"/><text x="2.4726%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (33 samples, 0.03%)</title><rect x="2.5316%" y="869" width="0.0283%" height="15" fill="rgb(235,124,12)" fg:x="2950" fg:w="33"/><text x="2.7816%" y="879.50"></text></g><g><title>event_listener::Event::notify (106 samples, 0.09%)</title><rect x="2.5659%" y="885" width="0.0910%" height="15" fill="rgb(224,169,11)" fg:x="2990" fg:w="106"/><text x="2.8159%" y="895.50"></text></g><g><title>event_listener::full_fence (49 samples, 0.04%)</title><rect x="2.6148%" y="869" width="0.0420%" height="15" fill="rgb(250,166,2)" fg:x="3047" fg:w="49"/><text x="2.8648%" y="879.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (27 samples, 0.02%)</title><rect x="2.6603%" y="885" width="0.0232%" height="15" fill="rgb(242,216,29)" fg:x="3100" fg:w="27"/><text x="2.9103%" y="895.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::insert_nocheck (141 samples, 0.12%)</title><rect x="2.6835%" y="885" width="0.1210%" height="15" fill="rgb(230,116,27)" fg:x="3127" fg:w="141"/><text x="2.9335%" y="895.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (27 samples, 0.02%)</title><rect x="2.8045%" y="885" width="0.0232%" height="15" fill="rgb(228,99,48)" fg:x="3268" fg:w="27"/><text x="3.0545%" y="895.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (12 samples, 0.01%)</title><rect x="2.8173%" y="869" width="0.0103%" height="15" fill="rgb(253,11,6)" fg:x="3283" fg:w="12"/><text x="3.0673%" y="879.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (12 samples, 0.01%)</title><rect x="2.8173%" y="853" width="0.0103%" height="15" fill="rgb(247,143,39)" fg:x="3283" fg:w="12"/><text x="3.0673%" y="863.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (12 samples, 0.01%)</title><rect x="2.8173%" y="837" width="0.0103%" height="15" fill="rgb(236,97,10)" fg:x="3283" fg:w="12"/><text x="3.0673%" y="847.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::search (12 samples, 0.01%)</title><rect x="2.8173%" y="821" width="0.0103%" height="15" fill="rgb(233,208,19)" fg:x="3283" fg:w="12"/><text x="3.0673%" y="831.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (12 samples, 0.01%)</title><rect x="2.8173%" y="805" width="0.0103%" height="15" fill="rgb(216,164,2)" fg:x="3283" fg:w="12"/><text x="3.0673%" y="815.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (12 samples, 0.01%)</title><rect x="2.8173%" y="789" width="0.0103%" height="15" fill="rgb(220,129,5)" fg:x="3283" fg:w="12"/><text x="3.0673%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.01%)</title><rect x="2.8173%" y="773" width="0.0103%" height="15" fill="rgb(242,17,10)" fg:x="3283" fg:w="12"/><text x="3.0673%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (12 samples, 0.01%)</title><rect x="2.8173%" y="757" width="0.0103%" height="15" fill="rgb(242,107,0)" fg:x="3283" fg:w="12"/><text x="3.0673%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.01%)</title><rect x="2.8173%" y="741" width="0.0103%" height="15" fill="rgb(251,28,31)" fg:x="3283" fg:w="12"/><text x="3.0673%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (12 samples, 0.01%)</title><rect x="2.8173%" y="725" width="0.0103%" height="15" fill="rgb(233,223,10)" fg:x="3283" fg:w="12"/><text x="3.0673%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (12 samples, 0.01%)</title><rect x="2.8173%" y="709" width="0.0103%" height="15" fill="rgb(215,21,27)" fg:x="3283" fg:w="12"/><text x="3.0673%" y="719.50"></text></g><g><title>parking::Unparker::unpark (15 samples, 0.01%)</title><rect x="2.8371%" y="885" width="0.0129%" height="15" fill="rgb(232,23,21)" fg:x="3306" fg:w="15"/><text x="3.0871%" y="895.50"></text></g><g><title>simd_json::Deserializer::from_slice_with_buffers (47 samples, 0.04%)</title><rect x="2.8568%" y="885" width="0.0403%" height="15" fill="rgb(244,5,23)" fg:x="3329" fg:w="47"/><text x="3.1068%" y="895.50"></text></g><g><title>simd_json::Deserializer::find_structural_bits (25 samples, 0.02%)</title><rect x="2.8757%" y="869" width="0.0215%" height="15" fill="rgb(226,81,46)" fg:x="3351" fg:w="25"/><text x="3.1257%" y="879.50"></text></g><g><title>simd_json::Stage1Parse::find_quote_mask_and_bits (14 samples, 0.01%)</title><rect x="2.8851%" y="853" width="0.0120%" height="15" fill="rgb(247,70,30)" fg:x="3362" fg:w="14"/><text x="3.1351%" y="863.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInput as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::compute_quote_mask (14 samples, 0.01%)</title><rect x="2.8851%" y="837" width="0.0120%" height="15" fill="rgb(212,68,19)" fg:x="3362" fg:w="14"/><text x="3.1351%" y="847.50"></text></g><g><title>sn_rust_alloc (95 samples, 0.08%)</title><rect x="2.9014%" y="885" width="0.0815%" height="15" fill="rgb(240,187,13)" fg:x="3381" fg:w="95"/><text x="3.1514%" y="895.50"></text></g><g><title>sn_rust_dealloc (42 samples, 0.04%)</title><rect x="2.9830%" y="885" width="0.0360%" height="15" fill="rgb(223,113,26)" fg:x="3476" fg:w="42"/><text x="3.2330%" y="895.50"></text></g><g><title>sn_rust_realloc (14 samples, 0.01%)</title><rect x="3.0190%" y="885" width="0.0120%" height="15" fill="rgb(206,192,2)" fg:x="3518" fg:w="14"/><text x="3.2690%" y="895.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (35 samples, 0.03%)</title><rect x="3.0310%" y="885" width="0.0300%" height="15" fill="rgb(241,108,4)" fg:x="3532" fg:w="35"/><text x="3.2810%" y="895.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (29 samples, 0.02%)</title><rect x="3.0611%" y="885" width="0.0249%" height="15" fill="rgb(247,173,49)" fg:x="3567" fg:w="29"/><text x="3.3111%" y="895.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (41 samples, 0.04%)</title><rect x="3.1040%" y="885" width="0.0352%" height="15" fill="rgb(224,114,35)" fg:x="3617" fg:w="41"/><text x="3.3540%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (48 samples, 0.04%)</title><rect x="3.1392%" y="885" width="0.0412%" height="15" fill="rgb(245,159,27)" fg:x="3658" fg:w="48"/><text x="3.3892%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.01%)</title><rect x="3.1675%" y="869" width="0.0129%" height="15" fill="rgb(245,172,44)" fg:x="3691" fg:w="15"/><text x="3.4175%" y="879.50"></text></g><g><title>syscall (13 samples, 0.01%)</title><rect x="3.1804%" y="885" width="0.0112%" height="15" fill="rgb(236,23,11)" fg:x="3706" fg:w="13"/><text x="3.4304%" y="895.50"></text></g><g><title>tremor_common::time::nanotime (21 samples, 0.02%)</title><rect x="3.1915%" y="885" width="0.0180%" height="15" fill="rgb(205,117,38)" fg:x="3719" fg:w="21"/><text x="3.4415%" y="895.50"></text></g><g><title>std::time::SystemTime::now (13 samples, 0.01%)</title><rect x="3.1984%" y="869" width="0.0112%" height="15" fill="rgb(237,72,25)" fg:x="3727" fg:w="13"/><text x="3.4484%" y="879.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (13 samples, 0.01%)</title><rect x="3.1984%" y="853" width="0.0112%" height="15" fill="rgb(244,70,9)" fg:x="3727" fg:w="13"/><text x="3.4484%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (13 samples, 0.01%)</title><rect x="3.1984%" y="837" width="0.0112%" height="15" fill="rgb(217,125,39)" fg:x="3727" fg:w="13"/><text x="3.4484%" y="847.50"></text></g><g><title>tremor_pipeline::executable_graph::NodeMetrics::inc_input (22 samples, 0.02%)</title><rect x="3.2095%" y="885" width="0.0189%" height="15" fill="rgb(235,36,10)" fg:x="3740" fg:w="22"/><text x="3.4595%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (18 samples, 0.02%)</title><rect x="3.2413%" y="885" width="0.0154%" height="15" fill="rgb(251,123,47)" fg:x="3777" fg:w="18"/><text x="3.4913%" y="895.50"></text></g><g><title>tremor_script::ast::Script::run (53 samples, 0.05%)</title><rect x="3.2765%" y="885" width="0.0455%" height="15" fill="rgb(221,13,13)" fg:x="3818" fg:w="53"/><text x="3.5265%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign (14 samples, 0.01%)</title><rect x="3.3219%" y="885" width="0.0120%" height="15" fill="rgb(238,131,9)" fg:x="3871" fg:w="14"/><text x="3.5719%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign_nested (59 samples, 0.05%)</title><rect x="3.3340%" y="885" width="0.0506%" height="15" fill="rgb(211,50,8)" fg:x="3885" fg:w="59"/><text x="3.5840%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::execute_effectors (61 samples, 0.05%)</title><rect x="3.3846%" y="885" width="0.0523%" height="15" fill="rgb(245,182,24)" fg:x="3944" fg:w="61"/><text x="3.6346%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::if_expr (13 samples, 0.01%)</title><rect x="3.4369%" y="885" width="0.0112%" height="15" fill="rgb(242,14,37)" fg:x="4005" fg:w="13"/><text x="3.6869%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::match_expr (173 samples, 0.15%)</title><rect x="3.4481%" y="885" width="0.1485%" height="15" fill="rgb(246,228,12)" fg:x="4018" fg:w="173"/><text x="3.6981%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (148 samples, 0.13%)</title><rect x="3.5966%" y="885" width="0.1270%" height="15" fill="rgb(213,55,15)" fg:x="4191" fg:w="148"/><text x="3.8466%" y="895.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::invoke2 (14 samples, 0.01%)</title><rect x="3.7236%" y="885" width="0.0120%" height="15" fill="rgb(209,9,3)" fg:x="4339" fg:w="14"/><text x="3.9736%" y="895.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (244 samples, 0.21%)</title><rect x="3.7356%" y="885" width="0.2094%" height="15" fill="rgb(230,59,30)" fg:x="4353" fg:w="244"/><text x="3.9856%" y="895.50"></text></g><g><title>tremor_script::interpreter::resolve (44 samples, 0.04%)</title><rect x="3.9072%" y="869" width="0.0378%" height="15" fill="rgb(209,121,21)" fg:x="4553" fg:w="44"/><text x="4.1572%" y="879.50"></text></g><g><title>tremor_script::interpreter::resolve_value (63 samples, 0.05%)</title><rect x="3.9450%" y="885" width="0.0541%" height="15" fill="rgb(220,109,13)" fg:x="4597" fg:w="63"/><text x="4.1950%" y="895.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup (18 samples, 0.02%)</title><rect x="3.9836%" y="869" width="0.0154%" height="15" fill="rgb(232,18,1)" fg:x="4642" fg:w="18"/><text x="4.2336%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (18 samples, 0.02%)</title><rect x="3.9836%" y="853" width="0.0154%" height="15" fill="rgb(215,41,42)" fg:x="4642" fg:w="18"/><text x="4.2336%" y="863.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup::{{closure}} (18 samples, 0.02%)</title><rect x="3.9836%" y="837" width="0.0154%" height="15" fill="rgb(224,123,36)" fg:x="4642" fg:w="18"/><text x="4.2336%" y="847.50"></text></g><g><title>tremor_value::known_key::KnownKey::map_lookup (18 samples, 0.02%)</title><rect x="3.9836%" y="821" width="0.0154%" height="15" fill="rgb(240,125,3)" fg:x="4642" fg:w="18"/><text x="4.2336%" y="831.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (18 samples, 0.02%)</title><rect x="3.9836%" y="805" width="0.0154%" height="15" fill="rgb(205,98,50)" fg:x="4642" fg:w="18"/><text x="4.2336%" y="815.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (18 samples, 0.02%)</title><rect x="3.9836%" y="789" width="0.0154%" height="15" fill="rgb(205,185,37)" fg:x="4642" fg:w="18"/><text x="4.2336%" y="799.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_hash (18 samples, 0.02%)</title><rect x="3.9836%" y="773" width="0.0154%" height="15" fill="rgb(238,207,15)" fg:x="4642" fg:w="18"/><text x="4.2336%" y="783.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::search (18 samples, 0.02%)</title><rect x="3.9836%" y="757" width="0.0154%" height="15" fill="rgb(213,199,42)" fg:x="4642" fg:w="18"/><text x="4.2336%" y="767.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (18 samples, 0.02%)</title><rect x="3.9836%" y="741" width="0.0154%" height="15" fill="rgb(235,201,11)" fg:x="4642" fg:w="18"/><text x="4.2336%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (18 samples, 0.02%)</title><rect x="3.9836%" y="725" width="0.0154%" height="15" fill="rgb(207,46,11)" fg:x="4642" fg:w="18"/><text x="4.2336%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (18 samples, 0.02%)</title><rect x="3.9836%" y="709" width="0.0154%" height="15" fill="rgb(241,35,35)" fg:x="4642" fg:w="18"/><text x="4.2336%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (18 samples, 0.02%)</title><rect x="3.9836%" y="693" width="0.0154%" height="15" fill="rgb(243,32,47)" fg:x="4642" fg:w="18"/><text x="4.2336%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (18 samples, 0.02%)</title><rect x="3.9836%" y="677" width="0.0154%" height="15" fill="rgb(247,202,23)" fg:x="4642" fg:w="18"/><text x="4.2336%" y="687.50"></text></g><g><title>tremor_script::interpreter::test_guard (39 samples, 0.03%)</title><rect x="3.9990%" y="885" width="0.0335%" height="15" fill="rgb(219,102,11)" fg:x="4660" fg:w="39"/><text x="4.2490%" y="895.50"></text></g><g><title>tremor_script::interpreter::test_predicate_expr (175 samples, 0.15%)</title><rect x="4.0325%" y="885" width="0.1502%" height="15" fill="rgb(243,110,44)" fg:x="4699" fg:w="175"/><text x="4.2825%" y="895.50"></text></g><g><title>tremor_script::interpreter::val_eq (69 samples, 0.06%)</title><rect x="4.1827%" y="885" width="0.0592%" height="15" fill="rgb(222,74,54)" fg:x="4874" fg:w="69"/><text x="4.4327%" y="895.50"></text></g><g><title>tremor_script::srs::EventPayload::rent_mut (20 samples, 0.02%)</title><rect x="4.2419%" y="885" width="0.0172%" height="15" fill="rgb(216,99,12)" fg:x="4943" fg:w="20"/><text x="4.4919%" y="895.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (18 samples, 0.02%)</title><rect x="4.2591%" y="885" width="0.0154%" height="15" fill="rgb(226,22,26)" fg:x="4963" fg:w="18"/><text x="4.5091%" y="895.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse (295 samples, 0.25%)</title><rect x="4.2788%" y="885" width="0.2532%" height="15" fill="rgb(217,163,10)" fg:x="4986" fg:w="295"/><text x="4.5288%" y="895.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse_map (50 samples, 0.04%)</title><rect x="4.4890%" y="869" width="0.0429%" height="15" fill="rgb(213,25,53)" fg:x="5231" fg:w="50"/><text x="4.7390%" y="879.50"></text></g><g><title>value_trait::generator::BaseGenerator::write (87 samples, 0.07%)</title><rect x="4.8684%" y="837" width="0.0747%" height="15" fill="rgb(252,105,26)" fg:x="5673" fg:w="87"/><text x="5.1184%" y="847.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (87 samples, 0.07%)</title><rect x="4.8684%" y="821" width="0.0747%" height="15" fill="rgb(220,39,43)" fg:x="5673" fg:w="87"/><text x="5.1184%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (87 samples, 0.07%)</title><rect x="4.8684%" y="805" width="0.0747%" height="15" fill="rgb(229,68,48)" fg:x="5673" fg:w="87"/><text x="5.1184%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (87 samples, 0.07%)</title><rect x="4.8684%" y="789" width="0.0747%" height="15" fill="rgb(252,8,32)" fg:x="5673" fg:w="87"/><text x="5.1184%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (87 samples, 0.07%)</title><rect x="4.8684%" y="773" width="0.0747%" height="15" fill="rgb(223,20,43)" fg:x="5673" fg:w="87"/><text x="5.1184%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (87 samples, 0.07%)</title><rect x="4.8684%" y="757" width="0.0747%" height="15" fill="rgb(229,81,49)" fg:x="5673" fg:w="87"/><text x="5.1184%" y="767.50"></text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (538 samples, 0.46%)</title><rect x="4.5388%" y="885" width="0.4617%" height="15" fill="rgb(236,28,36)" fg:x="5289" fg:w="538"/><text x="4.7888%" y="895.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_string (154 samples, 0.13%)</title><rect x="4.8684%" y="869" width="0.1322%" height="15" fill="rgb(249,185,26)" fg:x="5673" fg:w="154"/><text x="5.1184%" y="879.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_string_content (154 samples, 0.13%)</title><rect x="4.8684%" y="853" width="0.1322%" height="15" fill="rgb(249,174,33)" fg:x="5673" fg:w="154"/><text x="5.1184%" y="863.50"></text></g><g><title>value_trait::generator::write_str_simd (67 samples, 0.06%)</title><rect x="4.9430%" y="837" width="0.0575%" height="15" fill="rgb(233,201,37)" fg:x="5760" fg:w="67"/><text x="5.1930%" y="847.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (67 samples, 0.06%)</title><rect x="4.9430%" y="821" width="0.0575%" height="15" fill="rgb(221,78,26)" fg:x="5760" fg:w="67"/><text x="5.1930%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (67 samples, 0.06%)</title><rect x="4.9430%" y="805" width="0.0575%" height="15" fill="rgb(250,127,30)" fg:x="5760" fg:w="67"/><text x="5.1930%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (67 samples, 0.06%)</title><rect x="4.9430%" y="789" width="0.0575%" height="15" fill="rgb(230,49,44)" fg:x="5760" fg:w="67"/><text x="5.1930%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (67 samples, 0.06%)</title><rect x="4.9430%" y="773" width="0.0575%" height="15" fill="rgb(229,67,23)" fg:x="5760" fg:w="67"/><text x="5.1930%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (67 samples, 0.06%)</title><rect x="4.9430%" y="757" width="0.0575%" height="15" fill="rgb(249,83,47)" fg:x="5760" fg:w="67"/><text x="5.1930%" y="767.50"></text></g><g><title>value_trait::ValueAccess::get (106 samples, 0.09%)</title><rect x="5.0091%" y="885" width="0.0910%" height="15" fill="rgb(215,43,3)" fg:x="5837" fg:w="106"/><text x="5.2591%" y="895.50"></text></g><g><title>[anon] (5,820 samples, 4.99%)</title><rect x="0.1227%" y="901" width="4.9945%" height="15" fill="rgb(238,154,13)" fg:x="143" fg:w="5820"/><text x="0.3727%" y="911.50">[anon]</text></g><g><title>window::TimeWindow::add_t (12 samples, 0.01%)</title><rect x="5.1069%" y="885" width="0.0103%" height="15" fill="rgb(219,56,2)" fg:x="5951" fg:w="12"/><text x="5.3569%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="5.1267%" y="885" width="0.0189%" height="15" fill="rgb(233,0,4)" fg:x="5974" fg:w="22"/><text x="5.3767%" y="895.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (17 samples, 0.01%)</title><rect x="5.1310%" y="869" width="0.0146%" height="15" fill="rgb(235,30,7)" fg:x="5979" fg:w="17"/><text x="5.3810%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="5.1455%" y="885" width="0.0120%" height="15" fill="rgb(250,79,13)" fg:x="5996" fg:w="14"/><text x="5.3955%" y="895.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (28 samples, 0.02%)</title><rect x="5.1593%" y="885" width="0.0240%" height="15" fill="rgb(211,146,34)" fg:x="6012" fg:w="28"/><text x="5.4093%" y="895.50"></text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (14 samples, 0.01%)</title><rect x="5.2048%" y="885" width="0.0120%" height="15" fill="rgb(228,22,38)" fg:x="6065" fg:w="14"/><text x="5.4548%" y="895.50"></text></g><g><title>[libc-2.31.so] (127 samples, 0.11%)</title><rect x="5.1172%" y="901" width="0.1090%" height="15" fill="rgb(235,168,5)" fg:x="5963" fg:w="127"/><text x="5.3672%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="5.2262%" y="885" width="0.0120%" height="15" fill="rgb(221,155,16)" fg:x="6090" fg:w="14"/><text x="5.4762%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[tremor_value::value::Value]&gt; (27 samples, 0.02%)</title><rect x="5.2520%" y="885" width="0.0232%" height="15" fill="rgb(215,215,53)" fg:x="6120" fg:w="27"/><text x="5.5020%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (608 samples, 0.52%)</title><rect x="5.2751%" y="885" width="0.5218%" height="15" fill="rgb(223,4,10)" fg:x="6147" fg:w="608"/><text x="5.5251%" y="895.50"></text></g><g><title>[tremor-main] (692 samples, 0.59%)</title><rect x="5.2262%" y="901" width="0.5938%" height="15" fill="rgb(234,103,6)" fg:x="6090" fg:w="692"/><text x="5.4762%" y="911.50"></text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (27 samples, 0.02%)</title><rect x="5.7969%" y="885" width="0.0232%" height="15" fill="rgb(227,97,0)" fg:x="6755" fg:w="27"/><text x="6.0469%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (57 samples, 0.05%)</title><rect x="5.8544%" y="885" width="0.0489%" height="15" fill="rgb(234,150,53)" fg:x="6822" fg:w="57"/><text x="6.1044%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.01%)</title><rect x="5.8904%" y="869" width="0.0129%" height="15" fill="rgb(228,201,54)" fg:x="6864" fg:w="15"/><text x="6.1404%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.01%)</title><rect x="5.8904%" y="853" width="0.0129%" height="15" fill="rgb(222,22,37)" fg:x="6864" fg:w="15"/><text x="6.1404%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.01%)</title><rect x="5.8904%" y="837" width="0.0129%" height="15" fill="rgb(237,53,32)" fg:x="6864" fg:w="15"/><text x="6.1404%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="5.9042%" y="885" width="0.0223%" height="15" fill="rgb(233,25,53)" fg:x="6880" fg:w="26"/><text x="6.1542%" y="895.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (17 samples, 0.01%)</title><rect x="5.9265%" y="885" width="0.0146%" height="15" fill="rgb(210,40,34)" fg:x="6906" fg:w="17"/><text x="6.1765%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (148 samples, 0.13%)</title><rect x="6.0063%" y="405" width="0.1270%" height="15" fill="rgb(241,220,44)" fg:x="6999" fg:w="148"/><text x="6.2563%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (148 samples, 0.13%)</title><rect x="6.0063%" y="389" width="0.1270%" height="15" fill="rgb(235,28,35)" fg:x="6999" fg:w="148"/><text x="6.2563%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (269 samples, 0.23%)</title><rect x="6.1333%" y="405" width="0.2308%" height="15" fill="rgb(210,56,17)" fg:x="7147" fg:w="269"/><text x="6.3833%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (268 samples, 0.23%)</title><rect x="6.1341%" y="389" width="0.2300%" height="15" fill="rgb(224,130,29)" fg:x="7148" fg:w="268"/><text x="6.3841%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (456 samples, 0.39%)</title><rect x="5.9754%" y="437" width="0.3913%" height="15" fill="rgb(235,212,8)" fg:x="6963" fg:w="456"/><text x="6.2254%" y="447.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (456 samples, 0.39%)</title><rect x="5.9754%" y="421" width="0.3913%" height="15" fill="rgb(223,33,50)" fg:x="6963" fg:w="456"/><text x="6.2254%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (15 samples, 0.01%)</title><rect x="6.3744%" y="421" width="0.0129%" height="15" fill="rgb(219,149,13)" fg:x="7428" fg:w="15"/><text x="6.6244%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (12 samples, 0.01%)</title><rect x="6.3770%" y="405" width="0.0103%" height="15" fill="rgb(250,156,29)" fg:x="7431" fg:w="12"/><text x="6.6270%" y="415.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="6.3770%" y="389" width="0.0103%" height="15" fill="rgb(216,193,19)" fg:x="7431" fg:w="12"/><text x="6.6270%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="6.3770%" y="373" width="0.0103%" height="15" fill="rgb(216,135,14)" fg:x="7431" fg:w="12"/><text x="6.6270%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (12 samples, 0.01%)</title><rect x="6.3770%" y="357" width="0.0103%" height="15" fill="rgb(241,47,5)" fg:x="7431" fg:w="12"/><text x="6.6270%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (12 samples, 0.01%)</title><rect x="6.3770%" y="341" width="0.0103%" height="15" fill="rgb(233,42,35)" fg:x="7431" fg:w="12"/><text x="6.6270%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_swap (12 samples, 0.01%)</title><rect x="6.3770%" y="325" width="0.0103%" height="15" fill="rgb(231,13,6)" fg:x="7431" fg:w="12"/><text x="6.6270%" y="335.50"></text></g><g><title>event_listener::Inner::lock (24 samples, 0.02%)</title><rect x="6.3967%" y="421" width="0.0206%" height="15" fill="rgb(207,181,40)" fg:x="7454" fg:w="24"/><text x="6.6467%" y="431.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="6.3976%" y="405" width="0.0197%" height="15" fill="rgb(254,173,49)" fg:x="7455" fg:w="23"/><text x="6.6476%" y="415.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="6.4002%" y="389" width="0.0172%" height="15" fill="rgb(221,1,38)" fg:x="7458" fg:w="20"/><text x="6.6502%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (20 samples, 0.02%)</title><rect x="6.4002%" y="373" width="0.0172%" height="15" fill="rgb(206,124,46)" fg:x="7458" fg:w="20"/><text x="6.6502%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (20 samples, 0.02%)</title><rect x="6.4002%" y="357" width="0.0172%" height="15" fill="rgb(249,21,11)" fg:x="7458" fg:w="20"/><text x="6.6502%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.02%)</title><rect x="6.4002%" y="341" width="0.0172%" height="15" fill="rgb(222,201,40)" fg:x="7458" fg:w="20"/><text x="6.6502%" y="351.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (935 samples, 0.80%)</title><rect x="5.9754%" y="453" width="0.8024%" height="15" fill="rgb(235,61,29)" fg:x="6963" fg:w="935"/><text x="6.2254%" y="463.50"></text></g><g><title>event_listener::Event::notify (479 samples, 0.41%)</title><rect x="6.3667%" y="437" width="0.4111%" height="15" fill="rgb(219,207,3)" fg:x="7419" fg:w="479"/><text x="6.6167%" y="447.50"></text></g><g><title>event_listener::full_fence (420 samples, 0.36%)</title><rect x="6.4173%" y="421" width="0.3604%" height="15" fill="rgb(222,56,46)" fg:x="7478" fg:w="420"/><text x="6.6673%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (420 samples, 0.36%)</title><rect x="6.4173%" y="405" width="0.3604%" height="15" fill="rgb(239,76,54)" fg:x="7478" fg:w="420"/><text x="6.6673%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (420 samples, 0.36%)</title><rect x="6.4173%" y="389" width="0.3604%" height="15" fill="rgb(231,124,27)" fg:x="7478" fg:w="420"/><text x="6.6673%" y="399.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,013 samples, 0.87%)</title><rect x="5.9754%" y="869" width="0.8693%" height="15" fill="rgb(249,195,6)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="879.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,013 samples, 0.87%)</title><rect x="5.9754%" y="853" width="0.8693%" height="15" fill="rgb(237,174,47)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,013 samples, 0.87%)</title><rect x="5.9754%" y="837" width="0.8693%" height="15" fill="rgb(206,201,31)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="847.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,013 samples, 0.87%)</title><rect x="5.9754%" y="821" width="0.8693%" height="15" fill="rgb(231,57,52)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="831.50"></text></g><g><title>async_task::runnable::Runnable::run (1,013 samples, 0.87%)</title><rect x="5.9754%" y="805" width="0.8693%" height="15" fill="rgb(248,177,22)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,013 samples, 0.87%)</title><rect x="5.9754%" y="789" width="0.8693%" height="15" fill="rgb(215,211,37)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="799.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,013 samples, 0.87%)</title><rect x="5.9754%" y="773" width="0.8693%" height="15" fill="rgb(241,128,51)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,013 samples, 0.87%)</title><rect x="5.9754%" y="757" width="0.8693%" height="15" fill="rgb(227,165,31)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="767.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,013 samples, 0.87%)</title><rect x="5.9754%" y="741" width="0.8693%" height="15" fill="rgb(228,167,24)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="751.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,013 samples, 0.87%)</title><rect x="5.9754%" y="725" width="0.8693%" height="15" fill="rgb(228,143,12)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="735.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,013 samples, 0.87%)</title><rect x="5.9754%" y="709" width="0.8693%" height="15" fill="rgb(249,149,8)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,013 samples, 0.87%)</title><rect x="5.9754%" y="693" width="0.8693%" height="15" fill="rgb(243,35,44)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,013 samples, 0.87%)</title><rect x="5.9754%" y="677" width="0.8693%" height="15" fill="rgb(246,89,9)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="687.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,013 samples, 0.87%)</title><rect x="5.9754%" y="661" width="0.8693%" height="15" fill="rgb(233,213,13)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="671.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,013 samples, 0.87%)</title><rect x="5.9754%" y="645" width="0.8693%" height="15" fill="rgb(233,141,41)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,013 samples, 0.87%)</title><rect x="5.9754%" y="629" width="0.8693%" height="15" fill="rgb(239,167,4)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="639.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (1,013 samples, 0.87%)</title><rect x="5.9754%" y="613" width="0.8693%" height="15" fill="rgb(209,217,16)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,013 samples, 0.87%)</title><rect x="5.9754%" y="597" width="0.8693%" height="15" fill="rgb(219,88,35)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="607.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (1,013 samples, 0.87%)</title><rect x="5.9754%" y="581" width="0.8693%" height="15" fill="rgb(220,193,23)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,013 samples, 0.87%)</title><rect x="5.9754%" y="565" width="0.8693%" height="15" fill="rgb(230,90,52)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="575.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,013 samples, 0.87%)</title><rect x="5.9754%" y="549" width="0.8693%" height="15" fill="rgb(252,106,19)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,013 samples, 0.87%)</title><rect x="5.9754%" y="533" width="0.8693%" height="15" fill="rgb(206,74,20)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (1,013 samples, 0.87%)</title><rect x="5.9754%" y="517" width="0.8693%" height="15" fill="rgb(230,138,44)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,013 samples, 0.87%)</title><rect x="5.9754%" y="501" width="0.8693%" height="15" fill="rgb(235,182,43)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="511.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (1,013 samples, 0.87%)</title><rect x="5.9754%" y="485" width="0.8693%" height="15" fill="rgb(242,16,51)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="495.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (1,013 samples, 0.87%)</title><rect x="5.9754%" y="469" width="0.8693%" height="15" fill="rgb(248,9,4)" fg:x="6963" fg:w="1013"/><text x="6.2254%" y="479.50"></text></g><g><title>event_listener::Event::notify (78 samples, 0.07%)</title><rect x="6.7778%" y="453" width="0.0669%" height="15" fill="rgb(210,31,22)" fg:x="7898" fg:w="78"/><text x="7.0278%" y="463.50"></text></g><g><title>event_listener::full_fence (72 samples, 0.06%)</title><rect x="6.7829%" y="437" width="0.0618%" height="15" fill="rgb(239,54,39)" fg:x="7904" fg:w="72"/><text x="7.0329%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (72 samples, 0.06%)</title><rect x="6.7829%" y="421" width="0.0618%" height="15" fill="rgb(230,99,41)" fg:x="7904" fg:w="72"/><text x="7.0329%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (72 samples, 0.06%)</title><rect x="6.7829%" y="405" width="0.0618%" height="15" fill="rgb(253,106,12)" fg:x="7904" fg:w="72"/><text x="7.0329%" y="415.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (95 samples, 0.08%)</title><rect x="7.2403%" y="533" width="0.0815%" height="15" fill="rgb(213,46,41)" fg:x="8437" fg:w="95"/><text x="7.4903%" y="543.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (95 samples, 0.08%)</title><rect x="7.2403%" y="517" width="0.0815%" height="15" fill="rgb(215,133,35)" fg:x="8437" fg:w="95"/><text x="7.4903%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.04%)</title><rect x="7.3218%" y="533" width="0.0446%" height="15" fill="rgb(213,28,5)" fg:x="8532" fg:w="52"/><text x="7.5718%" y="543.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.01%)</title><rect x="7.3665%" y="533" width="0.0120%" height="15" fill="rgb(215,77,49)" fg:x="8584" fg:w="14"/><text x="7.6165%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.01%)</title><rect x="7.3931%" y="485" width="0.0103%" height="15" fill="rgb(248,100,22)" fg:x="8615" fg:w="12"/><text x="7.6431%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (98 samples, 0.08%)</title><rect x="7.4034%" y="485" width="0.0841%" height="15" fill="rgb(208,67,9)" fg:x="8627" fg:w="98"/><text x="7.6534%" y="495.50"></text></g><g><title>[libc-2.31.so] (80 samples, 0.07%)</title><rect x="7.4188%" y="469" width="0.0687%" height="15" fill="rgb(219,133,21)" fg:x="8645" fg:w="80"/><text x="7.6688%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (128 samples, 0.11%)</title><rect x="7.3785%" y="533" width="0.1098%" height="15" fill="rgb(246,46,29)" fg:x="8598" fg:w="128"/><text x="7.6285%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (120 samples, 0.10%)</title><rect x="7.3853%" y="517" width="0.1030%" height="15" fill="rgb(246,185,52)" fg:x="8606" fg:w="120"/><text x="7.6353%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (120 samples, 0.10%)</title><rect x="7.3853%" y="501" width="0.1030%" height="15" fill="rgb(252,136,11)" fg:x="8606" fg:w="120"/><text x="7.6353%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (63 samples, 0.05%)</title><rect x="7.4883%" y="533" width="0.0541%" height="15" fill="rgb(219,138,53)" fg:x="8726" fg:w="63"/><text x="7.7383%" y="543.50"></text></g><g><title>&lt;value_trait::generator::WriterGenerator&lt;W,V&gt; as value_trait::generator::BaseGenerator&gt;::get_writer (72 samples, 0.06%)</title><rect x="7.5424%" y="517" width="0.0618%" height="15" fill="rgb(211,51,23)" fg:x="8789" fg:w="72"/><text x="7.7924%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (28 samples, 0.02%)</title><rect x="7.6316%" y="453" width="0.0240%" height="15" fill="rgb(247,221,28)" fg:x="8893" fg:w="28"/><text x="7.8816%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (53 samples, 0.05%)</title><rect x="7.6557%" y="453" width="0.0455%" height="15" fill="rgb(251,222,45)" fg:x="8921" fg:w="53"/><text x="7.9057%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.01%)</title><rect x="7.6866%" y="437" width="0.0146%" height="15" fill="rgb(217,162,53)" fg:x="8957" fg:w="17"/><text x="7.9366%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (17 samples, 0.01%)</title><rect x="7.6866%" y="421" width="0.0146%" height="15" fill="rgb(229,93,14)" fg:x="8957" fg:w="17"/><text x="7.9366%" y="431.50"></text></g><g><title>value_trait::generator::BaseGenerator::write (278 samples, 0.24%)</title><rect x="7.5424%" y="533" width="0.2386%" height="15" fill="rgb(209,67,49)" fg:x="8789" fg:w="278"/><text x="7.7924%" y="543.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (206 samples, 0.18%)</title><rect x="7.6042%" y="517" width="0.1768%" height="15" fill="rgb(213,87,29)" fg:x="8861" fg:w="206"/><text x="7.8542%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (206 samples, 0.18%)</title><rect x="7.6042%" y="501" width="0.1768%" height="15" fill="rgb(205,151,52)" fg:x="8861" fg:w="206"/><text x="7.8542%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (206 samples, 0.18%)</title><rect x="7.6042%" y="485" width="0.1768%" height="15" fill="rgb(253,215,39)" fg:x="8861" fg:w="206"/><text x="7.8542%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (206 samples, 0.18%)</title><rect x="7.6042%" y="469" width="0.1768%" height="15" fill="rgb(221,220,41)" fg:x="8861" fg:w="206"/><text x="7.8542%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (93 samples, 0.08%)</title><rect x="7.7012%" y="453" width="0.0798%" height="15" fill="rgb(218,133,21)" fg:x="8974" fg:w="93"/><text x="7.9512%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.02%)</title><rect x="7.7921%" y="453" width="0.0163%" height="15" fill="rgb(221,193,43)" fg:x="9080" fg:w="19"/><text x="8.0421%" y="463.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_int (34 samples, 0.03%)</title><rect x="7.7810%" y="533" width="0.0292%" height="15" fill="rgb(240,128,52)" fg:x="9067" fg:w="34"/><text x="8.0310%" y="543.50"></text></g><g><title>itoa::write (33 samples, 0.03%)</title><rect x="7.7818%" y="517" width="0.0283%" height="15" fill="rgb(253,114,12)" fg:x="9068" fg:w="33"/><text x="8.0318%" y="527.50"></text></g><g><title>itoa::Buffer::format (33 samples, 0.03%)</title><rect x="7.7818%" y="501" width="0.0283%" height="15" fill="rgb(215,223,47)" fg:x="9068" fg:w="33"/><text x="8.0318%" y="511.50"></text></g><g><title>&lt;u64 as itoa::Integer&gt;::write (33 samples, 0.03%)</title><rect x="7.7818%" y="485" width="0.0283%" height="15" fill="rgb(248,225,23)" fg:x="9068" fg:w="33"/><text x="8.0318%" y="495.50"></text></g><g><title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (33 samples, 0.03%)</title><rect x="7.7818%" y="469" width="0.0283%" height="15" fill="rgb(250,108,0)" fg:x="9068" fg:w="33"/><text x="8.0318%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (66 samples, 0.06%)</title><rect x="7.8659%" y="437" width="0.0566%" height="15" fill="rgb(228,208,7)" fg:x="9166" fg:w="66"/><text x="8.1159%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (46 samples, 0.04%)</title><rect x="7.8831%" y="421" width="0.0395%" height="15" fill="rgb(244,45,10)" fg:x="9186" fg:w="46"/><text x="8.1331%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (46 samples, 0.04%)</title><rect x="7.8831%" y="405" width="0.0395%" height="15" fill="rgb(207,125,25)" fg:x="9186" fg:w="46"/><text x="8.1331%" y="415.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_char (209 samples, 0.18%)</title><rect x="7.8101%" y="517" width="0.1794%" height="15" fill="rgb(210,195,18)" fg:x="9101" fg:w="209"/><text x="8.0601%" y="527.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (201 samples, 0.17%)</title><rect x="7.8170%" y="501" width="0.1725%" height="15" fill="rgb(249,80,12)" fg:x="9109" fg:w="201"/><text x="8.0670%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (201 samples, 0.17%)</title><rect x="7.8170%" y="485" width="0.1725%" height="15" fill="rgb(221,65,9)" fg:x="9109" fg:w="201"/><text x="8.0670%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (201 samples, 0.17%)</title><rect x="7.8170%" y="469" width="0.1725%" height="15" fill="rgb(235,49,36)" fg:x="9109" fg:w="201"/><text x="8.0670%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (201 samples, 0.17%)</title><rect x="7.8170%" y="453" width="0.1725%" height="15" fill="rgb(225,32,20)" fg:x="9109" fg:w="201"/><text x="8.0670%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (78 samples, 0.07%)</title><rect x="7.9226%" y="437" width="0.0669%" height="15" fill="rgb(215,141,46)" fg:x="9232" fg:w="78"/><text x="8.1726%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (209 samples, 0.18%)</title><rect x="8.4503%" y="501" width="0.1794%" height="15" fill="rgb(250,160,47)" fg:x="9847" fg:w="209"/><text x="8.7003%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (209 samples, 0.18%)</title><rect x="8.4503%" y="485" width="0.1794%" height="15" fill="rgb(216,222,40)" fg:x="9847" fg:w="209"/><text x="8.7003%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (94 samples, 0.08%)</title><rect x="8.6717%" y="421" width="0.0807%" height="15" fill="rgb(234,217,39)" fg:x="10105" fg:w="94"/><text x="8.9217%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (94 samples, 0.08%)</title><rect x="8.6717%" y="405" width="0.0807%" height="15" fill="rgb(207,178,40)" fg:x="10105" fg:w="94"/><text x="8.9217%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (94 samples, 0.08%)</title><rect x="8.6717%" y="389" width="0.0807%" height="15" fill="rgb(221,136,13)" fg:x="10105" fg:w="94"/><text x="8.9217%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (213 samples, 0.18%)</title><rect x="8.7524%" y="421" width="0.1828%" height="15" fill="rgb(249,199,10)" fg:x="10199" fg:w="213"/><text x="9.0024%" y="431.50"></text></g><g><title>[libc-2.31.so] (209 samples, 0.18%)</title><rect x="8.7558%" y="405" width="0.1794%" height="15" fill="rgb(249,222,13)" fg:x="10203" fg:w="209"/><text x="9.0058%" y="415.50"></text></g><g><title>value_trait::generator::BaseGenerator::write (363 samples, 0.31%)</title><rect x="8.6297%" y="501" width="0.3115%" height="15" fill="rgb(244,185,38)" fg:x="10056" fg:w="363"/><text x="8.8797%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (363 samples, 0.31%)</title><rect x="8.6297%" y="485" width="0.3115%" height="15" fill="rgb(236,202,9)" fg:x="10056" fg:w="363"/><text x="8.8797%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (363 samples, 0.31%)</title><rect x="8.6297%" y="469" width="0.3115%" height="15" fill="rgb(250,229,37)" fg:x="10056" fg:w="363"/><text x="8.8797%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (363 samples, 0.31%)</title><rect x="8.6297%" y="453" width="0.3115%" height="15" fill="rgb(206,174,23)" fg:x="10056" fg:w="363"/><text x="8.8797%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (363 samples, 0.31%)</title><rect x="8.6297%" y="437" width="0.3115%" height="15" fill="rgb(211,33,43)" fg:x="10056" fg:w="363"/><text x="8.8797%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (108 samples, 0.09%)</title><rect x="9.0176%" y="485" width="0.0927%" height="15" fill="rgb(245,58,50)" fg:x="10508" fg:w="108"/><text x="9.2676%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (22 samples, 0.02%)</title><rect x="9.1103%" y="485" width="0.0189%" height="15" fill="rgb(244,68,36)" fg:x="10616" fg:w="22"/><text x="9.3603%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (28 samples, 0.02%)</title><rect x="9.1291%" y="485" width="0.0240%" height="15" fill="rgb(232,229,15)" fg:x="10638" fg:w="28"/><text x="9.3791%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (144 samples, 0.12%)</title><rect x="9.1532%" y="485" width="0.1236%" height="15" fill="rgb(254,30,23)" fg:x="10666" fg:w="144"/><text x="9.4032%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (144 samples, 0.12%)</title><rect x="9.1532%" y="469" width="0.1236%" height="15" fill="rgb(235,160,14)" fg:x="10666" fg:w="144"/><text x="9.4032%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (248 samples, 0.21%)</title><rect x="9.3068%" y="421" width="0.2128%" height="15" fill="rgb(212,155,44)" fg:x="10845" fg:w="248"/><text x="9.5568%" y="431.50"></text></g><g><title>[libc-2.31.so] (192 samples, 0.16%)</title><rect x="9.3548%" y="405" width="0.1648%" height="15" fill="rgb(226,2,50)" fg:x="10901" fg:w="192"/><text x="9.6048%" y="415.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (3,120 samples, 2.68%)</title><rect x="6.8447%" y="741" width="2.6775%" height="15" fill="rgb(234,177,6)" fg:x="7976" fg:w="3120"/><text x="7.0947%" y="751.50">tr..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,120 samples, 2.68%)</title><rect x="6.8447%" y="725" width="2.6775%" height="15" fill="rgb(217,24,9)" fg:x="7976" fg:w="3120"/><text x="7.0947%" y="735.50">&lt;c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,120 samples, 2.68%)</title><rect x="6.8447%" y="709" width="2.6775%" height="15" fill="rgb(220,13,46)" fg:x="7976" fg:w="3120"/><text x="7.0947%" y="719.50">&lt;c..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (3,120 samples, 2.68%)</title><rect x="6.8447%" y="693" width="2.6775%" height="15" fill="rgb(239,221,27)" fg:x="7976" fg:w="3120"/><text x="7.0947%" y="703.50">&lt;t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (3,120 samples, 2.68%)</title><rect x="6.8447%" y="677" width="2.6775%" height="15" fill="rgb(222,198,25)" fg:x="7976" fg:w="3120"/><text x="7.0947%" y="687.50">tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (3,120 samples, 2.68%)</title><rect x="6.8447%" y="661" width="2.6775%" height="15" fill="rgb(211,99,13)" fg:x="7976" fg:w="3120"/><text x="7.0947%" y="671.50">tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (3,120 samples, 2.68%)</title><rect x="6.8447%" y="645" width="2.6775%" height="15" fill="rgb(232,111,31)" fg:x="7976" fg:w="3120"/><text x="7.0947%" y="655.50">tr..</text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode (3,120 samples, 2.68%)</title><rect x="6.8447%" y="629" width="2.6775%" height="15" fill="rgb(245,82,37)" fg:x="7976" fg:w="3120"/><text x="7.0947%" y="639.50">&lt;t..</text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode_into (3,120 samples, 2.68%)</title><rect x="6.8447%" y="613" width="2.6775%" height="15" fill="rgb(227,149,46)" fg:x="7976" fg:w="3120"/><text x="7.0947%" y="623.50">&lt;t..</text></g><g><title>tremor_value::value::serialize::&lt;impl value_trait::Writable for tremor_value::value::Value&gt;::write (3,120 samples, 2.68%)</title><rect x="6.8447%" y="597" width="2.6775%" height="15" fill="rgb(218,36,50)" fg:x="7976" fg:w="3120"/><text x="7.0947%" y="607.50">tr..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (3,120 samples, 2.68%)</title><rect x="6.8447%" y="581" width="2.6775%" height="15" fill="rgb(226,80,48)" fg:x="7976" fg:w="3120"/><text x="7.0947%" y="591.50">tr..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_object (3,120 samples, 2.68%)</title><rect x="6.8447%" y="565" width="2.6775%" height="15" fill="rgb(238,224,15)" fg:x="7976" fg:w="3120"/><text x="7.0947%" y="575.50">tr..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (3,120 samples, 2.68%)</title><rect x="6.8447%" y="549" width="2.6775%" height="15" fill="rgb(241,136,10)" fg:x="7976" fg:w="3120"/><text x="7.0947%" y="559.50">tr..</text></g><g><title>value_trait::generator::BaseGenerator::write_string (1,995 samples, 1.71%)</title><rect x="7.8101%" y="533" width="1.7120%" height="15" fill="rgb(208,32,45)" fg:x="9101" fg:w="1995"/><text x="8.0601%" y="543.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_string_content (1,786 samples, 1.53%)</title><rect x="7.9895%" y="517" width="1.5327%" height="15" fill="rgb(207,135,9)" fg:x="9310" fg:w="1786"/><text x="8.2395%" y="527.50"></text></g><g><title>value_trait::generator::write_str_simd (677 samples, 0.58%)</title><rect x="8.9412%" y="501" width="0.5810%" height="15" fill="rgb(206,86,44)" fg:x="10419" fg:w="677"/><text x="9.1912%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (283 samples, 0.24%)</title><rect x="9.2793%" y="485" width="0.2429%" height="15" fill="rgb(245,177,15)" fg:x="10813" fg:w="283"/><text x="9.5293%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (283 samples, 0.24%)</title><rect x="9.2793%" y="469" width="0.2429%" height="15" fill="rgb(206,64,50)" fg:x="10813" fg:w="283"/><text x="9.5293%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (283 samples, 0.24%)</title><rect x="9.2793%" y="453" width="0.2429%" height="15" fill="rgb(234,36,40)" fg:x="10813" fg:w="283"/><text x="9.5293%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (283 samples, 0.24%)</title><rect x="9.2793%" y="437" width="0.2429%" height="15" fill="rgb(213,64,8)" fg:x="10813" fg:w="283"/><text x="9.5293%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (77 samples, 0.07%)</title><rect x="9.7753%" y="613" width="0.0661%" height="15" fill="rgb(210,75,36)" fg:x="11391" fg:w="77"/><text x="10.0253%" y="623.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (35 samples, 0.03%)</title><rect x="10.2885%" y="421" width="0.0300%" height="15" fill="rgb(229,88,21)" fg:x="11989" fg:w="35"/><text x="10.5385%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (359 samples, 0.31%)</title><rect x="10.0113%" y="549" width="0.3081%" height="15" fill="rgb(252,204,47)" fg:x="11666" fg:w="359"/><text x="10.2613%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (103 samples, 0.09%)</title><rect x="10.2310%" y="533" width="0.0884%" height="15" fill="rgb(208,77,27)" fg:x="11922" fg:w="103"/><text x="10.4810%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (103 samples, 0.09%)</title><rect x="10.2310%" y="517" width="0.0884%" height="15" fill="rgb(221,76,26)" fg:x="11922" fg:w="103"/><text x="10.4810%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (103 samples, 0.09%)</title><rect x="10.2310%" y="501" width="0.0884%" height="15" fill="rgb(225,139,18)" fg:x="11922" fg:w="103"/><text x="10.4810%" y="511.50"></text></g><g><title>alloc::alloc::alloc (102 samples, 0.09%)</title><rect x="10.2319%" y="485" width="0.0875%" height="15" fill="rgb(230,137,11)" fg:x="11923" fg:w="102"/><text x="10.4819%" y="495.50"></text></g><g><title>__rg_alloc (102 samples, 0.09%)</title><rect x="10.2319%" y="469" width="0.0875%" height="15" fill="rgb(212,28,1)" fg:x="11923" fg:w="102"/><text x="10.4819%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (102 samples, 0.09%)</title><rect x="10.2319%" y="453" width="0.0875%" height="15" fill="rgb(248,164,17)" fg:x="11923" fg:w="102"/><text x="10.4819%" y="463.50"></text></g><g><title>sn_rust_alloc (92 samples, 0.08%)</title><rect x="10.2405%" y="437" width="0.0790%" height="15" fill="rgb(222,171,42)" fg:x="11933" fg:w="92"/><text x="10.4905%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (662 samples, 0.57%)</title><rect x="9.7590%" y="629" width="0.5681%" height="15" fill="rgb(243,84,45)" fg:x="11372" fg:w="662"/><text x="10.0090%" y="639.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (566 samples, 0.49%)</title><rect x="9.8414%" y="613" width="0.4857%" height="15" fill="rgb(252,49,23)" fg:x="11468" fg:w="566"/><text x="10.0914%" y="623.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (373 samples, 0.32%)</title><rect x="10.0070%" y="597" width="0.3201%" height="15" fill="rgb(215,19,7)" fg:x="11661" fg:w="373"/><text x="10.2570%" y="607.50"></text></g><g><title>value_trait::Builder::object (368 samples, 0.32%)</title><rect x="10.0113%" y="581" width="0.3158%" height="15" fill="rgb(238,81,41)" fg:x="11666" fg:w="368"/><text x="10.2613%" y="591.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (368 samples, 0.32%)</title><rect x="10.0113%" y="565" width="0.3158%" height="15" fill="rgb(210,199,37)" fg:x="11666" fg:w="368"/><text x="10.2613%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (21 samples, 0.02%)</title><rect x="10.3366%" y="597" width="0.0180%" height="15" fill="rgb(244,192,49)" fg:x="12045" fg:w="21"/><text x="10.5866%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (61 samples, 0.05%)</title><rect x="10.3297%" y="629" width="0.0523%" height="15" fill="rgb(226,211,11)" fg:x="12037" fg:w="61"/><text x="10.5797%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (53 samples, 0.05%)</title><rect x="10.3366%" y="613" width="0.0455%" height="15" fill="rgb(236,162,54)" fg:x="12045" fg:w="53"/><text x="10.5866%" y="623.50"></text></g><g><title>sn_rust_dealloc (32 samples, 0.03%)</title><rect x="10.3546%" y="597" width="0.0275%" height="15" fill="rgb(220,229,9)" fg:x="12066" fg:w="32"/><text x="10.6046%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (30 samples, 0.03%)</title><rect x="10.3821%" y="629" width="0.0257%" height="15" fill="rgb(250,87,22)" fg:x="12098" fg:w="30"/><text x="10.6321%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="10.3855%" y="613" width="0.0223%" height="15" fill="rgb(239,43,17)" fg:x="12102" fg:w="26"/><text x="10.6355%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (18 samples, 0.02%)</title><rect x="10.3924%" y="597" width="0.0154%" height="15" fill="rgb(231,177,25)" fg:x="12110" fg:w="18"/><text x="10.6424%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (18 samples, 0.02%)</title><rect x="10.3924%" y="581" width="0.0154%" height="15" fill="rgb(219,179,1)" fg:x="12110" fg:w="18"/><text x="10.6424%" y="591.50"></text></g><g><title>sn_rust_dealloc (20 samples, 0.02%)</title><rect x="10.4078%" y="629" width="0.0172%" height="15" fill="rgb(238,219,53)" fg:x="12128" fg:w="20"/><text x="10.6578%" y="639.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (1,063 samples, 0.91%)</title><rect x="9.5222%" y="645" width="0.9122%" height="15" fill="rgb(232,167,36)" fg:x="11096" fg:w="1063"/><text x="9.7722%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (38 samples, 0.03%)</title><rect x="10.4653%" y="629" width="0.0326%" height="15" fill="rgb(244,19,51)" fg:x="12195" fg:w="38"/><text x="10.7153%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.03%)</title><rect x="10.4653%" y="613" width="0.0326%" height="15" fill="rgb(224,6,22)" fg:x="12195" fg:w="38"/><text x="10.7153%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (38 samples, 0.03%)</title><rect x="10.4653%" y="597" width="0.0326%" height="15" fill="rgb(224,145,5)" fg:x="12195" fg:w="38"/><text x="10.7153%" y="607.50"></text></g><g><title>alloc::alloc::alloc (37 samples, 0.03%)</title><rect x="10.4662%" y="581" width="0.0318%" height="15" fill="rgb(234,130,49)" fg:x="12196" fg:w="37"/><text x="10.7162%" y="591.50"></text></g><g><title>__rg_alloc (37 samples, 0.03%)</title><rect x="10.4662%" y="565" width="0.0318%" height="15" fill="rgb(254,6,2)" fg:x="12196" fg:w="37"/><text x="10.7162%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (37 samples, 0.03%)</title><rect x="10.4662%" y="549" width="0.0318%" height="15" fill="rgb(208,96,46)" fg:x="12196" fg:w="37"/><text x="10.7162%" y="559.50"></text></g><g><title>sn_rust_alloc (37 samples, 0.03%)</title><rect x="10.4662%" y="533" width="0.0318%" height="15" fill="rgb(239,3,39)" fg:x="12196" fg:w="37"/><text x="10.7162%" y="543.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (87 samples, 0.07%)</title><rect x="10.4344%" y="645" width="0.0747%" height="15" fill="rgb(233,210,1)" fg:x="12159" fg:w="87"/><text x="10.6844%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (58 samples, 0.05%)</title><rect x="10.6961%" y="629" width="0.0498%" height="15" fill="rgb(244,137,37)" fg:x="12464" fg:w="58"/><text x="10.9461%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (33 samples, 0.03%)</title><rect x="10.7459%" y="629" width="0.0283%" height="15" fill="rgb(240,136,2)" fg:x="12522" fg:w="33"/><text x="10.9959%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33 samples, 0.03%)</title><rect x="10.7459%" y="613" width="0.0283%" height="15" fill="rgb(239,18,37)" fg:x="12522" fg:w="33"/><text x="10.9959%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 0.03%)</title><rect x="10.7459%" y="597" width="0.0283%" height="15" fill="rgb(218,185,22)" fg:x="12522" fg:w="33"/><text x="10.9959%" y="607.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.02%)</title><rect x="10.7502%" y="581" width="0.0240%" height="15" fill="rgb(225,218,4)" fg:x="12527" fg:w="28"/><text x="11.0002%" y="591.50"></text></g><g><title>__rg_alloc (28 samples, 0.02%)</title><rect x="10.7502%" y="565" width="0.0240%" height="15" fill="rgb(230,182,32)" fg:x="12527" fg:w="28"/><text x="11.0002%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (28 samples, 0.02%)</title><rect x="10.7502%" y="549" width="0.0240%" height="15" fill="rgb(242,56,43)" fg:x="12527" fg:w="28"/><text x="11.0002%" y="559.50"></text></g><g><title>sn_rust_alloc (28 samples, 0.02%)</title><rect x="10.7502%" y="533" width="0.0240%" height="15" fill="rgb(233,99,24)" fg:x="12527" fg:w="28"/><text x="11.0002%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (47 samples, 0.04%)</title><rect x="10.7742%" y="629" width="0.0403%" height="15" fill="rgb(234,209,42)" fg:x="12555" fg:w="47"/><text x="11.0242%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (42 samples, 0.04%)</title><rect x="10.7785%" y="613" width="0.0360%" height="15" fill="rgb(227,7,12)" fg:x="12560" fg:w="42"/><text x="11.0285%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42 samples, 0.04%)</title><rect x="10.7785%" y="597" width="0.0360%" height="15" fill="rgb(245,203,43)" fg:x="12560" fg:w="42"/><text x="11.0285%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42 samples, 0.04%)</title><rect x="10.7785%" y="581" width="0.0360%" height="15" fill="rgb(238,205,33)" fg:x="12560" fg:w="42"/><text x="11.0285%" y="591.50"></text></g><g><title>alloc::alloc::alloc (42 samples, 0.04%)</title><rect x="10.7785%" y="565" width="0.0360%" height="15" fill="rgb(231,56,7)" fg:x="12560" fg:w="42"/><text x="11.0285%" y="575.50"></text></g><g><title>__rg_alloc (42 samples, 0.04%)</title><rect x="10.7785%" y="549" width="0.0360%" height="15" fill="rgb(244,186,29)" fg:x="12560" fg:w="42"/><text x="11.0285%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (42 samples, 0.04%)</title><rect x="10.7785%" y="533" width="0.0360%" height="15" fill="rgb(234,111,31)" fg:x="12560" fg:w="42"/><text x="11.0285%" y="543.50"></text></g><g><title>sn_rust_alloc (38 samples, 0.03%)</title><rect x="10.7820%" y="517" width="0.0326%" height="15" fill="rgb(241,149,10)" fg:x="12564" fg:w="38"/><text x="11.0320%" y="527.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (13 samples, 0.01%)</title><rect x="10.8034%" y="501" width="0.0112%" height="15" fill="rgb(249,206,44)" fg:x="12589" fg:w="13"/><text x="11.0534%" y="511.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (13 samples, 0.01%)</title><rect x="10.8146%" y="629" width="0.0112%" height="15" fill="rgb(251,153,30)" fg:x="12602" fg:w="13"/><text x="11.0646%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (13 samples, 0.01%)</title><rect x="10.8146%" y="613" width="0.0112%" height="15" fill="rgb(239,152,38)" fg:x="12602" fg:w="13"/><text x="11.0646%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.01%)</title><rect x="10.8146%" y="597" width="0.0112%" height="15" fill="rgb(249,139,47)" fg:x="12602" fg:w="13"/><text x="11.0646%" y="607.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (93 samples, 0.08%)</title><rect x="11.0171%" y="565" width="0.0798%" height="15" fill="rgb(244,64,35)" fg:x="12838" fg:w="93"/><text x="11.2671%" y="575.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (76 samples, 0.07%)</title><rect x="11.0317%" y="549" width="0.0652%" height="15" fill="rgb(216,46,15)" fg:x="12855" fg:w="76"/><text x="11.2817%" y="559.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (69 samples, 0.06%)</title><rect x="11.0377%" y="533" width="0.0592%" height="15" fill="rgb(250,74,19)" fg:x="12862" fg:w="69"/><text x="11.2877%" y="543.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (116 samples, 0.10%)</title><rect x="11.0171%" y="581" width="0.0995%" height="15" fill="rgb(249,42,33)" fg:x="12838" fg:w="116"/><text x="11.2671%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (23 samples, 0.02%)</title><rect x="11.0969%" y="565" width="0.0197%" height="15" fill="rgb(242,149,17)" fg:x="12931" fg:w="23"/><text x="11.3469%" y="575.50"></text></g><g><title>core::ptr::write (23 samples, 0.02%)</title><rect x="11.0969%" y="549" width="0.0197%" height="15" fill="rgb(244,29,21)" fg:x="12931" fg:w="23"/><text x="11.3469%" y="559.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (156 samples, 0.13%)</title><rect x="10.9974%" y="613" width="0.1339%" height="15" fill="rgb(220,130,37)" fg:x="12815" fg:w="156"/><text x="11.2474%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (138 samples, 0.12%)</title><rect x="11.0128%" y="597" width="0.1184%" height="15" fill="rgb(211,67,2)" fg:x="12833" fg:w="138"/><text x="11.2628%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (17 samples, 0.01%)</title><rect x="11.1166%" y="581" width="0.0146%" height="15" fill="rgb(235,68,52)" fg:x="12954" fg:w="17"/><text x="11.3666%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (17 samples, 0.01%)</title><rect x="11.1166%" y="565" width="0.0146%" height="15" fill="rgb(246,142,3)" fg:x="12954" fg:w="17"/><text x="11.3666%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.01%)</title><rect x="11.1166%" y="549" width="0.0146%" height="15" fill="rgb(241,25,7)" fg:x="12954" fg:w="17"/><text x="11.3666%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.01%)</title><rect x="11.1166%" y="533" width="0.0146%" height="15" fill="rgb(242,119,39)" fg:x="12954" fg:w="17"/><text x="11.3666%" y="543.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.01%)</title><rect x="11.1166%" y="517" width="0.0146%" height="15" fill="rgb(241,98,45)" fg:x="12954" fg:w="17"/><text x="11.3666%" y="527.50"></text></g><g><title>__rg_alloc (17 samples, 0.01%)</title><rect x="11.1166%" y="501" width="0.0146%" height="15" fill="rgb(254,28,30)" fg:x="12954" fg:w="17"/><text x="11.3666%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.01%)</title><rect x="11.1166%" y="485" width="0.0146%" height="15" fill="rgb(241,142,54)" fg:x="12954" fg:w="17"/><text x="11.3666%" y="495.50"></text></g><g><title>sn_rust_alloc (17 samples, 0.01%)</title><rect x="11.1166%" y="469" width="0.0146%" height="15" fill="rgb(222,85,15)" fg:x="12954" fg:w="17"/><text x="11.3666%" y="479.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (2,006 samples, 1.72%)</title><rect x="9.5222%" y="741" width="1.7215%" height="15" fill="rgb(210,85,47)" fg:x="11096" fg:w="2006"/><text x="9.7722%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,006 samples, 1.72%)</title><rect x="9.5222%" y="725" width="1.7215%" height="15" fill="rgb(224,206,25)" fg:x="11096" fg:w="2006"/><text x="9.7722%" y="735.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (2,006 samples, 1.72%)</title><rect x="9.5222%" y="709" width="1.7215%" height="15" fill="rgb(243,201,19)" fg:x="11096" fg:w="2006"/><text x="9.7722%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,006 samples, 1.72%)</title><rect x="9.5222%" y="693" width="1.7215%" height="15" fill="rgb(236,59,4)" fg:x="11096" fg:w="2006"/><text x="9.7722%" y="703.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (2,006 samples, 1.72%)</title><rect x="9.5222%" y="677" width="1.7215%" height="15" fill="rgb(254,179,45)" fg:x="11096" fg:w="2006"/><text x="9.7722%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (2,006 samples, 1.72%)</title><rect x="9.5222%" y="661" width="1.7215%" height="15" fill="rgb(226,14,10)" fg:x="11096" fg:w="2006"/><text x="9.7722%" y="671.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (856 samples, 0.73%)</title><rect x="10.5091%" y="645" width="0.7346%" height="15" fill="rgb(244,27,41)" fg:x="12246" fg:w="856"/><text x="10.7591%" y="655.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (487 samples, 0.42%)</title><rect x="10.8257%" y="629" width="0.4179%" height="15" fill="rgb(235,35,32)" fg:x="12615" fg:w="487"/><text x="11.0757%" y="639.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (131 samples, 0.11%)</title><rect x="11.1312%" y="613" width="0.1124%" height="15" fill="rgb(218,68,31)" fg:x="12971" fg:w="131"/><text x="11.3812%" y="623.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="11.3097%" y="597" width="0.0120%" height="15" fill="rgb(207,120,37)" fg:x="13179" fg:w="14"/><text x="11.5597%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (13 samples, 0.01%)</title><rect x="11.3106%" y="581" width="0.0112%" height="15" fill="rgb(227,98,0)" fg:x="13180" fg:w="13"/><text x="11.5606%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.01%)</title><rect x="11.3106%" y="565" width="0.0112%" height="15" fill="rgb(207,7,3)" fg:x="13180" fg:w="13"/><text x="11.5606%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.01%)</title><rect x="11.3106%" y="549" width="0.0112%" height="15" fill="rgb(206,98,19)" fg:x="13180" fg:w="13"/><text x="11.5606%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (14 samples, 0.01%)</title><rect x="11.3346%" y="597" width="0.0120%" height="15" fill="rgb(217,5,26)" fg:x="13208" fg:w="14"/><text x="11.5846%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (13 samples, 0.01%)</title><rect x="11.3355%" y="581" width="0.0112%" height="15" fill="rgb(235,190,38)" fg:x="13209" fg:w="13"/><text x="11.5855%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="11.3355%" y="565" width="0.0112%" height="15" fill="rgb(247,86,24)" fg:x="13209" fg:w="13"/><text x="11.5855%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="11.3355%" y="549" width="0.0112%" height="15" fill="rgb(205,101,16)" fg:x="13209" fg:w="13"/><text x="11.5855%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (13 samples, 0.01%)</title><rect x="11.3355%" y="533" width="0.0112%" height="15" fill="rgb(246,168,33)" fg:x="13209" fg:w="13"/><text x="11.5855%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (13 samples, 0.01%)</title><rect x="11.3355%" y="517" width="0.0112%" height="15" fill="rgb(231,114,1)" fg:x="13209" fg:w="13"/><text x="11.5855%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (13 samples, 0.01%)</title><rect x="11.3355%" y="501" width="0.0112%" height="15" fill="rgb(207,184,53)" fg:x="13209" fg:w="13"/><text x="11.5855%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (21 samples, 0.02%)</title><rect x="11.3509%" y="533" width="0.0180%" height="15" fill="rgb(224,95,51)" fg:x="13227" fg:w="21"/><text x="11.6009%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (21 samples, 0.02%)</title><rect x="11.3509%" y="517" width="0.0180%" height="15" fill="rgb(212,188,45)" fg:x="13227" fg:w="21"/><text x="11.6009%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (15 samples, 0.01%)</title><rect x="11.3724%" y="517" width="0.0129%" height="15" fill="rgb(223,154,38)" fg:x="13252" fg:w="15"/><text x="11.6224%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="11.3724%" y="501" width="0.0129%" height="15" fill="rgb(251,22,52)" fg:x="13252" fg:w="15"/><text x="11.6224%" y="511.50"></text></g><g><title>core::hint::spin_loop (366 samples, 0.31%)</title><rect x="11.3878%" y="501" width="0.3141%" height="15" fill="rgb(229,209,22)" fg:x="13270" fg:w="366"/><text x="11.6378%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (366 samples, 0.31%)</title><rect x="11.3878%" y="485" width="0.3141%" height="15" fill="rgb(234,138,34)" fg:x="13270" fg:w="366"/><text x="11.6378%" y="495.50"></text></g><g><title>event_listener::Inner::lock (422 samples, 0.36%)</title><rect x="11.3483%" y="597" width="0.3621%" height="15" fill="rgb(212,95,11)" fg:x="13224" fg:w="422"/><text x="11.5983%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (422 samples, 0.36%)</title><rect x="11.3483%" y="581" width="0.3621%" height="15" fill="rgb(240,179,47)" fg:x="13224" fg:w="422"/><text x="11.5983%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (421 samples, 0.36%)</title><rect x="11.3492%" y="565" width="0.3613%" height="15" fill="rgb(240,163,11)" fg:x="13225" fg:w="421"/><text x="11.5992%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (421 samples, 0.36%)</title><rect x="11.3492%" y="549" width="0.3613%" height="15" fill="rgb(236,37,12)" fg:x="13225" fg:w="421"/><text x="11.5992%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (398 samples, 0.34%)</title><rect x="11.3689%" y="533" width="0.3415%" height="15" fill="rgb(232,164,16)" fg:x="13248" fg:w="398"/><text x="11.6189%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (379 samples, 0.33%)</title><rect x="11.3852%" y="517" width="0.3252%" height="15" fill="rgb(244,205,15)" fg:x="13267" fg:w="379"/><text x="11.6352%" y="527.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (484 samples, 0.42%)</title><rect x="11.3054%" y="613" width="0.4154%" height="15" fill="rgb(223,117,47)" fg:x="13174" fg:w="484"/><text x="11.5554%" y="623.50"></text></g><g><title>event_listener::List::remove (12 samples, 0.01%)</title><rect x="11.7105%" y="597" width="0.0103%" height="15" fill="rgb(244,107,35)" fg:x="13646" fg:w="12"/><text x="11.9605%" y="607.50"></text></g><g><title>concurrent_queue::full_fence (22 samples, 0.02%)</title><rect x="11.7860%" y="565" width="0.0189%" height="15" fill="rgb(205,140,8)" fg:x="13734" fg:w="22"/><text x="12.0360%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (20 samples, 0.02%)</title><rect x="11.7877%" y="549" width="0.0172%" height="15" fill="rgb(228,84,46)" fg:x="13736" fg:w="20"/><text x="12.0377%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (20 samples, 0.02%)</title><rect x="11.7877%" y="533" width="0.0172%" height="15" fill="rgb(254,188,9)" fg:x="13736" fg:w="20"/><text x="12.0377%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.02%)</title><rect x="11.7877%" y="517" width="0.0172%" height="15" fill="rgb(206,112,54)" fg:x="13736" fg:w="20"/><text x="12.0377%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (89 samples, 0.08%)</title><rect x="11.8066%" y="565" width="0.0764%" height="15" fill="rgb(216,84,49)" fg:x="13758" fg:w="89"/><text x="12.0566%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (89 samples, 0.08%)</title><rect x="11.8066%" y="549" width="0.0764%" height="15" fill="rgb(214,194,35)" fg:x="13758" fg:w="89"/><text x="12.0566%" y="559.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (494 samples, 0.42%)</title><rect x="11.7268%" y="597" width="0.4239%" height="15" fill="rgb(249,28,3)" fg:x="13665" fg:w="494"/><text x="11.9768%" y="607.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (484 samples, 0.42%)</title><rect x="11.7354%" y="581" width="0.4154%" height="15" fill="rgb(222,56,52)" fg:x="13675" fg:w="484"/><text x="11.9854%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (312 samples, 0.27%)</title><rect x="11.8830%" y="565" width="0.2677%" height="15" fill="rgb(245,217,50)" fg:x="13847" fg:w="312"/><text x="12.1330%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (311 samples, 0.27%)</title><rect x="11.8838%" y="549" width="0.2669%" height="15" fill="rgb(213,201,24)" fg:x="13848" fg:w="311"/><text x="12.1338%" y="559.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,033 samples, 0.89%)</title><rect x="11.7208%" y="613" width="0.8865%" height="15" fill="rgb(248,116,28)" fg:x="13658" fg:w="1033"/><text x="11.9708%" y="623.50"></text></g><g><title>event_listener::Event::notify (532 samples, 0.46%)</title><rect x="12.1507%" y="597" width="0.4565%" height="15" fill="rgb(219,72,43)" fg:x="14159" fg:w="532"/><text x="12.4007%" y="607.50"></text></g><g><title>event_listener::full_fence (529 samples, 0.45%)</title><rect x="12.1533%" y="581" width="0.4540%" height="15" fill="rgb(209,138,14)" fg:x="14162" fg:w="529"/><text x="12.4033%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (528 samples, 0.45%)</title><rect x="12.1542%" y="565" width="0.4531%" height="15" fill="rgb(222,18,33)" fg:x="14163" fg:w="528"/><text x="12.4042%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (528 samples, 0.45%)</title><rect x="12.1542%" y="549" width="0.4531%" height="15" fill="rgb(213,199,7)" fg:x="14163" fg:w="528"/><text x="12.4042%" y="559.50"></text></g><g><title>event_listener::Inner::lock (29 samples, 0.02%)</title><rect x="12.6210%" y="565" width="0.0249%" height="15" fill="rgb(250,110,10)" fg:x="14707" fg:w="29"/><text x="12.8710%" y="575.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.02%)</title><rect x="12.6227%" y="549" width="0.0232%" height="15" fill="rgb(248,123,6)" fg:x="14709" fg:w="27"/><text x="12.8727%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (27 samples, 0.02%)</title><rect x="12.6227%" y="533" width="0.0232%" height="15" fill="rgb(206,91,31)" fg:x="14709" fg:w="27"/><text x="12.8727%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (27 samples, 0.02%)</title><rect x="12.6227%" y="517" width="0.0232%" height="15" fill="rgb(211,154,13)" fg:x="14709" fg:w="27"/><text x="12.8727%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (16 samples, 0.01%)</title><rect x="12.6322%" y="501" width="0.0137%" height="15" fill="rgb(225,148,7)" fg:x="14720" fg:w="16"/><text x="12.8822%" y="511.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="12.6167%" y="581" width="0.0326%" height="15" fill="rgb(220,160,43)" fg:x="14702" fg:w="38"/><text x="12.8667%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (61 samples, 0.05%)</title><rect x="12.6116%" y="613" width="0.0523%" height="15" fill="rgb(213,52,39)" fg:x="14696" fg:w="61"/><text x="12.8616%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (56 samples, 0.05%)</title><rect x="12.6159%" y="597" width="0.0481%" height="15" fill="rgb(243,137,7)" fg:x="14701" fg:w="56"/><text x="12.8659%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (17 samples, 0.01%)</title><rect x="12.6493%" y="581" width="0.0146%" height="15" fill="rgb(230,79,13)" fg:x="14740" fg:w="17"/><text x="12.8993%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="12.6493%" y="565" width="0.0146%" height="15" fill="rgb(247,105,23)" fg:x="14740" fg:w="17"/><text x="12.8993%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.01%)</title><rect x="12.6510%" y="549" width="0.0129%" height="15" fill="rgb(223,179,41)" fg:x="14742" fg:w="15"/><text x="12.9010%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.01%)</title><rect x="12.6510%" y="533" width="0.0129%" height="15" fill="rgb(218,9,34)" fg:x="14742" fg:w="15"/><text x="12.9010%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (28 samples, 0.02%)</title><rect x="12.6691%" y="597" width="0.0240%" height="15" fill="rgb(222,106,8)" fg:x="14763" fg:w="28"/><text x="12.9191%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (27 samples, 0.02%)</title><rect x="12.6699%" y="581" width="0.0232%" height="15" fill="rgb(211,220,0)" fg:x="14764" fg:w="27"/><text x="12.9199%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_add (27 samples, 0.02%)</title><rect x="12.6699%" y="565" width="0.0232%" height="15" fill="rgb(229,52,16)" fg:x="14764" fg:w="27"/><text x="12.9199%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (16 samples, 0.01%)</title><rect x="12.6931%" y="597" width="0.0137%" height="15" fill="rgb(212,155,18)" fg:x="14791" fg:w="16"/><text x="12.9431%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (15 samples, 0.01%)</title><rect x="12.6939%" y="581" width="0.0129%" height="15" fill="rgb(242,21,14)" fg:x="14792" fg:w="15"/><text x="12.9439%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="12.6939%" y="565" width="0.0129%" height="15" fill="rgb(222,19,48)" fg:x="14792" fg:w="15"/><text x="12.9439%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="12.6939%" y="549" width="0.0129%" height="15" fill="rgb(232,45,27)" fg:x="14792" fg:w="15"/><text x="12.9439%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (15 samples, 0.01%)</title><rect x="12.6939%" y="533" width="0.0129%" height="15" fill="rgb(249,103,42)" fg:x="14792" fg:w="15"/><text x="12.9439%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (15 samples, 0.01%)</title><rect x="12.6939%" y="517" width="0.0129%" height="15" fill="rgb(246,81,33)" fg:x="14792" fg:w="15"/><text x="12.9439%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.01%)</title><rect x="12.6939%" y="501" width="0.0129%" height="15" fill="rgb(252,33,42)" fg:x="14792" fg:w="15"/><text x="12.9439%" y="511.50"></text></g><g><title>event_listener::Inner::lock (20 samples, 0.02%)</title><rect x="12.7068%" y="597" width="0.0172%" height="15" fill="rgb(209,212,41)" fg:x="14807" fg:w="20"/><text x="12.9568%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="12.7068%" y="581" width="0.0172%" height="15" fill="rgb(207,154,6)" fg:x="14807" fg:w="20"/><text x="12.9568%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (16 samples, 0.01%)</title><rect x="12.7102%" y="565" width="0.0137%" height="15" fill="rgb(223,64,47)" fg:x="14811" fg:w="16"/><text x="12.9602%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (16 samples, 0.01%)</title><rect x="12.7102%" y="549" width="0.0137%" height="15" fill="rgb(211,161,38)" fg:x="14811" fg:w="16"/><text x="12.9602%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (16 samples, 0.01%)</title><rect x="12.7102%" y="533" width="0.0137%" height="15" fill="rgb(219,138,40)" fg:x="14811" fg:w="16"/><text x="12.9602%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.01%)</title><rect x="12.7102%" y="517" width="0.0137%" height="15" fill="rgb(241,228,46)" fg:x="14811" fg:w="16"/><text x="12.9602%" y="527.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,690 samples, 1.45%)</title><rect x="11.2891%" y="629" width="1.4503%" height="15" fill="rgb(223,209,38)" fg:x="13155" fg:w="1690"/><text x="11.5391%" y="639.50"></text></g><g><title>event_listener::Event::listen (88 samples, 0.08%)</title><rect x="12.6639%" y="613" width="0.0755%" height="15" fill="rgb(236,164,45)" fg:x="14757" fg:w="88"/><text x="12.9139%" y="623.50"></text></g><g><title>event_listener::full_fence (15 samples, 0.01%)</title><rect x="12.7266%" y="597" width="0.0129%" height="15" fill="rgb(231,15,5)" fg:x="14830" fg:w="15"/><text x="12.9766%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.01%)</title><rect x="12.7266%" y="581" width="0.0129%" height="15" fill="rgb(252,35,15)" fg:x="14830" fg:w="15"/><text x="12.9766%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="12.7266%" y="565" width="0.0129%" height="15" fill="rgb(248,181,18)" fg:x="14830" fg:w="15"/><text x="12.9766%" y="575.50"></text></g><g><title>[libc-2.31.so] (85 samples, 0.07%)</title><rect x="12.7437%" y="613" width="0.0729%" height="15" fill="rgb(233,39,42)" fg:x="14850" fg:w="85"/><text x="12.9937%" y="623.50"></text></g><g><title>[libc-2.31.so] (467 samples, 0.40%)</title><rect x="12.8218%" y="581" width="0.4008%" height="15" fill="rgb(238,110,33)" fg:x="14941" fg:w="467"/><text x="13.0718%" y="591.50"></text></g><g><title>sn_rust_dealloc (52 samples, 0.04%)</title><rect x="13.2243%" y="501" width="0.0446%" height="15" fill="rgb(233,195,10)" fg:x="15410" fg:w="52"/><text x="13.4743%" y="511.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,480 samples, 2.13%)</title><rect x="11.2634%" y="661" width="2.1282%" height="15" fill="rgb(254,105,3)" fg:x="13125" fg:w="2480"/><text x="11.5134%" y="671.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,468 samples, 2.12%)</title><rect x="11.2737%" y="645" width="2.1179%" height="15" fill="rgb(221,225,9)" fg:x="13137" fg:w="2468"/><text x="11.5237%" y="655.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (760 samples, 0.65%)</title><rect x="12.7394%" y="629" width="0.6522%" height="15" fill="rgb(224,227,45)" fg:x="14845" fg:w="760"/><text x="12.9894%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (670 samples, 0.57%)</title><rect x="12.8167%" y="613" width="0.5750%" height="15" fill="rgb(229,198,43)" fg:x="14935" fg:w="670"/><text x="13.0667%" y="623.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (670 samples, 0.57%)</title><rect x="12.8167%" y="597" width="0.5750%" height="15" fill="rgb(206,209,35)" fg:x="14935" fg:w="670"/><text x="13.0667%" y="607.50"></text></g><g><title>alloc::alloc::box_free (197 samples, 0.17%)</title><rect x="13.2226%" y="581" width="0.1691%" height="15" fill="rgb(245,195,53)" fg:x="15408" fg:w="197"/><text x="13.4726%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (197 samples, 0.17%)</title><rect x="13.2226%" y="565" width="0.1691%" height="15" fill="rgb(240,92,26)" fg:x="15408" fg:w="197"/><text x="13.4726%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (197 samples, 0.17%)</title><rect x="13.2226%" y="549" width="0.1691%" height="15" fill="rgb(207,40,23)" fg:x="15408" fg:w="197"/><text x="13.4726%" y="559.50"></text></g><g><title>__rg_dealloc (197 samples, 0.17%)</title><rect x="13.2226%" y="533" width="0.1691%" height="15" fill="rgb(223,111,35)" fg:x="15408" fg:w="197"/><text x="13.4726%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (197 samples, 0.17%)</title><rect x="13.2226%" y="517" width="0.1691%" height="15" fill="rgb(229,147,28)" fg:x="15408" fg:w="197"/><text x="13.4726%" y="527.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (143 samples, 0.12%)</title><rect x="13.2689%" y="501" width="0.1227%" height="15" fill="rgb(211,29,28)" fg:x="15462" fg:w="143"/><text x="13.5189%" y="511.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,072 samples, 2.64%)</title><rect x="11.2436%" y="725" width="2.6363%" height="15" fill="rgb(228,72,33)" fg:x="13102" fg:w="3072"/><text x="11.4936%" y="735.50">&lt;a..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (3,072 samples, 2.64%)</title><rect x="11.2436%" y="709" width="2.6363%" height="15" fill="rgb(205,214,31)" fg:x="13102" fg:w="3072"/><text x="11.4936%" y="719.50">&lt;t..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (3,072 samples, 2.64%)</title><rect x="11.2436%" y="693" width="2.6363%" height="15" fill="rgb(224,111,15)" fg:x="13102" fg:w="3072"/><text x="11.4936%" y="703.50">&lt;a..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (3,072 samples, 2.64%)</title><rect x="11.2436%" y="677" width="2.6363%" height="15" fill="rgb(253,21,26)" fg:x="13102" fg:w="3072"/><text x="11.4936%" y="687.50">&lt;t..</text></g><g><title>[libc-2.31.so] (569 samples, 0.49%)</title><rect x="13.3916%" y="661" width="0.4883%" height="15" fill="rgb(245,139,43)" fg:x="15605" fg:w="569"/><text x="13.6416%" y="671.50"></text></g><g><title>&lt;value_trait::generator::DumpGenerator&lt;VT&gt; as value_trait::generator::BaseGenerator&gt;::write (15 samples, 0.01%)</title><rect x="13.9022%" y="581" width="0.0129%" height="15" fill="rgb(252,170,7)" fg:x="16200" fg:w="15"/><text x="14.1522%" y="591.50"></text></g><g><title>value_trait::generator::extend_from_slice (15 samples, 0.01%)</title><rect x="13.9022%" y="565" width="0.0129%" height="15" fill="rgb(231,118,14)" fg:x="16200" fg:w="15"/><text x="14.1522%" y="575.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::operator::TrickleOperator as tremor_pipeline::op::Operator&gt;::on_event (98 samples, 0.08%)</title><rect x="13.8799%" y="645" width="0.0841%" height="15" fill="rgb(238,83,0)" fg:x="16174" fg:w="98"/><text x="14.1299%" y="655.50"></text></g><g><title>&lt;tremor_pipeline::op::grouper::bucket::Grouper as tremor_pipeline::op::Operator&gt;::on_event (98 samples, 0.08%)</title><rect x="13.8799%" y="629" width="0.0841%" height="15" fill="rgb(221,39,39)" fg:x="16174" fg:w="98"/><text x="14.1299%" y="639.50"></text></g><g><title>tremor_value::value::serialize::&lt;impl value_trait::Writable for tremor_value::value::Value&gt;::encode (98 samples, 0.08%)</title><rect x="13.8799%" y="613" width="0.0841%" height="15" fill="rgb(222,119,46)" fg:x="16174" fg:w="98"/><text x="14.1299%" y="623.50"></text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (98 samples, 0.08%)</title><rect x="13.8799%" y="597" width="0.0841%" height="15" fill="rgb(222,165,49)" fg:x="16174" fg:w="98"/><text x="14.1299%" y="607.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_string (57 samples, 0.05%)</title><rect x="13.9151%" y="581" width="0.0489%" height="15" fill="rgb(219,113,52)" fg:x="16215" fg:w="57"/><text x="14.1651%" y="591.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_string_content (47 samples, 0.04%)</title><rect x="13.9237%" y="565" width="0.0403%" height="15" fill="rgb(214,7,15)" fg:x="16225" fg:w="47"/><text x="14.1737%" y="575.50"></text></g><g><title>&lt;tremor_script::interpreter::Env as core::default::Default&gt;::default (15 samples, 0.01%)</title><rect x="14.1125%" y="565" width="0.0129%" height="15" fill="rgb(235,32,4)" fg:x="16445" fg:w="15"/><text x="14.3625%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (28 samples, 0.02%)</title><rect x="14.3451%" y="517" width="0.0240%" height="15" fill="rgb(238,90,54)" fg:x="16716" fg:w="28"/><text x="14.5951%" y="527.50"></text></g><g><title>tremor_script::interpreter::LocalStack::with_size (278 samples, 0.24%)</title><rect x="14.1399%" y="565" width="0.2386%" height="15" fill="rgb(213,208,19)" fg:x="16477" fg:w="278"/><text x="14.3899%" y="575.50"></text></g><g><title>alloc::vec::from_elem (278 samples, 0.24%)</title><rect x="14.1399%" y="549" width="0.2386%" height="15" fill="rgb(233,156,4)" fg:x="16477" fg:w="278"/><text x="14.3899%" y="559.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (274 samples, 0.24%)</title><rect x="14.1434%" y="533" width="0.2351%" height="15" fill="rgb(207,194,5)" fg:x="16481" fg:w="274"/><text x="14.3934%" y="543.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (597 samples, 0.51%)</title><rect x="13.8799%" y="709" width="0.5123%" height="15" fill="rgb(206,111,30)" fg:x="16174" fg:w="597"/><text x="14.1299%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (597 samples, 0.51%)</title><rect x="13.8799%" y="693" width="0.5123%" height="15" fill="rgb(243,70,54)" fg:x="16174" fg:w="597"/><text x="14.1299%" y="703.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (597 samples, 0.51%)</title><rect x="13.8799%" y="677" width="0.5123%" height="15" fill="rgb(242,28,8)" fg:x="16174" fg:w="597"/><text x="14.1299%" y="687.50"></text></g><g><title>&lt;tremor_pipeline::executable_graph::OperatorNode as tremor_pipeline::op::Operator&gt;::on_event (597 samples, 0.51%)</title><rect x="13.8799%" y="661" width="0.5123%" height="15" fill="rgb(219,106,18)" fg:x="16174" fg:w="597"/><text x="14.1299%" y="671.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event (499 samples, 0.43%)</title><rect x="13.9640%" y="645" width="0.4282%" height="15" fill="rgb(244,222,10)" fg:x="16272" fg:w="499"/><text x="14.2140%" y="655.50"></text></g><g><title>tremor_script::srs::EventPayload::rent_mut (499 samples, 0.43%)</title><rect x="13.9640%" y="629" width="0.4282%" height="15" fill="rgb(236,179,52)" fg:x="16272" fg:w="499"/><text x="14.2140%" y="639.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event::{{closure}} (499 samples, 0.43%)</title><rect x="13.9640%" y="613" width="0.4282%" height="15" fill="rgb(213,23,39)" fg:x="16272" fg:w="499"/><text x="14.2140%" y="623.50"></text></g><g><title>tremor_script::script::Script::run (499 samples, 0.43%)</title><rect x="13.9640%" y="597" width="0.4282%" height="15" fill="rgb(238,48,10)" fg:x="16272" fg:w="499"/><text x="14.2140%" y="607.50"></text></g><g><title>tremor_script::ast::Script::run (499 samples, 0.43%)</title><rect x="13.9640%" y="581" width="0.4282%" height="15" fill="rgb(251,196,23)" fg:x="16272" fg:w="499"/><text x="14.2140%" y="591.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (16 samples, 0.01%)</title><rect x="14.3785%" y="565" width="0.0137%" height="15" fill="rgb(250,152,24)" fg:x="16755" fg:w="16"/><text x="14.6285%" y="575.50"></text></g><g><title>[libc-2.31.so] (67 samples, 0.06%)</title><rect x="14.3940%" y="677" width="0.0575%" height="15" fill="rgb(209,150,17)" fg:x="16773" fg:w="67"/><text x="14.6440%" y="687.50"></text></g><g><title>[libc-2.31.so] (561 samples, 0.48%)</title><rect x="14.5244%" y="661" width="0.4814%" height="15" fill="rgb(234,202,34)" fg:x="16925" fg:w="561"/><text x="14.7744%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (9,518 samples, 8.17%)</title><rect x="6.8447%" y="869" width="8.1680%" height="15" fill="rgb(253,148,53)" fg:x="7976" fg:w="9518"/><text x="7.0947%" y="879.50">async_execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (9,518 samples, 8.17%)</title><rect x="6.8447%" y="853" width="8.1680%" height="15" fill="rgb(218,129,16)" fg:x="7976" fg:w="9518"/><text x="7.0947%" y="863.50">&lt;async_std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (9,518 samples, 8.17%)</title><rect x="6.8447%" y="837" width="8.1680%" height="15" fill="rgb(216,85,19)" fg:x="7976" fg:w="9518"/><text x="7.0947%" y="847.50">async_std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,518 samples, 8.17%)</title><rect x="6.8447%" y="821" width="8.1680%" height="15" fill="rgb(235,228,7)" fg:x="7976" fg:w="9518"/><text x="7.0947%" y="831.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,518 samples, 8.17%)</title><rect x="6.8447%" y="805" width="8.1680%" height="15" fill="rgb(245,175,0)" fg:x="7976" fg:w="9518"/><text x="7.0947%" y="815.50">std::thread..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (9,518 samples, 8.17%)</title><rect x="6.8447%" y="789" width="8.1680%" height="15" fill="rgb(208,168,36)" fg:x="7976" fg:w="9518"/><text x="7.0947%" y="799.50">async_std::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (9,518 samples, 8.17%)</title><rect x="6.8447%" y="773" width="8.1680%" height="15" fill="rgb(246,171,24)" fg:x="7976" fg:w="9518"/><text x="7.0947%" y="783.50">&lt;async_std:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,518 samples, 8.17%)</title><rect x="6.8447%" y="757" width="8.1680%" height="15" fill="rgb(215,142,24)" fg:x="7976" fg:w="9518"/><text x="7.0947%" y="767.50">&lt;core::futu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (4,392 samples, 3.77%)</title><rect x="11.2436%" y="741" width="3.7691%" height="15" fill="rgb(250,187,7)" fg:x="13102" fg:w="4392"/><text x="11.4936%" y="751.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,320 samples, 1.13%)</title><rect x="13.8799%" y="725" width="1.1328%" height="15" fill="rgb(228,66,33)" fg:x="16174" fg:w="1320"/><text x="14.1299%" y="735.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (723 samples, 0.62%)</title><rect x="14.3922%" y="709" width="0.6205%" height="15" fill="rgb(234,215,21)" fg:x="16771" fg:w="723"/><text x="14.6422%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (723 samples, 0.62%)</title><rect x="14.3922%" y="693" width="0.6205%" height="15" fill="rgb(222,191,20)" fg:x="16771" fg:w="723"/><text x="14.6422%" y="703.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (654 samples, 0.56%)</title><rect x="14.4515%" y="677" width="0.5612%" height="15" fill="rgb(245,79,54)" fg:x="16840" fg:w="654"/><text x="14.7015%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,570 samples, 9.07%)</title><rect x="5.9454%" y="885" width="9.0708%" height="15" fill="rgb(240,10,37)" fg:x="6928" fg:w="10570"/><text x="6.1954%" y="895.50">&lt;core::future..</text></g><g><title>&lt;tremor_pipeline::op::EventAndInsights as core::convert::From&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt;&gt;::from (21 samples, 0.02%)</title><rect x="15.0307%" y="885" width="0.0180%" height="15" fill="rgb(214,192,32)" fg:x="17515" fg:w="21"/><text x="15.2807%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::if_expr (36 samples, 0.03%)</title><rect x="15.0565%" y="789" width="0.0309%" height="15" fill="rgb(209,36,54)" fg:x="17545" fg:w="36"/><text x="15.3065%" y="799.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::execute_effectors (36 samples, 0.03%)</title><rect x="15.0565%" y="773" width="0.0309%" height="15" fill="rgb(220,10,11)" fg:x="17545" fg:w="36"/><text x="15.3065%" y="783.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (36 samples, 0.03%)</title><rect x="15.0565%" y="757" width="0.0309%" height="15" fill="rgb(221,106,17)" fg:x="17545" fg:w="36"/><text x="15.3065%" y="767.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (35 samples, 0.03%)</title><rect x="15.0573%" y="741" width="0.0300%" height="15" fill="rgb(251,142,44)" fg:x="17546" fg:w="35"/><text x="15.3073%" y="751.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event (122 samples, 0.10%)</title><rect x="15.0539%" y="885" width="0.1047%" height="15" fill="rgb(238,13,15)" fg:x="17542" fg:w="122"/><text x="15.3039%" y="895.50"></text></g><g><title>tremor_script::srs::EventPayload::rent_mut (119 samples, 0.10%)</title><rect x="15.0565%" y="869" width="0.1021%" height="15" fill="rgb(208,107,27)" fg:x="17545" fg:w="119"/><text x="15.3065%" y="879.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event::{{closure}} (119 samples, 0.10%)</title><rect x="15.0565%" y="853" width="0.1021%" height="15" fill="rgb(205,136,37)" fg:x="17545" fg:w="119"/><text x="15.3065%" y="863.50"></text></g><g><title>tremor_script::script::Script::run (119 samples, 0.10%)</title><rect x="15.0565%" y="837" width="0.1021%" height="15" fill="rgb(250,205,27)" fg:x="17545" fg:w="119"/><text x="15.3065%" y="847.50"></text></g><g><title>tremor_script::ast::Script::run (119 samples, 0.10%)</title><rect x="15.0565%" y="821" width="0.1021%" height="15" fill="rgb(210,80,43)" fg:x="17545" fg:w="119"/><text x="15.3065%" y="831.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (119 samples, 0.10%)</title><rect x="15.0565%" y="805" width="0.1021%" height="15" fill="rgb(247,160,36)" fg:x="17545" fg:w="119"/><text x="15.3065%" y="815.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::match_expr (83 samples, 0.07%)</title><rect x="15.0874%" y="789" width="0.0712%" height="15" fill="rgb(234,13,49)" fg:x="17581" fg:w="83"/><text x="15.3374%" y="799.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::execute_effectors (83 samples, 0.07%)</title><rect x="15.0874%" y="773" width="0.0712%" height="15" fill="rgb(234,122,0)" fg:x="17581" fg:w="83"/><text x="15.3374%" y="783.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (83 samples, 0.07%)</title><rect x="15.0874%" y="757" width="0.0712%" height="15" fill="rgb(207,146,38)" fg:x="17581" fg:w="83"/><text x="15.3374%" y="767.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (83 samples, 0.07%)</title><rect x="15.0874%" y="741" width="0.0712%" height="15" fill="rgb(207,177,25)" fg:x="17581" fg:w="83"/><text x="15.3374%" y="751.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (83 samples, 0.07%)</title><rect x="15.0874%" y="725" width="0.0712%" height="15" fill="rgb(211,178,42)" fg:x="17581" fg:w="83"/><text x="15.3374%" y="735.50"></text></g><g><title>tremor_script::interpreter::resolve (22 samples, 0.02%)</title><rect x="15.1397%" y="709" width="0.0189%" height="15" fill="rgb(230,69,54)" fg:x="17642" fg:w="22"/><text x="15.3897%" y="719.50"></text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode (21 samples, 0.02%)</title><rect x="15.1637%" y="885" width="0.0180%" height="15" fill="rgb(214,135,41)" fg:x="17670" fg:w="21"/><text x="15.4137%" y="895.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (13 samples, 0.01%)</title><rect x="15.1869%" y="885" width="0.0112%" height="15" fill="rgb(237,67,25)" fg:x="17697" fg:w="13"/><text x="15.4369%" y="895.50"></text></g><g><title>[libc-2.31.so] (231 samples, 0.20%)</title><rect x="15.2049%" y="885" width="0.1982%" height="15" fill="rgb(222,189,50)" fg:x="17718" fg:w="231"/><text x="15.4549%" y="895.50"></text></g><g><title>__clock_gettime (33 samples, 0.03%)</title><rect x="15.4032%" y="885" width="0.0283%" height="15" fill="rgb(245,148,34)" fg:x="17949" fg:w="33"/><text x="15.6532%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (67 samples, 0.06%)</title><rect x="15.4538%" y="885" width="0.0575%" height="15" fill="rgb(222,29,6)" fg:x="18008" fg:w="67"/><text x="15.7038%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20 samples, 0.02%)</title><rect x="15.5113%" y="885" width="0.0172%" height="15" fill="rgb(221,189,43)" fg:x="18075" fg:w="20"/><text x="15.7613%" y="895.50"></text></g><g><title>async_executor::Ticker::sleep (20 samples, 0.02%)</title><rect x="15.5353%" y="885" width="0.0172%" height="15" fill="rgb(207,36,27)" fg:x="18103" fg:w="20"/><text x="15.7853%" y="895.50"></text></g><g><title>async_executor::steal (123 samples, 0.11%)</title><rect x="15.5525%" y="885" width="0.1056%" height="15" fill="rgb(217,90,24)" fg:x="18123" fg:w="123"/><text x="15.8025%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (31 samples, 0.03%)</title><rect x="15.7087%" y="405" width="0.0266%" height="15" fill="rgb(224,66,35)" fg:x="18305" fg:w="31"/><text x="15.9587%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (31 samples, 0.03%)</title><rect x="15.7087%" y="389" width="0.0266%" height="15" fill="rgb(221,13,50)" fg:x="18305" fg:w="31"/><text x="15.9587%" y="399.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="15.7078%" y="437" width="0.0283%" height="15" fill="rgb(236,68,49)" fg:x="18304" fg:w="33"/><text x="15.9578%" y="447.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (32 samples, 0.03%)</title><rect x="15.7087%" y="421" width="0.0275%" height="15" fill="rgb(229,146,28)" fg:x="18305" fg:w="32"/><text x="15.9587%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (17 samples, 0.01%)</title><rect x="15.7404%" y="437" width="0.0146%" height="15" fill="rgb(225,31,38)" fg:x="18342" fg:w="17"/><text x="15.9904%" y="447.50"></text></g><g><title>core::mem::drop (37 samples, 0.03%)</title><rect x="15.7550%" y="437" width="0.0318%" height="15" fill="rgb(250,208,3)" fg:x="18359" fg:w="37"/><text x="16.0050%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (37 samples, 0.03%)</title><rect x="15.7550%" y="421" width="0.0318%" height="15" fill="rgb(246,54,23)" fg:x="18359" fg:w="37"/><text x="16.0050%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (35 samples, 0.03%)</title><rect x="15.7567%" y="405" width="0.0300%" height="15" fill="rgb(243,76,11)" fg:x="18361" fg:w="35"/><text x="16.0067%" y="415.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="15.7567%" y="389" width="0.0300%" height="15" fill="rgb(245,21,50)" fg:x="18361" fg:w="35"/><text x="16.0067%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (34 samples, 0.03%)</title><rect x="15.7576%" y="373" width="0.0292%" height="15" fill="rgb(228,9,43)" fg:x="18362" fg:w="34"/><text x="16.0076%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (34 samples, 0.03%)</title><rect x="15.7576%" y="357" width="0.0292%" height="15" fill="rgb(208,100,47)" fg:x="18362" fg:w="34"/><text x="16.0076%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (34 samples, 0.03%)</title><rect x="15.7576%" y="341" width="0.0292%" height="15" fill="rgb(232,26,8)" fg:x="18362" fg:w="34"/><text x="16.0076%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_swap (34 samples, 0.03%)</title><rect x="15.7576%" y="325" width="0.0292%" height="15" fill="rgb(216,166,38)" fg:x="18362" fg:w="34"/><text x="16.0076%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (39 samples, 0.03%)</title><rect x="15.7868%" y="437" width="0.0335%" height="15" fill="rgb(251,202,51)" fg:x="18396" fg:w="39"/><text x="16.0368%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (36 samples, 0.03%)</title><rect x="15.7893%" y="421" width="0.0309%" height="15" fill="rgb(254,216,34)" fg:x="18399" fg:w="36"/><text x="16.0393%" y="431.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="15.7893%" y="405" width="0.0309%" height="15" fill="rgb(251,32,27)" fg:x="18399" fg:w="36"/><text x="16.0393%" y="415.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (30 samples, 0.03%)</title><rect x="15.7945%" y="389" width="0.0257%" height="15" fill="rgb(208,127,28)" fg:x="18405" fg:w="30"/><text x="16.0445%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (30 samples, 0.03%)</title><rect x="15.7945%" y="373" width="0.0257%" height="15" fill="rgb(224,137,22)" fg:x="18405" fg:w="30"/><text x="16.0445%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (30 samples, 0.03%)</title><rect x="15.7945%" y="357" width="0.0257%" height="15" fill="rgb(254,70,32)" fg:x="18405" fg:w="30"/><text x="16.0445%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_swap (30 samples, 0.03%)</title><rect x="15.7945%" y="341" width="0.0257%" height="15" fill="rgb(229,75,37)" fg:x="18405" fg:w="30"/><text x="16.0445%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (119 samples, 0.10%)</title><rect x="15.8322%" y="373" width="0.1021%" height="15" fill="rgb(252,64,23)" fg:x="18449" fg:w="119"/><text x="16.0822%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (119 samples, 0.10%)</title><rect x="15.8322%" y="357" width="0.1021%" height="15" fill="rgb(232,162,48)" fg:x="18449" fg:w="119"/><text x="16.0822%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (32 samples, 0.03%)</title><rect x="15.9378%" y="357" width="0.0275%" height="15" fill="rgb(246,160,12)" fg:x="18572" fg:w="32"/><text x="16.1878%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.03%)</title><rect x="15.9378%" y="341" width="0.0275%" height="15" fill="rgb(247,166,0)" fg:x="18572" fg:w="32"/><text x="16.1878%" y="351.50"></text></g><g><title>core::hint::spin_loop (956 samples, 0.82%)</title><rect x="15.9704%" y="341" width="0.8204%" height="15" fill="rgb(249,219,21)" fg:x="18610" fg:w="956"/><text x="16.2204%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (956 samples, 0.82%)</title><rect x="15.9704%" y="325" width="0.8204%" height="15" fill="rgb(205,209,3)" fg:x="18610" fg:w="956"/><text x="16.2204%" y="335.50"></text></g><g><title>event_listener::Inner::lock (1,166 samples, 1.00%)</title><rect x="15.8219%" y="437" width="1.0006%" height="15" fill="rgb(243,44,1)" fg:x="18437" fg:w="1166"/><text x="16.0719%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,166 samples, 1.00%)</title><rect x="15.8219%" y="421" width="1.0006%" height="15" fill="rgb(206,159,16)" fg:x="18437" fg:w="1166"/><text x="16.0719%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,158 samples, 0.99%)</title><rect x="15.8288%" y="405" width="0.9938%" height="15" fill="rgb(244,77,30)" fg:x="18445" fg:w="1158"/><text x="16.0788%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (1,158 samples, 0.99%)</title><rect x="15.8288%" y="389" width="0.9938%" height="15" fill="rgb(218,69,12)" fg:x="18445" fg:w="1158"/><text x="16.0788%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (1,035 samples, 0.89%)</title><rect x="15.9344%" y="373" width="0.8882%" height="15" fill="rgb(212,87,7)" fg:x="18568" fg:w="1035"/><text x="16.1844%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (999 samples, 0.86%)</title><rect x="15.9653%" y="357" width="0.8573%" height="15" fill="rgb(245,114,25)" fg:x="18604" fg:w="999"/><text x="16.2153%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (37 samples, 0.03%)</title><rect x="16.7908%" y="341" width="0.0318%" height="15" fill="rgb(210,61,42)" fg:x="19566" fg:w="37"/><text x="17.0408%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (37 samples, 0.03%)</title><rect x="16.7908%" y="325" width="0.0318%" height="15" fill="rgb(211,52,33)" fg:x="19566" fg:w="37"/><text x="17.0408%" y="335.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,389 samples, 1.19%)</title><rect x="15.6864%" y="453" width="1.1920%" height="15" fill="rgb(234,58,33)" fg:x="18279" fg:w="1389"/><text x="15.9364%" y="463.50"></text></g><g><title>event_listener::List::remove (65 samples, 0.06%)</title><rect x="16.8226%" y="437" width="0.0558%" height="15" fill="rgb(220,115,36)" fg:x="19603" fg:w="65"/><text x="17.0726%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (37 samples, 0.03%)</title><rect x="16.8466%" y="421" width="0.0318%" height="15" fill="rgb(243,153,54)" fg:x="19631" fg:w="37"/><text x="17.0966%" y="431.50"></text></g><g><title>core::mem::replace (37 samples, 0.03%)</title><rect x="16.8466%" y="405" width="0.0318%" height="15" fill="rgb(251,47,18)" fg:x="19631" fg:w="37"/><text x="17.0966%" y="415.50"></text></g><g><title>core::ptr::read (37 samples, 0.03%)</title><rect x="16.8466%" y="389" width="0.0318%" height="15" fill="rgb(242,102,42)" fg:x="19631" fg:w="37"/><text x="17.0966%" y="399.50"></text></g><g><title>[libc-2.31.so] (335 samples, 0.29%)</title><rect x="16.8783%" y="453" width="0.2875%" height="15" fill="rgb(234,31,38)" fg:x="19668" fg:w="335"/><text x="17.1283%" y="463.50"></text></g><g><title>[libc-2.31.so] (727 samples, 0.62%)</title><rect x="17.1950%" y="437" width="0.6239%" height="15" fill="rgb(221,117,51)" fg:x="20037" fg:w="727"/><text x="17.4450%" y="447.50"></text></g><g><title>[libc-2.31.so] (124 samples, 0.11%)</title><rect x="17.9313%" y="405" width="0.1064%" height="15" fill="rgb(212,20,18)" fg:x="20895" fg:w="124"/><text x="18.1813%" y="415.50"></text></g><g><title>concurrent_queue::full_fence (224 samples, 0.19%)</title><rect x="18.0377%" y="405" width="0.1922%" height="15" fill="rgb(245,133,36)" fg:x="21019" fg:w="224"/><text x="18.2877%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (218 samples, 0.19%)</title><rect x="18.0429%" y="389" width="0.1871%" height="15" fill="rgb(212,6,19)" fg:x="21025" fg:w="218"/><text x="18.2929%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (218 samples, 0.19%)</title><rect x="18.0429%" y="373" width="0.1871%" height="15" fill="rgb(218,1,36)" fg:x="21025" fg:w="218"/><text x="18.2929%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (218 samples, 0.19%)</title><rect x="18.0429%" y="357" width="0.1871%" height="15" fill="rgb(246,84,54)" fg:x="21025" fg:w="218"/><text x="18.2929%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (546 samples, 0.47%)</title><rect x="18.2325%" y="405" width="0.4686%" height="15" fill="rgb(242,110,6)" fg:x="21246" fg:w="546"/><text x="18.4825%" y="415.50"></text></g><g><title>core::ptr::read (546 samples, 0.47%)</title><rect x="18.2325%" y="389" width="0.4686%" height="15" fill="rgb(214,47,5)" fg:x="21246" fg:w="546"/><text x="18.4825%" y="399.50"></text></g><g><title>[libc-2.31.so] (546 samples, 0.47%)</title><rect x="18.2325%" y="373" width="0.4686%" height="15" fill="rgb(218,159,25)" fg:x="21246" fg:w="546"/><text x="18.4825%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (344 samples, 0.30%)</title><rect x="18.7011%" y="405" width="0.2952%" height="15" fill="rgb(215,211,28)" fg:x="21792" fg:w="344"/><text x="18.9511%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (344 samples, 0.30%)</title><rect x="18.7011%" y="389" width="0.2952%" height="15" fill="rgb(238,59,32)" fg:x="21792" fg:w="344"/><text x="18.9511%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (463 samples, 0.40%)</title><rect x="18.9963%" y="405" width="0.3973%" height="15" fill="rgb(226,82,3)" fg:x="22136" fg:w="463"/><text x="19.2463%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (460 samples, 0.39%)</title><rect x="18.9989%" y="389" width="0.3948%" height="15" fill="rgb(240,164,32)" fg:x="22139" fg:w="460"/><text x="19.2489%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,837 samples, 1.58%)</title><rect x="17.8189%" y="437" width="1.5764%" height="15" fill="rgb(232,46,7)" fg:x="20764" fg:w="1837"/><text x="18.0689%" y="447.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,821 samples, 1.56%)</title><rect x="17.8326%" y="421" width="1.5627%" height="15" fill="rgb(229,129,53)" fg:x="20780" fg:w="1821"/><text x="18.0826%" y="431.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,786 samples, 2.39%)</title><rect x="17.1658%" y="453" width="2.3908%" height="15" fill="rgb(234,188,29)" fg:x="20003" fg:w="2786"/><text x="17.4158%" y="463.50">as..</text></g><g><title>event_listener::Event::notify (188 samples, 0.16%)</title><rect x="19.3953%" y="437" width="0.1613%" height="15" fill="rgb(246,141,4)" fg:x="22601" fg:w="188"/><text x="19.6453%" y="447.50"></text></g><g><title>event_listener::full_fence (179 samples, 0.15%)</title><rect x="19.4031%" y="421" width="0.1536%" height="15" fill="rgb(229,23,39)" fg:x="22610" fg:w="179"/><text x="19.6531%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (172 samples, 0.15%)</title><rect x="19.4091%" y="405" width="0.1476%" height="15" fill="rgb(206,12,3)" fg:x="22617" fg:w="172"/><text x="19.6591%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (172 samples, 0.15%)</title><rect x="19.4091%" y="389" width="0.1476%" height="15" fill="rgb(252,226,20)" fg:x="22617" fg:w="172"/><text x="19.6591%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (20 samples, 0.02%)</title><rect x="19.5567%" y="453" width="0.0172%" height="15" fill="rgb(216,123,35)" fg:x="22789" fg:w="20"/><text x="19.8067%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (16 samples, 0.01%)</title><rect x="19.5919%" y="341" width="0.0137%" height="15" fill="rgb(212,68,40)" fg:x="22830" fg:w="16"/><text x="19.8419%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.01%)</title><rect x="19.5919%" y="325" width="0.0137%" height="15" fill="rgb(254,125,32)" fg:x="22830" fg:w="16"/><text x="19.8419%" y="335.50"></text></g><g><title>event_listener::Inner::lock (18 samples, 0.02%)</title><rect x="19.5910%" y="405" width="0.0154%" height="15" fill="rgb(253,97,22)" fg:x="22829" fg:w="18"/><text x="19.8410%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.01%)</title><rect x="19.5919%" y="389" width="0.0146%" height="15" fill="rgb(241,101,14)" fg:x="22830" fg:w="17"/><text x="19.8419%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.01%)</title><rect x="19.5919%" y="373" width="0.0146%" height="15" fill="rgb(238,103,29)" fg:x="22830" fg:w="17"/><text x="19.8419%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (17 samples, 0.01%)</title><rect x="19.5919%" y="357" width="0.0146%" height="15" fill="rgb(233,195,47)" fg:x="22830" fg:w="17"/><text x="19.8419%" y="367.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="19.5816%" y="421" width="0.0309%" height="15" fill="rgb(246,218,30)" fg:x="22818" fg:w="36"/><text x="19.8316%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (95 samples, 0.08%)</title><rect x="19.5738%" y="453" width="0.0815%" height="15" fill="rgb(219,145,47)" fg:x="22809" fg:w="95"/><text x="19.8238%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (86 samples, 0.07%)</title><rect x="19.5816%" y="437" width="0.0738%" height="15" fill="rgb(243,12,26)" fg:x="22818" fg:w="86"/><text x="19.8316%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (50 samples, 0.04%)</title><rect x="19.6125%" y="421" width="0.0429%" height="15" fill="rgb(214,87,16)" fg:x="22854" fg:w="50"/><text x="19.8625%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.04%)</title><rect x="19.6125%" y="405" width="0.0429%" height="15" fill="rgb(208,99,42)" fg:x="22854" fg:w="50"/><text x="19.8625%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (50 samples, 0.04%)</title><rect x="19.6125%" y="389" width="0.0429%" height="15" fill="rgb(253,99,2)" fg:x="22854" fg:w="50"/><text x="19.8625%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (50 samples, 0.04%)</title><rect x="19.6125%" y="373" width="0.0429%" height="15" fill="rgb(220,168,23)" fg:x="22854" fg:w="50"/><text x="19.8625%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (37 samples, 0.03%)</title><rect x="19.6605%" y="437" width="0.0318%" height="15" fill="rgb(242,38,24)" fg:x="22910" fg:w="37"/><text x="19.9105%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (37 samples, 0.03%)</title><rect x="19.6605%" y="421" width="0.0318%" height="15" fill="rgb(225,182,9)" fg:x="22910" fg:w="37"/><text x="19.9105%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (37 samples, 0.03%)</title><rect x="19.6605%" y="405" width="0.0318%" height="15" fill="rgb(243,178,37)" fg:x="22910" fg:w="37"/><text x="19.9105%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (81 samples, 0.07%)</title><rect x="19.6923%" y="437" width="0.0695%" height="15" fill="rgb(232,139,19)" fg:x="22947" fg:w="81"/><text x="19.9423%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (79 samples, 0.07%)</title><rect x="19.6940%" y="421" width="0.0678%" height="15" fill="rgb(225,201,24)" fg:x="22949" fg:w="79"/><text x="19.9440%" y="431.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.07%)</title><rect x="19.6940%" y="405" width="0.0678%" height="15" fill="rgb(221,47,46)" fg:x="22949" fg:w="79"/><text x="19.9440%" y="415.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (78 samples, 0.07%)</title><rect x="19.6948%" y="389" width="0.0669%" height="15" fill="rgb(249,23,13)" fg:x="22950" fg:w="78"/><text x="19.9448%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (78 samples, 0.07%)</title><rect x="19.6948%" y="373" width="0.0669%" height="15" fill="rgb(219,9,5)" fg:x="22950" fg:w="78"/><text x="19.9448%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (78 samples, 0.07%)</title><rect x="19.6948%" y="357" width="0.0669%" height="15" fill="rgb(254,171,16)" fg:x="22950" fg:w="78"/><text x="19.9448%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_swap (78 samples, 0.07%)</title><rect x="19.6948%" y="341" width="0.0669%" height="15" fill="rgb(230,171,20)" fg:x="22950" fg:w="78"/><text x="19.9448%" y="351.50"></text></g><g><title>event_listener::Inner::lock (31 samples, 0.03%)</title><rect x="19.7643%" y="437" width="0.0266%" height="15" fill="rgb(210,71,41)" fg:x="23031" fg:w="31"/><text x="20.0143%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 0.03%)</title><rect x="19.7643%" y="421" width="0.0266%" height="15" fill="rgb(206,173,20)" fg:x="23031" fg:w="31"/><text x="20.0143%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (28 samples, 0.02%)</title><rect x="19.7669%" y="405" width="0.0240%" height="15" fill="rgb(233,88,34)" fg:x="23034" fg:w="28"/><text x="20.0169%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (28 samples, 0.02%)</title><rect x="19.7669%" y="389" width="0.0240%" height="15" fill="rgb(223,209,46)" fg:x="23034" fg:w="28"/><text x="20.0169%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (28 samples, 0.02%)</title><rect x="19.7669%" y="373" width="0.0240%" height="15" fill="rgb(250,43,18)" fg:x="23034" fg:w="28"/><text x="20.0169%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.02%)</title><rect x="19.7669%" y="357" width="0.0240%" height="15" fill="rgb(208,13,10)" fg:x="23034" fg:w="28"/><text x="20.0169%" y="367.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,854 samples, 4.17%)</title><rect x="15.6580%" y="533" width="4.1655%" height="15" fill="rgb(212,200,36)" fg:x="18246" fg:w="4854"/><text x="15.9080%" y="543.50">&lt;asyn..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (4,854 samples, 4.17%)</title><rect x="15.6580%" y="517" width="4.1655%" height="15" fill="rgb(225,90,30)" fg:x="18246" fg:w="4854"/><text x="15.9080%" y="527.50">&lt;trem..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (4,854 samples, 4.17%)</title><rect x="15.6580%" y="501" width="4.1655%" height="15" fill="rgb(236,182,39)" fg:x="18246" fg:w="4854"/><text x="15.9080%" y="511.50">&lt;asyn..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,854 samples, 4.17%)</title><rect x="15.6580%" y="485" width="4.1655%" height="15" fill="rgb(212,144,35)" fg:x="18246" fg:w="4854"/><text x="15.9080%" y="495.50">&lt;asyn..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,854 samples, 4.17%)</title><rect x="15.6580%" y="469" width="4.1655%" height="15" fill="rgb(228,63,44)" fg:x="18246" fg:w="4854"/><text x="15.9080%" y="479.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (196 samples, 0.17%)</title><rect x="19.6554%" y="453" width="0.1682%" height="15" fill="rgb(228,109,6)" fg:x="22904" fg:w="196"/><text x="19.9054%" y="463.50"></text></g><g><title>event_listener::full_fence (29 samples, 0.02%)</title><rect x="19.7987%" y="437" width="0.0249%" height="15" fill="rgb(238,117,24)" fg:x="23071" fg:w="29"/><text x="20.0487%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (27 samples, 0.02%)</title><rect x="19.8004%" y="421" width="0.0232%" height="15" fill="rgb(242,26,26)" fg:x="23073" fg:w="27"/><text x="20.0504%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (27 samples, 0.02%)</title><rect x="19.8004%" y="405" width="0.0232%" height="15" fill="rgb(221,92,48)" fg:x="23073" fg:w="27"/><text x="20.0504%" y="415.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (104 samples, 0.09%)</title><rect x="19.9325%" y="261" width="0.0892%" height="15" fill="rgb(209,209,32)" fg:x="23227" fg:w="104"/><text x="20.1825%" y="271.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (5,104 samples, 4.38%)</title><rect x="15.6580%" y="549" width="4.3801%" height="15" fill="rgb(221,70,22)" fg:x="18246" fg:w="5104"/><text x="15.9080%" y="559.50">tremo..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (250 samples, 0.21%)</title><rect x="19.8236%" y="533" width="0.2145%" height="15" fill="rgb(248,145,5)" fg:x="23100" fg:w="250"/><text x="20.0736%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (250 samples, 0.21%)</title><rect x="19.8236%" y="517" width="0.2145%" height="15" fill="rgb(226,116,26)" fg:x="23100" fg:w="250"/><text x="20.0736%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (250 samples, 0.21%)</title><rect x="19.8236%" y="501" width="0.2145%" height="15" fill="rgb(244,5,17)" fg:x="23100" fg:w="250"/><text x="20.0736%" y="511.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (250 samples, 0.21%)</title><rect x="19.8236%" y="485" width="0.2145%" height="15" fill="rgb(252,159,33)" fg:x="23100" fg:w="250"/><text x="20.0736%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (250 samples, 0.21%)</title><rect x="19.8236%" y="469" width="0.2145%" height="15" fill="rgb(206,71,0)" fg:x="23100" fg:w="250"/><text x="20.0736%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (250 samples, 0.21%)</title><rect x="19.8236%" y="453" width="0.2145%" height="15" fill="rgb(233,118,54)" fg:x="23100" fg:w="250"/><text x="20.0736%" y="463.50"></text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode (210 samples, 0.18%)</title><rect x="19.8579%" y="437" width="0.1802%" height="15" fill="rgb(234,83,48)" fg:x="23140" fg:w="210"/><text x="20.1079%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (190 samples, 0.16%)</title><rect x="19.8751%" y="421" width="0.1631%" height="15" fill="rgb(228,3,54)" fg:x="23160" fg:w="190"/><text x="20.1251%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (190 samples, 0.16%)</title><rect x="19.8751%" y="405" width="0.1631%" height="15" fill="rgb(226,155,13)" fg:x="23160" fg:w="190"/><text x="20.1251%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (175 samples, 0.15%)</title><rect x="19.8879%" y="389" width="0.1502%" height="15" fill="rgb(241,28,37)" fg:x="23175" fg:w="175"/><text x="20.1379%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (175 samples, 0.15%)</title><rect x="19.8879%" y="373" width="0.1502%" height="15" fill="rgb(233,93,10)" fg:x="23175" fg:w="175"/><text x="20.1379%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (175 samples, 0.15%)</title><rect x="19.8879%" y="357" width="0.1502%" height="15" fill="rgb(225,113,19)" fg:x="23175" fg:w="175"/><text x="20.1379%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (175 samples, 0.15%)</title><rect x="19.8879%" y="341" width="0.1502%" height="15" fill="rgb(241,2,18)" fg:x="23175" fg:w="175"/><text x="20.1379%" y="351.50"></text></g><g><title>alloc::alloc::alloc (174 samples, 0.15%)</title><rect x="19.8888%" y="325" width="0.1493%" height="15" fill="rgb(228,207,21)" fg:x="23176" fg:w="174"/><text x="20.1388%" y="335.50"></text></g><g><title>__rg_alloc (174 samples, 0.15%)</title><rect x="19.8888%" y="309" width="0.1493%" height="15" fill="rgb(213,211,35)" fg:x="23176" fg:w="174"/><text x="20.1388%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (174 samples, 0.15%)</title><rect x="19.8888%" y="293" width="0.1493%" height="15" fill="rgb(209,83,10)" fg:x="23176" fg:w="174"/><text x="20.1388%" y="303.50"></text></g><g><title>sn_rust_alloc (173 samples, 0.15%)</title><rect x="19.8896%" y="277" width="0.1485%" height="15" fill="rgb(209,164,1)" fg:x="23177" fg:w="173"/><text x="20.1396%" y="287.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="20.0218%" y="261" width="0.0163%" height="15" fill="rgb(213,184,43)" fg:x="23331" fg:w="19"/><text x="20.2718%" y="271.50"></text></g><g><title>[libc-2.31.so] (184 samples, 0.16%)</title><rect x="20.2544%" y="517" width="0.1579%" height="15" fill="rgb(231,61,34)" fg:x="23602" fg:w="184"/><text x="20.5044%" y="527.50"></text></g><g><title>[libc-2.31.so] (190 samples, 0.16%)</title><rect x="20.6525%" y="485" width="0.1631%" height="15" fill="rgb(235,75,3)" fg:x="24066" fg:w="190"/><text x="20.9025%" y="495.50"></text></g><g><title>[libc-2.31.so] (70 samples, 0.06%)</title><rect x="20.9589%" y="469" width="0.0601%" height="15" fill="rgb(220,106,47)" fg:x="24423" fg:w="70"/><text x="21.2089%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (105 samples, 0.09%)</title><rect x="21.0361%" y="405" width="0.0901%" height="15" fill="rgb(210,196,33)" fg:x="24513" fg:w="105"/><text x="21.2861%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (34 samples, 0.03%)</title><rect x="21.0971%" y="389" width="0.0292%" height="15" fill="rgb(229,154,42)" fg:x="24584" fg:w="34"/><text x="21.3471%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.03%)</title><rect x="21.0971%" y="373" width="0.0292%" height="15" fill="rgb(228,114,26)" fg:x="24584" fg:w="34"/><text x="21.3471%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.03%)</title><rect x="21.0971%" y="357" width="0.0292%" height="15" fill="rgb(208,144,1)" fg:x="24584" fg:w="34"/><text x="21.3471%" y="367.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.03%)</title><rect x="21.0971%" y="341" width="0.0292%" height="15" fill="rgb(239,112,37)" fg:x="24584" fg:w="34"/><text x="21.3471%" y="351.50"></text></g><g><title>__rg_alloc (34 samples, 0.03%)</title><rect x="21.0971%" y="325" width="0.0292%" height="15" fill="rgb(210,96,50)" fg:x="24584" fg:w="34"/><text x="21.3471%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (34 samples, 0.03%)</title><rect x="21.0971%" y="309" width="0.0292%" height="15" fill="rgb(222,178,2)" fg:x="24584" fg:w="34"/><text x="21.3471%" y="319.50"></text></g><g><title>sn_rust_alloc (33 samples, 0.03%)</title><rect x="21.0979%" y="293" width="0.0283%" height="15" fill="rgb(226,74,18)" fg:x="24585" fg:w="33"/><text x="21.3479%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (122 samples, 0.10%)</title><rect x="21.0233%" y="469" width="0.1047%" height="15" fill="rgb(225,67,54)" fg:x="24498" fg:w="122"/><text x="21.2733%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (117 samples, 0.10%)</title><rect x="21.0276%" y="453" width="0.1004%" height="15" fill="rgb(251,92,32)" fg:x="24503" fg:w="117"/><text x="21.2776%" y="463.50"></text></g><g><title>value_trait::Builder::object (111 samples, 0.10%)</title><rect x="21.0327%" y="437" width="0.0953%" height="15" fill="rgb(228,149,22)" fg:x="24509" fg:w="111"/><text x="21.2827%" y="447.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (107 samples, 0.09%)</title><rect x="21.0361%" y="421" width="0.0918%" height="15" fill="rgb(243,54,13)" fg:x="24513" fg:w="107"/><text x="21.2861%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (133 samples, 0.11%)</title><rect x="21.1391%" y="389" width="0.1141%" height="15" fill="rgb(243,180,28)" fg:x="24633" fg:w="133"/><text x="21.3891%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (133 samples, 0.11%)</title><rect x="21.1391%" y="373" width="0.1141%" height="15" fill="rgb(208,167,24)" fg:x="24633" fg:w="133"/><text x="21.3891%" y="383.50"></text></g><g><title>__rg_dealloc (133 samples, 0.11%)</title><rect x="21.1391%" y="357" width="0.1141%" height="15" fill="rgb(245,73,45)" fg:x="24633" fg:w="133"/><text x="21.3891%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (133 samples, 0.11%)</title><rect x="21.1391%" y="341" width="0.1141%" height="15" fill="rgb(237,203,48)" fg:x="24633" fg:w="133"/><text x="21.3891%" y="351.50"></text></g><g><title>sn_rust_dealloc (133 samples, 0.11%)</title><rect x="21.1391%" y="325" width="0.1141%" height="15" fill="rgb(211,197,16)" fg:x="24633" fg:w="133"/><text x="21.3891%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (142 samples, 0.12%)</title><rect x="21.1357%" y="453" width="0.1219%" height="15" fill="rgb(243,99,51)" fg:x="24629" fg:w="142"/><text x="21.3857%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (142 samples, 0.12%)</title><rect x="21.1357%" y="437" width="0.1219%" height="15" fill="rgb(215,123,29)" fg:x="24629" fg:w="142"/><text x="21.3857%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (142 samples, 0.12%)</title><rect x="21.1357%" y="421" width="0.1219%" height="15" fill="rgb(239,186,37)" fg:x="24629" fg:w="142"/><text x="21.3857%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (142 samples, 0.12%)</title><rect x="21.1357%" y="405" width="0.1219%" height="15" fill="rgb(252,136,39)" fg:x="24629" fg:w="142"/><text x="21.3857%" y="415.50"></text></g><g><title>sn_rust_dealloc (20 samples, 0.02%)</title><rect x="21.2730%" y="277" width="0.0172%" height="15" fill="rgb(223,213,32)" fg:x="24789" fg:w="20"/><text x="21.5230%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.02%)</title><rect x="21.2687%" y="341" width="0.0240%" height="15" fill="rgb(233,115,5)" fg:x="24784" fg:w="28"/><text x="21.5187%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.02%)</title><rect x="21.2687%" y="325" width="0.0240%" height="15" fill="rgb(207,226,44)" fg:x="24784" fg:w="28"/><text x="21.5187%" y="335.50"></text></g><g><title>__rg_dealloc (28 samples, 0.02%)</title><rect x="21.2687%" y="309" width="0.0240%" height="15" fill="rgb(208,126,0)" fg:x="24784" fg:w="28"/><text x="21.5187%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (28 samples, 0.02%)</title><rect x="21.2687%" y="293" width="0.0240%" height="15" fill="rgb(244,66,21)" fg:x="24784" fg:w="28"/><text x="21.5187%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="21.2576%" y="437" width="0.0378%" height="15" fill="rgb(222,97,12)" fg:x="24771" fg:w="44"/><text x="21.5076%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (39 samples, 0.03%)</title><rect x="21.2618%" y="421" width="0.0335%" height="15" fill="rgb(219,213,19)" fg:x="24776" fg:w="39"/><text x="21.5118%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (35 samples, 0.03%)</title><rect x="21.2653%" y="405" width="0.0300%" height="15" fill="rgb(252,169,30)" fg:x="24780" fg:w="35"/><text x="21.5153%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (35 samples, 0.03%)</title><rect x="21.2653%" y="389" width="0.0300%" height="15" fill="rgb(206,32,51)" fg:x="24780" fg:w="35"/><text x="21.5153%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (35 samples, 0.03%)</title><rect x="21.2653%" y="373" width="0.0300%" height="15" fill="rgb(250,172,42)" fg:x="24780" fg:w="35"/><text x="21.5153%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="21.2653%" y="357" width="0.0300%" height="15" fill="rgb(209,34,43)" fg:x="24780" fg:w="35"/><text x="21.5153%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (192 samples, 0.16%)</title><rect x="21.1357%" y="469" width="0.1648%" height="15" fill="rgb(223,11,35)" fg:x="24629" fg:w="192"/><text x="21.3857%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (50 samples, 0.04%)</title><rect x="21.2576%" y="453" width="0.0429%" height="15" fill="rgb(251,219,26)" fg:x="24771" fg:w="50"/><text x="21.5076%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (46 samples, 0.04%)</title><rect x="21.3005%" y="469" width="0.0395%" height="15" fill="rgb(231,119,3)" fg:x="24821" fg:w="46"/><text x="21.5505%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (25 samples, 0.02%)</title><rect x="21.3185%" y="453" width="0.0215%" height="15" fill="rgb(216,97,11)" fg:x="24842" fg:w="25"/><text x="21.5685%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (21 samples, 0.02%)</title><rect x="21.3219%" y="437" width="0.0180%" height="15" fill="rgb(223,59,9)" fg:x="24846" fg:w="21"/><text x="21.5719%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (21 samples, 0.02%)</title><rect x="21.3219%" y="421" width="0.0180%" height="15" fill="rgb(233,93,31)" fg:x="24846" fg:w="21"/><text x="21.5719%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="21.3288%" y="405" width="0.0112%" height="15" fill="rgb(239,81,33)" fg:x="24854" fg:w="13"/><text x="21.5788%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (13 samples, 0.01%)</title><rect x="21.3288%" y="389" width="0.0112%" height="15" fill="rgb(213,120,34)" fg:x="24854" fg:w="13"/><text x="21.5788%" y="399.50"></text></g><g><title>sn_rust_dealloc (54 samples, 0.05%)</title><rect x="21.3399%" y="469" width="0.0463%" height="15" fill="rgb(243,49,53)" fg:x="24867" fg:w="54"/><text x="21.5899%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (17 samples, 0.01%)</title><rect x="21.3983%" y="453" width="0.0146%" height="15" fill="rgb(247,216,33)" fg:x="24935" fg:w="17"/><text x="21.6483%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (48 samples, 0.04%)</title><rect x="21.4172%" y="437" width="0.0412%" height="15" fill="rgb(226,26,14)" fg:x="24957" fg:w="48"/><text x="21.6672%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (26 samples, 0.02%)</title><rect x="21.4858%" y="405" width="0.0223%" height="15" fill="rgb(215,49,53)" fg:x="25037" fg:w="26"/><text x="21.7358%" y="415.50"></text></g><g><title>core::cmp::PartialOrd::ge (26 samples, 0.02%)</title><rect x="21.4858%" y="389" width="0.0223%" height="15" fill="rgb(245,162,40)" fg:x="25037" fg:w="26"/><text x="21.7358%" y="399.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (26 samples, 0.02%)</title><rect x="21.4858%" y="373" width="0.0223%" height="15" fill="rgb(229,68,17)" fg:x="25037" fg:w="26"/><text x="21.7358%" y="383.50"></text></g><g><title>std::time::SystemTime::duration_since (117 samples, 0.10%)</title><rect x="21.4172%" y="453" width="0.1004%" height="15" fill="rgb(213,182,10)" fg:x="24957" fg:w="117"/><text x="21.6672%" y="463.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (69 samples, 0.06%)</title><rect x="21.4584%" y="437" width="0.0592%" height="15" fill="rgb(245,125,30)" fg:x="25005" fg:w="69"/><text x="21.7084%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (68 samples, 0.06%)</title><rect x="21.4592%" y="421" width="0.0584%" height="15" fill="rgb(232,202,2)" fg:x="25006" fg:w="68"/><text x="21.7092%" y="431.50"></text></g><g><title>tremor_common::time::nanotime (380 samples, 0.33%)</title><rect x="21.3871%" y="469" width="0.3261%" height="15" fill="rgb(237,140,51)" fg:x="24922" fg:w="380"/><text x="21.6371%" y="479.50"></text></g><g><title>std::time::SystemTime::now (228 samples, 0.20%)</title><rect x="21.5176%" y="453" width="0.1957%" height="15" fill="rgb(236,157,25)" fg:x="25074" fg:w="228"/><text x="21.7676%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (228 samples, 0.20%)</title><rect x="21.5176%" y="437" width="0.1957%" height="15" fill="rgb(219,209,0)" fg:x="25074" fg:w="228"/><text x="21.7676%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (228 samples, 0.20%)</title><rect x="21.5176%" y="421" width="0.1957%" height="15" fill="rgb(240,116,54)" fg:x="25074" fg:w="228"/><text x="21.7676%" y="431.50"></text></g><g><title>__clock_gettime (184 samples, 0.16%)</title><rect x="21.5553%" y="405" width="0.1579%" height="15" fill="rgb(216,10,36)" fg:x="25118" fg:w="184"/><text x="21.8053%" y="415.50"></text></g><g><title>__vdso_clock_gettime (174 samples, 0.15%)</title><rect x="21.5639%" y="389" width="0.1493%" height="15" fill="rgb(222,72,44)" fg:x="25128" fg:w="174"/><text x="21.8139%" y="399.50"></text></g><g><title>[[vdso]] (155 samples, 0.13%)</title><rect x="21.5802%" y="373" width="0.1330%" height="15" fill="rgb(232,159,9)" fg:x="25147" fg:w="155"/><text x="21.8302%" y="383.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,260 samples, 1.08%)</title><rect x="20.6457%" y="501" width="1.0813%" height="15" fill="rgb(210,39,32)" fg:x="24058" fg:w="1260"/><text x="20.8957%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,062 samples, 0.91%)</title><rect x="20.8156%" y="485" width="0.9114%" height="15" fill="rgb(216,194,45)" fg:x="24256" fg:w="1062"/><text x="21.0656%" y="495.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (16 samples, 0.01%)</title><rect x="21.7132%" y="469" width="0.0137%" height="15" fill="rgb(218,18,35)" fg:x="25302" fg:w="16"/><text x="21.9632%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (12 samples, 0.01%)</title><rect x="21.7167%" y="453" width="0.0103%" height="15" fill="rgb(207,83,51)" fg:x="25306" fg:w="12"/><text x="21.9667%" y="463.50"></text></g><g><title>[libc-2.31.so] (156 samples, 0.13%)</title><rect x="21.7287%" y="501" width="0.1339%" height="15" fill="rgb(225,63,43)" fg:x="25320" fg:w="156"/><text x="21.9787%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,882 samples, 1.62%)</title><rect x="20.2544%" y="533" width="1.6151%" height="15" fill="rgb(207,57,36)" fg:x="23602" fg:w="1882"/><text x="20.5044%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (1,698 samples, 1.46%)</title><rect x="20.4123%" y="517" width="1.4572%" height="15" fill="rgb(216,99,33)" fg:x="23786" fg:w="1698"/><text x="20.6623%" y="527.50"></text></g><g><title>[libc-2.31.so] (285 samples, 0.24%)</title><rect x="22.1054%" y="517" width="0.2446%" height="15" fill="rgb(225,42,16)" fg:x="25759" fg:w="285"/><text x="22.3554%" y="527.50"></text></g><g><title>alloc::alloc::box_free (33 samples, 0.03%)</title><rect x="22.3543%" y="485" width="0.0283%" height="15" fill="rgb(220,201,45)" fg:x="26049" fg:w="33"/><text x="22.6043%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.03%)</title><rect x="22.3543%" y="469" width="0.0283%" height="15" fill="rgb(225,33,4)" fg:x="26049" fg:w="33"/><text x="22.6043%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 0.03%)</title><rect x="22.3551%" y="453" width="0.0275%" height="15" fill="rgb(224,33,50)" fg:x="26050" fg:w="32"/><text x="22.6051%" y="463.50"></text></g><g><title>__rg_dealloc (32 samples, 0.03%)</title><rect x="22.3551%" y="437" width="0.0275%" height="15" fill="rgb(246,198,51)" fg:x="26050" fg:w="32"/><text x="22.6051%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (32 samples, 0.03%)</title><rect x="22.3551%" y="421" width="0.0275%" height="15" fill="rgb(205,22,4)" fg:x="26050" fg:w="32"/><text x="22.6051%" y="431.50"></text></g><g><title>sn_rust_dealloc (29 samples, 0.02%)</title><rect x="22.3577%" y="405" width="0.0249%" height="15" fill="rgb(206,3,8)" fg:x="26053" fg:w="29"/><text x="22.6077%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (34 samples, 0.03%)</title><rect x="22.3543%" y="517" width="0.0292%" height="15" fill="rgb(251,23,15)" fg:x="26049" fg:w="34"/><text x="22.6043%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (34 samples, 0.03%)</title><rect x="22.3543%" y="501" width="0.0292%" height="15" fill="rgb(252,88,28)" fg:x="26049" fg:w="34"/><text x="22.6043%" y="511.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (608 samples, 0.52%)</title><rect x="21.8694%" y="533" width="0.5218%" height="15" fill="rgb(212,127,14)" fg:x="25484" fg:w="608"/><text x="22.1194%" y="543.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (62 samples, 0.05%)</title><rect x="22.5602%" y="389" width="0.0532%" height="15" fill="rgb(247,145,37)" fg:x="26289" fg:w="62"/><text x="22.8102%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (267 samples, 0.23%)</title><rect x="22.3912%" y="517" width="0.2291%" height="15" fill="rgb(209,117,53)" fg:x="26092" fg:w="267"/><text x="22.6412%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (114 samples, 0.10%)</title><rect x="22.5225%" y="501" width="0.0978%" height="15" fill="rgb(212,90,42)" fg:x="26245" fg:w="114"/><text x="22.7725%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (114 samples, 0.10%)</title><rect x="22.5225%" y="485" width="0.0978%" height="15" fill="rgb(218,164,37)" fg:x="26245" fg:w="114"/><text x="22.7725%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (114 samples, 0.10%)</title><rect x="22.5225%" y="469" width="0.0978%" height="15" fill="rgb(246,65,34)" fg:x="26245" fg:w="114"/><text x="22.7725%" y="479.50"></text></g><g><title>alloc::alloc::alloc (114 samples, 0.10%)</title><rect x="22.5225%" y="453" width="0.0978%" height="15" fill="rgb(231,100,33)" fg:x="26245" fg:w="114"/><text x="22.7725%" y="463.50"></text></g><g><title>__rg_alloc (114 samples, 0.10%)</title><rect x="22.5225%" y="437" width="0.0978%" height="15" fill="rgb(228,126,14)" fg:x="26245" fg:w="114"/><text x="22.7725%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (114 samples, 0.10%)</title><rect x="22.5225%" y="421" width="0.0978%" height="15" fill="rgb(215,173,21)" fg:x="26245" fg:w="114"/><text x="22.7725%" y="431.50"></text></g><g><title>sn_rust_alloc (106 samples, 0.09%)</title><rect x="22.5293%" y="405" width="0.0910%" height="15" fill="rgb(210,6,40)" fg:x="26253" fg:w="106"/><text x="22.7793%" y="415.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (268 samples, 0.23%)</title><rect x="22.3912%" y="533" width="0.2300%" height="15" fill="rgb(212,48,18)" fg:x="26092" fg:w="268"/><text x="22.6412%" y="543.50"></text></g><g><title>[libc-2.31.so] (163 samples, 0.14%)</title><rect x="22.6212%" y="533" width="0.1399%" height="15" fill="rgb(230,214,11)" fg:x="26360" fg:w="163"/><text x="22.8712%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,193 samples, 2.74%)</title><rect x="20.0381%" y="549" width="2.7401%" height="15" fill="rgb(254,105,39)" fg:x="23350" fg:w="3193"/><text x="20.2881%" y="559.50">tr..</text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (12 samples, 0.01%)</title><rect x="23.0314%" y="533" width="0.0103%" height="15" fill="rgb(245,158,5)" fg:x="26838" fg:w="12"/><text x="23.2814%" y="543.50"></text></g><g><title>[libc-2.31.so] (314 samples, 0.27%)</title><rect x="23.0606%" y="517" width="0.2695%" height="15" fill="rgb(249,208,11)" fg:x="26872" fg:w="314"/><text x="23.3106%" y="527.50"></text></g><g><title>[libc-2.31.so] (440 samples, 0.38%)</title><rect x="23.4021%" y="501" width="0.3776%" height="15" fill="rgb(210,39,28)" fg:x="27270" fg:w="440"/><text x="23.6521%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (172 samples, 0.15%)</title><rect x="23.7797%" y="501" width="0.1476%" height="15" fill="rgb(211,56,53)" fg:x="27710" fg:w="172"/><text x="24.0297%" y="511.50"></text></g><g><title>core::ptr::write (167 samples, 0.14%)</title><rect x="23.7840%" y="485" width="0.1433%" height="15" fill="rgb(226,201,30)" fg:x="27715" fg:w="167"/><text x="24.0340%" y="495.50"></text></g><g><title>[libc-2.31.so] (167 samples, 0.14%)</title><rect x="23.7840%" y="469" width="0.1433%" height="15" fill="rgb(239,101,34)" fg:x="27715" fg:w="167"/><text x="24.0340%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="23.9273%" y="501" width="0.0112%" height="15" fill="rgb(226,209,5)" fg:x="27882" fg:w="13"/><text x="24.1773%" y="511.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (448 samples, 0.38%)</title><rect x="23.9419%" y="501" width="0.3845%" height="15" fill="rgb(250,105,47)" fg:x="27899" fg:w="448"/><text x="24.1919%" y="511.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (443 samples, 0.38%)</title><rect x="23.9462%" y="485" width="0.3802%" height="15" fill="rgb(230,72,3)" fg:x="27904" fg:w="443"/><text x="24.1962%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (427 samples, 0.37%)</title><rect x="23.9599%" y="469" width="0.3664%" height="15" fill="rgb(232,218,39)" fg:x="27920" fg:w="427"/><text x="24.2099%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (427 samples, 0.37%)</title><rect x="23.9599%" y="453" width="0.3664%" height="15" fill="rgb(248,166,6)" fg:x="27920" fg:w="427"/><text x="24.2099%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (427 samples, 0.37%)</title><rect x="23.9599%" y="437" width="0.3664%" height="15" fill="rgb(247,89,20)" fg:x="27920" fg:w="427"/><text x="24.2099%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (427 samples, 0.37%)</title><rect x="23.9599%" y="421" width="0.3664%" height="15" fill="rgb(248,130,54)" fg:x="27920" fg:w="427"/><text x="24.2099%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (427 samples, 0.37%)</title><rect x="23.9599%" y="405" width="0.3664%" height="15" fill="rgb(234,196,4)" fg:x="27920" fg:w="427"/><text x="24.2099%" y="415.50"></text></g><g><title>[libc-2.31.so] (420 samples, 0.36%)</title><rect x="23.9659%" y="389" width="0.3604%" height="15" fill="rgb(250,143,31)" fg:x="27927" fg:w="420"/><text x="24.2159%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="25.1322%" y="469" width="0.0163%" height="15" fill="rgb(211,110,34)" fg:x="29286" fg:w="19"/><text x="25.3822%" y="479.50"></text></g><g><title>&lt;tremor_pipeline::executable_graph::OperatorNode as tremor_pipeline::op::Operator&gt;::on_event (354 samples, 0.30%)</title><rect x="25.1485%" y="469" width="0.3038%" height="15" fill="rgb(215,124,48)" fg:x="29305" fg:w="354"/><text x="25.3985%" y="479.50"></text></g><g><title>[libc-2.31.so] (290 samples, 0.25%)</title><rect x="25.2034%" y="453" width="0.2489%" height="15" fill="rgb(216,46,13)" fg:x="29369" fg:w="290"/><text x="25.4534%" y="463.50"></text></g><g><title>[libc-2.31.so] (140 samples, 0.12%)</title><rect x="25.4523%" y="469" width="0.1201%" height="15" fill="rgb(205,184,25)" fg:x="29659" fg:w="140"/><text x="25.7023%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (920 samples, 0.79%)</title><rect x="25.5733%" y="469" width="0.7895%" height="15" fill="rgb(228,1,10)" fg:x="29800" fg:w="920"/><text x="25.8233%" y="479.50"></text></g><g><title>core::ptr::read (890 samples, 0.76%)</title><rect x="25.5990%" y="453" width="0.7638%" height="15" fill="rgb(213,116,27)" fg:x="29830" fg:w="890"/><text x="25.8490%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (171 samples, 0.15%)</title><rect x="26.3628%" y="469" width="0.1467%" height="15" fill="rgb(241,95,50)" fg:x="30720" fg:w="171"/><text x="26.6128%" y="479.50"></text></g><g><title>core::ptr::write (160 samples, 0.14%)</title><rect x="26.3722%" y="453" width="0.1373%" height="15" fill="rgb(238,48,32)" fg:x="30731" fg:w="160"/><text x="26.6222%" y="463.50"></text></g><g><title>[libc-2.31.so] (158 samples, 0.14%)</title><rect x="26.3739%" y="437" width="0.1356%" height="15" fill="rgb(235,113,49)" fg:x="30733" fg:w="158"/><text x="26.6239%" y="447.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (21 samples, 0.02%)</title><rect x="26.5421%" y="437" width="0.0180%" height="15" fill="rgb(205,127,43)" fg:x="30929" fg:w="21"/><text x="26.7921%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;tremor_pipeline::event::Event,alloc::alloc::Global&gt;&gt; (13 samples, 0.01%)</title><rect x="26.5601%" y="437" width="0.0112%" height="15" fill="rgb(250,162,2)" fg:x="30950" fg:w="13"/><text x="26.8101%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="26.5601%" y="421" width="0.0112%" height="15" fill="rgb(220,13,41)" fg:x="30950" fg:w="13"/><text x="26.8101%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;tremor_pipeline::event::Event&gt;&gt; (86 samples, 0.07%)</title><rect x="26.5095%" y="469" width="0.0738%" height="15" fill="rgb(249,221,25)" fg:x="30891" fg:w="86"/><text x="26.7595%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.05%)</title><rect x="26.5301%" y="453" width="0.0532%" height="15" fill="rgb(215,208,19)" fg:x="30915" fg:w="62"/><text x="26.7801%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[tremor_pipeline::event::Event]&gt; (14 samples, 0.01%)</title><rect x="26.5713%" y="437" width="0.0120%" height="15" fill="rgb(236,175,2)" fg:x="30963" fg:w="14"/><text x="26.8213%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (26 samples, 0.02%)</title><rect x="26.5902%" y="469" width="0.0223%" height="15" fill="rgb(241,52,2)" fg:x="30985" fg:w="26"/><text x="26.8402%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (26 samples, 0.02%)</title><rect x="26.5902%" y="453" width="0.0223%" height="15" fill="rgb(248,140,14)" fg:x="30985" fg:w="26"/><text x="26.8402%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (26 samples, 0.02%)</title><rect x="26.5902%" y="437" width="0.0223%" height="15" fill="rgb(253,22,42)" fg:x="30985" fg:w="26"/><text x="26.8402%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (26 samples, 0.02%)</title><rect x="26.5902%" y="421" width="0.0223%" height="15" fill="rgb(234,61,47)" fg:x="30985" fg:w="26"/><text x="26.8402%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.01%)</title><rect x="27.0218%" y="453" width="0.0112%" height="15" fill="rgb(208,226,15)" fg:x="31488" fg:w="13"/><text x="27.2718%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.09%)</title><rect x="27.0330%" y="453" width="0.0892%" height="15" fill="rgb(217,221,4)" fg:x="31501" fg:w="104"/><text x="27.2830%" y="463.50"></text></g><g><title>core::ptr::read (67 samples, 0.06%)</title><rect x="27.0647%" y="437" width="0.0575%" height="15" fill="rgb(212,174,34)" fg:x="31538" fg:w="67"/><text x="27.3147%" y="447.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="27.1222%" y="453" width="0.0120%" height="15" fill="rgb(253,83,4)" fg:x="31605" fg:w="14"/><text x="27.3722%" y="463.50"></text></g><g><title>[libc-2.31.so] (180 samples, 0.15%)</title><rect x="27.1343%" y="453" width="0.1545%" height="15" fill="rgb(250,195,49)" fg:x="31619" fg:w="180"/><text x="27.3843%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (396 samples, 0.34%)</title><rect x="27.2887%" y="453" width="0.3398%" height="15" fill="rgb(241,192,25)" fg:x="31799" fg:w="396"/><text x="27.5387%" y="463.50"></text></g><g><title>core::ptr::write (364 samples, 0.31%)</title><rect x="27.3162%" y="437" width="0.3124%" height="15" fill="rgb(208,124,10)" fg:x="31831" fg:w="364"/><text x="27.5662%" y="447.50"></text></g><g><title>[libc-2.31.so] (354 samples, 0.30%)</title><rect x="27.3248%" y="421" width="0.3038%" height="15" fill="rgb(222,33,0)" fg:x="31841" fg:w="354"/><text x="27.5748%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (18 samples, 0.02%)</title><rect x="27.6286%" y="453" width="0.0154%" height="15" fill="rgb(234,209,28)" fg:x="32195" fg:w="18"/><text x="27.8786%" y="463.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue_events::{{closure}} (18 samples, 0.02%)</title><rect x="27.6286%" y="437" width="0.0154%" height="15" fill="rgb(224,11,23)" fg:x="32195" fg:w="18"/><text x="27.8786%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last (17 samples, 0.01%)</title><rect x="27.6294%" y="421" width="0.0146%" height="15" fill="rgb(232,99,1)" fg:x="32196" fg:w="17"/><text x="27.8794%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;)&gt; (12 samples, 0.01%)</title><rect x="27.6440%" y="453" width="0.0103%" height="15" fill="rgb(237,95,45)" fg:x="32213" fg:w="12"/><text x="27.8940%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (12 samples, 0.01%)</title><rect x="27.6440%" y="437" width="0.0103%" height="15" fill="rgb(208,109,11)" fg:x="32213" fg:w="12"/><text x="27.8940%" y="447.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="27.6440%" y="421" width="0.0103%" height="15" fill="rgb(216,190,48)" fg:x="32213" fg:w="12"/><text x="27.8940%" y="431.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (25 samples, 0.02%)</title><rect x="27.6663%" y="421" width="0.0215%" height="15" fill="rgb(251,171,36)" fg:x="32239" fg:w="25"/><text x="27.9163%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="27.7006%" y="357" width="0.0163%" height="15" fill="rgb(230,62,22)" fg:x="32279" fg:w="19"/><text x="27.9506%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="27.7006%" y="341" width="0.0163%" height="15" fill="rgb(225,114,35)" fg:x="32279" fg:w="19"/><text x="27.9506%" y="351.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="27.7006%" y="325" width="0.0163%" height="15" fill="rgb(215,118,42)" fg:x="32279" fg:w="19"/><text x="27.9506%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="27.7006%" y="309" width="0.0163%" height="15" fill="rgb(243,119,21)" fg:x="32279" fg:w="19"/><text x="27.9506%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (35 samples, 0.03%)</title><rect x="27.6878%" y="421" width="0.0300%" height="15" fill="rgb(252,177,53)" fg:x="32264" fg:w="35"/><text x="27.9378%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="27.6878%" y="405" width="0.0300%" height="15" fill="rgb(237,209,29)" fg:x="32264" fg:w="35"/><text x="27.9378%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (20 samples, 0.02%)</title><rect x="27.7006%" y="389" width="0.0172%" height="15" fill="rgb(212,65,23)" fg:x="32279" fg:w="20"/><text x="27.9506%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="27.7006%" y="373" width="0.0172%" height="15" fill="rgb(230,222,46)" fg:x="32279" fg:w="20"/><text x="27.9506%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.08%)</title><rect x="27.6663%" y="437" width="0.0755%" height="15" fill="rgb(215,135,32)" fg:x="32239" fg:w="88"/><text x="27.9163%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)]&gt; (28 samples, 0.02%)</title><rect x="27.7178%" y="421" width="0.0240%" height="15" fill="rgb(246,101,22)" fg:x="32299" fg:w="28"/><text x="27.9678%" y="431.50"></text></g><g><title>sn_rust_dealloc (72 samples, 0.06%)</title><rect x="27.7418%" y="437" width="0.0618%" height="15" fill="rgb(206,107,13)" fg:x="32327" fg:w="72"/><text x="27.9918%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (194 samples, 0.17%)</title><rect x="27.6543%" y="453" width="0.1665%" height="15" fill="rgb(250,100,44)" fg:x="32225" fg:w="194"/><text x="27.9043%" y="463.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (20 samples, 0.02%)</title><rect x="27.8036%" y="437" width="0.0172%" height="15" fill="rgb(231,147,38)" fg:x="32399" fg:w="20"/><text x="28.0536%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.07%)</title><rect x="27.8319%" y="421" width="0.0704%" height="15" fill="rgb(229,8,40)" fg:x="32432" fg:w="82"/><text x="28.0819%" y="431.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (36 samples, 0.03%)</title><rect x="27.8714%" y="405" width="0.0309%" height="15" fill="rgb(221,135,30)" fg:x="32478" fg:w="36"/><text x="28.1214%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (36 samples, 0.03%)</title><rect x="27.8714%" y="389" width="0.0309%" height="15" fill="rgb(249,193,18)" fg:x="32478" fg:w="36"/><text x="28.1214%" y="399.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (116 samples, 0.10%)</title><rect x="27.9289%" y="389" width="0.0995%" height="15" fill="rgb(209,133,39)" fg:x="32545" fg:w="116"/><text x="28.1789%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (116 samples, 0.10%)</title><rect x="27.9289%" y="373" width="0.0995%" height="15" fill="rgb(232,100,14)" fg:x="32545" fg:w="116"/><text x="28.1789%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (116 samples, 0.10%)</title><rect x="27.9289%" y="357" width="0.0995%" height="15" fill="rgb(224,185,1)" fg:x="32545" fg:w="116"/><text x="28.1789%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (116 samples, 0.10%)</title><rect x="27.9289%" y="341" width="0.0995%" height="15" fill="rgb(223,139,8)" fg:x="32545" fg:w="116"/><text x="28.1789%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (116 samples, 0.10%)</title><rect x="27.9289%" y="325" width="0.0995%" height="15" fill="rgb(232,213,38)" fg:x="32545" fg:w="116"/><text x="28.1789%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (116 samples, 0.10%)</title><rect x="27.9289%" y="309" width="0.0995%" height="15" fill="rgb(207,94,22)" fg:x="32545" fg:w="116"/><text x="28.1789%" y="319.50"></text></g><g><title>[libc-2.31.so] (79 samples, 0.07%)</title><rect x="27.9607%" y="293" width="0.0678%" height="15" fill="rgb(219,183,54)" fg:x="32582" fg:w="79"/><text x="28.2107%" y="303.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (237 samples, 0.20%)</title><rect x="27.8276%" y="453" width="0.2034%" height="15" fill="rgb(216,185,54)" fg:x="32427" fg:w="237"/><text x="28.0776%" y="463.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (232 samples, 0.20%)</title><rect x="27.8319%" y="437" width="0.1991%" height="15" fill="rgb(254,217,39)" fg:x="32432" fg:w="232"/><text x="28.0819%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (150 samples, 0.13%)</title><rect x="27.9023%" y="421" width="0.1287%" height="15" fill="rgb(240,178,23)" fg:x="32514" fg:w="150"/><text x="28.1523%" y="431.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (K,L)&gt;::eq (150 samples, 0.13%)</title><rect x="27.9023%" y="405" width="0.1287%" height="15" fill="rgb(218,11,47)" fg:x="32514" fg:w="150"/><text x="28.1523%" y="415.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry_mut (33 samples, 0.03%)</title><rect x="28.0448%" y="421" width="0.0283%" height="15" fill="rgb(218,51,51)" fg:x="32680" fg:w="33"/><text x="28.2948%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (19 samples, 0.02%)</title><rect x="28.0911%" y="405" width="0.0163%" height="15" fill="rgb(238,126,27)" fg:x="32734" fg:w="19"/><text x="28.3411%" y="415.50"></text></g><g><title>&lt;halfbrown::raw_entry::RawEntryMut&lt;K,V,S&gt; as core::convert::From&lt;halfbrown::vecmap::raw_entry::RawEntryMut&lt;K,V,S&gt;&gt;&gt;::from (19 samples, 0.02%)</title><rect x="28.0911%" y="389" width="0.0163%" height="15" fill="rgb(249,202,22)" fg:x="32734" fg:w="19"/><text x="28.3411%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="28.1168%" y="341" width="0.0154%" height="15" fill="rgb(254,195,49)" fg:x="32764" fg:w="18"/><text x="28.3668%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="28.1168%" y="325" width="0.0154%" height="15" fill="rgb(208,123,14)" fg:x="32764" fg:w="18"/><text x="28.3668%" y="335.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (21 samples, 0.02%)</title><rect x="28.1323%" y="309" width="0.0180%" height="15" fill="rgb(224,200,8)" fg:x="32782" fg:w="21"/><text x="28.3823%" y="319.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (204 samples, 0.18%)</title><rect x="28.0731%" y="421" width="0.1751%" height="15" fill="rgb(217,61,36)" fg:x="32713" fg:w="204"/><text x="28.3231%" y="431.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (164 samples, 0.14%)</title><rect x="28.1074%" y="405" width="0.1407%" height="15" fill="rgb(206,35,45)" fg:x="32753" fg:w="164"/><text x="28.3574%" y="415.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (164 samples, 0.14%)</title><rect x="28.1074%" y="389" width="0.1407%" height="15" fill="rgb(217,65,33)" fg:x="32753" fg:w="164"/><text x="28.3574%" y="399.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (164 samples, 0.14%)</title><rect x="28.1074%" y="373" width="0.1407%" height="15" fill="rgb(222,158,48)" fg:x="32753" fg:w="164"/><text x="28.3574%" y="383.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::search (164 samples, 0.14%)</title><rect x="28.1074%" y="357" width="0.1407%" height="15" fill="rgb(254,2,54)" fg:x="32753" fg:w="164"/><text x="28.3574%" y="367.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (135 samples, 0.12%)</title><rect x="28.1323%" y="341" width="0.1159%" height="15" fill="rgb(250,143,38)" fg:x="32782" fg:w="135"/><text x="28.3823%" y="351.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (135 samples, 0.12%)</title><rect x="28.1323%" y="325" width="0.1159%" height="15" fill="rgb(248,25,0)" fg:x="32782" fg:w="135"/><text x="28.3823%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (114 samples, 0.10%)</title><rect x="28.1503%" y="309" width="0.0978%" height="15" fill="rgb(206,152,27)" fg:x="32803" fg:w="114"/><text x="28.4003%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (114 samples, 0.10%)</title><rect x="28.1503%" y="293" width="0.0978%" height="15" fill="rgb(240,77,30)" fg:x="32803" fg:w="114"/><text x="28.4003%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (114 samples, 0.10%)</title><rect x="28.1503%" y="277" width="0.0978%" height="15" fill="rgb(231,5,3)" fg:x="32803" fg:w="114"/><text x="28.4003%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (114 samples, 0.10%)</title><rect x="28.1503%" y="261" width="0.0978%" height="15" fill="rgb(207,226,32)" fg:x="32803" fg:w="114"/><text x="28.4003%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (114 samples, 0.10%)</title><rect x="28.1503%" y="245" width="0.0978%" height="15" fill="rgb(222,207,47)" fg:x="32803" fg:w="114"/><text x="28.4003%" y="255.50"></text></g><g><title>[libc-2.31.so] (65 samples, 0.06%)</title><rect x="28.1924%" y="229" width="0.0558%" height="15" fill="rgb(229,115,45)" fg:x="32852" fg:w="65"/><text x="28.4424%" y="239.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue_events (1,968 samples, 1.69%)</title><rect x="26.6125%" y="469" width="1.6889%" height="15" fill="rgb(224,191,6)" fg:x="31011" fg:w="1968"/><text x="26.8625%" y="479.50"></text></g><g><title>tremor_pipeline::executable_graph::NodeMetrics::inc_input (315 samples, 0.27%)</title><rect x="28.0310%" y="453" width="0.2703%" height="15" fill="rgb(230,227,24)" fg:x="32664" fg:w="315"/><text x="28.2810%" y="463.50"></text></g><g><title>tremor_pipeline::executable_graph::NodeMetrics::inc_input_n (315 samples, 0.27%)</title><rect x="28.0310%" y="437" width="0.2703%" height="15" fill="rgb(228,80,19)" fg:x="32664" fg:w="315"/><text x="28.2810%" y="447.50"></text></g><g><title>halfbrown::raw_entry::RawEntryMut&lt;K,V,S&gt;::or_insert_with (62 samples, 0.05%)</title><rect x="28.2481%" y="421" width="0.0532%" height="15" fill="rgb(247,229,0)" fg:x="32917" fg:w="62"/><text x="28.4981%" y="431.50"></text></g><g><title>halfbrown::raw_entry::RawOccupiedEntryMut&lt;K,V,S&gt;::into_key_value (31 samples, 0.03%)</title><rect x="28.2747%" y="405" width="0.0266%" height="15" fill="rgb(237,194,15)" fg:x="32948" fg:w="31"/><text x="28.5247%" y="415.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawOccupiedEntryMut&lt;K,V,S&gt;::into_key_value (14 samples, 0.01%)</title><rect x="28.2893%" y="389" width="0.0120%" height="15" fill="rgb(219,203,20)" fg:x="32965" fg:w="14"/><text x="28.5393%" y="399.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut_idx (14 samples, 0.01%)</title><rect x="28.2893%" y="373" width="0.0120%" height="15" fill="rgb(234,128,8)" fg:x="32965" fg:w="14"/><text x="28.5393%" y="383.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry_mut (35 samples, 0.03%)</title><rect x="28.3340%" y="437" width="0.0300%" height="15" fill="rgb(248,202,8)" fg:x="33017" fg:w="35"/><text x="28.5840%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (24 samples, 0.02%)</title><rect x="28.3889%" y="421" width="0.0206%" height="15" fill="rgb(206,104,37)" fg:x="33081" fg:w="24"/><text x="28.6389%" y="431.50"></text></g><g><title>&lt;halfbrown::raw_entry::RawEntryMut&lt;K,V,S&gt; as core::convert::From&lt;halfbrown::vecmap::raw_entry::RawEntryMut&lt;K,V,S&gt;&gt;&gt;::from (24 samples, 0.02%)</title><rect x="28.3889%" y="405" width="0.0206%" height="15" fill="rgb(223,8,27)" fg:x="33081" fg:w="24"/><text x="28.6389%" y="415.50"></text></g><g><title>halfbrown::raw_entry::RawEntryMut::Occupied (15 samples, 0.01%)</title><rect x="28.3966%" y="389" width="0.0129%" height="15" fill="rgb(216,217,28)" fg:x="33090" fg:w="15"/><text x="28.6466%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.01%)</title><rect x="28.4112%" y="357" width="0.0146%" height="15" fill="rgb(249,199,1)" fg:x="33107" fg:w="17"/><text x="28.6612%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (17 samples, 0.01%)</title><rect x="28.4112%" y="341" width="0.0146%" height="15" fill="rgb(240,85,17)" fg:x="33107" fg:w="17"/><text x="28.6612%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="28.4258%" y="357" width="0.0189%" height="15" fill="rgb(206,108,45)" fg:x="33124" fg:w="22"/><text x="28.6758%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="28.4258%" y="341" width="0.0189%" height="15" fill="rgb(245,210,41)" fg:x="33124" fg:w="22"/><text x="28.6758%" y="351.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (190 samples, 0.16%)</title><rect x="28.3640%" y="437" width="0.1631%" height="15" fill="rgb(206,13,37)" fg:x="33052" fg:w="190"/><text x="28.6140%" y="447.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (137 samples, 0.12%)</title><rect x="28.4095%" y="421" width="0.1176%" height="15" fill="rgb(250,61,18)" fg:x="33105" fg:w="137"/><text x="28.6595%" y="431.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (137 samples, 0.12%)</title><rect x="28.4095%" y="405" width="0.1176%" height="15" fill="rgb(235,172,48)" fg:x="33105" fg:w="137"/><text x="28.6595%" y="415.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (137 samples, 0.12%)</title><rect x="28.4095%" y="389" width="0.1176%" height="15" fill="rgb(249,201,17)" fg:x="33105" fg:w="137"/><text x="28.6595%" y="399.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::search (137 samples, 0.12%)</title><rect x="28.4095%" y="373" width="0.1176%" height="15" fill="rgb(219,208,6)" fg:x="33105" fg:w="137"/><text x="28.6595%" y="383.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (96 samples, 0.08%)</title><rect x="28.4447%" y="357" width="0.0824%" height="15" fill="rgb(248,31,23)" fg:x="33146" fg:w="96"/><text x="28.6947%" y="367.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (96 samples, 0.08%)</title><rect x="28.4447%" y="341" width="0.0824%" height="15" fill="rgb(245,15,42)" fg:x="33146" fg:w="96"/><text x="28.6947%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (93 samples, 0.08%)</title><rect x="28.4472%" y="325" width="0.0798%" height="15" fill="rgb(222,217,39)" fg:x="33149" fg:w="93"/><text x="28.6972%" y="335.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (93 samples, 0.08%)</title><rect x="28.4472%" y="309" width="0.0798%" height="15" fill="rgb(210,219,27)" fg:x="33149" fg:w="93"/><text x="28.6972%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (93 samples, 0.08%)</title><rect x="28.4472%" y="293" width="0.0798%" height="15" fill="rgb(252,166,36)" fg:x="33149" fg:w="93"/><text x="28.6972%" y="303.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (93 samples, 0.08%)</title><rect x="28.4472%" y="277" width="0.0798%" height="15" fill="rgb(245,132,34)" fg:x="33149" fg:w="93"/><text x="28.6972%" y="287.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (93 samples, 0.08%)</title><rect x="28.4472%" y="261" width="0.0798%" height="15" fill="rgb(236,54,3)" fg:x="33149" fg:w="93"/><text x="28.6972%" y="271.50"></text></g><g><title>[libc-2.31.so] (59 samples, 0.05%)</title><rect x="28.4764%" y="245" width="0.0506%" height="15" fill="rgb(241,173,43)" fg:x="33183" fg:w="59"/><text x="28.7264%" y="255.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (6,098 samples, 5.23%)</title><rect x="23.3300%" y="517" width="5.2331%" height="15" fill="rgb(215,190,9)" fg:x="27186" fg:w="6098"/><text x="23.5800%" y="527.50">tremor..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (4,937 samples, 4.24%)</title><rect x="24.3263%" y="501" width="4.2367%" height="15" fill="rgb(242,101,16)" fg:x="28347" fg:w="4937"/><text x="24.5763%" y="511.50">tremo..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (4,911 samples, 4.21%)</title><rect x="24.3487%" y="485" width="4.2144%" height="15" fill="rgb(223,190,21)" fg:x="28373" fg:w="4911"/><text x="24.5987%" y="495.50">tremo..</text></g><g><title>tremor_pipeline::executable_graph::NodeMetrics::inc_output (302 samples, 0.26%)</title><rect x="28.3039%" y="469" width="0.2592%" height="15" fill="rgb(215,228,25)" fg:x="32982" fg:w="302"/><text x="28.5539%" y="479.50"></text></g><g><title>tremor_pipeline::executable_graph::NodeMetrics::inc_output_n (290 samples, 0.25%)</title><rect x="28.3142%" y="453" width="0.2489%" height="15" fill="rgb(225,36,22)" fg:x="32994" fg:w="290"/><text x="28.5642%" y="463.50"></text></g><g><title>halfbrown::raw_entry::RawEntryMut&lt;K,V,S&gt;::or_insert_with (42 samples, 0.04%)</title><rect x="28.5270%" y="437" width="0.0360%" height="15" fill="rgb(251,106,46)" fg:x="33242" fg:w="42"/><text x="28.7770%" y="447.50"></text></g><g><title>halfbrown::raw_entry::RawOccupiedEntryMut&lt;K,V,S&gt;::into_key_value (20 samples, 0.02%)</title><rect x="28.5459%" y="421" width="0.0172%" height="15" fill="rgb(208,90,1)" fg:x="33264" fg:w="20"/><text x="28.7959%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,451 samples, 5.54%)</title><rect x="23.0485%" y="533" width="5.5360%" height="15" fill="rgb(243,10,4)" fg:x="26858" fg:w="6451"/><text x="23.2985%" y="543.50">&lt;core::..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (25 samples, 0.02%)</title><rect x="28.5631%" y="517" width="0.0215%" height="15" fill="rgb(212,137,27)" fg:x="33284" fg:w="25"/><text x="28.8131%" y="527.50"></text></g><g><title>[libc-2.31.so] (801 samples, 0.69%)</title><rect x="28.5845%" y="533" width="0.6874%" height="15" fill="rgb(231,220,49)" fg:x="33309" fg:w="801"/><text x="28.8345%" y="543.50"></text></g><g><title>sn_rust_dealloc (95 samples, 0.08%)</title><rect x="29.2779%" y="373" width="0.0815%" height="15" fill="rgb(237,96,20)" fg:x="34117" fg:w="95"/><text x="29.5279%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (103 samples, 0.09%)</title><rect x="29.2728%" y="533" width="0.0884%" height="15" fill="rgb(239,229,30)" fg:x="34111" fg:w="103"/><text x="29.5228%" y="543.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (103 samples, 0.09%)</title><rect x="29.2728%" y="517" width="0.0884%" height="15" fill="rgb(219,65,33)" fg:x="34111" fg:w="103"/><text x="29.5228%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (97 samples, 0.08%)</title><rect x="29.2779%" y="501" width="0.0832%" height="15" fill="rgb(243,134,7)" fg:x="34117" fg:w="97"/><text x="29.5279%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (97 samples, 0.08%)</title><rect x="29.2779%" y="485" width="0.0832%" height="15" fill="rgb(216,177,54)" fg:x="34117" fg:w="97"/><text x="29.5279%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (97 samples, 0.08%)</title><rect x="29.2779%" y="469" width="0.0832%" height="15" fill="rgb(211,160,20)" fg:x="34117" fg:w="97"/><text x="29.5279%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.08%)</title><rect x="29.2779%" y="453" width="0.0832%" height="15" fill="rgb(239,85,39)" fg:x="34117" fg:w="97"/><text x="29.5279%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (97 samples, 0.08%)</title><rect x="29.2779%" y="437" width="0.0832%" height="15" fill="rgb(232,125,22)" fg:x="34117" fg:w="97"/><text x="29.5279%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (97 samples, 0.08%)</title><rect x="29.2779%" y="421" width="0.0832%" height="15" fill="rgb(244,57,34)" fg:x="34117" fg:w="97"/><text x="29.5279%" y="431.50"></text></g><g><title>__rg_dealloc (97 samples, 0.08%)</title><rect x="29.2779%" y="405" width="0.0832%" height="15" fill="rgb(214,203,32)" fg:x="34117" fg:w="97"/><text x="29.5279%" y="415.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (97 samples, 0.08%)</title><rect x="29.2779%" y="389" width="0.0832%" height="15" fill="rgb(207,58,43)" fg:x="34117" fg:w="97"/><text x="29.5279%" y="399.50"></text></g><g><title>async_global_executor::reactor::block_on (15,973 samples, 13.71%)</title><rect x="15.6580%" y="885" width="13.7074%" height="15" fill="rgb(215,193,15)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="895.50">async_global_executor..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (15,973 samples, 13.71%)</title><rect x="15.6580%" y="869" width="13.7074%" height="15" fill="rgb(232,15,44)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="879.50">async_global_executor..</text></g><g><title>async_io::driver::block_on (15,973 samples, 13.71%)</title><rect x="15.6580%" y="853" width="13.7074%" height="15" fill="rgb(212,3,48)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="863.50">async_io::driver::blo..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (15,973 samples, 13.71%)</title><rect x="15.6580%" y="837" width="13.7074%" height="15" fill="rgb(218,128,7)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="847.50">&lt;futures_lite::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,973 samples, 13.71%)</title><rect x="15.6580%" y="821" width="13.7074%" height="15" fill="rgb(226,216,39)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="831.50">&lt;core::future::from_g..</text></g><g><title>async_executor::Executor::run::{{closure}} (15,973 samples, 13.71%)</title><rect x="15.6580%" y="805" width="13.7074%" height="15" fill="rgb(243,47,51)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="815.50">async_executor::Execu..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (15,973 samples, 13.71%)</title><rect x="15.6580%" y="789" width="13.7074%" height="15" fill="rgb(241,183,40)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="799.50">&lt;futures_lite::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,973 samples, 13.71%)</title><rect x="15.6580%" y="773" width="13.7074%" height="15" fill="rgb(231,217,32)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="783.50">&lt;core::future::from_g..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (15,973 samples, 13.71%)</title><rect x="15.6580%" y="757" width="13.7074%" height="15" fill="rgb(229,61,38)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="767.50">async_executor::Execu..</text></g><g><title>async_task::runnable::Runnable::run (15,973 samples, 13.71%)</title><rect x="15.6580%" y="741" width="13.7074%" height="15" fill="rgb(225,210,5)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="751.50">async_task::runnable:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (15,973 samples, 13.71%)</title><rect x="15.6580%" y="725" width="13.7074%" height="15" fill="rgb(231,79,45)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="735.50">async_task::raw::RawT..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15,973 samples, 13.71%)</title><rect x="15.6580%" y="709" width="13.7074%" height="15" fill="rgb(224,100,7)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="719.50">&lt;core::pin::Pin&lt;P&gt; as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,973 samples, 13.71%)</title><rect x="15.6580%" y="693" width="13.7074%" height="15" fill="rgb(241,198,18)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="703.50">&lt;core::future::from_g..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (15,973 samples, 13.71%)</title><rect x="15.6580%" y="677" width="13.7074%" height="15" fill="rgb(252,97,53)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="687.50">async_executor::Execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (15,973 samples, 13.71%)</title><rect x="15.6580%" y="661" width="13.7074%" height="15" fill="rgb(220,88,7)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="671.50">&lt;async_std::task::bui..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (15,973 samples, 13.71%)</title><rect x="15.6580%" y="645" width="13.7074%" height="15" fill="rgb(213,176,14)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="655.50">async_std::task::task..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15,973 samples, 13.71%)</title><rect x="15.6580%" y="629" width="13.7074%" height="15" fill="rgb(246,73,7)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="639.50">std::thread::local::L..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15,973 samples, 13.71%)</title><rect x="15.6580%" y="613" width="13.7074%" height="15" fill="rgb(245,64,36)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="623.50">std::thread::local::L..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (15,973 samples, 13.71%)</title><rect x="15.6580%" y="597" width="13.7074%" height="15" fill="rgb(245,80,10)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="607.50">async_std::task::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (15,973 samples, 13.71%)</title><rect x="15.6580%" y="581" width="13.7074%" height="15" fill="rgb(232,107,50)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="591.50">&lt;async_std::task::bui..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,973 samples, 13.71%)</title><rect x="15.6580%" y="565" width="13.7074%" height="15" fill="rgb(253,3,0)" fg:x="18246" fg:w="15973"/><text x="15.9080%" y="575.50">&lt;core::future::from_g..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (7,676 samples, 6.59%)</title><rect x="22.7782%" y="549" width="6.5873%" height="15" fill="rgb(212,99,53)" fg:x="26543" fg:w="7676"/><text x="23.0282%" y="559.50">tremor_ru..</text></g><g><title>[libc-2.31.so] (321 samples, 0.28%)</title><rect x="29.4436%" y="341" width="0.2755%" height="15" fill="rgb(249,111,54)" fg:x="34310" fg:w="321"/><text x="29.6936%" y="351.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (345 samples, 0.30%)</title><rect x="29.4247%" y="357" width="0.2961%" height="15" fill="rgb(249,55,30)" fg:x="34288" fg:w="345"/><text x="29.6747%" y="367.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (560 samples, 0.48%)</title><rect x="29.3801%" y="373" width="0.4806%" height="15" fill="rgb(237,47,42)" fg:x="34236" fg:w="560"/><text x="29.6301%" y="383.50"></text></g><g><title>[libc-2.31.so] (163 samples, 0.14%)</title><rect x="29.7208%" y="357" width="0.1399%" height="15" fill="rgb(211,20,18)" fg:x="34633" fg:w="163"/><text x="29.9708%" y="367.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (584 samples, 0.50%)</title><rect x="29.3655%" y="405" width="0.5012%" height="15" fill="rgb(231,203,46)" fg:x="34219" fg:w="584"/><text x="29.6155%" y="415.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (584 samples, 0.50%)</title><rect x="29.3655%" y="389" width="0.5012%" height="15" fill="rgb(237,142,3)" fg:x="34219" fg:w="584"/><text x="29.6155%" y="399.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="32.4540%" y="357" width="0.0129%" height="15" fill="rgb(241,107,1)" fg:x="37818" fg:w="15"/><text x="32.7040%" y="367.50"></text></g><g><title>[libc-2.31.so] (188 samples, 0.16%)</title><rect x="32.4669%" y="357" width="0.1613%" height="15" fill="rgb(229,83,13)" fg:x="37833" fg:w="188"/><text x="32.7169%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (22 samples, 0.02%)</title><rect x="32.6316%" y="357" width="0.0189%" height="15" fill="rgb(241,91,40)" fg:x="38025" fg:w="22"/><text x="32.8816%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.02%)</title><rect x="32.6316%" y="341" width="0.0189%" height="15" fill="rgb(225,3,45)" fg:x="38025" fg:w="22"/><text x="32.8816%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (15 samples, 0.01%)</title><rect x="32.6505%" y="357" width="0.0129%" height="15" fill="rgb(244,223,14)" fg:x="38047" fg:w="15"/><text x="32.9005%" y="367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (15 samples, 0.01%)</title><rect x="32.6505%" y="341" width="0.0129%" height="15" fill="rgb(224,124,37)" fg:x="38047" fg:w="15"/><text x="32.9005%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.01%)</title><rect x="32.6505%" y="325" width="0.0129%" height="15" fill="rgb(251,171,30)" fg:x="38047" fg:w="15"/><text x="32.9005%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (15 samples, 0.01%)</title><rect x="32.6505%" y="309" width="0.0129%" height="15" fill="rgb(236,46,54)" fg:x="38047" fg:w="15"/><text x="32.9005%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::iter (13 samples, 0.01%)</title><rect x="32.6634%" y="357" width="0.0112%" height="15" fill="rgb(245,213,5)" fg:x="38062" fg:w="13"/><text x="32.9134%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (13 samples, 0.01%)</title><rect x="32.6634%" y="341" width="0.0112%" height="15" fill="rgb(230,144,27)" fg:x="38062" fg:w="13"/><text x="32.9134%" y="351.50"></text></g><g><title>sn_rust_dealloc (68 samples, 0.06%)</title><rect x="32.6934%" y="197" width="0.0584%" height="15" fill="rgb(220,86,6)" fg:x="38097" fg:w="68"/><text x="32.9434%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.10%)</title><rect x="32.6746%" y="341" width="0.0978%" height="15" fill="rgb(240,20,13)" fg:x="38075" fg:w="114"/><text x="32.9246%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (114 samples, 0.10%)</title><rect x="32.6746%" y="325" width="0.0978%" height="15" fill="rgb(217,89,34)" fg:x="38075" fg:w="114"/><text x="32.9246%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (106 samples, 0.09%)</title><rect x="32.6814%" y="309" width="0.0910%" height="15" fill="rgb(229,13,5)" fg:x="38083" fg:w="106"/><text x="32.9314%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (106 samples, 0.09%)</title><rect x="32.6814%" y="293" width="0.0910%" height="15" fill="rgb(244,67,35)" fg:x="38083" fg:w="106"/><text x="32.9314%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 0.09%)</title><rect x="32.6814%" y="277" width="0.0910%" height="15" fill="rgb(221,40,2)" fg:x="38083" fg:w="106"/><text x="32.9314%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (100 samples, 0.09%)</title><rect x="32.6866%" y="261" width="0.0858%" height="15" fill="rgb(237,157,21)" fg:x="38089" fg:w="100"/><text x="32.9366%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (100 samples, 0.09%)</title><rect x="32.6866%" y="245" width="0.0858%" height="15" fill="rgb(222,94,11)" fg:x="38089" fg:w="100"/><text x="32.9366%" y="255.50"></text></g><g><title>__rg_dealloc (100 samples, 0.09%)</title><rect x="32.6866%" y="229" width="0.0858%" height="15" fill="rgb(249,113,6)" fg:x="38089" fg:w="100"/><text x="32.9366%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (100 samples, 0.09%)</title><rect x="32.6866%" y="213" width="0.0858%" height="15" fill="rgb(238,137,36)" fg:x="38089" fg:w="100"/><text x="32.9366%" y="223.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (24 samples, 0.02%)</title><rect x="32.7518%" y="197" width="0.0206%" height="15" fill="rgb(210,102,26)" fg:x="38165" fg:w="24"/><text x="33.0018%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (63 samples, 0.05%)</title><rect x="32.7724%" y="309" width="0.0541%" height="15" fill="rgb(218,30,30)" fg:x="38189" fg:w="63"/><text x="33.0224%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (63 samples, 0.05%)</title><rect x="32.7724%" y="293" width="0.0541%" height="15" fill="rgb(214,67,26)" fg:x="38189" fg:w="63"/><text x="33.0224%" y="303.50"></text></g><g><title>__rg_dealloc (63 samples, 0.05%)</title><rect x="32.7724%" y="277" width="0.0541%" height="15" fill="rgb(251,9,53)" fg:x="38189" fg:w="63"/><text x="33.0224%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (63 samples, 0.05%)</title><rect x="32.7724%" y="261" width="0.0541%" height="15" fill="rgb(228,204,25)" fg:x="38189" fg:w="63"/><text x="33.0224%" y="271.50"></text></g><g><title>sn_rust_dealloc (58 samples, 0.05%)</title><rect x="32.7767%" y="245" width="0.0498%" height="15" fill="rgb(207,153,8)" fg:x="38194" fg:w="58"/><text x="33.0267%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (183 samples, 0.16%)</title><rect x="32.6746%" y="357" width="0.1570%" height="15" fill="rgb(242,9,16)" fg:x="38075" fg:w="183"/><text x="32.9246%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (69 samples, 0.06%)</title><rect x="32.7724%" y="341" width="0.0592%" height="15" fill="rgb(217,211,10)" fg:x="38189" fg:w="69"/><text x="33.0224%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.06%)</title><rect x="32.7724%" y="325" width="0.0592%" height="15" fill="rgb(219,228,52)" fg:x="38189" fg:w="69"/><text x="33.0224%" y="335.50"></text></g><g><title>sn_rust_dealloc (109 samples, 0.09%)</title><rect x="32.8436%" y="181" width="0.0935%" height="15" fill="rgb(231,92,29)" fg:x="38272" fg:w="109"/><text x="33.0936%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (138 samples, 0.12%)</title><rect x="32.8393%" y="245" width="0.1184%" height="15" fill="rgb(232,8,23)" fg:x="38267" fg:w="138"/><text x="33.0893%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (138 samples, 0.12%)</title><rect x="32.8393%" y="229" width="0.1184%" height="15" fill="rgb(216,211,34)" fg:x="38267" fg:w="138"/><text x="33.0893%" y="239.50"></text></g><g><title>__rg_dealloc (138 samples, 0.12%)</title><rect x="32.8393%" y="213" width="0.1184%" height="15" fill="rgb(236,151,0)" fg:x="38267" fg:w="138"/><text x="33.0893%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (138 samples, 0.12%)</title><rect x="32.8393%" y="197" width="0.1184%" height="15" fill="rgb(209,168,3)" fg:x="38267" fg:w="138"/><text x="33.0893%" y="207.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (24 samples, 0.02%)</title><rect x="32.9371%" y="181" width="0.0206%" height="15" fill="rgb(208,129,28)" fg:x="38381" fg:w="24"/><text x="33.1871%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (141 samples, 0.12%)</title><rect x="32.8385%" y="309" width="0.1210%" height="15" fill="rgb(229,78,22)" fg:x="38266" fg:w="141"/><text x="33.0885%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (141 samples, 0.12%)</title><rect x="32.8385%" y="293" width="0.1210%" height="15" fill="rgb(228,187,13)" fg:x="38266" fg:w="141"/><text x="33.0885%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (141 samples, 0.12%)</title><rect x="32.8385%" y="277" width="0.1210%" height="15" fill="rgb(240,119,24)" fg:x="38266" fg:w="141"/><text x="33.0885%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (141 samples, 0.12%)</title><rect x="32.8385%" y="261" width="0.1210%" height="15" fill="rgb(209,194,42)" fg:x="38266" fg:w="141"/><text x="33.0885%" y="271.50"></text></g><g><title>sn_rust_dealloc (185 samples, 0.16%)</title><rect x="33.3388%" y="133" width="0.1588%" height="15" fill="rgb(247,200,46)" fg:x="38849" fg:w="185"/><text x="33.5888%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (222 samples, 0.19%)</title><rect x="33.3345%" y="197" width="0.1905%" height="15" fill="rgb(218,76,16)" fg:x="38844" fg:w="222"/><text x="33.5845%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (222 samples, 0.19%)</title><rect x="33.3345%" y="181" width="0.1905%" height="15" fill="rgb(225,21,48)" fg:x="38844" fg:w="222"/><text x="33.5845%" y="191.50"></text></g><g><title>__rg_dealloc (222 samples, 0.19%)</title><rect x="33.3345%" y="165" width="0.1905%" height="15" fill="rgb(239,223,50)" fg:x="38844" fg:w="222"/><text x="33.5845%" y="175.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (222 samples, 0.19%)</title><rect x="33.3345%" y="149" width="0.1905%" height="15" fill="rgb(244,45,21)" fg:x="38844" fg:w="222"/><text x="33.5845%" y="159.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (32 samples, 0.03%)</title><rect x="33.4975%" y="133" width="0.0275%" height="15" fill="rgb(232,33,43)" fg:x="39034" fg:w="32"/><text x="33.7475%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (673 samples, 0.58%)</title><rect x="32.9595%" y="293" width="0.5775%" height="15" fill="rgb(209,8,3)" fg:x="38407" fg:w="673"/><text x="33.2095%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (671 samples, 0.58%)</title><rect x="32.9612%" y="277" width="0.5758%" height="15" fill="rgb(214,25,53)" fg:x="38409" fg:w="671"/><text x="33.2112%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (663 samples, 0.57%)</title><rect x="32.9680%" y="261" width="0.5690%" height="15" fill="rgb(254,186,54)" fg:x="38417" fg:w="663"/><text x="33.2180%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (663 samples, 0.57%)</title><rect x="32.9680%" y="245" width="0.5690%" height="15" fill="rgb(208,174,49)" fg:x="38417" fg:w="663"/><text x="33.2180%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (663 samples, 0.57%)</title><rect x="32.9680%" y="229" width="0.5690%" height="15" fill="rgb(233,191,51)" fg:x="38417" fg:w="663"/><text x="33.2180%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (663 samples, 0.57%)</title><rect x="32.9680%" y="213" width="0.5690%" height="15" fill="rgb(222,134,10)" fg:x="38417" fg:w="663"/><text x="33.2180%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="33.5250%" y="197" width="0.0120%" height="15" fill="rgb(230,226,20)" fg:x="39066" fg:w="14"/><text x="33.7750%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (834 samples, 0.72%)</title><rect x="32.8359%" y="325" width="0.7157%" height="15" fill="rgb(251,111,25)" fg:x="38263" fg:w="834"/><text x="33.0859%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (690 samples, 0.59%)</title><rect x="32.9595%" y="309" width="0.5921%" height="15" fill="rgb(224,40,46)" fg:x="38407" fg:w="690"/><text x="33.2095%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (17 samples, 0.01%)</title><rect x="33.5370%" y="293" width="0.0146%" height="15" fill="rgb(236,108,47)" fg:x="39080" fg:w="17"/><text x="33.7870%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="33.5370%" y="277" width="0.0146%" height="15" fill="rgb(234,93,0)" fg:x="39080" fg:w="17"/><text x="33.7870%" y="287.50"></text></g><g><title>sn_rust_dealloc (62 samples, 0.05%)</title><rect x="33.5516%" y="325" width="0.0532%" height="15" fill="rgb(224,213,32)" fg:x="39097" fg:w="62"/><text x="33.8016%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (946 samples, 0.81%)</title><rect x="32.8342%" y="341" width="0.8118%" height="15" fill="rgb(251,11,48)" fg:x="38261" fg:w="946"/><text x="33.0842%" y="351.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (48 samples, 0.04%)</title><rect x="33.6048%" y="325" width="0.0412%" height="15" fill="rgb(236,173,5)" fg:x="39159" fg:w="48"/><text x="33.8548%" y="335.50"></text></g><g><title>core::mem::drop (625 samples, 0.54%)</title><rect x="33.9618%" y="229" width="0.5364%" height="15" fill="rgb(230,95,12)" fg:x="39575" fg:w="625"/><text x="34.2118%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;alloc::string::String&gt;&gt; (625 samples, 0.54%)</title><rect x="33.9618%" y="213" width="0.5364%" height="15" fill="rgb(232,209,1)" fg:x="39575" fg:w="625"/><text x="34.2118%" y="223.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (625 samples, 0.54%)</title><rect x="33.9618%" y="197" width="0.5364%" height="15" fill="rgb(232,6,1)" fg:x="39575" fg:w="625"/><text x="34.2118%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (612 samples, 0.53%)</title><rect x="33.9730%" y="181" width="0.5252%" height="15" fill="rgb(210,224,50)" fg:x="39588" fg:w="612"/><text x="34.2230%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_sub (612 samples, 0.53%)</title><rect x="33.9730%" y="165" width="0.5252%" height="15" fill="rgb(228,127,35)" fg:x="39588" fg:w="612"/><text x="34.2230%" y="175.50"></text></g><g><title>sn_rust_dealloc (120 samples, 0.10%)</title><rect x="34.5076%" y="101" width="0.1030%" height="15" fill="rgb(245,102,45)" fg:x="40211" fg:w="120"/><text x="34.7576%" y="111.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (985 samples, 0.85%)</title><rect x="33.9584%" y="245" width="0.8453%" height="15" fill="rgb(214,1,49)" fg:x="39571" fg:w="985"/><text x="34.2084%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (356 samples, 0.31%)</title><rect x="34.4981%" y="229" width="0.3055%" height="15" fill="rgb(226,163,40)" fg:x="40200" fg:w="356"/><text x="34.7481%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (356 samples, 0.31%)</title><rect x="34.4981%" y="213" width="0.3055%" height="15" fill="rgb(239,212,28)" fg:x="40200" fg:w="356"/><text x="34.7481%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (356 samples, 0.31%)</title><rect x="34.4981%" y="197" width="0.3055%" height="15" fill="rgb(220,20,13)" fg:x="40200" fg:w="356"/><text x="34.7481%" y="207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (356 samples, 0.31%)</title><rect x="34.4981%" y="181" width="0.3055%" height="15" fill="rgb(210,164,35)" fg:x="40200" fg:w="356"/><text x="34.7481%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (345 samples, 0.30%)</title><rect x="34.5076%" y="165" width="0.2961%" height="15" fill="rgb(248,109,41)" fg:x="40211" fg:w="345"/><text x="34.7576%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (345 samples, 0.30%)</title><rect x="34.5076%" y="149" width="0.2961%" height="15" fill="rgb(238,23,50)" fg:x="40211" fg:w="345"/><text x="34.7576%" y="159.50"></text></g><g><title>__rg_dealloc (345 samples, 0.30%)</title><rect x="34.5076%" y="133" width="0.2961%" height="15" fill="rgb(211,48,49)" fg:x="40211" fg:w="345"/><text x="34.7576%" y="143.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (345 samples, 0.30%)</title><rect x="34.5076%" y="117" width="0.2961%" height="15" fill="rgb(223,36,21)" fg:x="40211" fg:w="345"/><text x="34.7576%" y="127.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (225 samples, 0.19%)</title><rect x="34.6106%" y="101" width="0.1931%" height="15" fill="rgb(207,123,46)" fg:x="40331" fg:w="225"/><text x="34.8606%" y="111.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (748 samples, 0.64%)</title><rect x="34.8037%" y="245" width="0.6419%" height="15" fill="rgb(240,218,32)" fg:x="40556" fg:w="748"/><text x="35.0537%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_sub (748 samples, 0.64%)</title><rect x="34.8037%" y="229" width="0.6419%" height="15" fill="rgb(252,5,43)" fg:x="40556" fg:w="748"/><text x="35.0537%" y="239.50"></text></g><g><title>sn_rust_dealloc (49 samples, 0.04%)</title><rect x="35.4456%" y="245" width="0.0420%" height="15" fill="rgb(252,84,19)" fg:x="41304" fg:w="49"/><text x="35.6956%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,170 samples, 1.86%)</title><rect x="33.6486%" y="309" width="1.8622%" height="15" fill="rgb(243,152,39)" fg:x="39210" fg:w="2170"/><text x="33.8986%" y="319.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (2,170 samples, 1.86%)</title><rect x="33.6486%" y="293" width="1.8622%" height="15" fill="rgb(234,160,15)" fg:x="39210" fg:w="2170"/><text x="33.8986%" y="303.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (2,160 samples, 1.85%)</title><rect x="33.6571%" y="277" width="1.8536%" height="15" fill="rgb(237,34,20)" fg:x="39220" fg:w="2160"/><text x="33.9071%" y="287.50">c..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,160 samples, 1.85%)</title><rect x="33.6571%" y="261" width="1.8536%" height="15" fill="rgb(229,97,13)" fg:x="39220" fg:w="2160"/><text x="33.9071%" y="271.50">&lt;..</text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (27 samples, 0.02%)</title><rect x="35.4876%" y="245" width="0.0232%" height="15" fill="rgb(234,71,50)" fg:x="41353" fg:w="27"/><text x="35.7376%" y="255.50"></text></g><g><title>sn_rust_dealloc (53 samples, 0.05%)</title><rect x="35.5151%" y="213" width="0.0455%" height="15" fill="rgb(253,155,4)" fg:x="41385" fg:w="53"/><text x="35.7651%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (57 samples, 0.05%)</title><rect x="35.5125%" y="277" width="0.0489%" height="15" fill="rgb(222,185,37)" fg:x="41382" fg:w="57"/><text x="35.7625%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (57 samples, 0.05%)</title><rect x="35.5125%" y="261" width="0.0489%" height="15" fill="rgb(251,177,13)" fg:x="41382" fg:w="57"/><text x="35.7625%" y="271.50"></text></g><g><title>__rg_dealloc (57 samples, 0.05%)</title><rect x="35.5125%" y="245" width="0.0489%" height="15" fill="rgb(250,179,40)" fg:x="41382" fg:w="57"/><text x="35.7625%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (57 samples, 0.05%)</title><rect x="35.5125%" y="229" width="0.0489%" height="15" fill="rgb(242,44,2)" fg:x="41382" fg:w="57"/><text x="35.7625%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,231 samples, 1.91%)</title><rect x="33.6486%" y="325" width="1.9146%" height="15" fill="rgb(216,177,13)" fg:x="39210" fg:w="2231"/><text x="33.8986%" y="335.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (61 samples, 0.05%)</title><rect x="35.5108%" y="309" width="0.0523%" height="15" fill="rgb(216,106,43)" fg:x="41380" fg:w="61"/><text x="35.7608%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.05%)</title><rect x="35.5108%" y="293" width="0.0523%" height="15" fill="rgb(216,183,2)" fg:x="41380" fg:w="61"/><text x="35.7608%" y="303.50"></text></g><g><title>[tremor-main] (24 samples, 0.02%)</title><rect x="35.7107%" y="165" width="0.0206%" height="15" fill="rgb(249,75,3)" fg:x="41613" fg:w="24"/><text x="35.9607%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (24 samples, 0.02%)</title><rect x="35.7107%" y="149" width="0.0206%" height="15" fill="rgb(219,67,39)" fg:x="41613" fg:w="24"/><text x="35.9607%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (84 samples, 0.07%)</title><rect x="35.7313%" y="165" width="0.0721%" height="15" fill="rgb(253,228,2)" fg:x="41637" fg:w="84"/><text x="35.9813%" y="175.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.07%)</title><rect x="35.7313%" y="149" width="0.0721%" height="15" fill="rgb(235,138,27)" fg:x="41637" fg:w="84"/><text x="35.9813%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (561 samples, 0.48%)</title><rect x="36.0617%" y="133" width="0.4814%" height="15" fill="rgb(236,97,51)" fg:x="42022" fg:w="561"/><text x="36.3117%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;[tremor_value::value::Value]&gt; (552 samples, 0.47%)</title><rect x="36.0694%" y="117" width="0.4737%" height="15" fill="rgb(240,80,30)" fg:x="42031" fg:w="552"/><text x="36.3194%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (398 samples, 0.34%)</title><rect x="36.2016%" y="101" width="0.3415%" height="15" fill="rgb(230,178,19)" fg:x="42185" fg:w="398"/><text x="36.4516%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (902 samples, 0.77%)</title><rect x="35.8034%" y="165" width="0.7741%" height="15" fill="rgb(210,190,27)" fg:x="41721" fg:w="902"/><text x="36.0534%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_value::value::Value&gt;&gt; (601 samples, 0.52%)</title><rect x="36.0617%" y="149" width="0.5158%" height="15" fill="rgb(222,107,31)" fg:x="42022" fg:w="601"/><text x="36.3117%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_value::value::Value&gt;&gt; (40 samples, 0.03%)</title><rect x="36.5431%" y="133" width="0.0343%" height="15" fill="rgb(216,127,34)" fg:x="42583" fg:w="40"/><text x="36.7931%" y="143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.03%)</title><rect x="36.5431%" y="117" width="0.0343%" height="15" fill="rgb(234,116,52)" fg:x="42583" fg:w="40"/><text x="36.7931%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (16 samples, 0.01%)</title><rect x="36.5637%" y="101" width="0.0137%" height="15" fill="rgb(222,124,15)" fg:x="42607" fg:w="16"/><text x="36.8137%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::array (13 samples, 0.01%)</title><rect x="36.5663%" y="85" width="0.0112%" height="15" fill="rgb(231,179,28)" fg:x="42610" fg:w="13"/><text x="36.8163%" y="95.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (13 samples, 0.01%)</title><rect x="36.5663%" y="69" width="0.0112%" height="15" fill="rgb(226,93,45)" fg:x="42610" fg:w="13"/><text x="36.8163%" y="79.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (13 samples, 0.01%)</title><rect x="36.5663%" y="53" width="0.0112%" height="15" fill="rgb(215,8,51)" fg:x="42610" fg:w="13"/><text x="36.8163%" y="63.50"></text></g><g><title>sn_rust_dealloc (220 samples, 0.19%)</title><rect x="36.5775%" y="165" width="0.1888%" height="15" fill="rgb(223,106,5)" fg:x="42623" fg:w="220"/><text x="36.8275%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,534 samples, 1.32%)</title><rect x="35.6180%" y="213" width="1.3164%" height="15" fill="rgb(250,191,5)" fg:x="41505" fg:w="1534"/><text x="35.8680%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (1,533 samples, 1.32%)</title><rect x="35.6189%" y="197" width="1.3156%" height="15" fill="rgb(242,132,44)" fg:x="41506" fg:w="1533"/><text x="35.8689%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt; (1,503 samples, 1.29%)</title><rect x="35.6447%" y="181" width="1.2898%" height="15" fill="rgb(251,152,29)" fg:x="41536" fg:w="1503"/><text x="35.8947%" y="191.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (196 samples, 0.17%)</title><rect x="36.7663%" y="165" width="0.1682%" height="15" fill="rgb(218,179,5)" fg:x="42843" fg:w="196"/><text x="37.0163%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (1,586 samples, 1.36%)</title><rect x="35.6017%" y="261" width="1.3610%" height="15" fill="rgb(227,67,19)" fg:x="41486" fg:w="1586"/><text x="35.8517%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (1,567 samples, 1.34%)</title><rect x="35.6180%" y="245" width="1.3447%" height="15" fill="rgb(233,119,31)" fg:x="41505" fg:w="1567"/><text x="35.8680%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (1,567 samples, 1.34%)</title><rect x="35.6180%" y="229" width="1.3447%" height="15" fill="rgb(241,120,22)" fg:x="41505" fg:w="1567"/><text x="35.8680%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (33 samples, 0.03%)</title><rect x="36.9345%" y="213" width="0.0283%" height="15" fill="rgb(224,102,30)" fg:x="43039" fg:w="33"/><text x="37.1845%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="36.9345%" y="197" width="0.0283%" height="15" fill="rgb(210,164,37)" fg:x="43039" fg:w="33"/><text x="37.1845%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (17 samples, 0.01%)</title><rect x="36.9482%" y="181" width="0.0146%" height="15" fill="rgb(226,191,16)" fg:x="43055" fg:w="17"/><text x="37.1982%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::array (13 samples, 0.01%)</title><rect x="36.9516%" y="165" width="0.0112%" height="15" fill="rgb(214,40,45)" fg:x="43059" fg:w="13"/><text x="37.2016%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (13 samples, 0.01%)</title><rect x="36.9516%" y="149" width="0.0112%" height="15" fill="rgb(244,29,26)" fg:x="43059" fg:w="13"/><text x="37.2016%" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (13 samples, 0.01%)</title><rect x="36.9516%" y="133" width="0.0112%" height="15" fill="rgb(216,16,5)" fg:x="43059" fg:w="13"/><text x="37.2016%" y="143.50"></text></g><g><title>sn_rust_dealloc (125 samples, 0.11%)</title><rect x="36.9628%" y="261" width="0.1073%" height="15" fill="rgb(249,76,35)" fg:x="43072" fg:w="125"/><text x="37.2128%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (2,010 samples, 1.72%)</title><rect x="35.5760%" y="309" width="1.7249%" height="15" fill="rgb(207,11,44)" fg:x="41456" fg:w="2010"/><text x="35.8260%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (1,985 samples, 1.70%)</title><rect x="35.5975%" y="293" width="1.7035%" height="15" fill="rgb(228,190,49)" fg:x="41481" fg:w="1985"/><text x="35.8475%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (1,980 samples, 1.70%)</title><rect x="35.6017%" y="277" width="1.6992%" height="15" fill="rgb(214,173,12)" fg:x="41486" fg:w="1980"/><text x="35.8517%" y="287.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (269 samples, 0.23%)</title><rect x="37.0701%" y="261" width="0.2308%" height="15" fill="rgb(218,26,35)" fg:x="43197" fg:w="269"/><text x="37.3201%" y="271.50"></text></g><g><title>sn_rust_dealloc (72 samples, 0.06%)</title><rect x="37.3009%" y="309" width="0.0618%" height="15" fill="rgb(220,200,19)" fg:x="43466" fg:w="72"/><text x="37.5509%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (4,341 samples, 3.73%)</title><rect x="33.6486%" y="341" width="3.7253%" height="15" fill="rgb(239,95,49)" fg:x="39210" fg:w="4341"/><text x="33.8986%" y="351.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (2,110 samples, 1.81%)</title><rect x="35.5631%" y="325" width="1.8107%" height="15" fill="rgb(235,85,53)" fg:x="41441" fg:w="2110"/><text x="35.8131%" y="335.50">c..</text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (13 samples, 0.01%)</title><rect x="37.3627%" y="309" width="0.0112%" height="15" fill="rgb(233,133,31)" fg:x="43538" fg:w="13"/><text x="37.6127%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (696 samples, 0.60%)</title><rect x="37.8664%" y="197" width="0.5973%" height="15" fill="rgb(218,25,20)" fg:x="44125" fg:w="696"/><text x="38.1164%" y="207.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (696 samples, 0.60%)</title><rect x="37.8664%" y="181" width="0.5973%" height="15" fill="rgb(252,210,38)" fg:x="44125" fg:w="696"/><text x="38.1164%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (97 samples, 0.08%)</title><rect x="38.4637%" y="197" width="0.0832%" height="15" fill="rgb(242,134,21)" fg:x="44821" fg:w="97"/><text x="38.7137%" y="207.50"></text></g><g><title>sn_rust_dealloc (155 samples, 0.13%)</title><rect x="38.5470%" y="197" width="0.1330%" height="15" fill="rgb(213,28,48)" fg:x="44918" fg:w="155"/><text x="38.7970%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,022 samples, 0.88%)</title><rect x="37.8149%" y="245" width="0.8770%" height="15" fill="rgb(250,196,2)" fg:x="44065" fg:w="1022"/><text x="38.0649%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (1,016 samples, 0.87%)</title><rect x="37.8201%" y="229" width="0.8719%" height="15" fill="rgb(227,5,17)" fg:x="44071" fg:w="1016"/><text x="38.0701%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt; (975 samples, 0.84%)</title><rect x="37.8553%" y="213" width="0.8367%" height="15" fill="rgb(221,226,24)" fg:x="44112" fg:w="975"/><text x="38.1053%" y="223.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (14 samples, 0.01%)</title><rect x="38.6800%" y="197" width="0.0120%" height="15" fill="rgb(211,5,48)" fg:x="45073" fg:w="14"/><text x="38.9300%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (1,535 samples, 1.32%)</title><rect x="37.3902%" y="293" width="1.3173%" height="15" fill="rgb(219,150,6)" fg:x="43570" fg:w="1535"/><text x="37.6402%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (1,040 samples, 0.89%)</title><rect x="37.8149%" y="277" width="0.8925%" height="15" fill="rgb(251,46,16)" fg:x="44065" fg:w="1040"/><text x="38.0649%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (1,040 samples, 0.89%)</title><rect x="37.8149%" y="261" width="0.8925%" height="15" fill="rgb(220,204,40)" fg:x="44065" fg:w="1040"/><text x="38.0649%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (18 samples, 0.02%)</title><rect x="38.6920%" y="245" width="0.0154%" height="15" fill="rgb(211,85,2)" fg:x="45087" fg:w="18"/><text x="38.9420%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="38.6920%" y="229" width="0.0154%" height="15" fill="rgb(229,17,7)" fg:x="45087" fg:w="18"/><text x="38.9420%" y="239.50"></text></g><g><title>sn_rust_dealloc (58 samples, 0.05%)</title><rect x="38.7074%" y="293" width="0.0498%" height="15" fill="rgb(239,72,28)" fg:x="45105" fg:w="58"/><text x="38.9574%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (1,680 samples, 1.44%)</title><rect x="37.3739%" y="341" width="1.4417%" height="15" fill="rgb(230,47,54)" fg:x="43551" fg:w="1680"/><text x="37.6239%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (1,662 samples, 1.43%)</title><rect x="37.3893%" y="325" width="1.4263%" height="15" fill="rgb(214,50,8)" fg:x="43569" fg:w="1662"/><text x="37.6393%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (1,661 samples, 1.43%)</title><rect x="37.3902%" y="309" width="1.4254%" height="15" fill="rgb(216,198,43)" fg:x="43570" fg:w="1661"/><text x="37.6402%" y="319.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (68 samples, 0.06%)</title><rect x="38.7572%" y="293" width="0.0584%" height="15" fill="rgb(234,20,35)" fg:x="45163" fg:w="68"/><text x="39.0072%" y="303.50"></text></g><g><title>sn_rust_dealloc (46 samples, 0.04%)</title><rect x="38.8156%" y="341" width="0.0395%" height="15" fill="rgb(254,45,19)" fg:x="45231" fg:w="46"/><text x="39.0656%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (7,056 samples, 6.06%)</title><rect x="32.8316%" y="357" width="6.0552%" height="15" fill="rgb(219,14,44)" fg:x="38258" fg:w="7056"/><text x="33.0816%" y="367.50">core::pt..</text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (37 samples, 0.03%)</title><rect x="38.8550%" y="341" width="0.0318%" height="15" fill="rgb(217,220,26)" fg:x="45277" fg:w="37"/><text x="39.1050%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (46 samples, 0.04%)</title><rect x="38.9838%" y="309" width="0.0395%" height="15" fill="rgb(213,158,28)" fg:x="45427" fg:w="46"/><text x="39.2338%" y="319.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (40 samples, 0.03%)</title><rect x="38.9889%" y="293" width="0.0343%" height="15" fill="rgb(252,51,52)" fg:x="45433" fg:w="40"/><text x="39.2389%" y="303.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (162 samples, 0.14%)</title><rect x="38.8937%" y="357" width="0.1390%" height="15" fill="rgb(246,89,16)" fg:x="45322" fg:w="162"/><text x="39.1437%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (162 samples, 0.14%)</title><rect x="38.8937%" y="341" width="0.1390%" height="15" fill="rgb(216,158,49)" fg:x="45322" fg:w="162"/><text x="39.1437%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (162 samples, 0.14%)</title><rect x="38.8937%" y="325" width="0.1390%" height="15" fill="rgb(236,107,19)" fg:x="45322" fg:w="162"/><text x="39.1437%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (23 samples, 0.02%)</title><rect x="39.0490%" y="341" width="0.0197%" height="15" fill="rgb(228,185,30)" fg:x="45503" fg:w="23"/><text x="39.2990%" y="351.50"></text></g><g><title>core::time::Duration::as_nanos (28 samples, 0.02%)</title><rect x="39.0687%" y="341" width="0.0240%" height="15" fill="rgb(246,134,8)" fg:x="45526" fg:w="28"/><text x="39.3187%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (85 samples, 0.07%)</title><rect x="39.0928%" y="325" width="0.0729%" height="15" fill="rgb(214,143,50)" fg:x="45554" fg:w="85"/><text x="39.3428%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (41 samples, 0.04%)</title><rect x="39.2026%" y="293" width="0.0352%" height="15" fill="rgb(228,75,8)" fg:x="45682" fg:w="41"/><text x="39.4526%" y="303.50"></text></g><g><title>core::cmp::PartialOrd::ge (41 samples, 0.04%)</title><rect x="39.2026%" y="277" width="0.0352%" height="15" fill="rgb(207,175,4)" fg:x="45682" fg:w="41"/><text x="39.4526%" y="287.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (40 samples, 0.03%)</title><rect x="39.2035%" y="261" width="0.0343%" height="15" fill="rgb(205,108,24)" fg:x="45683" fg:w="40"/><text x="39.4535%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (21 samples, 0.02%)</title><rect x="39.2198%" y="245" width="0.0180%" height="15" fill="rgb(244,120,49)" fg:x="45702" fg:w="21"/><text x="39.4698%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (21 samples, 0.02%)</title><rect x="39.2198%" y="229" width="0.0180%" height="15" fill="rgb(223,47,38)" fg:x="45702" fg:w="21"/><text x="39.4698%" y="239.50"></text></g><g><title>std::time::SystemTime::duration_since (181 samples, 0.16%)</title><rect x="39.0928%" y="341" width="0.1553%" height="15" fill="rgb(229,179,11)" fg:x="45554" fg:w="181"/><text x="39.3428%" y="351.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (96 samples, 0.08%)</title><rect x="39.1657%" y="325" width="0.0824%" height="15" fill="rgb(231,122,1)" fg:x="45639" fg:w="96"/><text x="39.4157%" y="335.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (96 samples, 0.08%)</title><rect x="39.1657%" y="309" width="0.0824%" height="15" fill="rgb(245,119,9)" fg:x="45639" fg:w="96"/><text x="39.4157%" y="319.50"></text></g><g><title>core::time::Duration::new (12 samples, 0.01%)</title><rect x="39.2378%" y="293" width="0.0103%" height="15" fill="rgb(241,163,25)" fg:x="45723" fg:w="12"/><text x="39.4878%" y="303.50"></text></g><g><title>tremor_common::time::nanotime (632 samples, 0.54%)</title><rect x="39.0327%" y="357" width="0.5424%" height="15" fill="rgb(217,214,3)" fg:x="45484" fg:w="632"/><text x="39.2827%" y="367.50"></text></g><g><title>std::time::SystemTime::now (381 samples, 0.33%)</title><rect x="39.2481%" y="341" width="0.3270%" height="15" fill="rgb(240,86,28)" fg:x="45735" fg:w="381"/><text x="39.4981%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (381 samples, 0.33%)</title><rect x="39.2481%" y="325" width="0.3270%" height="15" fill="rgb(215,47,9)" fg:x="45735" fg:w="381"/><text x="39.4981%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (381 samples, 0.33%)</title><rect x="39.2481%" y="309" width="0.3270%" height="15" fill="rgb(252,25,45)" fg:x="45735" fg:w="381"/><text x="39.4981%" y="319.50"></text></g><g><title>__clock_gettime (314 samples, 0.27%)</title><rect x="39.3056%" y="293" width="0.2695%" height="15" fill="rgb(251,164,9)" fg:x="45802" fg:w="314"/><text x="39.5556%" y="303.50"></text></g><g><title>__vdso_clock_gettime (298 samples, 0.26%)</title><rect x="39.3193%" y="277" width="0.2557%" height="15" fill="rgb(233,194,0)" fg:x="45818" fg:w="298"/><text x="39.5693%" y="287.50"></text></g><g><title>[[vdso]] (263 samples, 0.23%)</title><rect x="39.3493%" y="261" width="0.2257%" height="15" fill="rgb(249,111,24)" fg:x="45853" fg:w="263"/><text x="39.5993%" y="271.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (11,901 samples, 10.21%)</title><rect x="29.3655%" y="885" width="10.2130%" height="15" fill="rgb(250,223,3)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="895.50">async_global_ex..</text></g><g><title>std::panic::catch_unwind (11,901 samples, 10.21%)</title><rect x="29.3655%" y="869" width="10.2130%" height="15" fill="rgb(236,178,37)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="879.50">std::panic::cat..</text></g><g><title>std::panicking::try (11,901 samples, 10.21%)</title><rect x="29.3655%" y="853" width="10.2130%" height="15" fill="rgb(241,158,50)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="863.50">std::panicking:..</text></g><g><title>std::panicking::try::do_call (11,901 samples, 10.21%)</title><rect x="29.3655%" y="837" width="10.2130%" height="15" fill="rgb(213,121,41)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="847.50">std::panicking:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (11,901 samples, 10.21%)</title><rect x="29.3655%" y="821" width="10.2130%" height="15" fill="rgb(240,92,3)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="831.50">async_global_ex..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,901 samples, 10.21%)</title><rect x="29.3655%" y="805" width="10.2130%" height="15" fill="rgb(205,123,3)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="815.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,901 samples, 10.21%)</title><rect x="29.3655%" y="789" width="10.2130%" height="15" fill="rgb(205,97,47)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="799.50">std::thread::lo..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (11,901 samples, 10.21%)</title><rect x="29.3655%" y="773" width="10.2130%" height="15" fill="rgb(247,152,14)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="783.50">async_global_ex..</text></g><g><title>async_global_executor::reactor::block_on (11,901 samples, 10.21%)</title><rect x="29.3655%" y="757" width="10.2130%" height="15" fill="rgb(248,195,53)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="767.50">async_global_ex..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (11,901 samples, 10.21%)</title><rect x="29.3655%" y="741" width="10.2130%" height="15" fill="rgb(226,201,16)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="751.50">async_global_ex..</text></g><g><title>async_io::driver::block_on (11,901 samples, 10.21%)</title><rect x="29.3655%" y="725" width="10.2130%" height="15" fill="rgb(205,98,0)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="735.50">async_io::drive..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,901 samples, 10.21%)</title><rect x="29.3655%" y="709" width="10.2130%" height="15" fill="rgb(214,191,48)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="719.50">&lt;futures_lite::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,901 samples, 10.21%)</title><rect x="29.3655%" y="693" width="10.2130%" height="15" fill="rgb(237,112,39)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="703.50">&lt;core::future::..</text></g><g><title>async_executor::Executor::run::{{closure}} (11,901 samples, 10.21%)</title><rect x="29.3655%" y="677" width="10.2130%" height="15" fill="rgb(247,203,27)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="687.50">async_executor:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,901 samples, 10.21%)</title><rect x="29.3655%" y="661" width="10.2130%" height="15" fill="rgb(235,124,28)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="671.50">&lt;futures_lite::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,901 samples, 10.21%)</title><rect x="29.3655%" y="645" width="10.2130%" height="15" fill="rgb(208,207,46)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="655.50">&lt;core::future::..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (11,901 samples, 10.21%)</title><rect x="29.3655%" y="629" width="10.2130%" height="15" fill="rgb(234,176,4)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="639.50">async_executor:..</text></g><g><title>async_task::runnable::Runnable::run (11,901 samples, 10.21%)</title><rect x="29.3655%" y="613" width="10.2130%" height="15" fill="rgb(230,133,28)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="623.50">async_task::run..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (11,901 samples, 10.21%)</title><rect x="29.3655%" y="597" width="10.2130%" height="15" fill="rgb(211,137,40)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="607.50">async_task::raw..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11,901 samples, 10.21%)</title><rect x="29.3655%" y="581" width="10.2130%" height="15" fill="rgb(254,35,13)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="591.50">&lt;core::pin::Pin..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,901 samples, 10.21%)</title><rect x="29.3655%" y="565" width="10.2130%" height="15" fill="rgb(225,49,51)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="575.50">&lt;core::future::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (11,901 samples, 10.21%)</title><rect x="29.3655%" y="549" width="10.2130%" height="15" fill="rgb(251,10,15)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="559.50">async_executor:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (11,901 samples, 10.21%)</title><rect x="29.3655%" y="533" width="10.2130%" height="15" fill="rgb(228,207,15)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="543.50">&lt;async_std::tas..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (11,901 samples, 10.21%)</title><rect x="29.3655%" y="517" width="10.2130%" height="15" fill="rgb(241,99,19)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="527.50">async_std::task..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,901 samples, 10.21%)</title><rect x="29.3655%" y="501" width="10.2130%" height="15" fill="rgb(207,104,49)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="511.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,901 samples, 10.21%)</title><rect x="29.3655%" y="485" width="10.2130%" height="15" fill="rgb(234,99,18)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="495.50">std::thread::lo..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (11,901 samples, 10.21%)</title><rect x="29.3655%" y="469" width="10.2130%" height="15" fill="rgb(213,191,49)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="479.50">async_std::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (11,901 samples, 10.21%)</title><rect x="29.3655%" y="453" width="10.2130%" height="15" fill="rgb(210,226,19)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="463.50">&lt;async_std::tas..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,901 samples, 10.21%)</title><rect x="29.3655%" y="437" width="10.2130%" height="15" fill="rgb(229,97,18)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="447.50">&lt;core::future::..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (11,901 samples, 10.21%)</title><rect x="29.3655%" y="421" width="10.2130%" height="15" fill="rgb(211,167,15)" fg:x="34219" fg:w="11901"/><text x="29.6155%" y="431.50">tremor_runtime:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11,317 samples, 9.71%)</title><rect x="29.8666%" y="405" width="9.7118%" height="15" fill="rgb(210,169,34)" fg:x="34803" fg:w="11317"/><text x="30.1166%" y="415.50">&lt;core::pin::Pi..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,317 samples, 9.71%)</title><rect x="29.8666%" y="389" width="9.7118%" height="15" fill="rgb(241,121,31)" fg:x="34803" fg:w="11317"/><text x="30.1166%" y="399.50">&lt;core::future:..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (8,532 samples, 7.32%)</title><rect x="32.2566%" y="373" width="7.3218%" height="15" fill="rgb(232,40,11)" fg:x="37588" fg:w="8532"/><text x="32.5066%" y="383.50">&lt;tremor_ru..</text></g><g><title>alloc::alloc::exchange_malloc (34 samples, 0.03%)</title><rect x="39.6231%" y="453" width="0.0292%" height="15" fill="rgb(205,86,26)" fg:x="46172" fg:w="34"/><text x="39.8731%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.03%)</title><rect x="39.6231%" y="437" width="0.0292%" height="15" fill="rgb(231,126,28)" fg:x="46172" fg:w="34"/><text x="39.8731%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.03%)</title><rect x="39.6231%" y="421" width="0.0292%" height="15" fill="rgb(219,221,18)" fg:x="46172" fg:w="34"/><text x="39.8731%" y="431.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.02%)</title><rect x="39.6282%" y="405" width="0.0240%" height="15" fill="rgb(211,40,0)" fg:x="46178" fg:w="28"/><text x="39.8782%" y="415.50"></text></g><g><title>__rg_alloc (28 samples, 0.02%)</title><rect x="39.6282%" y="389" width="0.0240%" height="15" fill="rgb(239,85,43)" fg:x="46178" fg:w="28"/><text x="39.8782%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (28 samples, 0.02%)</title><rect x="39.6282%" y="373" width="0.0240%" height="15" fill="rgb(231,55,21)" fg:x="46178" fg:w="28"/><text x="39.8782%" y="383.50"></text></g><g><title>sn_rust_alloc (28 samples, 0.02%)</title><rect x="39.6282%" y="357" width="0.0240%" height="15" fill="rgb(225,184,43)" fg:x="46178" fg:w="28"/><text x="39.8782%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (18 samples, 0.02%)</title><rect x="39.6754%" y="437" width="0.0154%" height="15" fill="rgb(251,158,41)" fg:x="46233" fg:w="18"/><text x="39.9254%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (88 samples, 0.08%)</title><rect x="39.6952%" y="421" width="0.0755%" height="15" fill="rgb(234,159,37)" fg:x="46256" fg:w="88"/><text x="39.9452%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (28 samples, 0.02%)</title><rect x="39.7973%" y="389" width="0.0240%" height="15" fill="rgb(216,204,22)" fg:x="46375" fg:w="28"/><text x="40.0473%" y="399.50"></text></g><g><title>core::cmp::PartialOrd::ge (28 samples, 0.02%)</title><rect x="39.7973%" y="373" width="0.0240%" height="15" fill="rgb(214,17,3)" fg:x="46375" fg:w="28"/><text x="40.0473%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (28 samples, 0.02%)</title><rect x="39.7973%" y="357" width="0.0240%" height="15" fill="rgb(212,111,17)" fg:x="46375" fg:w="28"/><text x="40.0473%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (17 samples, 0.01%)</title><rect x="39.8067%" y="341" width="0.0146%" height="15" fill="rgb(221,157,24)" fg:x="46386" fg:w="17"/><text x="40.0567%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (17 samples, 0.01%)</title><rect x="39.8067%" y="325" width="0.0146%" height="15" fill="rgb(252,16,13)" fg:x="46386" fg:w="17"/><text x="40.0567%" y="335.50"></text></g><g><title>std::time::SystemTime::duration_since (161 samples, 0.14%)</title><rect x="39.6952%" y="437" width="0.1382%" height="15" fill="rgb(221,62,2)" fg:x="46256" fg:w="161"/><text x="39.9452%" y="447.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (73 samples, 0.06%)</title><rect x="39.7707%" y="421" width="0.0626%" height="15" fill="rgb(247,87,22)" fg:x="46344" fg:w="73"/><text x="40.0207%" y="431.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (73 samples, 0.06%)</title><rect x="39.7707%" y="405" width="0.0626%" height="15" fill="rgb(215,73,9)" fg:x="46344" fg:w="73"/><text x="40.0207%" y="415.50"></text></g><g><title>core::time::Duration::new (14 samples, 0.01%)</title><rect x="39.8213%" y="389" width="0.0120%" height="15" fill="rgb(207,175,33)" fg:x="46403" fg:w="14"/><text x="40.0713%" y="399.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (624 samples, 0.54%)</title><rect x="39.5785%" y="581" width="0.5355%" height="15" fill="rgb(243,129,54)" fg:x="46120" fg:w="624"/><text x="39.8285%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (624 samples, 0.54%)</title><rect x="39.5785%" y="565" width="0.5355%" height="15" fill="rgb(227,119,45)" fg:x="46120" fg:w="624"/><text x="39.8285%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (624 samples, 0.54%)</title><rect x="39.5785%" y="549" width="0.5355%" height="15" fill="rgb(205,109,36)" fg:x="46120" fg:w="624"/><text x="39.8285%" y="559.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (624 samples, 0.54%)</title><rect x="39.5785%" y="533" width="0.5355%" height="15" fill="rgb(205,6,39)" fg:x="46120" fg:w="624"/><text x="39.8285%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (624 samples, 0.54%)</title><rect x="39.5785%" y="517" width="0.5355%" height="15" fill="rgb(221,32,16)" fg:x="46120" fg:w="624"/><text x="39.8285%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (624 samples, 0.54%)</title><rect x="39.5785%" y="501" width="0.5355%" height="15" fill="rgb(228,144,50)" fg:x="46120" fg:w="624"/><text x="39.8285%" y="511.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (624 samples, 0.54%)</title><rect x="39.5785%" y="485" width="0.5355%" height="15" fill="rgb(229,201,53)" fg:x="46120" fg:w="624"/><text x="39.8285%" y="495.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (624 samples, 0.54%)</title><rect x="39.5785%" y="469" width="0.5355%" height="15" fill="rgb(249,153,27)" fg:x="46120" fg:w="624"/><text x="39.8285%" y="479.50"></text></g><g><title>tremor_common::time::nanotime (522 samples, 0.45%)</title><rect x="39.6660%" y="453" width="0.4480%" height="15" fill="rgb(227,106,25)" fg:x="46222" fg:w="522"/><text x="39.9160%" y="463.50"></text></g><g><title>std::time::SystemTime::now (327 samples, 0.28%)</title><rect x="39.8333%" y="437" width="0.2806%" height="15" fill="rgb(230,65,29)" fg:x="46417" fg:w="327"/><text x="40.0833%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (327 samples, 0.28%)</title><rect x="39.8333%" y="421" width="0.2806%" height="15" fill="rgb(221,57,46)" fg:x="46417" fg:w="327"/><text x="40.0833%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (327 samples, 0.28%)</title><rect x="39.8333%" y="405" width="0.2806%" height="15" fill="rgb(229,161,17)" fg:x="46417" fg:w="327"/><text x="40.0833%" y="415.50"></text></g><g><title>__clock_gettime (268 samples, 0.23%)</title><rect x="39.8840%" y="389" width="0.2300%" height="15" fill="rgb(222,213,11)" fg:x="46476" fg:w="268"/><text x="40.1340%" y="399.50"></text></g><g><title>__vdso_clock_gettime (249 samples, 0.21%)</title><rect x="39.9003%" y="373" width="0.2137%" height="15" fill="rgb(235,35,13)" fg:x="46495" fg:w="249"/><text x="40.1503%" y="383.50"></text></g><g><title>[[vdso]] (230 samples, 0.20%)</title><rect x="39.9166%" y="357" width="0.1974%" height="15" fill="rgb(233,158,34)" fg:x="46514" fg:w="230"/><text x="40.1666%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (210 samples, 0.18%)</title><rect x="40.2221%" y="469" width="0.1802%" height="15" fill="rgb(215,151,48)" fg:x="46870" fg:w="210"/><text x="40.4721%" y="479.50"></text></g><g><title>core::ptr::read (193 samples, 0.17%)</title><rect x="40.2367%" y="453" width="0.1656%" height="15" fill="rgb(229,84,14)" fg:x="46887" fg:w="193"/><text x="40.4867%" y="463.50"></text></g><g><title>[libc-2.31.so] (185 samples, 0.16%)</title><rect x="40.2435%" y="437" width="0.1588%" height="15" fill="rgb(229,68,14)" fg:x="46895" fg:w="185"/><text x="40.4935%" y="447.50"></text></g><g><title>[libc-2.31.so] (63 samples, 0.05%)</title><rect x="40.4100%" y="453" width="0.0541%" height="15" fill="rgb(243,106,26)" fg:x="47089" fg:w="63"/><text x="40.6600%" y="463.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (17 samples, 0.01%)</title><rect x="40.5104%" y="421" width="0.0146%" height="15" fill="rgb(206,45,38)" fg:x="47206" fg:w="17"/><text x="40.7604%" y="431.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.04%)</title><rect x="40.4924%" y="437" width="0.0386%" height="15" fill="rgb(226,6,15)" fg:x="47185" fg:w="45"/><text x="40.7424%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (157 samples, 0.13%)</title><rect x="40.4023%" y="469" width="0.1347%" height="15" fill="rgb(232,22,54)" fg:x="47080" fg:w="157"/><text x="40.6523%" y="479.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (85 samples, 0.07%)</title><rect x="40.4641%" y="453" width="0.0729%" height="15" fill="rgb(229,222,32)" fg:x="47152" fg:w="85"/><text x="40.7141%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (96 samples, 0.08%)</title><rect x="40.5422%" y="341" width="0.0824%" height="15" fill="rgb(228,62,29)" fg:x="47243" fg:w="96"/><text x="40.7922%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (96 samples, 0.08%)</title><rect x="40.5422%" y="325" width="0.0824%" height="15" fill="rgb(251,103,34)" fg:x="47243" fg:w="96"/><text x="40.7922%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (96 samples, 0.08%)</title><rect x="40.5422%" y="309" width="0.0824%" height="15" fill="rgb(233,12,30)" fg:x="47243" fg:w="96"/><text x="40.7922%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (92 samples, 0.08%)</title><rect x="40.5456%" y="293" width="0.0790%" height="15" fill="rgb(238,52,0)" fg:x="47247" fg:w="92"/><text x="40.7956%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (92 samples, 0.08%)</title><rect x="40.5456%" y="277" width="0.0790%" height="15" fill="rgb(223,98,5)" fg:x="47247" fg:w="92"/><text x="40.7956%" y="287.50"></text></g><g><title>alloc::alloc::alloc (92 samples, 0.08%)</title><rect x="40.5456%" y="261" width="0.0790%" height="15" fill="rgb(228,75,37)" fg:x="47247" fg:w="92"/><text x="40.7956%" y="271.50"></text></g><g><title>__rg_alloc (92 samples, 0.08%)</title><rect x="40.5456%" y="245" width="0.0790%" height="15" fill="rgb(205,115,49)" fg:x="47247" fg:w="92"/><text x="40.7956%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (92 samples, 0.08%)</title><rect x="40.5456%" y="229" width="0.0790%" height="15" fill="rgb(250,154,43)" fg:x="47247" fg:w="92"/><text x="40.7956%" y="239.50"></text></g><g><title>sn_rust_alloc (86 samples, 0.07%)</title><rect x="40.5508%" y="213" width="0.0738%" height="15" fill="rgb(226,43,29)" fg:x="47253" fg:w="86"/><text x="40.8008%" y="223.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (110 samples, 0.09%)</title><rect x="40.5422%" y="469" width="0.0944%" height="15" fill="rgb(249,228,39)" fg:x="47243" fg:w="110"/><text x="40.7922%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (110 samples, 0.09%)</title><rect x="40.5422%" y="453" width="0.0944%" height="15" fill="rgb(216,79,43)" fg:x="47243" fg:w="110"/><text x="40.7922%" y="463.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (110 samples, 0.09%)</title><rect x="40.5422%" y="437" width="0.0944%" height="15" fill="rgb(228,95,12)" fg:x="47243" fg:w="110"/><text x="40.7922%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (110 samples, 0.09%)</title><rect x="40.5422%" y="421" width="0.0944%" height="15" fill="rgb(249,221,15)" fg:x="47243" fg:w="110"/><text x="40.7922%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (110 samples, 0.09%)</title><rect x="40.5422%" y="405" width="0.0944%" height="15" fill="rgb(233,34,13)" fg:x="47243" fg:w="110"/><text x="40.7922%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (110 samples, 0.09%)</title><rect x="40.5422%" y="389" width="0.0944%" height="15" fill="rgb(214,103,39)" fg:x="47243" fg:w="110"/><text x="40.7922%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (110 samples, 0.09%)</title><rect x="40.5422%" y="373" width="0.0944%" height="15" fill="rgb(251,126,39)" fg:x="47243" fg:w="110"/><text x="40.7922%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (110 samples, 0.09%)</title><rect x="40.5422%" y="357" width="0.0944%" height="15" fill="rgb(214,216,36)" fg:x="47243" fg:w="110"/><text x="40.7922%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (14 samples, 0.01%)</title><rect x="40.6246%" y="341" width="0.0120%" height="15" fill="rgb(220,221,8)" fg:x="47339" fg:w="14"/><text x="40.8746%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="40.6246%" y="325" width="0.0120%" height="15" fill="rgb(240,216,3)" fg:x="47339" fg:w="14"/><text x="40.8746%" y="335.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.01%)</title><rect x="40.6246%" y="309" width="0.0120%" height="15" fill="rgb(232,218,17)" fg:x="47339" fg:w="14"/><text x="40.8746%" y="319.50"></text></g><g><title>[libc-2.31.so] (306 samples, 0.26%)</title><rect x="40.6366%" y="469" width="0.2626%" height="15" fill="rgb(229,163,45)" fg:x="47353" fg:w="306"/><text x="40.8866%" y="479.50"></text></g><g><title>[libc-2.31.so] (192 samples, 0.16%)</title><rect x="40.9026%" y="453" width="0.1648%" height="15" fill="rgb(231,110,42)" fg:x="47663" fg:w="192"/><text x="41.1526%" y="463.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (202 samples, 0.17%)</title><rect x="41.0948%" y="341" width="0.1733%" height="15" fill="rgb(208,170,48)" fg:x="47887" fg:w="202"/><text x="41.3448%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (441 samples, 0.38%)</title><rect x="40.8992%" y="469" width="0.3784%" height="15" fill="rgb(239,116,25)" fg:x="47659" fg:w="441"/><text x="41.1492%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (245 samples, 0.21%)</title><rect x="41.0674%" y="453" width="0.2102%" height="15" fill="rgb(219,200,50)" fg:x="47855" fg:w="245"/><text x="41.3174%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (245 samples, 0.21%)</title><rect x="41.0674%" y="437" width="0.2102%" height="15" fill="rgb(245,200,0)" fg:x="47855" fg:w="245"/><text x="41.3174%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (245 samples, 0.21%)</title><rect x="41.0674%" y="421" width="0.2102%" height="15" fill="rgb(245,119,33)" fg:x="47855" fg:w="245"/><text x="41.3174%" y="431.50"></text></g><g><title>alloc::alloc::alloc (245 samples, 0.21%)</title><rect x="41.0674%" y="405" width="0.2102%" height="15" fill="rgb(231,125,12)" fg:x="47855" fg:w="245"/><text x="41.3174%" y="415.50"></text></g><g><title>__rg_alloc (245 samples, 0.21%)</title><rect x="41.0674%" y="389" width="0.2102%" height="15" fill="rgb(216,96,41)" fg:x="47855" fg:w="245"/><text x="41.3174%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (245 samples, 0.21%)</title><rect x="41.0674%" y="373" width="0.2102%" height="15" fill="rgb(248,43,45)" fg:x="47855" fg:w="245"/><text x="41.3174%" y="383.50"></text></g><g><title>sn_rust_alloc (245 samples, 0.21%)</title><rect x="41.0674%" y="357" width="0.2102%" height="15" fill="rgb(217,222,7)" fg:x="47855" fg:w="245"/><text x="41.3174%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (15 samples, 0.01%)</title><rect x="41.2871%" y="437" width="0.0129%" height="15" fill="rgb(233,28,6)" fg:x="48111" fg:w="15"/><text x="41.5371%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="41.2871%" y="421" width="0.0129%" height="15" fill="rgb(231,218,15)" fg:x="48111" fg:w="15"/><text x="41.5371%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="41.2776%" y="453" width="0.0275%" height="15" fill="rgb(226,171,48)" fg:x="48100" fg:w="32"/><text x="41.5276%" y="463.50"></text></g><g><title>sn_rust_dealloc (30 samples, 0.03%)</title><rect x="41.3051%" y="453" width="0.0257%" height="15" fill="rgb(235,201,9)" fg:x="48132" fg:w="30"/><text x="41.5551%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (67 samples, 0.06%)</title><rect x="41.2776%" y="469" width="0.0575%" height="15" fill="rgb(217,80,15)" fg:x="48100" fg:w="67"/><text x="41.5276%" y="479.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (35 samples, 0.03%)</title><rect x="41.3489%" y="469" width="0.0300%" height="15" fill="rgb(219,152,8)" fg:x="48183" fg:w="35"/><text x="41.5989%" y="479.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (35 samples, 0.03%)</title><rect x="41.3489%" y="453" width="0.0300%" height="15" fill="rgb(243,107,38)" fg:x="48183" fg:w="35"/><text x="41.5989%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (30 samples, 0.03%)</title><rect x="41.3532%" y="437" width="0.0257%" height="15" fill="rgb(231,17,5)" fg:x="48188" fg:w="30"/><text x="41.6032%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (30 samples, 0.03%)</title><rect x="41.3532%" y="421" width="0.0257%" height="15" fill="rgb(209,25,54)" fg:x="48188" fg:w="30"/><text x="41.6032%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (21 samples, 0.02%)</title><rect x="41.3609%" y="405" width="0.0180%" height="15" fill="rgb(219,0,2)" fg:x="48197" fg:w="21"/><text x="41.6109%" y="415.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (21 samples, 0.02%)</title><rect x="41.3609%" y="389" width="0.0180%" height="15" fill="rgb(246,9,5)" fg:x="48197" fg:w="21"/><text x="41.6109%" y="399.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (21 samples, 0.02%)</title><rect x="41.3609%" y="373" width="0.0180%" height="15" fill="rgb(226,159,4)" fg:x="48197" fg:w="21"/><text x="41.6109%" y="383.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (19 samples, 0.02%)</title><rect x="41.3626%" y="357" width="0.0163%" height="15" fill="rgb(219,175,34)" fg:x="48199" fg:w="19"/><text x="41.6126%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,524 samples, 1.31%)</title><rect x="40.1140%" y="565" width="1.3078%" height="15" fill="rgb(236,10,46)" fg:x="46744" fg:w="1524"/><text x="40.3640%" y="575.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (1,524 samples, 1.31%)</title><rect x="40.1140%" y="549" width="1.3078%" height="15" fill="rgb(240,211,16)" fg:x="46744" fg:w="1524"/><text x="40.3640%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,524 samples, 1.31%)</title><rect x="40.1140%" y="533" width="1.3078%" height="15" fill="rgb(205,3,43)" fg:x="46744" fg:w="1524"/><text x="40.3640%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,524 samples, 1.31%)</title><rect x="40.1140%" y="517" width="1.3078%" height="15" fill="rgb(245,7,22)" fg:x="46744" fg:w="1524"/><text x="40.3640%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,524 samples, 1.31%)</title><rect x="40.1140%" y="501" width="1.3078%" height="15" fill="rgb(239,132,32)" fg:x="46744" fg:w="1524"/><text x="40.3640%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (1,519 samples, 1.30%)</title><rect x="40.1183%" y="485" width="1.3035%" height="15" fill="rgb(228,202,34)" fg:x="46749" fg:w="1519"/><text x="40.3683%" y="495.50"></text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (43 samples, 0.04%)</title><rect x="41.3849%" y="469" width="0.0369%" height="15" fill="rgb(254,200,22)" fg:x="48225" fg:w="43"/><text x="41.6349%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (43 samples, 0.04%)</title><rect x="41.3849%" y="453" width="0.0369%" height="15" fill="rgb(219,10,39)" fg:x="48225" fg:w="43"/><text x="41.6349%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (43 samples, 0.04%)</title><rect x="41.3849%" y="437" width="0.0369%" height="15" fill="rgb(226,210,39)" fg:x="48225" fg:w="43"/><text x="41.6349%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (20 samples, 0.02%)</title><rect x="41.4046%" y="421" width="0.0172%" height="15" fill="rgb(208,219,16)" fg:x="48248" fg:w="20"/><text x="41.6546%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (53 samples, 0.05%)</title><rect x="41.4819%" y="485" width="0.0455%" height="15" fill="rgb(216,158,51)" fg:x="48338" fg:w="53"/><text x="41.7319%" y="495.50"></text></g><g><title>core::mem::replace (53 samples, 0.05%)</title><rect x="41.4819%" y="469" width="0.0455%" height="15" fill="rgb(233,14,44)" fg:x="48338" fg:w="53"/><text x="41.7319%" y="479.50"></text></g><g><title>core::ptr::read (53 samples, 0.05%)</title><rect x="41.4819%" y="453" width="0.0455%" height="15" fill="rgb(237,97,39)" fg:x="48338" fg:w="53"/><text x="41.7319%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (88 samples, 0.08%)</title><rect x="41.4647%" y="501" width="0.0755%" height="15" fill="rgb(218,198,43)" fg:x="48318" fg:w="88"/><text x="41.7147%" y="511.50"></text></g><g><title>core::mem::drop (15 samples, 0.01%)</title><rect x="41.5274%" y="485" width="0.0129%" height="15" fill="rgb(231,104,20)" fg:x="48391" fg:w="15"/><text x="41.7774%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (15 samples, 0.01%)</title><rect x="41.5274%" y="469" width="0.0129%" height="15" fill="rgb(254,36,13)" fg:x="48391" fg:w="15"/><text x="41.7774%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (81 samples, 0.07%)</title><rect x="41.5402%" y="501" width="0.0695%" height="15" fill="rgb(248,14,50)" fg:x="48406" fg:w="81"/><text x="41.7902%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (81 samples, 0.07%)</title><rect x="41.5402%" y="485" width="0.0695%" height="15" fill="rgb(217,107,29)" fg:x="48406" fg:w="81"/><text x="41.7902%" y="495.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.07%)</title><rect x="41.5402%" y="469" width="0.0695%" height="15" fill="rgb(251,169,33)" fg:x="48406" fg:w="81"/><text x="41.7902%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (75 samples, 0.06%)</title><rect x="41.5454%" y="453" width="0.0644%" height="15" fill="rgb(217,108,32)" fg:x="48412" fg:w="75"/><text x="41.7954%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (75 samples, 0.06%)</title><rect x="41.5454%" y="437" width="0.0644%" height="15" fill="rgb(219,66,42)" fg:x="48412" fg:w="75"/><text x="41.7954%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (75 samples, 0.06%)</title><rect x="41.5454%" y="421" width="0.0644%" height="15" fill="rgb(206,180,7)" fg:x="48412" fg:w="75"/><text x="41.7954%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (75 samples, 0.06%)</title><rect x="41.5454%" y="405" width="0.0644%" height="15" fill="rgb(208,226,31)" fg:x="48412" fg:w="75"/><text x="41.7954%" y="415.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (323 samples, 0.28%)</title><rect x="41.4390%" y="517" width="0.2772%" height="15" fill="rgb(218,26,49)" fg:x="48288" fg:w="323"/><text x="41.6890%" y="527.50"></text></g><g><title>event_listener::Inner::lock (116 samples, 0.10%)</title><rect x="41.6166%" y="501" width="0.0995%" height="15" fill="rgb(233,197,48)" fg:x="48495" fg:w="116"/><text x="41.8666%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (111 samples, 0.10%)</title><rect x="41.6209%" y="485" width="0.0953%" height="15" fill="rgb(252,181,51)" fg:x="48500" fg:w="111"/><text x="41.8709%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (103 samples, 0.09%)</title><rect x="41.6278%" y="469" width="0.0884%" height="15" fill="rgb(253,90,19)" fg:x="48508" fg:w="103"/><text x="41.8778%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (103 samples, 0.09%)</title><rect x="41.6278%" y="453" width="0.0884%" height="15" fill="rgb(215,171,30)" fg:x="48508" fg:w="103"/><text x="41.8778%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (103 samples, 0.09%)</title><rect x="41.6278%" y="437" width="0.0884%" height="15" fill="rgb(214,222,9)" fg:x="48508" fg:w="103"/><text x="41.8778%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (103 samples, 0.09%)</title><rect x="41.6278%" y="421" width="0.0884%" height="15" fill="rgb(223,3,22)" fg:x="48508" fg:w="103"/><text x="41.8778%" y="431.50"></text></g><g><title>concurrent_queue::full_fence (133 samples, 0.11%)</title><rect x="41.7410%" y="469" width="0.1141%" height="15" fill="rgb(225,196,46)" fg:x="48640" fg:w="133"/><text x="41.9910%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (133 samples, 0.11%)</title><rect x="41.7410%" y="453" width="0.1141%" height="15" fill="rgb(209,110,37)" fg:x="48640" fg:w="133"/><text x="41.9910%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (133 samples, 0.11%)</title><rect x="41.7410%" y="437" width="0.1141%" height="15" fill="rgb(249,89,12)" fg:x="48640" fg:w="133"/><text x="41.9910%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (133 samples, 0.11%)</title><rect x="41.7410%" y="421" width="0.1141%" height="15" fill="rgb(226,27,33)" fg:x="48640" fg:w="133"/><text x="41.9910%" y="431.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (507 samples, 0.44%)</title><rect x="41.4218%" y="533" width="0.4351%" height="15" fill="rgb(213,82,22)" fg:x="48268" fg:w="507"/><text x="41.6718%" y="543.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (164 samples, 0.14%)</title><rect x="41.7162%" y="517" width="0.1407%" height="15" fill="rgb(248,140,0)" fg:x="48611" fg:w="164"/><text x="41.9662%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (158 samples, 0.14%)</title><rect x="41.7213%" y="501" width="0.1356%" height="15" fill="rgb(228,106,3)" fg:x="48617" fg:w="158"/><text x="41.9713%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (154 samples, 0.13%)</title><rect x="41.7247%" y="485" width="0.1322%" height="15" fill="rgb(209,23,37)" fg:x="48621" fg:w="154"/><text x="41.9747%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (208 samples, 0.18%)</title><rect x="42.3100%" y="389" width="0.1785%" height="15" fill="rgb(241,93,50)" fg:x="49303" fg:w="208"/><text x="42.5600%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (208 samples, 0.18%)</title><rect x="42.3100%" y="373" width="0.1785%" height="15" fill="rgb(253,46,43)" fg:x="49303" fg:w="208"/><text x="42.5600%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (208 samples, 0.18%)</title><rect x="42.3100%" y="357" width="0.1785%" height="15" fill="rgb(226,206,43)" fg:x="49303" fg:w="208"/><text x="42.5600%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (204 samples, 0.18%)</title><rect x="42.3134%" y="341" width="0.1751%" height="15" fill="rgb(217,54,7)" fg:x="49307" fg:w="204"/><text x="42.5634%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (204 samples, 0.18%)</title><rect x="42.3134%" y="325" width="0.1751%" height="15" fill="rgb(223,5,52)" fg:x="49307" fg:w="204"/><text x="42.5634%" y="335.50"></text></g><g><title>alloc::alloc::alloc (204 samples, 0.18%)</title><rect x="42.3134%" y="309" width="0.1751%" height="15" fill="rgb(206,52,46)" fg:x="49307" fg:w="204"/><text x="42.5634%" y="319.50"></text></g><g><title>__rg_alloc (204 samples, 0.18%)</title><rect x="42.3134%" y="293" width="0.1751%" height="15" fill="rgb(253,136,11)" fg:x="49307" fg:w="204"/><text x="42.5634%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (204 samples, 0.18%)</title><rect x="42.3134%" y="277" width="0.1751%" height="15" fill="rgb(208,106,33)" fg:x="49307" fg:w="204"/><text x="42.5634%" y="287.50"></text></g><g><title>sn_rust_alloc (193 samples, 0.17%)</title><rect x="42.3229%" y="261" width="0.1656%" height="15" fill="rgb(206,54,4)" fg:x="49318" fg:w="193"/><text x="42.5729%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (253 samples, 0.22%)</title><rect x="42.2946%" y="469" width="0.2171%" height="15" fill="rgb(213,3,15)" fg:x="49285" fg:w="253"/><text x="42.5446%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (238 samples, 0.20%)</title><rect x="42.3074%" y="453" width="0.2042%" height="15" fill="rgb(252,211,39)" fg:x="49300" fg:w="238"/><text x="42.5574%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (238 samples, 0.20%)</title><rect x="42.3074%" y="437" width="0.2042%" height="15" fill="rgb(223,6,36)" fg:x="49300" fg:w="238"/><text x="42.5574%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (238 samples, 0.20%)</title><rect x="42.3074%" y="421" width="0.2042%" height="15" fill="rgb(252,169,45)" fg:x="49300" fg:w="238"/><text x="42.5574%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (238 samples, 0.20%)</title><rect x="42.3074%" y="405" width="0.2042%" height="15" fill="rgb(212,48,26)" fg:x="49300" fg:w="238"/><text x="42.5574%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (27 samples, 0.02%)</title><rect x="42.4885%" y="389" width="0.0232%" height="15" fill="rgb(251,102,48)" fg:x="49511" fg:w="27"/><text x="42.7385%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.02%)</title><rect x="42.4885%" y="373" width="0.0232%" height="15" fill="rgb(243,208,16)" fg:x="49511" fg:w="27"/><text x="42.7385%" y="383.50"></text></g><g><title>[libc-2.31.so] (26 samples, 0.02%)</title><rect x="42.4894%" y="357" width="0.0223%" height="15" fill="rgb(219,96,24)" fg:x="49512" fg:w="26"/><text x="42.7394%" y="367.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (18 samples, 0.02%)</title><rect x="42.5838%" y="181" width="0.0154%" height="15" fill="rgb(219,33,29)" fg:x="49622" fg:w="18"/><text x="42.8338%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (81 samples, 0.07%)</title><rect x="42.5306%" y="325" width="0.0695%" height="15" fill="rgb(223,176,5)" fg:x="49560" fg:w="81"/><text x="42.7806%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (81 samples, 0.07%)</title><rect x="42.5306%" y="309" width="0.0695%" height="15" fill="rgb(228,140,14)" fg:x="49560" fg:w="81"/><text x="42.7806%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (81 samples, 0.07%)</title><rect x="42.5306%" y="293" width="0.0695%" height="15" fill="rgb(217,179,31)" fg:x="49560" fg:w="81"/><text x="42.7806%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (74 samples, 0.06%)</title><rect x="42.5366%" y="277" width="0.0635%" height="15" fill="rgb(230,9,30)" fg:x="49567" fg:w="74"/><text x="42.7866%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (74 samples, 0.06%)</title><rect x="42.5366%" y="261" width="0.0635%" height="15" fill="rgb(230,136,20)" fg:x="49567" fg:w="74"/><text x="42.7866%" y="271.50"></text></g><g><title>alloc::alloc::alloc (74 samples, 0.06%)</title><rect x="42.5366%" y="245" width="0.0635%" height="15" fill="rgb(215,210,22)" fg:x="49567" fg:w="74"/><text x="42.7866%" y="255.50"></text></g><g><title>__rg_alloc (74 samples, 0.06%)</title><rect x="42.5366%" y="229" width="0.0635%" height="15" fill="rgb(218,43,5)" fg:x="49567" fg:w="74"/><text x="42.7866%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (74 samples, 0.06%)</title><rect x="42.5366%" y="213" width="0.0635%" height="15" fill="rgb(216,11,5)" fg:x="49567" fg:w="74"/><text x="42.7866%" y="223.50"></text></g><g><title>sn_rust_alloc (65 samples, 0.06%)</title><rect x="42.5443%" y="197" width="0.0558%" height="15" fill="rgb(209,82,29)" fg:x="49576" fg:w="65"/><text x="42.7943%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (177 samples, 0.15%)</title><rect x="42.5194%" y="405" width="0.1519%" height="15" fill="rgb(244,115,12)" fg:x="49547" fg:w="177"/><text x="42.7694%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (164 samples, 0.14%)</title><rect x="42.5306%" y="389" width="0.1407%" height="15" fill="rgb(222,82,18)" fg:x="49560" fg:w="164"/><text x="42.7806%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (164 samples, 0.14%)</title><rect x="42.5306%" y="373" width="0.1407%" height="15" fill="rgb(249,227,8)" fg:x="49560" fg:w="164"/><text x="42.7806%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (164 samples, 0.14%)</title><rect x="42.5306%" y="357" width="0.1407%" height="15" fill="rgb(253,141,45)" fg:x="49560" fg:w="164"/><text x="42.7806%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (164 samples, 0.14%)</title><rect x="42.5306%" y="341" width="0.1407%" height="15" fill="rgb(234,184,4)" fg:x="49560" fg:w="164"/><text x="42.7806%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (83 samples, 0.07%)</title><rect x="42.6001%" y="325" width="0.0712%" height="15" fill="rgb(218,194,23)" fg:x="49641" fg:w="83"/><text x="42.8501%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (83 samples, 0.07%)</title><rect x="42.6001%" y="309" width="0.0712%" height="15" fill="rgb(235,66,41)" fg:x="49641" fg:w="83"/><text x="42.8501%" y="319.50"></text></g><g><title>[libc-2.31.so] (78 samples, 0.07%)</title><rect x="42.6044%" y="293" width="0.0669%" height="15" fill="rgb(245,217,1)" fg:x="49646" fg:w="78"/><text x="42.8544%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="42.6713%" y="405" width="0.0129%" height="15" fill="rgb(229,91,1)" fg:x="49724" fg:w="15"/><text x="42.9213%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (39 samples, 0.03%)</title><rect x="42.6927%" y="357" width="0.0335%" height="15" fill="rgb(207,101,30)" fg:x="49749" fg:w="39"/><text x="42.9427%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 0.03%)</title><rect x="42.6927%" y="341" width="0.0335%" height="15" fill="rgb(223,82,49)" fg:x="49749" fg:w="39"/><text x="42.9427%" y="351.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.03%)</title><rect x="42.6936%" y="325" width="0.0326%" height="15" fill="rgb(218,167,17)" fg:x="49750" fg:w="38"/><text x="42.9436%" y="335.50"></text></g><g><title>__rg_alloc (38 samples, 0.03%)</title><rect x="42.6936%" y="309" width="0.0326%" height="15" fill="rgb(208,103,14)" fg:x="49750" fg:w="38"/><text x="42.9436%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (38 samples, 0.03%)</title><rect x="42.6936%" y="293" width="0.0326%" height="15" fill="rgb(238,20,8)" fg:x="49750" fg:w="38"/><text x="42.9436%" y="303.50"></text></g><g><title>sn_rust_alloc (38 samples, 0.03%)</title><rect x="42.6936%" y="277" width="0.0326%" height="15" fill="rgb(218,80,54)" fg:x="49750" fg:w="38"/><text x="42.9436%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (49 samples, 0.04%)</title><rect x="42.6850%" y="405" width="0.0420%" height="15" fill="rgb(240,144,17)" fg:x="49740" fg:w="49"/><text x="42.9350%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (40 samples, 0.03%)</title><rect x="42.6927%" y="389" width="0.0343%" height="15" fill="rgb(245,27,50)" fg:x="49749" fg:w="40"/><text x="42.9427%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (40 samples, 0.03%)</title><rect x="42.6927%" y="373" width="0.0343%" height="15" fill="rgb(251,51,7)" fg:x="49749" fg:w="40"/><text x="42.9427%" y="383.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (745 samples, 0.64%)</title><rect x="42.0895%" y="485" width="0.6393%" height="15" fill="rgb(245,217,29)" fg:x="49046" fg:w="745"/><text x="42.3395%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (253 samples, 0.22%)</title><rect x="42.5117%" y="469" width="0.2171%" height="15" fill="rgb(221,176,29)" fg:x="49538" fg:w="253"/><text x="42.7617%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (249 samples, 0.21%)</title><rect x="42.5151%" y="453" width="0.2137%" height="15" fill="rgb(212,180,24)" fg:x="49542" fg:w="249"/><text x="42.7651%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (249 samples, 0.21%)</title><rect x="42.5151%" y="437" width="0.2137%" height="15" fill="rgb(254,24,2)" fg:x="49542" fg:w="249"/><text x="42.7651%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (249 samples, 0.21%)</title><rect x="42.5151%" y="421" width="0.2137%" height="15" fill="rgb(230,100,2)" fg:x="49542" fg:w="249"/><text x="42.7651%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (15 samples, 0.01%)</title><rect x="42.7588%" y="405" width="0.0129%" height="15" fill="rgb(219,142,25)" fg:x="49826" fg:w="15"/><text x="43.0088%" y="415.50"></text></g><g><title>core::time::Duration::as_nanos (21 samples, 0.02%)</title><rect x="42.7717%" y="405" width="0.0180%" height="15" fill="rgb(240,73,43)" fg:x="49841" fg:w="21"/><text x="43.0217%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (59 samples, 0.05%)</title><rect x="42.7897%" y="389" width="0.0506%" height="15" fill="rgb(214,114,15)" fg:x="49862" fg:w="59"/><text x="43.0397%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (18 samples, 0.02%)</title><rect x="42.8618%" y="357" width="0.0154%" height="15" fill="rgb(207,130,4)" fg:x="49946" fg:w="18"/><text x="43.1118%" y="367.50"></text></g><g><title>core::cmp::PartialOrd::ge (18 samples, 0.02%)</title><rect x="42.8618%" y="341" width="0.0154%" height="15" fill="rgb(221,25,40)" fg:x="49946" fg:w="18"/><text x="43.1118%" y="351.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (18 samples, 0.02%)</title><rect x="42.8618%" y="325" width="0.0154%" height="15" fill="rgb(241,184,7)" fg:x="49946" fg:w="18"/><text x="43.1118%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (12 samples, 0.01%)</title><rect x="42.8670%" y="309" width="0.0103%" height="15" fill="rgb(235,159,4)" fg:x="49952" fg:w="12"/><text x="43.1170%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (12 samples, 0.01%)</title><rect x="42.8670%" y="293" width="0.0103%" height="15" fill="rgb(214,87,48)" fg:x="49952" fg:w="12"/><text x="43.1170%" y="303.50"></text></g><g><title>std::time::SystemTime::duration_since (113 samples, 0.10%)</title><rect x="42.7897%" y="405" width="0.0970%" height="15" fill="rgb(246,198,24)" fg:x="49862" fg:w="113"/><text x="43.0397%" y="415.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (54 samples, 0.05%)</title><rect x="42.8403%" y="389" width="0.0463%" height="15" fill="rgb(209,66,40)" fg:x="49921" fg:w="54"/><text x="43.0903%" y="399.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (54 samples, 0.05%)</title><rect x="42.8403%" y="373" width="0.0463%" height="15" fill="rgb(233,147,39)" fg:x="49921" fg:w="54"/><text x="43.0903%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (426 samples, 0.37%)</title><rect x="42.7288%" y="485" width="0.3656%" height="15" fill="rgb(231,145,52)" fg:x="49791" fg:w="426"/><text x="42.9788%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (426 samples, 0.37%)</title><rect x="42.7288%" y="469" width="0.3656%" height="15" fill="rgb(206,20,26)" fg:x="49791" fg:w="426"/><text x="42.9788%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (416 samples, 0.36%)</title><rect x="42.7374%" y="453" width="0.3570%" height="15" fill="rgb(238,220,4)" fg:x="49801" fg:w="416"/><text x="42.9874%" y="463.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}::{{closure}} (416 samples, 0.36%)</title><rect x="42.7374%" y="437" width="0.3570%" height="15" fill="rgb(252,195,42)" fg:x="49801" fg:w="416"/><text x="42.9874%" y="447.50"></text></g><g><title>tremor_common::time::nanotime (405 samples, 0.35%)</title><rect x="42.7468%" y="421" width="0.3476%" height="15" fill="rgb(209,10,6)" fg:x="49812" fg:w="405"/><text x="42.9968%" y="431.50"></text></g><g><title>std::time::SystemTime::now (242 samples, 0.21%)</title><rect x="42.8867%" y="405" width="0.2077%" height="15" fill="rgb(229,3,52)" fg:x="49975" fg:w="242"/><text x="43.1367%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (242 samples, 0.21%)</title><rect x="42.8867%" y="389" width="0.2077%" height="15" fill="rgb(253,49,37)" fg:x="49975" fg:w="242"/><text x="43.1367%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (242 samples, 0.21%)</title><rect x="42.8867%" y="373" width="0.2077%" height="15" fill="rgb(240,103,49)" fg:x="49975" fg:w="242"/><text x="43.1367%" y="383.50"></text></g><g><title>__clock_gettime (204 samples, 0.18%)</title><rect x="42.9193%" y="357" width="0.1751%" height="15" fill="rgb(250,182,30)" fg:x="50013" fg:w="204"/><text x="43.1693%" y="367.50"></text></g><g><title>__vdso_clock_gettime (198 samples, 0.17%)</title><rect x="42.9244%" y="341" width="0.1699%" height="15" fill="rgb(248,8,30)" fg:x="50019" fg:w="198"/><text x="43.1744%" y="351.50"></text></g><g><title>[[vdso]] (186 samples, 0.16%)</title><rect x="42.9347%" y="325" width="0.1596%" height="15" fill="rgb(237,120,30)" fg:x="50031" fg:w="186"/><text x="43.1847%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (56 samples, 0.05%)</title><rect x="43.1132%" y="453" width="0.0481%" height="15" fill="rgb(221,146,34)" fg:x="50239" fg:w="56"/><text x="43.3632%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (19 samples, 0.02%)</title><rect x="43.1450%" y="437" width="0.0163%" height="15" fill="rgb(242,55,13)" fg:x="50276" fg:w="19"/><text x="43.3950%" y="447.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (348 samples, 0.30%)</title><rect x="43.3149%" y="261" width="0.2986%" height="15" fill="rgb(242,112,31)" fg:x="50474" fg:w="348"/><text x="43.5649%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (544 samples, 0.47%)</title><rect x="43.1622%" y="405" width="0.4668%" height="15" fill="rgb(249,192,27)" fg:x="50296" fg:w="544"/><text x="43.4122%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (541 samples, 0.46%)</title><rect x="43.1647%" y="389" width="0.4643%" height="15" fill="rgb(208,204,44)" fg:x="50299" fg:w="541"/><text x="43.4147%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (541 samples, 0.46%)</title><rect x="43.1647%" y="373" width="0.4643%" height="15" fill="rgb(208,93,54)" fg:x="50299" fg:w="541"/><text x="43.4147%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (538 samples, 0.46%)</title><rect x="43.1673%" y="357" width="0.4617%" height="15" fill="rgb(242,1,31)" fg:x="50302" fg:w="538"/><text x="43.4173%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (538 samples, 0.46%)</title><rect x="43.1673%" y="341" width="0.4617%" height="15" fill="rgb(241,83,25)" fg:x="50302" fg:w="538"/><text x="43.4173%" y="351.50"></text></g><g><title>alloc::alloc::alloc (538 samples, 0.46%)</title><rect x="43.1673%" y="325" width="0.4617%" height="15" fill="rgb(205,169,50)" fg:x="50302" fg:w="538"/><text x="43.4173%" y="335.50"></text></g><g><title>__rg_alloc (538 samples, 0.46%)</title><rect x="43.1673%" y="309" width="0.4617%" height="15" fill="rgb(239,186,37)" fg:x="50302" fg:w="538"/><text x="43.4173%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (538 samples, 0.46%)</title><rect x="43.1673%" y="293" width="0.4617%" height="15" fill="rgb(205,221,10)" fg:x="50302" fg:w="538"/><text x="43.4173%" y="303.50"></text></g><g><title>sn_rust_alloc (532 samples, 0.46%)</title><rect x="43.1725%" y="277" width="0.4565%" height="15" fill="rgb(218,196,15)" fg:x="50308" fg:w="532"/><text x="43.4225%" y="287.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="43.6136%" y="261" width="0.0154%" height="15" fill="rgb(218,196,35)" fg:x="50822" fg:w="18"/><text x="43.8636%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (812 samples, 0.70%)</title><rect x="43.1132%" y="469" width="0.6968%" height="15" fill="rgb(233,63,24)" fg:x="50239" fg:w="812"/><text x="43.3632%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (756 samples, 0.65%)</title><rect x="43.1613%" y="453" width="0.6488%" height="15" fill="rgb(225,8,4)" fg:x="50295" fg:w="756"/><text x="43.4113%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (756 samples, 0.65%)</title><rect x="43.1613%" y="437" width="0.6488%" height="15" fill="rgb(234,105,35)" fg:x="50295" fg:w="756"/><text x="43.4113%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (756 samples, 0.65%)</title><rect x="43.1613%" y="421" width="0.6488%" height="15" fill="rgb(236,21,32)" fg:x="50295" fg:w="756"/><text x="43.4113%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (211 samples, 0.18%)</title><rect x="43.6290%" y="405" width="0.1811%" height="15" fill="rgb(228,109,6)" fg:x="50840" fg:w="211"/><text x="43.8790%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (211 samples, 0.18%)</title><rect x="43.6290%" y="389" width="0.1811%" height="15" fill="rgb(229,215,31)" fg:x="50840" fg:w="211"/><text x="43.8790%" y="399.50"></text></g><g><title>[libc-2.31.so] (211 samples, 0.18%)</title><rect x="43.6290%" y="373" width="0.1811%" height="15" fill="rgb(221,52,54)" fg:x="50840" fg:w="211"/><text x="43.8790%" y="383.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,277 samples, 1.95%)</title><rect x="41.8569%" y="517" width="1.9540%" height="15" fill="rgb(252,129,43)" fg:x="48775" fg:w="2277"/><text x="42.1069%" y="527.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (2,258 samples, 1.94%)</title><rect x="41.8732%" y="501" width="1.9377%" height="15" fill="rgb(248,183,27)" fg:x="48794" fg:w="2258"/><text x="42.1232%" y="511.50">&lt;..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (833 samples, 0.71%)</title><rect x="43.0961%" y="485" width="0.7148%" height="15" fill="rgb(250,0,22)" fg:x="50219" fg:w="833"/><text x="43.3461%" y="495.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,282 samples, 1.96%)</title><rect x="41.8569%" y="533" width="1.9583%" height="15" fill="rgb(213,166,10)" fg:x="48775" fg:w="2282"/><text x="42.1069%" y="543.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (4,314 samples, 3.70%)</title><rect x="40.1140%" y="581" width="3.7021%" height="15" fill="rgb(207,163,36)" fg:x="46744" fg:w="4314"/><text x="40.3640%" y="591.50">trem..</text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (2,790 samples, 2.39%)</title><rect x="41.4218%" y="565" width="2.3943%" height="15" fill="rgb(208,122,22)" fg:x="48268" fg:w="2790"/><text x="41.6718%" y="575.50">&lt;f..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (2,790 samples, 2.39%)</title><rect x="41.4218%" y="549" width="2.3943%" height="15" fill="rgb(207,104,49)" fg:x="48268" fg:w="2790"/><text x="41.6718%" y="559.50">fu..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.01%)</title><rect x="43.8607%" y="517" width="0.0137%" height="15" fill="rgb(248,211,50)" fg:x="51110" fg:w="16"/><text x="44.1107%" y="527.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (348 samples, 0.30%)</title><rect x="43.8281%" y="533" width="0.2986%" height="15" fill="rgb(217,13,45)" fg:x="51072" fg:w="348"/><text x="44.0781%" y="543.50"></text></g><g><title>[libc-2.31.so] (294 samples, 0.25%)</title><rect x="43.8744%" y="517" width="0.2523%" height="15" fill="rgb(211,216,49)" fg:x="51126" fg:w="294"/><text x="44.1244%" y="527.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (522 samples, 0.45%)</title><rect x="43.8161%" y="565" width="0.4480%" height="15" fill="rgb(221,58,53)" fg:x="51058" fg:w="522"/><text x="44.0661%" y="575.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (522 samples, 0.45%)</title><rect x="43.8161%" y="549" width="0.4480%" height="15" fill="rgb(220,112,41)" fg:x="51058" fg:w="522"/><text x="44.0661%" y="559.50"></text></g><g><title>[libc-2.31.so] (160 samples, 0.14%)</title><rect x="44.1267%" y="533" width="0.1373%" height="15" fill="rgb(236,38,28)" fg:x="51420" fg:w="160"/><text x="44.3767%" y="543.50"></text></g><g><title>[libc-2.31.so] (72 samples, 0.06%)</title><rect x="44.2718%" y="549" width="0.0618%" height="15" fill="rgb(227,195,22)" fg:x="51589" fg:w="72"/><text x="44.5218%" y="559.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::operator::TrickleOperator as tremor_pipeline::op::Operator&gt;::on_event (182 samples, 0.16%)</title><rect x="44.3336%" y="485" width="0.1562%" height="15" fill="rgb(214,55,33)" fg:x="51661" fg:w="182"/><text x="44.5836%" y="495.50"></text></g><g><title>[libc-2.31.so] (128 samples, 0.11%)</title><rect x="44.3799%" y="469" width="0.1098%" height="15" fill="rgb(248,80,13)" fg:x="51715" fg:w="128"/><text x="44.6299%" y="479.50"></text></g><g><title>[libc-2.31.so] (73 samples, 0.06%)</title><rect x="44.5910%" y="469" width="0.0626%" height="15" fill="rgb(238,52,6)" fg:x="51961" fg:w="73"/><text x="44.8410%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="45.0810%" y="389" width="0.0129%" height="15" fill="rgb(224,198,47)" fg:x="52532" fg:w="15"/><text x="45.3310%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)]&gt; (15 samples, 0.01%)</title><rect x="45.0810%" y="373" width="0.0129%" height="15" fill="rgb(233,171,20)" fg:x="52532" fg:w="15"/><text x="45.3310%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (498 samples, 0.43%)</title><rect x="44.6708%" y="437" width="0.4274%" height="15" fill="rgb(241,30,25)" fg:x="52054" fg:w="498"/><text x="44.9208%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::op::EventAndInsights as core::convert::From&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt;&gt;::from (477 samples, 0.41%)</title><rect x="44.6888%" y="421" width="0.4093%" height="15" fill="rgb(207,171,38)" fg:x="52075" fg:w="477"/><text x="44.9388%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (20 samples, 0.02%)</title><rect x="45.0810%" y="405" width="0.0172%" height="15" fill="rgb(234,70,1)" fg:x="52532" fg:w="20"/><text x="45.3310%" y="415.50"></text></g><g><title>[libc-2.31.so] (86 samples, 0.07%)</title><rect x="45.0982%" y="437" width="0.0738%" height="15" fill="rgb(232,178,18)" fg:x="52552" fg:w="86"/><text x="45.3482%" y="447.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (44 samples, 0.04%)</title><rect x="45.2981%" y="325" width="0.0378%" height="15" fill="rgb(241,78,40)" fg:x="52785" fg:w="44"/><text x="45.5481%" y="335.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event::{{closure}} (797 samples, 0.68%)</title><rect x="44.6648%" y="453" width="0.6840%" height="15" fill="rgb(222,35,25)" fg:x="52047" fg:w="797"/><text x="44.9148%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (206 samples, 0.18%)</title><rect x="45.1720%" y="437" width="0.1768%" height="15" fill="rgb(207,92,16)" fg:x="52638" fg:w="206"/><text x="45.4220%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (203 samples, 0.17%)</title><rect x="45.1746%" y="421" width="0.1742%" height="15" fill="rgb(216,59,51)" fg:x="52641" fg:w="203"/><text x="45.4246%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (203 samples, 0.17%)</title><rect x="45.1746%" y="405" width="0.1742%" height="15" fill="rgb(213,80,28)" fg:x="52641" fg:w="203"/><text x="45.4246%" y="415.50"></text></g><g><title>alloc::alloc::alloc (203 samples, 0.17%)</title><rect x="45.1746%" y="389" width="0.1742%" height="15" fill="rgb(220,93,7)" fg:x="52641" fg:w="203"/><text x="45.4246%" y="399.50"></text></g><g><title>__rg_alloc (203 samples, 0.17%)</title><rect x="45.1746%" y="373" width="0.1742%" height="15" fill="rgb(225,24,44)" fg:x="52641" fg:w="203"/><text x="45.4246%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (203 samples, 0.17%)</title><rect x="45.1746%" y="357" width="0.1742%" height="15" fill="rgb(243,74,40)" fg:x="52641" fg:w="203"/><text x="45.4246%" y="367.50"></text></g><g><title>sn_rust_alloc (199 samples, 0.17%)</title><rect x="45.1780%" y="341" width="0.1708%" height="15" fill="rgb(228,39,7)" fg:x="52645" fg:w="199"/><text x="45.4280%" y="351.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="45.3359%" y="325" width="0.0129%" height="15" fill="rgb(227,79,8)" fg:x="52829" fg:w="15"/><text x="45.5859%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (893 samples, 0.77%)</title><rect x="44.6562%" y="469" width="0.7663%" height="15" fill="rgb(236,58,11)" fg:x="52037" fg:w="893"/><text x="44.9062%" y="479.50"></text></g><g><title>[libc-2.31.so] (86 samples, 0.07%)</title><rect x="45.3488%" y="453" width="0.0738%" height="15" fill="rgb(249,63,35)" fg:x="52844" fg:w="86"/><text x="45.5988%" y="463.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (1,279 samples, 1.10%)</title><rect x="44.3336%" y="549" width="1.0976%" height="15" fill="rgb(252,114,16)" fg:x="51661" fg:w="1279"/><text x="44.5836%" y="559.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,279 samples, 1.10%)</title><rect x="44.3336%" y="533" width="1.0976%" height="15" fill="rgb(254,151,24)" fg:x="51661" fg:w="1279"/><text x="44.5836%" y="543.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,279 samples, 1.10%)</title><rect x="44.3336%" y="517" width="1.0976%" height="15" fill="rgb(253,54,39)" fg:x="51661" fg:w="1279"/><text x="44.5836%" y="527.50"></text></g><g><title>&lt;tremor_pipeline::executable_graph::OperatorNode as tremor_pipeline::op::Operator&gt;::on_event (1,279 samples, 1.10%)</title><rect x="44.3336%" y="501" width="1.0976%" height="15" fill="rgb(243,25,45)" fg:x="51661" fg:w="1279"/><text x="44.5836%" y="511.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event (1,097 samples, 0.94%)</title><rect x="44.4897%" y="485" width="0.9414%" height="15" fill="rgb(234,134,9)" fg:x="51843" fg:w="1097"/><text x="44.7397%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="45.5384%" y="517" width="0.0129%" height="15" fill="rgb(227,166,31)" fg:x="53065" fg:w="15"/><text x="45.7884%" y="527.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (155 samples, 0.13%)</title><rect x="45.5384%" y="533" width="0.1330%" height="15" fill="rgb(245,143,41)" fg:x="53065" fg:w="155"/><text x="45.7884%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (140 samples, 0.12%)</title><rect x="45.5513%" y="517" width="0.1201%" height="15" fill="rgb(238,181,32)" fg:x="53080" fg:w="140"/><text x="45.8013%" y="527.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (139 samples, 0.12%)</title><rect x="45.5521%" y="501" width="0.1193%" height="15" fill="rgb(224,113,18)" fg:x="53081" fg:w="139"/><text x="45.8021%" y="511.50"></text></g><g><title>core::ptr::read (139 samples, 0.12%)</title><rect x="45.5521%" y="485" width="0.1193%" height="15" fill="rgb(240,229,28)" fg:x="53081" fg:w="139"/><text x="45.8021%" y="495.50"></text></g><g><title>[libc-2.31.so] (135 samples, 0.12%)</title><rect x="45.5556%" y="469" width="0.1159%" height="15" fill="rgb(250,185,3)" fg:x="53085" fg:w="135"/><text x="45.8056%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (209 samples, 0.18%)</title><rect x="45.6749%" y="405" width="0.1794%" height="15" fill="rgb(212,59,25)" fg:x="53224" fg:w="209"/><text x="45.9249%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (209 samples, 0.18%)</title><rect x="45.6749%" y="389" width="0.1794%" height="15" fill="rgb(221,87,20)" fg:x="53224" fg:w="209"/><text x="45.9249%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (209 samples, 0.18%)</title><rect x="45.6749%" y="373" width="0.1794%" height="15" fill="rgb(213,74,28)" fg:x="53224" fg:w="209"/><text x="45.9249%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (207 samples, 0.18%)</title><rect x="45.6766%" y="357" width="0.1776%" height="15" fill="rgb(224,132,34)" fg:x="53226" fg:w="207"/><text x="45.9266%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (207 samples, 0.18%)</title><rect x="45.6766%" y="341" width="0.1776%" height="15" fill="rgb(222,101,24)" fg:x="53226" fg:w="207"/><text x="45.9266%" y="351.50"></text></g><g><title>alloc::alloc::alloc (207 samples, 0.18%)</title><rect x="45.6766%" y="325" width="0.1776%" height="15" fill="rgb(254,142,4)" fg:x="53226" fg:w="207"/><text x="45.9266%" y="335.50"></text></g><g><title>__rg_alloc (207 samples, 0.18%)</title><rect x="45.6766%" y="309" width="0.1776%" height="15" fill="rgb(230,229,49)" fg:x="53226" fg:w="207"/><text x="45.9266%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (207 samples, 0.18%)</title><rect x="45.6766%" y="293" width="0.1776%" height="15" fill="rgb(238,70,47)" fg:x="53226" fg:w="207"/><text x="45.9266%" y="303.50"></text></g><g><title>sn_rust_alloc (199 samples, 0.17%)</title><rect x="45.6834%" y="277" width="0.1708%" height="15" fill="rgb(231,160,17)" fg:x="53234" fg:w="199"/><text x="45.9334%" y="287.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (237 samples, 0.20%)</title><rect x="45.6749%" y="533" width="0.2034%" height="15" fill="rgb(218,68,53)" fg:x="53224" fg:w="237"/><text x="45.9249%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (237 samples, 0.20%)</title><rect x="45.6749%" y="517" width="0.2034%" height="15" fill="rgb(236,111,10)" fg:x="53224" fg:w="237"/><text x="45.9249%" y="527.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (237 samples, 0.20%)</title><rect x="45.6749%" y="501" width="0.2034%" height="15" fill="rgb(224,34,41)" fg:x="53224" fg:w="237"/><text x="45.9249%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (237 samples, 0.20%)</title><rect x="45.6749%" y="485" width="0.2034%" height="15" fill="rgb(241,118,19)" fg:x="53224" fg:w="237"/><text x="45.9249%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (237 samples, 0.20%)</title><rect x="45.6749%" y="469" width="0.2034%" height="15" fill="rgb(238,129,25)" fg:x="53224" fg:w="237"/><text x="45.9249%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (237 samples, 0.20%)</title><rect x="45.6749%" y="453" width="0.2034%" height="15" fill="rgb(238,22,31)" fg:x="53224" fg:w="237"/><text x="45.9249%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (237 samples, 0.20%)</title><rect x="45.6749%" y="437" width="0.2034%" height="15" fill="rgb(222,174,48)" fg:x="53224" fg:w="237"/><text x="45.9249%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (237 samples, 0.20%)</title><rect x="45.6749%" y="421" width="0.2034%" height="15" fill="rgb(206,152,40)" fg:x="53224" fg:w="237"/><text x="45.9249%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (28 samples, 0.02%)</title><rect x="45.8542%" y="405" width="0.0240%" height="15" fill="rgb(218,99,54)" fg:x="53433" fg:w="28"/><text x="46.1042%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.02%)</title><rect x="45.8542%" y="389" width="0.0240%" height="15" fill="rgb(220,174,26)" fg:x="53433" fg:w="28"/><text x="46.1042%" y="399.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.02%)</title><rect x="45.8594%" y="373" width="0.0189%" height="15" fill="rgb(245,116,9)" fg:x="53439" fg:w="22"/><text x="46.1094%" y="383.50"></text></g><g><title>[libc-2.31.so] (536 samples, 0.46%)</title><rect x="45.8782%" y="533" width="0.4600%" height="15" fill="rgb(209,72,35)" fg:x="53461" fg:w="536"/><text x="46.1282%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (28 samples, 0.02%)</title><rect x="46.3434%" y="533" width="0.0240%" height="15" fill="rgb(226,126,21)" fg:x="54003" fg:w="28"/><text x="46.5934%" y="543.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.02%)</title><rect x="46.3434%" y="517" width="0.0240%" height="15" fill="rgb(227,192,1)" fg:x="54003" fg:w="28"/><text x="46.5934%" y="527.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (119 samples, 0.10%)</title><rect x="46.3889%" y="501" width="0.1021%" height="15" fill="rgb(237,180,29)" fg:x="54056" fg:w="119"/><text x="46.6389%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (119 samples, 0.10%)</title><rect x="46.3889%" y="485" width="0.1021%" height="15" fill="rgb(230,197,35)" fg:x="54056" fg:w="119"/><text x="46.6389%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (119 samples, 0.10%)</title><rect x="46.3889%" y="469" width="0.1021%" height="15" fill="rgb(246,193,31)" fg:x="54056" fg:w="119"/><text x="46.6389%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (119 samples, 0.10%)</title><rect x="46.3889%" y="453" width="0.1021%" height="15" fill="rgb(241,36,4)" fg:x="54056" fg:w="119"/><text x="46.6389%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (119 samples, 0.10%)</title><rect x="46.3889%" y="437" width="0.1021%" height="15" fill="rgb(241,130,17)" fg:x="54056" fg:w="119"/><text x="46.6389%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (119 samples, 0.10%)</title><rect x="46.3889%" y="421" width="0.1021%" height="15" fill="rgb(206,137,32)" fg:x="54056" fg:w="119"/><text x="46.6389%" y="431.50"></text></g><g><title>[libc-2.31.so] (87 samples, 0.07%)</title><rect x="46.4163%" y="405" width="0.0747%" height="15" fill="rgb(237,228,51)" fg:x="54088" fg:w="87"/><text x="46.6663%" y="415.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (137 samples, 0.12%)</title><rect x="46.3794%" y="533" width="0.1176%" height="15" fill="rgb(243,6,42)" fg:x="54045" fg:w="137"/><text x="46.6294%" y="543.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (134 samples, 0.11%)</title><rect x="46.3820%" y="517" width="0.1150%" height="15" fill="rgb(251,74,28)" fg:x="54048" fg:w="134"/><text x="46.6320%" y="527.50"></text></g><g><title>async_io::driver::block_on (8,104 samples, 6.95%)</title><rect x="39.5785%" y="885" width="6.9546%" height="15" fill="rgb(218,20,49)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="895.50">async_io:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,104 samples, 6.95%)</title><rect x="39.5785%" y="869" width="6.9546%" height="15" fill="rgb(238,28,14)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="879.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,104 samples, 6.95%)</title><rect x="39.5785%" y="853" width="6.9546%" height="15" fill="rgb(229,40,46)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="863.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::run::{{closure}} (8,104 samples, 6.95%)</title><rect x="39.5785%" y="837" width="6.9546%" height="15" fill="rgb(244,195,20)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="847.50">async_exe..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,104 samples, 6.95%)</title><rect x="39.5785%" y="821" width="6.9546%" height="15" fill="rgb(253,56,35)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="831.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,104 samples, 6.95%)</title><rect x="39.5785%" y="805" width="6.9546%" height="15" fill="rgb(210,149,44)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="815.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8,104 samples, 6.95%)</title><rect x="39.5785%" y="789" width="6.9546%" height="15" fill="rgb(240,135,12)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="799.50">async_exe..</text></g><g><title>async_task::runnable::Runnable::run (8,104 samples, 6.95%)</title><rect x="39.5785%" y="773" width="6.9546%" height="15" fill="rgb(251,24,50)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="783.50">async_tas..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,104 samples, 6.95%)</title><rect x="39.5785%" y="757" width="6.9546%" height="15" fill="rgb(243,200,47)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="767.50">async_tas..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,104 samples, 6.95%)</title><rect x="39.5785%" y="741" width="6.9546%" height="15" fill="rgb(224,166,26)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="751.50">&lt;core::pi..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,104 samples, 6.95%)</title><rect x="39.5785%" y="725" width="6.9546%" height="15" fill="rgb(233,0,47)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="735.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,104 samples, 6.95%)</title><rect x="39.5785%" y="709" width="6.9546%" height="15" fill="rgb(253,80,5)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="719.50">async_exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,104 samples, 6.95%)</title><rect x="39.5785%" y="693" width="6.9546%" height="15" fill="rgb(214,133,25)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="703.50">&lt;async_st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,104 samples, 6.95%)</title><rect x="39.5785%" y="677" width="6.9546%" height="15" fill="rgb(209,27,14)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="687.50">async_std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,104 samples, 6.95%)</title><rect x="39.5785%" y="661" width="6.9546%" height="15" fill="rgb(219,102,51)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="671.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,104 samples, 6.95%)</title><rect x="39.5785%" y="645" width="6.9546%" height="15" fill="rgb(237,18,16)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="655.50">std::thre..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,104 samples, 6.95%)</title><rect x="39.5785%" y="629" width="6.9546%" height="15" fill="rgb(241,85,17)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="639.50">async_std..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,104 samples, 6.95%)</title><rect x="39.5785%" y="613" width="6.9546%" height="15" fill="rgb(236,90,42)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="623.50">&lt;async_st..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,104 samples, 6.95%)</title><rect x="39.5785%" y="597" width="6.9546%" height="15" fill="rgb(249,57,21)" fg:x="46120" fg:w="8104"/><text x="39.8285%" y="607.50">&lt;core::fu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,166 samples, 2.72%)</title><rect x="43.8161%" y="581" width="2.7169%" height="15" fill="rgb(243,12,36)" fg:x="51058" fg:w="3166"/><text x="44.0661%" y="591.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,644 samples, 2.27%)</title><rect x="44.2640%" y="565" width="2.2690%" height="15" fill="rgb(253,128,47)" fg:x="51580" fg:w="2644"/><text x="44.5140%" y="575.50">&lt;..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,284 samples, 1.10%)</title><rect x="45.4311%" y="549" width="1.1019%" height="15" fill="rgb(207,33,20)" fg:x="52940" fg:w="1284"/><text x="45.6811%" y="559.50"></text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (42 samples, 0.04%)</title><rect x="46.4970%" y="533" width="0.0360%" height="15" fill="rgb(233,215,35)" fg:x="54182" fg:w="42"/><text x="46.7470%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (42 samples, 0.04%)</title><rect x="46.4970%" y="517" width="0.0360%" height="15" fill="rgb(249,188,52)" fg:x="54182" fg:w="42"/><text x="46.7470%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (42 samples, 0.04%)</title><rect x="46.4970%" y="501" width="0.0360%" height="15" fill="rgb(225,12,32)" fg:x="54182" fg:w="42"/><text x="46.7470%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (22 samples, 0.02%)</title><rect x="46.5141%" y="485" width="0.0189%" height="15" fill="rgb(247,98,14)" fg:x="54202" fg:w="22"/><text x="46.7641%" y="495.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (251 samples, 0.22%)</title><rect x="46.6497%" y="517" width="0.2154%" height="15" fill="rgb(247,219,48)" fg:x="54360" fg:w="251"/><text x="46.8997%" y="527.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (251 samples, 0.22%)</title><rect x="46.6497%" y="501" width="0.2154%" height="15" fill="rgb(253,60,48)" fg:x="54360" fg:w="251"/><text x="46.8997%" y="511.50"></text></g><g><title>&lt;halfbrown::iter::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (159 samples, 0.14%)</title><rect x="46.8651%" y="517" width="0.1364%" height="15" fill="rgb(245,15,52)" fg:x="54611" fg:w="159"/><text x="47.1151%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.07%)</title><rect x="46.9338%" y="501" width="0.0678%" height="15" fill="rgb(220,133,28)" fg:x="54691" fg:w="79"/><text x="47.1838%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (72 samples, 0.06%)</title><rect x="46.9398%" y="485" width="0.0618%" height="15" fill="rgb(217,180,4)" fg:x="54698" fg:w="72"/><text x="47.1898%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (72 samples, 0.06%)</title><rect x="46.9398%" y="469" width="0.0618%" height="15" fill="rgb(251,24,1)" fg:x="54698" fg:w="72"/><text x="47.1898%" y="479.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::is_empty (112 samples, 0.10%)</title><rect x="47.0016%" y="517" width="0.0961%" height="15" fill="rgb(212,185,49)" fg:x="54770" fg:w="112"/><text x="47.2516%" y="527.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::iter (14 samples, 0.01%)</title><rect x="47.0977%" y="517" width="0.0120%" height="15" fill="rgb(215,175,22)" fg:x="54882" fg:w="14"/><text x="47.3477%" y="527.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::iter (14 samples, 0.01%)</title><rect x="47.0977%" y="501" width="0.0120%" height="15" fill="rgb(250,205,14)" fg:x="54882" fg:w="14"/><text x="47.3477%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (12 samples, 0.01%)</title><rect x="47.0994%" y="485" width="0.0103%" height="15" fill="rgb(225,211,22)" fg:x="54884" fg:w="12"/><text x="47.3494%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="47.0994%" y="469" width="0.0103%" height="15" fill="rgb(251,179,42)" fg:x="54884" fg:w="12"/><text x="47.3494%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (12 samples, 0.01%)</title><rect x="47.0994%" y="453" width="0.0103%" height="15" fill="rgb(208,216,51)" fg:x="54884" fg:w="12"/><text x="47.3494%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (12 samples, 0.01%)</title><rect x="47.0994%" y="437" width="0.0103%" height="15" fill="rgb(235,36,11)" fg:x="54884" fg:w="12"/><text x="47.3494%" y="447.50"></text></g><g><title>&lt;value_trait::generator::WriterGenerator&lt;W,V&gt; as value_trait::generator::BaseGenerator&gt;::get_writer (50 samples, 0.04%)</title><rect x="47.1097%" y="501" width="0.0429%" height="15" fill="rgb(213,189,28)" fg:x="54896" fg:w="50"/><text x="47.3597%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (34 samples, 0.03%)</title><rect x="47.1749%" y="437" width="0.0292%" height="15" fill="rgb(227,203,42)" fg:x="54972" fg:w="34"/><text x="47.4249%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (212 samples, 0.18%)</title><rect x="47.2041%" y="437" width="0.1819%" height="15" fill="rgb(244,72,36)" fg:x="55006" fg:w="212"/><text x="47.4541%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (187 samples, 0.16%)</title><rect x="47.2256%" y="421" width="0.1605%" height="15" fill="rgb(213,53,17)" fg:x="55031" fg:w="187"/><text x="47.4756%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (187 samples, 0.16%)</title><rect x="47.2256%" y="405" width="0.1605%" height="15" fill="rgb(207,167,3)" fg:x="55031" fg:w="187"/><text x="47.4756%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (81 samples, 0.07%)</title><rect x="47.3165%" y="389" width="0.0695%" height="15" fill="rgb(216,98,30)" fg:x="55137" fg:w="81"/><text x="47.5665%" y="399.50"></text></g><g><title>value_trait::generator::BaseGenerator::write (613 samples, 0.53%)</title><rect x="47.1097%" y="517" width="0.5261%" height="15" fill="rgb(236,123,15)" fg:x="54896" fg:w="613"/><text x="47.3597%" y="527.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (563 samples, 0.48%)</title><rect x="47.1526%" y="501" width="0.4831%" height="15" fill="rgb(248,81,50)" fg:x="54946" fg:w="563"/><text x="47.4026%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (563 samples, 0.48%)</title><rect x="47.1526%" y="485" width="0.4831%" height="15" fill="rgb(214,120,4)" fg:x="54946" fg:w="563"/><text x="47.4026%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (563 samples, 0.48%)</title><rect x="47.1526%" y="469" width="0.4831%" height="15" fill="rgb(208,179,34)" fg:x="54946" fg:w="563"/><text x="47.4026%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (563 samples, 0.48%)</title><rect x="47.1526%" y="453" width="0.4831%" height="15" fill="rgb(227,140,7)" fg:x="54946" fg:w="563"/><text x="47.4026%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (291 samples, 0.25%)</title><rect x="47.3860%" y="437" width="0.2497%" height="15" fill="rgb(214,22,6)" fg:x="55218" fg:w="291"/><text x="47.6360%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (311 samples, 0.27%)</title><rect x="48.6879%" y="501" width="0.2669%" height="15" fill="rgb(207,137,27)" fg:x="56735" fg:w="311"/><text x="48.9379%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (311 samples, 0.27%)</title><rect x="48.6879%" y="485" width="0.2669%" height="15" fill="rgb(210,8,46)" fg:x="56735" fg:w="311"/><text x="48.9379%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (153 samples, 0.13%)</title><rect x="49.0105%" y="421" width="0.1313%" height="15" fill="rgb(240,16,54)" fg:x="57111" fg:w="153"/><text x="49.2605%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (113 samples, 0.10%)</title><rect x="49.0449%" y="405" width="0.0970%" height="15" fill="rgb(211,209,29)" fg:x="57151" fg:w="113"/><text x="49.2949%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (67 samples, 0.06%)</title><rect x="49.0843%" y="389" width="0.0575%" height="15" fill="rgb(226,228,24)" fg:x="57197" fg:w="67"/><text x="49.3343%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (391 samples, 0.34%)</title><rect x="49.1418%" y="421" width="0.3355%" height="15" fill="rgb(222,84,9)" fg:x="57264" fg:w="391"/><text x="49.3918%" y="431.50"></text></g><g><title>[libc-2.31.so] (343 samples, 0.29%)</title><rect x="49.1830%" y="405" width="0.2943%" height="15" fill="rgb(234,203,30)" fg:x="57312" fg:w="343"/><text x="49.4330%" y="415.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (3,427 samples, 2.94%)</title><rect x="46.5425%" y="709" width="2.9409%" height="15" fill="rgb(238,109,14)" fg:x="54235" fg:w="3427"/><text x="46.7925%" y="719.50">tr..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,427 samples, 2.94%)</title><rect x="46.5425%" y="693" width="2.9409%" height="15" fill="rgb(233,206,34)" fg:x="54235" fg:w="3427"/><text x="46.7925%" y="703.50">&lt;c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,427 samples, 2.94%)</title><rect x="46.5425%" y="677" width="2.9409%" height="15" fill="rgb(220,167,47)" fg:x="54235" fg:w="3427"/><text x="46.7925%" y="687.50">&lt;c..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (3,427 samples, 2.94%)</title><rect x="46.5425%" y="661" width="2.9409%" height="15" fill="rgb(238,105,10)" fg:x="54235" fg:w="3427"/><text x="46.7925%" y="671.50">&lt;t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (3,427 samples, 2.94%)</title><rect x="46.5425%" y="645" width="2.9409%" height="15" fill="rgb(213,227,17)" fg:x="54235" fg:w="3427"/><text x="46.7925%" y="655.50">tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (3,427 samples, 2.94%)</title><rect x="46.5425%" y="629" width="2.9409%" height="15" fill="rgb(217,132,38)" fg:x="54235" fg:w="3427"/><text x="46.7925%" y="639.50">tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (3,427 samples, 2.94%)</title><rect x="46.5425%" y="613" width="2.9409%" height="15" fill="rgb(242,146,4)" fg:x="54235" fg:w="3427"/><text x="46.7925%" y="623.50">tr..</text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode (3,427 samples, 2.94%)</title><rect x="46.5425%" y="597" width="2.9409%" height="15" fill="rgb(212,61,9)" fg:x="54235" fg:w="3427"/><text x="46.7925%" y="607.50">&lt;t..</text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode_into (3,427 samples, 2.94%)</title><rect x="46.5425%" y="581" width="2.9409%" height="15" fill="rgb(247,126,22)" fg:x="54235" fg:w="3427"/><text x="46.7925%" y="591.50">&lt;t..</text></g><g><title>tremor_value::value::serialize::&lt;impl value_trait::Writable for tremor_value::value::Value&gt;::write (3,427 samples, 2.94%)</title><rect x="46.5425%" y="565" width="2.9409%" height="15" fill="rgb(220,196,2)" fg:x="54235" fg:w="3427"/><text x="46.7925%" y="575.50">tr..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (3,427 samples, 2.94%)</title><rect x="46.5425%" y="549" width="2.9409%" height="15" fill="rgb(208,46,4)" fg:x="54235" fg:w="3427"/><text x="46.7925%" y="559.50">tr..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_object (3,412 samples, 2.93%)</title><rect x="46.5553%" y="533" width="2.9281%" height="15" fill="rgb(252,104,46)" fg:x="54250" fg:w="3412"/><text x="46.8053%" y="543.50">tr..</text></g><g><title>value_trait::generator::BaseGenerator::write_simple_str_content (2,153 samples, 1.85%)</title><rect x="47.6358%" y="517" width="1.8476%" height="15" fill="rgb(237,152,48)" fg:x="55509" fg:w="2153"/><text x="47.8858%" y="527.50">v..</text></g><g><title>value_trait::generator::BaseGenerator::write (616 samples, 0.53%)</title><rect x="48.9548%" y="501" width="0.5286%" height="15" fill="rgb(221,59,37)" fg:x="57046" fg:w="616"/><text x="49.2048%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (614 samples, 0.53%)</title><rect x="48.9565%" y="485" width="0.5269%" height="15" fill="rgb(209,202,51)" fg:x="57048" fg:w="614"/><text x="49.2065%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (614 samples, 0.53%)</title><rect x="48.9565%" y="469" width="0.5269%" height="15" fill="rgb(228,81,30)" fg:x="57048" fg:w="614"/><text x="49.2065%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (614 samples, 0.53%)</title><rect x="48.9565%" y="453" width="0.5269%" height="15" fill="rgb(227,42,39)" fg:x="57048" fg:w="614"/><text x="49.2065%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (614 samples, 0.53%)</title><rect x="48.9565%" y="437" width="0.5269%" height="15" fill="rgb(221,26,2)" fg:x="57048" fg:w="614"/><text x="49.2065%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (18 samples, 0.02%)</title><rect x="49.5014%" y="421" width="0.0154%" height="15" fill="rgb(254,61,31)" fg:x="57683" fg:w="18"/><text x="49.7514%" y="431.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="49.5014%" y="405" width="0.0154%" height="15" fill="rgb(222,173,38)" fg:x="57683" fg:w="18"/><text x="49.7514%" y="415.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (18 samples, 0.02%)</title><rect x="49.5014%" y="389" width="0.0154%" height="15" fill="rgb(218,50,12)" fg:x="57683" fg:w="18"/><text x="49.7514%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (18 samples, 0.02%)</title><rect x="49.5014%" y="373" width="0.0154%" height="15" fill="rgb(223,88,40)" fg:x="57683" fg:w="18"/><text x="49.7514%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (18 samples, 0.02%)</title><rect x="49.5014%" y="357" width="0.0154%" height="15" fill="rgb(237,54,19)" fg:x="57683" fg:w="18"/><text x="49.7514%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_swap (18 samples, 0.02%)</title><rect x="49.5014%" y="341" width="0.0154%" height="15" fill="rgb(251,129,25)" fg:x="57683" fg:w="18"/><text x="49.7514%" y="351.50"></text></g><g><title>async_io::reactor::Reactor::notify (14 samples, 0.01%)</title><rect x="49.5203%" y="373" width="0.0120%" height="15" fill="rgb(238,97,19)" fg:x="57705" fg:w="14"/><text x="49.7703%" y="383.50"></text></g><g><title>polling::Poller::notify (13 samples, 0.01%)</title><rect x="49.5211%" y="357" width="0.0112%" height="15" fill="rgb(240,169,18)" fg:x="57706" fg:w="13"/><text x="49.7711%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (12 samples, 0.01%)</title><rect x="49.5383%" y="341" width="0.0103%" height="15" fill="rgb(230,187,49)" fg:x="57726" fg:w="12"/><text x="49.7883%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_swap (12 samples, 0.01%)</title><rect x="49.5383%" y="325" width="0.0103%" height="15" fill="rgb(209,44,26)" fg:x="57726" fg:w="12"/><text x="49.7883%" y="335.50"></text></g><g><title>parking::Unparker::unpark (26 samples, 0.02%)</title><rect x="49.5332%" y="373" width="0.0223%" height="15" fill="rgb(244,0,6)" fg:x="57720" fg:w="26"/><text x="49.7832%" y="383.50"></text></g><g><title>parking::Inner::unpark (22 samples, 0.02%)</title><rect x="49.5366%" y="357" width="0.0189%" height="15" fill="rgb(248,18,21)" fg:x="57724" fg:w="22"/><text x="49.7866%" y="367.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (44 samples, 0.04%)</title><rect x="49.5186%" y="389" width="0.0378%" height="15" fill="rgb(245,180,19)" fg:x="57703" fg:w="44"/><text x="49.7686%" y="399.50"></text></g><g><title>core::task::wake::Waker::wake (60 samples, 0.05%)</title><rect x="49.5186%" y="421" width="0.0515%" height="15" fill="rgb(252,118,36)" fg:x="57703" fg:w="60"/><text x="49.7686%" y="431.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (60 samples, 0.05%)</title><rect x="49.5186%" y="405" width="0.0515%" height="15" fill="rgb(210,224,19)" fg:x="57703" fg:w="60"/><text x="49.7686%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="49.5563%" y="389" width="0.0137%" height="15" fill="rgb(218,30,24)" fg:x="57747" fg:w="16"/><text x="49.8063%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="49.5563%" y="373" width="0.0137%" height="15" fill="rgb(219,75,50)" fg:x="57747" fg:w="16"/><text x="49.8063%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.01%)</title><rect x="49.5572%" y="357" width="0.0129%" height="15" fill="rgb(234,72,50)" fg:x="57748" fg:w="15"/><text x="49.8072%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.01%)</title><rect x="49.5572%" y="341" width="0.0129%" height="15" fill="rgb(219,100,48)" fg:x="57748" fg:w="15"/><text x="49.8072%" y="351.50"></text></g><g><title>async_executor::State::notify (102 samples, 0.09%)</title><rect x="49.4963%" y="437" width="0.0875%" height="15" fill="rgb(253,5,41)" fg:x="57677" fg:w="102"/><text x="49.7463%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="49.5701%" y="421" width="0.0137%" height="15" fill="rgb(247,181,11)" fg:x="57763" fg:w="16"/><text x="49.8201%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="49.5726%" y="405" width="0.0112%" height="15" fill="rgb(222,223,25)" fg:x="57766" fg:w="13"/><text x="49.8226%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (13 samples, 0.01%)</title><rect x="49.5726%" y="389" width="0.0112%" height="15" fill="rgb(214,198,28)" fg:x="57766" fg:w="13"/><text x="49.8226%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (25 samples, 0.02%)</title><rect x="49.5864%" y="405" width="0.0215%" height="15" fill="rgb(230,46,43)" fg:x="57782" fg:w="25"/><text x="49.8364%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (25 samples, 0.02%)</title><rect x="49.5864%" y="389" width="0.0215%" height="15" fill="rgb(233,65,53)" fg:x="57782" fg:w="25"/><text x="49.8364%" y="399.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (136 samples, 0.12%)</title><rect x="49.4963%" y="453" width="0.1167%" height="15" fill="rgb(221,121,27)" fg:x="57677" fg:w="136"/><text x="49.7463%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (34 samples, 0.03%)</title><rect x="49.5838%" y="437" width="0.0292%" height="15" fill="rgb(247,70,47)" fg:x="57779" fg:w="34"/><text x="49.8338%" y="447.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (33 samples, 0.03%)</title><rect x="49.5846%" y="421" width="0.0283%" height="15" fill="rgb(228,85,35)" fg:x="57780" fg:w="33"/><text x="49.8346%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (20 samples, 0.02%)</title><rect x="49.6130%" y="453" width="0.0172%" height="15" fill="rgb(209,50,18)" fg:x="57813" fg:w="20"/><text x="49.8630%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.02%)</title><rect x="49.6130%" y="437" width="0.0172%" height="15" fill="rgb(250,19,35)" fg:x="57813" fg:w="20"/><text x="49.8630%" y="447.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (179 samples, 0.15%)</title><rect x="49.4834%" y="549" width="0.1536%" height="15" fill="rgb(253,107,29)" fg:x="57662" fg:w="179"/><text x="49.7334%" y="559.50"></text></g><g><title>event_listener::Event::notify (179 samples, 0.15%)</title><rect x="49.4834%" y="533" width="0.1536%" height="15" fill="rgb(252,179,29)" fg:x="57662" fg:w="179"/><text x="49.7334%" y="543.50"></text></g><g><title>event_listener::List::notify (175 samples, 0.15%)</title><rect x="49.4868%" y="517" width="0.1502%" height="15" fill="rgb(238,194,6)" fg:x="57666" fg:w="175"/><text x="49.7368%" y="527.50"></text></g><g><title>core::task::wake::Waker::wake (174 samples, 0.15%)</title><rect x="49.4877%" y="501" width="0.1493%" height="15" fill="rgb(238,164,29)" fg:x="57667" fg:w="174"/><text x="49.7377%" y="511.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (174 samples, 0.15%)</title><rect x="49.4877%" y="485" width="0.1493%" height="15" fill="rgb(224,25,9)" fg:x="57667" fg:w="174"/><text x="49.7377%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (168 samples, 0.14%)</title><rect x="49.4928%" y="469" width="0.1442%" height="15" fill="rgb(244,153,23)" fg:x="57673" fg:w="168"/><text x="49.7428%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (180 samples, 0.15%)</title><rect x="49.4834%" y="629" width="0.1545%" height="15" fill="rgb(212,203,14)" fg:x="57662" fg:w="180"/><text x="49.7334%" y="639.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (180 samples, 0.15%)</title><rect x="49.4834%" y="613" width="0.1545%" height="15" fill="rgb(220,164,20)" fg:x="57662" fg:w="180"/><text x="49.7334%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (180 samples, 0.15%)</title><rect x="49.4834%" y="597" width="0.1545%" height="15" fill="rgb(222,203,48)" fg:x="57662" fg:w="180"/><text x="49.7334%" y="607.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (180 samples, 0.15%)</title><rect x="49.4834%" y="581" width="0.1545%" height="15" fill="rgb(215,159,22)" fg:x="57662" fg:w="180"/><text x="49.7334%" y="591.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (180 samples, 0.15%)</title><rect x="49.4834%" y="565" width="0.1545%" height="15" fill="rgb(216,183,47)" fg:x="57662" fg:w="180"/><text x="49.7334%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="50.1862%" y="613" width="0.0163%" height="15" fill="rgb(229,195,25)" fg:x="58481" fg:w="19"/><text x="50.4362%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (81 samples, 0.07%)</title><rect x="50.3270%" y="517" width="0.0695%" height="15" fill="rgb(224,132,51)" fg:x="58645" fg:w="81"/><text x="50.5770%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (81 samples, 0.07%)</title><rect x="50.3270%" y="501" width="0.0695%" height="15" fill="rgb(240,63,7)" fg:x="58645" fg:w="81"/><text x="50.5770%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (81 samples, 0.07%)</title><rect x="50.3270%" y="485" width="0.0695%" height="15" fill="rgb(249,182,41)" fg:x="58645" fg:w="81"/><text x="50.5770%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 0.07%)</title><rect x="50.3304%" y="469" width="0.0661%" height="15" fill="rgb(243,47,26)" fg:x="58649" fg:w="77"/><text x="50.5804%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77 samples, 0.07%)</title><rect x="50.3304%" y="453" width="0.0661%" height="15" fill="rgb(233,48,2)" fg:x="58649" fg:w="77"/><text x="50.5804%" y="463.50"></text></g><g><title>alloc::alloc::alloc (77 samples, 0.07%)</title><rect x="50.3304%" y="437" width="0.0661%" height="15" fill="rgb(244,165,34)" fg:x="58649" fg:w="77"/><text x="50.5804%" y="447.50"></text></g><g><title>__rg_alloc (77 samples, 0.07%)</title><rect x="50.3304%" y="421" width="0.0661%" height="15" fill="rgb(207,89,7)" fg:x="58649" fg:w="77"/><text x="50.5804%" y="431.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (77 samples, 0.07%)</title><rect x="50.3304%" y="405" width="0.0661%" height="15" fill="rgb(244,117,36)" fg:x="58649" fg:w="77"/><text x="50.5804%" y="415.50"></text></g><g><title>sn_rust_alloc (64 samples, 0.05%)</title><rect x="50.3415%" y="389" width="0.0549%" height="15" fill="rgb(226,144,34)" fg:x="58662" fg:w="64"/><text x="50.5915%" y="399.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (16 samples, 0.01%)</title><rect x="50.3827%" y="373" width="0.0137%" height="15" fill="rgb(213,23,19)" fg:x="58710" fg:w="16"/><text x="50.6327%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (131 samples, 0.11%)</title><rect x="50.3175%" y="597" width="0.1124%" height="15" fill="rgb(217,75,12)" fg:x="58634" fg:w="131"/><text x="50.5675%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (120 samples, 0.10%)</title><rect x="50.3270%" y="581" width="0.1030%" height="15" fill="rgb(224,159,17)" fg:x="58645" fg:w="120"/><text x="50.5770%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (120 samples, 0.10%)</title><rect x="50.3270%" y="565" width="0.1030%" height="15" fill="rgb(217,118,1)" fg:x="58645" fg:w="120"/><text x="50.5770%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (120 samples, 0.10%)</title><rect x="50.3270%" y="549" width="0.1030%" height="15" fill="rgb(232,180,48)" fg:x="58645" fg:w="120"/><text x="50.5770%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (120 samples, 0.10%)</title><rect x="50.3270%" y="533" width="0.1030%" height="15" fill="rgb(230,27,33)" fg:x="58645" fg:w="120"/><text x="50.5770%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (39 samples, 0.03%)</title><rect x="50.3965%" y="517" width="0.0335%" height="15" fill="rgb(205,31,21)" fg:x="58726" fg:w="39"/><text x="50.6465%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39 samples, 0.03%)</title><rect x="50.3965%" y="501" width="0.0335%" height="15" fill="rgb(253,59,4)" fg:x="58726" fg:w="39"/><text x="50.6465%" y="511.50"></text></g><g><title>[libc-2.31.so] (27 samples, 0.02%)</title><rect x="50.4068%" y="485" width="0.0232%" height="15" fill="rgb(224,201,9)" fg:x="58738" fg:w="27"/><text x="50.6568%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (37 samples, 0.03%)</title><rect x="50.4351%" y="453" width="0.0318%" height="15" fill="rgb(229,206,30)" fg:x="58771" fg:w="37"/><text x="50.6851%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (37 samples, 0.03%)</title><rect x="50.4351%" y="437" width="0.0318%" height="15" fill="rgb(212,67,47)" fg:x="58771" fg:w="37"/><text x="50.6851%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (37 samples, 0.03%)</title><rect x="50.4351%" y="421" width="0.0318%" height="15" fill="rgb(211,96,50)" fg:x="58771" fg:w="37"/><text x="50.6851%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.03%)</title><rect x="50.4368%" y="405" width="0.0300%" height="15" fill="rgb(252,114,18)" fg:x="58773" fg:w="35"/><text x="50.6868%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.03%)</title><rect x="50.4368%" y="389" width="0.0300%" height="15" fill="rgb(223,58,37)" fg:x="58773" fg:w="35"/><text x="50.6868%" y="399.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.03%)</title><rect x="50.4368%" y="373" width="0.0300%" height="15" fill="rgb(237,70,4)" fg:x="58773" fg:w="35"/><text x="50.6868%" y="383.50"></text></g><g><title>__rg_alloc (35 samples, 0.03%)</title><rect x="50.4368%" y="357" width="0.0300%" height="15" fill="rgb(244,85,46)" fg:x="58773" fg:w="35"/><text x="50.6868%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (35 samples, 0.03%)</title><rect x="50.4368%" y="341" width="0.0300%" height="15" fill="rgb(223,39,52)" fg:x="58773" fg:w="35"/><text x="50.6868%" y="351.50"></text></g><g><title>sn_rust_alloc (30 samples, 0.03%)</title><rect x="50.4411%" y="325" width="0.0257%" height="15" fill="rgb(218,200,14)" fg:x="58778" fg:w="30"/><text x="50.6911%" y="335.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (13 samples, 0.01%)</title><rect x="50.4557%" y="309" width="0.0112%" height="15" fill="rgb(208,171,16)" fg:x="58795" fg:w="13"/><text x="50.7057%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (73 samples, 0.06%)</title><rect x="50.4325%" y="533" width="0.0626%" height="15" fill="rgb(234,200,18)" fg:x="58768" fg:w="73"/><text x="50.6825%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (70 samples, 0.06%)</title><rect x="50.4351%" y="517" width="0.0601%" height="15" fill="rgb(228,45,11)" fg:x="58771" fg:w="70"/><text x="50.6851%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (70 samples, 0.06%)</title><rect x="50.4351%" y="501" width="0.0601%" height="15" fill="rgb(237,182,11)" fg:x="58771" fg:w="70"/><text x="50.6851%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (70 samples, 0.06%)</title><rect x="50.4351%" y="485" width="0.0601%" height="15" fill="rgb(241,175,49)" fg:x="58771" fg:w="70"/><text x="50.6851%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (70 samples, 0.06%)</title><rect x="50.4351%" y="469" width="0.0601%" height="15" fill="rgb(247,38,35)" fg:x="58771" fg:w="70"/><text x="50.6851%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (33 samples, 0.03%)</title><rect x="50.4668%" y="453" width="0.0283%" height="15" fill="rgb(228,39,49)" fg:x="58808" fg:w="33"/><text x="50.7168%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.03%)</title><rect x="50.4668%" y="437" width="0.0283%" height="15" fill="rgb(226,101,26)" fg:x="58808" fg:w="33"/><text x="50.7168%" y="447.50"></text></g><g><title>[libc-2.31.so] (30 samples, 0.03%)</title><rect x="50.4694%" y="421" width="0.0257%" height="15" fill="rgb(206,141,19)" fg:x="58811" fg:w="30"/><text x="50.7194%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33 samples, 0.03%)</title><rect x="50.5089%" y="485" width="0.0283%" height="15" fill="rgb(211,200,13)" fg:x="58857" fg:w="33"/><text x="50.7589%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 0.03%)</title><rect x="50.5089%" y="469" width="0.0283%" height="15" fill="rgb(241,121,6)" fg:x="58857" fg:w="33"/><text x="50.7589%" y="479.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.03%)</title><rect x="50.5089%" y="453" width="0.0283%" height="15" fill="rgb(234,221,29)" fg:x="58857" fg:w="33"/><text x="50.7589%" y="463.50"></text></g><g><title>__rg_alloc (33 samples, 0.03%)</title><rect x="50.5089%" y="437" width="0.0283%" height="15" fill="rgb(229,136,5)" fg:x="58857" fg:w="33"/><text x="50.7589%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (33 samples, 0.03%)</title><rect x="50.5089%" y="421" width="0.0283%" height="15" fill="rgb(238,36,11)" fg:x="58857" fg:w="33"/><text x="50.7589%" y="431.50"></text></g><g><title>sn_rust_alloc (27 samples, 0.02%)</title><rect x="50.5140%" y="405" width="0.0232%" height="15" fill="rgb(251,55,41)" fg:x="58863" fg:w="27"/><text x="50.7640%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (41 samples, 0.04%)</title><rect x="50.5046%" y="533" width="0.0352%" height="15" fill="rgb(242,34,40)" fg:x="58852" fg:w="41"/><text x="50.7546%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (39 samples, 0.03%)</title><rect x="50.5063%" y="517" width="0.0335%" height="15" fill="rgb(215,42,17)" fg:x="58854" fg:w="39"/><text x="50.7563%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (39 samples, 0.03%)</title><rect x="50.5063%" y="501" width="0.0335%" height="15" fill="rgb(207,44,46)" fg:x="58854" fg:w="39"/><text x="50.7563%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (133 samples, 0.11%)</title><rect x="50.4299%" y="597" width="0.1141%" height="15" fill="rgb(211,206,28)" fg:x="58765" fg:w="133"/><text x="50.6799%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (133 samples, 0.11%)</title><rect x="50.4299%" y="581" width="0.1141%" height="15" fill="rgb(237,167,16)" fg:x="58765" fg:w="133"/><text x="50.6799%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (133 samples, 0.11%)</title><rect x="50.4299%" y="565" width="0.1141%" height="15" fill="rgb(233,66,6)" fg:x="58765" fg:w="133"/><text x="50.6799%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (133 samples, 0.11%)</title><rect x="50.4299%" y="549" width="0.1141%" height="15" fill="rgb(246,123,29)" fg:x="58765" fg:w="133"/><text x="50.6799%" y="559.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (397 samples, 0.34%)</title><rect x="50.2077%" y="613" width="0.3407%" height="15" fill="rgb(209,62,40)" fg:x="58506" fg:w="397"/><text x="50.4577%" y="623.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.04%)</title><rect x="50.5484%" y="613" width="0.0438%" height="15" fill="rgb(218,4,25)" fg:x="58903" fg:w="51"/><text x="50.7984%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (220 samples, 0.19%)</title><rect x="50.5964%" y="613" width="0.1888%" height="15" fill="rgb(253,91,49)" fg:x="58959" fg:w="220"/><text x="50.8464%" y="623.50"></text></g><g><title>core::ptr::write (209 samples, 0.18%)</title><rect x="50.6059%" y="597" width="0.1794%" height="15" fill="rgb(228,155,29)" fg:x="58970" fg:w="209"/><text x="50.8559%" y="607.50"></text></g><g><title>[libc-2.31.so] (209 samples, 0.18%)</title><rect x="50.6059%" y="581" width="0.1794%" height="15" fill="rgb(243,57,37)" fg:x="58970" fg:w="209"/><text x="50.8559%" y="591.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (216 samples, 0.19%)</title><rect x="50.8238%" y="453" width="0.1854%" height="15" fill="rgb(244,167,17)" fg:x="59224" fg:w="216"/><text x="51.0738%" y="463.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="51.0092%" y="453" width="0.0112%" height="15" fill="rgb(207,181,38)" fg:x="59440" fg:w="13"/><text x="51.2592%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (264 samples, 0.23%)</title><rect x="50.7947%" y="549" width="0.2266%" height="15" fill="rgb(211,8,23)" fg:x="59190" fg:w="264"/><text x="51.0447%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (264 samples, 0.23%)</title><rect x="50.7947%" y="533" width="0.2266%" height="15" fill="rgb(235,11,44)" fg:x="59190" fg:w="264"/><text x="51.0447%" y="543.50"></text></g><g><title>alloc::alloc::alloc (263 samples, 0.23%)</title><rect x="50.7955%" y="517" width="0.2257%" height="15" fill="rgb(248,18,52)" fg:x="59191" fg:w="263"/><text x="51.0455%" y="527.50"></text></g><g><title>__rg_alloc (263 samples, 0.23%)</title><rect x="50.7955%" y="501" width="0.2257%" height="15" fill="rgb(208,4,7)" fg:x="59191" fg:w="263"/><text x="51.0455%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (263 samples, 0.23%)</title><rect x="50.7955%" y="485" width="0.2257%" height="15" fill="rgb(240,17,39)" fg:x="59191" fg:w="263"/><text x="51.0455%" y="495.50"></text></g><g><title>sn_rust_alloc (260 samples, 0.22%)</title><rect x="50.7981%" y="469" width="0.2231%" height="15" fill="rgb(207,170,3)" fg:x="59194" fg:w="260"/><text x="51.0481%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (277 samples, 0.24%)</title><rect x="50.7852%" y="613" width="0.2377%" height="15" fill="rgb(236,100,52)" fg:x="59179" fg:w="277"/><text x="51.0352%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (277 samples, 0.24%)</title><rect x="50.7852%" y="597" width="0.2377%" height="15" fill="rgb(246,78,51)" fg:x="59179" fg:w="277"/><text x="51.0352%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (268 samples, 0.23%)</title><rect x="50.7929%" y="581" width="0.2300%" height="15" fill="rgb(211,17,15)" fg:x="59188" fg:w="268"/><text x="51.0429%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (268 samples, 0.23%)</title><rect x="50.7929%" y="565" width="0.2300%" height="15" fill="rgb(209,59,46)" fg:x="59188" fg:w="268"/><text x="51.0429%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.02%)</title><rect x="51.0281%" y="517" width="0.0249%" height="15" fill="rgb(210,92,25)" fg:x="59462" fg:w="29"/><text x="51.2781%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.02%)</title><rect x="51.0281%" y="501" width="0.0249%" height="15" fill="rgb(238,174,52)" fg:x="59462" fg:w="29"/><text x="51.2781%" y="511.50"></text></g><g><title>__rg_dealloc (29 samples, 0.02%)</title><rect x="51.0281%" y="485" width="0.0249%" height="15" fill="rgb(230,73,7)" fg:x="59462" fg:w="29"/><text x="51.2781%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (29 samples, 0.02%)</title><rect x="51.0281%" y="469" width="0.0249%" height="15" fill="rgb(243,124,40)" fg:x="59462" fg:w="29"/><text x="51.2781%" y="479.50"></text></g><g><title>sn_rust_dealloc (27 samples, 0.02%)</title><rect x="51.0298%" y="453" width="0.0232%" height="15" fill="rgb(244,170,11)" fg:x="59464" fg:w="27"/><text x="51.2798%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (40 samples, 0.03%)</title><rect x="51.0229%" y="613" width="0.0343%" height="15" fill="rgb(207,114,54)" fg:x="59456" fg:w="40"/><text x="51.2729%" y="623.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.03%)</title><rect x="51.0229%" y="597" width="0.0343%" height="15" fill="rgb(205,42,20)" fg:x="59456" fg:w="40"/><text x="51.2729%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (34 samples, 0.03%)</title><rect x="51.0281%" y="581" width="0.0292%" height="15" fill="rgb(230,30,28)" fg:x="59462" fg:w="34"/><text x="51.2781%" y="591.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="51.0281%" y="565" width="0.0292%" height="15" fill="rgb(205,73,54)" fg:x="59462" fg:w="34"/><text x="51.2781%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (34 samples, 0.03%)</title><rect x="51.0281%" y="549" width="0.0292%" height="15" fill="rgb(254,227,23)" fg:x="59462" fg:w="34"/><text x="51.2781%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="51.0281%" y="533" width="0.0292%" height="15" fill="rgb(228,202,34)" fg:x="59462" fg:w="34"/><text x="51.2781%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (1,846 samples, 1.58%)</title><rect x="49.4834%" y="709" width="1.5842%" height="15" fill="rgb(222,225,37)" fg:x="57662" fg:w="1846"/><text x="49.7334%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,846 samples, 1.58%)</title><rect x="49.4834%" y="693" width="1.5842%" height="15" fill="rgb(221,14,54)" fg:x="57662" fg:w="1846"/><text x="49.7334%" y="703.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (1,846 samples, 1.58%)</title><rect x="49.4834%" y="677" width="1.5842%" height="15" fill="rgb(254,102,2)" fg:x="57662" fg:w="1846"/><text x="49.7334%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,846 samples, 1.58%)</title><rect x="49.4834%" y="661" width="1.5842%" height="15" fill="rgb(232,104,17)" fg:x="57662" fg:w="1846"/><text x="49.7334%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,846 samples, 1.58%)</title><rect x="49.4834%" y="645" width="1.5842%" height="15" fill="rgb(250,220,14)" fg:x="57662" fg:w="1846"/><text x="49.7334%" y="655.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (1,666 samples, 1.43%)</title><rect x="49.6379%" y="629" width="1.4297%" height="15" fill="rgb(241,158,9)" fg:x="57842" fg:w="1666"/><text x="49.8879%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (106 samples, 0.09%)</title><rect x="51.1482%" y="581" width="0.0910%" height="15" fill="rgb(246,9,43)" fg:x="59602" fg:w="106"/><text x="51.3982%" y="591.50"></text></g><g><title>core::mem::replace (106 samples, 0.09%)</title><rect x="51.1482%" y="565" width="0.0910%" height="15" fill="rgb(206,73,33)" fg:x="59602" fg:w="106"/><text x="51.3982%" y="575.50"></text></g><g><title>core::ptr::read (106 samples, 0.09%)</title><rect x="51.1482%" y="549" width="0.0910%" height="15" fill="rgb(222,79,8)" fg:x="59602" fg:w="106"/><text x="51.3982%" y="559.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (159 samples, 0.14%)</title><rect x="51.1225%" y="597" width="0.1364%" height="15" fill="rgb(234,8,54)" fg:x="59572" fg:w="159"/><text x="51.3725%" y="607.50"></text></g><g><title>core::mem::drop (23 samples, 0.02%)</title><rect x="51.2392%" y="581" width="0.0197%" height="15" fill="rgb(209,134,38)" fg:x="59708" fg:w="23"/><text x="51.4892%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (23 samples, 0.02%)</title><rect x="51.2392%" y="565" width="0.0197%" height="15" fill="rgb(230,127,29)" fg:x="59708" fg:w="23"/><text x="51.4892%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (112 samples, 0.10%)</title><rect x="51.2589%" y="597" width="0.0961%" height="15" fill="rgb(242,44,41)" fg:x="59731" fg:w="112"/><text x="51.5089%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (109 samples, 0.09%)</title><rect x="51.2615%" y="581" width="0.0935%" height="15" fill="rgb(222,56,43)" fg:x="59734" fg:w="109"/><text x="51.5115%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (109 samples, 0.09%)</title><rect x="51.2615%" y="565" width="0.0935%" height="15" fill="rgb(238,39,47)" fg:x="59734" fg:w="109"/><text x="51.5115%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (98 samples, 0.08%)</title><rect x="51.2709%" y="549" width="0.0841%" height="15" fill="rgb(226,79,43)" fg:x="59745" fg:w="98"/><text x="51.5209%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (98 samples, 0.08%)</title><rect x="51.2709%" y="533" width="0.0841%" height="15" fill="rgb(242,105,53)" fg:x="59745" fg:w="98"/><text x="51.5209%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (98 samples, 0.08%)</title><rect x="51.2709%" y="517" width="0.0841%" height="15" fill="rgb(251,132,46)" fg:x="59745" fg:w="98"/><text x="51.5209%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (98 samples, 0.08%)</title><rect x="51.2709%" y="501" width="0.0841%" height="15" fill="rgb(231,77,14)" fg:x="59745" fg:w="98"/><text x="51.5209%" y="511.50"></text></g><g><title>core::task::wake::Waker::will_wake (18 samples, 0.02%)</title><rect x="51.3610%" y="597" width="0.0154%" height="15" fill="rgb(240,135,9)" fg:x="59850" fg:w="18"/><text x="51.6110%" y="607.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (18 samples, 0.02%)</title><rect x="51.3610%" y="581" width="0.0154%" height="15" fill="rgb(248,109,14)" fg:x="59850" fg:w="18"/><text x="51.6110%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.01%)</title><rect x="51.3628%" y="565" width="0.0137%" height="15" fill="rgb(227,146,52)" fg:x="59852" fg:w="16"/><text x="51.6128%" y="575.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (16 samples, 0.01%)</title><rect x="51.3628%" y="549" width="0.0137%" height="15" fill="rgb(232,54,3)" fg:x="59852" fg:w="16"/><text x="51.6128%" y="559.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,203 samples, 1.03%)</title><rect x="51.0779%" y="613" width="1.0324%" height="15" fill="rgb(229,201,43)" fg:x="59520" fg:w="1203"/><text x="51.3279%" y="623.50"></text></g><g><title>event_listener::Inner::lock (855 samples, 0.73%)</title><rect x="51.3765%" y="597" width="0.7337%" height="15" fill="rgb(252,161,33)" fg:x="59868" fg:w="855"/><text x="51.6265%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (851 samples, 0.73%)</title><rect x="51.3799%" y="581" width="0.7303%" height="15" fill="rgb(226,146,40)" fg:x="59872" fg:w="851"/><text x="51.6299%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (842 samples, 0.72%)</title><rect x="51.3876%" y="565" width="0.7226%" height="15" fill="rgb(219,47,25)" fg:x="59881" fg:w="842"/><text x="51.6376%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (842 samples, 0.72%)</title><rect x="51.3876%" y="549" width="0.7226%" height="15" fill="rgb(250,135,13)" fg:x="59881" fg:w="842"/><text x="51.6376%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (842 samples, 0.72%)</title><rect x="51.3876%" y="533" width="0.7226%" height="15" fill="rgb(219,229,18)" fg:x="59881" fg:w="842"/><text x="51.6376%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (842 samples, 0.72%)</title><rect x="51.3876%" y="517" width="0.7226%" height="15" fill="rgb(217,152,27)" fg:x="59881" fg:w="842"/><text x="51.6376%" y="527.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,221 samples, 1.05%)</title><rect x="51.0676%" y="693" width="1.0478%" height="15" fill="rgb(225,71,47)" fg:x="59508" fg:w="1221"/><text x="51.3176%" y="703.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,221 samples, 1.05%)</title><rect x="51.0676%" y="677" width="1.0478%" height="15" fill="rgb(220,139,14)" fg:x="59508" fg:w="1221"/><text x="51.3176%" y="687.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,221 samples, 1.05%)</title><rect x="51.0676%" y="661" width="1.0478%" height="15" fill="rgb(247,54,32)" fg:x="59508" fg:w="1221"/><text x="51.3176%" y="671.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,221 samples, 1.05%)</title><rect x="51.0676%" y="645" width="1.0478%" height="15" fill="rgb(252,131,39)" fg:x="59508" fg:w="1221"/><text x="51.3176%" y="655.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,221 samples, 1.05%)</title><rect x="51.0676%" y="629" width="1.0478%" height="15" fill="rgb(210,108,39)" fg:x="59508" fg:w="1221"/><text x="51.3176%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="52.5685%" y="533" width="0.0103%" height="15" fill="rgb(205,23,29)" fg:x="61257" fg:w="12"/><text x="52.8185%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)]&gt; (12 samples, 0.01%)</title><rect x="52.5685%" y="517" width="0.0103%" height="15" fill="rgb(246,139,46)" fg:x="61257" fg:w="12"/><text x="52.8185%" y="527.50"></text></g><g><title>&lt;tremor_pipeline::op::EventAndInsights as core::convert::From&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt;&gt;::from (386 samples, 0.33%)</title><rect x="52.2527%" y="565" width="0.3313%" height="15" fill="rgb(250,81,26)" fg:x="60889" fg:w="386"/><text x="52.5027%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (18 samples, 0.02%)</title><rect x="52.5685%" y="549" width="0.0154%" height="15" fill="rgb(214,104,7)" fg:x="61257" fg:w="18"/><text x="52.8185%" y="559.50"></text></g><g><title>&lt;tremor_pipeline::op::EventAndInsights as core::convert::From&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt;&gt;::from (14 samples, 0.01%)</title><rect x="52.5899%" y="549" width="0.0120%" height="15" fill="rgb(233,189,8)" fg:x="61282" fg:w="14"/><text x="52.8399%" y="559.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.01%)</title><rect x="52.6019%" y="549" width="0.0137%" height="15" fill="rgb(228,141,17)" fg:x="61296" fg:w="16"/><text x="52.8519%" y="559.50"></text></g><g><title>&lt;tremor_pipeline::op::EventAndInsights as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (40 samples, 0.03%)</title><rect x="52.5839%" y="565" width="0.0343%" height="15" fill="rgb(247,157,1)" fg:x="61275" fg:w="40"/><text x="52.8339%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (442 samples, 0.38%)</title><rect x="52.2450%" y="581" width="0.3793%" height="15" fill="rgb(249,225,5)" fg:x="60880" fg:w="442"/><text x="52.4950%" y="591.50"></text></g><g><title>[libc-2.31.so] (287 samples, 0.25%)</title><rect x="52.6243%" y="581" width="0.2463%" height="15" fill="rgb(242,55,13)" fg:x="61322" fg:w="287"/><text x="52.8743%" y="591.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (30 samples, 0.03%)</title><rect x="52.9083%" y="469" width="0.0257%" height="15" fill="rgb(230,49,50)" fg:x="61653" fg:w="30"/><text x="53.1583%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (76 samples, 0.07%)</title><rect x="52.8706%" y="581" width="0.0652%" height="15" fill="rgb(241,111,38)" fg:x="61609" fg:w="76"/><text x="53.1206%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (76 samples, 0.07%)</title><rect x="52.8706%" y="565" width="0.0652%" height="15" fill="rgb(252,155,4)" fg:x="61609" fg:w="76"/><text x="53.1206%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (76 samples, 0.07%)</title><rect x="52.8706%" y="549" width="0.0652%" height="15" fill="rgb(212,69,32)" fg:x="61609" fg:w="76"/><text x="53.1206%" y="559.50"></text></g><g><title>alloc::alloc::alloc (73 samples, 0.06%)</title><rect x="52.8731%" y="533" width="0.0626%" height="15" fill="rgb(243,107,47)" fg:x="61612" fg:w="73"/><text x="53.1231%" y="543.50"></text></g><g><title>__rg_alloc (73 samples, 0.06%)</title><rect x="52.8731%" y="517" width="0.0626%" height="15" fill="rgb(247,130,12)" fg:x="61612" fg:w="73"/><text x="53.1231%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (73 samples, 0.06%)</title><rect x="52.8731%" y="501" width="0.0626%" height="15" fill="rgb(233,74,16)" fg:x="61612" fg:w="73"/><text x="53.1231%" y="511.50"></text></g><g><title>sn_rust_alloc (69 samples, 0.06%)</title><rect x="52.8766%" y="485" width="0.0592%" height="15" fill="rgb(208,58,18)" fg:x="61616" fg:w="69"/><text x="53.1266%" y="495.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry_mut (18 samples, 0.02%)</title><rect x="52.9409%" y="581" width="0.0154%" height="15" fill="rgb(242,225,1)" fg:x="61691" fg:w="18"/><text x="53.1909%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="52.9710%" y="501" width="0.0103%" height="15" fill="rgb(249,39,40)" fg:x="61726" fg:w="12"/><text x="53.2210%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="52.9710%" y="485" width="0.0103%" height="15" fill="rgb(207,72,44)" fg:x="61726" fg:w="12"/><text x="53.2210%" y="495.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (20 samples, 0.02%)</title><rect x="52.9813%" y="485" width="0.0172%" height="15" fill="rgb(215,193,12)" fg:x="61738" fg:w="20"/><text x="53.2313%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (20 samples, 0.02%)</title><rect x="52.9813%" y="469" width="0.0172%" height="15" fill="rgb(248,41,39)" fg:x="61738" fg:w="20"/><text x="53.2313%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.02%)</title><rect x="52.9813%" y="453" width="0.0172%" height="15" fill="rgb(253,85,4)" fg:x="61738" fg:w="20"/><text x="53.2313%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (20 samples, 0.02%)</title><rect x="52.9813%" y="437" width="0.0172%" height="15" fill="rgb(243,70,31)" fg:x="61738" fg:w="20"/><text x="53.2313%" y="447.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (315 samples, 0.27%)</title><rect x="52.9564%" y="581" width="0.2703%" height="15" fill="rgb(253,195,26)" fg:x="61709" fg:w="315"/><text x="53.2064%" y="591.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (310 samples, 0.27%)</title><rect x="52.9607%" y="565" width="0.2660%" height="15" fill="rgb(243,42,11)" fg:x="61714" fg:w="310"/><text x="53.2107%" y="575.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (310 samples, 0.27%)</title><rect x="52.9607%" y="549" width="0.2660%" height="15" fill="rgb(239,66,17)" fg:x="61714" fg:w="310"/><text x="53.2107%" y="559.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (310 samples, 0.27%)</title><rect x="52.9607%" y="533" width="0.2660%" height="15" fill="rgb(217,132,21)" fg:x="61714" fg:w="310"/><text x="53.2107%" y="543.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::search (310 samples, 0.27%)</title><rect x="52.9607%" y="517" width="0.2660%" height="15" fill="rgb(252,202,21)" fg:x="61714" fg:w="310"/><text x="53.2107%" y="527.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (286 samples, 0.25%)</title><rect x="52.9813%" y="501" width="0.2454%" height="15" fill="rgb(233,98,36)" fg:x="61738" fg:w="286"/><text x="53.2313%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (266 samples, 0.23%)</title><rect x="52.9984%" y="485" width="0.2283%" height="15" fill="rgb(216,153,54)" fg:x="61758" fg:w="266"/><text x="53.2484%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (266 samples, 0.23%)</title><rect x="52.9984%" y="469" width="0.2283%" height="15" fill="rgb(250,99,7)" fg:x="61758" fg:w="266"/><text x="53.2484%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (266 samples, 0.23%)</title><rect x="52.9984%" y="453" width="0.2283%" height="15" fill="rgb(207,56,50)" fg:x="61758" fg:w="266"/><text x="53.2484%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (266 samples, 0.23%)</title><rect x="52.9984%" y="437" width="0.2283%" height="15" fill="rgb(244,61,34)" fg:x="61758" fg:w="266"/><text x="53.2484%" y="447.50"></text></g><g><title>[libc-2.31.so] (197 samples, 0.17%)</title><rect x="53.0576%" y="421" width="0.1691%" height="15" fill="rgb(241,50,38)" fg:x="61827" fg:w="197"/><text x="53.3076%" y="431.50"></text></g><g><title>ahash::operations::folded_multiply (32 samples, 0.03%)</title><rect x="53.2267%" y="501" width="0.0275%" height="15" fill="rgb(212,166,30)" fg:x="62024" fg:w="32"/><text x="53.4767%" y="511.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (21 samples, 0.02%)</title><rect x="53.2361%" y="485" width="0.0180%" height="15" fill="rgb(249,127,32)" fg:x="62035" fg:w="21"/><text x="53.4861%" y="495.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (39 samples, 0.03%)</title><rect x="53.2267%" y="517" width="0.0335%" height="15" fill="rgb(209,103,0)" fg:x="62024" fg:w="39"/><text x="53.4767%" y="527.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (42 samples, 0.04%)</title><rect x="53.2928%" y="453" width="0.0360%" height="15" fill="rgb(238,209,51)" fg:x="62101" fg:w="42"/><text x="53.5428%" y="463.50"></text></g><g><title>ahash::operations::folded_multiply (30 samples, 0.03%)</title><rect x="53.3031%" y="437" width="0.0257%" height="15" fill="rgb(237,56,23)" fg:x="62113" fg:w="30"/><text x="53.5531%" y="447.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (25 samples, 0.02%)</title><rect x="53.3074%" y="421" width="0.0215%" height="15" fill="rgb(215,153,46)" fg:x="62118" fg:w="25"/><text x="53.5574%" y="431.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (85 samples, 0.07%)</title><rect x="53.2705%" y="469" width="0.0729%" height="15" fill="rgb(224,49,31)" fg:x="62075" fg:w="85"/><text x="53.5205%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (164 samples, 0.14%)</title><rect x="53.2267%" y="533" width="0.1407%" height="15" fill="rgb(250,18,42)" fg:x="62024" fg:w="164"/><text x="53.4767%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (115 samples, 0.10%)</title><rect x="53.2687%" y="517" width="0.0987%" height="15" fill="rgb(215,176,39)" fg:x="62073" fg:w="115"/><text x="53.5187%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (113 samples, 0.10%)</title><rect x="53.2705%" y="501" width="0.0970%" height="15" fill="rgb(223,77,29)" fg:x="62075" fg:w="113"/><text x="53.5205%" y="511.50"></text></g><g><title>core::hash::Hasher::write_str (113 samples, 0.10%)</title><rect x="53.2705%" y="485" width="0.0970%" height="15" fill="rgb(234,94,52)" fg:x="62075" fg:w="113"/><text x="53.5205%" y="495.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u8 (28 samples, 0.02%)</title><rect x="53.3434%" y="469" width="0.0240%" height="15" fill="rgb(220,154,50)" fg:x="62160" fg:w="28"/><text x="53.5934%" y="479.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (28 samples, 0.02%)</title><rect x="53.3434%" y="453" width="0.0240%" height="15" fill="rgb(212,11,10)" fg:x="62160" fg:w="28"/><text x="53.5934%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="53.3966%" y="485" width="0.0146%" height="15" fill="rgb(205,166,19)" fg:x="62222" fg:w="17"/><text x="53.6466%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="53.4009%" y="469" width="0.0103%" height="15" fill="rgb(244,198,16)" fg:x="62227" fg:w="12"/><text x="53.6509%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="53.3966%" y="501" width="0.0197%" height="15" fill="rgb(219,69,12)" fg:x="62222" fg:w="23"/><text x="53.6466%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (14 samples, 0.01%)</title><rect x="53.4163%" y="469" width="0.0120%" height="15" fill="rgb(245,30,7)" fg:x="62245" fg:w="14"/><text x="53.6663%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="53.4163%" y="453" width="0.0120%" height="15" fill="rgb(218,221,48)" fg:x="62245" fg:w="14"/><text x="53.6663%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (14 samples, 0.01%)</title><rect x="53.4163%" y="437" width="0.0120%" height="15" fill="rgb(216,66,15)" fg:x="62245" fg:w="14"/><text x="53.6663%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (156 samples, 0.13%)</title><rect x="53.4163%" y="485" width="0.1339%" height="15" fill="rgb(226,122,50)" fg:x="62245" fg:w="156"/><text x="53.6663%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (142 samples, 0.12%)</title><rect x="53.4284%" y="469" width="0.1219%" height="15" fill="rgb(239,156,16)" fg:x="62259" fg:w="142"/><text x="53.6784%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (142 samples, 0.12%)</title><rect x="53.4284%" y="453" width="0.1219%" height="15" fill="rgb(224,27,38)" fg:x="62259" fg:w="142"/><text x="53.6784%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (142 samples, 0.12%)</title><rect x="53.4284%" y="437" width="0.1219%" height="15" fill="rgb(224,39,27)" fg:x="62259" fg:w="142"/><text x="53.6784%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (142 samples, 0.12%)</title><rect x="53.4284%" y="421" width="0.1219%" height="15" fill="rgb(215,92,29)" fg:x="62259" fg:w="142"/><text x="53.6784%" y="431.50"></text></g><g><title>[libc-2.31.so] (60 samples, 0.05%)</title><rect x="53.4987%" y="405" width="0.0515%" height="15" fill="rgb(207,159,16)" fg:x="62341" fg:w="60"/><text x="53.7487%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (275 samples, 0.24%)</title><rect x="53.4163%" y="501" width="0.2360%" height="15" fill="rgb(238,163,47)" fg:x="62245" fg:w="275"/><text x="53.6663%" y="511.50"></text></g><g><title>&lt;lru::KeyRef&lt;K&gt; as core::borrow::Borrow&lt;K&gt;&gt;::borrow (119 samples, 0.10%)</title><rect x="53.5502%" y="485" width="0.1021%" height="15" fill="rgb(219,91,49)" fg:x="62401" fg:w="119"/><text x="53.8002%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (641 samples, 0.55%)</title><rect x="53.2267%" y="565" width="0.5501%" height="15" fill="rgb(227,167,31)" fg:x="62024" fg:w="641"/><text x="53.4767%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (641 samples, 0.55%)</title><rect x="53.2267%" y="549" width="0.5501%" height="15" fill="rgb(234,80,54)" fg:x="62024" fg:w="641"/><text x="53.4767%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (477 samples, 0.41%)</title><rect x="53.3674%" y="533" width="0.4093%" height="15" fill="rgb(212,114,2)" fg:x="62188" fg:w="477"/><text x="53.6174%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (477 samples, 0.41%)</title><rect x="53.3674%" y="517" width="0.4093%" height="15" fill="rgb(234,50,24)" fg:x="62188" fg:w="477"/><text x="53.6174%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (145 samples, 0.12%)</title><rect x="53.6523%" y="501" width="0.1244%" height="15" fill="rgb(221,68,8)" fg:x="62520" fg:w="145"/><text x="53.9023%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (145 samples, 0.12%)</title><rect x="53.6523%" y="485" width="0.1244%" height="15" fill="rgb(254,180,31)" fg:x="62520" fg:w="145"/><text x="53.9023%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (145 samples, 0.12%)</title><rect x="53.6523%" y="469" width="0.1244%" height="15" fill="rgb(247,130,50)" fg:x="62520" fg:w="145"/><text x="53.9023%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (141 samples, 0.12%)</title><rect x="53.6558%" y="453" width="0.1210%" height="15" fill="rgb(211,109,4)" fg:x="62524" fg:w="141"/><text x="53.9058%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (141 samples, 0.12%)</title><rect x="53.6558%" y="437" width="0.1210%" height="15" fill="rgb(238,50,21)" fg:x="62524" fg:w="141"/><text x="53.9058%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (141 samples, 0.12%)</title><rect x="53.6558%" y="421" width="0.1210%" height="15" fill="rgb(225,57,45)" fg:x="62524" fg:w="141"/><text x="53.9058%" y="431.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::attach (91 samples, 0.08%)</title><rect x="53.7768%" y="565" width="0.0781%" height="15" fill="rgb(209,196,50)" fg:x="62665" fg:w="91"/><text x="54.0268%" y="575.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get_mut (759 samples, 0.65%)</title><rect x="53.2267%" y="581" width="0.6513%" height="15" fill="rgb(242,140,13)" fg:x="62024" fg:w="759"/><text x="53.4767%" y="591.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::detach (27 samples, 0.02%)</title><rect x="53.8549%" y="565" width="0.0232%" height="15" fill="rgb(217,111,7)" fg:x="62756" fg:w="27"/><text x="54.1049%" y="575.50"></text></g><g><title>sn_rust_dealloc (30 samples, 0.03%)</title><rect x="53.8780%" y="581" width="0.0257%" height="15" fill="rgb(253,193,51)" fg:x="62783" fg:w="30"/><text x="54.1280%" y="591.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (99 samples, 0.08%)</title><rect x="54.0686%" y="373" width="0.0850%" height="15" fill="rgb(252,70,29)" fg:x="63005" fg:w="99"/><text x="54.3186%" y="383.50"></text></g><g><title>tremor_value::value::serialize::&lt;impl value_trait::Writable for tremor_value::value::Value&gt;::encode (295 samples, 0.25%)</title><rect x="53.9098%" y="581" width="0.2532%" height="15" fill="rgb(232,127,12)" fg:x="62820" fg:w="295"/><text x="54.1598%" y="591.50"></text></g><g><title>value_trait::generator::DumpGenerator&lt;VT&gt;::new (238 samples, 0.20%)</title><rect x="53.9587%" y="565" width="0.2042%" height="15" fill="rgb(211,180,21)" fg:x="62877" fg:w="238"/><text x="54.2087%" y="575.50"></text></g><g><title>&lt;value_trait::generator::DumpGenerator&lt;VT&gt; as core::default::Default&gt;::default (238 samples, 0.20%)</title><rect x="53.9587%" y="549" width="0.2042%" height="15" fill="rgb(229,72,13)" fg:x="62877" fg:w="238"/><text x="54.2087%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (231 samples, 0.20%)</title><rect x="53.9647%" y="533" width="0.1982%" height="15" fill="rgb(240,211,49)" fg:x="62884" fg:w="231"/><text x="54.2147%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (231 samples, 0.20%)</title><rect x="53.9647%" y="517" width="0.1982%" height="15" fill="rgb(219,149,40)" fg:x="62884" fg:w="231"/><text x="54.2147%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (231 samples, 0.20%)</title><rect x="53.9647%" y="501" width="0.1982%" height="15" fill="rgb(210,127,46)" fg:x="62884" fg:w="231"/><text x="54.2147%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (231 samples, 0.20%)</title><rect x="53.9647%" y="485" width="0.1982%" height="15" fill="rgb(220,106,7)" fg:x="62884" fg:w="231"/><text x="54.2147%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (231 samples, 0.20%)</title><rect x="53.9647%" y="469" width="0.1982%" height="15" fill="rgb(249,31,22)" fg:x="62884" fg:w="231"/><text x="54.2147%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (231 samples, 0.20%)</title><rect x="53.9647%" y="453" width="0.1982%" height="15" fill="rgb(253,1,49)" fg:x="62884" fg:w="231"/><text x="54.2147%" y="463.50"></text></g><g><title>alloc::alloc::alloc (229 samples, 0.20%)</title><rect x="53.9664%" y="437" width="0.1965%" height="15" fill="rgb(227,144,33)" fg:x="62886" fg:w="229"/><text x="54.2164%" y="447.50"></text></g><g><title>__rg_alloc (229 samples, 0.20%)</title><rect x="53.9664%" y="421" width="0.1965%" height="15" fill="rgb(249,163,44)" fg:x="62886" fg:w="229"/><text x="54.2164%" y="431.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (229 samples, 0.20%)</title><rect x="53.9664%" y="405" width="0.1965%" height="15" fill="rgb(234,15,39)" fg:x="62886" fg:w="229"/><text x="54.2164%" y="415.50"></text></g><g><title>sn_rust_alloc (226 samples, 0.19%)</title><rect x="53.9690%" y="389" width="0.1939%" height="15" fill="rgb(207,66,16)" fg:x="62889" fg:w="226"/><text x="54.2190%" y="399.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (39 samples, 0.03%)</title><rect x="54.1784%" y="501" width="0.0335%" height="15" fill="rgb(233,112,24)" fg:x="63133" fg:w="39"/><text x="54.4284%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (22 samples, 0.02%)</title><rect x="54.1930%" y="485" width="0.0189%" height="15" fill="rgb(230,90,22)" fg:x="63150" fg:w="22"/><text x="54.4430%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (22 samples, 0.02%)</title><rect x="54.1930%" y="469" width="0.0189%" height="15" fill="rgb(229,61,13)" fg:x="63150" fg:w="22"/><text x="54.4430%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (22 samples, 0.02%)</title><rect x="54.1930%" y="453" width="0.0189%" height="15" fill="rgb(225,57,24)" fg:x="63150" fg:w="22"/><text x="54.4430%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (22 samples, 0.02%)</title><rect x="54.1930%" y="437" width="0.0189%" height="15" fill="rgb(208,169,48)" fg:x="63150" fg:w="22"/><text x="54.4430%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (22 samples, 0.02%)</title><rect x="54.1930%" y="421" width="0.0189%" height="15" fill="rgb(244,218,51)" fg:x="63150" fg:w="22"/><text x="54.4430%" y="431.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.01%)</title><rect x="54.2016%" y="405" width="0.0103%" height="15" fill="rgb(214,148,10)" fg:x="63160" fg:w="12"/><text x="54.4516%" y="415.50"></text></g><g><title>value_trait::ValueAccess::get (60 samples, 0.05%)</title><rect x="54.1629%" y="581" width="0.0515%" height="15" fill="rgb(225,174,27)" fg:x="63115" fg:w="60"/><text x="54.4129%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (55 samples, 0.05%)</title><rect x="54.1672%" y="565" width="0.0472%" height="15" fill="rgb(230,96,26)" fg:x="63120" fg:w="55"/><text x="54.4172%" y="575.50"></text></g><g><title>value_trait::ValueAccess::get::{{closure}} (51 samples, 0.04%)</title><rect x="54.1707%" y="549" width="0.0438%" height="15" fill="rgb(232,10,30)" fg:x="63124" fg:w="51"/><text x="54.4207%" y="559.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;MapK,MapE&gt; as value_trait::object::Object&gt;::get (51 samples, 0.04%)</title><rect x="54.1707%" y="533" width="0.0438%" height="15" fill="rgb(222,8,50)" fg:x="63124" fg:w="51"/><text x="54.4207%" y="543.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (51 samples, 0.04%)</title><rect x="54.1707%" y="517" width="0.0438%" height="15" fill="rgb(213,81,27)" fg:x="63124" fg:w="51"/><text x="54.4207%" y="527.50"></text></g><g><title>value_trait::ValueAccess::get_str (231 samples, 0.20%)</title><rect x="54.2144%" y="581" width="0.1982%" height="15" fill="rgb(245,50,10)" fg:x="63175" fg:w="231"/><text x="54.4644%" y="591.50"></text></g><g><title>value_trait::ValueAccess::get (215 samples, 0.18%)</title><rect x="54.2282%" y="565" width="0.1845%" height="15" fill="rgb(216,100,18)" fg:x="63191" fg:w="215"/><text x="54.4782%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (200 samples, 0.17%)</title><rect x="54.2410%" y="549" width="0.1716%" height="15" fill="rgb(236,147,54)" fg:x="63206" fg:w="200"/><text x="54.4910%" y="559.50"></text></g><g><title>value_trait::ValueAccess::get::{{closure}} (198 samples, 0.17%)</title><rect x="54.2428%" y="533" width="0.1699%" height="15" fill="rgb(205,143,26)" fg:x="63208" fg:w="198"/><text x="54.4928%" y="543.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;MapK,MapE&gt; as value_trait::object::Object&gt;::get (198 samples, 0.17%)</title><rect x="54.2428%" y="517" width="0.1699%" height="15" fill="rgb(236,26,9)" fg:x="63208" fg:w="198"/><text x="54.4928%" y="527.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (198 samples, 0.17%)</title><rect x="54.2428%" y="501" width="0.1699%" height="15" fill="rgb(221,165,53)" fg:x="63208" fg:w="198"/><text x="54.4928%" y="511.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (159 samples, 0.14%)</title><rect x="54.2762%" y="485" width="0.1364%" height="15" fill="rgb(214,110,17)" fg:x="63247" fg:w="159"/><text x="54.5262%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (136 samples, 0.12%)</title><rect x="54.2960%" y="469" width="0.1167%" height="15" fill="rgb(237,197,12)" fg:x="63270" fg:w="136"/><text x="54.5460%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (136 samples, 0.12%)</title><rect x="54.2960%" y="453" width="0.1167%" height="15" fill="rgb(205,84,17)" fg:x="63270" fg:w="136"/><text x="54.5460%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (136 samples, 0.12%)</title><rect x="54.2960%" y="437" width="0.1167%" height="15" fill="rgb(237,18,45)" fg:x="63270" fg:w="136"/><text x="54.5460%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (136 samples, 0.12%)</title><rect x="54.2960%" y="421" width="0.1167%" height="15" fill="rgb(221,87,14)" fg:x="63270" fg:w="136"/><text x="54.5460%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (136 samples, 0.12%)</title><rect x="54.2960%" y="405" width="0.1167%" height="15" fill="rgb(238,186,15)" fg:x="63270" fg:w="136"/><text x="54.5460%" y="415.50"></text></g><g><title>[libc-2.31.so] (121 samples, 0.10%)</title><rect x="54.3088%" y="389" width="0.1038%" height="15" fill="rgb(208,115,11)" fg:x="63285" fg:w="121"/><text x="54.5588%" y="399.50"></text></g><g><title>&lt;u64 as core::ops::arith::Add&gt;::add (62 samples, 0.05%)</title><rect x="54.4521%" y="533" width="0.0532%" height="15" fill="rgb(254,175,0)" fg:x="63452" fg:w="62"/><text x="54.7021%" y="543.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::operator::TrickleOperator as tremor_pipeline::op::Operator&gt;::on_event (2,790 samples, 2.39%)</title><rect x="52.1154%" y="613" width="2.3943%" height="15" fill="rgb(227,24,42)" fg:x="60729" fg:w="2790"/><text x="52.3654%" y="623.50">&lt;t..</text></g><g><title>&lt;tremor_pipeline::op::grouper::bucket::Grouper as tremor_pipeline::op::Operator&gt;::on_event (2,790 samples, 2.39%)</title><rect x="52.1154%" y="597" width="2.3943%" height="15" fill="rgb(223,211,37)" fg:x="60729" fg:w="2790"/><text x="52.3654%" y="607.50">&lt;t..</text></g><g><title>window::TimeWindow::inc_t (113 samples, 0.10%)</title><rect x="54.4127%" y="581" width="0.0970%" height="15" fill="rgb(235,49,27)" fg:x="63406" fg:w="113"/><text x="54.6627%" y="591.50"></text></g><g><title>window::TimeWindow::add_t (112 samples, 0.10%)</title><rect x="54.4135%" y="565" width="0.0961%" height="15" fill="rgb(254,97,51)" fg:x="63407" fg:w="112"/><text x="54.6635%" y="575.50"></text></g><g><title>window::SlidingWindow&lt;T&gt;::add (74 samples, 0.06%)</title><rect x="54.4461%" y="549" width="0.0635%" height="15" fill="rgb(249,51,40)" fg:x="63445" fg:w="74"/><text x="54.6961%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (82 samples, 0.07%)</title><rect x="54.5311%" y="565" width="0.0704%" height="15" fill="rgb(210,128,45)" fg:x="63544" fg:w="82"/><text x="54.7811%" y="575.50"></text></g><g><title>tremor_script::script::Script::run (21 samples, 0.02%)</title><rect x="54.6015%" y="565" width="0.0180%" height="15" fill="rgb(224,137,50)" fg:x="63626" fg:w="21"/><text x="54.8515%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9,413 samples, 8.08%)</title><rect x="46.5425%" y="885" width="8.0779%" height="15" fill="rgb(242,15,9)" fg:x="54235" fg:w="9413"/><text x="46.7925%" y="895.50">async_task:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9,413 samples, 8.08%)</title><rect x="46.5425%" y="869" width="8.0779%" height="15" fill="rgb(233,187,41)" fg:x="54235" fg:w="9413"/><text x="46.7925%" y="879.50">&lt;core::pin:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,413 samples, 8.08%)</title><rect x="46.5425%" y="853" width="8.0779%" height="15" fill="rgb(227,2,29)" fg:x="54235" fg:w="9413"/><text x="46.7925%" y="863.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (9,413 samples, 8.08%)</title><rect x="46.5425%" y="837" width="8.0779%" height="15" fill="rgb(222,70,3)" fg:x="54235" fg:w="9413"/><text x="46.7925%" y="847.50">async_execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (9,413 samples, 8.08%)</title><rect x="46.5425%" y="821" width="8.0779%" height="15" fill="rgb(213,11,42)" fg:x="54235" fg:w="9413"/><text x="46.7925%" y="831.50">&lt;async_std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (9,413 samples, 8.08%)</title><rect x="46.5425%" y="805" width="8.0779%" height="15" fill="rgb(225,150,9)" fg:x="54235" fg:w="9413"/><text x="46.7925%" y="815.50">async_std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,413 samples, 8.08%)</title><rect x="46.5425%" y="789" width="8.0779%" height="15" fill="rgb(230,162,45)" fg:x="54235" fg:w="9413"/><text x="46.7925%" y="799.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,413 samples, 8.08%)</title><rect x="46.5425%" y="773" width="8.0779%" height="15" fill="rgb(222,14,52)" fg:x="54235" fg:w="9413"/><text x="46.7925%" y="783.50">std::thread..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (9,413 samples, 8.08%)</title><rect x="46.5425%" y="757" width="8.0779%" height="15" fill="rgb(254,198,14)" fg:x="54235" fg:w="9413"/><text x="46.7925%" y="767.50">async_std::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (9,413 samples, 8.08%)</title><rect x="46.5425%" y="741" width="8.0779%" height="15" fill="rgb(220,217,30)" fg:x="54235" fg:w="9413"/><text x="46.7925%" y="751.50">&lt;async_std:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,413 samples, 8.08%)</title><rect x="46.5425%" y="725" width="8.0779%" height="15" fill="rgb(215,146,41)" fg:x="54235" fg:w="9413"/><text x="46.7925%" y="735.50">&lt;core::futu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (4,140 samples, 3.55%)</title><rect x="51.0676%" y="709" width="3.5528%" height="15" fill="rgb(217,27,36)" fg:x="59508" fg:w="4140"/><text x="51.3176%" y="719.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,919 samples, 2.50%)</title><rect x="52.1154%" y="693" width="2.5050%" height="15" fill="rgb(219,218,39)" fg:x="60729" fg:w="2919"/><text x="52.3654%" y="703.50">&lt;c..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (2,919 samples, 2.50%)</title><rect x="52.1154%" y="677" width="2.5050%" height="15" fill="rgb(219,4,42)" fg:x="60729" fg:w="2919"/><text x="52.3654%" y="687.50">tr..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (2,919 samples, 2.50%)</title><rect x="52.1154%" y="661" width="2.5050%" height="15" fill="rgb(249,119,36)" fg:x="60729" fg:w="2919"/><text x="52.3654%" y="671.50">tr..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (2,919 samples, 2.50%)</title><rect x="52.1154%" y="645" width="2.5050%" height="15" fill="rgb(209,23,33)" fg:x="60729" fg:w="2919"/><text x="52.3654%" y="655.50">tr..</text></g><g><title>&lt;tremor_pipeline::executable_graph::OperatorNode as tremor_pipeline::op::Operator&gt;::on_event (2,919 samples, 2.50%)</title><rect x="52.1154%" y="629" width="2.5050%" height="15" fill="rgb(211,10,0)" fg:x="60729" fg:w="2919"/><text x="52.3654%" y="639.50">&lt;t..</text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event (129 samples, 0.11%)</title><rect x="54.5096%" y="613" width="0.1107%" height="15" fill="rgb(208,99,37)" fg:x="63519" fg:w="129"/><text x="54.7596%" y="623.50"></text></g><g><title>tremor_script::srs::EventPayload::rent_mut (129 samples, 0.11%)</title><rect x="54.5096%" y="597" width="0.1107%" height="15" fill="rgb(213,132,31)" fg:x="63519" fg:w="129"/><text x="54.7596%" y="607.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event::{{closure}} (122 samples, 0.10%)</title><rect x="54.5157%" y="581" width="0.1047%" height="15" fill="rgb(243,129,40)" fg:x="63526" fg:w="122"/><text x="54.7657%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (85 samples, 0.07%)</title><rect x="54.6710%" y="885" width="0.0729%" height="15" fill="rgb(210,66,33)" fg:x="63707" fg:w="85"/><text x="54.9210%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (30 samples, 0.03%)</title><rect x="54.7182%" y="869" width="0.0257%" height="15" fill="rgb(209,189,4)" fg:x="63762" fg:w="30"/><text x="54.9682%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (30 samples, 0.03%)</title><rect x="54.7182%" y="853" width="0.0257%" height="15" fill="rgb(214,107,37)" fg:x="63762" fg:w="30"/><text x="54.9682%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="54.7182%" y="837" width="0.0257%" height="15" fill="rgb(245,88,54)" fg:x="63762" fg:w="30"/><text x="54.9682%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (30 samples, 0.03%)</title><rect x="54.7182%" y="821" width="0.0257%" height="15" fill="rgb(205,146,20)" fg:x="63762" fg:w="30"/><text x="54.9682%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt; (30 samples, 0.03%)</title><rect x="54.7182%" y="805" width="0.0257%" height="15" fill="rgb(220,161,25)" fg:x="63762" fg:w="30"/><text x="54.9682%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (21 samples, 0.02%)</title><rect x="54.7439%" y="885" width="0.0180%" height="15" fill="rgb(215,152,15)" fg:x="63792" fg:w="21"/><text x="54.9939%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (29 samples, 0.02%)</title><rect x="54.7654%" y="885" width="0.0249%" height="15" fill="rgb(233,192,44)" fg:x="63817" fg:w="29"/><text x="55.0154%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (22 samples, 0.02%)</title><rect x="54.7714%" y="869" width="0.0189%" height="15" fill="rgb(240,170,46)" fg:x="63824" fg:w="22"/><text x="55.0214%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (163 samples, 0.14%)</title><rect x="54.8023%" y="869" width="0.1399%" height="15" fill="rgb(207,104,33)" fg:x="63860" fg:w="163"/><text x="55.0523%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[tremor_value::value::Value]&gt; (14 samples, 0.01%)</title><rect x="54.9301%" y="853" width="0.0120%" height="15" fill="rgb(219,21,39)" fg:x="64009" fg:w="14"/><text x="55.1801%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (180 samples, 0.15%)</title><rect x="54.7903%" y="885" width="0.1545%" height="15" fill="rgb(214,133,29)" fg:x="63846" fg:w="180"/><text x="55.0403%" y="895.50"></text></g><g><title>event_listener::Event::notify (29 samples, 0.02%)</title><rect x="54.9499%" y="885" width="0.0249%" height="15" fill="rgb(226,93,6)" fg:x="64032" fg:w="29"/><text x="55.1999%" y="895.50"></text></g><g><title>event_listener::full_fence (17 samples, 0.01%)</title><rect x="54.9602%" y="869" width="0.0146%" height="15" fill="rgb(252,222,34)" fg:x="64044" fg:w="17"/><text x="55.2102%" y="879.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::insert_nocheck (58 samples, 0.05%)</title><rect x="54.9816%" y="885" width="0.0498%" height="15" fill="rgb(252,92,48)" fg:x="64069" fg:w="58"/><text x="55.2316%" y="895.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (67 samples, 0.06%)</title><rect x="55.0314%" y="885" width="0.0575%" height="15" fill="rgb(245,223,24)" fg:x="64127" fg:w="67"/><text x="55.2814%" y="895.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (32 samples, 0.03%)</title><rect x="55.0889%" y="885" width="0.0275%" height="15" fill="rgb(205,176,3)" fg:x="64194" fg:w="32"/><text x="55.3389%" y="895.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get_mut (29 samples, 0.02%)</title><rect x="55.1164%" y="885" width="0.0249%" height="15" fill="rgb(235,151,15)" fg:x="64226" fg:w="29"/><text x="55.3664%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (14 samples, 0.01%)</title><rect x="55.1292%" y="869" width="0.0120%" height="15" fill="rgb(237,209,11)" fg:x="64241" fg:w="14"/><text x="55.3792%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (14 samples, 0.01%)</title><rect x="55.1292%" y="853" width="0.0120%" height="15" fill="rgb(243,227,24)" fg:x="64241" fg:w="14"/><text x="55.3792%" y="863.50"></text></g><g><title>parking::Inner::park (19 samples, 0.02%)</title><rect x="55.1413%" y="885" width="0.0163%" height="15" fill="rgb(239,193,16)" fg:x="64255" fg:w="19"/><text x="55.3913%" y="895.50"></text></g><g><title>polling::epoll::Poller::wait (54 samples, 0.05%)</title><rect x="55.1627%" y="885" width="0.0463%" height="15" fill="rgb(231,27,9)" fg:x="64280" fg:w="54"/><text x="55.4127%" y="895.50"></text></g><g><title>simd_json::stage2::&lt;impl simd_json::Deserializer&gt;::build_tape (25 samples, 0.02%)</title><rect x="55.2090%" y="885" width="0.0215%" height="15" fill="rgb(219,169,10)" fg:x="64334" fg:w="25"/><text x="55.4590%" y="895.50"></text></g><g><title>sn_rust_alloc (70 samples, 0.06%)</title><rect x="55.2305%" y="885" width="0.0601%" height="15" fill="rgb(244,229,43)" fg:x="64359" fg:w="70"/><text x="55.4805%" y="895.50"></text></g><g><title>sn_rust_dealloc (19 samples, 0.02%)</title><rect x="55.2906%" y="885" width="0.0163%" height="15" fill="rgb(254,38,20)" fg:x="64429" fg:w="19"/><text x="55.5406%" y="895.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (12 samples, 0.01%)</title><rect x="55.3163%" y="885" width="0.0103%" height="15" fill="rgb(250,47,30)" fg:x="64459" fg:w="12"/><text x="55.5663%" y="895.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (22 samples, 0.02%)</title><rect x="55.3326%" y="885" width="0.0189%" height="15" fill="rgb(224,124,36)" fg:x="64478" fg:w="22"/><text x="55.5826%" y="895.50"></text></g><g><title>sn_rust_dealloc (17 samples, 0.01%)</title><rect x="55.5008%" y="501" width="0.0146%" height="15" fill="rgb(246,68,51)" fg:x="64674" fg:w="17"/><text x="55.7508%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::ValueDeserializer&gt; (53 samples, 0.05%)</title><rect x="55.4888%" y="645" width="0.0455%" height="15" fill="rgb(253,43,49)" fg:x="64660" fg:w="53"/><text x="55.7388%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;simd_json::Deserializer&gt; (53 samples, 0.05%)</title><rect x="55.4888%" y="629" width="0.0455%" height="15" fill="rgb(219,54,36)" fg:x="64660" fg:w="53"/><text x="55.7388%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;simd_json::value::tape::Node&gt;&gt; (53 samples, 0.05%)</title><rect x="55.4888%" y="613" width="0.0455%" height="15" fill="rgb(227,133,34)" fg:x="64660" fg:w="53"/><text x="55.7388%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;simd_json::value::tape::Node&gt;&gt; (53 samples, 0.05%)</title><rect x="55.4888%" y="597" width="0.0455%" height="15" fill="rgb(247,227,15)" fg:x="64660" fg:w="53"/><text x="55.7388%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.05%)</title><rect x="55.4888%" y="581" width="0.0455%" height="15" fill="rgb(229,96,14)" fg:x="64660" fg:w="53"/><text x="55.7388%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (51 samples, 0.04%)</title><rect x="55.4905%" y="565" width="0.0438%" height="15" fill="rgb(220,79,17)" fg:x="64662" fg:w="51"/><text x="55.7405%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (51 samples, 0.04%)</title><rect x="55.4905%" y="549" width="0.0438%" height="15" fill="rgb(205,131,53)" fg:x="64662" fg:w="51"/><text x="55.7405%" y="559.50"></text></g><g><title>__rg_dealloc (51 samples, 0.04%)</title><rect x="55.4905%" y="533" width="0.0438%" height="15" fill="rgb(209,50,29)" fg:x="64662" fg:w="51"/><text x="55.7405%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (51 samples, 0.04%)</title><rect x="55.4905%" y="517" width="0.0438%" height="15" fill="rgb(245,86,46)" fg:x="64662" fg:w="51"/><text x="55.7405%" y="527.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (22 samples, 0.02%)</title><rect x="55.5154%" y="501" width="0.0189%" height="15" fill="rgb(235,66,46)" fg:x="64691" fg:w="22"/><text x="55.7654%" y="511.50"></text></g><g><title>simd_json::Deserializer::next_ (72 samples, 0.06%)</title><rect x="55.5394%" y="629" width="0.0618%" height="15" fill="rgb(232,148,31)" fg:x="64719" fg:w="72"/><text x="55.7894%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (51 samples, 0.04%)</title><rect x="55.7231%" y="613" width="0.0438%" height="15" fill="rgb(217,149,8)" fg:x="64933" fg:w="51"/><text x="55.9731%" y="623.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::convert::From&lt;&amp;T&gt;&gt;::from (51 samples, 0.04%)</title><rect x="55.7231%" y="597" width="0.0438%" height="15" fill="rgb(209,183,11)" fg:x="64933" fg:w="51"/><text x="55.9731%" y="607.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrowed (51 samples, 0.04%)</title><rect x="55.7231%" y="581" width="0.0438%" height="15" fill="rgb(208,55,20)" fg:x="64933" fg:w="51"/><text x="55.9731%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (46 samples, 0.04%)</title><rect x="55.7669%" y="613" width="0.0395%" height="15" fill="rgb(218,39,14)" fg:x="64984" fg:w="46"/><text x="56.0169%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (46 samples, 0.04%)</title><rect x="55.7669%" y="597" width="0.0395%" height="15" fill="rgb(216,169,33)" fg:x="64984" fg:w="46"/><text x="56.0169%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (43 samples, 0.04%)</title><rect x="55.7694%" y="581" width="0.0369%" height="15" fill="rgb(233,80,24)" fg:x="64987" fg:w="43"/><text x="56.0194%" y="591.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::insert_nocheck (40 samples, 0.03%)</title><rect x="55.8063%" y="613" width="0.0343%" height="15" fill="rgb(213,179,31)" fg:x="65030" fg:w="40"/><text x="56.0563%" y="623.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (366 samples, 0.31%)</title><rect x="55.9076%" y="421" width="0.3141%" height="15" fill="rgb(209,19,5)" fg:x="65148" fg:w="366"/><text x="56.1576%" y="431.50"></text></g><g><title>halfbrown::HashMap&lt;K,V&gt;::with_capacity (465 samples, 0.40%)</title><rect x="55.8407%" y="613" width="0.3990%" height="15" fill="rgb(219,18,35)" fg:x="65070" fg:w="465"/><text x="56.0907%" y="623.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V&gt;::with_capacity (460 samples, 0.39%)</title><rect x="55.8449%" y="597" width="0.3948%" height="15" fill="rgb(209,169,16)" fg:x="65075" fg:w="460"/><text x="56.0949%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (460 samples, 0.39%)</title><rect x="55.8449%" y="581" width="0.3948%" height="15" fill="rgb(245,90,51)" fg:x="65075" fg:w="460"/><text x="56.0949%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (460 samples, 0.39%)</title><rect x="55.8449%" y="565" width="0.3948%" height="15" fill="rgb(220,99,45)" fg:x="65075" fg:w="460"/><text x="56.0949%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (460 samples, 0.39%)</title><rect x="55.8449%" y="549" width="0.3948%" height="15" fill="rgb(249,89,25)" fg:x="65075" fg:w="460"/><text x="56.0949%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (460 samples, 0.39%)</title><rect x="55.8449%" y="533" width="0.3948%" height="15" fill="rgb(239,193,0)" fg:x="65075" fg:w="460"/><text x="56.0949%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (460 samples, 0.39%)</title><rect x="55.8449%" y="517" width="0.3948%" height="15" fill="rgb(231,126,1)" fg:x="65075" fg:w="460"/><text x="56.0949%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (460 samples, 0.39%)</title><rect x="55.8449%" y="501" width="0.3948%" height="15" fill="rgb(243,166,3)" fg:x="65075" fg:w="460"/><text x="56.0949%" y="511.50"></text></g><g><title>alloc::alloc::alloc (456 samples, 0.39%)</title><rect x="55.8484%" y="485" width="0.3913%" height="15" fill="rgb(223,22,34)" fg:x="65079" fg:w="456"/><text x="56.0984%" y="495.50"></text></g><g><title>__rg_alloc (456 samples, 0.39%)</title><rect x="55.8484%" y="469" width="0.3913%" height="15" fill="rgb(251,52,51)" fg:x="65079" fg:w="456"/><text x="56.0984%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (456 samples, 0.39%)</title><rect x="55.8484%" y="453" width="0.3913%" height="15" fill="rgb(221,165,28)" fg:x="65079" fg:w="456"/><text x="56.0984%" y="463.50"></text></g><g><title>sn_rust_alloc (453 samples, 0.39%)</title><rect x="55.8510%" y="437" width="0.3887%" height="15" fill="rgb(218,121,47)" fg:x="65082" fg:w="453"/><text x="56.1010%" y="447.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="56.2217%" y="421" width="0.0180%" height="15" fill="rgb(209,120,9)" fg:x="65514" fg:w="21"/><text x="56.4717%" y="431.50"></text></g><g><title>simd_json::Deserializer::next_ (134 samples, 0.11%)</title><rect x="56.2397%" y="613" width="0.1150%" height="15" fill="rgb(236,68,12)" fg:x="65535" fg:w="134"/><text x="56.4897%" y="623.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse (56 samples, 0.05%)</title><rect x="56.3547%" y="613" width="0.0481%" height="15" fill="rgb(225,194,26)" fg:x="65669" fg:w="56"/><text x="56.6047%" y="623.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (15 samples, 0.01%)</title><rect x="56.4757%" y="469" width="0.0129%" height="15" fill="rgb(231,84,39)" fg:x="65810" fg:w="15"/><text x="56.7257%" y="479.50"></text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::decode (1,323 samples, 1.14%)</title><rect x="55.3541%" y="677" width="1.1353%" height="15" fill="rgb(210,11,45)" fg:x="64503" fg:w="1323"/><text x="55.6041%" y="687.50"></text></g><g><title>tremor_value::value::parse_to_value_with_buffers (1,304 samples, 1.12%)</title><rect x="55.3704%" y="661" width="1.1190%" height="15" fill="rgb(224,54,52)" fg:x="64522" fg:w="1304"/><text x="55.6204%" y="671.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse (1,111 samples, 0.95%)</title><rect x="55.5360%" y="645" width="0.9534%" height="15" fill="rgb(238,102,14)" fg:x="64715" fg:w="1111"/><text x="55.7860%" y="655.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse_map (1,035 samples, 0.89%)</title><rect x="55.6012%" y="629" width="0.8882%" height="15" fill="rgb(243,160,52)" fg:x="64791" fg:w="1035"/><text x="55.8512%" y="639.50"></text></g><g><title>tremor_value::value::from::&lt;impl core::convert::From&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; for tremor_value::value::Value&gt;::from (101 samples, 0.09%)</title><rect x="56.4028%" y="613" width="0.0867%" height="15" fill="rgb(216,114,19)" fg:x="65725" fg:w="101"/><text x="56.6528%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (45 samples, 0.04%)</title><rect x="56.4508%" y="597" width="0.0386%" height="15" fill="rgb(244,166,37)" fg:x="65781" fg:w="45"/><text x="56.7008%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (42 samples, 0.04%)</title><rect x="56.4534%" y="581" width="0.0360%" height="15" fill="rgb(246,29,44)" fg:x="65784" fg:w="42"/><text x="56.7034%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42 samples, 0.04%)</title><rect x="56.4534%" y="565" width="0.0360%" height="15" fill="rgb(215,56,53)" fg:x="65784" fg:w="42"/><text x="56.7034%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42 samples, 0.04%)</title><rect x="56.4534%" y="549" width="0.0360%" height="15" fill="rgb(217,60,2)" fg:x="65784" fg:w="42"/><text x="56.7034%" y="559.50"></text></g><g><title>alloc::alloc::alloc (40 samples, 0.03%)</title><rect x="56.4551%" y="533" width="0.0343%" height="15" fill="rgb(207,26,24)" fg:x="65786" fg:w="40"/><text x="56.7051%" y="543.50"></text></g><g><title>__rg_alloc (40 samples, 0.03%)</title><rect x="56.4551%" y="517" width="0.0343%" height="15" fill="rgb(252,210,15)" fg:x="65786" fg:w="40"/><text x="56.7051%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (40 samples, 0.03%)</title><rect x="56.4551%" y="501" width="0.0343%" height="15" fill="rgb(253,209,26)" fg:x="65786" fg:w="40"/><text x="56.7051%" y="511.50"></text></g><g><title>sn_rust_alloc (40 samples, 0.03%)</title><rect x="56.4551%" y="485" width="0.0343%" height="15" fill="rgb(238,170,14)" fg:x="65786" fg:w="40"/><text x="56.7051%" y="495.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (12 samples, 0.01%)</title><rect x="56.4894%" y="645" width="0.0103%" height="15" fill="rgb(216,178,15)" fg:x="65826" fg:w="12"/><text x="56.7394%" y="655.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="56.4894%" y="629" width="0.0103%" height="15" fill="rgb(250,197,2)" fg:x="65826" fg:w="12"/><text x="56.7394%" y="639.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="56.4894%" y="613" width="0.0103%" height="15" fill="rgb(212,70,42)" fg:x="65826" fg:w="12"/><text x="56.7394%" y="623.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="56.4894%" y="597" width="0.0103%" height="15" fill="rgb(227,213,9)" fg:x="65826" fg:w="12"/><text x="56.7394%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="56.4894%" y="581" width="0.0103%" height="15" fill="rgb(245,99,25)" fg:x="65826" fg:w="12"/><text x="56.7394%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="56.4894%" y="565" width="0.0103%" height="15" fill="rgb(250,82,29)" fg:x="65826" fg:w="12"/><text x="56.7394%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="56.4894%" y="549" width="0.0103%" height="15" fill="rgb(241,226,54)" fg:x="65826" fg:w="12"/><text x="56.7394%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="56.4894%" y="533" width="0.0103%" height="15" fill="rgb(221,99,41)" fg:x="65826" fg:w="12"/><text x="56.7394%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="56.4894%" y="517" width="0.0103%" height="15" fill="rgb(213,90,21)" fg:x="65826" fg:w="12"/><text x="56.7394%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,358 samples, 1.17%)</title><rect x="55.3532%" y="789" width="1.1654%" height="15" fill="rgb(205,208,24)" fg:x="64502" fg:w="1358"/><text x="55.6032%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (1,358 samples, 1.17%)</title><rect x="55.3532%" y="773" width="1.1654%" height="15" fill="rgb(246,31,12)" fg:x="64502" fg:w="1358"/><text x="55.6032%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,358 samples, 1.17%)</title><rect x="55.3532%" y="757" width="1.1654%" height="15" fill="rgb(213,154,6)" fg:x="64502" fg:w="1358"/><text x="55.6032%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,358 samples, 1.17%)</title><rect x="55.3532%" y="741" width="1.1654%" height="15" fill="rgb(222,163,29)" fg:x="64502" fg:w="1358"/><text x="55.6032%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (1,357 samples, 1.16%)</title><rect x="55.3541%" y="725" width="1.1645%" height="15" fill="rgb(227,201,8)" fg:x="64503" fg:w="1357"/><text x="55.6041%" y="735.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (1,357 samples, 1.16%)</title><rect x="55.3541%" y="709" width="1.1645%" height="15" fill="rgb(233,9,32)" fg:x="64503" fg:w="1357"/><text x="55.6041%" y="719.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (1,357 samples, 1.16%)</title><rect x="55.3541%" y="693" width="1.1645%" height="15" fill="rgb(217,54,24)" fg:x="64503" fg:w="1357"/><text x="55.6041%" y="703.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="56.4894%" y="677" width="0.0292%" height="15" fill="rgb(235,192,0)" fg:x="65826" fg:w="34"/><text x="56.7394%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="56.4894%" y="661" width="0.0292%" height="15" fill="rgb(235,45,9)" fg:x="65826" fg:w="34"/><text x="56.7394%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (22 samples, 0.02%)</title><rect x="56.4997%" y="645" width="0.0189%" height="15" fill="rgb(246,42,40)" fg:x="65838" fg:w="22"/><text x="56.7497%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (22 samples, 0.02%)</title><rect x="56.4997%" y="629" width="0.0189%" height="15" fill="rgb(248,111,24)" fg:x="65838" fg:w="22"/><text x="56.7497%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="56.4997%" y="613" width="0.0189%" height="15" fill="rgb(249,65,22)" fg:x="65838" fg:w="22"/><text x="56.7497%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.02%)</title><rect x="56.4997%" y="597" width="0.0189%" height="15" fill="rgb(238,111,51)" fg:x="65838" fg:w="22"/><text x="56.7497%" y="607.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.02%)</title><rect x="56.4997%" y="581" width="0.0189%" height="15" fill="rgb(250,118,22)" fg:x="65838" fg:w="22"/><text x="56.7497%" y="591.50"></text></g><g><title>__rg_alloc (22 samples, 0.02%)</title><rect x="56.4997%" y="565" width="0.0189%" height="15" fill="rgb(234,84,26)" fg:x="65838" fg:w="22"/><text x="56.7497%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (22 samples, 0.02%)</title><rect x="56.4997%" y="549" width="0.0189%" height="15" fill="rgb(243,172,12)" fg:x="65838" fg:w="22"/><text x="56.7497%" y="559.50"></text></g><g><title>sn_rust_alloc (22 samples, 0.02%)</title><rect x="56.4997%" y="533" width="0.0189%" height="15" fill="rgb(236,150,49)" fg:x="65838" fg:w="22"/><text x="56.7497%" y="543.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (22 samples, 0.02%)</title><rect x="56.4997%" y="517" width="0.0189%" height="15" fill="rgb(225,197,26)" fg:x="65838" fg:w="22"/><text x="56.7497%" y="527.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (1,361 samples, 1.17%)</title><rect x="55.3532%" y="805" width="1.1680%" height="15" fill="rgb(214,17,42)" fg:x="64502" fg:w="1361"/><text x="55.6032%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,383 samples, 1.19%)</title><rect x="55.3515%" y="885" width="1.1868%" height="15" fill="rgb(224,165,40)" fg:x="64500" fg:w="1383"/><text x="55.6015%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,381 samples, 1.19%)</title><rect x="55.3532%" y="869" width="1.1851%" height="15" fill="rgb(246,100,4)" fg:x="64502" fg:w="1381"/><text x="55.6032%" y="879.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,381 samples, 1.19%)</title><rect x="55.3532%" y="853" width="1.1851%" height="15" fill="rgb(222,103,0)" fg:x="64502" fg:w="1381"/><text x="55.6032%" y="863.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,381 samples, 1.19%)</title><rect x="55.3532%" y="837" width="1.1851%" height="15" fill="rgb(227,189,26)" fg:x="64502" fg:w="1381"/><text x="55.6032%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,381 samples, 1.19%)</title><rect x="55.3532%" y="821" width="1.1851%" height="15" fill="rgb(214,202,17)" fg:x="64502" fg:w="1381"/><text x="55.6032%" y="831.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (20 samples, 0.02%)</title><rect x="56.5212%" y="805" width="0.0172%" height="15" fill="rgb(229,111,3)" fg:x="65863" fg:w="20"/><text x="56.7712%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="56.5212%" y="789" width="0.0172%" height="15" fill="rgb(229,172,15)" fg:x="65863" fg:w="20"/><text x="56.7712%" y="799.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (20 samples, 0.02%)</title><rect x="56.5212%" y="773" width="0.0172%" height="15" fill="rgb(230,224,35)" fg:x="65863" fg:w="20"/><text x="56.7712%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (20 samples, 0.02%)</title><rect x="56.5212%" y="757" width="0.0172%" height="15" fill="rgb(251,141,6)" fg:x="65863" fg:w="20"/><text x="56.7712%" y="767.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (20 samples, 0.02%)</title><rect x="56.5212%" y="741" width="0.0172%" height="15" fill="rgb(225,208,6)" fg:x="65863" fg:w="20"/><text x="56.7712%" y="751.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (20 samples, 0.02%)</title><rect x="56.5212%" y="725" width="0.0172%" height="15" fill="rgb(246,181,16)" fg:x="65863" fg:w="20"/><text x="56.7712%" y="735.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (20 samples, 0.02%)</title><rect x="56.5212%" y="709" width="0.0172%" height="15" fill="rgb(227,129,36)" fg:x="65863" fg:w="20"/><text x="56.7712%" y="719.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (20 samples, 0.02%)</title><rect x="56.5212%" y="693" width="0.0172%" height="15" fill="rgb(248,117,24)" fg:x="65863" fg:w="20"/><text x="56.7712%" y="703.50"></text></g><g><title>tremor_common::time::nanotime (25 samples, 0.02%)</title><rect x="56.5392%" y="885" width="0.0215%" height="15" fill="rgb(214,185,35)" fg:x="65884" fg:w="25"/><text x="56.7892%" y="895.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event (32 samples, 0.03%)</title><rect x="56.5692%" y="837" width="0.0275%" height="15" fill="rgb(236,150,34)" fg:x="65919" fg:w="32"/><text x="56.8192%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (16 samples, 0.01%)</title><rect x="56.5830%" y="821" width="0.0137%" height="15" fill="rgb(243,228,27)" fg:x="65935" fg:w="16"/><text x="56.8330%" y="831.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event::{{closure}} (13 samples, 0.01%)</title><rect x="56.5855%" y="805" width="0.0112%" height="15" fill="rgb(245,77,44)" fg:x="65938" fg:w="13"/><text x="56.8355%" y="815.50"></text></g><g><title>tremor_pipeline::executable_graph::NodeMetrics::inc_input (52 samples, 0.04%)</title><rect x="56.5607%" y="885" width="0.0446%" height="15" fill="rgb(235,214,42)" fg:x="65909" fg:w="52"/><text x="56.8107%" y="895.50"></text></g><g><title>tremor_pipeline::executable_graph::NodeMetrics::inc_input_n (42 samples, 0.04%)</title><rect x="56.5692%" y="869" width="0.0360%" height="15" fill="rgb(221,74,3)" fg:x="65919" fg:w="42"/><text x="56.8192%" y="879.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry_mut (42 samples, 0.04%)</title><rect x="56.5692%" y="853" width="0.0360%" height="15" fill="rgb(206,121,29)" fg:x="65919" fg:w="42"/><text x="56.8192%" y="863.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (31 samples, 0.03%)</title><rect x="56.6053%" y="885" width="0.0266%" height="15" fill="rgb(249,131,53)" fg:x="65961" fg:w="31"/><text x="56.8553%" y="895.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.01%)</title><rect x="57.8805%" y="661" width="0.0146%" height="15" fill="rgb(236,170,29)" fg:x="67447" fg:w="17"/><text x="58.1305%" y="671.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (17 samples, 0.01%)</title><rect x="57.8805%" y="645" width="0.0146%" height="15" fill="rgb(247,96,15)" fg:x="67447" fg:w="17"/><text x="58.1305%" y="655.50"></text></g><g><title>[libc-2.31.so] (145 samples, 0.12%)</title><rect x="57.8951%" y="661" width="0.1244%" height="15" fill="rgb(211,210,7)" fg:x="67464" fg:w="145"/><text x="58.1451%" y="671.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_int (124 samples, 0.11%)</title><rect x="58.0195%" y="661" width="0.1064%" height="15" fill="rgb(240,88,50)" fg:x="67609" fg:w="124"/><text x="58.2695%" y="671.50"></text></g><g><title>itoa::write (123 samples, 0.11%)</title><rect x="58.0204%" y="645" width="0.1056%" height="15" fill="rgb(209,229,26)" fg:x="67610" fg:w="123"/><text x="58.2704%" y="655.50"></text></g><g><title>itoa::Buffer::format (123 samples, 0.11%)</title><rect x="58.0204%" y="629" width="0.1056%" height="15" fill="rgb(210,68,23)" fg:x="67610" fg:w="123"/><text x="58.2704%" y="639.50"></text></g><g><title>&lt;u64 as itoa::Integer&gt;::write (123 samples, 0.11%)</title><rect x="58.0204%" y="613" width="0.1056%" height="15" fill="rgb(229,180,13)" fg:x="67610" fg:w="123"/><text x="58.2704%" y="623.50"></text></g><g><title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (123 samples, 0.11%)</title><rect x="58.0204%" y="597" width="0.1056%" height="15" fill="rgb(236,53,44)" fg:x="67610" fg:w="123"/><text x="58.2704%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="58.1749%" y="565" width="0.0154%" height="15" fill="rgb(244,214,29)" fg:x="67790" fg:w="18"/><text x="58.4249%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="58.1749%" y="549" width="0.0154%" height="15" fill="rgb(220,75,29)" fg:x="67790" fg:w="18"/><text x="58.4249%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (18 samples, 0.02%)</title><rect x="58.1749%" y="533" width="0.0154%" height="15" fill="rgb(214,183,37)" fg:x="67790" fg:w="18"/><text x="58.4249%" y="543.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_char (88 samples, 0.08%)</title><rect x="58.1259%" y="645" width="0.0755%" height="15" fill="rgb(239,117,29)" fg:x="67733" fg:w="88"/><text x="58.3759%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (77 samples, 0.07%)</title><rect x="58.1354%" y="629" width="0.0661%" height="15" fill="rgb(237,171,35)" fg:x="67744" fg:w="77"/><text x="58.3854%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (77 samples, 0.07%)</title><rect x="58.1354%" y="613" width="0.0661%" height="15" fill="rgb(229,178,53)" fg:x="67744" fg:w="77"/><text x="58.3854%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (77 samples, 0.07%)</title><rect x="58.1354%" y="597" width="0.0661%" height="15" fill="rgb(210,102,19)" fg:x="67744" fg:w="77"/><text x="58.3854%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (77 samples, 0.07%)</title><rect x="58.1354%" y="581" width="0.0661%" height="15" fill="rgb(235,127,22)" fg:x="67744" fg:w="77"/><text x="58.3854%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="58.1903%" y="565" width="0.0112%" height="15" fill="rgb(244,31,31)" fg:x="67808" fg:w="13"/><text x="58.4403%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.08%)</title><rect x="58.3328%" y="629" width="0.0832%" height="15" fill="rgb(231,43,21)" fg:x="67974" fg:w="97"/><text x="58.5828%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.08%)</title><rect x="58.3328%" y="613" width="0.0832%" height="15" fill="rgb(217,131,35)" fg:x="67974" fg:w="97"/><text x="58.5828%" y="623.50"></text></g><g><title>value_trait::generator::BaseGenerator::write (96 samples, 0.08%)</title><rect x="58.4160%" y="629" width="0.0824%" height="15" fill="rgb(221,149,4)" fg:x="68071" fg:w="96"/><text x="58.6660%" y="639.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (96 samples, 0.08%)</title><rect x="58.4160%" y="613" width="0.0824%" height="15" fill="rgb(232,170,28)" fg:x="68071" fg:w="96"/><text x="58.6660%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (96 samples, 0.08%)</title><rect x="58.4160%" y="597" width="0.0824%" height="15" fill="rgb(238,56,10)" fg:x="68071" fg:w="96"/><text x="58.6660%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (96 samples, 0.08%)</title><rect x="58.4160%" y="581" width="0.0824%" height="15" fill="rgb(235,196,14)" fg:x="68071" fg:w="96"/><text x="58.6660%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (96 samples, 0.08%)</title><rect x="58.4160%" y="565" width="0.0824%" height="15" fill="rgb(216,45,48)" fg:x="68071" fg:w="96"/><text x="58.6660%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (68 samples, 0.06%)</title><rect x="58.4400%" y="549" width="0.0584%" height="15" fill="rgb(238,213,17)" fg:x="68099" fg:w="68"/><text x="58.6900%" y="559.50"></text></g><g><title>[libc-2.31.so] (67 samples, 0.06%)</title><rect x="58.4409%" y="533" width="0.0575%" height="15" fill="rgb(212,13,2)" fg:x="68100" fg:w="67"/><text x="58.6909%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (84 samples, 0.07%)</title><rect x="58.5113%" y="549" width="0.0721%" height="15" fill="rgb(240,114,20)" fg:x="68182" fg:w="84"/><text x="58.7613%" y="559.50"></text></g><g><title>[libc-2.31.so] (49 samples, 0.04%)</title><rect x="58.5413%" y="533" width="0.0420%" height="15" fill="rgb(228,41,40)" fg:x="68217" fg:w="49"/><text x="58.7913%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (2,282 samples, 1.96%)</title><rect x="56.6319%" y="885" width="1.9583%" height="15" fill="rgb(244,132,35)" fg:x="65992" fg:w="2282"/><text x="56.8819%" y="895.50">t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,282 samples, 1.96%)</title><rect x="56.6319%" y="869" width="1.9583%" height="15" fill="rgb(253,189,4)" fg:x="65992" fg:w="2282"/><text x="56.8819%" y="879.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,282 samples, 1.96%)</title><rect x="56.6319%" y="853" width="1.9583%" height="15" fill="rgb(224,37,19)" fg:x="65992" fg:w="2282"/><text x="56.8819%" y="863.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (2,282 samples, 1.96%)</title><rect x="56.6319%" y="837" width="1.9583%" height="15" fill="rgb(235,223,18)" fg:x="65992" fg:w="2282"/><text x="56.8819%" y="847.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (2,282 samples, 1.96%)</title><rect x="56.6319%" y="821" width="1.9583%" height="15" fill="rgb(235,163,25)" fg:x="65992" fg:w="2282"/><text x="56.8819%" y="831.50">t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (2,282 samples, 1.96%)</title><rect x="56.6319%" y="805" width="1.9583%" height="15" fill="rgb(217,145,28)" fg:x="65992" fg:w="2282"/><text x="56.8819%" y="815.50">t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (2,282 samples, 1.96%)</title><rect x="56.6319%" y="789" width="1.9583%" height="15" fill="rgb(223,223,32)" fg:x="65992" fg:w="2282"/><text x="56.8819%" y="799.50">t..</text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode (2,282 samples, 1.96%)</title><rect x="56.6319%" y="773" width="1.9583%" height="15" fill="rgb(227,189,39)" fg:x="65992" fg:w="2282"/><text x="56.8819%" y="783.50">&lt;..</text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode_into (2,282 samples, 1.96%)</title><rect x="56.6319%" y="757" width="1.9583%" height="15" fill="rgb(248,10,22)" fg:x="65992" fg:w="2282"/><text x="56.8819%" y="767.50">&lt;..</text></g><g><title>tremor_value::value::serialize::&lt;impl value_trait::Writable for tremor_value::value::Value&gt;::write (2,282 samples, 1.96%)</title><rect x="56.6319%" y="741" width="1.9583%" height="15" fill="rgb(248,46,39)" fg:x="65992" fg:w="2282"/><text x="56.8819%" y="751.50">t..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (2,282 samples, 1.96%)</title><rect x="56.6319%" y="725" width="1.9583%" height="15" fill="rgb(248,113,48)" fg:x="65992" fg:w="2282"/><text x="56.8819%" y="735.50">t..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_object (2,282 samples, 1.96%)</title><rect x="56.6319%" y="709" width="1.9583%" height="15" fill="rgb(245,16,25)" fg:x="65992" fg:w="2282"/><text x="56.8819%" y="719.50">t..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (2,282 samples, 1.96%)</title><rect x="56.6319%" y="693" width="1.9583%" height="15" fill="rgb(249,152,16)" fg:x="65992" fg:w="2282"/><text x="56.8819%" y="703.50">t..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (2,282 samples, 1.96%)</title><rect x="56.6319%" y="677" width="1.9583%" height="15" fill="rgb(250,16,1)" fg:x="65992" fg:w="2282"/><text x="56.8819%" y="687.50">t..</text></g><g><title>value_trait::generator::BaseGenerator::write_string (541 samples, 0.46%)</title><rect x="58.1259%" y="661" width="0.4643%" height="15" fill="rgb(249,138,3)" fg:x="67733" fg:w="541"/><text x="58.3759%" y="671.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_string_content (453 samples, 0.39%)</title><rect x="58.2015%" y="645" width="0.3887%" height="15" fill="rgb(227,71,41)" fg:x="67821" fg:w="453"/><text x="58.4515%" y="655.50"></text></g><g><title>value_trait::generator::write_str_simd (107 samples, 0.09%)</title><rect x="58.4984%" y="629" width="0.0918%" height="15" fill="rgb(209,184,23)" fg:x="68167" fg:w="107"/><text x="58.7484%" y="639.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (97 samples, 0.08%)</title><rect x="58.5070%" y="613" width="0.0832%" height="15" fill="rgb(223,215,31)" fg:x="68177" fg:w="97"/><text x="58.7570%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (97 samples, 0.08%)</title><rect x="58.5070%" y="597" width="0.0832%" height="15" fill="rgb(210,146,28)" fg:x="68177" fg:w="97"/><text x="58.7570%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (97 samples, 0.08%)</title><rect x="58.5070%" y="581" width="0.0832%" height="15" fill="rgb(209,183,41)" fg:x="68177" fg:w="97"/><text x="58.7570%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (97 samples, 0.08%)</title><rect x="58.5070%" y="565" width="0.0832%" height="15" fill="rgb(209,224,45)" fg:x="68177" fg:w="97"/><text x="58.7570%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::clone_from_slice (118 samples, 0.10%)</title><rect x="58.6331%" y="709" width="0.1013%" height="15" fill="rgb(224,209,51)" fg:x="68324" fg:w="118"/><text x="58.8831%" y="719.50"></text></g><g><title>&lt;[T] as core::slice::CloneFromSpec&lt;T&gt;&gt;::spec_clone_from (118 samples, 0.10%)</title><rect x="58.6331%" y="693" width="0.1013%" height="15" fill="rgb(223,17,39)" fg:x="68324" fg:w="118"/><text x="58.8831%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (118 samples, 0.10%)</title><rect x="58.6331%" y="677" width="0.1013%" height="15" fill="rgb(234,204,37)" fg:x="68324" fg:w="118"/><text x="58.8831%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (118 samples, 0.10%)</title><rect x="58.6331%" y="661" width="0.1013%" height="15" fill="rgb(236,120,5)" fg:x="68324" fg:w="118"/><text x="58.8831%" y="671.50"></text></g><g><title>[libc-2.31.so] (116 samples, 0.10%)</title><rect x="58.6348%" y="645" width="0.0995%" height="15" fill="rgb(248,97,27)" fg:x="68326" fg:w="116"/><text x="58.8848%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (32 samples, 0.03%)</title><rect x="59.0365%" y="677" width="0.0275%" height="15" fill="rgb(240,66,17)" fg:x="68794" fg:w="32"/><text x="59.2865%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (22 samples, 0.02%)</title><rect x="59.0639%" y="677" width="0.0189%" height="15" fill="rgb(210,79,3)" fg:x="68826" fg:w="22"/><text x="59.3139%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (80 samples, 0.07%)</title><rect x="59.0828%" y="677" width="0.0687%" height="15" fill="rgb(214,176,27)" fg:x="68848" fg:w="80"/><text x="59.3328%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (70 samples, 0.06%)</title><rect x="59.1514%" y="677" width="0.0601%" height="15" fill="rgb(235,185,3)" fg:x="68928" fg:w="70"/><text x="59.4014%" y="687.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInput as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::find_whitespace_and_structurals (289 samples, 0.25%)</title><rect x="58.9798%" y="693" width="0.2480%" height="15" fill="rgb(227,24,12)" fg:x="68728" fg:w="289"/><text x="59.2298%" y="703.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (19 samples, 0.02%)</title><rect x="59.2115%" y="677" width="0.0163%" height="15" fill="rgb(252,169,48)" fg:x="68998" fg:w="19"/><text x="59.4615%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (18 samples, 0.02%)</title><rect x="59.8363%" y="613" width="0.0154%" height="15" fill="rgb(212,65,1)" fg:x="69726" fg:w="18"/><text x="60.0863%" y="623.50"></text></g><g><title>[libc-2.31.so] (89 samples, 0.08%)</title><rect x="60.0499%" y="501" width="0.0764%" height="15" fill="rgb(242,39,24)" fg:x="69975" fg:w="89"/><text x="60.2999%" y="511.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (391 samples, 0.34%)</title><rect x="60.1332%" y="501" width="0.3355%" height="15" fill="rgb(249,32,23)" fg:x="70072" fg:w="391"/><text x="60.3832%" y="511.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="60.4687%" y="501" width="0.0197%" height="15" fill="rgb(251,195,23)" fg:x="70463" fg:w="23"/><text x="60.7187%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (722 samples, 0.62%)</title><rect x="59.8697%" y="597" width="0.6196%" height="15" fill="rgb(236,174,8)" fg:x="69765" fg:w="722"/><text x="60.1197%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (722 samples, 0.62%)</title><rect x="59.8697%" y="581" width="0.6196%" height="15" fill="rgb(220,197,8)" fg:x="69765" fg:w="722"/><text x="60.1197%" y="591.50"></text></g><g><title>alloc::alloc::realloc (722 samples, 0.62%)</title><rect x="59.8697%" y="565" width="0.6196%" height="15" fill="rgb(240,108,37)" fg:x="69765" fg:w="722"/><text x="60.1197%" y="575.50"></text></g><g><title>__rg_realloc (722 samples, 0.62%)</title><rect x="59.8697%" y="549" width="0.6196%" height="15" fill="rgb(232,176,24)" fg:x="69765" fg:w="722"/><text x="60.1197%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::realloc (722 samples, 0.62%)</title><rect x="59.8697%" y="533" width="0.6196%" height="15" fill="rgb(243,35,29)" fg:x="69765" fg:w="722"/><text x="60.1197%" y="543.50"></text></g><g><title>sn_rust_realloc (721 samples, 0.62%)</title><rect x="59.8706%" y="517" width="0.6187%" height="15" fill="rgb(210,37,18)" fg:x="69766" fg:w="721"/><text x="60.1206%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (738 samples, 0.63%)</title><rect x="59.8611%" y="613" width="0.6333%" height="15" fill="rgb(224,184,40)" fg:x="69755" fg:w="738"/><text x="60.1111%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (819 samples, 0.70%)</title><rect x="59.7968%" y="677" width="0.7028%" height="15" fill="rgb(236,39,29)" fg:x="69680" fg:w="819"/><text x="60.0468%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (819 samples, 0.70%)</title><rect x="59.7968%" y="661" width="0.7028%" height="15" fill="rgb(232,48,39)" fg:x="69680" fg:w="819"/><text x="60.0468%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (782 samples, 0.67%)</title><rect x="59.8285%" y="645" width="0.6711%" height="15" fill="rgb(236,34,42)" fg:x="69717" fg:w="782"/><text x="60.0785%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (782 samples, 0.67%)</title><rect x="59.8285%" y="629" width="0.6711%" height="15" fill="rgb(243,106,37)" fg:x="69717" fg:w="782"/><text x="60.0785%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (24 samples, 0.02%)</title><rect x="60.5031%" y="677" width="0.0206%" height="15" fill="rgb(218,96,6)" fg:x="70503" fg:w="24"/><text x="60.7531%" y="687.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (348 samples, 0.30%)</title><rect x="60.5237%" y="677" width="0.2986%" height="15" fill="rgb(235,130,12)" fg:x="70527" fg:w="348"/><text x="60.7737%" y="687.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (348 samples, 0.30%)</title><rect x="60.5237%" y="661" width="0.2986%" height="15" fill="rgb(231,95,0)" fg:x="70527" fg:w="348"/><text x="60.7737%" y="671.50"></text></g><g><title>core::core_arch::simd::i32x8::new (348 samples, 0.30%)</title><rect x="60.5237%" y="645" width="0.2986%" height="15" fill="rgb(228,12,23)" fg:x="70527" fg:w="348"/><text x="60.7737%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_si256 (32 samples, 0.03%)</title><rect x="60.8223%" y="677" width="0.0275%" height="15" fill="rgb(216,12,1)" fg:x="70875" fg:w="32"/><text x="61.0723%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (184 samples, 0.16%)</title><rect x="60.8498%" y="677" width="0.1579%" height="15" fill="rgb(219,59,3)" fg:x="70907" fg:w="184"/><text x="61.0998%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (183 samples, 0.16%)</title><rect x="61.0077%" y="677" width="0.1570%" height="15" fill="rgb(215,208,46)" fg:x="71091" fg:w="183"/><text x="61.2577%" y="687.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInput as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::flatten_bits (2,378 samples, 2.04%)</title><rect x="59.2278%" y="693" width="2.0407%" height="15" fill="rgb(254,224,29)" fg:x="69017" fg:w="2378"/><text x="59.4778%" y="703.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (121 samples, 0.10%)</title><rect x="61.1647%" y="677" width="0.1038%" height="15" fill="rgb(232,14,29)" fg:x="71274" fg:w="121"/><text x="61.4147%" y="687.50"></text></g><g><title>simdutf8::implementation::x86::avx2::&lt;impl simdutf8::implementation::helpers::Utf8CheckAlgorithm&lt;simdutf8::implementation::helpers::SimdU8Value&lt;core::core_arch::x86::__m256i&gt;&gt;&gt;::check_incomplete_pending (28 samples, 0.02%)</title><rect x="61.2943%" y="661" width="0.0240%" height="15" fill="rgb(208,45,52)" fg:x="71425" fg:w="28"/><text x="61.5443%" y="671.50"></text></g><g><title>simdutf8::implementation::x86::avx2::&lt;impl simdutf8::implementation::helpers::SimdU8Value&lt;core::core_arch::x86::__m256i&gt;&gt;::or (28 samples, 0.02%)</title><rect x="61.2943%" y="645" width="0.0240%" height="15" fill="rgb(234,191,28)" fg:x="71425" fg:w="28"/><text x="61.5443%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (28 samples, 0.02%)</title><rect x="61.2943%" y="629" width="0.0240%" height="15" fill="rgb(244,67,43)" fg:x="71425" fg:w="28"/><text x="61.5443%" y="639.50"></text></g><g><title>simdutf8::implementation::x86::avx2::&lt;impl simdutf8::implementation::helpers::SimdU8Value&lt;core::core_arch::x86::__m256i&gt;&gt;::is_ascii (56 samples, 0.05%)</title><rect x="61.3183%" y="645" width="0.0481%" height="15" fill="rgb(236,189,24)" fg:x="71453" fg:w="56"/><text x="61.5683%" y="655.50"></text></g><g><title>simdutf8::implementation::x86::avx2::&lt;impl simdutf8::implementation::helpers::Utf8CheckAlgorithm&lt;simdutf8::implementation::helpers::SimdU8Value&lt;core::core_arch::x86::__m256i&gt;&gt;&gt;::check_utf8 (143 samples, 0.12%)</title><rect x="61.2754%" y="677" width="0.1227%" height="15" fill="rgb(239,214,33)" fg:x="71403" fg:w="143"/><text x="61.5254%" y="687.50"></text></g><g><title>simdutf8::implementation::x86::avx2::SimdInput::is_ascii (93 samples, 0.08%)</title><rect x="61.3183%" y="661" width="0.0798%" height="15" fill="rgb(226,176,41)" fg:x="71453" fg:w="93"/><text x="61.5683%" y="671.50"></text></g><g><title>simdutf8::implementation::x86::avx2::&lt;impl simdutf8::implementation::helpers::SimdU8Value&lt;core::core_arch::x86::__m256i&gt;&gt;::or (37 samples, 0.03%)</title><rect x="61.3664%" y="645" width="0.0318%" height="15" fill="rgb(248,47,8)" fg:x="71509" fg:w="37"/><text x="61.6164%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (37 samples, 0.03%)</title><rect x="61.3664%" y="629" width="0.0318%" height="15" fill="rgb(218,81,44)" fg:x="71509" fg:w="37"/><text x="61.6164%" y="639.50"></text></g><g><title>&lt;simdutf8::implementation::x86::avx2::ChunkedUtf8ValidatorImp as simdutf8::basic::imp::ChunkedUtf8Validator&gt;::update_from_chunks (232 samples, 0.20%)</title><rect x="61.2754%" y="693" width="0.1991%" height="15" fill="rgb(213,98,6)" fg:x="71403" fg:w="232"/><text x="61.5254%" y="703.50"></text></g><g><title>simdutf8::implementation::x86::avx2::SimdInput::new (89 samples, 0.08%)</title><rect x="61.3981%" y="677" width="0.0764%" height="15" fill="rgb(222,85,22)" fg:x="71546" fg:w="89"/><text x="61.6481%" y="687.50"></text></g><g><title>simdutf8::implementation::x86::avx2::&lt;impl simdutf8::implementation::helpers::SimdU8Value&lt;core::core_arch::x86::__m256i&gt;&gt;::load_from (89 samples, 0.08%)</title><rect x="61.3981%" y="661" width="0.0764%" height="15" fill="rgb(239,46,39)" fg:x="71546" fg:w="89"/><text x="61.6481%" y="671.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (89 samples, 0.08%)</title><rect x="61.3981%" y="645" width="0.0764%" height="15" fill="rgb(237,12,29)" fg:x="71546" fg:w="89"/><text x="61.6481%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (89 samples, 0.08%)</title><rect x="61.3981%" y="629" width="0.0764%" height="15" fill="rgb(214,77,8)" fg:x="71546" fg:w="89"/><text x="61.6481%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.01%)</title><rect x="61.4745%" y="693" width="0.0137%" height="15" fill="rgb(217,168,37)" fg:x="71635" fg:w="16"/><text x="61.7245%" y="703.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (186 samples, 0.16%)</title><rect x="61.6075%" y="533" width="0.1596%" height="15" fill="rgb(221,217,23)" fg:x="71790" fg:w="186"/><text x="61.8575%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (331 samples, 0.28%)</title><rect x="61.4882%" y="693" width="0.2841%" height="15" fill="rgb(243,229,36)" fg:x="71651" fg:w="331"/><text x="61.7382%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (331 samples, 0.28%)</title><rect x="61.4882%" y="677" width="0.2841%" height="15" fill="rgb(251,163,40)" fg:x="71651" fg:w="331"/><text x="61.7382%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (323 samples, 0.28%)</title><rect x="61.4951%" y="661" width="0.2772%" height="15" fill="rgb(237,222,12)" fg:x="71659" fg:w="323"/><text x="61.7451%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (323 samples, 0.28%)</title><rect x="61.4951%" y="645" width="0.2772%" height="15" fill="rgb(248,132,6)" fg:x="71659" fg:w="323"/><text x="61.7451%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (319 samples, 0.27%)</title><rect x="61.4985%" y="629" width="0.2738%" height="15" fill="rgb(227,167,50)" fg:x="71663" fg:w="319"/><text x="61.7485%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (319 samples, 0.27%)</title><rect x="61.4985%" y="613" width="0.2738%" height="15" fill="rgb(242,84,37)" fg:x="71663" fg:w="319"/><text x="61.7485%" y="623.50"></text></g><g><title>alloc::alloc::alloc (310 samples, 0.27%)</title><rect x="61.5062%" y="597" width="0.2660%" height="15" fill="rgb(212,4,50)" fg:x="71672" fg:w="310"/><text x="61.7562%" y="607.50"></text></g><g><title>__rg_alloc (310 samples, 0.27%)</title><rect x="61.5062%" y="581" width="0.2660%" height="15" fill="rgb(230,228,32)" fg:x="71672" fg:w="310"/><text x="61.7562%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (310 samples, 0.27%)</title><rect x="61.5062%" y="565" width="0.2660%" height="15" fill="rgb(248,217,23)" fg:x="71672" fg:w="310"/><text x="61.7562%" y="575.50"></text></g><g><title>sn_rust_alloc (306 samples, 0.26%)</title><rect x="61.5097%" y="549" width="0.2626%" height="15" fill="rgb(238,197,32)" fg:x="71676" fg:w="306"/><text x="61.7597%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from (56 samples, 0.05%)</title><rect x="61.7731%" y="693" width="0.0481%" height="15" fill="rgb(236,106,1)" fg:x="71983" fg:w="56"/><text x="62.0231%" y="703.50"></text></g><g><title>core::intrinsics::copy (56 samples, 0.05%)</title><rect x="61.7731%" y="677" width="0.0481%" height="15" fill="rgb(219,228,13)" fg:x="71983" fg:w="56"/><text x="62.0231%" y="687.50"></text></g><g><title>[libc-2.31.so] (36 samples, 0.03%)</title><rect x="61.7903%" y="661" width="0.0309%" height="15" fill="rgb(238,30,35)" fg:x="72003" fg:w="36"/><text x="62.0403%" y="671.50"></text></g><g><title>simd_json::Stage1Parse::finalize_structurals (191 samples, 0.16%)</title><rect x="61.8212%" y="693" width="0.1639%" height="15" fill="rgb(236,70,23)" fg:x="72039" fg:w="191"/><text x="62.0712%" y="703.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInput as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::cmp_mask_against_input (84 samples, 0.07%)</title><rect x="62.1447%" y="677" width="0.0721%" height="15" fill="rgb(249,104,48)" fg:x="72416" fg:w="84"/><text x="62.3947%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (51 samples, 0.04%)</title><rect x="62.1730%" y="661" width="0.0438%" height="15" fill="rgb(254,117,50)" fg:x="72449" fg:w="51"/><text x="62.4230%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (29 samples, 0.02%)</title><rect x="62.2168%" y="677" width="0.0249%" height="15" fill="rgb(223,152,4)" fg:x="72500" fg:w="29"/><text x="62.4668%" y="687.50"></text></g><g><title>simd_json::Stage1Parse::find_odd_backslash_sequences (310 samples, 0.27%)</title><rect x="61.9851%" y="693" width="0.2660%" height="15" fill="rgb(245,6,2)" fg:x="72230" fg:w="310"/><text x="62.2351%" y="703.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInput as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::cmp_mask_against_input (80 samples, 0.07%)</title><rect x="62.4168%" y="677" width="0.0687%" height="15" fill="rgb(249,150,24)" fg:x="72733" fg:w="80"/><text x="62.6668%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (53 samples, 0.05%)</title><rect x="62.4399%" y="661" width="0.0455%" height="15" fill="rgb(228,185,42)" fg:x="72760" fg:w="53"/><text x="62.6899%" y="671.50"></text></g><g><title>core::core_arch::x86::pclmulqdq::_mm_clmulepi64_si128 (174 samples, 0.15%)</title><rect x="62.5566%" y="661" width="0.1493%" height="15" fill="rgb(226,39,33)" fg:x="72896" fg:w="174"/><text x="62.8066%" y="671.50"></text></g><g><title>simd_json::Deserializer::find_structural_bits (4,640 samples, 3.98%)</title><rect x="58.7387%" y="709" width="3.9819%" height="15" fill="rgb(221,166,19)" fg:x="68447" fg:w="4640"/><text x="58.9887%" y="719.50">simd..</text></g><g><title>simd_json::Stage1Parse::find_quote_mask_and_bits (547 samples, 0.47%)</title><rect x="62.2511%" y="693" width="0.4694%" height="15" fill="rgb(209,109,2)" fg:x="72540" fg:w="547"/><text x="62.5011%" y="703.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInput as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::compute_quote_mask (274 samples, 0.24%)</title><rect x="62.4854%" y="677" width="0.2351%" height="15" fill="rgb(252,216,26)" fg:x="72813" fg:w="274"/><text x="62.7354%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi64x (17 samples, 0.01%)</title><rect x="62.7060%" y="661" width="0.0146%" height="15" fill="rgb(227,173,36)" fg:x="73070" fg:w="17"/><text x="62.9560%" y="671.50"></text></g><g><title>core::core_arch::simd::i64x2::new (17 samples, 0.01%)</title><rect x="62.7060%" y="645" width="0.0146%" height="15" fill="rgb(209,90,7)" fg:x="73070" fg:w="17"/><text x="62.9560%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (100 samples, 0.09%)</title><rect x="63.7366%" y="693" width="0.0858%" height="15" fill="rgb(250,194,11)" fg:x="74271" fg:w="100"/><text x="63.9866%" y="703.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (1,549 samples, 1.33%)</title><rect x="64.0584%" y="533" width="1.3293%" height="15" fill="rgb(220,72,50)" fg:x="74646" fg:w="1549"/><text x="64.3084%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,859 samples, 1.60%)</title><rect x="63.8396%" y="629" width="1.5953%" height="15" fill="rgb(222,106,48)" fg:x="74391" fg:w="1859"/><text x="64.0896%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,859 samples, 1.60%)</title><rect x="63.8396%" y="613" width="1.5953%" height="15" fill="rgb(216,220,45)" fg:x="74391" fg:w="1859"/><text x="64.0896%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1,853 samples, 1.59%)</title><rect x="63.8447%" y="597" width="1.5902%" height="15" fill="rgb(234,112,18)" fg:x="74397" fg:w="1853"/><text x="64.0947%" y="607.50"></text></g><g><title>__rg_alloc (1,853 samples, 1.59%)</title><rect x="63.8447%" y="581" width="1.5902%" height="15" fill="rgb(206,179,9)" fg:x="74397" fg:w="1853"/><text x="64.0947%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,853 samples, 1.59%)</title><rect x="63.8447%" y="565" width="1.5902%" height="15" fill="rgb(215,115,40)" fg:x="74397" fg:w="1853"/><text x="64.0947%" y="575.50"></text></g><g><title>sn_rust_alloc (1,850 samples, 1.59%)</title><rect x="63.8473%" y="549" width="1.5876%" height="15" fill="rgb(222,69,34)" fg:x="74400" fg:w="1850"/><text x="64.0973%" y="559.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (55 samples, 0.05%)</title><rect x="65.3877%" y="533" width="0.0472%" height="15" fill="rgb(209,161,10)" fg:x="76195" fg:w="55"/><text x="65.6377%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,877 samples, 1.61%)</title><rect x="63.8259%" y="693" width="1.6108%" height="15" fill="rgb(217,6,38)" fg:x="74375" fg:w="1877"/><text x="64.0759%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,877 samples, 1.61%)</title><rect x="63.8259%" y="677" width="1.6108%" height="15" fill="rgb(229,229,48)" fg:x="74375" fg:w="1877"/><text x="64.0759%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,868 samples, 1.60%)</title><rect x="63.8336%" y="661" width="1.6030%" height="15" fill="rgb(225,21,28)" fg:x="74384" fg:w="1868"/><text x="64.0836%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,868 samples, 1.60%)</title><rect x="63.8336%" y="645" width="1.6030%" height="15" fill="rgb(206,33,13)" fg:x="74384" fg:w="1868"/><text x="64.0836%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(simd_json::stage2::StackState,usize,usize)&gt;&gt; (149 samples, 0.13%)</title><rect x="65.4366%" y="693" width="0.1279%" height="15" fill="rgb(242,178,17)" fg:x="76252" fg:w="149"/><text x="65.6866%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(simd_json::stage2::StackState,usize,usize)&gt;&gt; (149 samples, 0.13%)</title><rect x="65.4366%" y="677" width="0.1279%" height="15" fill="rgb(220,162,5)" fg:x="76252" fg:w="149"/><text x="65.6866%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (149 samples, 0.13%)</title><rect x="65.4366%" y="661" width="0.1279%" height="15" fill="rgb(210,33,43)" fg:x="76252" fg:w="149"/><text x="65.6866%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (142 samples, 0.12%)</title><rect x="65.4426%" y="645" width="0.1219%" height="15" fill="rgb(216,116,54)" fg:x="76259" fg:w="142"/><text x="65.6926%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (142 samples, 0.12%)</title><rect x="65.4426%" y="629" width="0.1219%" height="15" fill="rgb(249,92,24)" fg:x="76259" fg:w="142"/><text x="65.6926%" y="639.50"></text></g><g><title>__rg_dealloc (142 samples, 0.12%)</title><rect x="65.4426%" y="613" width="0.1219%" height="15" fill="rgb(231,189,14)" fg:x="76259" fg:w="142"/><text x="65.6926%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (142 samples, 0.12%)</title><rect x="65.4426%" y="597" width="0.1219%" height="15" fill="rgb(230,8,41)" fg:x="76259" fg:w="142"/><text x="65.6926%" y="607.50"></text></g><g><title>sn_rust_dealloc (129 samples, 0.11%)</title><rect x="65.4538%" y="581" width="0.1107%" height="15" fill="rgb(249,7,27)" fg:x="76272" fg:w="129"/><text x="65.7038%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (811 samples, 0.70%)</title><rect x="65.5645%" y="693" width="0.6960%" height="15" fill="rgb(232,86,5)" fg:x="76401" fg:w="811"/><text x="65.8145%" y="703.50"></text></g><g><title>core::ptr::write (811 samples, 0.70%)</title><rect x="65.5645%" y="677" width="0.6960%" height="15" fill="rgb(224,175,18)" fg:x="76401" fg:w="811"/><text x="65.8145%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (274 samples, 0.24%)</title><rect x="66.5033%" y="677" width="0.2351%" height="15" fill="rgb(220,129,12)" fg:x="77495" fg:w="274"/><text x="66.7533%" y="687.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (129 samples, 0.11%)</title><rect x="66.7385%" y="677" width="0.1107%" height="15" fill="rgb(210,19,36)" fg:x="77769" fg:w="129"/><text x="66.9885%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (129 samples, 0.11%)</title><rect x="66.7385%" y="661" width="0.1107%" height="15" fill="rgb(219,96,14)" fg:x="77769" fg:w="129"/><text x="66.9885%" y="671.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (130 samples, 0.11%)</title><rect x="66.8492%" y="677" width="0.1116%" height="15" fill="rgb(249,106,1)" fg:x="77898" fg:w="130"/><text x="67.0992%" y="687.50"></text></g><g><title>simd_json::avx2::deser::&lt;impl simd_json::Deserializer&gt;::parse_str_ (905 samples, 0.78%)</title><rect x="66.2682%" y="693" width="0.7766%" height="15" fill="rgb(249,155,20)" fg:x="77221" fg:w="905"/><text x="66.5182%" y="703.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (98 samples, 0.08%)</title><rect x="66.9607%" y="677" width="0.0841%" height="15" fill="rgb(244,168,9)" fg:x="78028" fg:w="98"/><text x="67.2107%" y="687.50"></text></g><g><title>simd_json::numberparse::is_integer (34 samples, 0.03%)</title><rect x="67.4490%" y="677" width="0.0292%" height="15" fill="rgb(216,23,50)" fg:x="78597" fg:w="34"/><text x="67.6990%" y="687.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (34 samples, 0.03%)</title><rect x="67.4490%" y="661" width="0.0292%" height="15" fill="rgb(224,219,20)" fg:x="78597" fg:w="34"/><text x="67.6990%" y="671.50"></text></g><g><title>core::ops::range::RangeBounds::contains (34 samples, 0.03%)</title><rect x="67.4490%" y="645" width="0.0292%" height="15" fill="rgb(222,156,15)" fg:x="78597" fg:w="34"/><text x="67.6990%" y="655.50"></text></g><g><title>simd_json::numberparse::&lt;impl simd_json::Deserializer&gt;::parse_number_int (508 samples, 0.44%)</title><rect x="67.0448%" y="693" width="0.4359%" height="15" fill="rgb(231,97,17)" fg:x="78126" fg:w="508"/><text x="67.2948%" y="703.50"></text></g><g><title>simd_json::stage2::is_valid_false_atom (13 samples, 0.01%)</title><rect x="67.4808%" y="693" width="0.0112%" height="15" fill="rgb(218,70,48)" fg:x="78634" fg:w="13"/><text x="67.7308%" y="703.50"></text></g><g><title>simd_json::stage2::&lt;impl simd_json::Deserializer&gt;::build_tape (5,575 samples, 4.78%)</title><rect x="62.7205%" y="709" width="4.7843%" height="15" fill="rgb(212,196,52)" fg:x="73087" fg:w="5575"/><text x="62.9705%" y="719.50">simd_j..</text></g><g><title>simd_json::stage2::is_valid_true_atom (15 samples, 0.01%)</title><rect x="67.4919%" y="693" width="0.0129%" height="15" fill="rgb(243,203,18)" fg:x="78647" fg:w="15"/><text x="67.7419%" y="703.50"></text></g><g><title>sn_rust_dealloc (68 samples, 0.06%)</title><rect x="67.5048%" y="709" width="0.0584%" height="15" fill="rgb(252,125,41)" fg:x="78662" fg:w="68"/><text x="67.7548%" y="719.50"></text></g><g><title>simd_json::Deserializer::from_slice_with_buffers (10,459 samples, 8.98%)</title><rect x="58.5919%" y="725" width="8.9755%" height="15" fill="rgb(223,180,33)" fg:x="68276" fg:w="10459"/><text x="58.8419%" y="735.50">simd_json::De..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (36 samples, 0.03%)</title><rect x="68.4067%" y="645" width="0.0309%" height="15" fill="rgb(254,159,46)" fg:x="79713" fg:w="36"/><text x="68.6567%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (36 samples, 0.03%)</title><rect x="68.4067%" y="629" width="0.0309%" height="15" fill="rgb(254,38,10)" fg:x="79713" fg:w="36"/><text x="68.6567%" y="639.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::insert_nocheck (1,903 samples, 1.63%)</title><rect x="67.5675%" y="693" width="1.6331%" height="15" fill="rgb(208,217,32)" fg:x="78735" fg:w="1903"/><text x="67.8175%" y="703.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::insert_nocheck (1,845 samples, 1.58%)</title><rect x="67.6172%" y="677" width="1.5833%" height="15" fill="rgb(221,120,13)" fg:x="78793" fg:w="1845"/><text x="67.8672%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (925 samples, 0.79%)</title><rect x="68.4067%" y="661" width="0.7938%" height="15" fill="rgb(246,54,52)" fg:x="79713" fg:w="925"/><text x="68.6567%" y="671.50"></text></g><g><title>core::ptr::write (889 samples, 0.76%)</title><rect x="68.4376%" y="645" width="0.7629%" height="15" fill="rgb(242,34,25)" fg:x="79749" fg:w="889"/><text x="68.6876%" y="655.50"></text></g><g><title>simd_json::Deserializer::next_ (135 samples, 0.12%)</title><rect x="69.2486%" y="677" width="0.1159%" height="15" fill="rgb(247,209,9)" fg:x="80694" fg:w="135"/><text x="69.4986%" y="687.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (144 samples, 0.12%)</title><rect x="69.5241%" y="501" width="0.1236%" height="15" fill="rgb(228,71,26)" fg:x="81015" fg:w="144"/><text x="69.7741%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (208 samples, 0.18%)</title><rect x="69.4769%" y="597" width="0.1785%" height="15" fill="rgb(222,145,49)" fg:x="80960" fg:w="208"/><text x="69.7269%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (208 samples, 0.18%)</title><rect x="69.4769%" y="581" width="0.1785%" height="15" fill="rgb(218,121,17)" fg:x="80960" fg:w="208"/><text x="69.7269%" y="591.50"></text></g><g><title>alloc::alloc::alloc (202 samples, 0.17%)</title><rect x="69.4820%" y="565" width="0.1733%" height="15" fill="rgb(244,50,7)" fg:x="80966" fg:w="202"/><text x="69.7320%" y="575.50"></text></g><g><title>__rg_alloc (202 samples, 0.17%)</title><rect x="69.4820%" y="549" width="0.1733%" height="15" fill="rgb(246,229,37)" fg:x="80966" fg:w="202"/><text x="69.7320%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (202 samples, 0.17%)</title><rect x="69.4820%" y="533" width="0.1733%" height="15" fill="rgb(225,18,5)" fg:x="80966" fg:w="202"/><text x="69.7320%" y="543.50"></text></g><g><title>sn_rust_alloc (202 samples, 0.17%)</title><rect x="69.4820%" y="517" width="0.1733%" height="15" fill="rgb(213,204,8)" fg:x="80966" fg:w="202"/><text x="69.7320%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (223 samples, 0.19%)</title><rect x="69.4674%" y="661" width="0.1914%" height="15" fill="rgb(238,103,6)" fg:x="80949" fg:w="223"/><text x="69.7174%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (223 samples, 0.19%)</title><rect x="69.4674%" y="645" width="0.1914%" height="15" fill="rgb(222,25,35)" fg:x="80949" fg:w="223"/><text x="69.7174%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (216 samples, 0.19%)</title><rect x="69.4734%" y="629" width="0.1854%" height="15" fill="rgb(213,203,35)" fg:x="80956" fg:w="216"/><text x="69.7234%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (216 samples, 0.19%)</title><rect x="69.4734%" y="613" width="0.1854%" height="15" fill="rgb(221,79,53)" fg:x="80956" fg:w="216"/><text x="69.7234%" y="623.50"></text></g><g><title>core::ptr::write (1,349 samples, 1.16%)</title><rect x="69.6588%" y="661" width="1.1577%" height="15" fill="rgb(243,200,35)" fg:x="81172" fg:w="1349"/><text x="69.9088%" y="671.50"></text></g><g><title>simd_json::Deserializer::next_ (213 samples, 0.18%)</title><rect x="70.8988%" y="645" width="0.1828%" height="15" fill="rgb(248,60,25)" fg:x="82617" fg:w="213"/><text x="71.1488%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (45 samples, 0.04%)</title><rect x="71.0430%" y="629" width="0.0386%" height="15" fill="rgb(227,53,46)" fg:x="82785" fg:w="45"/><text x="71.2930%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (45 samples, 0.04%)</title><rect x="71.0430%" y="613" width="0.0386%" height="15" fill="rgb(216,120,32)" fg:x="82785" fg:w="45"/><text x="71.2930%" y="623.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse_array (2,015 samples, 1.73%)</title><rect x="69.3644%" y="677" width="1.7292%" height="15" fill="rgb(220,134,1)" fg:x="80829" fg:w="2015"/><text x="69.6144%" y="687.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse (323 samples, 0.28%)</title><rect x="70.8165%" y="661" width="0.2772%" height="15" fill="rgb(237,168,5)" fg:x="82521" fg:w="323"/><text x="71.0665%" y="671.50"></text></g><g><title>tremor_value::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for tremor_value::value::Value&gt;::from (14 samples, 0.01%)</title><rect x="71.0816%" y="645" width="0.0120%" height="15" fill="rgb(231,100,33)" fg:x="82830" fg:w="14"/><text x="71.3316%" y="655.50"></text></g><g><title>tremor_value::value::Value::String (14 samples, 0.01%)</title><rect x="71.0816%" y="629" width="0.0120%" height="15" fill="rgb(236,177,47)" fg:x="82830" fg:w="14"/><text x="71.3316%" y="639.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (14,602 samples, 12.53%)</title><rect x="58.5902%" y="885" width="12.5309%" height="15" fill="rgb(235,7,49)" fg:x="68274" fg:w="14602"/><text x="58.8402%" y="895.50">tremor_runtime::con..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,602 samples, 12.53%)</title><rect x="58.5902%" y="869" width="12.5309%" height="15" fill="rgb(232,119,22)" fg:x="68274" fg:w="14602"/><text x="58.8402%" y="879.50">&lt;core::future::from..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (14,602 samples, 12.53%)</title><rect x="58.5902%" y="853" width="12.5309%" height="15" fill="rgb(254,73,53)" fg:x="68274" fg:w="14602"/><text x="58.8402%" y="863.50">tremor_runtime::con..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,602 samples, 12.53%)</title><rect x="58.5902%" y="837" width="12.5309%" height="15" fill="rgb(251,35,20)" fg:x="68274" fg:w="14602"/><text x="58.8402%" y="847.50">&lt;core::future::from..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (14,602 samples, 12.53%)</title><rect x="58.5902%" y="821" width="12.5309%" height="15" fill="rgb(241,119,20)" fg:x="68274" fg:w="14602"/><text x="58.8402%" y="831.50">tremor_runtime::con..</text></g><g><title>tremor_runtime::connectors::source::build_events (14,601 samples, 12.53%)</title><rect x="58.5911%" y="805" width="12.5300%" height="15" fill="rgb(207,102,14)" fg:x="68275" fg:w="14601"/><text x="58.8411%" y="815.50">tremor_runtime::con..</text></g><g><title>tremor_script::srs::EventPayload::try_new (14,600 samples, 12.53%)</title><rect x="58.5919%" y="789" width="12.5292%" height="15" fill="rgb(248,201,50)" fg:x="68276" fg:w="14600"/><text x="58.8419%" y="799.50">tremor_script::srs:..</text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (14,600 samples, 12.53%)</title><rect x="58.5919%" y="773" width="12.5292%" height="15" fill="rgb(222,185,44)" fg:x="68276" fg:w="14600"/><text x="58.8419%" y="783.50">tremor_runtime::con..</text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::decode (14,600 samples, 12.53%)</title><rect x="58.5919%" y="757" width="12.5292%" height="15" fill="rgb(218,107,18)" fg:x="68276" fg:w="14600"/><text x="58.8419%" y="767.50">&lt;tremor_runtime::co..</text></g><g><title>tremor_value::value::parse_to_value_with_buffers (14,600 samples, 12.53%)</title><rect x="58.5919%" y="741" width="12.5292%" height="15" fill="rgb(237,177,39)" fg:x="68276" fg:w="14600"/><text x="58.8419%" y="751.50">tremor_value::value..</text></g><g><title>tremor_value::value::ValueDeserializer::parse (4,141 samples, 3.55%)</title><rect x="67.5675%" y="725" width="3.5537%" height="15" fill="rgb(246,69,6)" fg:x="78735" fg:w="4141"/><text x="67.8175%" y="735.50">trem..</text></g><g><title>tremor_value::value::ValueDeserializer::parse_map (4,141 samples, 3.55%)</title><rect x="67.5675%" y="709" width="3.5537%" height="15" fill="rgb(234,208,37)" fg:x="78735" fg:w="4141"/><text x="67.8175%" y="719.50">trem..</text></g><g><title>tremor_value::value::ValueDeserializer::parse (2,234 samples, 1.92%)</title><rect x="69.2040%" y="693" width="1.9171%" height="15" fill="rgb(225,4,6)" fg:x="80642" fg:w="2234"/><text x="69.4540%" y="703.50">t..</text></g><g><title>tremor_value::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for tremor_value::value::Value&gt;::from (32 samples, 0.03%)</title><rect x="71.0936%" y="677" width="0.0275%" height="15" fill="rgb(233,45,0)" fg:x="82844" fg:w="32"/><text x="71.3436%" y="687.50"></text></g><g><title>tremor_value::value::Value::String (32 samples, 0.03%)</title><rect x="71.0936%" y="661" width="0.0275%" height="15" fill="rgb(226,136,5)" fg:x="82844" fg:w="32"/><text x="71.3436%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (33 samples, 0.03%)</title><rect x="71.1263%" y="885" width="0.0283%" height="15" fill="rgb(211,91,47)" fg:x="82882" fg:w="33"/><text x="71.3763%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (85 samples, 0.07%)</title><rect x="71.2121%" y="725" width="0.0729%" height="15" fill="rgb(242,88,51)" fg:x="82982" fg:w="85"/><text x="71.4621%" y="735.50"></text></g><g><title>core::mem::replace (85 samples, 0.07%)</title><rect x="71.2121%" y="709" width="0.0729%" height="15" fill="rgb(230,91,28)" fg:x="82982" fg:w="85"/><text x="71.4621%" y="719.50"></text></g><g><title>core::ptr::read (85 samples, 0.07%)</title><rect x="71.2121%" y="693" width="0.0729%" height="15" fill="rgb(254,186,29)" fg:x="82982" fg:w="85"/><text x="71.4621%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (136 samples, 0.12%)</title><rect x="71.1872%" y="741" width="0.1167%" height="15" fill="rgb(238,6,4)" fg:x="82953" fg:w="136"/><text x="71.4372%" y="751.50"></text></g><g><title>core::mem::drop (22 samples, 0.02%)</title><rect x="71.2850%" y="725" width="0.0189%" height="15" fill="rgb(221,151,16)" fg:x="83067" fg:w="22"/><text x="71.5350%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (22 samples, 0.02%)</title><rect x="71.2850%" y="709" width="0.0189%" height="15" fill="rgb(251,143,52)" fg:x="83067" fg:w="22"/><text x="71.5350%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (138 samples, 0.12%)</title><rect x="71.3039%" y="741" width="0.1184%" height="15" fill="rgb(206,90,15)" fg:x="83089" fg:w="138"/><text x="71.5539%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (130 samples, 0.11%)</title><rect x="71.3108%" y="725" width="0.1116%" height="15" fill="rgb(218,35,8)" fg:x="83097" fg:w="130"/><text x="71.5608%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (130 samples, 0.11%)</title><rect x="71.3108%" y="709" width="0.1116%" height="15" fill="rgb(239,215,6)" fg:x="83097" fg:w="130"/><text x="71.5608%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (118 samples, 0.10%)</title><rect x="71.3211%" y="693" width="0.1013%" height="15" fill="rgb(245,116,39)" fg:x="83109" fg:w="118"/><text x="71.5711%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (118 samples, 0.10%)</title><rect x="71.3211%" y="677" width="0.1013%" height="15" fill="rgb(242,65,28)" fg:x="83109" fg:w="118"/><text x="71.5711%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (118 samples, 0.10%)</title><rect x="71.3211%" y="661" width="0.1013%" height="15" fill="rgb(252,132,53)" fg:x="83109" fg:w="118"/><text x="71.5711%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_swap (118 samples, 0.10%)</title><rect x="71.3211%" y="645" width="0.1013%" height="15" fill="rgb(224,159,50)" fg:x="83109" fg:w="118"/><text x="71.5711%" y="655.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="71.4395%" y="709" width="0.0112%" height="15" fill="rgb(224,93,4)" fg:x="83247" fg:w="13"/><text x="71.6895%" y="719.50"></text></g><g><title>std::sync::poison::Flag::borrow (13 samples, 0.01%)</title><rect x="71.4395%" y="693" width="0.0112%" height="15" fill="rgb(208,81,34)" fg:x="83247" fg:w="13"/><text x="71.6895%" y="703.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (488 samples, 0.42%)</title><rect x="71.1692%" y="869" width="0.4188%" height="15" fill="rgb(233,92,54)" fg:x="82932" fg:w="488"/><text x="71.4192%" y="879.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (488 samples, 0.42%)</title><rect x="71.1692%" y="853" width="0.4188%" height="15" fill="rgb(237,21,14)" fg:x="82932" fg:w="488"/><text x="71.4192%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (488 samples, 0.42%)</title><rect x="71.1692%" y="837" width="0.4188%" height="15" fill="rgb(249,128,51)" fg:x="82932" fg:w="488"/><text x="71.4192%" y="847.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (488 samples, 0.42%)</title><rect x="71.1692%" y="821" width="0.4188%" height="15" fill="rgb(223,129,24)" fg:x="82932" fg:w="488"/><text x="71.4192%" y="831.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (488 samples, 0.42%)</title><rect x="71.1692%" y="805" width="0.4188%" height="15" fill="rgb(231,168,25)" fg:x="82932" fg:w="488"/><text x="71.4192%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (488 samples, 0.42%)</title><rect x="71.1692%" y="789" width="0.4188%" height="15" fill="rgb(224,39,20)" fg:x="82932" fg:w="488"/><text x="71.4192%" y="799.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (488 samples, 0.42%)</title><rect x="71.1692%" y="773" width="0.4188%" height="15" fill="rgb(225,152,53)" fg:x="82932" fg:w="488"/><text x="71.4192%" y="783.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (488 samples, 0.42%)</title><rect x="71.1692%" y="757" width="0.4188%" height="15" fill="rgb(252,17,24)" fg:x="82932" fg:w="488"/><text x="71.4192%" y="767.50"></text></g><g><title>event_listener::Inner::lock (179 samples, 0.15%)</title><rect x="71.4343%" y="741" width="0.1536%" height="15" fill="rgb(250,114,30)" fg:x="83241" fg:w="179"/><text x="71.6843%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (173 samples, 0.15%)</title><rect x="71.4395%" y="725" width="0.1485%" height="15" fill="rgb(229,5,4)" fg:x="83247" fg:w="173"/><text x="71.6895%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (160 samples, 0.14%)</title><rect x="71.4506%" y="709" width="0.1373%" height="15" fill="rgb(225,176,49)" fg:x="83260" fg:w="160"/><text x="71.7006%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (160 samples, 0.14%)</title><rect x="71.4506%" y="693" width="0.1373%" height="15" fill="rgb(224,221,49)" fg:x="83260" fg:w="160"/><text x="71.7006%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (160 samples, 0.14%)</title><rect x="71.4506%" y="677" width="0.1373%" height="15" fill="rgb(253,169,27)" fg:x="83260" fg:w="160"/><text x="71.7006%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (160 samples, 0.14%)</title><rect x="71.4506%" y="661" width="0.1373%" height="15" fill="rgb(211,206,16)" fg:x="83260" fg:w="160"/><text x="71.7006%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="71.7888%" y="485" width="0.0103%" height="15" fill="rgb(244,87,35)" fg:x="83654" fg:w="12"/><text x="72.0388%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="71.7888%" y="469" width="0.0103%" height="15" fill="rgb(246,28,10)" fg:x="83654" fg:w="12"/><text x="72.0388%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="71.7888%" y="453" width="0.0103%" height="15" fill="rgb(229,12,44)" fg:x="83654" fg:w="12"/><text x="72.0388%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="71.7888%" y="437" width="0.0103%" height="15" fill="rgb(210,145,37)" fg:x="83654" fg:w="12"/><text x="72.0388%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="71.7888%" y="421" width="0.0103%" height="15" fill="rgb(227,112,52)" fg:x="83654" fg:w="12"/><text x="72.0388%" y="431.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (17 samples, 0.01%)</title><rect x="71.7870%" y="597" width="0.0146%" height="15" fill="rgb(238,155,34)" fg:x="83652" fg:w="17"/><text x="72.0370%" y="607.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (15 samples, 0.01%)</title><rect x="71.7888%" y="581" width="0.0129%" height="15" fill="rgb(239,226,36)" fg:x="83654" fg:w="15"/><text x="72.0388%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (15 samples, 0.01%)</title><rect x="71.7888%" y="565" width="0.0129%" height="15" fill="rgb(230,16,23)" fg:x="83654" fg:w="15"/><text x="72.0388%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 0.01%)</title><rect x="71.7888%" y="549" width="0.0129%" height="15" fill="rgb(236,171,36)" fg:x="83654" fg:w="15"/><text x="72.0388%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.01%)</title><rect x="71.7888%" y="533" width="0.0129%" height="15" fill="rgb(221,22,14)" fg:x="83654" fg:w="15"/><text x="72.0388%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.01%)</title><rect x="71.7888%" y="517" width="0.0129%" height="15" fill="rgb(242,43,11)" fg:x="83654" fg:w="15"/><text x="72.0388%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.01%)</title><rect x="71.7888%" y="501" width="0.0129%" height="15" fill="rgb(232,69,23)" fg:x="83654" fg:w="15"/><text x="72.0388%" y="511.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (27 samples, 0.02%)</title><rect x="71.7793%" y="645" width="0.0232%" height="15" fill="rgb(216,180,54)" fg:x="83643" fg:w="27"/><text x="72.0293%" y="655.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (21 samples, 0.02%)</title><rect x="71.7845%" y="629" width="0.0180%" height="15" fill="rgb(216,5,24)" fg:x="83649" fg:w="21"/><text x="72.0345%" y="639.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="71.7845%" y="613" width="0.0180%" height="15" fill="rgb(225,89,9)" fg:x="83649" fg:w="21"/><text x="72.0345%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (59 samples, 0.05%)</title><rect x="71.8033%" y="645" width="0.0506%" height="15" fill="rgb(243,75,33)" fg:x="83671" fg:w="59"/><text x="72.0533%" y="655.50"></text></g><g><title>sn_rust_dealloc (31 samples, 0.03%)</title><rect x="71.9072%" y="565" width="0.0266%" height="15" fill="rgb(247,141,45)" fg:x="83792" fg:w="31"/><text x="72.1572%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (56 samples, 0.05%)</title><rect x="71.8960%" y="613" width="0.0481%" height="15" fill="rgb(232,177,36)" fg:x="83779" fg:w="56"/><text x="72.1460%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (54 samples, 0.05%)</title><rect x="71.8977%" y="597" width="0.0463%" height="15" fill="rgb(219,125,36)" fg:x="83781" fg:w="54"/><text x="72.1477%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (48 samples, 0.04%)</title><rect x="71.9029%" y="581" width="0.0412%" height="15" fill="rgb(227,94,9)" fg:x="83787" fg:w="48"/><text x="72.1529%" y="591.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (12 samples, 0.01%)</title><rect x="71.9338%" y="565" width="0.0103%" height="15" fill="rgb(240,34,52)" fg:x="83823" fg:w="12"/><text x="72.1838%" y="575.50"></text></g><g><title>sn_rust_dealloc (23 samples, 0.02%)</title><rect x="71.9441%" y="613" width="0.0197%" height="15" fill="rgb(216,45,12)" fg:x="83835" fg:w="23"/><text x="72.1941%" y="623.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry_mut (20 samples, 0.02%)</title><rect x="71.9664%" y="581" width="0.0172%" height="15" fill="rgb(246,21,19)" fg:x="83861" fg:w="20"/><text x="72.2164%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.02%)</title><rect x="71.9964%" y="469" width="0.0154%" height="15" fill="rgb(213,98,42)" fg:x="83896" fg:w="18"/><text x="72.2464%" y="479.50"></text></g><g><title>sn_rust_alloc (18 samples, 0.02%)</title><rect x="71.9964%" y="453" width="0.0154%" height="15" fill="rgb(250,136,47)" fg:x="83896" fg:w="18"/><text x="72.2464%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (20 samples, 0.02%)</title><rect x="71.9956%" y="501" width="0.0172%" height="15" fill="rgb(251,124,27)" fg:x="83895" fg:w="20"/><text x="72.2456%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.02%)</title><rect x="71.9956%" y="485" width="0.0172%" height="15" fill="rgb(229,180,14)" fg:x="83895" fg:w="20"/><text x="72.2456%" y="495.50"></text></g><g><title>halfbrown::raw_entry::RawVacantEntryMut&lt;K,V,S&gt;::insert (58 samples, 0.05%)</title><rect x="71.9870%" y="565" width="0.0498%" height="15" fill="rgb(245,216,25)" fg:x="83885" fg:w="58"/><text x="72.2370%" y="575.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawVacantEntryMut&lt;K,V,S&gt;::insert (57 samples, 0.05%)</title><rect x="71.9878%" y="549" width="0.0489%" height="15" fill="rgb(251,43,5)" fg:x="83886" fg:w="57"/><text x="72.2378%" y="559.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::insert_idx (55 samples, 0.05%)</title><rect x="71.9896%" y="533" width="0.0472%" height="15" fill="rgb(250,128,24)" fg:x="83888" fg:w="55"/><text x="72.2396%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (51 samples, 0.04%)</title><rect x="71.9930%" y="517" width="0.0438%" height="15" fill="rgb(217,117,27)" fg:x="83892" fg:w="51"/><text x="72.2430%" y="527.50"></text></g><g><title>core::ptr::write (28 samples, 0.02%)</title><rect x="72.0127%" y="501" width="0.0240%" height="15" fill="rgb(245,147,4)" fg:x="83915" fg:w="28"/><text x="72.2627%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (50 samples, 0.04%)</title><rect x="72.0393%" y="517" width="0.0429%" height="15" fill="rgb(242,201,35)" fg:x="83946" fg:w="50"/><text x="72.2893%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.01%)</title><rect x="72.0677%" y="501" width="0.0146%" height="15" fill="rgb(218,181,1)" fg:x="83979" fg:w="17"/><text x="72.3177%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.01%)</title><rect x="72.0677%" y="485" width="0.0146%" height="15" fill="rgb(222,6,29)" fg:x="83979" fg:w="17"/><text x="72.3177%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.01%)</title><rect x="72.0677%" y="469" width="0.0146%" height="15" fill="rgb(208,186,3)" fg:x="83979" fg:w="17"/><text x="72.3177%" y="479.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="72.0694%" y="453" width="0.0129%" height="15" fill="rgb(216,36,26)" fg:x="83981" fg:w="15"/><text x="72.3194%" y="463.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="72.0694%" y="437" width="0.0129%" height="15" fill="rgb(248,201,23)" fg:x="83981" fg:w="15"/><text x="72.3194%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="72.0694%" y="421" width="0.0129%" height="15" fill="rgb(251,170,31)" fg:x="83981" fg:w="15"/><text x="72.3194%" y="431.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (95 samples, 0.08%)</title><rect x="72.0986%" y="325" width="0.0815%" height="15" fill="rgb(207,110,25)" fg:x="84015" fg:w="95"/><text x="72.3486%" y="335.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign (386 samples, 0.33%)</title><rect x="71.8540%" y="645" width="0.3313%" height="15" fill="rgb(250,54,15)" fg:x="83730" fg:w="386"/><text x="72.1040%" y="655.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign_nested (363 samples, 0.31%)</title><rect x="71.8737%" y="629" width="0.3115%" height="15" fill="rgb(227,68,33)" fg:x="83753" fg:w="363"/><text x="72.1237%" y="639.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup_or_insert_mut (257 samples, 0.22%)</title><rect x="71.9647%" y="613" width="0.2205%" height="15" fill="rgb(238,34,41)" fg:x="83859" fg:w="257"/><text x="72.2147%" y="623.50"></text></g><g><title>tremor_value::known_key::KnownKey::map_lookup_or_insert_mut (256 samples, 0.22%)</title><rect x="71.9655%" y="597" width="0.2197%" height="15" fill="rgb(220,11,15)" fg:x="83860" fg:w="256"/><text x="72.2155%" y="607.50"></text></g><g><title>halfbrown::raw_entry::RawEntryMut&lt;K,V,S&gt;::or_insert_with (231 samples, 0.20%)</title><rect x="71.9870%" y="581" width="0.1982%" height="15" fill="rgb(246,111,35)" fg:x="83885" fg:w="231"/><text x="72.2370%" y="591.50"></text></g><g><title>tremor_value::known_key::KnownKey::map_lookup_or_insert_mut::{{closure}} (173 samples, 0.15%)</title><rect x="72.0368%" y="565" width="0.1485%" height="15" fill="rgb(209,88,53)" fg:x="83943" fg:w="173"/><text x="72.2868%" y="575.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign_nested::{{closure}} (170 samples, 0.15%)</title><rect x="72.0393%" y="549" width="0.1459%" height="15" fill="rgb(231,185,47)" fg:x="83946" fg:w="170"/><text x="72.2893%" y="559.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (170 samples, 0.15%)</title><rect x="72.0393%" y="533" width="0.1459%" height="15" fill="rgb(233,154,1)" fg:x="83946" fg:w="170"/><text x="72.2893%" y="543.50"></text></g><g><title>halfbrown::HashMap&lt;K,V&gt;::with_capacity (120 samples, 0.10%)</title><rect x="72.0822%" y="517" width="0.1030%" height="15" fill="rgb(225,15,46)" fg:x="83996" fg:w="120"/><text x="72.3322%" y="527.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V&gt;::with_capacity (119 samples, 0.10%)</title><rect x="72.0831%" y="501" width="0.1021%" height="15" fill="rgb(211,135,41)" fg:x="83997" fg:w="119"/><text x="72.3331%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (119 samples, 0.10%)</title><rect x="72.0831%" y="485" width="0.1021%" height="15" fill="rgb(208,54,0)" fg:x="83997" fg:w="119"/><text x="72.3331%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (119 samples, 0.10%)</title><rect x="72.0831%" y="469" width="0.1021%" height="15" fill="rgb(244,136,14)" fg:x="83997" fg:w="119"/><text x="72.3331%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (119 samples, 0.10%)</title><rect x="72.0831%" y="453" width="0.1021%" height="15" fill="rgb(241,56,14)" fg:x="83997" fg:w="119"/><text x="72.3331%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (119 samples, 0.10%)</title><rect x="72.0831%" y="437" width="0.1021%" height="15" fill="rgb(205,80,24)" fg:x="83997" fg:w="119"/><text x="72.3331%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (119 samples, 0.10%)</title><rect x="72.0831%" y="421" width="0.1021%" height="15" fill="rgb(220,57,4)" fg:x="83997" fg:w="119"/><text x="72.3331%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (119 samples, 0.10%)</title><rect x="72.0831%" y="405" width="0.1021%" height="15" fill="rgb(226,193,50)" fg:x="83997" fg:w="119"/><text x="72.3331%" y="415.50"></text></g><g><title>alloc::alloc::alloc (119 samples, 0.10%)</title><rect x="72.0831%" y="389" width="0.1021%" height="15" fill="rgb(231,168,22)" fg:x="83997" fg:w="119"/><text x="72.3331%" y="399.50"></text></g><g><title>__rg_alloc (119 samples, 0.10%)</title><rect x="72.0831%" y="373" width="0.1021%" height="15" fill="rgb(254,215,14)" fg:x="83997" fg:w="119"/><text x="72.3331%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (119 samples, 0.10%)</title><rect x="72.0831%" y="357" width="0.1021%" height="15" fill="rgb(211,115,16)" fg:x="83997" fg:w="119"/><text x="72.3331%" y="367.50"></text></g><g><title>sn_rust_alloc (118 samples, 0.10%)</title><rect x="72.0840%" y="341" width="0.1013%" height="15" fill="rgb(236,210,16)" fg:x="83998" fg:w="118"/><text x="72.3340%" y="351.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::execute_effectors (597 samples, 0.51%)</title><rect x="71.6755%" y="677" width="0.5123%" height="15" fill="rgb(221,94,12)" fg:x="83522" fg:w="597"/><text x="71.9255%" y="687.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (550 samples, 0.47%)</title><rect x="71.7158%" y="661" width="0.4720%" height="15" fill="rgb(235,218,49)" fg:x="83569" fg:w="550"/><text x="71.9658%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (22 samples, 0.02%)</title><rect x="72.2324%" y="645" width="0.0189%" height="15" fill="rgb(217,114,14)" fg:x="84171" fg:w="22"/><text x="72.4824%" y="655.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (125 samples, 0.11%)</title><rect x="72.2659%" y="517" width="0.1073%" height="15" fill="rgb(216,145,22)" fg:x="84210" fg:w="125"/><text x="72.5159%" y="527.50"></text></g><g><title>tremor_value::value::cmp::&lt;impl core::cmp::PartialEq for tremor_value::value::Value&gt;::eq (125 samples, 0.11%)</title><rect x="72.2659%" y="501" width="0.1073%" height="15" fill="rgb(217,112,39)" fg:x="84210" fg:w="125"/><text x="72.5159%" y="511.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.01%)</title><rect x="72.3594%" y="485" width="0.0137%" height="15" fill="rgb(225,85,32)" fg:x="84319" fg:w="16"/><text x="72.6094%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (136 samples, 0.12%)</title><rect x="72.2607%" y="597" width="0.1167%" height="15" fill="rgb(245,209,47)" fg:x="84204" fg:w="136"/><text x="72.5107%" y="607.50"></text></g><g><title>tremor_script::std_lib::array::load::&lt;impl tremor_script::registry::TremorFn for tremor_script::std_lib::array::load::contains::Func&gt;::invoke::{{closure}} (136 samples, 0.12%)</title><rect x="72.2607%" y="581" width="0.1167%" height="15" fill="rgb(218,220,15)" fg:x="84204" fg:w="136"/><text x="72.5107%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (133 samples, 0.11%)</title><rect x="72.2633%" y="565" width="0.1141%" height="15" fill="rgb(222,202,31)" fg:x="84207" fg:w="133"/><text x="72.5133%" y="575.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (133 samples, 0.11%)</title><rect x="72.2633%" y="549" width="0.1141%" height="15" fill="rgb(243,203,4)" fg:x="84207" fg:w="133"/><text x="72.5133%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (133 samples, 0.11%)</title><rect x="72.2633%" y="533" width="0.1141%" height="15" fill="rgb(237,92,17)" fg:x="84207" fg:w="133"/><text x="72.5133%" y="543.50"></text></g><g><title>tremor_script::ast::Invocable::invoke (142 samples, 0.12%)</title><rect x="72.2565%" y="645" width="0.1219%" height="15" fill="rgb(231,119,7)" fg:x="84199" fg:w="142"/><text x="72.5065%" y="655.50"></text></g><g><title>tremor_script::registry::TremorFnWrapper::invoke (142 samples, 0.12%)</title><rect x="72.2565%" y="629" width="0.1219%" height="15" fill="rgb(237,82,41)" fg:x="84199" fg:w="142"/><text x="72.5065%" y="639.50"></text></g><g><title>tremor_script::std_lib::array::load::&lt;impl tremor_script::registry::TremorFn for tremor_script::std_lib::array::load::contains::Func&gt;::invoke (139 samples, 0.12%)</title><rect x="72.2590%" y="613" width="0.1193%" height="15" fill="rgb(226,81,48)" fg:x="84202" fg:w="139"/><text x="72.5090%" y="623.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (84 samples, 0.07%)</title><rect x="72.4324%" y="517" width="0.0721%" height="15" fill="rgb(234,70,51)" fg:x="84404" fg:w="84"/><text x="72.6824%" y="527.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (83 samples, 0.07%)</title><rect x="72.4332%" y="501" width="0.0712%" height="15" fill="rgb(251,86,4)" fg:x="84405" fg:w="83"/><text x="72.6832%" y="511.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_hash (83 samples, 0.07%)</title><rect x="72.4332%" y="485" width="0.0712%" height="15" fill="rgb(244,144,28)" fg:x="84405" fg:w="83"/><text x="72.6832%" y="495.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::search (83 samples, 0.07%)</title><rect x="72.4332%" y="469" width="0.0712%" height="15" fill="rgb(232,161,39)" fg:x="84405" fg:w="83"/><text x="72.6832%" y="479.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (81 samples, 0.07%)</title><rect x="72.4350%" y="453" width="0.0695%" height="15" fill="rgb(247,34,51)" fg:x="84407" fg:w="81"/><text x="72.6850%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (76 samples, 0.07%)</title><rect x="72.4392%" y="437" width="0.0652%" height="15" fill="rgb(225,132,2)" fg:x="84412" fg:w="76"/><text x="72.6892%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (76 samples, 0.07%)</title><rect x="72.4392%" y="421" width="0.0652%" height="15" fill="rgb(209,159,44)" fg:x="84412" fg:w="76"/><text x="72.6892%" y="431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (76 samples, 0.07%)</title><rect x="72.4392%" y="405" width="0.0652%" height="15" fill="rgb(251,214,1)" fg:x="84412" fg:w="76"/><text x="72.6892%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (76 samples, 0.07%)</title><rect x="72.4392%" y="389" width="0.0652%" height="15" fill="rgb(247,84,47)" fg:x="84412" fg:w="76"/><text x="72.6892%" y="399.50"></text></g><g><title>[libc-2.31.so] (66 samples, 0.06%)</title><rect x="72.4478%" y="373" width="0.0566%" height="15" fill="rgb(240,111,43)" fg:x="84422" fg:w="66"/><text x="72.6978%" y="383.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (370 samples, 0.32%)</title><rect x="72.1878%" y="677" width="0.3175%" height="15" fill="rgb(215,214,35)" fg:x="84119" fg:w="370"/><text x="72.4378%" y="687.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::invoke2 (349 samples, 0.30%)</title><rect x="72.2058%" y="661" width="0.2995%" height="15" fill="rgb(248,207,23)" fg:x="84140" fg:w="349"/><text x="72.4558%" y="671.50"></text></g><g><title>tremor_script::interpreter::imut_expr::eval_for_fn_arg (148 samples, 0.13%)</title><rect x="72.3783%" y="645" width="0.1270%" height="15" fill="rgb(214,186,4)" fg:x="84341" fg:w="148"/><text x="72.6283%" y="655.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (130 samples, 0.11%)</title><rect x="72.3938%" y="629" width="0.1116%" height="15" fill="rgb(220,133,22)" fg:x="84359" fg:w="130"/><text x="72.6438%" y="639.50"></text></g><g><title>tremor_script::interpreter::resolve (122 samples, 0.10%)</title><rect x="72.4006%" y="613" width="0.1047%" height="15" fill="rgb(239,134,19)" fg:x="84367" fg:w="122"/><text x="72.6506%" y="623.50"></text></g><g><title>tremor_script::interpreter::resolve_value (117 samples, 0.10%)</title><rect x="72.4049%" y="597" width="0.1004%" height="15" fill="rgb(250,140,9)" fg:x="84372" fg:w="117"/><text x="72.6549%" y="607.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup (87 samples, 0.07%)</title><rect x="72.4307%" y="581" width="0.0747%" height="15" fill="rgb(225,59,14)" fg:x="84402" fg:w="87"/><text x="72.6807%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (87 samples, 0.07%)</title><rect x="72.4307%" y="565" width="0.0747%" height="15" fill="rgb(214,152,51)" fg:x="84402" fg:w="87"/><text x="72.6807%" y="575.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup::{{closure}} (87 samples, 0.07%)</title><rect x="72.4307%" y="549" width="0.0747%" height="15" fill="rgb(251,227,43)" fg:x="84402" fg:w="87"/><text x="72.6807%" y="559.50"></text></g><g><title>tremor_value::known_key::KnownKey::map_lookup (87 samples, 0.07%)</title><rect x="72.4307%" y="533" width="0.0747%" height="15" fill="rgb(241,96,17)" fg:x="84402" fg:w="87"/><text x="72.6807%" y="543.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::if_expr (1,039 samples, 0.89%)</title><rect x="71.6480%" y="693" width="0.8916%" height="15" fill="rgb(234,198,43)" fg:x="83490" fg:w="1039"/><text x="71.8980%" y="703.50"></text></g><g><title>tremor_script::interpreter::test_predicate_expr (40 samples, 0.03%)</title><rect x="72.5053%" y="677" width="0.0343%" height="15" fill="rgb(220,108,29)" fg:x="84489" fg:w="40"/><text x="72.7553%" y="687.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (14 samples, 0.01%)</title><rect x="72.7997%" y="677" width="0.0120%" height="15" fill="rgb(226,163,33)" fg:x="84832" fg:w="14"/><text x="73.0497%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (13 samples, 0.01%)</title><rect x="72.8005%" y="661" width="0.0112%" height="15" fill="rgb(205,194,45)" fg:x="84833" fg:w="13"/><text x="73.0505%" y="671.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="72.8005%" y="645" width="0.0112%" height="15" fill="rgb(206,143,44)" fg:x="84833" fg:w="13"/><text x="73.0505%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="72.8211%" y="677" width="0.0275%" height="15" fill="rgb(236,136,36)" fg:x="84857" fg:w="32"/><text x="73.0711%" y="687.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (12 samples, 0.01%)</title><rect x="72.8383%" y="661" width="0.0103%" height="15" fill="rgb(249,172,42)" fg:x="84877" fg:w="12"/><text x="73.0883%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (12 samples, 0.01%)</title><rect x="72.8383%" y="645" width="0.0103%" height="15" fill="rgb(216,139,23)" fg:x="84877" fg:w="12"/><text x="73.0883%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::borrow::Cow&lt;tremor_value::value::Value&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="72.8529%" y="677" width="0.0189%" height="15" fill="rgb(207,166,20)" fg:x="84894" fg:w="22"/><text x="73.1029%" y="687.50"></text></g><g><title>tremor_script::ast::ClauseGroup&lt;Ex&gt;::precondition (54 samples, 0.05%)</title><rect x="72.8718%" y="677" width="0.0463%" height="15" fill="rgb(210,209,22)" fg:x="84916" fg:w="54"/><text x="73.1218%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (54 samples, 0.05%)</title><rect x="72.8718%" y="661" width="0.0463%" height="15" fill="rgb(232,118,20)" fg:x="84916" fg:w="54"/><text x="73.1218%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (45 samples, 0.04%)</title><rect x="74.2680%" y="485" width="0.0386%" height="15" fill="rgb(238,113,42)" fg:x="86543" fg:w="45"/><text x="74.5180%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (45 samples, 0.04%)</title><rect x="74.2680%" y="469" width="0.0386%" height="15" fill="rgb(231,42,5)" fg:x="86543" fg:w="45"/><text x="74.5180%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (45 samples, 0.04%)</title><rect x="74.2680%" y="453" width="0.0386%" height="15" fill="rgb(243,166,24)" fg:x="86543" fg:w="45"/><text x="74.5180%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (45 samples, 0.04%)</title><rect x="74.2680%" y="437" width="0.0386%" height="15" fill="rgb(237,226,12)" fg:x="86543" fg:w="45"/><text x="74.5180%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (45 samples, 0.04%)</title><rect x="74.2680%" y="421" width="0.0386%" height="15" fill="rgb(229,133,24)" fg:x="86543" fg:w="45"/><text x="74.5180%" y="431.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.04%)</title><rect x="74.2697%" y="405" width="0.0369%" height="15" fill="rgb(238,33,43)" fg:x="86545" fg:w="43"/><text x="74.5197%" y="415.50"></text></g><g><title>__rg_alloc (43 samples, 0.04%)</title><rect x="74.2697%" y="389" width="0.0369%" height="15" fill="rgb(227,59,38)" fg:x="86545" fg:w="43"/><text x="74.5197%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (43 samples, 0.04%)</title><rect x="74.2697%" y="373" width="0.0369%" height="15" fill="rgb(230,97,0)" fg:x="86545" fg:w="43"/><text x="74.5197%" y="383.50"></text></g><g><title>sn_rust_alloc (42 samples, 0.04%)</title><rect x="74.2706%" y="357" width="0.0360%" height="15" fill="rgb(250,173,50)" fg:x="86546" fg:w="42"/><text x="74.5206%" y="367.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (61 samples, 0.05%)</title><rect x="74.2680%" y="581" width="0.0523%" height="15" fill="rgb(240,15,50)" fg:x="86543" fg:w="61"/><text x="74.5180%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (61 samples, 0.05%)</title><rect x="74.2680%" y="565" width="0.0523%" height="15" fill="rgb(221,93,22)" fg:x="86543" fg:w="61"/><text x="74.5180%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (61 samples, 0.05%)</title><rect x="74.2680%" y="549" width="0.0523%" height="15" fill="rgb(245,180,53)" fg:x="86543" fg:w="61"/><text x="74.5180%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (61 samples, 0.05%)</title><rect x="74.2680%" y="533" width="0.0523%" height="15" fill="rgb(231,88,51)" fg:x="86543" fg:w="61"/><text x="74.5180%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (61 samples, 0.05%)</title><rect x="74.2680%" y="517" width="0.0523%" height="15" fill="rgb(240,58,21)" fg:x="86543" fg:w="61"/><text x="74.5180%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (61 samples, 0.05%)</title><rect x="74.2680%" y="501" width="0.0523%" height="15" fill="rgb(237,21,10)" fg:x="86543" fg:w="61"/><text x="74.5180%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (16 samples, 0.01%)</title><rect x="74.3066%" y="485" width="0.0137%" height="15" fill="rgb(218,43,11)" fg:x="86588" fg:w="16"/><text x="74.5566%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.01%)</title><rect x="74.3066%" y="469" width="0.0137%" height="15" fill="rgb(218,221,29)" fg:x="86588" fg:w="16"/><text x="74.5566%" y="479.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.01%)</title><rect x="74.3066%" y="453" width="0.0137%" height="15" fill="rgb(214,118,42)" fg:x="86588" fg:w="16"/><text x="74.5566%" y="463.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (134 samples, 0.11%)</title><rect x="74.2079%" y="629" width="0.1150%" height="15" fill="rgb(251,200,26)" fg:x="86473" fg:w="134"/><text x="74.4579%" y="639.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (117 samples, 0.10%)</title><rect x="74.2225%" y="613" width="0.1004%" height="15" fill="rgb(237,101,39)" fg:x="86490" fg:w="117"/><text x="74.4725%" y="623.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (72 samples, 0.06%)</title><rect x="74.2611%" y="597" width="0.0618%" height="15" fill="rgb(251,117,11)" fg:x="86535" fg:w="72"/><text x="74.5111%" y="607.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (199 samples, 0.17%)</title><rect x="74.1659%" y="645" width="0.1708%" height="15" fill="rgb(216,223,23)" fg:x="86424" fg:w="199"/><text x="74.4159%" y="655.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (12 samples, 0.01%)</title><rect x="74.3263%" y="629" width="0.0103%" height="15" fill="rgb(251,54,12)" fg:x="86611" fg:w="12"/><text x="74.5763%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (750 samples, 0.64%)</title><rect x="74.3435%" y="645" width="0.6436%" height="15" fill="rgb(254,176,54)" fg:x="86631" fg:w="750"/><text x="74.5935%" y="655.50"></text></g><g><title>tremor_script::ast::Path::segments (45 samples, 0.04%)</title><rect x="75.1407%" y="629" width="0.0386%" height="15" fill="rgb(210,32,8)" fg:x="87560" fg:w="45"/><text x="75.3907%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (28 samples, 0.02%)</title><rect x="75.3458%" y="613" width="0.0240%" height="15" fill="rgb(235,52,38)" fg:x="87799" fg:w="28"/><text x="75.5958%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (16 samples, 0.01%)</title><rect x="75.3561%" y="597" width="0.0137%" height="15" fill="rgb(231,4,44)" fg:x="87811" fg:w="16"/><text x="75.6061%" y="607.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.01%)</title><rect x="75.4771%" y="581" width="0.0137%" height="15" fill="rgb(249,2,32)" fg:x="87952" fg:w="16"/><text x="75.7271%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="75.4771%" y="565" width="0.0137%" height="15" fill="rgb(224,65,26)" fg:x="87952" fg:w="16"/><text x="75.7271%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="75.4771%" y="549" width="0.0137%" height="15" fill="rgb(250,73,40)" fg:x="87952" fg:w="16"/><text x="75.7271%" y="559.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="75.4771%" y="533" width="0.0137%" height="15" fill="rgb(253,177,16)" fg:x="87952" fg:w="16"/><text x="75.7271%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="75.4771%" y="517" width="0.0137%" height="15" fill="rgb(217,32,34)" fg:x="87952" fg:w="16"/><text x="75.7271%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="75.5295%" y="517" width="0.0232%" height="15" fill="rgb(212,7,10)" fg:x="88013" fg:w="27"/><text x="75.7795%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (27 samples, 0.02%)</title><rect x="75.5295%" y="501" width="0.0232%" height="15" fill="rgb(245,89,8)" fg:x="88013" fg:w="27"/><text x="75.7795%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (96 samples, 0.08%)</title><rect x="75.4909%" y="565" width="0.0824%" height="15" fill="rgb(237,16,53)" fg:x="87968" fg:w="96"/><text x="75.7409%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (51 samples, 0.04%)</title><rect x="75.5295%" y="549" width="0.0438%" height="15" fill="rgb(250,204,30)" fg:x="88013" fg:w="51"/><text x="75.7795%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (51 samples, 0.04%)</title><rect x="75.5295%" y="533" width="0.0438%" height="15" fill="rgb(208,77,27)" fg:x="88013" fg:w="51"/><text x="75.7795%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (24 samples, 0.02%)</title><rect x="75.5527%" y="517" width="0.0206%" height="15" fill="rgb(250,204,28)" fg:x="88040" fg:w="24"/><text x="75.8027%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="75.5527%" y="501" width="0.0206%" height="15" fill="rgb(244,63,21)" fg:x="88040" fg:w="24"/><text x="75.8027%" y="511.50"></text></g><g><title>sn_rust_dealloc (363 samples, 0.31%)</title><rect x="75.5733%" y="565" width="0.3115%" height="15" fill="rgb(236,85,44)" fg:x="88064" fg:w="363"/><text x="75.8233%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (714 samples, 0.61%)</title><rect x="75.3784%" y="613" width="0.6127%" height="15" fill="rgb(215,98,4)" fg:x="87837" fg:w="714"/><text x="75.6284%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (632 samples, 0.54%)</title><rect x="75.4488%" y="597" width="0.5424%" height="15" fill="rgb(235,38,11)" fg:x="87919" fg:w="632"/><text x="75.6988%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (583 samples, 0.50%)</title><rect x="75.4909%" y="581" width="0.5003%" height="15" fill="rgb(254,186,25)" fg:x="87968" fg:w="583"/><text x="75.7409%" y="591.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (124 samples, 0.11%)</title><rect x="75.8848%" y="565" width="0.1064%" height="15" fill="rgb(225,55,31)" fg:x="88427" fg:w="124"/><text x="76.1348%" y="575.50"></text></g><g><title>sn_rust_dealloc (144 samples, 0.12%)</title><rect x="75.9912%" y="613" width="0.1236%" height="15" fill="rgb(211,15,21)" fg:x="88551" fg:w="144"/><text x="76.2412%" y="623.50"></text></g><g><title>tremor_script::ast::Path::segments (15 samples, 0.01%)</title><rect x="76.1199%" y="613" width="0.0129%" height="15" fill="rgb(215,187,41)" fg:x="88701" fg:w="15"/><text x="76.3699%" y="623.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.02%)</title><rect x="76.1456%" y="581" width="0.0172%" height="15" fill="rgb(248,69,32)" fg:x="88731" fg:w="20"/><text x="76.3956%" y="591.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (20 samples, 0.02%)</title><rect x="76.1456%" y="565" width="0.0172%" height="15" fill="rgb(252,102,52)" fg:x="88731" fg:w="20"/><text x="76.3956%" y="575.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry_mut (201 samples, 0.17%)</title><rect x="76.1628%" y="581" width="0.1725%" height="15" fill="rgb(253,140,32)" fg:x="88751" fg:w="201"/><text x="76.4128%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="76.3516%" y="517" width="0.0112%" height="15" fill="rgb(216,56,42)" fg:x="88971" fg:w="13"/><text x="76.6016%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.02%)</title><rect x="76.3628%" y="517" width="0.0223%" height="15" fill="rgb(216,184,14)" fg:x="88984" fg:w="26"/><text x="76.6128%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.02%)</title><rect x="76.3628%" y="501" width="0.0223%" height="15" fill="rgb(237,187,27)" fg:x="88984" fg:w="26"/><text x="76.6128%" y="511.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (73 samples, 0.06%)</title><rect x="76.3353%" y="581" width="0.0626%" height="15" fill="rgb(219,65,3)" fg:x="88952" fg:w="73"/><text x="76.5853%" y="591.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (55 samples, 0.05%)</title><rect x="76.3507%" y="565" width="0.0472%" height="15" fill="rgb(245,83,25)" fg:x="88970" fg:w="55"/><text x="76.6007%" y="575.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (55 samples, 0.05%)</title><rect x="76.3507%" y="549" width="0.0472%" height="15" fill="rgb(214,205,45)" fg:x="88970" fg:w="55"/><text x="76.6007%" y="559.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::search (55 samples, 0.05%)</title><rect x="76.3507%" y="533" width="0.0472%" height="15" fill="rgb(241,20,18)" fg:x="88970" fg:w="55"/><text x="76.6007%" y="543.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (15 samples, 0.01%)</title><rect x="76.3851%" y="517" width="0.0129%" height="15" fill="rgb(232,163,23)" fg:x="89010" fg:w="15"/><text x="76.6351%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (15 samples, 0.01%)</title><rect x="76.3851%" y="501" width="0.0129%" height="15" fill="rgb(214,5,46)" fg:x="89010" fg:w="15"/><text x="76.6351%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (15 samples, 0.01%)</title><rect x="76.3851%" y="485" width="0.0129%" height="15" fill="rgb(229,78,17)" fg:x="89010" fg:w="15"/><text x="76.6351%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (15 samples, 0.01%)</title><rect x="76.3851%" y="469" width="0.0129%" height="15" fill="rgb(248,89,10)" fg:x="89010" fg:w="15"/><text x="76.6351%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (15 samples, 0.01%)</title><rect x="76.3851%" y="453" width="0.0129%" height="15" fill="rgb(248,54,15)" fg:x="89010" fg:w="15"/><text x="76.6351%" y="463.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut_idx (18 samples, 0.02%)</title><rect x="76.4117%" y="533" width="0.0154%" height="15" fill="rgb(223,116,6)" fg:x="89041" fg:w="18"/><text x="76.6617%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (13 samples, 0.01%)</title><rect x="76.4160%" y="517" width="0.0112%" height="15" fill="rgb(205,125,38)" fg:x="89046" fg:w="13"/><text x="76.6660%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.01%)</title><rect x="76.4160%" y="501" width="0.0112%" height="15" fill="rgb(251,78,38)" fg:x="89046" fg:w="13"/><text x="76.6660%" y="511.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (30 samples, 0.03%)</title><rect x="76.6314%" y="437" width="0.0257%" height="15" fill="rgb(253,78,28)" fg:x="89297" fg:w="30"/><text x="76.8814%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (186 samples, 0.16%)</title><rect x="76.5035%" y="469" width="0.1596%" height="15" fill="rgb(209,120,3)" fg:x="89148" fg:w="186"/><text x="76.7535%" y="479.50"></text></g><g><title>sn_rust_alloc (164 samples, 0.14%)</title><rect x="76.5224%" y="453" width="0.1407%" height="15" fill="rgb(238,229,9)" fg:x="89170" fg:w="164"/><text x="76.7724%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (15 samples, 0.01%)</title><rect x="76.6631%" y="469" width="0.0129%" height="15" fill="rgb(253,159,18)" fg:x="89334" fg:w="15"/><text x="76.9131%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (225 samples, 0.19%)</title><rect x="76.4923%" y="501" width="0.1931%" height="15" fill="rgb(244,42,34)" fg:x="89135" fg:w="225"/><text x="76.7423%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (225 samples, 0.19%)</title><rect x="76.4923%" y="485" width="0.1931%" height="15" fill="rgb(224,8,7)" fg:x="89135" fg:w="225"/><text x="76.7423%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (12 samples, 0.01%)</title><rect x="76.6880%" y="501" width="0.0103%" height="15" fill="rgb(210,201,45)" fg:x="89363" fg:w="12"/><text x="76.9380%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (12 samples, 0.01%)</title><rect x="76.6880%" y="485" width="0.0103%" height="15" fill="rgb(252,185,21)" fg:x="89363" fg:w="12"/><text x="76.9380%" y="495.50"></text></g><g><title>halfbrown::raw_entry::RawVacantEntryMut&lt;K,V,S&gt;::insert (624 samples, 0.54%)</title><rect x="76.3979%" y="565" width="0.5355%" height="15" fill="rgb(223,131,1)" fg:x="89025" fg:w="624"/><text x="76.6479%" y="575.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawVacantEntryMut&lt;K,V,S&gt;::insert (608 samples, 0.52%)</title><rect x="76.4117%" y="549" width="0.5218%" height="15" fill="rgb(245,141,16)" fg:x="89041" fg:w="608"/><text x="76.6617%" y="559.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::insert_idx (590 samples, 0.51%)</title><rect x="76.4271%" y="533" width="0.5063%" height="15" fill="rgb(229,55,45)" fg:x="89059" fg:w="590"/><text x="76.6771%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (547 samples, 0.47%)</title><rect x="76.4640%" y="517" width="0.4694%" height="15" fill="rgb(208,92,15)" fg:x="89102" fg:w="547"/><text x="76.7140%" y="527.50"></text></g><g><title>core::ptr::write (274 samples, 0.24%)</title><rect x="76.6983%" y="501" width="0.2351%" height="15" fill="rgb(234,185,47)" fg:x="89375" fg:w="274"/><text x="76.9483%" y="511.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="76.9334%" y="549" width="0.0369%" height="15" fill="rgb(253,104,50)" fg:x="89649" fg:w="43"/><text x="77.1834%" y="559.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (16 samples, 0.01%)</title><rect x="76.9566%" y="533" width="0.0137%" height="15" fill="rgb(205,70,7)" fg:x="89676" fg:w="16"/><text x="77.2066%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (16 samples, 0.01%)</title><rect x="76.9566%" y="517" width="0.0137%" height="15" fill="rgb(240,178,43)" fg:x="89676" fg:w="16"/><text x="77.2066%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 0.01%)</title><rect x="76.9566%" y="501" width="0.0137%" height="15" fill="rgb(214,112,2)" fg:x="89676" fg:w="16"/><text x="77.2066%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.01%)</title><rect x="76.9566%" y="485" width="0.0137%" height="15" fill="rgb(206,46,17)" fg:x="89676" fg:w="16"/><text x="77.2066%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.01%)</title><rect x="76.9566%" y="469" width="0.0137%" height="15" fill="rgb(225,220,16)" fg:x="89676" fg:w="16"/><text x="77.2066%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.01%)</title><rect x="76.9566%" y="453" width="0.0137%" height="15" fill="rgb(238,65,40)" fg:x="89676" fg:w="16"/><text x="77.2066%" y="463.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (13 samples, 0.01%)</title><rect x="77.2904%" y="389" width="0.0112%" height="15" fill="rgb(230,151,21)" fg:x="90065" fg:w="13"/><text x="77.5404%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (388 samples, 0.33%)</title><rect x="76.9703%" y="517" width="0.3330%" height="15" fill="rgb(218,58,49)" fg:x="89692" fg:w="388"/><text x="77.2203%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (133 samples, 0.11%)</title><rect x="77.1892%" y="501" width="0.1141%" height="15" fill="rgb(219,179,14)" fg:x="89947" fg:w="133"/><text x="77.4392%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (133 samples, 0.11%)</title><rect x="77.1892%" y="485" width="0.1141%" height="15" fill="rgb(223,72,1)" fg:x="89947" fg:w="133"/><text x="77.4392%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (133 samples, 0.11%)</title><rect x="77.1892%" y="469" width="0.1141%" height="15" fill="rgb(238,126,10)" fg:x="89947" fg:w="133"/><text x="77.4392%" y="479.50"></text></g><g><title>alloc::alloc::alloc (115 samples, 0.10%)</title><rect x="77.2046%" y="453" width="0.0987%" height="15" fill="rgb(224,206,38)" fg:x="89965" fg:w="115"/><text x="77.4546%" y="463.50"></text></g><g><title>__rg_alloc (115 samples, 0.10%)</title><rect x="77.2046%" y="437" width="0.0987%" height="15" fill="rgb(212,201,54)" fg:x="89965" fg:w="115"/><text x="77.4546%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (115 samples, 0.10%)</title><rect x="77.2046%" y="421" width="0.0987%" height="15" fill="rgb(218,154,48)" fg:x="89965" fg:w="115"/><text x="77.4546%" y="431.50"></text></g><g><title>sn_rust_alloc (98 samples, 0.08%)</title><rect x="77.2192%" y="405" width="0.0841%" height="15" fill="rgb(232,93,24)" fg:x="89982" fg:w="98"/><text x="77.4692%" y="415.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (1,009 samples, 0.87%)</title><rect x="77.4784%" y="325" width="0.8659%" height="15" fill="rgb(245,30,21)" fg:x="90284" fg:w="1009"/><text x="77.7284%" y="335.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign (3,962 samples, 3.40%)</title><rect x="74.9871%" y="645" width="3.4000%" height="15" fill="rgb(242,148,29)" fg:x="87381" fg:w="3962"/><text x="75.2371%" y="655.50">tre..</text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign_nested (3,738 samples, 3.21%)</title><rect x="75.1794%" y="629" width="3.2078%" height="15" fill="rgb(244,153,54)" fg:x="87605" fg:w="3738"/><text x="75.4294%" y="639.50">tre..</text></g><g><title>tremor_value::known_key::KnownKey::lookup_or_insert_mut (2,627 samples, 2.25%)</title><rect x="76.1328%" y="613" width="2.2544%" height="15" fill="rgb(252,87,22)" fg:x="88716" fg:w="2627"/><text x="76.3828%" y="623.50">t..</text></g><g><title>tremor_value::known_key::KnownKey::map_lookup_or_insert_mut (2,612 samples, 2.24%)</title><rect x="76.1456%" y="597" width="2.2415%" height="15" fill="rgb(210,51,29)" fg:x="88731" fg:w="2612"/><text x="76.3956%" y="607.50">t..</text></g><g><title>halfbrown::raw_entry::RawEntryMut&lt;K,V,S&gt;::or_insert_with (2,318 samples, 1.99%)</title><rect x="76.3979%" y="581" width="1.9892%" height="15" fill="rgb(242,136,47)" fg:x="89025" fg:w="2318"/><text x="76.6479%" y="591.50">h..</text></g><g><title>tremor_value::known_key::KnownKey::map_lookup_or_insert_mut::{{closure}} (1,694 samples, 1.45%)</title><rect x="76.9334%" y="565" width="1.4537%" height="15" fill="rgb(238,68,4)" fg:x="89649" fg:w="1694"/><text x="77.1834%" y="575.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign_nested::{{closure}} (1,651 samples, 1.42%)</title><rect x="76.9703%" y="549" width="1.4168%" height="15" fill="rgb(242,161,30)" fg:x="89692" fg:w="1651"/><text x="77.2203%" y="559.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (1,651 samples, 1.42%)</title><rect x="76.9703%" y="533" width="1.4168%" height="15" fill="rgb(218,58,44)" fg:x="89692" fg:w="1651"/><text x="77.2203%" y="543.50"></text></g><g><title>halfbrown::HashMap&lt;K,V&gt;::with_capacity (1,263 samples, 1.08%)</title><rect x="77.3033%" y="517" width="1.0839%" height="15" fill="rgb(252,125,32)" fg:x="90080" fg:w="1263"/><text x="77.5533%" y="527.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V&gt;::with_capacity (1,251 samples, 1.07%)</title><rect x="77.3136%" y="501" width="1.0736%" height="15" fill="rgb(219,178,0)" fg:x="90092" fg:w="1251"/><text x="77.5636%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,251 samples, 1.07%)</title><rect x="77.3136%" y="485" width="1.0736%" height="15" fill="rgb(213,152,7)" fg:x="90092" fg:w="1251"/><text x="77.5636%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,251 samples, 1.07%)</title><rect x="77.3136%" y="469" width="1.0736%" height="15" fill="rgb(249,109,34)" fg:x="90092" fg:w="1251"/><text x="77.5636%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,251 samples, 1.07%)</title><rect x="77.3136%" y="453" width="1.0736%" height="15" fill="rgb(232,96,21)" fg:x="90092" fg:w="1251"/><text x="77.5636%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,251 samples, 1.07%)</title><rect x="77.3136%" y="437" width="1.0736%" height="15" fill="rgb(228,27,39)" fg:x="90092" fg:w="1251"/><text x="77.5636%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,251 samples, 1.07%)</title><rect x="77.3136%" y="421" width="1.0736%" height="15" fill="rgb(211,182,52)" fg:x="90092" fg:w="1251"/><text x="77.5636%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,251 samples, 1.07%)</title><rect x="77.3136%" y="405" width="1.0736%" height="15" fill="rgb(234,178,38)" fg:x="90092" fg:w="1251"/><text x="77.5636%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1,251 samples, 1.07%)</title><rect x="77.3136%" y="389" width="1.0736%" height="15" fill="rgb(221,111,3)" fg:x="90092" fg:w="1251"/><text x="77.5636%" y="399.50"></text></g><g><title>__rg_alloc (1,251 samples, 1.07%)</title><rect x="77.3136%" y="373" width="1.0736%" height="15" fill="rgb(228,175,21)" fg:x="90092" fg:w="1251"/><text x="77.5636%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,251 samples, 1.07%)</title><rect x="77.3136%" y="357" width="1.0736%" height="15" fill="rgb(228,174,43)" fg:x="90092" fg:w="1251"/><text x="77.5636%" y="367.50"></text></g><g><title>sn_rust_alloc (1,229 samples, 1.05%)</title><rect x="77.3325%" y="341" width="1.0547%" height="15" fill="rgb(211,191,0)" fg:x="90114" fg:w="1229"/><text x="77.5825%" y="351.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.04%)</title><rect x="78.3443%" y="325" width="0.0429%" height="15" fill="rgb(253,117,3)" fg:x="91293" fg:w="50"/><text x="78.5943%" y="335.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::execute_effectors (6,718 samples, 5.77%)</title><rect x="72.9181%" y="677" width="5.7651%" height="15" fill="rgb(241,127,19)" fg:x="84970" fg:w="6718"/><text x="73.1681%" y="687.50">tremor_..</text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (6,283 samples, 5.39%)</title><rect x="73.2914%" y="661" width="5.3918%" height="15" fill="rgb(218,103,12)" fg:x="85405" fg:w="6283"/><text x="73.5414%" y="671.50">tremor_..</text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (345 samples, 0.30%)</title><rect x="78.3872%" y="645" width="0.2961%" height="15" fill="rgb(236,214,43)" fg:x="91343" fg:w="345"/><text x="78.6372%" y="655.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (28 samples, 0.02%)</title><rect x="78.6592%" y="629" width="0.0240%" height="15" fill="rgb(244,144,19)" fg:x="91660" fg:w="28"/><text x="78.9092%" y="639.50"></text></g><g><title>tremor_script::ast::Path::segments (45 samples, 0.04%)</title><rect x="78.9544%" y="629" width="0.0386%" height="15" fill="rgb(246,188,10)" fg:x="92004" fg:w="45"/><text x="79.2044%" y="639.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry (401 samples, 0.34%)</title><rect x="78.9990%" y="565" width="0.3441%" height="15" fill="rgb(212,193,33)" fg:x="92056" fg:w="401"/><text x="79.2490%" y="575.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (25 samples, 0.02%)</title><rect x="79.3457%" y="501" width="0.0215%" height="15" fill="rgb(241,51,29)" fg:x="92460" fg:w="25"/><text x="79.5957%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (25 samples, 0.02%)</title><rect x="79.3457%" y="485" width="0.0215%" height="15" fill="rgb(211,58,19)" fg:x="92460" fg:w="25"/><text x="79.5957%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (25 samples, 0.02%)</title><rect x="79.3457%" y="469" width="0.0215%" height="15" fill="rgb(229,111,26)" fg:x="92460" fg:w="25"/><text x="79.5957%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (25 samples, 0.02%)</title><rect x="79.3457%" y="453" width="0.0215%" height="15" fill="rgb(213,115,40)" fg:x="92460" fg:w="25"/><text x="79.5957%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (25 samples, 0.02%)</title><rect x="79.3457%" y="437" width="0.0215%" height="15" fill="rgb(209,56,44)" fg:x="92460" fg:w="25"/><text x="79.5957%" y="447.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (12 samples, 0.01%)</title><rect x="79.3766%" y="485" width="0.0103%" height="15" fill="rgb(230,108,32)" fg:x="92496" fg:w="12"/><text x="79.6266%" y="495.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (12 samples, 0.01%)</title><rect x="79.3766%" y="469" width="0.0103%" height="15" fill="rgb(216,165,31)" fg:x="92496" fg:w="12"/><text x="79.6266%" y="479.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (1,972 samples, 1.69%)</title><rect x="79.3432%" y="565" width="1.6923%" height="15" fill="rgb(218,122,21)" fg:x="92457" fg:w="1972"/><text x="79.5932%" y="575.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (1,970 samples, 1.69%)</title><rect x="79.3449%" y="549" width="1.6906%" height="15" fill="rgb(223,224,47)" fg:x="92459" fg:w="1970"/><text x="79.5949%" y="559.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_hash (1,970 samples, 1.69%)</title><rect x="79.3449%" y="533" width="1.6906%" height="15" fill="rgb(238,102,44)" fg:x="92459" fg:w="1970"/><text x="79.5949%" y="543.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::search (1,970 samples, 1.69%)</title><rect x="79.3449%" y="517" width="1.6906%" height="15" fill="rgb(236,46,40)" fg:x="92459" fg:w="1970"/><text x="79.5949%" y="527.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (1,933 samples, 1.66%)</title><rect x="79.3766%" y="501" width="1.6588%" height="15" fill="rgb(247,202,50)" fg:x="92496" fg:w="1933"/><text x="79.6266%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,921 samples, 1.65%)</title><rect x="79.3869%" y="485" width="1.6485%" height="15" fill="rgb(209,99,20)" fg:x="92508" fg:w="1921"/><text x="79.6369%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,921 samples, 1.65%)</title><rect x="79.3869%" y="469" width="1.6485%" height="15" fill="rgb(252,27,34)" fg:x="92508" fg:w="1921"/><text x="79.6369%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,921 samples, 1.65%)</title><rect x="79.3869%" y="453" width="1.6485%" height="15" fill="rgb(215,206,23)" fg:x="92508" fg:w="1921"/><text x="79.6369%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,921 samples, 1.65%)</title><rect x="79.3869%" y="437" width="1.6485%" height="15" fill="rgb(212,135,36)" fg:x="92508" fg:w="1921"/><text x="79.6369%" y="447.50"></text></g><g><title>[libc-2.31.so] (646 samples, 0.55%)</title><rect x="80.4811%" y="421" width="0.5544%" height="15" fill="rgb(240,189,1)" fg:x="93783" fg:w="646"/><text x="80.7311%" y="431.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (2,746 samples, 2.36%)</title><rect x="78.6832%" y="677" width="2.3565%" height="15" fill="rgb(242,56,20)" fg:x="91688" fg:w="2746"/><text x="78.9332%" y="687.50">t..</text></g><g><title>tremor_script::interpreter::resolve (2,674 samples, 2.29%)</title><rect x="78.7450%" y="661" width="2.2947%" height="15" fill="rgb(247,132,33)" fg:x="91760" fg:w="2674"/><text x="78.9950%" y="671.50">t..</text></g><g><title>tremor_script::interpreter::resolve_value (2,645 samples, 2.27%)</title><rect x="78.7699%" y="645" width="2.2698%" height="15" fill="rgb(208,149,11)" fg:x="91789" fg:w="2645"/><text x="79.0199%" y="655.50">t..</text></g><g><title>tremor_value::known_key::KnownKey::lookup (2,385 samples, 2.05%)</title><rect x="78.9930%" y="629" width="2.0467%" height="15" fill="rgb(211,33,11)" fg:x="92049" fg:w="2385"/><text x="79.2430%" y="639.50">t..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,384 samples, 2.05%)</title><rect x="78.9939%" y="613" width="2.0459%" height="15" fill="rgb(221,29,38)" fg:x="92050" fg:w="2384"/><text x="79.2439%" y="623.50">c..</text></g><g><title>tremor_value::known_key::KnownKey::lookup::{{closure}} (2,378 samples, 2.04%)</title><rect x="78.9990%" y="597" width="2.0407%" height="15" fill="rgb(206,182,49)" fg:x="92056" fg:w="2378"/><text x="79.2490%" y="607.50">t..</text></g><g><title>tremor_value::known_key::KnownKey::map_lookup (2,378 samples, 2.04%)</title><rect x="78.9990%" y="581" width="2.0407%" height="15" fill="rgb(216,140,1)" fg:x="92056" fg:w="2378"/><text x="79.2490%" y="591.50">t..</text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::borrow::Borrow&lt;B&gt;&gt;::borrow (102 samples, 0.09%)</title><rect x="81.7546%" y="661" width="0.0875%" height="15" fill="rgb(232,57,40)" fg:x="95267" fg:w="102"/><text x="82.0046%" y="671.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (102 samples, 0.09%)</title><rect x="81.7546%" y="645" width="0.0875%" height="15" fill="rgb(224,186,18)" fg:x="95267" fg:w="102"/><text x="82.0046%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;tremor_value::value::Value&gt;&gt; (23 samples, 0.02%)</title><rect x="81.8421%" y="661" width="0.0197%" height="15" fill="rgb(215,121,11)" fg:x="95369" fg:w="23"/><text x="82.0921%" y="671.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (115 samples, 0.10%)</title><rect x="81.8619%" y="661" width="0.0987%" height="15" fill="rgb(245,147,10)" fg:x="95392" fg:w="115"/><text x="82.1119%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (65 samples, 0.06%)</title><rect x="81.9657%" y="645" width="0.0558%" height="15" fill="rgb(238,153,13)" fg:x="95513" fg:w="65"/><text x="82.2157%" y="655.50"></text></g><g><title>tremor_script::interpreter::test_guard (77 samples, 0.07%)</title><rect x="81.9606%" y="661" width="0.0661%" height="15" fill="rgb(233,108,0)" fg:x="95507" fg:w="77"/><text x="82.2106%" y="671.50"></text></g><g><title>&lt;tremor_pipeline::executable_graph::OperatorNode as tremor_pipeline::op::Operator&gt;::on_event (12,684 samples, 10.88%)</title><rect x="71.5888%" y="805" width="10.8849%" height="15" fill="rgb(212,157,17)" fg:x="83421" fg:w="12684"/><text x="71.8388%" y="815.50">&lt;tremor_pipeline..</text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event (12,684 samples, 10.88%)</title><rect x="71.5888%" y="789" width="10.8849%" height="15" fill="rgb(225,213,38)" fg:x="83421" fg:w="12684"/><text x="71.8388%" y="799.50">&lt;tremor_pipeline..</text></g><g><title>tremor_script::srs::EventPayload::rent_mut (12,684 samples, 10.88%)</title><rect x="71.5888%" y="773" width="10.8849%" height="15" fill="rgb(248,16,11)" fg:x="83421" fg:w="12684"/><text x="71.8388%" y="783.50">tremor_script::s..</text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event::{{closure}} (12,684 samples, 10.88%)</title><rect x="71.5888%" y="757" width="10.8849%" height="15" fill="rgb(241,33,4)" fg:x="83421" fg:w="12684"/><text x="71.8388%" y="767.50">&lt;tremor_pipeline..</text></g><g><title>tremor_script::script::Script::run (12,684 samples, 10.88%)</title><rect x="71.5888%" y="741" width="10.8849%" height="15" fill="rgb(222,26,43)" fg:x="83421" fg:w="12684"/><text x="71.8388%" y="751.50">tremor_script::s..</text></g><g><title>tremor_script::ast::Script::run (12,684 samples, 10.88%)</title><rect x="71.5888%" y="725" width="10.8849%" height="15" fill="rgb(243,29,36)" fg:x="83421" fg:w="12684"/><text x="71.8388%" y="735.50">tremor_script::a..</text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (12,684 samples, 10.88%)</title><rect x="71.5888%" y="709" width="10.8849%" height="15" fill="rgb(241,9,27)" fg:x="83421" fg:w="12684"/><text x="71.8388%" y="719.50">tremor_script::i..</text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::match_expr (11,576 samples, 9.93%)</title><rect x="72.5396%" y="693" width="9.9341%" height="15" fill="rgb(205,117,26)" fg:x="84529" fg:w="11576"/><text x="72.7896%" y="703.50">tremor_script:..</text></g><g><title>tremor_script::interpreter::test_predicate_expr (1,671 samples, 1.43%)</title><rect x="81.0398%" y="677" width="1.4340%" height="15" fill="rgb(209,80,39)" fg:x="94434" fg:w="1671"/><text x="81.2898%" y="687.50"></text></g><g><title>tremor_script::interpreter::val_eq (521 samples, 0.45%)</title><rect x="82.0266%" y="661" width="0.4471%" height="15" fill="rgb(239,155,6)" fg:x="95584" fg:w="521"/><text x="82.2766%" y="671.50"></text></g><g><title>[libc-2.31.so] (333 samples, 0.29%)</title><rect x="82.1880%" y="645" width="0.2858%" height="15" fill="rgb(212,104,12)" fg:x="95772" fg:w="333"/><text x="82.4380%" y="655.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (12,687 samples, 10.89%)</title><rect x="71.5879%" y="853" width="10.8875%" height="15" fill="rgb(234,204,3)" fg:x="83420" fg:w="12687"/><text x="71.8379%" y="863.50">tremor_pipeline:..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (12,686 samples, 10.89%)</title><rect x="71.5888%" y="837" width="10.8867%" height="15" fill="rgb(251,218,7)" fg:x="83421" fg:w="12686"/><text x="71.8388%" y="847.50">tremor_pipeline:..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (12,686 samples, 10.89%)</title><rect x="71.5888%" y="821" width="10.8867%" height="15" fill="rgb(221,81,32)" fg:x="83421" fg:w="12686"/><text x="71.8388%" y="831.50">tremor_pipeline:..</text></g><g><title>[libc-2.31.so] (140 samples, 0.12%)</title><rect x="82.6291%" y="757" width="0.1201%" height="15" fill="rgb(214,152,26)" fg:x="96286" fg:w="140"/><text x="82.8791%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (103 samples, 0.09%)</title><rect x="82.7930%" y="741" width="0.0884%" height="15" fill="rgb(223,22,3)" fg:x="96477" fg:w="103"/><text x="83.0430%" y="751.50"></text></g><g><title>core::ptr::write (103 samples, 0.09%)</title><rect x="82.7930%" y="725" width="0.0884%" height="15" fill="rgb(207,174,7)" fg:x="96477" fg:w="103"/><text x="83.0430%" y="735.50"></text></g><g><title>[libc-2.31.so] (90 samples, 0.08%)</title><rect x="82.8041%" y="709" width="0.0772%" height="15" fill="rgb(224,19,52)" fg:x="96490" fg:w="90"/><text x="83.0541%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (202 samples, 0.17%)</title><rect x="82.8814%" y="741" width="0.1733%" height="15" fill="rgb(228,24,14)" fg:x="96580" fg:w="202"/><text x="83.1314%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (202 samples, 0.17%)</title><rect x="82.8814%" y="725" width="0.1733%" height="15" fill="rgb(230,153,43)" fg:x="96580" fg:w="202"/><text x="83.1314%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (177 samples, 0.15%)</title><rect x="83.0547%" y="741" width="0.1519%" height="15" fill="rgb(231,106,12)" fg:x="96782" fg:w="177"/><text x="83.3047%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (173 samples, 0.15%)</title><rect x="83.0581%" y="725" width="0.1485%" height="15" fill="rgb(215,92,2)" fg:x="96786" fg:w="173"/><text x="83.3081%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (784 samples, 0.67%)</title><rect x="82.5398%" y="773" width="0.6728%" height="15" fill="rgb(249,143,25)" fg:x="96182" fg:w="784"/><text x="82.7898%" y="783.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (540 samples, 0.46%)</title><rect x="82.7492%" y="757" width="0.4634%" height="15" fill="rgb(252,7,35)" fg:x="96426" fg:w="540"/><text x="82.9992%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (48 samples, 0.04%)</title><rect x="83.2263%" y="677" width="0.0412%" height="15" fill="rgb(216,69,40)" fg:x="96982" fg:w="48"/><text x="83.4763%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_swap (48 samples, 0.04%)</title><rect x="83.2263%" y="661" width="0.0412%" height="15" fill="rgb(240,36,33)" fg:x="96982" fg:w="48"/><text x="83.4763%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (57 samples, 0.05%)</title><rect x="83.2195%" y="757" width="0.0489%" height="15" fill="rgb(231,128,14)" fg:x="96974" fg:w="57"/><text x="83.4695%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (54 samples, 0.05%)</title><rect x="83.2221%" y="741" width="0.0463%" height="15" fill="rgb(245,143,14)" fg:x="96977" fg:w="54"/><text x="83.4721%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="83.2221%" y="725" width="0.0463%" height="15" fill="rgb(222,130,28)" fg:x="96977" fg:w="54"/><text x="83.4721%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (49 samples, 0.04%)</title><rect x="83.2263%" y="709" width="0.0420%" height="15" fill="rgb(212,10,48)" fg:x="96982" fg:w="49"/><text x="83.4763%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (49 samples, 0.04%)</title><rect x="83.2263%" y="693" width="0.0420%" height="15" fill="rgb(254,118,45)" fg:x="96982" fg:w="49"/><text x="83.4763%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (31 samples, 0.03%)</title><rect x="83.2684%" y="757" width="0.0266%" height="15" fill="rgb(228,6,45)" fg:x="97031" fg:w="31"/><text x="83.5184%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.03%)</title><rect x="83.2684%" y="741" width="0.0266%" height="15" fill="rgb(241,18,35)" fg:x="97031" fg:w="31"/><text x="83.5184%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (48 samples, 0.04%)</title><rect x="83.2993%" y="693" width="0.0412%" height="15" fill="rgb(227,214,53)" fg:x="97067" fg:w="48"/><text x="83.5493%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (48 samples, 0.04%)</title><rect x="83.2993%" y="677" width="0.0412%" height="15" fill="rgb(224,107,51)" fg:x="97067" fg:w="48"/><text x="83.5493%" y="687.50"></text></g><g><title>event_listener::Inner::lock (53 samples, 0.05%)</title><rect x="83.2959%" y="757" width="0.0455%" height="15" fill="rgb(248,60,28)" fg:x="97063" fg:w="53"/><text x="83.5459%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.04%)</title><rect x="83.2984%" y="741" width="0.0429%" height="15" fill="rgb(249,101,23)" fg:x="97066" fg:w="50"/><text x="83.5484%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (49 samples, 0.04%)</title><rect x="83.2993%" y="725" width="0.0420%" height="15" fill="rgb(228,51,19)" fg:x="97067" fg:w="49"/><text x="83.5493%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (49 samples, 0.04%)</title><rect x="83.2993%" y="709" width="0.0420%" height="15" fill="rgb(213,20,6)" fg:x="97067" fg:w="49"/><text x="83.5493%" y="719.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (35 samples, 0.03%)</title><rect x="83.3508%" y="709" width="0.0300%" height="15" fill="rgb(212,124,10)" fg:x="97127" fg:w="35"/><text x="83.6008%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (34 samples, 0.03%)</title><rect x="83.3516%" y="693" width="0.0292%" height="15" fill="rgb(248,3,40)" fg:x="97128" fg:w="34"/><text x="83.6016%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (34 samples, 0.03%)</title><rect x="83.3516%" y="677" width="0.0292%" height="15" fill="rgb(223,178,23)" fg:x="97128" fg:w="34"/><text x="83.6016%" y="687.50"></text></g><g><title>async_executor::Sleepers::notify (29 samples, 0.02%)</title><rect x="83.3843%" y="661" width="0.0249%" height="15" fill="rgb(240,132,45)" fg:x="97166" fg:w="29"/><text x="83.6343%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (22 samples, 0.02%)</title><rect x="83.3903%" y="645" width="0.0189%" height="15" fill="rgb(245,164,36)" fg:x="97173" fg:w="22"/><text x="83.6403%" y="655.50"></text></g><g><title>core::ptr::read (20 samples, 0.02%)</title><rect x="83.3920%" y="629" width="0.0172%" height="15" fill="rgb(231,188,53)" fg:x="97175" fg:w="20"/><text x="83.6420%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (71 samples, 0.06%)</title><rect x="83.4109%" y="597" width="0.0609%" height="15" fill="rgb(237,198,39)" fg:x="97197" fg:w="71"/><text x="83.6609%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (71 samples, 0.06%)</title><rect x="83.4109%" y="581" width="0.0609%" height="15" fill="rgb(223,120,35)" fg:x="97197" fg:w="71"/><text x="83.6609%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (77 samples, 0.07%)</title><rect x="83.4091%" y="661" width="0.0661%" height="15" fill="rgb(253,107,49)" fg:x="97195" fg:w="77"/><text x="83.6591%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.07%)</title><rect x="83.4091%" y="645" width="0.0661%" height="15" fill="rgb(216,44,31)" fg:x="97195" fg:w="77"/><text x="83.6591%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (75 samples, 0.06%)</title><rect x="83.4109%" y="629" width="0.0644%" height="15" fill="rgb(253,87,21)" fg:x="97197" fg:w="75"/><text x="83.6609%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (75 samples, 0.06%)</title><rect x="83.4109%" y="613" width="0.0644%" height="15" fill="rgb(226,18,2)" fg:x="97197" fg:w="75"/><text x="83.6609%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (45 samples, 0.04%)</title><rect x="83.4752%" y="661" width="0.0386%" height="15" fill="rgb(216,8,46)" fg:x="97272" fg:w="45"/><text x="83.7252%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (45 samples, 0.04%)</title><rect x="83.4752%" y="645" width="0.0386%" height="15" fill="rgb(226,140,39)" fg:x="97272" fg:w="45"/><text x="83.7252%" y="655.50"></text></g><g><title>__libc_write (18 samples, 0.02%)</title><rect x="83.5404%" y="565" width="0.0154%" height="15" fill="rgb(221,194,54)" fg:x="97348" fg:w="18"/><text x="83.7904%" y="575.50"></text></g><g><title>async_io::reactor::Reactor::notify (34 samples, 0.03%)</title><rect x="83.5276%" y="613" width="0.0292%" height="15" fill="rgb(213,92,11)" fg:x="97333" fg:w="34"/><text x="83.7776%" y="623.50"></text></g><g><title>polling::Poller::notify (29 samples, 0.02%)</title><rect x="83.5319%" y="597" width="0.0249%" height="15" fill="rgb(229,162,46)" fg:x="97338" fg:w="29"/><text x="83.7819%" y="607.50"></text></g><g><title>polling::epoll::Poller::notify (20 samples, 0.02%)</title><rect x="83.5396%" y="581" width="0.0172%" height="15" fill="rgb(214,111,36)" fg:x="97347" fg:w="20"/><text x="83.7896%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (65 samples, 0.06%)</title><rect x="83.5928%" y="581" width="0.0558%" height="15" fill="rgb(207,6,21)" fg:x="97409" fg:w="65"/><text x="83.8428%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_swap (65 samples, 0.06%)</title><rect x="83.5928%" y="565" width="0.0558%" height="15" fill="rgb(213,127,38)" fg:x="97409" fg:w="65"/><text x="83.8428%" y="575.50"></text></g><g><title>parking::Unparker::unpark (118 samples, 0.10%)</title><rect x="83.5619%" y="613" width="0.1013%" height="15" fill="rgb(238,118,32)" fg:x="97373" fg:w="118"/><text x="83.8119%" y="623.50"></text></g><g><title>parking::Inner::unpark (94 samples, 0.08%)</title><rect x="83.5825%" y="597" width="0.0807%" height="15" fill="rgb(240,139,39)" fg:x="97397" fg:w="94"/><text x="83.8325%" y="607.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (178 samples, 0.15%)</title><rect x="83.5138%" y="629" width="0.1528%" height="15" fill="rgb(235,10,37)" fg:x="97317" fg:w="178"/><text x="83.7638%" y="639.50"></text></g><g><title>core::task::wake::Waker::wake (242 samples, 0.21%)</title><rect x="83.5138%" y="661" width="0.2077%" height="15" fill="rgb(249,171,38)" fg:x="97317" fg:w="242"/><text x="83.7638%" y="671.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (242 samples, 0.21%)</title><rect x="83.5138%" y="645" width="0.2077%" height="15" fill="rgb(242,144,32)" fg:x="97317" fg:w="242"/><text x="83.7638%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (64 samples, 0.05%)</title><rect x="83.6666%" y="629" width="0.0549%" height="15" fill="rgb(217,117,21)" fg:x="97495" fg:w="64"/><text x="83.9166%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.05%)</title><rect x="83.6666%" y="613" width="0.0549%" height="15" fill="rgb(249,87,1)" fg:x="97495" fg:w="64"/><text x="83.9166%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (60 samples, 0.05%)</title><rect x="83.6700%" y="597" width="0.0515%" height="15" fill="rgb(248,196,48)" fg:x="97499" fg:w="60"/><text x="83.9200%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (60 samples, 0.05%)</title><rect x="83.6700%" y="581" width="0.0515%" height="15" fill="rgb(251,206,33)" fg:x="97499" fg:w="60"/><text x="83.9200%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (55 samples, 0.05%)</title><rect x="83.7318%" y="613" width="0.0472%" height="15" fill="rgb(232,141,28)" fg:x="97571" fg:w="55"/><text x="83.9818%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (55 samples, 0.05%)</title><rect x="83.7318%" y="597" width="0.0472%" height="15" fill="rgb(209,167,14)" fg:x="97571" fg:w="55"/><text x="83.9818%" y="607.50"></text></g><g><title>core::hint::spin_loop (12 samples, 0.01%)</title><rect x="83.8013%" y="581" width="0.0103%" height="15" fill="rgb(225,11,50)" fg:x="97652" fg:w="12"/><text x="84.0513%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (12 samples, 0.01%)</title><rect x="83.8013%" y="565" width="0.0103%" height="15" fill="rgb(209,50,20)" fg:x="97652" fg:w="12"/><text x="84.0513%" y="575.50"></text></g><g><title>async_executor::State::notify (519 samples, 0.45%)</title><rect x="83.3825%" y="677" width="0.4454%" height="15" fill="rgb(212,17,46)" fg:x="97164" fg:w="519"/><text x="83.6325%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (124 samples, 0.11%)</title><rect x="83.7215%" y="661" width="0.1064%" height="15" fill="rgb(216,101,39)" fg:x="97559" fg:w="124"/><text x="83.9715%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (114 samples, 0.10%)</title><rect x="83.7301%" y="645" width="0.0978%" height="15" fill="rgb(212,228,48)" fg:x="97569" fg:w="114"/><text x="83.9801%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (114 samples, 0.10%)</title><rect x="83.7301%" y="629" width="0.0978%" height="15" fill="rgb(250,6,50)" fg:x="97569" fg:w="114"/><text x="83.9801%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (57 samples, 0.05%)</title><rect x="83.7790%" y="613" width="0.0489%" height="15" fill="rgb(250,160,48)" fg:x="97626" fg:w="57"/><text x="84.0290%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (35 samples, 0.03%)</title><rect x="83.7979%" y="597" width="0.0300%" height="15" fill="rgb(244,216,33)" fg:x="97648" fg:w="35"/><text x="84.0479%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (19 samples, 0.02%)</title><rect x="83.8116%" y="581" width="0.0163%" height="15" fill="rgb(207,157,5)" fg:x="97664" fg:w="19"/><text x="84.0616%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.02%)</title><rect x="83.8116%" y="565" width="0.0163%" height="15" fill="rgb(228,199,8)" fg:x="97664" fg:w="19"/><text x="84.0616%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (103 samples, 0.09%)</title><rect x="83.8408%" y="645" width="0.0884%" height="15" fill="rgb(227,80,20)" fg:x="97698" fg:w="103"/><text x="84.0908%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (103 samples, 0.09%)</title><rect x="83.8408%" y="629" width="0.0884%" height="15" fill="rgb(222,9,33)" fg:x="97698" fg:w="103"/><text x="84.0908%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (40 samples, 0.03%)</title><rect x="83.9292%" y="645" width="0.0343%" height="15" fill="rgb(239,44,28)" fg:x="97801" fg:w="40"/><text x="84.1792%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_or (40 samples, 0.03%)</title><rect x="83.9292%" y="629" width="0.0343%" height="15" fill="rgb(249,187,43)" fg:x="97801" fg:w="40"/><text x="84.1792%" y="639.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (685 samples, 0.59%)</title><rect x="83.3825%" y="693" width="0.5878%" height="15" fill="rgb(216,141,28)" fg:x="97164" fg:w="685"/><text x="83.6325%" y="703.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (166 samples, 0.14%)</title><rect x="83.8279%" y="677" width="0.1425%" height="15" fill="rgb(230,154,53)" fg:x="97683" fg:w="166"/><text x="84.0779%" y="687.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (164 samples, 0.14%)</title><rect x="83.8296%" y="661" width="0.1407%" height="15" fill="rgb(227,82,4)" fg:x="97685" fg:w="164"/><text x="84.0796%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (155 samples, 0.13%)</title><rect x="83.9704%" y="693" width="0.1330%" height="15" fill="rgb(220,107,16)" fg:x="97849" fg:w="155"/><text x="84.2204%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (155 samples, 0.13%)</title><rect x="83.9704%" y="677" width="0.1330%" height="15" fill="rgb(207,187,2)" fg:x="97849" fg:w="155"/><text x="84.2204%" y="687.50"></text></g><g><title>event_listener::List::notify (923 samples, 0.79%)</title><rect x="83.3413%" y="757" width="0.7921%" height="15" fill="rgb(210,162,52)" fg:x="97116" fg:w="923"/><text x="83.5913%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake (912 samples, 0.78%)</title><rect x="83.3508%" y="741" width="0.7826%" height="15" fill="rgb(217,216,49)" fg:x="97127" fg:w="912"/><text x="83.6008%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (912 samples, 0.78%)</title><rect x="83.3508%" y="725" width="0.7826%" height="15" fill="rgb(218,146,49)" fg:x="97127" fg:w="912"/><text x="83.6008%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (877 samples, 0.75%)</title><rect x="83.3808%" y="709" width="0.7526%" height="15" fill="rgb(216,55,40)" fg:x="97162" fg:w="877"/><text x="83.6308%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (35 samples, 0.03%)</title><rect x="84.1034%" y="693" width="0.0300%" height="15" fill="rgb(208,196,21)" fg:x="98004" fg:w="35"/><text x="84.3534%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (35 samples, 0.03%)</title><rect x="84.1034%" y="677" width="0.0300%" height="15" fill="rgb(242,117,42)" fg:x="98004" fg:w="35"/><text x="84.3534%" y="687.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,867 samples, 2.46%)</title><rect x="82.5295%" y="789" width="2.4604%" height="15" fill="rgb(210,11,23)" fg:x="96170" fg:w="2867"/><text x="82.7795%" y="799.50">as..</text></g><g><title>event_listener::Event::notify (2,071 samples, 1.78%)</title><rect x="83.2126%" y="773" width="1.7773%" height="15" fill="rgb(217,110,2)" fg:x="96966" fg:w="2071"/><text x="83.4626%" y="783.50">e..</text></g><g><title>event_listener::full_fence (998 samples, 0.86%)</title><rect x="84.1334%" y="757" width="0.8564%" height="15" fill="rgb(229,77,54)" fg:x="98039" fg:w="998"/><text x="84.3834%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (996 samples, 0.85%)</title><rect x="84.1351%" y="741" width="0.8547%" height="15" fill="rgb(218,53,16)" fg:x="98041" fg:w="996"/><text x="84.3851%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (996 samples, 0.85%)</title><rect x="84.1351%" y="725" width="0.8547%" height="15" fill="rgb(215,38,13)" fg:x="98041" fg:w="996"/><text x="84.3851%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (14 samples, 0.01%)</title><rect x="84.9899%" y="789" width="0.0120%" height="15" fill="rgb(235,42,18)" fg:x="99037" fg:w="14"/><text x="85.2399%" y="799.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (16,256 samples, 13.95%)</title><rect x="71.1674%" y="885" width="13.9503%" height="15" fill="rgb(219,66,54)" fg:x="82930" fg:w="16256"/><text x="71.4174%" y="895.50">tremor_runtime::pipel..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,766 samples, 13.53%)</title><rect x="71.5879%" y="869" width="13.5298%" height="15" fill="rgb(222,205,4)" fg:x="83420" fg:w="15766"/><text x="71.8379%" y="879.50">&lt;core::future::from_..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,079 samples, 2.64%)</title><rect x="82.4755%" y="853" width="2.6423%" height="15" fill="rgb(227,213,46)" fg:x="96107" fg:w="3079"/><text x="82.7255%" y="863.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,079 samples, 2.64%)</title><rect x="82.4755%" y="837" width="2.6423%" height="15" fill="rgb(250,145,42)" fg:x="96107" fg:w="3079"/><text x="82.7255%" y="847.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (3,079 samples, 2.64%)</title><rect x="82.4755%" y="821" width="2.6423%" height="15" fill="rgb(219,15,2)" fg:x="96107" fg:w="3079"/><text x="82.7255%" y="831.50">tr..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (3,079 samples, 2.64%)</title><rect x="82.4755%" y="805" width="2.6423%" height="15" fill="rgb(231,181,52)" fg:x="96107" fg:w="3079"/><text x="82.7255%" y="815.50">&lt;a..</text></g><g><title>event_listener::Event::notify (131 samples, 0.11%)</title><rect x="85.0053%" y="789" width="0.1124%" height="15" fill="rgb(235,1,42)" fg:x="99055" fg:w="131"/><text x="85.2553%" y="799.50"></text></g><g><title>event_listener::full_fence (122 samples, 0.10%)</title><rect x="85.0130%" y="773" width="0.1047%" height="15" fill="rgb(249,88,27)" fg:x="99064" fg:w="122"/><text x="85.2630%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (119 samples, 0.10%)</title><rect x="85.0156%" y="757" width="0.1021%" height="15" fill="rgb(235,145,16)" fg:x="99067" fg:w="119"/><text x="85.2656%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (119 samples, 0.10%)</title><rect x="85.0156%" y="741" width="0.1021%" height="15" fill="rgb(237,114,19)" fg:x="99067" fg:w="119"/><text x="85.2656%" y="751.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (44 samples, 0.04%)</title><rect x="85.1177%" y="885" width="0.0378%" height="15" fill="rgb(238,51,50)" fg:x="99186" fg:w="44"/><text x="85.3677%" y="895.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (13 samples, 0.01%)</title><rect x="85.1555%" y="885" width="0.0112%" height="15" fill="rgb(205,194,25)" fg:x="99230" fg:w="13"/><text x="85.4055%" y="895.50"></text></g><g><title>tremor_script::ast::Script::run (53 samples, 0.05%)</title><rect x="85.1667%" y="885" width="0.0455%" height="15" fill="rgb(215,203,17)" fg:x="99243" fg:w="53"/><text x="85.4167%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (45 samples, 0.04%)</title><rect x="85.1735%" y="869" width="0.0386%" height="15" fill="rgb(233,112,49)" fg:x="99251" fg:w="45"/><text x="85.4235%" y="879.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::if_expr (45 samples, 0.04%)</title><rect x="85.1735%" y="853" width="0.0386%" height="15" fill="rgb(241,130,26)" fg:x="99251" fg:w="45"/><text x="85.4235%" y="863.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::execute_effectors (45 samples, 0.04%)</title><rect x="85.1735%" y="837" width="0.0386%" height="15" fill="rgb(252,223,19)" fg:x="99251" fg:w="45"/><text x="85.4235%" y="847.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (45 samples, 0.04%)</title><rect x="85.1735%" y="821" width="0.0386%" height="15" fill="rgb(211,95,25)" fg:x="99251" fg:w="45"/><text x="85.4235%" y="831.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (45 samples, 0.04%)</title><rect x="85.1735%" y="805" width="0.0386%" height="15" fill="rgb(251,182,27)" fg:x="99251" fg:w="45"/><text x="85.4235%" y="815.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (45 samples, 0.04%)</title><rect x="85.1735%" y="789" width="0.0386%" height="15" fill="rgb(238,24,4)" fg:x="99251" fg:w="45"/><text x="85.4235%" y="799.50"></text></g><g><title>tremor_script::interpreter::resolve (45 samples, 0.04%)</title><rect x="85.1735%" y="773" width="0.0386%" height="15" fill="rgb(224,220,25)" fg:x="99251" fg:w="45"/><text x="85.4235%" y="783.50"></text></g><g><title>tremor_script::interpreter::resolve_value (45 samples, 0.04%)</title><rect x="85.1735%" y="757" width="0.0386%" height="15" fill="rgb(239,133,26)" fg:x="99251" fg:w="45"/><text x="85.4235%" y="767.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup (34 samples, 0.03%)</title><rect x="85.1830%" y="741" width="0.0292%" height="15" fill="rgb(211,94,48)" fg:x="99262" fg:w="34"/><text x="85.4330%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (34 samples, 0.03%)</title><rect x="85.1830%" y="725" width="0.0292%" height="15" fill="rgb(239,87,6)" fg:x="99262" fg:w="34"/><text x="85.4330%" y="735.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup::{{closure}} (34 samples, 0.03%)</title><rect x="85.1830%" y="709" width="0.0292%" height="15" fill="rgb(227,62,0)" fg:x="99262" fg:w="34"/><text x="85.4330%" y="719.50"></text></g><g><title>tremor_value::known_key::KnownKey::map_lookup (34 samples, 0.03%)</title><rect x="85.1830%" y="693" width="0.0292%" height="15" fill="rgb(211,226,4)" fg:x="99262" fg:w="34"/><text x="85.4330%" y="703.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (28 samples, 0.02%)</title><rect x="85.1881%" y="677" width="0.0240%" height="15" fill="rgb(253,38,52)" fg:x="99268" fg:w="28"/><text x="85.4381%" y="687.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (28 samples, 0.02%)</title><rect x="85.1881%" y="661" width="0.0240%" height="15" fill="rgb(229,126,40)" fg:x="99268" fg:w="28"/><text x="85.4381%" y="671.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_hash (28 samples, 0.02%)</title><rect x="85.1881%" y="645" width="0.0240%" height="15" fill="rgb(229,165,44)" fg:x="99268" fg:w="28"/><text x="85.4381%" y="655.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::search (28 samples, 0.02%)</title><rect x="85.1881%" y="629" width="0.0240%" height="15" fill="rgb(247,95,47)" fg:x="99268" fg:w="28"/><text x="85.4381%" y="639.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (22 samples, 0.02%)</title><rect x="85.1933%" y="613" width="0.0189%" height="15" fill="rgb(216,140,30)" fg:x="99274" fg:w="22"/><text x="85.4433%" y="623.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (22 samples, 0.02%)</title><rect x="85.1933%" y="597" width="0.0189%" height="15" fill="rgb(246,214,8)" fg:x="99274" fg:w="22"/><text x="85.4433%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (22 samples, 0.02%)</title><rect x="85.1933%" y="581" width="0.0189%" height="15" fill="rgb(227,224,15)" fg:x="99274" fg:w="22"/><text x="85.4433%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (22 samples, 0.02%)</title><rect x="85.1933%" y="565" width="0.0189%" height="15" fill="rgb(233,175,4)" fg:x="99274" fg:w="22"/><text x="85.4433%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (22 samples, 0.02%)</title><rect x="85.1933%" y="549" width="0.0189%" height="15" fill="rgb(221,66,45)" fg:x="99274" fg:w="22"/><text x="85.4433%" y="559.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.01%)</title><rect x="85.2010%" y="533" width="0.0112%" height="15" fill="rgb(221,178,18)" fg:x="99283" fg:w="13"/><text x="85.4510%" y="543.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign (42 samples, 0.04%)</title><rect x="85.2121%" y="885" width="0.0360%" height="15" fill="rgb(213,81,29)" fg:x="99296" fg:w="42"/><text x="85.4621%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign_nested (15 samples, 0.01%)</title><rect x="85.2482%" y="885" width="0.0129%" height="15" fill="rgb(220,89,49)" fg:x="99338" fg:w="15"/><text x="85.4982%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (17 samples, 0.01%)</title><rect x="85.2671%" y="885" width="0.0146%" height="15" fill="rgb(227,60,33)" fg:x="99360" fg:w="17"/><text x="85.5171%" y="895.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (17 samples, 0.01%)</title><rect x="85.2816%" y="885" width="0.0146%" height="15" fill="rgb(205,113,12)" fg:x="99377" fg:w="17"/><text x="85.5316%" y="895.50"></text></g><g><title>tremor_script::interpreter::val_eq (110 samples, 0.09%)</title><rect x="85.3040%" y="885" width="0.0944%" height="15" fill="rgb(211,32,1)" fg:x="99403" fg:w="110"/><text x="85.5540%" y="895.50"></text></g><g><title>tremor_script::ast::Path::segments (15 samples, 0.01%)</title><rect x="85.5116%" y="693" width="0.0129%" height="15" fill="rgb(246,2,12)" fg:x="99645" fg:w="15"/><text x="85.7616%" y="703.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry (16 samples, 0.01%)</title><rect x="85.5262%" y="629" width="0.0137%" height="15" fill="rgb(243,37,27)" fg:x="99662" fg:w="16"/><text x="85.7762%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="85.5442%" y="565" width="0.0112%" height="15" fill="rgb(248,211,31)" fg:x="99683" fg:w="13"/><text x="85.7942%" y="575.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (15 samples, 0.01%)</title><rect x="85.5554%" y="549" width="0.0129%" height="15" fill="rgb(242,146,47)" fg:x="99696" fg:w="15"/><text x="85.8054%" y="559.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (15 samples, 0.01%)</title><rect x="85.5554%" y="533" width="0.0129%" height="15" fill="rgb(206,70,20)" fg:x="99696" fg:w="15"/><text x="85.8054%" y="543.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (253 samples, 0.22%)</title><rect x="85.5400%" y="629" width="0.2171%" height="15" fill="rgb(215,10,51)" fg:x="99678" fg:w="253"/><text x="85.7900%" y="639.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (250 samples, 0.21%)</title><rect x="85.5425%" y="613" width="0.2145%" height="15" fill="rgb(243,178,53)" fg:x="99681" fg:w="250"/><text x="85.7925%" y="623.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_hash (250 samples, 0.21%)</title><rect x="85.5425%" y="597" width="0.2145%" height="15" fill="rgb(233,221,20)" fg:x="99681" fg:w="250"/><text x="85.7925%" y="607.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::search (250 samples, 0.21%)</title><rect x="85.5425%" y="581" width="0.2145%" height="15" fill="rgb(218,95,35)" fg:x="99681" fg:w="250"/><text x="85.7925%" y="591.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (235 samples, 0.20%)</title><rect x="85.5554%" y="565" width="0.2017%" height="15" fill="rgb(229,13,5)" fg:x="99696" fg:w="235"/><text x="85.8054%" y="575.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (220 samples, 0.19%)</title><rect x="85.5683%" y="549" width="0.1888%" height="15" fill="rgb(252,164,30)" fg:x="99711" fg:w="220"/><text x="85.8183%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (220 samples, 0.19%)</title><rect x="85.5683%" y="533" width="0.1888%" height="15" fill="rgb(232,68,36)" fg:x="99711" fg:w="220"/><text x="85.8183%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (220 samples, 0.19%)</title><rect x="85.5683%" y="517" width="0.1888%" height="15" fill="rgb(219,59,54)" fg:x="99711" fg:w="220"/><text x="85.8183%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (220 samples, 0.19%)</title><rect x="85.5683%" y="501" width="0.1888%" height="15" fill="rgb(250,92,33)" fg:x="99711" fg:w="220"/><text x="85.8183%" y="511.50"></text></g><g><title>[libc-2.31.so] (131 samples, 0.11%)</title><rect x="85.6447%" y="485" width="0.1124%" height="15" fill="rgb(229,162,54)" fg:x="99800" fg:w="131"/><text x="85.8947%" y="495.50"></text></g><g><title>tremor_script::srs::EventPayload::rent_mut (423 samples, 0.36%)</title><rect x="85.3984%" y="885" width="0.3630%" height="15" fill="rgb(244,114,52)" fg:x="99513" fg:w="423"/><text x="85.6484%" y="895.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event::{{closure}} (413 samples, 0.35%)</title><rect x="85.4069%" y="869" width="0.3544%" height="15" fill="rgb(212,211,43)" fg:x="99523" fg:w="413"/><text x="85.6569%" y="879.50"></text></g><g><title>tremor_script::script::Script::run (413 samples, 0.35%)</title><rect x="85.4069%" y="853" width="0.3544%" height="15" fill="rgb(226,147,8)" fg:x="99523" fg:w="413"/><text x="85.6569%" y="863.50"></text></g><g><title>tremor_script::ast::Script::run (413 samples, 0.35%)</title><rect x="85.4069%" y="837" width="0.3544%" height="15" fill="rgb(226,23,13)" fg:x="99523" fg:w="413"/><text x="85.6569%" y="847.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (413 samples, 0.35%)</title><rect x="85.4069%" y="821" width="0.3544%" height="15" fill="rgb(240,63,4)" fg:x="99523" fg:w="413"/><text x="85.6569%" y="831.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::match_expr (407 samples, 0.35%)</title><rect x="85.4121%" y="805" width="0.3493%" height="15" fill="rgb(221,1,32)" fg:x="99529" fg:w="407"/><text x="85.6621%" y="815.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::execute_effectors (407 samples, 0.35%)</title><rect x="85.4121%" y="789" width="0.3493%" height="15" fill="rgb(242,117,10)" fg:x="99529" fg:w="407"/><text x="85.6621%" y="799.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (407 samples, 0.35%)</title><rect x="85.4121%" y="773" width="0.3493%" height="15" fill="rgb(249,172,44)" fg:x="99529" fg:w="407"/><text x="85.6621%" y="783.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (407 samples, 0.35%)</title><rect x="85.4121%" y="757" width="0.3493%" height="15" fill="rgb(244,46,45)" fg:x="99529" fg:w="407"/><text x="85.6621%" y="767.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (407 samples, 0.35%)</title><rect x="85.4121%" y="741" width="0.3493%" height="15" fill="rgb(206,43,17)" fg:x="99529" fg:w="407"/><text x="85.6621%" y="751.50"></text></g><g><title>tremor_script::interpreter::resolve (407 samples, 0.35%)</title><rect x="85.4121%" y="725" width="0.3493%" height="15" fill="rgb(239,218,39)" fg:x="99529" fg:w="407"/><text x="85.6621%" y="735.50"></text></g><g><title>tremor_script::interpreter::resolve_value (407 samples, 0.35%)</title><rect x="85.4121%" y="709" width="0.3493%" height="15" fill="rgb(208,169,54)" fg:x="99529" fg:w="407"/><text x="85.6621%" y="719.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup (276 samples, 0.24%)</title><rect x="85.5245%" y="693" width="0.2369%" height="15" fill="rgb(247,25,42)" fg:x="99660" fg:w="276"/><text x="85.7745%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (276 samples, 0.24%)</title><rect x="85.5245%" y="677" width="0.2369%" height="15" fill="rgb(226,23,31)" fg:x="99660" fg:w="276"/><text x="85.7745%" y="687.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup::{{closure}} (274 samples, 0.24%)</title><rect x="85.5262%" y="661" width="0.2351%" height="15" fill="rgb(247,16,28)" fg:x="99662" fg:w="274"/><text x="85.7762%" y="671.50"></text></g><g><title>tremor_value::known_key::KnownKey::map_lookup (274 samples, 0.24%)</title><rect x="85.5262%" y="645" width="0.2351%" height="15" fill="rgb(231,147,38)" fg:x="99662" fg:w="274"/><text x="85.7762%" y="655.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (13 samples, 0.01%)</title><rect x="85.7614%" y="885" width="0.0112%" height="15" fill="rgb(253,81,48)" fg:x="99936" fg:w="13"/><text x="86.0114%" y="895.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse (127 samples, 0.11%)</title><rect x="85.7725%" y="885" width="0.1090%" height="15" fill="rgb(249,222,43)" fg:x="99949" fg:w="127"/><text x="86.0225%" y="895.50"></text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (257 samples, 0.22%)</title><rect x="85.8815%" y="885" width="0.2205%" height="15" fill="rgb(221,3,27)" fg:x="100076" fg:w="257"/><text x="86.1315%" y="895.50"></text></g><g><title>tremor_value::value::serialize::FastGenerator::write_object (36 samples, 0.03%)</title><rect x="86.0712%" y="869" width="0.0309%" height="15" fill="rgb(228,180,5)" fg:x="100297" fg:w="36"/><text x="86.3212%" y="879.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_simple_str_content (16 samples, 0.01%)</title><rect x="86.0883%" y="853" width="0.0137%" height="15" fill="rgb(227,131,42)" fg:x="100317" fg:w="16"/><text x="86.3383%" y="863.50"></text></g><g><title>value_trait::generator::BaseGenerator::write (16 samples, 0.01%)</title><rect x="86.0883%" y="837" width="0.0137%" height="15" fill="rgb(212,3,39)" fg:x="100317" fg:w="16"/><text x="86.3383%" y="847.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (16 samples, 0.01%)</title><rect x="86.0883%" y="821" width="0.0137%" height="15" fill="rgb(226,45,5)" fg:x="100317" fg:w="16"/><text x="86.3383%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.01%)</title><rect x="86.0883%" y="805" width="0.0137%" height="15" fill="rgb(215,167,45)" fg:x="100317" fg:w="16"/><text x="86.3383%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.01%)</title><rect x="86.0883%" y="789" width="0.0137%" height="15" fill="rgb(250,218,53)" fg:x="100317" fg:w="16"/><text x="86.3383%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.01%)</title><rect x="86.0883%" y="773" width="0.0137%" height="15" fill="rgb(207,140,0)" fg:x="100317" fg:w="16"/><text x="86.3383%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.01%)</title><rect x="86.0883%" y="757" width="0.0137%" height="15" fill="rgb(238,133,51)" fg:x="100317" fg:w="16"/><text x="86.3383%" y="767.50"></text></g><g><title>[unknown] (93,581 samples, 80.31%)</title><rect x="5.8201%" y="901" width="80.3077%" height="15" fill="rgb(218,203,53)" fg:x="6782" fg:w="93581"/><text x="6.0701%" y="911.50">[unknown]</text></g><g><title>window::TimeWindow::add_t (27 samples, 0.02%)</title><rect x="86.1046%" y="885" width="0.0232%" height="15" fill="rgb(226,184,25)" fg:x="100336" fg:w="27"/><text x="86.3546%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="86.1355%" y="885" width="0.0120%" height="15" fill="rgb(231,121,21)" fg:x="100372" fg:w="14"/><text x="86.3855%" y="895.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (27 samples, 0.02%)</title><rect x="86.1561%" y="885" width="0.0232%" height="15" fill="rgb(251,14,34)" fg:x="100396" fg:w="27"/><text x="86.4061%" y="895.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (24 samples, 0.02%)</title><rect x="86.1587%" y="869" width="0.0206%" height="15" fill="rgb(249,193,11)" fg:x="100399" fg:w="24"/><text x="86.4087%" y="879.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (21 samples, 0.02%)</title><rect x="86.1613%" y="853" width="0.0180%" height="15" fill="rgb(220,172,37)" fg:x="100402" fg:w="21"/><text x="86.4113%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (20 samples, 0.02%)</title><rect x="86.1853%" y="885" width="0.0172%" height="15" fill="rgb(231,229,43)" fg:x="100430" fg:w="20"/><text x="86.4353%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (27 samples, 0.02%)</title><rect x="86.2033%" y="885" width="0.0232%" height="15" fill="rgb(250,161,5)" fg:x="100451" fg:w="27"/><text x="86.4533%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="86.2059%" y="869" width="0.0206%" height="15" fill="rgb(218,225,18)" fg:x="100454" fg:w="24"/><text x="86.4559%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (23 samples, 0.02%)</title><rect x="86.2067%" y="853" width="0.0197%" height="15" fill="rgb(245,45,42)" fg:x="100455" fg:w="23"/><text x="86.4567%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="86.2110%" y="837" width="0.0154%" height="15" fill="rgb(211,115,1)" fg:x="100460" fg:w="18"/><text x="86.4610%" y="847.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (15 samples, 0.01%)</title><rect x="86.2136%" y="821" width="0.0129%" height="15" fill="rgb(248,133,52)" fg:x="100463" fg:w="15"/><text x="86.4636%" y="831.50"></text></g><g><title>&lt;tremor_pipeline::executable_graph::OperatorNode as tremor_pipeline::op::Operator&gt;::on_event (19 samples, 0.02%)</title><rect x="86.2951%" y="805" width="0.0163%" height="15" fill="rgb(238,100,21)" fg:x="100558" fg:w="19"/><text x="86.5451%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (70 samples, 0.06%)</title><rect x="86.2823%" y="869" width="0.0601%" height="15" fill="rgb(247,144,11)" fg:x="100543" fg:w="70"/><text x="86.5323%" y="879.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (69 samples, 0.06%)</title><rect x="86.2831%" y="853" width="0.0592%" height="15" fill="rgb(206,164,16)" fg:x="100544" fg:w="69"/><text x="86.5331%" y="863.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (57 samples, 0.05%)</title><rect x="86.2934%" y="837" width="0.0489%" height="15" fill="rgb(222,34,3)" fg:x="100556" fg:w="57"/><text x="86.5434%" y="847.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (57 samples, 0.05%)</title><rect x="86.2934%" y="821" width="0.0489%" height="15" fill="rgb(248,82,4)" fg:x="100556" fg:w="57"/><text x="86.5434%" y="831.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue_events (34 samples, 0.03%)</title><rect x="86.3132%" y="805" width="0.0292%" height="15" fill="rgb(228,81,46)" fg:x="100579" fg:w="34"/><text x="86.5632%" y="815.50"></text></g><g><title>__dso_handle (258 samples, 0.22%)</title><rect x="86.1278%" y="901" width="0.2214%" height="15" fill="rgb(227,67,47)" fg:x="100363" fg:w="258"/><text x="86.3778%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (143 samples, 0.12%)</title><rect x="86.2265%" y="885" width="0.1227%" height="15" fill="rgb(215,93,53)" fg:x="100478" fg:w="143"/><text x="86.4765%" y="895.50"></text></g><g><title>anon.7ffb122119e4c1435beee04d7a36cdb5.9.llvm.14803035141670572092 (14 samples, 0.01%)</title><rect x="86.3689%" y="901" width="0.0120%" height="15" fill="rgb(248,194,39)" fg:x="100644" fg:w="14"/><text x="86.6189%" y="911.50"></text></g><g><title>async_executor::steal (16 samples, 0.01%)</title><rect x="86.3810%" y="901" width="0.0137%" height="15" fill="rgb(215,5,19)" fg:x="100658" fg:w="16"/><text x="86.6310%" y="911.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="86.4041%" y="869" width="0.0163%" height="15" fill="rgb(226,215,51)" fg:x="100685" fg:w="19"/><text x="86.6541%" y="879.50"></text></g><g><title>async_task::runnable::Runnable::run (18 samples, 0.02%)</title><rect x="86.4050%" y="853" width="0.0154%" height="15" fill="rgb(225,56,26)" fg:x="100686" fg:w="18"/><text x="86.6550%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="86.3990%" y="885" width="0.0223%" height="15" fill="rgb(222,75,29)" fg:x="100679" fg:w="26"/><text x="86.6490%" y="895.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (28 samples, 0.02%)</title><rect x="86.4213%" y="885" width="0.0240%" height="15" fill="rgb(236,139,6)" fg:x="100705" fg:w="28"/><text x="86.6713%" y="895.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (27 samples, 0.02%)</title><rect x="86.4221%" y="869" width="0.0232%" height="15" fill="rgb(223,137,36)" fg:x="100706" fg:w="27"/><text x="86.6721%" y="879.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (27 samples, 0.02%)</title><rect x="86.4221%" y="853" width="0.0232%" height="15" fill="rgb(226,99,2)" fg:x="100706" fg:w="27"/><text x="86.6721%" y="863.50"></text></g><g><title>async_io::reactor::ReactorLock::react (13 samples, 0.01%)</title><rect x="86.4496%" y="885" width="0.0112%" height="15" fill="rgb(206,133,23)" fg:x="100738" fg:w="13"/><text x="86.6996%" y="895.50"></text></g><g><title>polling::epoll::Poller::modify (44 samples, 0.04%)</title><rect x="86.4779%" y="885" width="0.0378%" height="15" fill="rgb(243,173,15)" fg:x="100771" fg:w="44"/><text x="86.7279%" y="895.50"></text></g><g><title>polling::epoll::Poller::ctl (20 samples, 0.02%)</title><rect x="86.4985%" y="869" width="0.0172%" height="15" fill="rgb(228,69,28)" fg:x="100795" fg:w="20"/><text x="86.7485%" y="879.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (143 samples, 0.12%)</title><rect x="86.3947%" y="901" width="0.1227%" height="15" fill="rgb(212,51,22)" fg:x="100674" fg:w="143"/><text x="86.6447%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (35 samples, 0.03%)</title><rect x="86.8607%" y="293" width="0.0300%" height="15" fill="rgb(227,113,0)" fg:x="101217" fg:w="35"/><text x="87.1107%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (34 samples, 0.03%)</title><rect x="87.0615%" y="197" width="0.0292%" height="15" fill="rgb(252,84,27)" fg:x="101451" fg:w="34"/><text x="87.3115%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (34 samples, 0.03%)</title><rect x="87.0615%" y="181" width="0.0292%" height="15" fill="rgb(223,145,39)" fg:x="101451" fg:w="34"/><text x="87.3115%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (27 samples, 0.02%)</title><rect x="87.0675%" y="165" width="0.0232%" height="15" fill="rgb(239,219,30)" fg:x="101458" fg:w="27"/><text x="87.3175%" y="175.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}}::{{closure}} (26 samples, 0.02%)</title><rect x="87.0683%" y="149" width="0.0223%" height="15" fill="rgb(224,196,39)" fg:x="101459" fg:w="26"/><text x="87.3183%" y="159.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::ptr_eq (26 samples, 0.02%)</title><rect x="87.0683%" y="133" width="0.0223%" height="15" fill="rgb(205,35,43)" fg:x="101459" fg:w="26"/><text x="87.3183%" y="143.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (94 samples, 0.08%)</title><rect x="87.0907%" y="197" width="0.0807%" height="15" fill="rgb(228,201,21)" fg:x="101485" fg:w="94"/><text x="87.3407%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (379 samples, 0.33%)</title><rect x="86.8984%" y="245" width="0.3252%" height="15" fill="rgb(237,118,16)" fg:x="101261" fg:w="379"/><text x="87.1484%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (307 samples, 0.26%)</title><rect x="86.9602%" y="229" width="0.2635%" height="15" fill="rgb(241,17,19)" fg:x="101333" fg:w="307"/><text x="87.2102%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (250 samples, 0.21%)</title><rect x="87.0091%" y="213" width="0.2145%" height="15" fill="rgb(214,10,25)" fg:x="101390" fg:w="250"/><text x="87.2591%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (61 samples, 0.05%)</title><rect x="87.1713%" y="197" width="0.0523%" height="15" fill="rgb(238,37,29)" fg:x="101579" fg:w="61"/><text x="87.4213%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (61 samples, 0.05%)</title><rect x="87.1713%" y="181" width="0.0523%" height="15" fill="rgb(253,83,25)" fg:x="101579" fg:w="61"/><text x="87.4213%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (28 samples, 0.02%)</title><rect x="87.1996%" y="165" width="0.0240%" height="15" fill="rgb(234,192,12)" fg:x="101612" fg:w="28"/><text x="87.4496%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (28 samples, 0.02%)</title><rect x="87.1996%" y="149" width="0.0240%" height="15" fill="rgb(241,216,45)" fg:x="101612" fg:w="28"/><text x="87.4496%" y="159.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}}::{{closure}} (26 samples, 0.02%)</title><rect x="87.2014%" y="133" width="0.0223%" height="15" fill="rgb(242,22,33)" fg:x="101614" fg:w="26"/><text x="87.4514%" y="143.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::ptr_eq (26 samples, 0.02%)</title><rect x="87.2014%" y="117" width="0.0223%" height="15" fill="rgb(231,105,49)" fg:x="101614" fg:w="26"/><text x="87.4514%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (413 samples, 0.35%)</title><rect x="86.8907%" y="293" width="0.3544%" height="15" fill="rgb(218,204,15)" fg:x="101252" fg:w="413"/><text x="87.1407%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (413 samples, 0.35%)</title><rect x="86.8907%" y="277" width="0.3544%" height="15" fill="rgb(235,138,41)" fg:x="101252" fg:w="413"/><text x="87.1407%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (413 samples, 0.35%)</title><rect x="86.8907%" y="261" width="0.3544%" height="15" fill="rgb(246,0,9)" fg:x="101252" fg:w="413"/><text x="87.1407%" y="271.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (25 samples, 0.02%)</title><rect x="87.2237%" y="245" width="0.0215%" height="15" fill="rgb(210,74,4)" fg:x="101640" fg:w="25"/><text x="87.4737%" y="255.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (1,060 samples, 0.91%)</title><rect x="87.5386%" y="261" width="0.9097%" height="15" fill="rgb(250,60,41)" fg:x="102007" fg:w="1060"/><text x="87.7886%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (755 samples, 0.65%)</title><rect x="87.8004%" y="245" width="0.6479%" height="15" fill="rgb(220,115,12)" fg:x="102312" fg:w="755"/><text x="88.0504%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (755 samples, 0.65%)</title><rect x="87.8004%" y="229" width="0.6479%" height="15" fill="rgb(237,100,13)" fg:x="102312" fg:w="755"/><text x="88.0504%" y="239.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (1,312 samples, 1.13%)</title><rect x="87.3352%" y="277" width="1.1259%" height="15" fill="rgb(213,55,26)" fg:x="101770" fg:w="1312"/><text x="87.5852%" y="287.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (15 samples, 0.01%)</title><rect x="88.4483%" y="261" width="0.0129%" height="15" fill="rgb(216,17,4)" fg:x="103067" fg:w="15"/><text x="88.6983%" y="271.50"></text></g><g><title>async_executor::steal (1,419 samples, 1.22%)</title><rect x="87.2451%" y="293" width="1.2177%" height="15" fill="rgb(220,153,47)" fg:x="101665" fg:w="1419"/><text x="87.4951%" y="303.50"></text></g><g><title>concurrent_queue::full_fence (1,446 samples, 1.24%)</title><rect x="89.0679%" y="261" width="1.2409%" height="15" fill="rgb(215,131,9)" fg:x="103789" fg:w="1446"/><text x="89.3179%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1,404 samples, 1.20%)</title><rect x="89.1039%" y="245" width="1.2049%" height="15" fill="rgb(233,46,42)" fg:x="103831" fg:w="1404"/><text x="89.3539%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,404 samples, 1.20%)</title><rect x="89.1039%" y="229" width="1.2049%" height="15" fill="rgb(226,86,7)" fg:x="103831" fg:w="1404"/><text x="89.3539%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,404 samples, 1.20%)</title><rect x="89.1039%" y="213" width="1.2049%" height="15" fill="rgb(239,226,21)" fg:x="103831" fg:w="1404"/><text x="89.3539%" y="223.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,032 samples, 1.74%)</title><rect x="88.6568%" y="277" width="1.7438%" height="15" fill="rgb(244,137,22)" fg:x="103310" fg:w="2032"/><text x="88.9068%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (107 samples, 0.09%)</title><rect x="90.3088%" y="261" width="0.0918%" height="15" fill="rgb(211,139,35)" fg:x="105235" fg:w="107"/><text x="90.5588%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (68 samples, 0.06%)</title><rect x="90.3422%" y="245" width="0.0584%" height="15" fill="rgb(214,62,50)" fg:x="105274" fg:w="68"/><text x="90.5922%" y="255.50"></text></g><g><title>concurrent_queue::full_fence (206 samples, 0.18%)</title><rect x="90.4452%" y="261" width="0.1768%" height="15" fill="rgb(212,113,44)" fg:x="105394" fg:w="206"/><text x="90.6952%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (206 samples, 0.18%)</title><rect x="90.4452%" y="245" width="0.1768%" height="15" fill="rgb(226,150,43)" fg:x="105394" fg:w="206"/><text x="90.6952%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (206 samples, 0.18%)</title><rect x="90.4452%" y="229" width="0.1768%" height="15" fill="rgb(250,71,37)" fg:x="105394" fg:w="206"/><text x="90.6952%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (206 samples, 0.18%)</title><rect x="90.4452%" y="213" width="0.1768%" height="15" fill="rgb(219,76,19)" fg:x="105394" fg:w="206"/><text x="90.6952%" y="223.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (20 samples, 0.02%)</title><rect x="90.6246%" y="261" width="0.0172%" height="15" fill="rgb(250,39,11)" fg:x="105603" fg:w="20"/><text x="90.8746%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (20 samples, 0.02%)</title><rect x="90.6246%" y="245" width="0.0172%" height="15" fill="rgb(230,64,31)" fg:x="105603" fg:w="20"/><text x="90.8746%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.02%)</title><rect x="90.6246%" y="229" width="0.0172%" height="15" fill="rgb(208,222,23)" fg:x="105603" fg:w="20"/><text x="90.8746%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (15 samples, 0.01%)</title><rect x="90.6460%" y="261" width="0.0129%" height="15" fill="rgb(227,125,18)" fg:x="105628" fg:w="15"/><text x="90.8960%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="90.6460%" y="245" width="0.0129%" height="15" fill="rgb(234,210,9)" fg:x="105628" fg:w="15"/><text x="90.8960%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (77 samples, 0.07%)</title><rect x="90.6589%" y="261" width="0.0661%" height="15" fill="rgb(217,127,24)" fg:x="105643" fg:w="77"/><text x="90.9089%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (77 samples, 0.07%)</title><rect x="90.6589%" y="245" width="0.0661%" height="15" fill="rgb(239,141,48)" fg:x="105643" fg:w="77"/><text x="90.9089%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (102 samples, 0.09%)</title><rect x="90.7250%" y="261" width="0.0875%" height="15" fill="rgb(227,109,8)" fg:x="105720" fg:w="102"/><text x="90.9750%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_or (102 samples, 0.09%)</title><rect x="90.7250%" y="245" width="0.0875%" height="15" fill="rgb(235,184,23)" fg:x="105720" fg:w="102"/><text x="90.9750%" y="255.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,886 samples, 2.48%)</title><rect x="88.4629%" y="293" width="2.4767%" height="15" fill="rgb(227,226,48)" fg:x="103084" fg:w="2886"/><text x="88.7129%" y="303.50">co..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (628 samples, 0.54%)</title><rect x="90.4006%" y="277" width="0.5389%" height="15" fill="rgb(206,150,11)" fg:x="105342" fg:w="628"/><text x="90.6506%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (148 samples, 0.13%)</title><rect x="90.8125%" y="261" width="0.1270%" height="15" fill="rgb(254,2,33)" fg:x="105822" fg:w="148"/><text x="91.0625%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (148 samples, 0.13%)</title><rect x="90.8125%" y="245" width="0.1270%" height="15" fill="rgb(243,160,20)" fg:x="105822" fg:w="148"/><text x="91.0625%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (127 samples, 0.11%)</title><rect x="90.9395%" y="293" width="0.1090%" height="15" fill="rgb(218,208,30)" fg:x="105970" fg:w="127"/><text x="91.1895%" y="303.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (127 samples, 0.11%)</title><rect x="90.9395%" y="277" width="0.1090%" height="15" fill="rgb(224,120,49)" fg:x="105970" fg:w="127"/><text x="91.1895%" y="287.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (127 samples, 0.11%)</title><rect x="90.9395%" y="261" width="0.1090%" height="15" fill="rgb(246,12,2)" fg:x="105970" fg:w="127"/><text x="91.1895%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (127 samples, 0.11%)</title><rect x="90.9395%" y="245" width="0.1090%" height="15" fill="rgb(236,117,3)" fg:x="105970" fg:w="127"/><text x="91.1895%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (116 samples, 0.10%)</title><rect x="90.9490%" y="229" width="0.0995%" height="15" fill="rgb(216,128,52)" fg:x="105981" fg:w="116"/><text x="91.1990%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_sub (116 samples, 0.10%)</title><rect x="90.9490%" y="213" width="0.0995%" height="15" fill="rgb(246,145,19)" fg:x="105981" fg:w="116"/><text x="91.1990%" y="223.50"></text></g><g><title>fastrand::usize (35 samples, 0.03%)</title><rect x="91.0485%" y="293" width="0.0300%" height="15" fill="rgb(222,11,46)" fg:x="106097" fg:w="35"/><text x="91.2985%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (31 samples, 0.03%)</title><rect x="91.0519%" y="277" width="0.0266%" height="15" fill="rgb(245,82,36)" fg:x="106101" fg:w="31"/><text x="91.3019%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 0.03%)</title><rect x="91.0519%" y="261" width="0.0266%" height="15" fill="rgb(250,73,51)" fg:x="106101" fg:w="31"/><text x="91.3019%" y="271.50"></text></g><g><title>fastrand::usize::{{closure}} (20 samples, 0.02%)</title><rect x="91.0614%" y="245" width="0.0172%" height="15" fill="rgb(221,189,23)" fg:x="106112" fg:w="20"/><text x="91.3114%" y="255.50"></text></g><g><title>fastrand::Rng::usize (20 samples, 0.02%)</title><rect x="91.0614%" y="229" width="0.0172%" height="15" fill="rgb(210,33,7)" fg:x="106112" fg:w="20"/><text x="91.3114%" y="239.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (15 samples, 0.01%)</title><rect x="91.0657%" y="213" width="0.0129%" height="15" fill="rgb(210,107,22)" fg:x="106117" fg:w="15"/><text x="91.3157%" y="223.50"></text></g><g><title>std::sync::poison::Flag::get (18 samples, 0.02%)</title><rect x="91.0785%" y="245" width="0.0154%" height="15" fill="rgb(222,116,37)" fg:x="106132" fg:w="18"/><text x="91.3285%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (18 samples, 0.02%)</title><rect x="91.0785%" y="229" width="0.0154%" height="15" fill="rgb(254,17,48)" fg:x="106132" fg:w="18"/><text x="91.3285%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.02%)</title><rect x="91.0785%" y="213" width="0.0154%" height="15" fill="rgb(224,36,32)" fg:x="106132" fg:w="18"/><text x="91.3285%" y="223.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="91.0785%" y="277" width="0.0189%" height="15" fill="rgb(232,90,46)" fg:x="106132" fg:w="22"/><text x="91.3285%" y="287.50"></text></g><g><title>std::sync::poison::Flag::borrow (22 samples, 0.02%)</title><rect x="91.0785%" y="261" width="0.0189%" height="15" fill="rgb(241,66,40)" fg:x="106132" fg:w="22"/><text x="91.3285%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (250 samples, 0.21%)</title><rect x="91.1000%" y="245" width="0.2145%" height="15" fill="rgb(249,184,29)" fg:x="106157" fg:w="250"/><text x="91.3500%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (250 samples, 0.21%)</title><rect x="91.1000%" y="229" width="0.2145%" height="15" fill="rgb(231,181,1)" fg:x="106157" fg:w="250"/><text x="91.3500%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (42 samples, 0.04%)</title><rect x="91.3145%" y="245" width="0.0360%" height="15" fill="rgb(224,94,2)" fg:x="106407" fg:w="42"/><text x="91.5645%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (42 samples, 0.04%)</title><rect x="91.3145%" y="229" width="0.0360%" height="15" fill="rgb(229,170,15)" fg:x="106407" fg:w="42"/><text x="91.5645%" y="239.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (5,389 samples, 4.62%)</title><rect x="86.7302%" y="309" width="4.6246%" height="15" fill="rgb(240,127,35)" fg:x="101065" fg:w="5389"/><text x="86.9802%" y="319.50">async..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (322 samples, 0.28%)</title><rect x="91.0785%" y="293" width="0.2763%" height="15" fill="rgb(248,196,34)" fg:x="106132" fg:w="322"/><text x="91.3285%" y="303.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (300 samples, 0.26%)</title><rect x="91.0974%" y="277" width="0.2574%" height="15" fill="rgb(236,137,7)" fg:x="106154" fg:w="300"/><text x="91.3474%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (300 samples, 0.26%)</title><rect x="91.0974%" y="261" width="0.2574%" height="15" fill="rgb(235,127,16)" fg:x="106154" fg:w="300"/><text x="91.3474%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (27 samples, 0.02%)</title><rect x="91.3609%" y="293" width="0.0232%" height="15" fill="rgb(250,192,54)" fg:x="106461" fg:w="27"/><text x="91.6109%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="91.3609%" y="277" width="0.0232%" height="15" fill="rgb(218,98,20)" fg:x="106461" fg:w="27"/><text x="91.6109%" y="287.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (26 samples, 0.02%)</title><rect x="91.3617%" y="261" width="0.0223%" height="15" fill="rgb(230,176,47)" fg:x="106462" fg:w="26"/><text x="91.6117%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (26 samples, 0.02%)</title><rect x="91.3617%" y="245" width="0.0223%" height="15" fill="rgb(244,2,33)" fg:x="106462" fg:w="26"/><text x="91.6117%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (25 samples, 0.02%)</title><rect x="91.3626%" y="229" width="0.0215%" height="15" fill="rgb(231,100,17)" fg:x="106463" fg:w="25"/><text x="91.6126%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_swap (25 samples, 0.02%)</title><rect x="91.3626%" y="213" width="0.0215%" height="15" fill="rgb(245,23,12)" fg:x="106463" fg:w="25"/><text x="91.6126%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (46 samples, 0.04%)</title><rect x="91.3840%" y="293" width="0.0395%" height="15" fill="rgb(249,55,22)" fg:x="106488" fg:w="46"/><text x="91.6340%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (46 samples, 0.04%)</title><rect x="91.3840%" y="277" width="0.0395%" height="15" fill="rgb(207,134,9)" fg:x="106488" fg:w="46"/><text x="91.6340%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (23 samples, 0.02%)</title><rect x="91.4407%" y="213" width="0.0197%" height="15" fill="rgb(218,134,0)" fg:x="106554" fg:w="23"/><text x="91.6907%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (23 samples, 0.02%)</title><rect x="91.4407%" y="197" width="0.0197%" height="15" fill="rgb(213,212,33)" fg:x="106554" fg:w="23"/><text x="91.6907%" y="207.50"></text></g><g><title>async_io::reactor::Reactor::notify (85 samples, 0.07%)</title><rect x="91.4312%" y="245" width="0.0729%" height="15" fill="rgb(252,106,18)" fg:x="106543" fg:w="85"/><text x="91.6812%" y="255.50"></text></g><g><title>polling::Poller::notify (76 samples, 0.07%)</title><rect x="91.4390%" y="229" width="0.0652%" height="15" fill="rgb(208,126,42)" fg:x="106552" fg:w="76"/><text x="91.6890%" y="239.50"></text></g><g><title>polling::epoll::Poller::notify (50 samples, 0.04%)</title><rect x="91.4613%" y="213" width="0.0429%" height="15" fill="rgb(246,175,29)" fg:x="106578" fg:w="50"/><text x="91.7113%" y="223.50"></text></g><g><title>__libc_write (46 samples, 0.04%)</title><rect x="91.4647%" y="197" width="0.0395%" height="15" fill="rgb(215,13,50)" fg:x="106582" fg:w="46"/><text x="91.7147%" y="207.50"></text></g><g><title>__pthread_enable_asynccancel (13 samples, 0.01%)</title><rect x="91.4930%" y="181" width="0.0112%" height="15" fill="rgb(216,172,15)" fg:x="106615" fg:w="13"/><text x="91.7430%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (81 samples, 0.07%)</title><rect x="91.5471%" y="213" width="0.0695%" height="15" fill="rgb(212,103,13)" fg:x="106678" fg:w="81"/><text x="91.7971%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_swap (81 samples, 0.07%)</title><rect x="91.5471%" y="197" width="0.0695%" height="15" fill="rgb(231,171,36)" fg:x="106678" fg:w="81"/><text x="91.7971%" y="207.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (29 samples, 0.02%)</title><rect x="91.6166%" y="213" width="0.0249%" height="15" fill="rgb(250,123,20)" fg:x="106759" fg:w="29"/><text x="91.8666%" y="223.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (29 samples, 0.02%)</title><rect x="91.6166%" y="197" width="0.0249%" height="15" fill="rgb(212,53,50)" fg:x="106759" fg:w="29"/><text x="91.8666%" y="207.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (29 samples, 0.02%)</title><rect x="91.6166%" y="181" width="0.0249%" height="15" fill="rgb(243,54,12)" fg:x="106759" fg:w="29"/><text x="91.8666%" y="191.50"></text></g><g><title>std::sys::unix::futex::futex_wake (20 samples, 0.02%)</title><rect x="91.6243%" y="165" width="0.0172%" height="15" fill="rgb(234,101,34)" fg:x="106768" fg:w="20"/><text x="91.8743%" y="175.50"></text></g><g><title>syscall (19 samples, 0.02%)</title><rect x="91.6252%" y="149" width="0.0163%" height="15" fill="rgb(254,67,22)" fg:x="106769" fg:w="19"/><text x="91.8752%" y="159.50"></text></g><g><title>parking::Unparker::unpark (160 samples, 0.14%)</title><rect x="91.5119%" y="245" width="0.1373%" height="15" fill="rgb(250,35,47)" fg:x="106637" fg:w="160"/><text x="91.7619%" y="255.50"></text></g><g><title>parking::Inner::unpark (128 samples, 0.11%)</title><rect x="91.5394%" y="229" width="0.1098%" height="15" fill="rgb(226,126,38)" fg:x="106669" fg:w="128"/><text x="91.7894%" y="239.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (12 samples, 0.01%)</title><rect x="91.6492%" y="213" width="0.0103%" height="15" fill="rgb(216,138,53)" fg:x="106797" fg:w="12"/><text x="91.8992%" y="223.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="91.6492%" y="197" width="0.0103%" height="15" fill="rgb(246,199,43)" fg:x="106797" fg:w="12"/><text x="91.8992%" y="207.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="91.6492%" y="181" width="0.0103%" height="15" fill="rgb(232,125,11)" fg:x="106797" fg:w="12"/><text x="91.8992%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.01%)</title><rect x="91.6492%" y="165" width="0.0103%" height="15" fill="rgb(218,219,45)" fg:x="106797" fg:w="12"/><text x="91.8992%" y="175.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (277 samples, 0.24%)</title><rect x="91.4235%" y="261" width="0.2377%" height="15" fill="rgb(216,102,54)" fg:x="106534" fg:w="277"/><text x="91.6735%" y="271.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.01%)</title><rect x="91.6492%" y="245" width="0.0120%" height="15" fill="rgb(250,228,7)" fg:x="106797" fg:w="14"/><text x="91.8992%" y="255.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.01%)</title><rect x="91.6492%" y="229" width="0.0120%" height="15" fill="rgb(226,125,25)" fg:x="106797" fg:w="14"/><text x="91.8992%" y="239.50"></text></g><g><title>core::task::wake::Waker::wake (354 samples, 0.30%)</title><rect x="91.4235%" y="293" width="0.3038%" height="15" fill="rgb(224,165,27)" fg:x="106534" fg:w="354"/><text x="91.6735%" y="303.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (354 samples, 0.30%)</title><rect x="91.4235%" y="277" width="0.3038%" height="15" fill="rgb(233,86,3)" fg:x="106534" fg:w="354"/><text x="91.6735%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (77 samples, 0.07%)</title><rect x="91.6612%" y="261" width="0.0661%" height="15" fill="rgb(228,116,20)" fg:x="106811" fg:w="77"/><text x="91.9112%" y="271.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.07%)</title><rect x="91.6612%" y="245" width="0.0661%" height="15" fill="rgb(209,192,17)" fg:x="106811" fg:w="77"/><text x="91.9112%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (75 samples, 0.06%)</title><rect x="91.6629%" y="229" width="0.0644%" height="15" fill="rgb(224,88,34)" fg:x="106813" fg:w="75"/><text x="91.9129%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_sub (75 samples, 0.06%)</title><rect x="91.6629%" y="213" width="0.0644%" height="15" fill="rgb(233,38,6)" fg:x="106813" fg:w="75"/><text x="91.9129%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (18 samples, 0.02%)</title><rect x="91.7307%" y="245" width="0.0154%" height="15" fill="rgb(212,59,30)" fg:x="106892" fg:w="18"/><text x="91.9807%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="91.7307%" y="229" width="0.0154%" height="15" fill="rgb(213,80,3)" fg:x="106892" fg:w="18"/><text x="91.9807%" y="239.50"></text></g><g><title>async_executor::State::notify (464 samples, 0.40%)</title><rect x="91.3549%" y="309" width="0.3982%" height="15" fill="rgb(251,178,7)" fg:x="106454" fg:w="464"/><text x="91.6049%" y="319.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.03%)</title><rect x="91.7273%" y="293" width="0.0257%" height="15" fill="rgb(213,154,26)" fg:x="106888" fg:w="30"/><text x="91.9773%" y="303.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (26 samples, 0.02%)</title><rect x="91.7307%" y="277" width="0.0223%" height="15" fill="rgb(238,165,49)" fg:x="106892" fg:w="26"/><text x="91.9807%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (26 samples, 0.02%)</title><rect x="91.7307%" y="261" width="0.0223%" height="15" fill="rgb(248,91,46)" fg:x="106892" fg:w="26"/><text x="91.9807%" y="271.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (84 samples, 0.07%)</title><rect x="91.7659%" y="277" width="0.0721%" height="15" fill="rgb(244,21,52)" fg:x="106933" fg:w="84"/><text x="92.0159%" y="287.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (84 samples, 0.07%)</title><rect x="91.7659%" y="261" width="0.0721%" height="15" fill="rgb(247,122,20)" fg:x="106933" fg:w="84"/><text x="92.0159%" y="271.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (82 samples, 0.07%)</title><rect x="91.7676%" y="245" width="0.0704%" height="15" fill="rgb(218,27,9)" fg:x="106935" fg:w="82"/><text x="92.0176%" y="255.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (82 samples, 0.07%)</title><rect x="91.7676%" y="229" width="0.0704%" height="15" fill="rgb(246,7,6)" fg:x="106935" fg:w="82"/><text x="92.0176%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (82 samples, 0.07%)</title><rect x="91.7676%" y="213" width="0.0704%" height="15" fill="rgb(227,135,54)" fg:x="106935" fg:w="82"/><text x="92.0176%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_add (82 samples, 0.07%)</title><rect x="91.7676%" y="197" width="0.0704%" height="15" fill="rgb(247,14,11)" fg:x="106935" fg:w="82"/><text x="92.0176%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (16 samples, 0.01%)</title><rect x="91.8380%" y="277" width="0.0137%" height="15" fill="rgb(206,149,34)" fg:x="107017" fg:w="16"/><text x="92.0880%" y="287.50"></text></g><g><title>async_executor::Sleepers::insert (122 samples, 0.10%)</title><rect x="91.7659%" y="293" width="0.1047%" height="15" fill="rgb(227,228,4)" fg:x="106933" fg:w="122"/><text x="92.0159%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.02%)</title><rect x="91.8517%" y="277" width="0.0189%" height="15" fill="rgb(238,218,28)" fg:x="107033" fg:w="22"/><text x="92.1017%" y="287.50"></text></g><g><title>core::ptr::write (17 samples, 0.01%)</title><rect x="91.8560%" y="261" width="0.0146%" height="15" fill="rgb(252,86,40)" fg:x="107038" fg:w="17"/><text x="92.1060%" y="271.50"></text></g><g><title>async_executor::Sleepers::is_notified (20 samples, 0.02%)</title><rect x="91.8706%" y="293" width="0.0172%" height="15" fill="rgb(251,225,11)" fg:x="107055" fg:w="20"/><text x="92.1206%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="91.9444%" y="277" width="0.0163%" height="15" fill="rgb(206,46,49)" fg:x="107141" fg:w="19"/><text x="92.1944%" y="287.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (88 samples, 0.08%)</title><rect x="91.9607%" y="277" width="0.0755%" height="15" fill="rgb(245,128,24)" fg:x="107160" fg:w="88"/><text x="92.2107%" y="287.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (87 samples, 0.07%)</title><rect x="91.9616%" y="261" width="0.0747%" height="15" fill="rgb(219,177,34)" fg:x="107161" fg:w="87"/><text x="92.2116%" y="271.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (87 samples, 0.07%)</title><rect x="91.9616%" y="245" width="0.0747%" height="15" fill="rgb(218,60,48)" fg:x="107161" fg:w="87"/><text x="92.2116%" y="255.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (87 samples, 0.07%)</title><rect x="91.9616%" y="229" width="0.0747%" height="15" fill="rgb(221,11,5)" fg:x="107161" fg:w="87"/><text x="92.2116%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (87 samples, 0.07%)</title><rect x="91.9616%" y="213" width="0.0747%" height="15" fill="rgb(220,148,13)" fg:x="107161" fg:w="87"/><text x="92.2116%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_add (87 samples, 0.07%)</title><rect x="91.9616%" y="197" width="0.0747%" height="15" fill="rgb(210,16,3)" fg:x="107161" fg:w="87"/><text x="92.2116%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (21 samples, 0.02%)</title><rect x="92.0362%" y="277" width="0.0180%" height="15" fill="rgb(236,80,2)" fg:x="107248" fg:w="21"/><text x="92.2862%" y="287.50"></text></g><g><title>core::ptr::write (14 samples, 0.01%)</title><rect x="92.0423%" y="261" width="0.0120%" height="15" fill="rgb(239,129,19)" fg:x="107255" fg:w="14"/><text x="92.2923%" y="271.50"></text></g><g><title>async_executor::Sleepers::update (215 samples, 0.18%)</title><rect x="91.8878%" y="293" width="0.1845%" height="15" fill="rgb(220,106,35)" fg:x="107075" fg:w="215"/><text x="92.1378%" y="303.50"></text></g><g><title>core::task::wake::Waker::will_wake (21 samples, 0.02%)</title><rect x="92.0543%" y="277" width="0.0180%" height="15" fill="rgb(252,139,45)" fg:x="107269" fg:w="21"/><text x="92.3043%" y="287.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (21 samples, 0.02%)</title><rect x="92.0543%" y="261" width="0.0180%" height="15" fill="rgb(229,8,36)" fg:x="107269" fg:w="21"/><text x="92.3043%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.01%)</title><rect x="92.0620%" y="245" width="0.0103%" height="15" fill="rgb(230,126,33)" fg:x="107278" fg:w="12"/><text x="92.3120%" y="255.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (12 samples, 0.01%)</title><rect x="92.0620%" y="229" width="0.0103%" height="15" fill="rgb(239,140,21)" fg:x="107278" fg:w="12"/><text x="92.3120%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (104 samples, 0.09%)</title><rect x="92.0792%" y="229" width="0.0892%" height="15" fill="rgb(254,104,9)" fg:x="107298" fg:w="104"/><text x="92.3292%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_swap (104 samples, 0.09%)</title><rect x="92.0792%" y="213" width="0.0892%" height="15" fill="rgb(239,52,14)" fg:x="107298" fg:w="104"/><text x="92.3292%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (114 samples, 0.10%)</title><rect x="92.0723%" y="293" width="0.0978%" height="15" fill="rgb(208,227,44)" fg:x="107290" fg:w="114"/><text x="92.3223%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.10%)</title><rect x="92.0723%" y="277" width="0.0978%" height="15" fill="rgb(246,18,19)" fg:x="107290" fg:w="114"/><text x="92.3223%" y="287.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (106 samples, 0.09%)</title><rect x="92.0792%" y="261" width="0.0910%" height="15" fill="rgb(235,228,25)" fg:x="107298" fg:w="106"/><text x="92.3292%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (106 samples, 0.09%)</title><rect x="92.0792%" y="245" width="0.0910%" height="15" fill="rgb(240,156,20)" fg:x="107298" fg:w="106"/><text x="92.3292%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (196 samples, 0.17%)</title><rect x="92.1701%" y="293" width="0.1682%" height="15" fill="rgb(224,8,20)" fg:x="107404" fg:w="196"/><text x="92.4201%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (196 samples, 0.17%)</title><rect x="92.1701%" y="277" width="0.1682%" height="15" fill="rgb(214,12,52)" fg:x="107404" fg:w="196"/><text x="92.4201%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (137 samples, 0.12%)</title><rect x="92.3383%" y="293" width="0.1176%" height="15" fill="rgb(211,220,47)" fg:x="107600" fg:w="137"/><text x="92.5883%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_store (137 samples, 0.12%)</title><rect x="92.3383%" y="277" width="0.1176%" height="15" fill="rgb(250,173,5)" fg:x="107600" fg:w="137"/><text x="92.5883%" y="287.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="92.4559%" y="277" width="0.0172%" height="15" fill="rgb(250,125,52)" fg:x="107737" fg:w="20"/><text x="92.7059%" y="287.50"></text></g><g><title>std::sync::poison::Flag::borrow (20 samples, 0.02%)</title><rect x="92.4559%" y="261" width="0.0172%" height="15" fill="rgb(209,133,18)" fg:x="107737" fg:w="20"/><text x="92.7059%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (149 samples, 0.13%)</title><rect x="92.4765%" y="245" width="0.1279%" height="15" fill="rgb(216,173,22)" fg:x="107761" fg:w="149"/><text x="92.7265%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (149 samples, 0.13%)</title><rect x="92.4765%" y="229" width="0.1279%" height="15" fill="rgb(205,3,22)" fg:x="107761" fg:w="149"/><text x="92.7265%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (21 samples, 0.02%)</title><rect x="92.6069%" y="229" width="0.0180%" height="15" fill="rgb(248,22,20)" fg:x="107913" fg:w="21"/><text x="92.8569%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (21 samples, 0.02%)</title><rect x="92.6069%" y="213" width="0.0180%" height="15" fill="rgb(233,6,29)" fg:x="107913" fg:w="21"/><text x="92.8569%" y="223.50"></text></g><g><title>async_executor::Ticker::sleep (1,034 samples, 0.89%)</title><rect x="91.7531%" y="309" width="0.8873%" height="15" fill="rgb(240,22,54)" fg:x="106918" fg:w="1034"/><text x="92.0031%" y="319.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (215 samples, 0.18%)</title><rect x="92.4559%" y="293" width="0.1845%" height="15" fill="rgb(231,133,32)" fg:x="107737" fg:w="215"/><text x="92.7059%" y="303.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (195 samples, 0.17%)</title><rect x="92.4731%" y="277" width="0.1673%" height="15" fill="rgb(248,193,4)" fg:x="107757" fg:w="195"/><text x="92.7231%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (195 samples, 0.17%)</title><rect x="92.4731%" y="261" width="0.1673%" height="15" fill="rgb(211,178,46)" fg:x="107757" fg:w="195"/><text x="92.7231%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (42 samples, 0.04%)</title><rect x="92.6044%" y="245" width="0.0360%" height="15" fill="rgb(224,5,42)" fg:x="107910" fg:w="42"/><text x="92.8544%" y="255.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (15 samples, 0.01%)</title><rect x="92.6275%" y="229" width="0.0129%" height="15" fill="rgb(239,176,25)" fg:x="107937" fg:w="15"/><text x="92.8775%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="92.6644%" y="277" width="0.0103%" height="15" fill="rgb(245,187,50)" fg:x="107980" fg:w="12"/><text x="92.9144%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (12 samples, 0.01%)</title><rect x="92.6644%" y="261" width="0.0103%" height="15" fill="rgb(248,24,15)" fg:x="107980" fg:w="12"/><text x="92.9144%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (12 samples, 0.01%)</title><rect x="92.6644%" y="245" width="0.0103%" height="15" fill="rgb(205,166,13)" fg:x="107980" fg:w="12"/><text x="92.9144%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.01%)</title><rect x="92.6747%" y="277" width="0.0103%" height="15" fill="rgb(208,114,23)" fg:x="107992" fg:w="12"/><text x="92.9247%" y="287.50"></text></g><g><title>async_executor::Sleepers::remove (89 samples, 0.08%)</title><rect x="92.6524%" y="293" width="0.0764%" height="15" fill="rgb(239,127,18)" fg:x="107966" fg:w="89"/><text x="92.9024%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (48 samples, 0.04%)</title><rect x="92.6876%" y="277" width="0.0412%" height="15" fill="rgb(219,154,28)" fg:x="108007" fg:w="48"/><text x="92.9376%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (48 samples, 0.04%)</title><rect x="92.6876%" y="261" width="0.0412%" height="15" fill="rgb(225,157,23)" fg:x="108007" fg:w="48"/><text x="92.9376%" y="271.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (48 samples, 0.04%)</title><rect x="92.6876%" y="245" width="0.0412%" height="15" fill="rgb(219,8,6)" fg:x="108007" fg:w="48"/><text x="92.9376%" y="255.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (48 samples, 0.04%)</title><rect x="92.6876%" y="229" width="0.0412%" height="15" fill="rgb(212,47,6)" fg:x="108007" fg:w="48"/><text x="92.9376%" y="239.50"></text></g><g><title>core::mem::drop (45 samples, 0.04%)</title><rect x="92.6902%" y="213" width="0.0386%" height="15" fill="rgb(224,190,4)" fg:x="108010" fg:w="45"/><text x="92.9402%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (45 samples, 0.04%)</title><rect x="92.6902%" y="197" width="0.0386%" height="15" fill="rgb(239,183,29)" fg:x="108010" fg:w="45"/><text x="92.9402%" y="207.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="92.6902%" y="181" width="0.0386%" height="15" fill="rgb(213,57,7)" fg:x="108010" fg:w="45"/><text x="92.9402%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (45 samples, 0.04%)</title><rect x="92.6902%" y="165" width="0.0386%" height="15" fill="rgb(216,148,1)" fg:x="108010" fg:w="45"/><text x="92.9402%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_sub (45 samples, 0.04%)</title><rect x="92.6902%" y="149" width="0.0386%" height="15" fill="rgb(236,182,29)" fg:x="108010" fg:w="45"/><text x="92.9402%" y="159.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (26 samples, 0.02%)</title><rect x="92.7314%" y="229" width="0.0223%" height="15" fill="rgb(244,120,48)" fg:x="108058" fg:w="26"/><text x="92.9814%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_swap (26 samples, 0.02%)</title><rect x="92.7314%" y="213" width="0.0223%" height="15" fill="rgb(206,71,34)" fg:x="108058" fg:w="26"/><text x="92.9814%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (31 samples, 0.03%)</title><rect x="92.7288%" y="293" width="0.0266%" height="15" fill="rgb(242,32,6)" fg:x="108055" fg:w="31"/><text x="92.9788%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="92.7288%" y="277" width="0.0266%" height="15" fill="rgb(241,35,3)" fg:x="108055" fg:w="31"/><text x="92.9788%" y="287.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (28 samples, 0.02%)</title><rect x="92.7314%" y="261" width="0.0240%" height="15" fill="rgb(222,62,19)" fg:x="108058" fg:w="28"/><text x="92.9814%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (28 samples, 0.02%)</title><rect x="92.7314%" y="245" width="0.0240%" height="15" fill="rgb(223,110,41)" fg:x="108058" fg:w="28"/><text x="92.9814%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (45 samples, 0.04%)</title><rect x="92.7554%" y="293" width="0.0386%" height="15" fill="rgb(208,224,4)" fg:x="108086" fg:w="45"/><text x="93.0054%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (45 samples, 0.04%)</title><rect x="92.7554%" y="277" width="0.0386%" height="15" fill="rgb(241,137,19)" fg:x="108086" fg:w="45"/><text x="93.0054%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (57 samples, 0.05%)</title><rect x="92.7940%" y="293" width="0.0489%" height="15" fill="rgb(244,24,17)" fg:x="108131" fg:w="57"/><text x="93.0440%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (57 samples, 0.05%)</title><rect x="92.7940%" y="277" width="0.0489%" height="15" fill="rgb(245,178,49)" fg:x="108131" fg:w="57"/><text x="93.0440%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (55 samples, 0.05%)</title><rect x="92.8524%" y="245" width="0.0472%" height="15" fill="rgb(219,160,38)" fg:x="108199" fg:w="55"/><text x="93.1024%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (55 samples, 0.05%)</title><rect x="92.8524%" y="229" width="0.0472%" height="15" fill="rgb(228,137,14)" fg:x="108199" fg:w="55"/><text x="93.1024%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (18 samples, 0.02%)</title><rect x="92.9004%" y="229" width="0.0154%" height="15" fill="rgb(237,134,11)" fg:x="108255" fg:w="18"/><text x="93.1504%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="92.9004%" y="213" width="0.0154%" height="15" fill="rgb(211,126,44)" fg:x="108255" fg:w="18"/><text x="93.1504%" y="223.50"></text></g><g><title>core::hint::spin_loop (12 samples, 0.01%)</title><rect x="92.9167%" y="213" width="0.0103%" height="15" fill="rgb(226,171,33)" fg:x="108274" fg:w="12"/><text x="93.1667%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (12 samples, 0.01%)</title><rect x="92.9167%" y="197" width="0.0103%" height="15" fill="rgb(253,99,13)" fg:x="108274" fg:w="12"/><text x="93.1667%" y="207.50"></text></g><g><title>async_executor::Ticker::wake (346 samples, 0.30%)</title><rect x="92.6404%" y="309" width="0.2969%" height="15" fill="rgb(244,48,7)" fg:x="107952" fg:w="346"/><text x="92.8904%" y="319.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (110 samples, 0.09%)</title><rect x="92.8429%" y="293" width="0.0944%" height="15" fill="rgb(244,217,54)" fg:x="108188" fg:w="110"/><text x="93.0929%" y="303.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (101 samples, 0.09%)</title><rect x="92.8506%" y="277" width="0.0867%" height="15" fill="rgb(224,15,18)" fg:x="108197" fg:w="101"/><text x="93.1006%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (101 samples, 0.09%)</title><rect x="92.8506%" y="261" width="0.0867%" height="15" fill="rgb(244,99,12)" fg:x="108197" fg:w="101"/><text x="93.1006%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (44 samples, 0.04%)</title><rect x="92.8996%" y="245" width="0.0378%" height="15" fill="rgb(233,226,8)" fg:x="108254" fg:w="44"/><text x="93.1496%" y="255.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (24 samples, 0.02%)</title><rect x="92.9167%" y="229" width="0.0206%" height="15" fill="rgb(229,211,3)" fg:x="108274" fg:w="24"/><text x="93.1667%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (12 samples, 0.01%)</title><rect x="92.9270%" y="213" width="0.0103%" height="15" fill="rgb(216,140,21)" fg:x="108286" fg:w="12"/><text x="93.1770%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="92.9270%" y="197" width="0.0103%" height="15" fill="rgb(234,122,30)" fg:x="108286" fg:w="12"/><text x="93.1770%" y="207.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,272 samples, 6.24%)</title><rect x="86.7019%" y="373" width="6.2406%" height="15" fill="rgb(236,25,46)" fg:x="101032" fg:w="7272"/><text x="86.9519%" y="383.50">&lt;core::f..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (7,272 samples, 6.24%)</title><rect x="86.7019%" y="357" width="6.2406%" height="15" fill="rgb(217,52,54)" fg:x="101032" fg:w="7272"/><text x="86.9519%" y="367.50">async_ex..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (7,259 samples, 6.23%)</title><rect x="86.7131%" y="341" width="6.2294%" height="15" fill="rgb(222,29,26)" fg:x="101045" fg:w="7259"/><text x="86.9631%" y="351.50">&lt;futures..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (7,249 samples, 6.22%)</title><rect x="86.7216%" y="325" width="6.2208%" height="15" fill="rgb(216,177,29)" fg:x="101055" fg:w="7249"/><text x="86.9716%" y="335.50">async_ex..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,344 samples, 6.30%)</title><rect x="86.6787%" y="405" width="6.3023%" height="15" fill="rgb(247,136,51)" fg:x="101005" fg:w="7344"/><text x="86.9287%" y="415.50">&lt;core::f..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (7,339 samples, 6.30%)</title><rect x="86.6830%" y="389" width="6.2981%" height="15" fill="rgb(231,47,47)" fg:x="101010" fg:w="7339"/><text x="86.9330%" y="399.50">async_ex..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (45 samples, 0.04%)</title><rect x="92.9425%" y="373" width="0.0386%" height="15" fill="rgb(211,192,36)" fg:x="108304" fg:w="45"/><text x="93.1925%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_add (45 samples, 0.04%)</title><rect x="92.9425%" y="357" width="0.0386%" height="15" fill="rgb(229,156,32)" fg:x="108304" fg:w="45"/><text x="93.1925%" y="367.50"></text></g><g><title>[libc-2.31.so] (53 samples, 0.05%)</title><rect x="93.1459%" y="261" width="0.0455%" height="15" fill="rgb(248,213,20)" fg:x="108541" fg:w="53"/><text x="93.3959%" y="271.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="93.4685%" y="197" width="0.0103%" height="15" fill="rgb(217,64,7)" fg:x="108917" fg:w="12"/><text x="93.7185%" y="207.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (132 samples, 0.11%)</title><rect x="93.4788%" y="197" width="0.1133%" height="15" fill="rgb(232,142,8)" fg:x="108929" fg:w="132"/><text x="93.7288%" y="207.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (132 samples, 0.11%)</title><rect x="93.4788%" y="181" width="0.1133%" height="15" fill="rgb(224,92,44)" fg:x="108929" fg:w="132"/><text x="93.7288%" y="191.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (151 samples, 0.13%)</title><rect x="93.5981%" y="197" width="0.1296%" height="15" fill="rgb(214,169,17)" fg:x="109068" fg:w="151"/><text x="93.8481%" y="207.50"></text></g><g><title>[libc-2.31.so] (70 samples, 0.06%)</title><rect x="93.7285%" y="181" width="0.0601%" height="15" fill="rgb(210,59,37)" fg:x="109220" fg:w="70"/><text x="93.9785%" y="191.50"></text></g><g><title>[libc-2.31.so] (180 samples, 0.15%)</title><rect x="93.7998%" y="165" width="0.1545%" height="15" fill="rgb(214,116,48)" fg:x="109303" fg:w="180"/><text x="94.0498%" y="175.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (45 samples, 0.04%)</title><rect x="94.0074%" y="53" width="0.0386%" height="15" fill="rgb(244,191,6)" fg:x="109545" fg:w="45"/><text x="94.2574%" y="63.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (307 samples, 0.26%)</title><rect x="93.7886%" y="181" width="0.2635%" height="15" fill="rgb(241,50,52)" fg:x="109290" fg:w="307"/><text x="94.0386%" y="191.50"></text></g><g><title>alloc::alloc::exchange_malloc (114 samples, 0.10%)</title><rect x="93.9542%" y="165" width="0.0978%" height="15" fill="rgb(236,75,39)" fg:x="109483" fg:w="114"/><text x="94.2042%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (114 samples, 0.10%)</title><rect x="93.9542%" y="149" width="0.0978%" height="15" fill="rgb(236,99,0)" fg:x="109483" fg:w="114"/><text x="94.2042%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (114 samples, 0.10%)</title><rect x="93.9542%" y="133" width="0.0978%" height="15" fill="rgb(207,202,15)" fg:x="109483" fg:w="114"/><text x="94.2042%" y="143.50"></text></g><g><title>alloc::alloc::alloc (112 samples, 0.10%)</title><rect x="93.9560%" y="117" width="0.0961%" height="15" fill="rgb(233,207,14)" fg:x="109485" fg:w="112"/><text x="94.2060%" y="127.50"></text></g><g><title>__rg_alloc (112 samples, 0.10%)</title><rect x="93.9560%" y="101" width="0.0961%" height="15" fill="rgb(226,27,51)" fg:x="109485" fg:w="112"/><text x="94.2060%" y="111.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (112 samples, 0.10%)</title><rect x="93.9560%" y="85" width="0.0961%" height="15" fill="rgb(206,104,42)" fg:x="109485" fg:w="112"/><text x="94.2060%" y="95.50"></text></g><g><title>sn_rust_alloc (99 samples, 0.08%)</title><rect x="93.9671%" y="69" width="0.0850%" height="15" fill="rgb(212,225,4)" fg:x="109498" fg:w="99"/><text x="94.2171%" y="79.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (395 samples, 0.34%)</title><rect x="93.7277%" y="197" width="0.3390%" height="15" fill="rgb(233,96,42)" fg:x="109219" fg:w="395"/><text x="93.9777%" y="207.50"></text></g><g><title>core::future::from_generator (17 samples, 0.01%)</title><rect x="94.0521%" y="181" width="0.0146%" height="15" fill="rgb(229,21,32)" fg:x="109597" fg:w="17"/><text x="94.3021%" y="191.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (36 samples, 0.03%)</title><rect x="94.0787%" y="181" width="0.0309%" height="15" fill="rgb(226,216,24)" fg:x="109628" fg:w="36"/><text x="94.3287%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="94.0924%" y="165" width="0.0172%" height="15" fill="rgb(221,163,17)" fg:x="109644" fg:w="20"/><text x="94.3424%" y="175.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (312 samples, 0.27%)</title><rect x="94.0667%" y="197" width="0.2677%" height="15" fill="rgb(216,216,42)" fg:x="109614" fg:w="312"/><text x="94.3167%" y="207.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (262 samples, 0.22%)</title><rect x="94.1096%" y="181" width="0.2248%" height="15" fill="rgb(240,118,7)" fg:x="109664" fg:w="262"/><text x="94.3596%" y="191.50"></text></g><g><title>[libc-2.31.so] (840 samples, 0.72%)</title><rect x="94.3344%" y="197" width="0.7209%" height="15" fill="rgb(221,67,37)" fg:x="109926" fg:w="840"/><text x="94.5844%" y="207.50"></text></g><g><title>sn_rust_dealloc (51 samples, 0.04%)</title><rect x="95.0630%" y="37" width="0.0438%" height="15" fill="rgb(241,32,44)" fg:x="110775" fg:w="51"/><text x="95.3130%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (61 samples, 0.05%)</title><rect x="95.0553%" y="197" width="0.0523%" height="15" fill="rgb(235,204,43)" fg:x="110766" fg:w="61"/><text x="95.3053%" y="207.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.05%)</title><rect x="95.0553%" y="181" width="0.0523%" height="15" fill="rgb(213,116,10)" fg:x="110766" fg:w="61"/><text x="95.3053%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (59 samples, 0.05%)</title><rect x="95.0570%" y="165" width="0.0506%" height="15" fill="rgb(239,15,48)" fg:x="110768" fg:w="59"/><text x="95.3070%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (59 samples, 0.05%)</title><rect x="95.0570%" y="149" width="0.0506%" height="15" fill="rgb(207,123,36)" fg:x="110768" fg:w="59"/><text x="95.3070%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (59 samples, 0.05%)</title><rect x="95.0570%" y="133" width="0.0506%" height="15" fill="rgb(209,103,30)" fg:x="110768" fg:w="59"/><text x="95.3070%" y="143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.05%)</title><rect x="95.0570%" y="117" width="0.0506%" height="15" fill="rgb(238,100,19)" fg:x="110768" fg:w="59"/><text x="95.3070%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (59 samples, 0.05%)</title><rect x="95.0570%" y="101" width="0.0506%" height="15" fill="rgb(244,30,14)" fg:x="110768" fg:w="59"/><text x="95.3070%" y="111.50"></text></g><g><title>alloc::alloc::dealloc (59 samples, 0.05%)</title><rect x="95.0570%" y="85" width="0.0506%" height="15" fill="rgb(249,174,6)" fg:x="110768" fg:w="59"/><text x="95.3070%" y="95.50"></text></g><g><title>__rg_dealloc (59 samples, 0.05%)</title><rect x="95.0570%" y="69" width="0.0506%" height="15" fill="rgb(235,213,41)" fg:x="110768" fg:w="59"/><text x="95.3070%" y="79.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (59 samples, 0.05%)</title><rect x="95.0570%" y="53" width="0.0506%" height="15" fill="rgb(213,118,6)" fg:x="110768" fg:w="59"/><text x="95.3070%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (27 samples, 0.02%)</title><rect x="95.1076%" y="197" width="0.0232%" height="15" fill="rgb(235,44,51)" fg:x="110827" fg:w="27"/><text x="95.3576%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (27 samples, 0.02%)</title><rect x="95.1076%" y="181" width="0.0232%" height="15" fill="rgb(217,9,53)" fg:x="110827" fg:w="27"/><text x="95.3576%" y="191.50"></text></g><g><title>sn_rust_dealloc (32 samples, 0.03%)</title><rect x="95.1437%" y="85" width="0.0275%" height="15" fill="rgb(237,172,34)" fg:x="110869" fg:w="32"/><text x="95.3937%" y="95.50"></text></g><g><title>alloc::alloc::box_free (42 samples, 0.04%)</title><rect x="95.1368%" y="165" width="0.0360%" height="15" fill="rgb(206,206,11)" fg:x="110861" fg:w="42"/><text x="95.3868%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (41 samples, 0.04%)</title><rect x="95.1376%" y="149" width="0.0352%" height="15" fill="rgb(214,149,29)" fg:x="110862" fg:w="41"/><text x="95.3876%" y="159.50"></text></g><g><title>alloc::alloc::dealloc (37 samples, 0.03%)</title><rect x="95.1411%" y="133" width="0.0318%" height="15" fill="rgb(208,123,3)" fg:x="110866" fg:w="37"/><text x="95.3911%" y="143.50"></text></g><g><title>__rg_dealloc (37 samples, 0.03%)</title><rect x="95.1411%" y="117" width="0.0318%" height="15" fill="rgb(229,126,4)" fg:x="110866" fg:w="37"/><text x="95.3911%" y="127.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (37 samples, 0.03%)</title><rect x="95.1411%" y="101" width="0.0318%" height="15" fill="rgb(222,92,36)" fg:x="110866" fg:w="37"/><text x="95.3911%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (53 samples, 0.05%)</title><rect x="95.1308%" y="197" width="0.0455%" height="15" fill="rgb(216,39,41)" fg:x="110854" fg:w="53"/><text x="95.3808%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (53 samples, 0.05%)</title><rect x="95.1308%" y="181" width="0.0455%" height="15" fill="rgb(253,127,28)" fg:x="110854" fg:w="53"/><text x="95.3808%" y="191.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (52 samples, 0.04%)</title><rect x="95.2029%" y="181" width="0.0446%" height="15" fill="rgb(249,152,51)" fg:x="110938" fg:w="52"/><text x="95.4529%" y="191.50"></text></g><g><title>core::time::Duration::as_nanos (44 samples, 0.04%)</title><rect x="95.2475%" y="181" width="0.0378%" height="15" fill="rgb(209,123,42)" fg:x="110990" fg:w="44"/><text x="95.4975%" y="191.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (163 samples, 0.14%)</title><rect x="95.2853%" y="165" width="0.1399%" height="15" fill="rgb(241,118,22)" fg:x="111034" fg:w="163"/><text x="95.5353%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (70 samples, 0.06%)</title><rect x="95.4826%" y="133" width="0.0601%" height="15" fill="rgb(208,25,7)" fg:x="111264" fg:w="70"/><text x="95.7326%" y="143.50"></text></g><g><title>core::cmp::PartialOrd::ge (70 samples, 0.06%)</title><rect x="95.4826%" y="117" width="0.0601%" height="15" fill="rgb(243,144,39)" fg:x="111264" fg:w="70"/><text x="95.7326%" y="127.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (68 samples, 0.06%)</title><rect x="95.4843%" y="101" width="0.0584%" height="15" fill="rgb(250,50,5)" fg:x="111266" fg:w="68"/><text x="95.7343%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (31 samples, 0.03%)</title><rect x="95.5161%" y="85" width="0.0266%" height="15" fill="rgb(207,67,11)" fg:x="111303" fg:w="31"/><text x="95.7661%" y="95.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (31 samples, 0.03%)</title><rect x="95.5161%" y="69" width="0.0266%" height="15" fill="rgb(245,204,40)" fg:x="111303" fg:w="31"/><text x="95.7661%" y="79.50"></text></g><g><title>std::time::SystemTime::duration_since (340 samples, 0.29%)</title><rect x="95.2853%" y="181" width="0.2918%" height="15" fill="rgb(238,228,24)" fg:x="111034" fg:w="340"/><text x="95.5353%" y="191.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (177 samples, 0.15%)</title><rect x="95.4251%" y="165" width="0.1519%" height="15" fill="rgb(217,116,22)" fg:x="111197" fg:w="177"/><text x="95.6751%" y="175.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (177 samples, 0.15%)</title><rect x="95.4251%" y="149" width="0.1519%" height="15" fill="rgb(234,98,12)" fg:x="111197" fg:w="177"/><text x="95.6751%" y="159.50"></text></g><g><title>core::time::Duration::new (40 samples, 0.03%)</title><rect x="95.5427%" y="133" width="0.0343%" height="15" fill="rgb(242,170,50)" fg:x="111334" fg:w="40"/><text x="95.7927%" y="143.50"></text></g><g><title>tremor_common::time::nanotime (1,315 samples, 1.13%)</title><rect x="95.1763%" y="197" width="1.1285%" height="15" fill="rgb(235,7,5)" fg:x="110907" fg:w="1315"/><text x="95.4263%" y="207.50"></text></g><g><title>std::time::SystemTime::now (848 samples, 0.73%)</title><rect x="95.5770%" y="181" width="0.7277%" height="15" fill="rgb(241,114,28)" fg:x="111374" fg:w="848"/><text x="95.8270%" y="191.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (848 samples, 0.73%)</title><rect x="95.5770%" y="165" width="0.7277%" height="15" fill="rgb(246,112,42)" fg:x="111374" fg:w="848"/><text x="95.8270%" y="175.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (848 samples, 0.73%)</title><rect x="95.5770%" y="149" width="0.7277%" height="15" fill="rgb(248,228,14)" fg:x="111374" fg:w="848"/><text x="95.8270%" y="159.50"></text></g><g><title>__clock_gettime (675 samples, 0.58%)</title><rect x="95.7255%" y="133" width="0.5793%" height="15" fill="rgb(208,133,18)" fg:x="111547" fg:w="675"/><text x="95.9755%" y="143.50"></text></g><g><title>__vdso_clock_gettime (624 samples, 0.54%)</title><rect x="95.7693%" y="117" width="0.5355%" height="15" fill="rgb(207,35,49)" fg:x="111598" fg:w="624"/><text x="96.0193%" y="127.50"></text></g><g><title>[[vdso]] (564 samples, 0.48%)</title><rect x="95.8207%" y="101" width="0.4840%" height="15" fill="rgb(205,68,36)" fg:x="111658" fg:w="564"/><text x="96.0707%" y="111.50"></text></g><g><title>core::mem::drop (16 samples, 0.01%)</title><rect x="96.3159%" y="133" width="0.0137%" height="15" fill="rgb(245,62,40)" fg:x="112235" fg:w="16"/><text x="96.5659%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (16 samples, 0.01%)</title><rect x="96.3159%" y="117" width="0.0137%" height="15" fill="rgb(228,27,24)" fg:x="112235" fg:w="16"/><text x="96.5659%" y="127.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (32 samples, 0.03%)</title><rect x="96.3048%" y="197" width="0.0275%" height="15" fill="rgb(253,19,12)" fg:x="112222" fg:w="32"/><text x="96.5548%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (26 samples, 0.02%)</title><rect x="96.3099%" y="181" width="0.0223%" height="15" fill="rgb(232,28,20)" fg:x="112228" fg:w="26"/><text x="96.5599%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (26 samples, 0.02%)</title><rect x="96.3099%" y="165" width="0.0223%" height="15" fill="rgb(218,35,51)" fg:x="112228" fg:w="26"/><text x="96.5599%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="96.3099%" y="149" width="0.0223%" height="15" fill="rgb(212,90,40)" fg:x="112228" fg:w="26"/><text x="96.5599%" y="159.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (3,654 samples, 3.14%)</title><rect x="93.2085%" y="213" width="3.1357%" height="15" fill="rgb(220,172,12)" fg:x="108614" fg:w="3654"/><text x="93.4585%" y="223.50">tre..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,666 samples, 3.15%)</title><rect x="93.1991%" y="245" width="3.1460%" height="15" fill="rgb(226,159,20)" fg:x="108603" fg:w="3666"/><text x="93.4491%" y="255.50">&lt;as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,666 samples, 3.15%)</title><rect x="93.1991%" y="229" width="3.1460%" height="15" fill="rgb(234,205,16)" fg:x="108603" fg:w="3666"/><text x="93.4491%" y="239.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,811 samples, 3.27%)</title><rect x="93.0789%" y="357" width="3.2705%" height="15" fill="rgb(207,9,39)" fg:x="108463" fg:w="3811"/><text x="93.3289%" y="367.50">&lt;co..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,807 samples, 3.27%)</title><rect x="93.0823%" y="341" width="3.2670%" height="15" fill="rgb(249,143,15)" fg:x="108467" fg:w="3807"/><text x="93.3323%" y="351.50">asy..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (3,739 samples, 3.21%)</title><rect x="93.1407%" y="325" width="3.2087%" height="15" fill="rgb(253,133,29)" fg:x="108535" fg:w="3739"/><text x="93.3907%" y="335.50">&lt;as..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,739 samples, 3.21%)</title><rect x="93.1407%" y="309" width="3.2087%" height="15" fill="rgb(221,187,0)" fg:x="108535" fg:w="3739"/><text x="93.3907%" y="319.50">asy..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,736 samples, 3.21%)</title><rect x="93.1433%" y="293" width="3.2061%" height="15" fill="rgb(205,204,26)" fg:x="108538" fg:w="3736"/><text x="93.3933%" y="303.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,734 samples, 3.20%)</title><rect x="93.1450%" y="277" width="3.2044%" height="15" fill="rgb(224,68,54)" fg:x="108540" fg:w="3734"/><text x="93.3950%" y="287.50">std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,672 samples, 3.15%)</title><rect x="93.1982%" y="261" width="3.1512%" height="15" fill="rgb(209,67,4)" fg:x="108602" fg:w="3672"/><text x="93.4482%" y="271.50">asy..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,812 samples, 3.27%)</title><rect x="93.0789%" y="373" width="3.2713%" height="15" fill="rgb(228,229,18)" fg:x="108463" fg:w="3812"/><text x="93.3289%" y="383.50">&lt;co..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (28 samples, 0.02%)</title><rect x="96.3502%" y="373" width="0.0240%" height="15" fill="rgb(231,89,13)" fg:x="112275" fg:w="28"/><text x="96.6002%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (27 samples, 0.02%)</title><rect x="96.3511%" y="357" width="0.0232%" height="15" fill="rgb(210,182,18)" fg:x="112276" fg:w="27"/><text x="96.6011%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (27 samples, 0.02%)</title><rect x="96.3511%" y="341" width="0.0232%" height="15" fill="rgb(240,105,2)" fg:x="112276" fg:w="27"/><text x="96.6011%" y="351.50"></text></g><g><title>core::task::wake::Waker::wake (14 samples, 0.01%)</title><rect x="96.3786%" y="325" width="0.0120%" height="15" fill="rgb(207,170,50)" fg:x="112308" fg:w="14"/><text x="96.6286%" y="335.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (14 samples, 0.01%)</title><rect x="96.3786%" y="309" width="0.0120%" height="15" fill="rgb(232,133,24)" fg:x="112308" fg:w="14"/><text x="96.6286%" y="319.50"></text></g><g><title>async_executor::State::notify (21 samples, 0.02%)</title><rect x="96.3743%" y="341" width="0.0180%" height="15" fill="rgb(235,166,27)" fg:x="112303" fg:w="21"/><text x="96.6243%" y="351.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (27 samples, 0.02%)</title><rect x="96.3743%" y="357" width="0.0232%" height="15" fill="rgb(209,19,13)" fg:x="112303" fg:w="27"/><text x="96.6243%" y="367.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (28 samples, 0.02%)</title><rect x="96.3743%" y="373" width="0.0240%" height="15" fill="rgb(226,79,39)" fg:x="112303" fg:w="28"/><text x="96.6243%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (244 samples, 0.21%)</title><rect x="96.3983%" y="373" width="0.2094%" height="15" fill="rgb(222,163,10)" fg:x="112331" fg:w="244"/><text x="96.6483%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (244 samples, 0.21%)</title><rect x="96.3983%" y="357" width="0.2094%" height="15" fill="rgb(214,44,19)" fg:x="112331" fg:w="244"/><text x="96.6483%" y="367.50"></text></g><g><title>async_task::runnable::Runnable::run (4,227 samples, 3.63%)</title><rect x="92.9819%" y="405" width="3.6275%" height="15" fill="rgb(210,217,13)" fg:x="108350" fg:w="4227"/><text x="93.2319%" y="415.50">asyn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,166 samples, 3.58%)</title><rect x="93.0343%" y="389" width="3.5751%" height="15" fill="rgb(237,61,54)" fg:x="108411" fg:w="4166"/><text x="93.2843%" y="399.50">asyn..</text></g><g><title>async_executor::Executor::run::{{closure}} (11,629 samples, 9.98%)</title><rect x="86.6444%" y="469" width="9.9796%" height="15" fill="rgb(226,184,24)" fg:x="100965" fg:w="11629"/><text x="86.8944%" y="479.50">async_executor..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,602 samples, 9.96%)</title><rect x="86.6676%" y="453" width="9.9564%" height="15" fill="rgb(223,226,4)" fg:x="100992" fg:w="11602"/><text x="86.9176%" y="463.50">&lt;futures_lite:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,602 samples, 9.96%)</title><rect x="86.6676%" y="437" width="9.9564%" height="15" fill="rgb(210,26,41)" fg:x="100992" fg:w="11602"/><text x="86.9176%" y="447.50">&lt;core::future:..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (11,601 samples, 9.96%)</title><rect x="86.6684%" y="421" width="9.9555%" height="15" fill="rgb(220,221,6)" fg:x="100993" fg:w="11601"/><text x="86.9184%" y="431.50">async_executor..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (17 samples, 0.01%)</title><rect x="96.6094%" y="405" width="0.0146%" height="15" fill="rgb(225,89,49)" fg:x="112577" fg:w="17"/><text x="96.8594%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (17 samples, 0.01%)</title><rect x="96.6094%" y="389" width="0.0146%" height="15" fill="rgb(218,70,45)" fg:x="112577" fg:w="17"/><text x="96.8594%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.02%)</title><rect x="96.7064%" y="261" width="0.0240%" height="15" fill="rgb(238,166,21)" fg:x="112690" fg:w="28"/><text x="96.9564%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (28 samples, 0.02%)</title><rect x="96.7064%" y="245" width="0.0240%" height="15" fill="rgb(224,141,44)" fg:x="112690" fg:w="28"/><text x="96.9564%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (28 samples, 0.02%)</title><rect x="96.7064%" y="229" width="0.0240%" height="15" fill="rgb(230,12,49)" fg:x="112690" fg:w="28"/><text x="96.9564%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (28 samples, 0.02%)</title><rect x="96.7064%" y="213" width="0.0240%" height="15" fill="rgb(212,174,12)" fg:x="112690" fg:w="28"/><text x="96.9564%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (28 samples, 0.02%)</title><rect x="96.7064%" y="197" width="0.0240%" height="15" fill="rgb(246,67,9)" fg:x="112690" fg:w="28"/><text x="96.9564%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 0.02%)</title><rect x="96.7089%" y="181" width="0.0215%" height="15" fill="rgb(239,35,23)" fg:x="112693" fg:w="25"/><text x="96.9589%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (21 samples, 0.02%)</title><rect x="96.7124%" y="165" width="0.0180%" height="15" fill="rgb(211,167,0)" fg:x="112697" fg:w="21"/><text x="96.9624%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (21 samples, 0.02%)</title><rect x="96.7124%" y="149" width="0.0180%" height="15" fill="rgb(225,119,45)" fg:x="112697" fg:w="21"/><text x="96.9624%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (20 samples, 0.02%)</title><rect x="96.7132%" y="133" width="0.0172%" height="15" fill="rgb(210,162,6)" fg:x="112698" fg:w="20"/><text x="96.9632%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (20 samples, 0.02%)</title><rect x="96.7132%" y="117" width="0.0172%" height="15" fill="rgb(208,118,35)" fg:x="112698" fg:w="20"/><text x="96.9632%" y="127.50"></text></g><g><title>concurrent_queue::full_fence (29 samples, 0.02%)</title><rect x="96.7647%" y="229" width="0.0249%" height="15" fill="rgb(239,4,53)" fg:x="112758" fg:w="29"/><text x="97.0147%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (28 samples, 0.02%)</title><rect x="96.7656%" y="213" width="0.0240%" height="15" fill="rgb(213,130,21)" fg:x="112759" fg:w="28"/><text x="97.0156%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (28 samples, 0.02%)</title><rect x="96.7656%" y="197" width="0.0240%" height="15" fill="rgb(235,148,0)" fg:x="112759" fg:w="28"/><text x="97.0156%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.02%)</title><rect x="96.7656%" y="181" width="0.0240%" height="15" fill="rgb(244,224,18)" fg:x="112759" fg:w="28"/><text x="97.0156%" y="191.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (103 samples, 0.09%)</title><rect x="96.7493%" y="245" width="0.0884%" height="15" fill="rgb(211,214,4)" fg:x="112740" fg:w="103"/><text x="96.9993%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (56 samples, 0.05%)</title><rect x="96.7896%" y="229" width="0.0481%" height="15" fill="rgb(206,119,25)" fg:x="112787" fg:w="56"/><text x="97.0396%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (55 samples, 0.05%)</title><rect x="96.7905%" y="213" width="0.0472%" height="15" fill="rgb(243,93,47)" fg:x="112788" fg:w="55"/><text x="97.0405%" y="223.50"></text></g><g><title>concurrent_queue::full_fence (38 samples, 0.03%)</title><rect x="96.8471%" y="229" width="0.0326%" height="15" fill="rgb(224,194,6)" fg:x="112854" fg:w="38"/><text x="97.0971%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (38 samples, 0.03%)</title><rect x="96.8471%" y="213" width="0.0326%" height="15" fill="rgb(243,229,6)" fg:x="112854" fg:w="38"/><text x="97.0971%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (38 samples, 0.03%)</title><rect x="96.8471%" y="197" width="0.0326%" height="15" fill="rgb(207,23,50)" fg:x="112854" fg:w="38"/><text x="97.0971%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (38 samples, 0.03%)</title><rect x="96.8471%" y="181" width="0.0326%" height="15" fill="rgb(253,192,32)" fg:x="112854" fg:w="38"/><text x="97.0971%" y="191.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (185 samples, 0.16%)</title><rect x="96.7304%" y="261" width="0.1588%" height="15" fill="rgb(213,21,6)" fg:x="112718" fg:w="185"/><text x="96.9804%" y="271.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (60 samples, 0.05%)</title><rect x="96.8377%" y="245" width="0.0515%" height="15" fill="rgb(243,151,13)" fg:x="112843" fg:w="60"/><text x="97.0877%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (43 samples, 0.04%)</title><rect x="96.8892%" y="261" width="0.0369%" height="15" fill="rgb(233,165,41)" fg:x="112903" fg:w="43"/><text x="97.1392%" y="271.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="96.8892%" y="245" width="0.0369%" height="15" fill="rgb(246,176,45)" fg:x="112903" fg:w="43"/><text x="97.1392%" y="255.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (43 samples, 0.04%)</title><rect x="96.8892%" y="229" width="0.0369%" height="15" fill="rgb(217,170,52)" fg:x="112903" fg:w="43"/><text x="97.1392%" y="239.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (43 samples, 0.04%)</title><rect x="96.8892%" y="213" width="0.0369%" height="15" fill="rgb(214,203,54)" fg:x="112903" fg:w="43"/><text x="97.1392%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (42 samples, 0.04%)</title><rect x="96.8900%" y="197" width="0.0360%" height="15" fill="rgb(248,215,49)" fg:x="112904" fg:w="42"/><text x="97.1400%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_sub (42 samples, 0.04%)</title><rect x="96.8900%" y="181" width="0.0360%" height="15" fill="rgb(208,46,10)" fg:x="112904" fg:w="42"/><text x="97.1400%" y="191.50"></text></g><g><title>fastrand::usize (15 samples, 0.01%)</title><rect x="96.9261%" y="261" width="0.0129%" height="15" fill="rgb(254,5,31)" fg:x="112946" fg:w="15"/><text x="97.1761%" y="271.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.01%)</title><rect x="96.9278%" y="245" width="0.0112%" height="15" fill="rgb(222,104,33)" fg:x="112948" fg:w="13"/><text x="97.1778%" y="255.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.01%)</title><rect x="96.9278%" y="229" width="0.0112%" height="15" fill="rgb(248,49,16)" fg:x="112948" fg:w="13"/><text x="97.1778%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (34 samples, 0.03%)</title><rect x="96.9458%" y="213" width="0.0292%" height="15" fill="rgb(232,198,41)" fg:x="112969" fg:w="34"/><text x="97.1958%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (34 samples, 0.03%)</title><rect x="96.9458%" y="197" width="0.0292%" height="15" fill="rgb(214,125,3)" fg:x="112969" fg:w="34"/><text x="97.1958%" y="207.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (330 samples, 0.28%)</title><rect x="96.6935%" y="277" width="0.2832%" height="15" fill="rgb(229,220,28)" fg:x="112675" fg:w="330"/><text x="96.9435%" y="287.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (44 samples, 0.04%)</title><rect x="96.9389%" y="261" width="0.0378%" height="15" fill="rgb(222,64,37)" fg:x="112961" fg:w="44"/><text x="97.1889%" y="271.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (39 samples, 0.03%)</title><rect x="96.9432%" y="245" width="0.0335%" height="15" fill="rgb(249,184,13)" fg:x="112966" fg:w="39"/><text x="97.1932%" y="255.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (39 samples, 0.03%)</title><rect x="96.9432%" y="229" width="0.0335%" height="15" fill="rgb(252,176,6)" fg:x="112966" fg:w="39"/><text x="97.1932%" y="239.50"></text></g><g><title>async_executor::Sleepers::update (19 samples, 0.02%)</title><rect x="96.9818%" y="261" width="0.0163%" height="15" fill="rgb(228,153,7)" fg:x="113011" fg:w="19"/><text x="97.2318%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (40 samples, 0.03%)</title><rect x="96.9981%" y="261" width="0.0343%" height="15" fill="rgb(242,193,5)" fg:x="113030" fg:w="40"/><text x="97.2481%" y="271.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.03%)</title><rect x="96.9981%" y="245" width="0.0343%" height="15" fill="rgb(232,140,9)" fg:x="113030" fg:w="40"/><text x="97.2481%" y="255.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (34 samples, 0.03%)</title><rect x="97.0033%" y="229" width="0.0292%" height="15" fill="rgb(213,222,16)" fg:x="113036" fg:w="34"/><text x="97.2533%" y="239.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (34 samples, 0.03%)</title><rect x="97.0033%" y="213" width="0.0292%" height="15" fill="rgb(222,75,50)" fg:x="113036" fg:w="34"/><text x="97.2533%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (34 samples, 0.03%)</title><rect x="97.0033%" y="197" width="0.0292%" height="15" fill="rgb(205,180,2)" fg:x="113036" fg:w="34"/><text x="97.2533%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_swap (34 samples, 0.03%)</title><rect x="97.0033%" y="181" width="0.0292%" height="15" fill="rgb(216,34,7)" fg:x="113036" fg:w="34"/><text x="97.2533%" y="191.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (471 samples, 0.40%)</title><rect x="96.6617%" y="389" width="0.4042%" height="15" fill="rgb(253,16,32)" fg:x="112638" fg:w="471"/><text x="96.9117%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (460 samples, 0.39%)</title><rect x="96.6712%" y="373" width="0.3948%" height="15" fill="rgb(208,97,28)" fg:x="112649" fg:w="460"/><text x="96.9212%" y="383.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (459 samples, 0.39%)</title><rect x="96.6720%" y="357" width="0.3939%" height="15" fill="rgb(225,92,11)" fg:x="112650" fg:w="459"/><text x="96.9220%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (450 samples, 0.39%)</title><rect x="96.6798%" y="341" width="0.3862%" height="15" fill="rgb(243,38,12)" fg:x="112659" fg:w="450"/><text x="96.9298%" y="351.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (450 samples, 0.39%)</title><rect x="96.6798%" y="325" width="0.3862%" height="15" fill="rgb(208,139,16)" fg:x="112659" fg:w="450"/><text x="96.9298%" y="335.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (437 samples, 0.38%)</title><rect x="96.6909%" y="309" width="0.3750%" height="15" fill="rgb(227,24,9)" fg:x="112672" fg:w="437"/><text x="96.9409%" y="319.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (436 samples, 0.37%)</title><rect x="96.6918%" y="293" width="0.3742%" height="15" fill="rgb(206,62,11)" fg:x="112673" fg:w="436"/><text x="96.9418%" y="303.50"></text></g><g><title>async_executor::Ticker::sleep (104 samples, 0.09%)</title><rect x="96.9767%" y="277" width="0.0892%" height="15" fill="rgb(228,134,27)" fg:x="113005" fg:w="104"/><text x="97.2267%" y="287.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (39 samples, 0.03%)</title><rect x="97.0325%" y="261" width="0.0335%" height="15" fill="rgb(205,55,33)" fg:x="113070" fg:w="39"/><text x="97.2825%" y="271.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (35 samples, 0.03%)</title><rect x="97.0359%" y="245" width="0.0300%" height="15" fill="rgb(243,75,43)" fg:x="113074" fg:w="35"/><text x="97.2859%" y="255.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (35 samples, 0.03%)</title><rect x="97.0359%" y="229" width="0.0300%" height="15" fill="rgb(223,27,42)" fg:x="113074" fg:w="35"/><text x="97.2859%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (35 samples, 0.03%)</title><rect x="97.0359%" y="213" width="0.0300%" height="15" fill="rgb(232,189,33)" fg:x="113074" fg:w="35"/><text x="97.2859%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.03%)</title><rect x="97.0359%" y="197" width="0.0300%" height="15" fill="rgb(210,9,39)" fg:x="113074" fg:w="35"/><text x="97.2859%" y="207.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (22 samples, 0.02%)</title><rect x="97.1123%" y="325" width="0.0189%" height="15" fill="rgb(242,85,26)" fg:x="113163" fg:w="22"/><text x="97.3623%" y="335.50"></text></g><g><title>core::mem::replace (22 samples, 0.02%)</title><rect x="97.1123%" y="309" width="0.0189%" height="15" fill="rgb(248,44,4)" fg:x="113163" fg:w="22"/><text x="97.3623%" y="319.50"></text></g><g><title>core::ptr::read (22 samples, 0.02%)</title><rect x="97.1123%" y="293" width="0.0189%" height="15" fill="rgb(250,96,46)" fg:x="113163" fg:w="22"/><text x="97.3623%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (37 samples, 0.03%)</title><rect x="97.1046%" y="341" width="0.0318%" height="15" fill="rgb(229,116,26)" fg:x="113154" fg:w="37"/><text x="97.3546%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (48 samples, 0.04%)</title><rect x="97.1363%" y="341" width="0.0412%" height="15" fill="rgb(246,94,34)" fg:x="113191" fg:w="48"/><text x="97.3863%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (46 samples, 0.04%)</title><rect x="97.1380%" y="325" width="0.0395%" height="15" fill="rgb(251,73,21)" fg:x="113193" fg:w="46"/><text x="97.3880%" y="335.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="97.1380%" y="309" width="0.0395%" height="15" fill="rgb(254,121,25)" fg:x="113193" fg:w="46"/><text x="97.3880%" y="319.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (40 samples, 0.03%)</title><rect x="97.1432%" y="293" width="0.0343%" height="15" fill="rgb(215,161,49)" fg:x="113199" fg:w="40"/><text x="97.3932%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (40 samples, 0.03%)</title><rect x="97.1432%" y="277" width="0.0343%" height="15" fill="rgb(221,43,13)" fg:x="113199" fg:w="40"/><text x="97.3932%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (40 samples, 0.03%)</title><rect x="97.1432%" y="261" width="0.0343%" height="15" fill="rgb(249,5,37)" fg:x="113199" fg:w="40"/><text x="97.3932%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_swap (40 samples, 0.03%)</title><rect x="97.1432%" y="245" width="0.0343%" height="15" fill="rgb(226,25,44)" fg:x="113199" fg:w="40"/><text x="97.3932%" y="255.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (185 samples, 0.16%)</title><rect x="97.0840%" y="357" width="0.1588%" height="15" fill="rgb(238,189,16)" fg:x="113130" fg:w="185"/><text x="97.3340%" y="367.50"></text></g><g><title>event_listener::Inner::lock (65 samples, 0.06%)</title><rect x="97.1869%" y="341" width="0.0558%" height="15" fill="rgb(251,186,8)" fg:x="113250" fg:w="65"/><text x="97.4369%" y="351.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (60 samples, 0.05%)</title><rect x="97.1912%" y="325" width="0.0515%" height="15" fill="rgb(254,34,31)" fg:x="113255" fg:w="60"/><text x="97.4412%" y="335.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (57 samples, 0.05%)</title><rect x="97.1938%" y="309" width="0.0489%" height="15" fill="rgb(225,215,27)" fg:x="113258" fg:w="57"/><text x="97.4438%" y="319.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (57 samples, 0.05%)</title><rect x="97.1938%" y="293" width="0.0489%" height="15" fill="rgb(221,192,48)" fg:x="113258" fg:w="57"/><text x="97.4438%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (57 samples, 0.05%)</title><rect x="97.1938%" y="277" width="0.0489%" height="15" fill="rgb(219,137,20)" fg:x="113258" fg:w="57"/><text x="97.4438%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (57 samples, 0.05%)</title><rect x="97.1938%" y="261" width="0.0489%" height="15" fill="rgb(219,84,11)" fg:x="113258" fg:w="57"/><text x="97.4438%" y="271.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (767 samples, 0.66%)</title><rect x="96.6532%" y="421" width="0.6582%" height="15" fill="rgb(224,10,23)" fg:x="112628" fg:w="767"/><text x="96.9032%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (760 samples, 0.65%)</title><rect x="96.6592%" y="405" width="0.6522%" height="15" fill="rgb(248,22,39)" fg:x="112635" fg:w="760"/><text x="96.9092%" y="415.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (286 samples, 0.25%)</title><rect x="97.0659%" y="389" width="0.2454%" height="15" fill="rgb(212,154,20)" fg:x="113109" fg:w="286"/><text x="97.3159%" y="399.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (272 samples, 0.23%)</title><rect x="97.0780%" y="373" width="0.2334%" height="15" fill="rgb(236,199,50)" fg:x="113123" fg:w="272"/><text x="97.3280%" y="383.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (80 samples, 0.07%)</title><rect x="97.2427%" y="357" width="0.0687%" height="15" fill="rgb(211,9,17)" fg:x="113315" fg:w="80"/><text x="97.4927%" y="367.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (80 samples, 0.07%)</title><rect x="97.2427%" y="341" width="0.0687%" height="15" fill="rgb(243,216,36)" fg:x="113315" fg:w="80"/><text x="97.4927%" y="351.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (53 samples, 0.05%)</title><rect x="97.2659%" y="325" width="0.0455%" height="15" fill="rgb(250,2,10)" fg:x="113342" fg:w="53"/><text x="97.5159%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (51 samples, 0.04%)</title><rect x="97.2676%" y="309" width="0.0438%" height="15" fill="rgb(226,50,48)" fg:x="113344" fg:w="51"/><text x="97.5176%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (51 samples, 0.04%)</title><rect x="97.2676%" y="293" width="0.0438%" height="15" fill="rgb(243,81,16)" fg:x="113344" fg:w="51"/><text x="97.5176%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (51 samples, 0.04%)</title><rect x="97.2676%" y="277" width="0.0438%" height="15" fill="rgb(250,14,2)" fg:x="113344" fg:w="51"/><text x="97.5176%" y="287.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (12,465 samples, 10.70%)</title><rect x="86.6195%" y="501" width="10.6970%" height="15" fill="rgb(233,135,29)" fg:x="100936" fg:w="12465"/><text x="86.8695%" y="511.50">&lt;futures_lite::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,439 samples, 10.67%)</title><rect x="86.6418%" y="485" width="10.6747%" height="15" fill="rgb(224,64,43)" fg:x="100962" fg:w="12439"/><text x="86.8918%" y="495.50">&lt;core::future::f..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (807 samples, 0.69%)</title><rect x="96.6240%" y="469" width="0.6925%" height="15" fill="rgb(238,84,13)" fg:x="112594" fg:w="807"/><text x="96.8740%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (784 samples, 0.67%)</title><rect x="96.6437%" y="453" width="0.6728%" height="15" fill="rgb(253,48,26)" fg:x="112617" fg:w="784"/><text x="96.8937%" y="463.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (784 samples, 0.67%)</title><rect x="96.6437%" y="437" width="0.6728%" height="15" fill="rgb(205,223,31)" fg:x="112617" fg:w="784"/><text x="96.8937%" y="447.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="97.3294%" y="469" width="0.0103%" height="15" fill="rgb(221,41,32)" fg:x="113416" fg:w="12"/><text x="97.5794%" y="479.50"></text></g><g><title>std::sync::poison::Flag::borrow (12 samples, 0.01%)</title><rect x="97.3294%" y="453" width="0.0103%" height="15" fill="rgb(213,158,31)" fg:x="113416" fg:w="12"/><text x="97.5794%" y="463.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (65 samples, 0.06%)</title><rect x="97.3294%" y="501" width="0.0558%" height="15" fill="rgb(245,126,43)" fg:x="113416" fg:w="65"/><text x="97.5794%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (65 samples, 0.06%)</title><rect x="97.3294%" y="485" width="0.0558%" height="15" fill="rgb(227,7,22)" fg:x="113416" fg:w="65"/><text x="97.5794%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (53 samples, 0.05%)</title><rect x="97.3397%" y="469" width="0.0455%" height="15" fill="rgb(252,90,44)" fg:x="113428" fg:w="53"/><text x="97.5897%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::try_lock (53 samples, 0.05%)</title><rect x="97.3397%" y="453" width="0.0455%" height="15" fill="rgb(253,91,0)" fg:x="113428" fg:w="53"/><text x="97.5897%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (53 samples, 0.05%)</title><rect x="97.3397%" y="437" width="0.0455%" height="15" fill="rgb(252,175,49)" fg:x="113428" fg:w="53"/><text x="97.5897%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (53 samples, 0.05%)</title><rect x="97.3397%" y="421" width="0.0455%" height="15" fill="rgb(246,150,1)" fg:x="113428" fg:w="53"/><text x="97.5897%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::ne (24 samples, 0.02%)</title><rect x="97.4118%" y="485" width="0.0206%" height="15" fill="rgb(241,192,25)" fg:x="113512" fg:w="24"/><text x="97.6618%" y="495.50"></text></g><g><title>sn_rust_dealloc (69 samples, 0.06%)</title><rect x="97.4590%" y="325" width="0.0592%" height="15" fill="rgb(239,187,11)" fg:x="113567" fg:w="69"/><text x="97.7090%" y="335.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (82 samples, 0.07%)</title><rect x="97.4538%" y="421" width="0.0704%" height="15" fill="rgb(218,202,51)" fg:x="113561" fg:w="82"/><text x="97.7038%" y="431.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (80 samples, 0.07%)</title><rect x="97.4555%" y="405" width="0.0687%" height="15" fill="rgb(225,176,8)" fg:x="113563" fg:w="80"/><text x="97.7055%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (80 samples, 0.07%)</title><rect x="97.4555%" y="389" width="0.0687%" height="15" fill="rgb(219,122,41)" fg:x="113563" fg:w="80"/><text x="97.7055%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (79 samples, 0.07%)</title><rect x="97.4564%" y="373" width="0.0678%" height="15" fill="rgb(248,140,20)" fg:x="113564" fg:w="79"/><text x="97.7064%" y="383.50"></text></g><g><title>__rg_dealloc (79 samples, 0.07%)</title><rect x="97.4564%" y="357" width="0.0678%" height="15" fill="rgb(245,41,37)" fg:x="113564" fg:w="79"/><text x="97.7064%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (79 samples, 0.07%)</title><rect x="97.4564%" y="341" width="0.0678%" height="15" fill="rgb(235,82,39)" fg:x="113564" fg:w="79"/><text x="97.7064%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.08%)</title><rect x="97.4487%" y="469" width="0.0764%" height="15" fill="rgb(230,108,42)" fg:x="113555" fg:w="89"/><text x="97.6987%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (86 samples, 0.07%)</title><rect x="97.4513%" y="453" width="0.0738%" height="15" fill="rgb(215,150,50)" fg:x="113558" fg:w="86"/><text x="97.7013%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (83 samples, 0.07%)</title><rect x="97.4538%" y="437" width="0.0712%" height="15" fill="rgb(233,212,5)" fg:x="113561" fg:w="83"/><text x="97.7038%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (16 samples, 0.01%)</title><rect x="97.5259%" y="421" width="0.0137%" height="15" fill="rgb(245,80,22)" fg:x="113645" fg:w="16"/><text x="97.7759%" y="431.50"></text></g><g><title>alloc::collections::btree::mem::replace (16 samples, 0.01%)</title><rect x="97.5259%" y="405" width="0.0137%" height="15" fill="rgb(238,129,16)" fg:x="113645" fg:w="16"/><text x="97.7759%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.03%)</title><rect x="97.5251%" y="469" width="0.0257%" height="15" fill="rgb(240,19,0)" fg:x="113644" fg:w="30"/><text x="97.7751%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.03%)</title><rect x="97.5251%" y="453" width="0.0257%" height="15" fill="rgb(232,42,35)" fg:x="113644" fg:w="30"/><text x="97.7751%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (29 samples, 0.02%)</title><rect x="97.5259%" y="437" width="0.0249%" height="15" fill="rgb(223,130,24)" fg:x="113645" fg:w="29"/><text x="97.7759%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (13 samples, 0.01%)</title><rect x="97.5396%" y="421" width="0.0112%" height="15" fill="rgb(237,16,22)" fg:x="113661" fg:w="13"/><text x="97.7896%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (21 samples, 0.02%)</title><rect x="97.5783%" y="437" width="0.0180%" height="15" fill="rgb(248,192,20)" fg:x="113706" fg:w="21"/><text x="97.8283%" y="447.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (17 samples, 0.01%)</title><rect x="97.5817%" y="421" width="0.0146%" height="15" fill="rgb(233,167,2)" fg:x="113710" fg:w="17"/><text x="97.8317%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.01%)</title><rect x="97.5817%" y="405" width="0.0146%" height="15" fill="rgb(252,71,44)" fg:x="113710" fg:w="17"/><text x="97.8317%" y="415.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.01%)</title><rect x="97.5817%" y="389" width="0.0146%" height="15" fill="rgb(238,37,47)" fg:x="113710" fg:w="17"/><text x="97.8317%" y="399.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (15 samples, 0.01%)</title><rect x="97.6066%" y="405" width="0.0129%" height="15" fill="rgb(214,202,54)" fg:x="113739" fg:w="15"/><text x="97.8566%" y="415.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (29 samples, 0.02%)</title><rect x="97.6006%" y="437" width="0.0249%" height="15" fill="rgb(254,165,40)" fg:x="113732" fg:w="29"/><text x="97.8506%" y="447.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (29 samples, 0.02%)</title><rect x="97.6006%" y="421" width="0.0249%" height="15" fill="rgb(246,173,38)" fg:x="113732" fg:w="29"/><text x="97.8506%" y="431.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (22 samples, 0.02%)</title><rect x="97.6847%" y="229" width="0.0189%" height="15" fill="rgb(215,3,27)" fg:x="113830" fg:w="22"/><text x="97.9347%" y="239.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (96 samples, 0.08%)</title><rect x="97.6255%" y="421" width="0.0824%" height="15" fill="rgb(239,169,51)" fg:x="113761" fg:w="96"/><text x="97.8755%" y="431.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (96 samples, 0.08%)</title><rect x="97.6255%" y="405" width="0.0824%" height="15" fill="rgb(212,5,25)" fg:x="113761" fg:w="96"/><text x="97.8755%" y="415.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (96 samples, 0.08%)</title><rect x="97.6255%" y="389" width="0.0824%" height="15" fill="rgb(243,45,17)" fg:x="113761" fg:w="96"/><text x="97.8755%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (96 samples, 0.08%)</title><rect x="97.6255%" y="373" width="0.0824%" height="15" fill="rgb(242,97,9)" fg:x="113761" fg:w="96"/><text x="97.8755%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (96 samples, 0.08%)</title><rect x="97.6255%" y="357" width="0.0824%" height="15" fill="rgb(228,71,31)" fg:x="113761" fg:w="96"/><text x="97.8755%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (96 samples, 0.08%)</title><rect x="97.6255%" y="341" width="0.0824%" height="15" fill="rgb(252,184,16)" fg:x="113761" fg:w="96"/><text x="97.8755%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (96 samples, 0.08%)</title><rect x="97.6255%" y="325" width="0.0824%" height="15" fill="rgb(236,169,46)" fg:x="113761" fg:w="96"/><text x="97.8755%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (96 samples, 0.08%)</title><rect x="97.6255%" y="309" width="0.0824%" height="15" fill="rgb(207,17,47)" fg:x="113761" fg:w="96"/><text x="97.8755%" y="319.50"></text></g><g><title>alloc::alloc::alloc (96 samples, 0.08%)</title><rect x="97.6255%" y="293" width="0.0824%" height="15" fill="rgb(206,201,28)" fg:x="113761" fg:w="96"/><text x="97.8755%" y="303.50"></text></g><g><title>__rg_alloc (96 samples, 0.08%)</title><rect x="97.6255%" y="277" width="0.0824%" height="15" fill="rgb(224,184,23)" fg:x="113761" fg:w="96"/><text x="97.8755%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (96 samples, 0.08%)</title><rect x="97.6255%" y="261" width="0.0824%" height="15" fill="rgb(208,139,48)" fg:x="113761" fg:w="96"/><text x="97.8755%" y="271.50"></text></g><g><title>sn_rust_alloc (96 samples, 0.08%)</title><rect x="97.6255%" y="245" width="0.0824%" height="15" fill="rgb(208,130,10)" fg:x="113761" fg:w="96"/><text x="97.8755%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (175 samples, 0.15%)</title><rect x="97.5585%" y="469" width="0.1502%" height="15" fill="rgb(211,213,45)" fg:x="113683" fg:w="175"/><text x="97.8085%" y="479.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (157 samples, 0.13%)</title><rect x="97.5740%" y="453" width="0.1347%" height="15" fill="rgb(235,100,30)" fg:x="113701" fg:w="157"/><text x="97.8240%" y="463.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (97 samples, 0.08%)</title><rect x="97.6255%" y="437" width="0.0832%" height="15" fill="rgb(206,144,31)" fg:x="113761" fg:w="97"/><text x="97.8755%" y="447.50"></text></g><g><title>concurrent_queue::full_fence (29 samples, 0.02%)</title><rect x="97.7336%" y="421" width="0.0249%" height="15" fill="rgb(224,200,26)" fg:x="113887" fg:w="29"/><text x="97.9836%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (29 samples, 0.02%)</title><rect x="97.7336%" y="405" width="0.0249%" height="15" fill="rgb(247,104,53)" fg:x="113887" fg:w="29"/><text x="97.9836%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (29 samples, 0.02%)</title><rect x="97.7336%" y="389" width="0.0249%" height="15" fill="rgb(220,14,17)" fg:x="113887" fg:w="29"/><text x="97.9836%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (29 samples, 0.02%)</title><rect x="97.7336%" y="373" width="0.0249%" height="15" fill="rgb(230,140,40)" fg:x="113887" fg:w="29"/><text x="97.9836%" y="383.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (68 samples, 0.06%)</title><rect x="97.7087%" y="469" width="0.0584%" height="15" fill="rgb(229,2,41)" fg:x="113858" fg:w="68"/><text x="97.9587%" y="479.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (54 samples, 0.05%)</title><rect x="97.7207%" y="453" width="0.0463%" height="15" fill="rgb(232,89,16)" fg:x="113872" fg:w="54"/><text x="97.9707%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (47 samples, 0.04%)</title><rect x="97.7267%" y="437" width="0.0403%" height="15" fill="rgb(247,59,52)" fg:x="113879" fg:w="47"/><text x="97.9767%" y="447.50"></text></g><g><title>core::mem::drop (96 samples, 0.08%)</title><rect x="97.7671%" y="469" width="0.0824%" height="15" fill="rgb(226,110,21)" fg:x="113926" fg:w="96"/><text x="98.0171%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (96 samples, 0.08%)</title><rect x="97.7671%" y="453" width="0.0824%" height="15" fill="rgb(224,176,43)" fg:x="113926" fg:w="96"/><text x="98.0171%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (96 samples, 0.08%)</title><rect x="97.7671%" y="437" width="0.0824%" height="15" fill="rgb(221,73,6)" fg:x="113926" fg:w="96"/><text x="98.0171%" y="447.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (92 samples, 0.08%)</title><rect x="97.7705%" y="421" width="0.0790%" height="15" fill="rgb(232,78,19)" fg:x="113930" fg:w="92"/><text x="98.0205%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (92 samples, 0.08%)</title><rect x="97.7705%" y="405" width="0.0790%" height="15" fill="rgb(233,112,48)" fg:x="113930" fg:w="92"/><text x="98.0205%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (92 samples, 0.08%)</title><rect x="97.7705%" y="389" width="0.0790%" height="15" fill="rgb(243,131,47)" fg:x="113930" fg:w="92"/><text x="98.0205%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (92 samples, 0.08%)</title><rect x="97.7705%" y="373" width="0.0790%" height="15" fill="rgb(226,51,1)" fg:x="113930" fg:w="92"/><text x="98.0205%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (25 samples, 0.02%)</title><rect x="97.8494%" y="469" width="0.0215%" height="15" fill="rgb(247,58,7)" fg:x="114022" fg:w="25"/><text x="98.0994%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::process_timers::{{closure}} (18 samples, 0.02%)</title><rect x="97.8555%" y="453" width="0.0154%" height="15" fill="rgb(209,7,32)" fg:x="114029" fg:w="18"/><text x="98.1055%" y="463.50"></text></g><g><title>std::time::Instant::duration_since (18 samples, 0.02%)</title><rect x="97.8555%" y="437" width="0.0154%" height="15" fill="rgb(209,39,41)" fg:x="114029" fg:w="18"/><text x="98.1055%" y="447.50"></text></g><g><title>std::time::Instant::checked_duration_since (18 samples, 0.02%)</title><rect x="97.8555%" y="421" width="0.0154%" height="15" fill="rgb(226,182,46)" fg:x="114029" fg:w="18"/><text x="98.1055%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (18 samples, 0.02%)</title><rect x="97.8555%" y="405" width="0.0154%" height="15" fill="rgb(230,219,10)" fg:x="114029" fg:w="18"/><text x="98.1055%" y="415.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (16 samples, 0.01%)</title><rect x="97.8572%" y="389" width="0.0137%" height="15" fill="rgb(227,175,30)" fg:x="114031" fg:w="16"/><text x="98.1072%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (76 samples, 0.07%)</title><rect x="97.8760%" y="469" width="0.0652%" height="15" fill="rgb(217,2,50)" fg:x="114053" fg:w="76"/><text x="98.1260%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (72 samples, 0.06%)</title><rect x="97.8795%" y="453" width="0.0618%" height="15" fill="rgb(229,160,0)" fg:x="114057" fg:w="72"/><text x="98.1295%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (72 samples, 0.06%)</title><rect x="97.8795%" y="437" width="0.0618%" height="15" fill="rgb(207,78,37)" fg:x="114057" fg:w="72"/><text x="98.1295%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (72 samples, 0.06%)</title><rect x="97.8795%" y="421" width="0.0618%" height="15" fill="rgb(225,57,0)" fg:x="114057" fg:w="72"/><text x="98.1295%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (72 samples, 0.06%)</title><rect x="97.8795%" y="405" width="0.0618%" height="15" fill="rgb(232,154,2)" fg:x="114057" fg:w="72"/><text x="98.1295%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (664 samples, 0.57%)</title><rect x="97.4332%" y="485" width="0.5698%" height="15" fill="rgb(241,212,25)" fg:x="113537" fg:w="664"/><text x="97.6832%" y="495.50"></text></g><g><title>std::time::Instant::now (72 samples, 0.06%)</title><rect x="97.9413%" y="469" width="0.0618%" height="15" fill="rgb(226,69,20)" fg:x="114129" fg:w="72"/><text x="98.1913%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (72 samples, 0.06%)</title><rect x="97.9413%" y="453" width="0.0618%" height="15" fill="rgb(247,184,54)" fg:x="114129" fg:w="72"/><text x="98.1913%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (72 samples, 0.06%)</title><rect x="97.9413%" y="437" width="0.0618%" height="15" fill="rgb(210,145,0)" fg:x="114129" fg:w="72"/><text x="98.1913%" y="447.50"></text></g><g><title>__clock_gettime (72 samples, 0.06%)</title><rect x="97.9413%" y="421" width="0.0618%" height="15" fill="rgb(253,82,12)" fg:x="114129" fg:w="72"/><text x="98.1913%" y="431.50"></text></g><g><title>__vdso_clock_gettime (63 samples, 0.05%)</title><rect x="97.9490%" y="405" width="0.0541%" height="15" fill="rgb(245,42,11)" fg:x="114138" fg:w="63"/><text x="98.1990%" y="415.50"></text></g><g><title>[[vdso]] (55 samples, 0.05%)</title><rect x="97.9559%" y="389" width="0.0472%" height="15" fill="rgb(219,147,32)" fg:x="114146" fg:w="55"/><text x="98.2059%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (28 samples, 0.02%)</title><rect x="98.0073%" y="485" width="0.0240%" height="15" fill="rgb(246,12,7)" fg:x="114206" fg:w="28"/><text x="98.2573%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (28 samples, 0.02%)</title><rect x="98.0073%" y="469" width="0.0240%" height="15" fill="rgb(243,50,9)" fg:x="114206" fg:w="28"/><text x="98.2573%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (18 samples, 0.02%)</title><rect x="98.0734%" y="469" width="0.0154%" height="15" fill="rgb(219,149,6)" fg:x="114283" fg:w="18"/><text x="98.3234%" y="479.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="98.0734%" y="453" width="0.0154%" height="15" fill="rgb(241,51,42)" fg:x="114283" fg:w="18"/><text x="98.3234%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="98.0760%" y="437" width="0.0129%" height="15" fill="rgb(226,128,27)" fg:x="114286" fg:w="15"/><text x="98.3260%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (15 samples, 0.01%)</title><rect x="98.0760%" y="421" width="0.0129%" height="15" fill="rgb(244,144,4)" fg:x="114286" fg:w="15"/><text x="98.3260%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (15 samples, 0.01%)</title><rect x="98.0760%" y="405" width="0.0129%" height="15" fill="rgb(221,4,13)" fg:x="114286" fg:w="15"/><text x="98.3260%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.01%)</title><rect x="98.0760%" y="389" width="0.0129%" height="15" fill="rgb(208,170,28)" fg:x="114286" fg:w="15"/><text x="98.3260%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (27 samples, 0.02%)</title><rect x="98.0889%" y="469" width="0.0232%" height="15" fill="rgb(226,131,13)" fg:x="114301" fg:w="27"/><text x="98.3389%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_swap (27 samples, 0.02%)</title><rect x="98.0889%" y="453" width="0.0232%" height="15" fill="rgb(215,72,41)" fg:x="114301" fg:w="27"/><text x="98.3389%" y="463.50"></text></g><g><title>__pthread_disable_asynccancel (14 samples, 0.01%)</title><rect x="98.2837%" y="437" width="0.0120%" height="15" fill="rgb(243,108,20)" fg:x="114528" fg:w="14"/><text x="98.5337%" y="447.50"></text></g><g><title>__libc_read (139 samples, 0.12%)</title><rect x="98.2459%" y="453" width="0.1193%" height="15" fill="rgb(230,189,17)" fg:x="114484" fg:w="139"/><text x="98.4959%" y="463.50"></text></g><g><title>__pthread_enable_asynccancel (81 samples, 0.07%)</title><rect x="98.2957%" y="437" width="0.0695%" height="15" fill="rgb(220,50,17)" fg:x="114542" fg:w="81"/><text x="98.5457%" y="447.50"></text></g><g><title>epoll_wait (223 samples, 0.19%)</title><rect x="98.3652%" y="453" width="0.1914%" height="15" fill="rgb(248,152,48)" fg:x="114623" fg:w="223"/><text x="98.6152%" y="463.50"></text></g><g><title>[libc-2.31.so] (52 samples, 0.04%)</title><rect x="98.5119%" y="437" width="0.0446%" height="15" fill="rgb(244,91,11)" fg:x="114794" fg:w="52"/><text x="98.7619%" y="447.50"></text></g><g><title>polling::epoll::Poller::modify (96 samples, 0.08%)</title><rect x="98.5591%" y="453" width="0.0824%" height="15" fill="rgb(220,157,5)" fg:x="114849" fg:w="96"/><text x="98.8091%" y="463.50"></text></g><g><title>polling::epoll::Poller::ctl (85 samples, 0.07%)</title><rect x="98.5686%" y="437" width="0.0729%" height="15" fill="rgb(253,137,8)" fg:x="114860" fg:w="85"/><text x="98.8186%" y="447.50"></text></g><g><title>epoll_ctl (79 samples, 0.07%)</title><rect x="98.5737%" y="421" width="0.0678%" height="15" fill="rgb(217,137,51)" fg:x="114866" fg:w="79"/><text x="98.8237%" y="431.50"></text></g><g><title>polling::epoll::Poller::wait (641 samples, 0.55%)</title><rect x="98.1155%" y="469" width="0.5501%" height="15" fill="rgb(218,209,53)" fg:x="114332" fg:w="641"/><text x="98.3655%" y="479.50"></text></g><g><title>syscall (27 samples, 0.02%)</title><rect x="98.6424%" y="453" width="0.0232%" height="15" fill="rgb(249,137,25)" fg:x="114946" fg:w="27"/><text x="98.8924%" y="463.50"></text></g><g><title>polling::Poller::wait (770 samples, 0.66%)</title><rect x="98.0339%" y="485" width="0.6608%" height="15" fill="rgb(239,155,26)" fg:x="114237" fg:w="770"/><text x="98.2839%" y="495.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (34 samples, 0.03%)</title><rect x="98.6656%" y="469" width="0.0292%" height="15" fill="rgb(227,85,46)" fg:x="114973" fg:w="34"/><text x="98.9156%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (32 samples, 0.03%)</title><rect x="98.6673%" y="453" width="0.0275%" height="15" fill="rgb(251,107,43)" fg:x="114975" fg:w="32"/><text x="98.9173%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::try_lock (32 samples, 0.03%)</title><rect x="98.6673%" y="437" width="0.0275%" height="15" fill="rgb(234,170,33)" fg:x="114975" fg:w="32"/><text x="98.9173%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (32 samples, 0.03%)</title><rect x="98.6673%" y="421" width="0.0275%" height="15" fill="rgb(206,29,35)" fg:x="114975" fg:w="32"/><text x="98.9173%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.03%)</title><rect x="98.6673%" y="405" width="0.0275%" height="15" fill="rgb(227,138,25)" fg:x="114975" fg:w="32"/><text x="98.9173%" y="415.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,527 samples, 1.31%)</title><rect x="97.3852%" y="501" width="1.3104%" height="15" fill="rgb(249,131,35)" fg:x="113481" fg:w="1527"/><text x="97.6352%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (29 samples, 0.02%)</title><rect x="98.6956%" y="453" width="0.0249%" height="15" fill="rgb(239,6,40)" fg:x="115008" fg:w="29"/><text x="98.9456%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_store (29 samples, 0.02%)</title><rect x="98.6956%" y="437" width="0.0249%" height="15" fill="rgb(246,136,47)" fg:x="115008" fg:w="29"/><text x="98.9456%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (31 samples, 0.03%)</title><rect x="98.6956%" y="501" width="0.0266%" height="15" fill="rgb(253,58,26)" fg:x="115008" fg:w="31"/><text x="98.9456%" y="511.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="98.6956%" y="485" width="0.0266%" height="15" fill="rgb(237,141,10)" fg:x="115008" fg:w="31"/><text x="98.9456%" y="495.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (31 samples, 0.03%)</title><rect x="98.6956%" y="469" width="0.0266%" height="15" fill="rgb(234,156,12)" fg:x="115008" fg:w="31"/><text x="98.9456%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (18 samples, 0.02%)</title><rect x="98.7265%" y="501" width="0.0154%" height="15" fill="rgb(243,224,36)" fg:x="115044" fg:w="18"/><text x="98.9765%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_store (18 samples, 0.02%)</title><rect x="98.7265%" y="485" width="0.0154%" height="15" fill="rgb(205,229,51)" fg:x="115044" fg:w="18"/><text x="98.9765%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (15 samples, 0.01%)</title><rect x="98.7591%" y="469" width="0.0129%" height="15" fill="rgb(223,189,4)" fg:x="115082" fg:w="15"/><text x="99.0091%" y="479.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="98.7591%" y="453" width="0.0129%" height="15" fill="rgb(249,167,54)" fg:x="115082" fg:w="15"/><text x="99.0091%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (56 samples, 0.05%)</title><rect x="98.7720%" y="469" width="0.0481%" height="15" fill="rgb(218,34,28)" fg:x="115097" fg:w="56"/><text x="99.0220%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (56 samples, 0.05%)</title><rect x="98.7720%" y="453" width="0.0481%" height="15" fill="rgb(232,109,42)" fg:x="115097" fg:w="56"/><text x="99.0220%" y="463.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (46 samples, 0.04%)</title><rect x="98.8320%" y="389" width="0.0395%" height="15" fill="rgb(248,214,46)" fg:x="115167" fg:w="46"/><text x="99.0820%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (13 samples, 0.01%)</title><rect x="98.8715%" y="389" width="0.0112%" height="15" fill="rgb(244,216,40)" fg:x="115213" fg:w="13"/><text x="99.1215%" y="399.50"></text></g><g><title>std::sys::unix::futex::futex_wait (271 samples, 0.23%)</title><rect x="98.8235%" y="405" width="0.2326%" height="15" fill="rgb(231,226,31)" fg:x="115157" fg:w="271"/><text x="99.0735%" y="415.50"></text></g><g><title>syscall (201 samples, 0.17%)</title><rect x="98.8835%" y="389" width="0.1725%" height="15" fill="rgb(238,38,43)" fg:x="115227" fg:w="201"/><text x="99.1335%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (143 samples, 0.12%)</title><rect x="99.0560%" y="405" width="0.1227%" height="15" fill="rgb(208,88,43)" fg:x="115428" fg:w="143"/><text x="99.3060%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (143 samples, 0.12%)</title><rect x="99.0560%" y="389" width="0.1227%" height="15" fill="rgb(205,136,37)" fg:x="115428" fg:w="143"/><text x="99.3060%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (143 samples, 0.12%)</title><rect x="99.0560%" y="373" width="0.1227%" height="15" fill="rgb(237,34,14)" fg:x="115428" fg:w="143"/><text x="99.3060%" y="383.50"></text></g><g><title>std::sync::condvar::Condvar::wait (435 samples, 0.37%)</title><rect x="98.8200%" y="469" width="0.3733%" height="15" fill="rgb(236,193,44)" fg:x="115153" fg:w="435"/><text x="99.0700%" y="479.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (434 samples, 0.37%)</title><rect x="98.8209%" y="453" width="0.3724%" height="15" fill="rgb(231,48,10)" fg:x="115154" fg:w="434"/><text x="99.0709%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (434 samples, 0.37%)</title><rect x="98.8209%" y="437" width="0.3724%" height="15" fill="rgb(213,141,34)" fg:x="115154" fg:w="434"/><text x="99.0709%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (434 samples, 0.37%)</title><rect x="98.8209%" y="421" width="0.3724%" height="15" fill="rgb(249,130,34)" fg:x="115154" fg:w="434"/><text x="99.0709%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (17 samples, 0.01%)</title><rect x="99.1787%" y="405" width="0.0146%" height="15" fill="rgb(219,42,41)" fg:x="115571" fg:w="17"/><text x="99.4287%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (17 samples, 0.01%)</title><rect x="99.1787%" y="389" width="0.0146%" height="15" fill="rgb(224,100,54)" fg:x="115571" fg:w="17"/><text x="99.4287%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (17 samples, 0.01%)</title><rect x="99.1787%" y="373" width="0.0146%" height="15" fill="rgb(229,200,27)" fg:x="115571" fg:w="17"/><text x="99.4287%" y="383.50"></text></g><g><title>parking::Parker::park (533 samples, 0.46%)</title><rect x="98.7505%" y="501" width="0.4574%" height="15" fill="rgb(217,118,10)" fg:x="115072" fg:w="533"/><text x="99.0005%" y="511.50"></text></g><g><title>parking::Inner::park (531 samples, 0.46%)</title><rect x="98.7522%" y="485" width="0.4557%" height="15" fill="rgb(206,22,3)" fg:x="115074" fg:w="531"/><text x="99.0022%" y="495.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.01%)</title><rect x="99.1933%" y="469" width="0.0146%" height="15" fill="rgb(232,163,46)" fg:x="115588" fg:w="17"/><text x="99.4433%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="99.1976%" y="453" width="0.0103%" height="15" fill="rgb(206,95,13)" fg:x="115593" fg:w="12"/><text x="99.4476%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (12 samples, 0.01%)</title><rect x="99.1976%" y="437" width="0.0103%" height="15" fill="rgb(253,154,18)" fg:x="115593" fg:w="12"/><text x="99.4476%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (12 samples, 0.01%)</title><rect x="99.1976%" y="421" width="0.0103%" height="15" fill="rgb(219,32,23)" fg:x="115593" fg:w="12"/><text x="99.4476%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.01%)</title><rect x="99.1976%" y="405" width="0.0103%" height="15" fill="rgb(230,191,45)" fg:x="115593" fg:w="12"/><text x="99.4476%" y="415.50"></text></g><g><title>parking::Parker::park_timeout (291 samples, 0.25%)</title><rect x="99.2079%" y="501" width="0.2497%" height="15" fill="rgb(229,64,36)" fg:x="115605" fg:w="291"/><text x="99.4579%" y="511.50"></text></g><g><title>parking::Inner::park (255 samples, 0.22%)</title><rect x="99.2388%" y="485" width="0.2188%" height="15" fill="rgb(205,129,25)" fg:x="115641" fg:w="255"/><text x="99.4888%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (238 samples, 0.20%)</title><rect x="99.2534%" y="469" width="0.2042%" height="15" fill="rgb(254,112,7)" fg:x="115658" fg:w="238"/><text x="99.5034%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (238 samples, 0.20%)</title><rect x="99.2534%" y="453" width="0.2042%" height="15" fill="rgb(226,53,48)" fg:x="115658" fg:w="238"/><text x="99.5034%" y="463.50"></text></g><g><title>std::panic::catch_unwind (15,112 samples, 12.97%)</title><rect x="86.5311%" y="789" width="12.9686%" height="15" fill="rgb(214,153,38)" fg:x="100833" fg:w="15112"/><text x="86.7811%" y="799.50">std::panic::catch_u..</text></g><g><title>std::panicking::try (15,112 samples, 12.97%)</title><rect x="86.5311%" y="773" width="12.9686%" height="15" fill="rgb(243,101,7)" fg:x="100833" fg:w="15112"/><text x="86.7811%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (15,112 samples, 12.97%)</title><rect x="86.5311%" y="757" width="12.9686%" height="15" fill="rgb(240,140,22)" fg:x="100833" fg:w="15112"/><text x="86.7811%" y="767.50">std::panicking::try..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15,112 samples, 12.97%)</title><rect x="86.5311%" y="741" width="12.9686%" height="15" fill="rgb(235,114,2)" fg:x="100833" fg:w="15112"/><text x="86.7811%" y="751.50">&lt;core::panic::unwin..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (15,112 samples, 12.97%)</title><rect x="86.5311%" y="725" width="12.9686%" height="15" fill="rgb(242,59,12)" fg:x="100833" fg:w="15112"/><text x="86.7811%" y="735.50">std::thread::Builde..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15,112 samples, 12.97%)</title><rect x="86.5311%" y="709" width="12.9686%" height="15" fill="rgb(252,134,9)" fg:x="100833" fg:w="15112"/><text x="86.7811%" y="719.50">std::sys_common::ba..</text></g><g><title>core::ops::function::FnOnce::call_once (15,112 samples, 12.97%)</title><rect x="86.5311%" y="693" width="12.9686%" height="15" fill="rgb(236,4,44)" fg:x="100833" fg:w="15112"/><text x="86.7811%" y="703.50">core::ops::function..</text></g><g><title>async_global_executor::threading::thread_main_loop (15,112 samples, 12.97%)</title><rect x="86.5311%" y="677" width="12.9686%" height="15" fill="rgb(254,172,41)" fg:x="100833" fg:w="15112"/><text x="86.7811%" y="687.50">async_global_execut..</text></g><g><title>std::panic::catch_unwind (15,101 samples, 12.96%)</title><rect x="86.5406%" y="661" width="12.9591%" height="15" fill="rgb(244,63,20)" fg:x="100844" fg:w="15101"/><text x="86.7906%" y="671.50">std::panic::catch_u..</text></g><g><title>std::panicking::try (15,101 samples, 12.96%)</title><rect x="86.5406%" y="645" width="12.9591%" height="15" fill="rgb(250,73,31)" fg:x="100844" fg:w="15101"/><text x="86.7906%" y="655.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (15,101 samples, 12.96%)</title><rect x="86.5406%" y="629" width="12.9591%" height="15" fill="rgb(241,38,36)" fg:x="100844" fg:w="15101"/><text x="86.7906%" y="639.50">std::panicking::try..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (15,101 samples, 12.96%)</title><rect x="86.5406%" y="613" width="12.9591%" height="15" fill="rgb(245,211,2)" fg:x="100844" fg:w="15101"/><text x="86.7906%" y="623.50">async_global_execut..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15,101 samples, 12.96%)</title><rect x="86.5406%" y="597" width="12.9591%" height="15" fill="rgb(206,120,28)" fg:x="100844" fg:w="15101"/><text x="86.7906%" y="607.50">std::thread::local:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15,101 samples, 12.96%)</title><rect x="86.5406%" y="581" width="12.9591%" height="15" fill="rgb(211,59,34)" fg:x="100844" fg:w="15101"/><text x="86.7906%" y="591.50">std::thread::local:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (15,101 samples, 12.96%)</title><rect x="86.5406%" y="565" width="12.9591%" height="15" fill="rgb(233,168,5)" fg:x="100844" fg:w="15101"/><text x="86.7906%" y="575.50">async_global_execut..</text></g><g><title>async_global_executor::reactor::block_on (15,101 samples, 12.96%)</title><rect x="86.5406%" y="549" width="12.9591%" height="15" fill="rgb(234,33,13)" fg:x="100844" fg:w="15101"/><text x="86.7906%" y="559.50">async_global_execut..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (15,101 samples, 12.96%)</title><rect x="86.5406%" y="533" width="12.9591%" height="15" fill="rgb(231,150,26)" fg:x="100844" fg:w="15101"/><text x="86.7906%" y="543.50">async_global_execut..</text></g><g><title>async_io::driver::block_on (15,101 samples, 12.96%)</title><rect x="86.5406%" y="517" width="12.9591%" height="15" fill="rgb(217,191,4)" fg:x="100844" fg:w="15101"/><text x="86.7906%" y="527.50">async_io::driver::b..</text></g><g><title>std::time::Instant::now (47 samples, 0.04%)</title><rect x="99.4594%" y="501" width="0.0403%" height="15" fill="rgb(246,198,38)" fg:x="115898" fg:w="47"/><text x="99.7094%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (47 samples, 0.04%)</title><rect x="99.4594%" y="485" width="0.0403%" height="15" fill="rgb(245,64,37)" fg:x="115898" fg:w="47"/><text x="99.7094%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (47 samples, 0.04%)</title><rect x="99.4594%" y="469" width="0.0403%" height="15" fill="rgb(250,30,36)" fg:x="115898" fg:w="47"/><text x="99.7094%" y="479.50"></text></g><g><title>__clock_gettime (40 samples, 0.03%)</title><rect x="99.4654%" y="453" width="0.0343%" height="15" fill="rgb(217,86,53)" fg:x="115905" fg:w="40"/><text x="99.7154%" y="463.50"></text></g><g><title>__vdso_clock_gettime (37 samples, 0.03%)</title><rect x="99.4679%" y="437" width="0.0318%" height="15" fill="rgb(228,157,16)" fg:x="115908" fg:w="37"/><text x="99.7179%" y="447.50"></text></g><g><title>[[vdso]] (32 samples, 0.03%)</title><rect x="99.4722%" y="421" width="0.0275%" height="15" fill="rgb(217,59,31)" fg:x="115913" fg:w="32"/><text x="99.7222%" y="431.50"></text></g><g><title>clone (15,125 samples, 12.98%)</title><rect x="86.5226%" y="901" width="12.9797%" height="15" fill="rgb(237,138,41)" fg:x="100823" fg:w="15125"/><text x="86.7726%" y="911.50">clone</text></g><g><title>start_thread (15,116 samples, 12.97%)</title><rect x="86.5303%" y="885" width="12.9720%" height="15" fill="rgb(227,91,49)" fg:x="100832" fg:w="15116"/><text x="86.7803%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15,115 samples, 12.97%)</title><rect x="86.5311%" y="869" width="12.9711%" height="15" fill="rgb(247,21,44)" fg:x="100833" fg:w="15115"/><text x="86.7811%" y="879.50">std::sys::unix::thr..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15,115 samples, 12.97%)</title><rect x="86.5311%" y="853" width="12.9711%" height="15" fill="rgb(219,210,51)" fg:x="100833" fg:w="15115"/><text x="86.7811%" y="863.50">&lt;alloc::boxed::Box&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15,115 samples, 12.97%)</title><rect x="86.5311%" y="837" width="12.9711%" height="15" fill="rgb(209,140,6)" fg:x="100833" fg:w="15115"/><text x="86.7811%" y="847.50">&lt;alloc::boxed::Box&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (15,115 samples, 12.97%)</title><rect x="86.5311%" y="821" width="12.9711%" height="15" fill="rgb(221,188,24)" fg:x="100833" fg:w="15115"/><text x="86.7811%" y="831.50">core::ops::function..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (15,115 samples, 12.97%)</title><rect x="86.5311%" y="805" width="12.9711%" height="15" fill="rgb(232,154,20)" fg:x="100833" fg:w="15115"/><text x="86.7811%" y="815.50">std::thread::Builde..</text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (171 samples, 0.15%)</title><rect x="99.5641%" y="901" width="0.1467%" height="15" fill="rgb(244,137,50)" fg:x="116020" fg:w="171"/><text x="99.8141%" y="911.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (18 samples, 0.02%)</title><rect x="99.6954%" y="885" width="0.0154%" height="15" fill="rgb(225,185,43)" fg:x="116173" fg:w="18"/><text x="99.9454%" y="895.50"></text></g><g><title>async-std/runti (116,143 samples, 99.67%)</title><rect x="0.0541%" y="917" width="99.6696%" height="15" fill="rgb(213,205,38)" fg:x="63" fg:w="116143"/><text x="0.3041%" y="927.50">async-std/runti</text></g><g><title>std::sys::unix::futex::futex_wait (36 samples, 0.03%)</title><rect x="99.7486%" y="581" width="0.0309%" height="15" fill="rgb(236,73,12)" fg:x="116235" fg:w="36"/><text x="99.9986%" y="591.50"></text></g><g><title>syscall (32 samples, 0.03%)</title><rect x="99.7520%" y="565" width="0.0275%" height="15" fill="rgb(235,219,13)" fg:x="116239" fg:w="32"/><text x="100.0020%" y="575.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (42 samples, 0.04%)</title><rect x="99.7486%" y="661" width="0.0360%" height="15" fill="rgb(218,59,36)" fg:x="116235" fg:w="42"/><text x="99.9986%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (42 samples, 0.04%)</title><rect x="99.7486%" y="645" width="0.0360%" height="15" fill="rgb(205,110,39)" fg:x="116235" fg:w="42"/><text x="99.9986%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (42 samples, 0.04%)</title><rect x="99.7486%" y="629" width="0.0360%" height="15" fill="rgb(218,206,42)" fg:x="116235" fg:w="42"/><text x="99.9986%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (42 samples, 0.04%)</title><rect x="99.7486%" y="613" width="0.0360%" height="15" fill="rgb(248,125,24)" fg:x="116235" fg:w="42"/><text x="99.9986%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (42 samples, 0.04%)</title><rect x="99.7486%" y="597" width="0.0360%" height="15" fill="rgb(242,28,27)" fg:x="116235" fg:w="42"/><text x="99.9986%" y="607.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (48 samples, 0.04%)</title><rect x="99.7486%" y="677" width="0.0412%" height="15" fill="rgb(216,228,15)" fg:x="116235" fg:w="48"/><text x="99.9986%" y="687.50"></text></g><g><title>std::panic::catch_unwind (50 samples, 0.04%)</title><rect x="99.7486%" y="789" width="0.0429%" height="15" fill="rgb(235,116,46)" fg:x="116235" fg:w="50"/><text x="99.9986%" y="799.50"></text></g><g><title>std::panicking::try (50 samples, 0.04%)</title><rect x="99.7486%" y="773" width="0.0429%" height="15" fill="rgb(224,18,32)" fg:x="116235" fg:w="50"/><text x="99.9986%" y="783.50"></text></g><g><title>std::panicking::try::do_call (50 samples, 0.04%)</title><rect x="99.7486%" y="757" width="0.0429%" height="15" fill="rgb(252,5,12)" fg:x="116235" fg:w="50"/><text x="99.9986%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (50 samples, 0.04%)</title><rect x="99.7486%" y="741" width="0.0429%" height="15" fill="rgb(251,36,5)" fg:x="116235" fg:w="50"/><text x="99.9986%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (50 samples, 0.04%)</title><rect x="99.7486%" y="725" width="0.0429%" height="15" fill="rgb(217,53,14)" fg:x="116235" fg:w="50"/><text x="99.9986%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (50 samples, 0.04%)</title><rect x="99.7486%" y="709" width="0.0429%" height="15" fill="rgb(215,86,45)" fg:x="116235" fg:w="50"/><text x="99.9986%" y="719.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (50 samples, 0.04%)</title><rect x="99.7486%" y="693" width="0.0429%" height="15" fill="rgb(242,169,11)" fg:x="116235" fg:w="50"/><text x="99.9986%" y="703.50"></text></g><g><title>clone (52 samples, 0.04%)</title><rect x="99.7486%" y="901" width="0.0446%" height="15" fill="rgb(211,213,45)" fg:x="116235" fg:w="52"/><text x="99.9986%" y="911.50"></text></g><g><title>start_thread (52 samples, 0.04%)</title><rect x="99.7486%" y="885" width="0.0446%" height="15" fill="rgb(205,88,11)" fg:x="116235" fg:w="52"/><text x="99.9986%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (52 samples, 0.04%)</title><rect x="99.7486%" y="869" width="0.0446%" height="15" fill="rgb(252,69,26)" fg:x="116235" fg:w="52"/><text x="99.9986%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (52 samples, 0.04%)</title><rect x="99.7486%" y="853" width="0.0446%" height="15" fill="rgb(246,123,37)" fg:x="116235" fg:w="52"/><text x="99.9986%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (52 samples, 0.04%)</title><rect x="99.7486%" y="837" width="0.0446%" height="15" fill="rgb(212,205,5)" fg:x="116235" fg:w="52"/><text x="99.9986%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (52 samples, 0.04%)</title><rect x="99.7486%" y="821" width="0.0446%" height="15" fill="rgb(253,148,0)" fg:x="116235" fg:w="52"/><text x="99.9986%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (52 samples, 0.04%)</title><rect x="99.7486%" y="805" width="0.0446%" height="15" fill="rgb(239,22,4)" fg:x="116235" fg:w="52"/><text x="99.9986%" y="815.50"></text></g><g><title>tokio-runtime-w (57 samples, 0.05%)</title><rect x="99.7451%" y="917" width="0.0489%" height="15" fill="rgb(226,26,53)" fg:x="116231" fg:w="57"/><text x="99.9951%" y="927.50"></text></g><g><title>[ld-2.31.so] (14 samples, 0.01%)</title><rect x="99.7949%" y="901" width="0.0120%" height="15" fill="rgb(225,229,45)" fg:x="116289" fg:w="14"/><text x="100.0449%" y="911.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="99.8069%" y="901" width="0.0189%" height="15" fill="rgb(220,60,37)" fg:x="116303" fg:w="22"/><text x="100.0569%" y="911.50"></text></g><g><title>all (116,528 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(217,180,35)" fg:x="0" fg:w="116528"/><text x="0.2500%" y="943.50"></text></g><g><title>tremor-main (240 samples, 0.21%)</title><rect x="99.7940%" y="917" width="0.2060%" height="15" fill="rgb(229,7,53)" fg:x="116288" fg:w="240"/><text x="100.0440%" y="927.50"></text></g><g><title>clone (203 samples, 0.17%)</title><rect x="99.8258%" y="901" width="0.1742%" height="15" fill="rgb(254,137,3)" fg:x="116325" fg:w="203"/><text x="100.0758%" y="911.50"></text></g><g><title>start_thread (15 samples, 0.01%)</title><rect x="99.9871%" y="885" width="0.0129%" height="15" fill="rgb(215,140,41)" fg:x="116513" fg:w="15"/><text x="100.2371%" y="895.50"></text></g></svg></svg>