<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="965.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="116896"><g><title>std::sys::unix::futex::futex_wait (42 samples, 0.04%)</title><rect x="0.0180%" y="565" width="0.0359%" height="15" fill="rgb(227,0,7)" fg:x="21" fg:w="42"/><text x="0.2680%" y="575.50"></text></g><g><title>syscall (27 samples, 0.02%)</title><rect x="0.0308%" y="549" width="0.0231%" height="15" fill="rgb(217,0,24)" fg:x="36" fg:w="27"/><text x="0.2808%" y="559.50"></text></g><g><title>std::panic::catch_unwind (62 samples, 0.05%)</title><rect x="0.0060%" y="789" width="0.0530%" height="15" fill="rgb(221,193,54)" fg:x="7" fg:w="62"/><text x="0.2560%" y="799.50"></text></g><g><title>std::panicking::try (62 samples, 0.05%)</title><rect x="0.0060%" y="773" width="0.0530%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="62"/><text x="0.2560%" y="783.50"></text></g><g><title>std::panicking::try::do_call (62 samples, 0.05%)</title><rect x="0.0060%" y="757" width="0.0530%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="62"/><text x="0.2560%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (62 samples, 0.05%)</title><rect x="0.0060%" y="741" width="0.0530%" height="15" fill="rgb(232,128,0)" fg:x="7" fg:w="62"/><text x="0.2560%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (62 samples, 0.05%)</title><rect x="0.0060%" y="725" width="0.0530%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="62"/><text x="0.2560%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (62 samples, 0.05%)</title><rect x="0.0060%" y="709" width="0.0530%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="62"/><text x="0.2560%" y="719.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (62 samples, 0.05%)</title><rect x="0.0060%" y="693" width="0.0530%" height="15" fill="rgb(218,30,26)" fg:x="7" fg:w="62"/><text x="0.2560%" y="703.50"></text></g><g><title>async_io::driver::main_loop (62 samples, 0.05%)</title><rect x="0.0060%" y="677" width="0.0530%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="62"/><text x="0.2560%" y="687.50"></text></g><g><title>parking::Parker::park_timeout (55 samples, 0.05%)</title><rect x="0.0120%" y="661" width="0.0471%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="55"/><text x="0.2620%" y="671.50"></text></g><g><title>parking::Inner::park (55 samples, 0.05%)</title><rect x="0.0120%" y="645" width="0.0471%" height="15" fill="rgb(240,193,28)" fg:x="14" fg:w="55"/><text x="0.2620%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (50 samples, 0.04%)</title><rect x="0.0163%" y="629" width="0.0428%" height="15" fill="rgb(216,20,37)" fg:x="19" fg:w="50"/><text x="0.2663%" y="639.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (50 samples, 0.04%)</title><rect x="0.0163%" y="613" width="0.0428%" height="15" fill="rgb(206,188,39)" fg:x="19" fg:w="50"/><text x="0.2663%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_timeout (50 samples, 0.04%)</title><rect x="0.0163%" y="597" width="0.0428%" height="15" fill="rgb(217,207,13)" fg:x="19" fg:w="50"/><text x="0.2663%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (50 samples, 0.04%)</title><rect x="0.0163%" y="581" width="0.0428%" height="15" fill="rgb(231,73,38)" fg:x="19" fg:w="50"/><text x="0.2663%" y="591.50"></text></g><g><title>async-io (70 samples, 0.06%)</title><rect x="0.0000%" y="917" width="0.0599%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="70"/><text x="0.2500%" y="927.50"></text></g><g><title>clone (63 samples, 0.05%)</title><rect x="0.0060%" y="901" width="0.0539%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="63"/><text x="0.2560%" y="911.50"></text></g><g><title>start_thread (63 samples, 0.05%)</title><rect x="0.0060%" y="885" width="0.0539%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="63"/><text x="0.2560%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (63 samples, 0.05%)</title><rect x="0.0060%" y="869" width="0.0539%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="63"/><text x="0.2560%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (63 samples, 0.05%)</title><rect x="0.0060%" y="853" width="0.0539%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="63"/><text x="0.2560%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (63 samples, 0.05%)</title><rect x="0.0060%" y="837" width="0.0539%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="63"/><text x="0.2560%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (63 samples, 0.05%)</title><rect x="0.0060%" y="821" width="0.0539%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="63"/><text x="0.2560%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (63 samples, 0.05%)</title><rect x="0.0060%" y="805" width="0.0539%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="63"/><text x="0.2560%" y="815.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (33 samples, 0.03%)</title><rect x="0.0607%" y="901" width="0.0282%" height="15" fill="rgb(241,131,45)" fg:x="71" fg:w="33"/><text x="0.3107%" y="911.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="0.0787%" y="885" width="0.0103%" height="15" fill="rgb(249,31,29)" fg:x="92" fg:w="12"/><text x="0.3287%" y="895.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="0.0787%" y="869" width="0.0103%" height="15" fill="rgb(225,111,53)" fg:x="92" fg:w="12"/><text x="0.3287%" y="879.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (12 samples, 0.01%)</title><rect x="0.0787%" y="853" width="0.0103%" height="15" fill="rgb(238,160,17)" fg:x="92" fg:w="12"/><text x="0.3287%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (12 samples, 0.01%)</title><rect x="0.0787%" y="837" width="0.0103%" height="15" fill="rgb(214,148,48)" fg:x="92" fg:w="12"/><text x="0.3287%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.01%)</title><rect x="0.0787%" y="821" width="0.0103%" height="15" fill="rgb(232,36,49)" fg:x="92" fg:w="12"/><text x="0.3287%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="0.0787%" y="805" width="0.0103%" height="15" fill="rgb(209,103,24)" fg:x="92" fg:w="12"/><text x="0.3287%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="0.0787%" y="789" width="0.0103%" height="15" fill="rgb(229,88,8)" fg:x="92" fg:w="12"/><text x="0.3287%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="0.0787%" y="773" width="0.0103%" height="15" fill="rgb(213,181,19)" fg:x="92" fg:w="12"/><text x="0.3287%" y="783.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="0.1112%" y="901" width="0.0103%" height="15" fill="rgb(254,191,54)" fg:x="130" fg:w="12"/><text x="0.3612%" y="911.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (23 samples, 0.02%)</title><rect x="0.1369%" y="885" width="0.0197%" height="15" fill="rgb(241,83,37)" fg:x="160" fg:w="23"/><text x="0.3869%" y="895.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (23 samples, 0.02%)</title><rect x="0.1642%" y="885" width="0.0197%" height="15" fill="rgb(233,36,39)" fg:x="192" fg:w="23"/><text x="0.4142%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="0.1839%" y="885" width="0.0214%" height="15" fill="rgb(226,3,54)" fg:x="215" fg:w="25"/><text x="0.4339%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="0.2070%" y="885" width="0.0154%" height="15" fill="rgb(245,192,40)" fg:x="242" fg:w="18"/><text x="0.4570%" y="895.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="0.2395%" y="885" width="0.0163%" height="15" fill="rgb(238,167,29)" fg:x="280" fg:w="19"/><text x="0.4895%" y="895.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="0.2558%" y="885" width="0.0479%" height="15" fill="rgb(232,182,51)" fg:x="299" fg:w="56"/><text x="0.5058%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (19 samples, 0.02%)</title><rect x="0.2874%" y="869" width="0.0163%" height="15" fill="rgb(231,60,39)" fg:x="336" fg:w="19"/><text x="0.5374%" y="879.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="0.2874%" y="853" width="0.0163%" height="15" fill="rgb(208,69,12)" fg:x="336" fg:w="19"/><text x="0.5374%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (19 samples, 0.02%)</title><rect x="0.2874%" y="837" width="0.0163%" height="15" fill="rgb(235,93,37)" fg:x="336" fg:w="19"/><text x="0.5374%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="0.2874%" y="821" width="0.0163%" height="15" fill="rgb(213,116,39)" fg:x="336" fg:w="19"/><text x="0.5374%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="0.2874%" y="805" width="0.0163%" height="15" fill="rgb(222,207,29)" fg:x="336" fg:w="19"/><text x="0.5374%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="0.2874%" y="789" width="0.0163%" height="15" fill="rgb(206,96,30)" fg:x="336" fg:w="19"/><text x="0.5374%" y="799.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="0.2874%" y="773" width="0.0163%" height="15" fill="rgb(218,138,4)" fg:x="336" fg:w="19"/><text x="0.5374%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="0.2874%" y="757" width="0.0163%" height="15" fill="rgb(250,191,14)" fg:x="336" fg:w="19"/><text x="0.5374%" y="767.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (105 samples, 0.09%)</title><rect x="0.3037%" y="885" width="0.0898%" height="15" fill="rgb(239,60,40)" fg:x="355" fg:w="105"/><text x="0.5537%" y="895.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="0.3935%" y="885" width="0.0128%" height="15" fill="rgb(206,27,48)" fg:x="460" fg:w="15"/><text x="0.6435%" y="895.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (13 samples, 0.01%)</title><rect x="0.4825%" y="869" width="0.0111%" height="15" fill="rgb(225,35,8)" fg:x="564" fg:w="13"/><text x="0.7325%" y="879.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (109 samples, 0.09%)</title><rect x="0.4063%" y="885" width="0.0932%" height="15" fill="rgb(250,213,24)" fg:x="475" fg:w="109"/><text x="0.6563%" y="895.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (25 samples, 0.02%)</title><rect x="0.6673%" y="869" width="0.0214%" height="15" fill="rgb(247,123,22)" fg:x="780" fg:w="25"/><text x="0.9173%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (39 samples, 0.03%)</title><rect x="0.6955%" y="869" width="0.0334%" height="15" fill="rgb(231,138,38)" fg:x="813" fg:w="39"/><text x="0.9455%" y="879.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (14 samples, 0.01%)</title><rect x="0.7331%" y="869" width="0.0120%" height="15" fill="rgb(231,145,46)" fg:x="857" fg:w="14"/><text x="0.9831%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (373 samples, 0.32%)</title><rect x="0.4996%" y="885" width="0.3191%" height="15" fill="rgb(251,118,11)" fg:x="584" fg:w="373"/><text x="0.7496%" y="895.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (86 samples, 0.07%)</title><rect x="0.7451%" y="869" width="0.0736%" height="15" fill="rgb(217,147,25)" fg:x="871" fg:w="86"/><text x="0.9951%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (55 samples, 0.05%)</title><rect x="0.8187%" y="885" width="0.0471%" height="15" fill="rgb(247,81,37)" fg:x="957" fg:w="55"/><text x="1.0687%" y="895.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="0.8674%" y="885" width="0.0128%" height="15" fill="rgb(209,12,38)" fg:x="1014" fg:w="15"/><text x="1.1174%" y="895.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="0.8803%" y="885" width="0.0291%" height="15" fill="rgb(227,1,9)" fg:x="1029" fg:w="34"/><text x="1.1303%" y="895.50"></text></g><g><title>&lt;tremor_pipeline::op::EventAndInsights as core::convert::From&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt;&gt;::from (24 samples, 0.02%)</title><rect x="0.9094%" y="885" width="0.0205%" height="15" fill="rgb(248,47,43)" fg:x="1063" fg:w="24"/><text x="1.1594%" y="895.50"></text></g><g><title>&lt;tremor_pipeline::op::grouper::bucket::Grouper as tremor_pipeline::op::Operator&gt;::on_event (67 samples, 0.06%)</title><rect x="0.9299%" y="885" width="0.0573%" height="15" fill="rgb(221,10,30)" fg:x="1087" fg:w="67"/><text x="1.1799%" y="895.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::operator::TrickleOperator as tremor_pipeline::op::Operator&gt;::on_event (31 samples, 0.03%)</title><rect x="0.9872%" y="885" width="0.0265%" height="15" fill="rgb(210,229,1)" fg:x="1154" fg:w="31"/><text x="1.2372%" y="895.50"></text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::decode (18 samples, 0.02%)</title><rect x="1.0223%" y="885" width="0.0154%" height="15" fill="rgb(222,148,37)" fg:x="1195" fg:w="18"/><text x="1.2723%" y="895.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (18 samples, 0.02%)</title><rect x="1.0377%" y="885" width="0.0154%" height="15" fill="rgb(234,67,33)" fg:x="1213" fg:w="18"/><text x="1.2877%" y="895.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (89 samples, 0.08%)</title><rect x="1.0531%" y="885" width="0.0761%" height="15" fill="rgb(247,98,35)" fg:x="1231" fg:w="89"/><text x="1.3031%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (41 samples, 0.04%)</title><rect x="1.0941%" y="869" width="0.0351%" height="15" fill="rgb(247,138,52)" fg:x="1279" fg:w="41"/><text x="1.3441%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (30 samples, 0.03%)</title><rect x="1.1035%" y="853" width="0.0257%" height="15" fill="rgb(213,79,30)" fg:x="1290" fg:w="30"/><text x="1.3535%" y="863.50"></text></g><g><title>[[vdso]] (13 samples, 0.01%)</title><rect x="1.1455%" y="885" width="0.0111%" height="15" fill="rgb(246,177,23)" fg:x="1339" fg:w="13"/><text x="1.3955%" y="895.50"></text></g><g><title>[libc-2.31.so] (144 samples, 0.12%)</title><rect x="1.1566%" y="885" width="0.1232%" height="15" fill="rgb(230,62,27)" fg:x="1352" fg:w="144"/><text x="1.4066%" y="895.50"></text></g><g><title>__clock_gettime (55 samples, 0.05%)</title><rect x="1.2798%" y="885" width="0.0471%" height="15" fill="rgb(216,154,8)" fg:x="1496" fg:w="55"/><text x="1.5298%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (24 samples, 0.02%)</title><rect x="1.3302%" y="885" width="0.0205%" height="15" fill="rgb(244,35,45)" fg:x="1555" fg:w="24"/><text x="1.5802%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (15 samples, 0.01%)</title><rect x="1.3379%" y="869" width="0.0128%" height="15" fill="rgb(251,115,12)" fg:x="1564" fg:w="15"/><text x="1.5879%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (49 samples, 0.04%)</title><rect x="1.3551%" y="885" width="0.0419%" height="15" fill="rgb(240,54,50)" fg:x="1584" fg:w="49"/><text x="1.6051%" y="895.50"></text></g><g><title>async_executor::Ticker::wake (14 samples, 0.01%)</title><rect x="1.4278%" y="885" width="0.0120%" height="15" fill="rgb(233,84,52)" fg:x="1669" fg:w="14"/><text x="1.6778%" y="895.50"></text></g><g><title>async_executor::steal (151 samples, 0.13%)</title><rect x="1.4397%" y="885" width="0.1292%" height="15" fill="rgb(207,117,47)" fg:x="1683" fg:w="151"/><text x="1.6897%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (14 samples, 0.01%)</title><rect x="1.5766%" y="885" width="0.0120%" height="15" fill="rgb(249,43,39)" fg:x="1843" fg:w="14"/><text x="1.8266%" y="895.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (327 samples, 0.28%)</title><rect x="1.5912%" y="885" width="0.2797%" height="15" fill="rgb(209,38,44)" fg:x="1860" fg:w="327"/><text x="1.8412%" y="895.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (31 samples, 0.03%)</title><rect x="1.8709%" y="885" width="0.0265%" height="15" fill="rgb(236,212,23)" fg:x="2187" fg:w="31"/><text x="2.1209%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (30 samples, 0.03%)</title><rect x="1.8974%" y="885" width="0.0257%" height="15" fill="rgb(242,79,21)" fg:x="2218" fg:w="30"/><text x="2.1474%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[tremor_value::value::Value]&gt; (26 samples, 0.02%)</title><rect x="1.9291%" y="885" width="0.0222%" height="15" fill="rgb(211,96,35)" fg:x="2255" fg:w="26"/><text x="2.1791%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (28 samples, 0.02%)</title><rect x="1.9667%" y="885" width="0.0240%" height="15" fill="rgb(253,215,40)" fg:x="2299" fg:w="28"/><text x="2.2167%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt; (16 samples, 0.01%)</title><rect x="1.9770%" y="869" width="0.0137%" height="15" fill="rgb(211,81,21)" fg:x="2311" fg:w="16"/><text x="2.2270%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_source_reply::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="1.9907%" y="885" width="0.0103%" height="15" fill="rgb(208,190,38)" fg:x="2327" fg:w="12"/><text x="2.2407%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="2.0009%" y="885" width="0.0120%" height="15" fill="rgb(235,213,38)" fg:x="2339" fg:w="14"/><text x="2.2509%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="2.0129%" y="885" width="0.0137%" height="15" fill="rgb(237,122,38)" fg:x="2353" fg:w="16"/><text x="2.2629%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="2.0266%" y="885" width="0.0171%" height="15" fill="rgb(244,218,35)" fg:x="2369" fg:w="20"/><text x="2.2766%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="2.0437%" y="885" width="0.0120%" height="15" fill="rgb(240,68,47)" fg:x="2389" fg:w="14"/><text x="2.2937%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (114 samples, 0.10%)</title><rect x="2.0617%" y="885" width="0.0975%" height="15" fill="rgb(210,16,53)" fg:x="2410" fg:w="114"/><text x="2.3117%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (22 samples, 0.02%)</title><rect x="2.1729%" y="869" width="0.0188%" height="15" fill="rgb(235,124,12)" fg:x="2540" fg:w="22"/><text x="2.4229%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="2.1729%" y="853" width="0.0188%" height="15" fill="rgb(224,169,11)" fg:x="2540" fg:w="22"/><text x="2.4229%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="2.1729%" y="837" width="0.0188%" height="15" fill="rgb(250,166,2)" fg:x="2540" fg:w="22"/><text x="2.4229%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="2.1729%" y="821" width="0.0188%" height="15" fill="rgb(242,216,29)" fg:x="2540" fg:w="22"/><text x="2.4229%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="2.1729%" y="805" width="0.0188%" height="15" fill="rgb(230,116,27)" fg:x="2540" fg:w="22"/><text x="2.4229%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="2.1729%" y="789" width="0.0188%" height="15" fill="rgb(228,99,48)" fg:x="2540" fg:w="22"/><text x="2.4229%" y="799.50"></text></g><g><title>__rg_dealloc (22 samples, 0.02%)</title><rect x="2.1729%" y="773" width="0.0188%" height="15" fill="rgb(253,11,6)" fg:x="2540" fg:w="22"/><text x="2.4229%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (22 samples, 0.02%)</title><rect x="2.1729%" y="757" width="0.0188%" height="15" fill="rgb(247,143,39)" fg:x="2540" fg:w="22"/><text x="2.4229%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (38 samples, 0.03%)</title><rect x="2.1626%" y="885" width="0.0325%" height="15" fill="rgb(236,97,10)" fg:x="2528" fg:w="38"/><text x="2.4126%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="2.2020%" y="853" width="0.0120%" height="15" fill="rgb(233,208,19)" fg:x="2574" fg:w="14"/><text x="2.4520%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (14 samples, 0.01%)</title><rect x="2.2020%" y="837" width="0.0120%" height="15" fill="rgb(216,164,2)" fg:x="2574" fg:w="14"/><text x="2.4520%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="2.2020%" y="821" width="0.0120%" height="15" fill="rgb(220,129,5)" fg:x="2574" fg:w="14"/><text x="2.4520%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="2.2020%" y="805" width="0.0120%" height="15" fill="rgb(242,17,10)" fg:x="2574" fg:w="14"/><text x="2.4520%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="2.2020%" y="869" width="0.0128%" height="15" fill="rgb(242,107,0)" fg:x="2574" fg:w="15"/><text x="2.4520%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (31 samples, 0.03%)</title><rect x="2.1951%" y="885" width="0.0265%" height="15" fill="rgb(251,28,31)" fg:x="2566" fg:w="31"/><text x="2.4451%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (40 samples, 0.03%)</title><rect x="2.4629%" y="869" width="0.0342%" height="15" fill="rgb(233,223,10)" fg:x="2879" fg:w="40"/><text x="2.7129%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (40 samples, 0.03%)</title><rect x="2.4629%" y="853" width="0.0342%" height="15" fill="rgb(215,21,27)" fg:x="2879" fg:w="40"/><text x="2.7129%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (41 samples, 0.04%)</title><rect x="2.4971%" y="869" width="0.0351%" height="15" fill="rgb(232,23,21)" fg:x="2919" fg:w="41"/><text x="2.7471%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (366 samples, 0.31%)</title><rect x="2.2216%" y="885" width="0.3131%" height="15" fill="rgb(244,5,23)" fg:x="2597" fg:w="366"/><text x="2.4716%" y="895.50"></text></g><g><title>event_listener::Event::notify (98 samples, 0.08%)</title><rect x="2.5424%" y="885" width="0.0838%" height="15" fill="rgb(226,81,46)" fg:x="2972" fg:w="98"/><text x="2.7924%" y="895.50"></text></g><g><title>event_listener::full_fence (41 samples, 0.04%)</title><rect x="2.5912%" y="869" width="0.0351%" height="15" fill="rgb(247,70,30)" fg:x="3029" fg:w="41"/><text x="2.8412%" y="879.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (13 samples, 0.01%)</title><rect x="2.6382%" y="885" width="0.0111%" height="15" fill="rgb(212,68,19)" fg:x="3084" fg:w="13"/><text x="2.8882%" y="895.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::insert_nocheck (154 samples, 0.13%)</title><rect x="2.6494%" y="885" width="0.1317%" height="15" fill="rgb(240,187,13)" fg:x="3097" fg:w="154"/><text x="2.8994%" y="895.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (28 samples, 0.02%)</title><rect x="2.7811%" y="885" width="0.0240%" height="15" fill="rgb(223,113,26)" fg:x="3251" fg:w="28"/><text x="3.0311%" y="895.50"></text></g><g><title>parking::Unparker::unpark (16 samples, 0.01%)</title><rect x="2.8136%" y="885" width="0.0137%" height="15" fill="rgb(206,192,2)" fg:x="3289" fg:w="16"/><text x="3.0636%" y="895.50"></text></g><g><title>simd_json::Deserializer::from_slice_with_buffers (40 samples, 0.03%)</title><rect x="2.8282%" y="885" width="0.0342%" height="15" fill="rgb(241,108,4)" fg:x="3306" fg:w="40"/><text x="3.0782%" y="895.50"></text></g><g><title>simd_json::Deserializer::find_structural_bits (21 samples, 0.02%)</title><rect x="2.8444%" y="869" width="0.0180%" height="15" fill="rgb(247,173,49)" fg:x="3325" fg:w="21"/><text x="3.0944%" y="879.50"></text></g><g><title>sn_rust_alloc (108 samples, 0.09%)</title><rect x="2.8641%" y="885" width="0.0924%" height="15" fill="rgb(224,114,35)" fg:x="3348" fg:w="108"/><text x="3.1141%" y="895.50"></text></g><g><title>sn_rust_dealloc (66 samples, 0.06%)</title><rect x="2.9565%" y="885" width="0.0565%" height="15" fill="rgb(245,159,27)" fg:x="3456" fg:w="66"/><text x="3.2065%" y="895.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (25 samples, 0.02%)</title><rect x="3.0206%" y="885" width="0.0214%" height="15" fill="rgb(245,172,44)" fg:x="3531" fg:w="25"/><text x="3.2706%" y="895.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (31 samples, 0.03%)</title><rect x="3.0420%" y="885" width="0.0265%" height="15" fill="rgb(236,23,11)" fg:x="3556" fg:w="31"/><text x="3.2920%" y="895.50"></text></g><g><title>std::sys::unix::futex::futex_wait (16 samples, 0.01%)</title><rect x="3.0711%" y="885" width="0.0137%" height="15" fill="rgb(205,117,38)" fg:x="3590" fg:w="16"/><text x="3.3211%" y="895.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (13 samples, 0.01%)</title><rect x="3.0848%" y="885" width="0.0111%" height="15" fill="rgb(237,72,25)" fg:x="3606" fg:w="13"/><text x="3.3348%" y="895.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (26 samples, 0.02%)</title><rect x="3.1010%" y="885" width="0.0222%" height="15" fill="rgb(244,70,9)" fg:x="3625" fg:w="26"/><text x="3.3510%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (41 samples, 0.04%)</title><rect x="3.1233%" y="885" width="0.0351%" height="15" fill="rgb(217,125,39)" fg:x="3651" fg:w="41"/><text x="3.3733%" y="895.50"></text></g><g><title>tremor_common::time::nanotime (26 samples, 0.02%)</title><rect x="3.1644%" y="885" width="0.0222%" height="15" fill="rgb(235,36,10)" fg:x="3699" fg:w="26"/><text x="3.4144%" y="895.50"></text></g><g><title>std::time::SystemTime::now (15 samples, 0.01%)</title><rect x="3.1738%" y="869" width="0.0128%" height="15" fill="rgb(251,123,47)" fg:x="3710" fg:w="15"/><text x="3.4238%" y="879.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (15 samples, 0.01%)</title><rect x="3.1738%" y="853" width="0.0128%" height="15" fill="rgb(221,13,13)" fg:x="3710" fg:w="15"/><text x="3.4238%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (15 samples, 0.01%)</title><rect x="3.1738%" y="837" width="0.0128%" height="15" fill="rgb(238,131,9)" fg:x="3710" fg:w="15"/><text x="3.4238%" y="847.50"></text></g><g><title>tremor_pipeline::executable_graph::NodeMetrics::inc_input (21 samples, 0.02%)</title><rect x="3.1866%" y="885" width="0.0180%" height="15" fill="rgb(211,50,8)" fg:x="3725" fg:w="21"/><text x="3.4366%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (19 samples, 0.02%)</title><rect x="3.2140%" y="885" width="0.0163%" height="15" fill="rgb(245,182,24)" fg:x="3757" fg:w="19"/><text x="3.4640%" y="895.50"></text></g><g><title>tremor_script::ast::Script::run (47 samples, 0.04%)</title><rect x="3.2473%" y="885" width="0.0402%" height="15" fill="rgb(242,14,37)" fg:x="3796" fg:w="47"/><text x="3.4973%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign (21 samples, 0.02%)</title><rect x="3.2875%" y="885" width="0.0180%" height="15" fill="rgb(246,228,12)" fg:x="3843" fg:w="21"/><text x="3.5375%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign_nested (59 samples, 0.05%)</title><rect x="3.3055%" y="885" width="0.0505%" height="15" fill="rgb(213,55,15)" fg:x="3864" fg:w="59"/><text x="3.5555%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::execute_effectors (62 samples, 0.05%)</title><rect x="3.3560%" y="885" width="0.0530%" height="15" fill="rgb(209,9,3)" fg:x="3923" fg:w="62"/><text x="3.6060%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::match_expr (205 samples, 0.18%)</title><rect x="3.4176%" y="885" width="0.1754%" height="15" fill="rgb(230,59,30)" fg:x="3995" fg:w="205"/><text x="3.6676%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (152 samples, 0.13%)</title><rect x="3.5929%" y="885" width="0.1300%" height="15" fill="rgb(209,121,21)" fg:x="4200" fg:w="152"/><text x="3.8429%" y="895.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::invoke2 (14 samples, 0.01%)</title><rect x="3.7230%" y="885" width="0.0120%" height="15" fill="rgb(220,109,13)" fg:x="4352" fg:w="14"/><text x="3.9730%" y="895.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (177 samples, 0.15%)</title><rect x="3.7349%" y="885" width="0.1514%" height="15" fill="rgb(232,18,1)" fg:x="4366" fg:w="177"/><text x="3.9849%" y="895.50"></text></g><g><title>tremor_script::interpreter::resolve (35 samples, 0.03%)</title><rect x="3.8564%" y="869" width="0.0299%" height="15" fill="rgb(215,41,42)" fg:x="4508" fg:w="35"/><text x="4.1064%" y="879.50"></text></g><g><title>tremor_script::interpreter::resolve_value (74 samples, 0.06%)</title><rect x="3.8864%" y="885" width="0.0633%" height="15" fill="rgb(224,123,36)" fg:x="4543" fg:w="74"/><text x="4.1364%" y="895.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup (22 samples, 0.02%)</title><rect x="3.9308%" y="869" width="0.0188%" height="15" fill="rgb(240,125,3)" fg:x="4595" fg:w="22"/><text x="4.1808%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (22 samples, 0.02%)</title><rect x="3.9308%" y="853" width="0.0188%" height="15" fill="rgb(205,98,50)" fg:x="4595" fg:w="22"/><text x="4.1808%" y="863.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup::{{closure}} (22 samples, 0.02%)</title><rect x="3.9308%" y="837" width="0.0188%" height="15" fill="rgb(205,185,37)" fg:x="4595" fg:w="22"/><text x="4.1808%" y="847.50"></text></g><g><title>tremor_value::known_key::KnownKey::map_lookup (22 samples, 0.02%)</title><rect x="3.9308%" y="821" width="0.0188%" height="15" fill="rgb(238,207,15)" fg:x="4595" fg:w="22"/><text x="4.1808%" y="831.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (22 samples, 0.02%)</title><rect x="3.9308%" y="805" width="0.0188%" height="15" fill="rgb(213,199,42)" fg:x="4595" fg:w="22"/><text x="4.1808%" y="815.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (22 samples, 0.02%)</title><rect x="3.9308%" y="789" width="0.0188%" height="15" fill="rgb(235,201,11)" fg:x="4595" fg:w="22"/><text x="4.1808%" y="799.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_hash (22 samples, 0.02%)</title><rect x="3.9308%" y="773" width="0.0188%" height="15" fill="rgb(207,46,11)" fg:x="4595" fg:w="22"/><text x="4.1808%" y="783.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::search (22 samples, 0.02%)</title><rect x="3.9308%" y="757" width="0.0188%" height="15" fill="rgb(241,35,35)" fg:x="4595" fg:w="22"/><text x="4.1808%" y="767.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (22 samples, 0.02%)</title><rect x="3.9308%" y="741" width="0.0188%" height="15" fill="rgb(243,32,47)" fg:x="4595" fg:w="22"/><text x="4.1808%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (22 samples, 0.02%)</title><rect x="3.9308%" y="725" width="0.0188%" height="15" fill="rgb(247,202,23)" fg:x="4595" fg:w="22"/><text x="4.1808%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (22 samples, 0.02%)</title><rect x="3.9308%" y="709" width="0.0188%" height="15" fill="rgb(219,102,11)" fg:x="4595" fg:w="22"/><text x="4.1808%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (22 samples, 0.02%)</title><rect x="3.9308%" y="693" width="0.0188%" height="15" fill="rgb(243,110,44)" fg:x="4595" fg:w="22"/><text x="4.1808%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (22 samples, 0.02%)</title><rect x="3.9308%" y="677" width="0.0188%" height="15" fill="rgb(222,74,54)" fg:x="4595" fg:w="22"/><text x="4.1808%" y="687.50"></text></g><g><title>tremor_script::interpreter::test_guard (28 samples, 0.02%)</title><rect x="3.9497%" y="885" width="0.0240%" height="15" fill="rgb(216,99,12)" fg:x="4617" fg:w="28"/><text x="4.1997%" y="895.50"></text></g><g><title>tremor_script::interpreter::test_predicate_expr (188 samples, 0.16%)</title><rect x="3.9736%" y="885" width="0.1608%" height="15" fill="rgb(226,22,26)" fg:x="4645" fg:w="188"/><text x="4.2236%" y="895.50"></text></g><g><title>tremor_script::interpreter::val_eq (78 samples, 0.07%)</title><rect x="4.1344%" y="885" width="0.0667%" height="15" fill="rgb(217,163,10)" fg:x="4833" fg:w="78"/><text x="4.3844%" y="895.50"></text></g><g><title>tremor_script::srs::EventPayload::rent_mut (12 samples, 0.01%)</title><rect x="4.2012%" y="885" width="0.0103%" height="15" fill="rgb(213,25,53)" fg:x="4911" fg:w="12"/><text x="4.4512%" y="895.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (21 samples, 0.02%)</title><rect x="4.2114%" y="885" width="0.0180%" height="15" fill="rgb(252,105,26)" fg:x="4923" fg:w="21"/><text x="4.4614%" y="895.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse_array (13 samples, 0.01%)</title><rect x="4.4595%" y="869" width="0.0111%" height="15" fill="rgb(220,39,43)" fg:x="5213" fg:w="13"/><text x="4.7095%" y="879.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse (319 samples, 0.27%)</title><rect x="4.2328%" y="885" width="0.2729%" height="15" fill="rgb(229,68,48)" fg:x="4948" fg:w="319"/><text x="4.4828%" y="895.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse_map (41 samples, 0.04%)</title><rect x="4.4706%" y="869" width="0.0351%" height="15" fill="rgb(252,8,32)" fg:x="5226" fg:w="41"/><text x="4.7206%" y="879.50"></text></g><g><title>value_trait::generator::BaseGenerator::write (79 samples, 0.07%)</title><rect x="4.8727%" y="837" width="0.0676%" height="15" fill="rgb(223,20,43)" fg:x="5696" fg:w="79"/><text x="5.1227%" y="847.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (79 samples, 0.07%)</title><rect x="4.8727%" y="821" width="0.0676%" height="15" fill="rgb(229,81,49)" fg:x="5696" fg:w="79"/><text x="5.1227%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (79 samples, 0.07%)</title><rect x="4.8727%" y="805" width="0.0676%" height="15" fill="rgb(236,28,36)" fg:x="5696" fg:w="79"/><text x="5.1227%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (79 samples, 0.07%)</title><rect x="4.8727%" y="789" width="0.0676%" height="15" fill="rgb(249,185,26)" fg:x="5696" fg:w="79"/><text x="5.1227%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (79 samples, 0.07%)</title><rect x="4.8727%" y="773" width="0.0676%" height="15" fill="rgb(249,174,33)" fg:x="5696" fg:w="79"/><text x="5.1227%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (79 samples, 0.07%)</title><rect x="4.8727%" y="757" width="0.0676%" height="15" fill="rgb(233,201,37)" fg:x="5696" fg:w="79"/><text x="5.1227%" y="767.50"></text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (566 samples, 0.48%)</title><rect x="4.5126%" y="885" width="0.4842%" height="15" fill="rgb(221,78,26)" fg:x="5275" fg:w="566"/><text x="4.7626%" y="895.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_string (145 samples, 0.12%)</title><rect x="4.8727%" y="869" width="0.1240%" height="15" fill="rgb(250,127,30)" fg:x="5696" fg:w="145"/><text x="5.1227%" y="879.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_string_content (145 samples, 0.12%)</title><rect x="4.8727%" y="853" width="0.1240%" height="15" fill="rgb(230,49,44)" fg:x="5696" fg:w="145"/><text x="5.1227%" y="863.50"></text></g><g><title>value_trait::generator::write_str_simd (66 samples, 0.06%)</title><rect x="4.9403%" y="837" width="0.0565%" height="15" fill="rgb(229,67,23)" fg:x="5775" fg:w="66"/><text x="5.1903%" y="847.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (66 samples, 0.06%)</title><rect x="4.9403%" y="821" width="0.0565%" height="15" fill="rgb(249,83,47)" fg:x="5775" fg:w="66"/><text x="5.1903%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (66 samples, 0.06%)</title><rect x="4.9403%" y="805" width="0.0565%" height="15" fill="rgb(215,43,3)" fg:x="5775" fg:w="66"/><text x="5.1903%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (66 samples, 0.06%)</title><rect x="4.9403%" y="789" width="0.0565%" height="15" fill="rgb(238,154,13)" fg:x="5775" fg:w="66"/><text x="5.1903%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (66 samples, 0.06%)</title><rect x="4.9403%" y="773" width="0.0565%" height="15" fill="rgb(219,56,2)" fg:x="5775" fg:w="66"/><text x="5.1903%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (66 samples, 0.06%)</title><rect x="4.9403%" y="757" width="0.0565%" height="15" fill="rgb(233,0,4)" fg:x="5775" fg:w="66"/><text x="5.1903%" y="767.50"></text></g><g><title>value_trait::ValueAccess::get (123 samples, 0.11%)</title><rect x="5.0053%" y="885" width="0.1052%" height="15" fill="rgb(235,30,7)" fg:x="5851" fg:w="123"/><text x="5.2553%" y="895.50"></text></g><g><title>[anon] (5,835 samples, 4.99%)</title><rect x="0.1369%" y="901" width="4.9916%" height="15" fill="rgb(250,79,13)" fg:x="160" fg:w="5835"/><text x="0.3869%" y="911.50">[anon]</text></g><g><title>window::TimeWindow::add_t (12 samples, 0.01%)</title><rect x="5.1182%" y="885" width="0.0103%" height="15" fill="rgb(211,146,34)" fg:x="5983" fg:w="12"/><text x="5.3682%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="5.1439%" y="885" width="0.0171%" height="15" fill="rgb(228,22,38)" fg:x="6013" fg:w="20"/><text x="5.3939%" y="895.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (17 samples, 0.01%)</title><rect x="5.1465%" y="869" width="0.0145%" height="15" fill="rgb(235,168,5)" fg:x="6016" fg:w="17"/><text x="5.3965%" y="879.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (37 samples, 0.03%)</title><rect x="5.1687%" y="885" width="0.0317%" height="15" fill="rgb(221,155,16)" fg:x="6042" fg:w="37"/><text x="5.4187%" y="895.50"></text></g><g><title>[libc-2.31.so] (130 samples, 0.11%)</title><rect x="5.1285%" y="901" width="0.1112%" height="15" fill="rgb(215,215,53)" fg:x="5995" fg:w="130"/><text x="5.3785%" y="911.50"></text></g><g><title>value_trait::ValueAccess::get (14 samples, 0.01%)</title><rect x="5.2277%" y="885" width="0.0120%" height="15" fill="rgb(223,4,10)" fg:x="6111" fg:w="14"/><text x="5.4777%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="5.2397%" y="885" width="0.0154%" height="15" fill="rgb(234,103,6)" fg:x="6125" fg:w="18"/><text x="5.4897%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[tremor_value::value::Value]&gt; (26 samples, 0.02%)</title><rect x="5.2628%" y="885" width="0.0222%" height="15" fill="rgb(227,97,0)" fg:x="6152" fg:w="26"/><text x="5.5128%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (562 samples, 0.48%)</title><rect x="5.2850%" y="885" width="0.4808%" height="15" fill="rgb(234,150,53)" fg:x="6178" fg:w="562"/><text x="5.5350%" y="895.50"></text></g><g><title>[main] (639 samples, 0.55%)</title><rect x="5.2397%" y="901" width="0.5466%" height="15" fill="rgb(228,201,54)" fg:x="6125" fg:w="639"/><text x="5.4897%" y="911.50"></text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (24 samples, 0.02%)</title><rect x="5.7658%" y="885" width="0.0205%" height="15" fill="rgb(222,22,37)" fg:x="6740" fg:w="24"/><text x="6.0158%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="5.7958%" y="885" width="0.0137%" height="15" fill="rgb(237,53,32)" fg:x="6775" fg:w="16"/><text x="6.0458%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="5.8531%" y="821" width="0.0111%" height="15" fill="rgb(233,25,53)" fg:x="6842" fg:w="13"/><text x="6.1031%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="5.8531%" y="805" width="0.0111%" height="15" fill="rgb(210,40,34)" fg:x="6842" fg:w="13"/><text x="6.1031%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="5.8531%" y="789" width="0.0111%" height="15" fill="rgb(241,220,44)" fg:x="6842" fg:w="13"/><text x="6.1031%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="5.8531%" y="773" width="0.0111%" height="15" fill="rgb(235,28,35)" fg:x="6842" fg:w="13"/><text x="6.1031%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="5.8531%" y="757" width="0.0111%" height="15" fill="rgb(210,56,17)" fg:x="6842" fg:w="13"/><text x="6.1031%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (54 samples, 0.05%)</title><rect x="5.8223%" y="885" width="0.0462%" height="15" fill="rgb(224,130,29)" fg:x="6806" fg:w="54"/><text x="6.0723%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.02%)</title><rect x="5.8531%" y="869" width="0.0154%" height="15" fill="rgb(235,212,8)" fg:x="6842" fg:w="18"/><text x="6.1031%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="5.8531%" y="853" width="0.0154%" height="15" fill="rgb(223,33,50)" fg:x="6842" fg:w="18"/><text x="6.1031%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.02%)</title><rect x="5.8531%" y="837" width="0.0154%" height="15" fill="rgb(219,149,13)" fg:x="6842" fg:w="18"/><text x="6.1031%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="5.8693%" y="885" width="0.0163%" height="15" fill="rgb(250,156,29)" fg:x="6861" fg:w="19"/><text x="6.1193%" y="895.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="5.8924%" y="885" width="0.0137%" height="15" fill="rgb(216,193,19)" fg:x="6888" fg:w="16"/><text x="6.1424%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (142 samples, 0.12%)</title><rect x="5.9763%" y="405" width="0.1215%" height="15" fill="rgb(216,135,14)" fg:x="6986" fg:w="142"/><text x="6.2263%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (142 samples, 0.12%)</title><rect x="5.9763%" y="389" width="0.1215%" height="15" fill="rgb(241,47,5)" fg:x="6986" fg:w="142"/><text x="6.2263%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (242 samples, 0.21%)</title><rect x="6.0977%" y="405" width="0.2070%" height="15" fill="rgb(233,42,35)" fg:x="7128" fg:w="242"/><text x="6.3477%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (242 samples, 0.21%)</title><rect x="6.0977%" y="389" width="0.2070%" height="15" fill="rgb(231,13,6)" fg:x="7128" fg:w="242"/><text x="6.3477%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (425 samples, 0.36%)</title><rect x="5.9420%" y="437" width="0.3636%" height="15" fill="rgb(207,181,40)" fg:x="6946" fg:w="425"/><text x="6.1920%" y="447.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (425 samples, 0.36%)</title><rect x="5.9420%" y="421" width="0.3636%" height="15" fill="rgb(254,173,49)" fg:x="6946" fg:w="425"/><text x="6.1920%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (13 samples, 0.01%)</title><rect x="6.3133%" y="421" width="0.0111%" height="15" fill="rgb(221,1,38)" fg:x="7380" fg:w="13"/><text x="6.5633%" y="431.50"></text></g><g><title>event_listener::Inner::lock (22 samples, 0.02%)</title><rect x="6.3338%" y="421" width="0.0188%" height="15" fill="rgb(206,124,46)" fg:x="7404" fg:w="22"/><text x="6.5838%" y="431.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.02%)</title><rect x="6.3347%" y="405" width="0.0180%" height="15" fill="rgb(249,21,11)" fg:x="7405" fg:w="21"/><text x="6.5847%" y="415.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (16 samples, 0.01%)</title><rect x="6.3390%" y="389" width="0.0137%" height="15" fill="rgb(222,201,40)" fg:x="7410" fg:w="16"/><text x="6.5890%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (16 samples, 0.01%)</title><rect x="6.3390%" y="373" width="0.0137%" height="15" fill="rgb(235,61,29)" fg:x="7410" fg:w="16"/><text x="6.5890%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (16 samples, 0.01%)</title><rect x="6.3390%" y="357" width="0.0137%" height="15" fill="rgb(219,207,3)" fg:x="7410" fg:w="16"/><text x="6.5890%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.01%)</title><rect x="6.3390%" y="341" width="0.0137%" height="15" fill="rgb(222,56,46)" fg:x="7410" fg:w="16"/><text x="6.5890%" y="351.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (862 samples, 0.74%)</title><rect x="5.9420%" y="453" width="0.7374%" height="15" fill="rgb(239,76,54)" fg:x="6946" fg:w="862"/><text x="6.1920%" y="463.50"></text></g><g><title>event_listener::Event::notify (437 samples, 0.37%)</title><rect x="6.3056%" y="437" width="0.3738%" height="15" fill="rgb(231,124,27)" fg:x="7371" fg:w="437"/><text x="6.5556%" y="447.50"></text></g><g><title>event_listener::full_fence (382 samples, 0.33%)</title><rect x="6.3527%" y="421" width="0.3268%" height="15" fill="rgb(249,195,6)" fg:x="7426" fg:w="382"/><text x="6.6027%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (382 samples, 0.33%)</title><rect x="6.3527%" y="405" width="0.3268%" height="15" fill="rgb(237,174,47)" fg:x="7426" fg:w="382"/><text x="6.6027%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (382 samples, 0.33%)</title><rect x="6.3527%" y="389" width="0.3268%" height="15" fill="rgb(206,201,31)" fg:x="7426" fg:w="382"/><text x="6.6027%" y="399.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (948 samples, 0.81%)</title><rect x="5.9420%" y="869" width="0.8110%" height="15" fill="rgb(231,57,52)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="879.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (948 samples, 0.81%)</title><rect x="5.9420%" y="853" width="0.8110%" height="15" fill="rgb(248,177,22)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (948 samples, 0.81%)</title><rect x="5.9420%" y="837" width="0.8110%" height="15" fill="rgb(215,211,37)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="847.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (948 samples, 0.81%)</title><rect x="5.9420%" y="821" width="0.8110%" height="15" fill="rgb(241,128,51)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="831.50"></text></g><g><title>async_task::runnable::Runnable::run (948 samples, 0.81%)</title><rect x="5.9420%" y="805" width="0.8110%" height="15" fill="rgb(227,165,31)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (948 samples, 0.81%)</title><rect x="5.9420%" y="789" width="0.8110%" height="15" fill="rgb(228,167,24)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="799.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (948 samples, 0.81%)</title><rect x="5.9420%" y="773" width="0.8110%" height="15" fill="rgb(228,143,12)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (948 samples, 0.81%)</title><rect x="5.9420%" y="757" width="0.8110%" height="15" fill="rgb(249,149,8)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="767.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (948 samples, 0.81%)</title><rect x="5.9420%" y="741" width="0.8110%" height="15" fill="rgb(243,35,44)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="751.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (948 samples, 0.81%)</title><rect x="5.9420%" y="725" width="0.8110%" height="15" fill="rgb(246,89,9)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="735.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (948 samples, 0.81%)</title><rect x="5.9420%" y="709" width="0.8110%" height="15" fill="rgb(233,213,13)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (948 samples, 0.81%)</title><rect x="5.9420%" y="693" width="0.8110%" height="15" fill="rgb(233,141,41)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (948 samples, 0.81%)</title><rect x="5.9420%" y="677" width="0.8110%" height="15" fill="rgb(239,167,4)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="687.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (948 samples, 0.81%)</title><rect x="5.9420%" y="661" width="0.8110%" height="15" fill="rgb(209,217,16)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="671.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (948 samples, 0.81%)</title><rect x="5.9420%" y="645" width="0.8110%" height="15" fill="rgb(219,88,35)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (948 samples, 0.81%)</title><rect x="5.9420%" y="629" width="0.8110%" height="15" fill="rgb(220,193,23)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="639.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (948 samples, 0.81%)</title><rect x="5.9420%" y="613" width="0.8110%" height="15" fill="rgb(230,90,52)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (948 samples, 0.81%)</title><rect x="5.9420%" y="597" width="0.8110%" height="15" fill="rgb(252,106,19)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="607.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (948 samples, 0.81%)</title><rect x="5.9420%" y="581" width="0.8110%" height="15" fill="rgb(206,74,20)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (948 samples, 0.81%)</title><rect x="5.9420%" y="565" width="0.8110%" height="15" fill="rgb(230,138,44)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="575.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (948 samples, 0.81%)</title><rect x="5.9420%" y="549" width="0.8110%" height="15" fill="rgb(235,182,43)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (948 samples, 0.81%)</title><rect x="5.9420%" y="533" width="0.8110%" height="15" fill="rgb(242,16,51)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (948 samples, 0.81%)</title><rect x="5.9420%" y="517" width="0.8110%" height="15" fill="rgb(248,9,4)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (948 samples, 0.81%)</title><rect x="5.9420%" y="501" width="0.8110%" height="15" fill="rgb(210,31,22)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="511.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (948 samples, 0.81%)</title><rect x="5.9420%" y="485" width="0.8110%" height="15" fill="rgb(239,54,39)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="495.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (948 samples, 0.81%)</title><rect x="5.9420%" y="469" width="0.8110%" height="15" fill="rgb(230,99,41)" fg:x="6946" fg:w="948"/><text x="6.1920%" y="479.50"></text></g><g><title>event_listener::Event::notify (86 samples, 0.07%)</title><rect x="6.6794%" y="453" width="0.0736%" height="15" fill="rgb(253,106,12)" fg:x="7808" fg:w="86"/><text x="6.9294%" y="463.50"></text></g><g><title>event_listener::full_fence (81 samples, 0.07%)</title><rect x="6.6837%" y="437" width="0.0693%" height="15" fill="rgb(213,46,41)" fg:x="7813" fg:w="81"/><text x="6.9337%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (81 samples, 0.07%)</title><rect x="6.6837%" y="421" width="0.0693%" height="15" fill="rgb(215,133,35)" fg:x="7813" fg:w="81"/><text x="6.9337%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (81 samples, 0.07%)</title><rect x="6.6837%" y="405" width="0.0693%" height="15" fill="rgb(213,28,5)" fg:x="7813" fg:w="81"/><text x="6.9337%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.01%)</title><rect x="7.1380%" y="533" width="0.0103%" height="15" fill="rgb(215,77,49)" fg:x="8344" fg:w="12"/><text x="7.3880%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12 samples, 0.01%)</title><rect x="7.1380%" y="517" width="0.0103%" height="15" fill="rgb(248,100,22)" fg:x="8344" fg:w="12"/><text x="7.3880%" y="527.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (102 samples, 0.09%)</title><rect x="7.1482%" y="533" width="0.0873%" height="15" fill="rgb(208,67,9)" fg:x="8356" fg:w="102"/><text x="7.3982%" y="543.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (102 samples, 0.09%)</title><rect x="7.1482%" y="517" width="0.0873%" height="15" fill="rgb(219,133,21)" fg:x="8356" fg:w="102"/><text x="7.3982%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.06%)</title><rect x="7.2355%" y="533" width="0.0633%" height="15" fill="rgb(246,46,29)" fg:x="8458" fg:w="74"/><text x="7.4855%" y="543.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.02%)</title><rect x="7.2988%" y="533" width="0.0180%" height="15" fill="rgb(246,185,52)" fg:x="8532" fg:w="21"/><text x="7.5488%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.02%)</title><rect x="7.3330%" y="485" width="0.0188%" height="15" fill="rgb(252,136,11)" fg:x="8572" fg:w="22"/><text x="7.5830%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="7.3356%" y="469" width="0.0163%" height="15" fill="rgb(219,138,53)" fg:x="8575" fg:w="19"/><text x="7.5856%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (16 samples, 0.01%)</title><rect x="7.3381%" y="453" width="0.0137%" height="15" fill="rgb(211,51,23)" fg:x="8578" fg:w="16"/><text x="7.5881%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (117 samples, 0.10%)</title><rect x="7.3168%" y="533" width="0.1001%" height="15" fill="rgb(247,221,28)" fg:x="8553" fg:w="117"/><text x="7.5668%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (103 samples, 0.09%)</title><rect x="7.3287%" y="517" width="0.0881%" height="15" fill="rgb(251,222,45)" fg:x="8567" fg:w="103"/><text x="7.5787%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (103 samples, 0.09%)</title><rect x="7.3287%" y="501" width="0.0881%" height="15" fill="rgb(217,162,53)" fg:x="8567" fg:w="103"/><text x="7.5787%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (76 samples, 0.07%)</title><rect x="7.3518%" y="485" width="0.0650%" height="15" fill="rgb(229,93,14)" fg:x="8594" fg:w="76"/><text x="7.6018%" y="495.50"></text></g><g><title>[libc-2.31.so] (67 samples, 0.06%)</title><rect x="7.3595%" y="469" width="0.0573%" height="15" fill="rgb(209,67,49)" fg:x="8603" fg:w="67"/><text x="7.6095%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (55 samples, 0.05%)</title><rect x="7.4168%" y="533" width="0.0471%" height="15" fill="rgb(213,87,29)" fg:x="8670" fg:w="55"/><text x="7.6668%" y="543.50"></text></g><g><title>&lt;value_trait::generator::WriterGenerator&lt;W,V&gt; as value_trait::generator::BaseGenerator&gt;::get_writer (75 samples, 0.06%)</title><rect x="7.4639%" y="517" width="0.0642%" height="15" fill="rgb(205,151,52)" fg:x="8725" fg:w="75"/><text x="7.7139%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (38 samples, 0.03%)</title><rect x="7.5683%" y="453" width="0.0325%" height="15" fill="rgb(253,215,39)" fg:x="8847" fg:w="38"/><text x="7.8183%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.01%)</title><rect x="7.5888%" y="437" width="0.0120%" height="15" fill="rgb(221,220,41)" fg:x="8871" fg:w="14"/><text x="7.8388%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (14 samples, 0.01%)</title><rect x="7.5888%" y="421" width="0.0120%" height="15" fill="rgb(218,133,21)" fg:x="8871" fg:w="14"/><text x="7.8388%" y="431.50"></text></g><g><title>value_trait::generator::BaseGenerator::write (260 samples, 0.22%)</title><rect x="7.4639%" y="533" width="0.2224%" height="15" fill="rgb(221,193,43)" fg:x="8725" fg:w="260"/><text x="7.7139%" y="543.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (185 samples, 0.16%)</title><rect x="7.5281%" y="517" width="0.1583%" height="15" fill="rgb(240,128,52)" fg:x="8800" fg:w="185"/><text x="7.7781%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (184 samples, 0.16%)</title><rect x="7.5289%" y="501" width="0.1574%" height="15" fill="rgb(253,114,12)" fg:x="8801" fg:w="184"/><text x="7.7789%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (184 samples, 0.16%)</title><rect x="7.5289%" y="485" width="0.1574%" height="15" fill="rgb(215,223,47)" fg:x="8801" fg:w="184"/><text x="7.7789%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (184 samples, 0.16%)</title><rect x="7.5289%" y="469" width="0.1574%" height="15" fill="rgb(248,225,23)" fg:x="8801" fg:w="184"/><text x="7.7789%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (100 samples, 0.09%)</title><rect x="7.6008%" y="453" width="0.0855%" height="15" fill="rgb(250,108,0)" fg:x="8885" fg:w="100"/><text x="7.8508%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="7.6983%" y="453" width="0.0128%" height="15" fill="rgb(228,208,7)" fg:x="8999" fg:w="15"/><text x="7.9483%" y="463.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_int (33 samples, 0.03%)</title><rect x="7.6863%" y="533" width="0.0282%" height="15" fill="rgb(244,45,10)" fg:x="8985" fg:w="33"/><text x="7.9363%" y="543.50"></text></g><g><title>itoa::write (32 samples, 0.03%)</title><rect x="7.6872%" y="517" width="0.0274%" height="15" fill="rgb(207,125,25)" fg:x="8986" fg:w="32"/><text x="7.9372%" y="527.50"></text></g><g><title>itoa::Buffer::format (32 samples, 0.03%)</title><rect x="7.6872%" y="501" width="0.0274%" height="15" fill="rgb(210,195,18)" fg:x="8986" fg:w="32"/><text x="7.9372%" y="511.50"></text></g><g><title>&lt;u64 as itoa::Integer&gt;::write (32 samples, 0.03%)</title><rect x="7.6872%" y="485" width="0.0274%" height="15" fill="rgb(249,80,12)" fg:x="8986" fg:w="32"/><text x="7.9372%" y="495.50"></text></g><g><title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (32 samples, 0.03%)</title><rect x="7.6872%" y="469" width="0.0274%" height="15" fill="rgb(221,65,9)" fg:x="8986" fg:w="32"/><text x="7.9372%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (77 samples, 0.07%)</title><rect x="7.7856%" y="437" width="0.0659%" height="15" fill="rgb(235,49,36)" fg:x="9101" fg:w="77"/><text x="8.0356%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (58 samples, 0.05%)</title><rect x="7.8018%" y="421" width="0.0496%" height="15" fill="rgb(225,32,20)" fg:x="9120" fg:w="58"/><text x="8.0518%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (58 samples, 0.05%)</title><rect x="7.8018%" y="405" width="0.0496%" height="15" fill="rgb(215,141,46)" fg:x="9120" fg:w="58"/><text x="8.0518%" y="415.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_char (242 samples, 0.21%)</title><rect x="7.7145%" y="517" width="0.2070%" height="15" fill="rgb(250,160,47)" fg:x="9018" fg:w="242"/><text x="7.9645%" y="527.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (233 samples, 0.20%)</title><rect x="7.7222%" y="501" width="0.1993%" height="15" fill="rgb(216,222,40)" fg:x="9027" fg:w="233"/><text x="7.9722%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (233 samples, 0.20%)</title><rect x="7.7222%" y="485" width="0.1993%" height="15" fill="rgb(234,217,39)" fg:x="9027" fg:w="233"/><text x="7.9722%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (233 samples, 0.20%)</title><rect x="7.7222%" y="469" width="0.1993%" height="15" fill="rgb(207,178,40)" fg:x="9027" fg:w="233"/><text x="7.9722%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (233 samples, 0.20%)</title><rect x="7.7222%" y="453" width="0.1993%" height="15" fill="rgb(221,136,13)" fg:x="9027" fg:w="233"/><text x="7.9722%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (82 samples, 0.07%)</title><rect x="7.8514%" y="437" width="0.0701%" height="15" fill="rgb(249,199,10)" fg:x="9178" fg:w="82"/><text x="8.1014%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (221 samples, 0.19%)</title><rect x="8.3698%" y="501" width="0.1891%" height="15" fill="rgb(249,222,13)" fg:x="9784" fg:w="221"/><text x="8.6198%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (221 samples, 0.19%)</title><rect x="8.3698%" y="485" width="0.1891%" height="15" fill="rgb(244,185,38)" fg:x="9784" fg:w="221"/><text x="8.6198%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (81 samples, 0.07%)</title><rect x="8.6085%" y="421" width="0.0693%" height="15" fill="rgb(236,202,9)" fg:x="10063" fg:w="81"/><text x="8.8585%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (81 samples, 0.07%)</title><rect x="8.6085%" y="405" width="0.0693%" height="15" fill="rgb(250,229,37)" fg:x="10063" fg:w="81"/><text x="8.8585%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (81 samples, 0.07%)</title><rect x="8.6085%" y="389" width="0.0693%" height="15" fill="rgb(206,174,23)" fg:x="10063" fg:w="81"/><text x="8.8585%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (211 samples, 0.18%)</title><rect x="8.6778%" y="421" width="0.1805%" height="15" fill="rgb(211,33,43)" fg:x="10144" fg:w="211"/><text x="8.9278%" y="431.50"></text></g><g><title>[libc-2.31.so] (204 samples, 0.17%)</title><rect x="8.6838%" y="405" width="0.1745%" height="15" fill="rgb(245,58,50)" fg:x="10151" fg:w="204"/><text x="8.9338%" y="415.50"></text></g><g><title>value_trait::generator::BaseGenerator::write (357 samples, 0.31%)</title><rect x="8.5589%" y="501" width="0.3054%" height="15" fill="rgb(244,68,36)" fg:x="10005" fg:w="357"/><text x="8.8089%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (357 samples, 0.31%)</title><rect x="8.5589%" y="485" width="0.3054%" height="15" fill="rgb(232,229,15)" fg:x="10005" fg:w="357"/><text x="8.8089%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (357 samples, 0.31%)</title><rect x="8.5589%" y="469" width="0.3054%" height="15" fill="rgb(254,30,23)" fg:x="10005" fg:w="357"/><text x="8.8089%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (357 samples, 0.31%)</title><rect x="8.5589%" y="453" width="0.3054%" height="15" fill="rgb(235,160,14)" fg:x="10005" fg:w="357"/><text x="8.8089%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (357 samples, 0.31%)</title><rect x="8.5589%" y="437" width="0.3054%" height="15" fill="rgb(212,155,44)" fg:x="10005" fg:w="357"/><text x="8.8089%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (96 samples, 0.08%)</title><rect x="8.9413%" y="485" width="0.0821%" height="15" fill="rgb(226,2,50)" fg:x="10452" fg:w="96"/><text x="9.1913%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (28 samples, 0.02%)</title><rect x="9.0234%" y="485" width="0.0240%" height="15" fill="rgb(234,177,6)" fg:x="10548" fg:w="28"/><text x="9.2734%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (24 samples, 0.02%)</title><rect x="9.0474%" y="485" width="0.0205%" height="15" fill="rgb(217,24,9)" fg:x="10576" fg:w="24"/><text x="9.2974%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (123 samples, 0.11%)</title><rect x="9.0679%" y="485" width="0.1052%" height="15" fill="rgb(220,13,46)" fg:x="10600" fg:w="123"/><text x="9.3179%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (123 samples, 0.11%)</title><rect x="9.0679%" y="469" width="0.1052%" height="15" fill="rgb(239,221,27)" fg:x="10600" fg:w="123"/><text x="9.3179%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (245 samples, 0.21%)</title><rect x="9.2048%" y="421" width="0.2096%" height="15" fill="rgb(222,198,25)" fg:x="10760" fg:w="245"/><text x="9.4548%" y="431.50"></text></g><g><title>[libc-2.31.so] (173 samples, 0.15%)</title><rect x="9.2664%" y="405" width="0.1480%" height="15" fill="rgb(211,99,13)" fg:x="10832" fg:w="173"/><text x="9.5164%" y="415.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (3,119 samples, 2.67%)</title><rect x="6.7530%" y="741" width="2.6682%" height="15" fill="rgb(232,111,31)" fg:x="7894" fg:w="3119"/><text x="7.0030%" y="751.50">tr..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,119 samples, 2.67%)</title><rect x="6.7530%" y="725" width="2.6682%" height="15" fill="rgb(245,82,37)" fg:x="7894" fg:w="3119"/><text x="7.0030%" y="735.50">&lt;c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,119 samples, 2.67%)</title><rect x="6.7530%" y="709" width="2.6682%" height="15" fill="rgb(227,149,46)" fg:x="7894" fg:w="3119"/><text x="7.0030%" y="719.50">&lt;c..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (3,119 samples, 2.67%)</title><rect x="6.7530%" y="693" width="2.6682%" height="15" fill="rgb(218,36,50)" fg:x="7894" fg:w="3119"/><text x="7.0030%" y="703.50">&lt;t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (3,119 samples, 2.67%)</title><rect x="6.7530%" y="677" width="2.6682%" height="15" fill="rgb(226,80,48)" fg:x="7894" fg:w="3119"/><text x="7.0030%" y="687.50">tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (3,119 samples, 2.67%)</title><rect x="6.7530%" y="661" width="2.6682%" height="15" fill="rgb(238,224,15)" fg:x="7894" fg:w="3119"/><text x="7.0030%" y="671.50">tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (3,119 samples, 2.67%)</title><rect x="6.7530%" y="645" width="2.6682%" height="15" fill="rgb(241,136,10)" fg:x="7894" fg:w="3119"/><text x="7.0030%" y="655.50">tr..</text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode (3,119 samples, 2.67%)</title><rect x="6.7530%" y="629" width="2.6682%" height="15" fill="rgb(208,32,45)" fg:x="7894" fg:w="3119"/><text x="7.0030%" y="639.50">&lt;t..</text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode_into (3,119 samples, 2.67%)</title><rect x="6.7530%" y="613" width="2.6682%" height="15" fill="rgb(207,135,9)" fg:x="7894" fg:w="3119"/><text x="7.0030%" y="623.50">&lt;t..</text></g><g><title>tremor_value::value::serialize::&lt;impl value_trait::Writable for tremor_value::value::Value&gt;::write (3,119 samples, 2.67%)</title><rect x="6.7530%" y="597" width="2.6682%" height="15" fill="rgb(206,86,44)" fg:x="7894" fg:w="3119"/><text x="7.0030%" y="607.50">tr..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (3,119 samples, 2.67%)</title><rect x="6.7530%" y="581" width="2.6682%" height="15" fill="rgb(245,177,15)" fg:x="7894" fg:w="3119"/><text x="7.0030%" y="591.50">tr..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_object (3,119 samples, 2.67%)</title><rect x="6.7530%" y="565" width="2.6682%" height="15" fill="rgb(206,64,50)" fg:x="7894" fg:w="3119"/><text x="7.0030%" y="575.50">tr..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (3,119 samples, 2.67%)</title><rect x="6.7530%" y="549" width="2.6682%" height="15" fill="rgb(234,36,40)" fg:x="7894" fg:w="3119"/><text x="7.0030%" y="559.50">tr..</text></g><g><title>value_trait::generator::BaseGenerator::write_string (1,995 samples, 1.71%)</title><rect x="7.7145%" y="533" width="1.7066%" height="15" fill="rgb(213,64,8)" fg:x="9018" fg:w="1995"/><text x="7.9645%" y="543.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_string_content (1,753 samples, 1.50%)</title><rect x="7.9216%" y="517" width="1.4996%" height="15" fill="rgb(210,75,36)" fg:x="9260" fg:w="1753"/><text x="8.1716%" y="527.50"></text></g><g><title>value_trait::generator::write_str_simd (651 samples, 0.56%)</title><rect x="8.8643%" y="501" width="0.5569%" height="15" fill="rgb(229,88,21)" fg:x="10362" fg:w="651"/><text x="9.1143%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (284 samples, 0.24%)</title><rect x="9.1782%" y="485" width="0.2430%" height="15" fill="rgb(252,204,47)" fg:x="10729" fg:w="284"/><text x="9.4282%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (284 samples, 0.24%)</title><rect x="9.1782%" y="469" width="0.2430%" height="15" fill="rgb(208,77,27)" fg:x="10729" fg:w="284"/><text x="9.4282%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (284 samples, 0.24%)</title><rect x="9.1782%" y="453" width="0.2430%" height="15" fill="rgb(221,76,26)" fg:x="10729" fg:w="284"/><text x="9.4282%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (284 samples, 0.24%)</title><rect x="9.1782%" y="437" width="0.2430%" height="15" fill="rgb(225,139,18)" fg:x="10729" fg:w="284"/><text x="9.4282%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (68 samples, 0.06%)</title><rect x="9.6650%" y="613" width="0.0582%" height="15" fill="rgb(230,137,11)" fg:x="11298" fg:w="68"/><text x="9.9150%" y="623.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (25 samples, 0.02%)</title><rect x="10.1706%" y="421" width="0.0214%" height="15" fill="rgb(212,28,1)" fg:x="11889" fg:w="25"/><text x="10.4206%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (346 samples, 0.30%)</title><rect x="9.9011%" y="549" width="0.2960%" height="15" fill="rgb(248,164,17)" fg:x="11574" fg:w="346"/><text x="10.1511%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (98 samples, 0.08%)</title><rect x="10.1133%" y="533" width="0.0838%" height="15" fill="rgb(222,171,42)" fg:x="11822" fg:w="98"/><text x="10.3633%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (98 samples, 0.08%)</title><rect x="10.1133%" y="517" width="0.0838%" height="15" fill="rgb(243,84,45)" fg:x="11822" fg:w="98"/><text x="10.3633%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (98 samples, 0.08%)</title><rect x="10.1133%" y="501" width="0.0838%" height="15" fill="rgb(252,49,23)" fg:x="11822" fg:w="98"/><text x="10.3633%" y="511.50"></text></g><g><title>alloc::alloc::alloc (97 samples, 0.08%)</title><rect x="10.1141%" y="485" width="0.0830%" height="15" fill="rgb(215,19,7)" fg:x="11823" fg:w="97"/><text x="10.3641%" y="495.50"></text></g><g><title>__rg_alloc (97 samples, 0.08%)</title><rect x="10.1141%" y="469" width="0.0830%" height="15" fill="rgb(238,81,41)" fg:x="11823" fg:w="97"/><text x="10.3641%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (97 samples, 0.08%)</title><rect x="10.1141%" y="453" width="0.0830%" height="15" fill="rgb(210,199,37)" fg:x="11823" fg:w="97"/><text x="10.3641%" y="463.50"></text></g><g><title>sn_rust_alloc (88 samples, 0.08%)</title><rect x="10.1218%" y="437" width="0.0753%" height="15" fill="rgb(244,192,49)" fg:x="11832" fg:w="88"/><text x="10.3718%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (655 samples, 0.56%)</title><rect x="9.6445%" y="629" width="0.5603%" height="15" fill="rgb(226,211,11)" fg:x="11274" fg:w="655"/><text x="9.8945%" y="639.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (563 samples, 0.48%)</title><rect x="9.7232%" y="613" width="0.4816%" height="15" fill="rgb(236,162,54)" fg:x="11366" fg:w="563"/><text x="9.9732%" y="623.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (363 samples, 0.31%)</title><rect x="9.8943%" y="597" width="0.3105%" height="15" fill="rgb(220,229,9)" fg:x="11566" fg:w="363"/><text x="10.1443%" y="607.50"></text></g><g><title>value_trait::Builder::object (355 samples, 0.30%)</title><rect x="9.9011%" y="581" width="0.3037%" height="15" fill="rgb(250,87,22)" fg:x="11574" fg:w="355"/><text x="10.1511%" y="591.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (355 samples, 0.30%)</title><rect x="9.9011%" y="565" width="0.3037%" height="15" fill="rgb(239,43,17)" fg:x="11574" fg:w="355"/><text x="10.1511%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="10.2082%" y="613" width="0.0120%" height="15" fill="rgb(231,177,25)" fg:x="11933" fg:w="14"/><text x="10.4582%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="10.2330%" y="501" width="0.0103%" height="15" fill="rgb(219,179,1)" fg:x="11962" fg:w="12"/><text x="10.4830%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (12 samples, 0.01%)</title><rect x="10.2330%" y="485" width="0.0103%" height="15" fill="rgb(238,219,53)" fg:x="11962" fg:w="12"/><text x="10.4830%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (33 samples, 0.03%)</title><rect x="10.2211%" y="597" width="0.0282%" height="15" fill="rgb(232,167,36)" fg:x="11948" fg:w="33"/><text x="10.4711%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="10.2305%" y="581" width="0.0188%" height="15" fill="rgb(244,19,51)" fg:x="11959" fg:w="22"/><text x="10.4805%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (20 samples, 0.02%)</title><rect x="10.2322%" y="565" width="0.0171%" height="15" fill="rgb(224,6,22)" fg:x="11961" fg:w="20"/><text x="10.4822%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (20 samples, 0.02%)</title><rect x="10.2322%" y="549" width="0.0171%" height="15" fill="rgb(224,145,5)" fg:x="11961" fg:w="20"/><text x="10.4822%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (19 samples, 0.02%)</title><rect x="10.2330%" y="533" width="0.0163%" height="15" fill="rgb(234,130,49)" fg:x="11962" fg:w="19"/><text x="10.4830%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (19 samples, 0.02%)</title><rect x="10.2330%" y="517" width="0.0163%" height="15" fill="rgb(254,6,2)" fg:x="11962" fg:w="19"/><text x="10.4830%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (73 samples, 0.06%)</title><rect x="10.2082%" y="629" width="0.0624%" height="15" fill="rgb(208,96,46)" fg:x="11933" fg:w="73"/><text x="10.4582%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (59 samples, 0.05%)</title><rect x="10.2202%" y="613" width="0.0505%" height="15" fill="rgb(239,3,39)" fg:x="11947" fg:w="59"/><text x="10.4702%" y="623.50"></text></g><g><title>sn_rust_dealloc (25 samples, 0.02%)</title><rect x="10.2493%" y="597" width="0.0214%" height="15" fill="rgb(233,210,1)" fg:x="11981" fg:w="25"/><text x="10.4993%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (30 samples, 0.03%)</title><rect x="10.2707%" y="629" width="0.0257%" height="15" fill="rgb(244,137,37)" fg:x="12006" fg:w="30"/><text x="10.5207%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="10.2758%" y="613" width="0.0205%" height="15" fill="rgb(240,136,2)" fg:x="12012" fg:w="24"/><text x="10.5258%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (17 samples, 0.01%)</title><rect x="10.2818%" y="597" width="0.0145%" height="15" fill="rgb(239,18,37)" fg:x="12019" fg:w="17"/><text x="10.5318%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (17 samples, 0.01%)</title><rect x="10.2818%" y="581" width="0.0145%" height="15" fill="rgb(218,185,22)" fg:x="12019" fg:w="17"/><text x="10.5318%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (12 samples, 0.01%)</title><rect x="10.2861%" y="565" width="0.0103%" height="15" fill="rgb(225,218,4)" fg:x="12024" fg:w="12"/><text x="10.5361%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (12 samples, 0.01%)</title><rect x="10.2861%" y="549" width="0.0103%" height="15" fill="rgb(230,182,32)" fg:x="12024" fg:w="12"/><text x="10.5361%" y="559.50"></text></g><g><title>sn_rust_dealloc (20 samples, 0.02%)</title><rect x="10.2963%" y="629" width="0.0171%" height="15" fill="rgb(242,56,43)" fg:x="12036" fg:w="20"/><text x="10.5463%" y="639.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (1,054 samples, 0.90%)</title><rect x="9.4212%" y="645" width="0.9017%" height="15" fill="rgb(233,99,24)" fg:x="11013" fg:w="1054"/><text x="9.6712%" y="655.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (17 samples, 0.01%)</title><rect x="10.3588%" y="517" width="0.0145%" height="15" fill="rgb(234,209,42)" fg:x="12109" fg:w="17"/><text x="10.6088%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (41 samples, 0.04%)</title><rect x="10.3391%" y="629" width="0.0351%" height="15" fill="rgb(227,7,12)" fg:x="12086" fg:w="41"/><text x="10.5891%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (41 samples, 0.04%)</title><rect x="10.3391%" y="613" width="0.0351%" height="15" fill="rgb(245,203,43)" fg:x="12086" fg:w="41"/><text x="10.5891%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (41 samples, 0.04%)</title><rect x="10.3391%" y="597" width="0.0351%" height="15" fill="rgb(238,205,33)" fg:x="12086" fg:w="41"/><text x="10.5891%" y="607.50"></text></g><g><title>alloc::alloc::alloc (41 samples, 0.04%)</title><rect x="10.3391%" y="581" width="0.0351%" height="15" fill="rgb(231,56,7)" fg:x="12086" fg:w="41"/><text x="10.5891%" y="591.50"></text></g><g><title>__rg_alloc (41 samples, 0.04%)</title><rect x="10.3391%" y="565" width="0.0351%" height="15" fill="rgb(244,186,29)" fg:x="12086" fg:w="41"/><text x="10.5891%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (41 samples, 0.04%)</title><rect x="10.3391%" y="549" width="0.0351%" height="15" fill="rgb(234,111,31)" fg:x="12086" fg:w="41"/><text x="10.5891%" y="559.50"></text></g><g><title>sn_rust_alloc (41 samples, 0.04%)</title><rect x="10.3391%" y="533" width="0.0351%" height="15" fill="rgb(241,149,10)" fg:x="12086" fg:w="41"/><text x="10.5891%" y="543.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (72 samples, 0.06%)</title><rect x="10.3229%" y="645" width="0.0616%" height="15" fill="rgb(249,206,44)" fg:x="12067" fg:w="72"/><text x="10.5729%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (63 samples, 0.05%)</title><rect x="10.5898%" y="629" width="0.0539%" height="15" fill="rgb(251,153,30)" fg:x="12379" fg:w="63"/><text x="10.8398%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (40 samples, 0.03%)</title><rect x="10.6436%" y="629" width="0.0342%" height="15" fill="rgb(239,152,38)" fg:x="12442" fg:w="40"/><text x="10.8936%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.03%)</title><rect x="10.6436%" y="613" width="0.0342%" height="15" fill="rgb(249,139,47)" fg:x="12442" fg:w="40"/><text x="10.8936%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.03%)</title><rect x="10.6436%" y="597" width="0.0342%" height="15" fill="rgb(244,64,35)" fg:x="12442" fg:w="40"/><text x="10.8936%" y="607.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.03%)</title><rect x="10.6454%" y="581" width="0.0325%" height="15" fill="rgb(216,46,15)" fg:x="12444" fg:w="38"/><text x="10.8954%" y="591.50"></text></g><g><title>__rg_alloc (38 samples, 0.03%)</title><rect x="10.6454%" y="565" width="0.0325%" height="15" fill="rgb(250,74,19)" fg:x="12444" fg:w="38"/><text x="10.8954%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (38 samples, 0.03%)</title><rect x="10.6454%" y="549" width="0.0325%" height="15" fill="rgb(249,42,33)" fg:x="12444" fg:w="38"/><text x="10.8954%" y="559.50"></text></g><g><title>sn_rust_alloc (34 samples, 0.03%)</title><rect x="10.6488%" y="533" width="0.0291%" height="15" fill="rgb(242,149,17)" fg:x="12448" fg:w="34"/><text x="10.8988%" y="543.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (24 samples, 0.02%)</title><rect x="10.7035%" y="501" width="0.0205%" height="15" fill="rgb(244,29,21)" fg:x="12512" fg:w="24"/><text x="10.9535%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (57 samples, 0.05%)</title><rect x="10.6779%" y="629" width="0.0488%" height="15" fill="rgb(220,130,37)" fg:x="12482" fg:w="57"/><text x="10.9279%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (49 samples, 0.04%)</title><rect x="10.6847%" y="613" width="0.0419%" height="15" fill="rgb(211,67,2)" fg:x="12490" fg:w="49"/><text x="10.9347%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.04%)</title><rect x="10.6847%" y="597" width="0.0419%" height="15" fill="rgb(235,68,52)" fg:x="12490" fg:w="49"/><text x="10.9347%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.04%)</title><rect x="10.6847%" y="581" width="0.0419%" height="15" fill="rgb(246,142,3)" fg:x="12490" fg:w="49"/><text x="10.9347%" y="591.50"></text></g><g><title>alloc::alloc::alloc (48 samples, 0.04%)</title><rect x="10.6856%" y="565" width="0.0411%" height="15" fill="rgb(241,25,7)" fg:x="12491" fg:w="48"/><text x="10.9356%" y="575.50"></text></g><g><title>__rg_alloc (48 samples, 0.04%)</title><rect x="10.6856%" y="549" width="0.0411%" height="15" fill="rgb(242,119,39)" fg:x="12491" fg:w="48"/><text x="10.9356%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (48 samples, 0.04%)</title><rect x="10.6856%" y="533" width="0.0411%" height="15" fill="rgb(241,98,45)" fg:x="12491" fg:w="48"/><text x="10.9356%" y="543.50"></text></g><g><title>sn_rust_alloc (47 samples, 0.04%)</title><rect x="10.6864%" y="517" width="0.0402%" height="15" fill="rgb(254,28,30)" fg:x="12492" fg:w="47"/><text x="10.9364%" y="527.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (103 samples, 0.09%)</title><rect x="10.8900%" y="565" width="0.0881%" height="15" fill="rgb(241,142,54)" fg:x="12730" fg:w="103"/><text x="11.1400%" y="575.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (77 samples, 0.07%)</title><rect x="10.9123%" y="549" width="0.0659%" height="15" fill="rgb(222,85,15)" fg:x="12756" fg:w="77"/><text x="11.1623%" y="559.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (74 samples, 0.06%)</title><rect x="10.9148%" y="533" width="0.0633%" height="15" fill="rgb(210,85,47)" fg:x="12759" fg:w="74"/><text x="11.1648%" y="543.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (117 samples, 0.10%)</title><rect x="10.8900%" y="581" width="0.1001%" height="15" fill="rgb(224,206,25)" fg:x="12730" fg:w="117"/><text x="11.1400%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (14 samples, 0.01%)</title><rect x="10.9781%" y="565" width="0.0120%" height="15" fill="rgb(243,201,19)" fg:x="12833" fg:w="14"/><text x="11.2281%" y="575.50"></text></g><g><title>core::ptr::write (14 samples, 0.01%)</title><rect x="10.9781%" y="549" width="0.0120%" height="15" fill="rgb(236,59,4)" fg:x="12833" fg:w="14"/><text x="11.2281%" y="559.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (156 samples, 0.13%)</title><rect x="10.8780%" y="613" width="0.1335%" height="15" fill="rgb(254,179,45)" fg:x="12716" fg:w="156"/><text x="11.1280%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (144 samples, 0.12%)</title><rect x="10.8883%" y="597" width="0.1232%" height="15" fill="rgb(226,14,10)" fg:x="12728" fg:w="144"/><text x="11.1383%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (25 samples, 0.02%)</title><rect x="10.9901%" y="581" width="0.0214%" height="15" fill="rgb(244,27,41)" fg:x="12847" fg:w="25"/><text x="11.2401%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (25 samples, 0.02%)</title><rect x="10.9901%" y="565" width="0.0214%" height="15" fill="rgb(235,35,32)" fg:x="12847" fg:w="25"/><text x="11.2401%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.02%)</title><rect x="10.9901%" y="549" width="0.0214%" height="15" fill="rgb(218,68,31)" fg:x="12847" fg:w="25"/><text x="11.2401%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.02%)</title><rect x="10.9901%" y="533" width="0.0214%" height="15" fill="rgb(207,120,37)" fg:x="12847" fg:w="25"/><text x="11.2401%" y="543.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.02%)</title><rect x="10.9901%" y="517" width="0.0214%" height="15" fill="rgb(227,98,0)" fg:x="12847" fg:w="25"/><text x="11.2401%" y="527.50"></text></g><g><title>__rg_alloc (25 samples, 0.02%)</title><rect x="10.9901%" y="501" width="0.0214%" height="15" fill="rgb(207,7,3)" fg:x="12847" fg:w="25"/><text x="11.2401%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (25 samples, 0.02%)</title><rect x="10.9901%" y="485" width="0.0214%" height="15" fill="rgb(206,98,19)" fg:x="12847" fg:w="25"/><text x="11.2401%" y="495.50"></text></g><g><title>sn_rust_alloc (25 samples, 0.02%)</title><rect x="10.9901%" y="469" width="0.0214%" height="15" fill="rgb(217,5,26)" fg:x="12847" fg:w="25"/><text x="11.2401%" y="479.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (1,986 samples, 1.70%)</title><rect x="9.4212%" y="741" width="1.6989%" height="15" fill="rgb(235,190,38)" fg:x="11013" fg:w="1986"/><text x="9.6712%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,986 samples, 1.70%)</title><rect x="9.4212%" y="725" width="1.6989%" height="15" fill="rgb(247,86,24)" fg:x="11013" fg:w="1986"/><text x="9.6712%" y="735.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (1,986 samples, 1.70%)</title><rect x="9.4212%" y="709" width="1.6989%" height="15" fill="rgb(205,101,16)" fg:x="11013" fg:w="1986"/><text x="9.6712%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,986 samples, 1.70%)</title><rect x="9.4212%" y="693" width="1.6989%" height="15" fill="rgb(246,168,33)" fg:x="11013" fg:w="1986"/><text x="9.6712%" y="703.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,986 samples, 1.70%)</title><rect x="9.4212%" y="677" width="1.6989%" height="15" fill="rgb(231,114,1)" fg:x="11013" fg:w="1986"/><text x="9.6712%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (1,986 samples, 1.70%)</title><rect x="9.4212%" y="661" width="1.6989%" height="15" fill="rgb(207,184,53)" fg:x="11013" fg:w="1986"/><text x="9.6712%" y="671.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (860 samples, 0.74%)</title><rect x="10.3844%" y="645" width="0.7357%" height="15" fill="rgb(224,95,51)" fg:x="12139" fg:w="860"/><text x="10.6344%" y="655.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (453 samples, 0.39%)</title><rect x="10.7326%" y="629" width="0.3875%" height="15" fill="rgb(212,188,45)" fg:x="12546" fg:w="453"/><text x="10.9826%" y="639.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (127 samples, 0.11%)</title><rect x="11.0115%" y="613" width="0.1086%" height="15" fill="rgb(223,154,38)" fg:x="12872" fg:w="127"/><text x="11.2615%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (18 samples, 0.02%)</title><rect x="11.2151%" y="533" width="0.0154%" height="15" fill="rgb(251,22,52)" fg:x="13110" fg:w="18"/><text x="11.4651%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="11.2151%" y="517" width="0.0154%" height="15" fill="rgb(229,209,22)" fg:x="13110" fg:w="18"/><text x="11.4651%" y="527.50"></text></g><g><title>core::hint::spin_loop (305 samples, 0.26%)</title><rect x="11.2391%" y="501" width="0.2609%" height="15" fill="rgb(234,138,34)" fg:x="13138" fg:w="305"/><text x="11.4891%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (305 samples, 0.26%)</title><rect x="11.2391%" y="485" width="0.2609%" height="15" fill="rgb(212,95,11)" fg:x="13138" fg:w="305"/><text x="11.4891%" y="495.50"></text></g><g><title>event_listener::Inner::lock (347 samples, 0.30%)</title><rect x="11.2125%" y="597" width="0.2968%" height="15" fill="rgb(240,179,47)" fg:x="13107" fg:w="347"/><text x="11.4625%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (346 samples, 0.30%)</title><rect x="11.2134%" y="581" width="0.2960%" height="15" fill="rgb(240,163,11)" fg:x="13108" fg:w="346"/><text x="11.4634%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (345 samples, 0.30%)</title><rect x="11.2142%" y="565" width="0.2951%" height="15" fill="rgb(236,37,12)" fg:x="13109" fg:w="345"/><text x="11.4642%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (345 samples, 0.30%)</title><rect x="11.2142%" y="549" width="0.2951%" height="15" fill="rgb(232,164,16)" fg:x="13109" fg:w="345"/><text x="11.4642%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (326 samples, 0.28%)</title><rect x="11.2305%" y="533" width="0.2789%" height="15" fill="rgb(244,205,15)" fg:x="13128" fg:w="326"/><text x="11.4805%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (317 samples, 0.27%)</title><rect x="11.2382%" y="517" width="0.2712%" height="15" fill="rgb(223,117,47)" fg:x="13137" fg:w="317"/><text x="11.4882%" y="527.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (391 samples, 0.33%)</title><rect x="11.1826%" y="613" width="0.3345%" height="15" fill="rgb(244,107,35)" fg:x="13072" fg:w="391"/><text x="11.4326%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (98 samples, 0.08%)</title><rect x="11.5881%" y="565" width="0.0838%" height="15" fill="rgb(205,140,8)" fg:x="13546" fg:w="98"/><text x="11.8381%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (98 samples, 0.08%)</title><rect x="11.5881%" y="549" width="0.0838%" height="15" fill="rgb(228,84,46)" fg:x="13546" fg:w="98"/><text x="11.8381%" y="559.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (460 samples, 0.39%)</title><rect x="11.5256%" y="597" width="0.3935%" height="15" fill="rgb(254,188,9)" fg:x="13473" fg:w="460"/><text x="11.7756%" y="607.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (444 samples, 0.38%)</title><rect x="11.5393%" y="581" width="0.3798%" height="15" fill="rgb(206,112,54)" fg:x="13489" fg:w="444"/><text x="11.7893%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (289 samples, 0.25%)</title><rect x="11.6719%" y="565" width="0.2472%" height="15" fill="rgb(216,84,49)" fg:x="13644" fg:w="289"/><text x="11.9219%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (289 samples, 0.25%)</title><rect x="11.6719%" y="549" width="0.2472%" height="15" fill="rgb(214,194,35)" fg:x="13644" fg:w="289"/><text x="11.9219%" y="559.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,054 samples, 0.90%)</title><rect x="11.5171%" y="613" width="0.9017%" height="15" fill="rgb(249,28,3)" fg:x="13463" fg:w="1054"/><text x="11.7671%" y="623.50"></text></g><g><title>event_listener::Event::notify (584 samples, 0.50%)</title><rect x="11.9191%" y="597" width="0.4996%" height="15" fill="rgb(222,56,52)" fg:x="13933" fg:w="584"/><text x="12.1691%" y="607.50"></text></g><g><title>event_listener::full_fence (578 samples, 0.49%)</title><rect x="11.9243%" y="581" width="0.4945%" height="15" fill="rgb(245,217,50)" fg:x="13939" fg:w="578"/><text x="12.1743%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (578 samples, 0.49%)</title><rect x="11.9243%" y="565" width="0.4945%" height="15" fill="rgb(213,201,24)" fg:x="13939" fg:w="578"/><text x="12.1743%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (578 samples, 0.49%)</title><rect x="11.9243%" y="549" width="0.4945%" height="15" fill="rgb(248,116,28)" fg:x="13939" fg:w="578"/><text x="12.1743%" y="559.50"></text></g><g><title>event_listener::Inner::lock (30 samples, 0.03%)</title><rect x="12.4281%" y="565" width="0.0257%" height="15" fill="rgb(219,72,43)" fg:x="14528" fg:w="30"/><text x="12.6781%" y="575.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.03%)</title><rect x="12.4281%" y="549" width="0.0257%" height="15" fill="rgb(209,138,14)" fg:x="14528" fg:w="30"/><text x="12.6781%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (30 samples, 0.03%)</title><rect x="12.4281%" y="533" width="0.0257%" height="15" fill="rgb(222,18,33)" fg:x="14528" fg:w="30"/><text x="12.6781%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (30 samples, 0.03%)</title><rect x="12.4281%" y="517" width="0.0257%" height="15" fill="rgb(213,199,7)" fg:x="14528" fg:w="30"/><text x="12.6781%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (23 samples, 0.02%)</title><rect x="12.4341%" y="501" width="0.0197%" height="15" fill="rgb(250,110,10)" fg:x="14535" fg:w="23"/><text x="12.6841%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (15 samples, 0.01%)</title><rect x="12.4410%" y="485" width="0.0128%" height="15" fill="rgb(248,123,6)" fg:x="14543" fg:w="15"/><text x="12.6910%" y="495.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (40 samples, 0.03%)</title><rect x="12.4273%" y="581" width="0.0342%" height="15" fill="rgb(206,91,31)" fg:x="14527" fg:w="40"/><text x="12.6773%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (61 samples, 0.05%)</title><rect x="12.4204%" y="613" width="0.0522%" height="15" fill="rgb(211,154,13)" fg:x="14519" fg:w="61"/><text x="12.6704%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (54 samples, 0.05%)</title><rect x="12.4264%" y="597" width="0.0462%" height="15" fill="rgb(225,148,7)" fg:x="14526" fg:w="54"/><text x="12.6764%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (13 samples, 0.01%)</title><rect x="12.4615%" y="581" width="0.0111%" height="15" fill="rgb(220,160,43)" fg:x="14567" fg:w="13"/><text x="12.7115%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="12.4615%" y="565" width="0.0111%" height="15" fill="rgb(213,52,39)" fg:x="14567" fg:w="13"/><text x="12.7115%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="12.4726%" y="597" width="0.0257%" height="15" fill="rgb(243,137,7)" fg:x="14580" fg:w="30"/><text x="12.7226%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (30 samples, 0.03%)</title><rect x="12.4726%" y="581" width="0.0257%" height="15" fill="rgb(230,79,13)" fg:x="14580" fg:w="30"/><text x="12.7226%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_add (30 samples, 0.03%)</title><rect x="12.4726%" y="565" width="0.0257%" height="15" fill="rgb(247,105,23)" fg:x="14580" fg:w="30"/><text x="12.7226%" y="575.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,588 samples, 1.36%)</title><rect x="11.1655%" y="629" width="1.3585%" height="15" fill="rgb(223,179,41)" fg:x="13052" fg:w="1588"/><text x="11.4155%" y="639.50"></text></g><g><title>event_listener::Event::listen (60 samples, 0.05%)</title><rect x="12.4726%" y="613" width="0.0513%" height="15" fill="rgb(218,9,34)" fg:x="14580" fg:w="60"/><text x="12.7226%" y="623.50"></text></g><g><title>[libc-2.31.so] (127 samples, 0.11%)</title><rect x="12.5308%" y="613" width="0.1086%" height="15" fill="rgb(222,106,8)" fg:x="14648" fg:w="127"/><text x="12.7808%" y="623.50"></text></g><g><title>[libc-2.31.so] (494 samples, 0.42%)</title><rect x="12.6420%" y="581" width="0.4226%" height="15" fill="rgb(211,220,0)" fg:x="14778" fg:w="494"/><text x="12.8920%" y="591.50"></text></g><g><title>sn_rust_dealloc (47 samples, 0.04%)</title><rect x="13.0723%" y="501" width="0.0402%" height="15" fill="rgb(229,52,16)" fg:x="15281" fg:w="47"/><text x="13.3223%" y="511.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,460 samples, 2.10%)</title><rect x="11.1398%" y="661" width="2.1044%" height="15" fill="rgb(212,155,18)" fg:x="13022" fg:w="2460"/><text x="11.3898%" y="671.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,449 samples, 2.10%)</title><rect x="11.1492%" y="645" width="2.0950%" height="15" fill="rgb(242,21,14)" fg:x="13033" fg:w="2449"/><text x="11.3992%" y="655.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (842 samples, 0.72%)</title><rect x="12.5240%" y="629" width="0.7203%" height="15" fill="rgb(222,19,48)" fg:x="14640" fg:w="842"/><text x="12.7740%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (707 samples, 0.60%)</title><rect x="12.6394%" y="613" width="0.6048%" height="15" fill="rgb(232,45,27)" fg:x="14775" fg:w="707"/><text x="12.8894%" y="623.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (707 samples, 0.60%)</title><rect x="12.6394%" y="597" width="0.6048%" height="15" fill="rgb(249,103,42)" fg:x="14775" fg:w="707"/><text x="12.8894%" y="607.50"></text></g><g><title>alloc::alloc::box_free (210 samples, 0.18%)</title><rect x="13.0646%" y="581" width="0.1796%" height="15" fill="rgb(246,81,33)" fg:x="15272" fg:w="210"/><text x="13.3146%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (210 samples, 0.18%)</title><rect x="13.0646%" y="565" width="0.1796%" height="15" fill="rgb(252,33,42)" fg:x="15272" fg:w="210"/><text x="13.3146%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (210 samples, 0.18%)</title><rect x="13.0646%" y="549" width="0.1796%" height="15" fill="rgb(209,212,41)" fg:x="15272" fg:w="210"/><text x="13.3146%" y="559.50"></text></g><g><title>__rg_dealloc (210 samples, 0.18%)</title><rect x="13.0646%" y="533" width="0.1796%" height="15" fill="rgb(207,154,6)" fg:x="15272" fg:w="210"/><text x="13.3146%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (210 samples, 0.18%)</title><rect x="13.0646%" y="517" width="0.1796%" height="15" fill="rgb(223,64,47)" fg:x="15272" fg:w="210"/><text x="13.3146%" y="527.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (154 samples, 0.13%)</title><rect x="13.1125%" y="501" width="0.1317%" height="15" fill="rgb(211,161,38)" fg:x="15328" fg:w="154"/><text x="13.3625%" y="511.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,087 samples, 2.64%)</title><rect x="11.1201%" y="725" width="2.6408%" height="15" fill="rgb(219,138,40)" fg:x="12999" fg:w="3087"/><text x="11.3701%" y="735.50">&lt;a..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (3,087 samples, 2.64%)</title><rect x="11.1201%" y="709" width="2.6408%" height="15" fill="rgb(241,228,46)" fg:x="12999" fg:w="3087"/><text x="11.3701%" y="719.50">&lt;t..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (3,087 samples, 2.64%)</title><rect x="11.1201%" y="693" width="2.6408%" height="15" fill="rgb(223,209,38)" fg:x="12999" fg:w="3087"/><text x="11.3701%" y="703.50">&lt;a..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (3,087 samples, 2.64%)</title><rect x="11.1201%" y="677" width="2.6408%" height="15" fill="rgb(236,164,45)" fg:x="12999" fg:w="3087"/><text x="11.3701%" y="687.50">&lt;t..</text></g><g><title>[libc-2.31.so] (604 samples, 0.52%)</title><rect x="13.2443%" y="661" width="0.5167%" height="15" fill="rgb(231,15,5)" fg:x="15482" fg:w="604"/><text x="13.4943%" y="671.50"></text></g><g><title>&lt;value_trait::generator::DumpGenerator&lt;VT&gt; as value_trait::generator::BaseGenerator&gt;::write (12 samples, 0.01%)</title><rect x="13.7840%" y="581" width="0.0103%" height="15" fill="rgb(252,35,15)" fg:x="16113" fg:w="12"/><text x="14.0340%" y="591.50"></text></g><g><title>value_trait::generator::extend_from_slice (12 samples, 0.01%)</title><rect x="13.7840%" y="565" width="0.0103%" height="15" fill="rgb(248,181,18)" fg:x="16113" fg:w="12"/><text x="14.0340%" y="575.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::operator::TrickleOperator as tremor_pipeline::op::Operator&gt;::on_event (71 samples, 0.06%)</title><rect x="13.7609%" y="645" width="0.0607%" height="15" fill="rgb(233,39,42)" fg:x="16086" fg:w="71"/><text x="14.0109%" y="655.50"></text></g><g><title>&lt;tremor_pipeline::op::grouper::bucket::Grouper as tremor_pipeline::op::Operator&gt;::on_event (71 samples, 0.06%)</title><rect x="13.7609%" y="629" width="0.0607%" height="15" fill="rgb(238,110,33)" fg:x="16086" fg:w="71"/><text x="14.0109%" y="639.50"></text></g><g><title>tremor_value::value::serialize::&lt;impl value_trait::Writable for tremor_value::value::Value&gt;::encode (71 samples, 0.06%)</title><rect x="13.7609%" y="613" width="0.0607%" height="15" fill="rgb(233,195,10)" fg:x="16086" fg:w="71"/><text x="14.0109%" y="623.50"></text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (71 samples, 0.06%)</title><rect x="13.7609%" y="597" width="0.0607%" height="15" fill="rgb(254,105,3)" fg:x="16086" fg:w="71"/><text x="14.0109%" y="607.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_string (32 samples, 0.03%)</title><rect x="13.7943%" y="581" width="0.0274%" height="15" fill="rgb(221,225,9)" fg:x="16125" fg:w="32"/><text x="14.0443%" y="591.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_string_content (27 samples, 0.02%)</title><rect x="13.7986%" y="565" width="0.0231%" height="15" fill="rgb(224,227,45)" fg:x="16130" fg:w="27"/><text x="14.0486%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="13.9346%" y="565" width="0.0128%" height="15" fill="rgb(229,198,43)" fg:x="16289" fg:w="15"/><text x="14.1846%" y="575.50"></text></g><g><title>&lt;tremor_script::interpreter::Env as core::default::Default&gt;::default (14 samples, 0.01%)</title><rect x="13.9474%" y="565" width="0.0120%" height="15" fill="rgb(206,209,35)" fg:x="16304" fg:w="14"/><text x="14.1974%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::interpreter::LocalStack&gt; (13 samples, 0.01%)</title><rect x="13.9645%" y="565" width="0.0111%" height="15" fill="rgb(245,195,53)" fg:x="16324" fg:w="13"/><text x="14.2145%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;tremor_value::value::Value&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="13.9645%" y="549" width="0.0111%" height="15" fill="rgb(240,92,26)" fg:x="16324" fg:w="13"/><text x="14.2145%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (33 samples, 0.03%)</title><rect x="14.1519%" y="517" width="0.0282%" height="15" fill="rgb(207,40,23)" fg:x="16543" fg:w="33"/><text x="14.4019%" y="527.50"></text></g><g><title>tremor_script::interpreter::LocalStack::with_size (245 samples, 0.21%)</title><rect x="13.9834%" y="565" width="0.2096%" height="15" fill="rgb(223,111,35)" fg:x="16346" fg:w="245"/><text x="14.2334%" y="575.50"></text></g><g><title>alloc::vec::from_elem (245 samples, 0.21%)</title><rect x="13.9834%" y="549" width="0.2096%" height="15" fill="rgb(229,147,28)" fg:x="16346" fg:w="245"/><text x="14.2334%" y="559.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (241 samples, 0.21%)</title><rect x="13.9868%" y="533" width="0.2062%" height="15" fill="rgb(211,29,28)" fg:x="16350" fg:w="241"/><text x="14.2368%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="14.1801%" y="517" width="0.0128%" height="15" fill="rgb(228,72,33)" fg:x="16576" fg:w="15"/><text x="14.4301%" y="527.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (521 samples, 0.45%)</title><rect x="13.7609%" y="709" width="0.4457%" height="15" fill="rgb(205,214,31)" fg:x="16086" fg:w="521"/><text x="14.0109%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (521 samples, 0.45%)</title><rect x="13.7609%" y="693" width="0.4457%" height="15" fill="rgb(224,111,15)" fg:x="16086" fg:w="521"/><text x="14.0109%" y="703.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (521 samples, 0.45%)</title><rect x="13.7609%" y="677" width="0.4457%" height="15" fill="rgb(253,21,26)" fg:x="16086" fg:w="521"/><text x="14.0109%" y="687.50"></text></g><g><title>&lt;tremor_pipeline::executable_graph::OperatorNode as tremor_pipeline::op::Operator&gt;::on_event (521 samples, 0.45%)</title><rect x="13.7609%" y="661" width="0.4457%" height="15" fill="rgb(245,139,43)" fg:x="16086" fg:w="521"/><text x="14.0109%" y="671.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event (450 samples, 0.38%)</title><rect x="13.8217%" y="645" width="0.3850%" height="15" fill="rgb(252,170,7)" fg:x="16157" fg:w="450"/><text x="14.0717%" y="655.50"></text></g><g><title>tremor_script::srs::EventPayload::rent_mut (450 samples, 0.38%)</title><rect x="13.8217%" y="629" width="0.3850%" height="15" fill="rgb(231,118,14)" fg:x="16157" fg:w="450"/><text x="14.0717%" y="639.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event::{{closure}} (450 samples, 0.38%)</title><rect x="13.8217%" y="613" width="0.3850%" height="15" fill="rgb(238,83,0)" fg:x="16157" fg:w="450"/><text x="14.0717%" y="623.50"></text></g><g><title>tremor_script::script::Script::run (450 samples, 0.38%)</title><rect x="13.8217%" y="597" width="0.3850%" height="15" fill="rgb(221,39,39)" fg:x="16157" fg:w="450"/><text x="14.0717%" y="607.50"></text></g><g><title>tremor_script::ast::Script::run (450 samples, 0.38%)</title><rect x="13.8217%" y="581" width="0.3850%" height="15" fill="rgb(222,119,46)" fg:x="16157" fg:w="450"/><text x="14.0717%" y="591.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (16 samples, 0.01%)</title><rect x="14.1930%" y="565" width="0.0137%" height="15" fill="rgb(222,165,49)" fg:x="16591" fg:w="16"/><text x="14.4430%" y="575.50"></text></g><g><title>[libc-2.31.so] (74 samples, 0.06%)</title><rect x="14.2084%" y="677" width="0.0633%" height="15" fill="rgb(219,113,52)" fg:x="16609" fg:w="74"/><text x="14.4584%" y="687.50"></text></g><g><title>[libc-2.31.so] (565 samples, 0.48%)</title><rect x="14.3726%" y="661" width="0.4833%" height="15" fill="rgb(214,7,15)" fg:x="16801" fg:w="565"/><text x="14.6226%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (9,483 samples, 8.11%)</title><rect x="6.7530%" y="869" width="8.1123%" height="15" fill="rgb(235,32,4)" fg:x="7894" fg:w="9483"/><text x="7.0030%" y="879.50">async_execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (9,483 samples, 8.11%)</title><rect x="6.7530%" y="853" width="8.1123%" height="15" fill="rgb(238,90,54)" fg:x="7894" fg:w="9483"/><text x="7.0030%" y="863.50">&lt;async_std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (9,483 samples, 8.11%)</title><rect x="6.7530%" y="837" width="8.1123%" height="15" fill="rgb(213,208,19)" fg:x="7894" fg:w="9483"/><text x="7.0030%" y="847.50">async_std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,483 samples, 8.11%)</title><rect x="6.7530%" y="821" width="8.1123%" height="15" fill="rgb(233,156,4)" fg:x="7894" fg:w="9483"/><text x="7.0030%" y="831.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,483 samples, 8.11%)</title><rect x="6.7530%" y="805" width="8.1123%" height="15" fill="rgb(207,194,5)" fg:x="7894" fg:w="9483"/><text x="7.0030%" y="815.50">std::thread..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (9,483 samples, 8.11%)</title><rect x="6.7530%" y="789" width="8.1123%" height="15" fill="rgb(206,111,30)" fg:x="7894" fg:w="9483"/><text x="7.0030%" y="799.50">async_std::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (9,483 samples, 8.11%)</title><rect x="6.7530%" y="773" width="8.1123%" height="15" fill="rgb(243,70,54)" fg:x="7894" fg:w="9483"/><text x="7.0030%" y="783.50">&lt;async_std:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,483 samples, 8.11%)</title><rect x="6.7530%" y="757" width="8.1123%" height="15" fill="rgb(242,28,8)" fg:x="7894" fg:w="9483"/><text x="7.0030%" y="767.50">&lt;core::futu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (4,378 samples, 3.75%)</title><rect x="11.1201%" y="741" width="3.7452%" height="15" fill="rgb(219,106,18)" fg:x="12999" fg:w="4378"/><text x="11.3701%" y="751.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,291 samples, 1.10%)</title><rect x="13.7609%" y="725" width="1.1044%" height="15" fill="rgb(244,222,10)" fg:x="16086" fg:w="1291"/><text x="14.0109%" y="735.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (770 samples, 0.66%)</title><rect x="14.2066%" y="709" width="0.6587%" height="15" fill="rgb(236,179,52)" fg:x="16607" fg:w="770"/><text x="14.4566%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (770 samples, 0.66%)</title><rect x="14.2066%" y="693" width="0.6587%" height="15" fill="rgb(213,23,39)" fg:x="16607" fg:w="770"/><text x="14.4566%" y="703.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (694 samples, 0.59%)</title><rect x="14.2717%" y="677" width="0.5937%" height="15" fill="rgb(238,48,10)" fg:x="16683" fg:w="694"/><text x="14.5217%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,477 samples, 8.96%)</title><rect x="5.9061%" y="885" width="8.9627%" height="15" fill="rgb(251,196,23)" fg:x="6904" fg:w="10477"/><text x="6.1561%" y="895.50">&lt;core::future..</text></g><g><title>&lt;tremor_pipeline::op::EventAndInsights as core::convert::From&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt;&gt;::from (13 samples, 0.01%)</title><rect x="14.8850%" y="885" width="0.0111%" height="15" fill="rgb(250,152,24)" fg:x="17400" fg:w="13"/><text x="15.1350%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::if_expr (44 samples, 0.04%)</title><rect x="14.9090%" y="789" width="0.0376%" height="15" fill="rgb(209,150,17)" fg:x="17428" fg:w="44"/><text x="15.1590%" y="799.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::execute_effectors (44 samples, 0.04%)</title><rect x="14.9090%" y="773" width="0.0376%" height="15" fill="rgb(234,202,34)" fg:x="17428" fg:w="44"/><text x="15.1590%" y="783.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (44 samples, 0.04%)</title><rect x="14.9090%" y="757" width="0.0376%" height="15" fill="rgb(253,148,53)" fg:x="17428" fg:w="44"/><text x="15.1590%" y="767.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (43 samples, 0.04%)</title><rect x="14.9098%" y="741" width="0.0368%" height="15" fill="rgb(218,129,16)" fg:x="17429" fg:w="43"/><text x="15.1598%" y="751.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event (117 samples, 0.10%)</title><rect x="14.9038%" y="885" width="0.1001%" height="15" fill="rgb(216,85,19)" fg:x="17422" fg:w="117"/><text x="15.1538%" y="895.50"></text></g><g><title>tremor_script::srs::EventPayload::rent_mut (111 samples, 0.09%)</title><rect x="14.9090%" y="869" width="0.0950%" height="15" fill="rgb(235,228,7)" fg:x="17428" fg:w="111"/><text x="15.1590%" y="879.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event::{{closure}} (111 samples, 0.09%)</title><rect x="14.9090%" y="853" width="0.0950%" height="15" fill="rgb(245,175,0)" fg:x="17428" fg:w="111"/><text x="15.1590%" y="863.50"></text></g><g><title>tremor_script::script::Script::run (111 samples, 0.09%)</title><rect x="14.9090%" y="837" width="0.0950%" height="15" fill="rgb(208,168,36)" fg:x="17428" fg:w="111"/><text x="15.1590%" y="847.50"></text></g><g><title>tremor_script::ast::Script::run (111 samples, 0.09%)</title><rect x="14.9090%" y="821" width="0.0950%" height="15" fill="rgb(246,171,24)" fg:x="17428" fg:w="111"/><text x="15.1590%" y="831.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (111 samples, 0.09%)</title><rect x="14.9090%" y="805" width="0.0950%" height="15" fill="rgb(215,142,24)" fg:x="17428" fg:w="111"/><text x="15.1590%" y="815.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::match_expr (67 samples, 0.06%)</title><rect x="14.9466%" y="789" width="0.0573%" height="15" fill="rgb(250,187,7)" fg:x="17472" fg:w="67"/><text x="15.1966%" y="799.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::execute_effectors (67 samples, 0.06%)</title><rect x="14.9466%" y="773" width="0.0573%" height="15" fill="rgb(228,66,33)" fg:x="17472" fg:w="67"/><text x="15.1966%" y="783.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (67 samples, 0.06%)</title><rect x="14.9466%" y="757" width="0.0573%" height="15" fill="rgb(234,215,21)" fg:x="17472" fg:w="67"/><text x="15.1966%" y="767.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (67 samples, 0.06%)</title><rect x="14.9466%" y="741" width="0.0573%" height="15" fill="rgb(222,191,20)" fg:x="17472" fg:w="67"/><text x="15.1966%" y="751.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (67 samples, 0.06%)</title><rect x="14.9466%" y="725" width="0.0573%" height="15" fill="rgb(245,79,54)" fg:x="17472" fg:w="67"/><text x="15.1966%" y="735.50"></text></g><g><title>tremor_script::interpreter::resolve (12 samples, 0.01%)</title><rect x="14.9937%" y="709" width="0.0103%" height="15" fill="rgb(240,10,37)" fg:x="17527" fg:w="12"/><text x="15.2437%" y="719.50"></text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode (26 samples, 0.02%)</title><rect x="15.0074%" y="885" width="0.0222%" height="15" fill="rgb(214,192,32)" fg:x="17543" fg:w="26"/><text x="15.2574%" y="895.50"></text></g><g><title>[libc-2.31.so] (237 samples, 0.20%)</title><rect x="15.0476%" y="885" width="0.2027%" height="15" fill="rgb(209,36,54)" fg:x="17590" fg:w="237"/><text x="15.2976%" y="895.50"></text></g><g><title>__clock_gettime (41 samples, 0.04%)</title><rect x="15.2503%" y="885" width="0.0351%" height="15" fill="rgb(220,10,11)" fg:x="17827" fg:w="41"/><text x="15.5003%" y="895.50"></text></g><g><title>__vdso_clock_gettime (14 samples, 0.01%)</title><rect x="15.2862%" y="885" width="0.0120%" height="15" fill="rgb(221,106,17)" fg:x="17869" fg:w="14"/><text x="15.5362%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (97 samples, 0.08%)</title><rect x="15.3076%" y="885" width="0.0830%" height="15" fill="rgb(251,142,44)" fg:x="17894" fg:w="97"/><text x="15.5576%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.02%)</title><rect x="15.3906%" y="885" width="0.0180%" height="15" fill="rgb(238,13,15)" fg:x="17991" fg:w="21"/><text x="15.6406%" y="895.50"></text></g><g><title>async_executor::Ticker::sleep (32 samples, 0.03%)</title><rect x="15.4154%" y="885" width="0.0274%" height="15" fill="rgb(208,107,27)" fg:x="18020" fg:w="32"/><text x="15.6654%" y="895.50"></text></g><g><title>async_executor::steal (112 samples, 0.10%)</title><rect x="15.4428%" y="885" width="0.0958%" height="15" fill="rgb(205,136,37)" fg:x="18052" fg:w="112"/><text x="15.6928%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (38 samples, 0.03%)</title><rect x="15.5959%" y="405" width="0.0325%" height="15" fill="rgb(250,205,27)" fg:x="18231" fg:w="38"/><text x="15.8459%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (38 samples, 0.03%)</title><rect x="15.5959%" y="389" width="0.0325%" height="15" fill="rgb(210,80,43)" fg:x="18231" fg:w="38"/><text x="15.8459%" y="399.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="15.5951%" y="437" width="0.0351%" height="15" fill="rgb(247,160,36)" fg:x="18230" fg:w="41"/><text x="15.8451%" y="447.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (40 samples, 0.03%)</title><rect x="15.5959%" y="421" width="0.0342%" height="15" fill="rgb(234,13,49)" fg:x="18231" fg:w="40"/><text x="15.8459%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (19 samples, 0.02%)</title><rect x="15.6336%" y="437" width="0.0163%" height="15" fill="rgb(234,122,0)" fg:x="18275" fg:w="19"/><text x="15.8836%" y="447.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="15.6395%" y="421" width="0.0103%" height="15" fill="rgb(207,146,38)" fg:x="18282" fg:w="12"/><text x="15.8895%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (12 samples, 0.01%)</title><rect x="15.6395%" y="405" width="0.0103%" height="15" fill="rgb(207,177,25)" fg:x="18282" fg:w="12"/><text x="15.8895%" y="415.50"></text></g><g><title>core::mem::drop (26 samples, 0.02%)</title><rect x="15.6498%" y="437" width="0.0222%" height="15" fill="rgb(211,178,42)" fg:x="18294" fg:w="26"/><text x="15.8998%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (26 samples, 0.02%)</title><rect x="15.6498%" y="421" width="0.0222%" height="15" fill="rgb(230,69,54)" fg:x="18294" fg:w="26"/><text x="15.8998%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (25 samples, 0.02%)</title><rect x="15.6507%" y="405" width="0.0214%" height="15" fill="rgb(214,135,41)" fg:x="18295" fg:w="25"/><text x="15.9007%" y="415.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="15.6507%" y="389" width="0.0214%" height="15" fill="rgb(237,67,25)" fg:x="18295" fg:w="25"/><text x="15.9007%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (25 samples, 0.02%)</title><rect x="15.6507%" y="373" width="0.0214%" height="15" fill="rgb(222,189,50)" fg:x="18295" fg:w="25"/><text x="15.9007%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (25 samples, 0.02%)</title><rect x="15.6507%" y="357" width="0.0214%" height="15" fill="rgb(245,148,34)" fg:x="18295" fg:w="25"/><text x="15.9007%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (25 samples, 0.02%)</title><rect x="15.6507%" y="341" width="0.0214%" height="15" fill="rgb(222,29,6)" fg:x="18295" fg:w="25"/><text x="15.9007%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_swap (25 samples, 0.02%)</title><rect x="15.6507%" y="325" width="0.0214%" height="15" fill="rgb(221,189,43)" fg:x="18295" fg:w="25"/><text x="15.9007%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (43 samples, 0.04%)</title><rect x="15.6721%" y="437" width="0.0368%" height="15" fill="rgb(207,36,27)" fg:x="18320" fg:w="43"/><text x="15.9221%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (37 samples, 0.03%)</title><rect x="15.6772%" y="421" width="0.0317%" height="15" fill="rgb(217,90,24)" fg:x="18326" fg:w="37"/><text x="15.9272%" y="431.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="15.6772%" y="405" width="0.0317%" height="15" fill="rgb(224,66,35)" fg:x="18326" fg:w="37"/><text x="15.9272%" y="415.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (36 samples, 0.03%)</title><rect x="15.6780%" y="389" width="0.0308%" height="15" fill="rgb(221,13,50)" fg:x="18327" fg:w="36"/><text x="15.9280%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (36 samples, 0.03%)</title><rect x="15.6780%" y="373" width="0.0308%" height="15" fill="rgb(236,68,49)" fg:x="18327" fg:w="36"/><text x="15.9280%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (35 samples, 0.03%)</title><rect x="15.6789%" y="357" width="0.0299%" height="15" fill="rgb(229,146,28)" fg:x="18328" fg:w="35"/><text x="15.9289%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_swap (35 samples, 0.03%)</title><rect x="15.6789%" y="341" width="0.0299%" height="15" fill="rgb(225,31,38)" fg:x="18328" fg:w="35"/><text x="15.9289%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (117 samples, 0.10%)</title><rect x="15.7208%" y="373" width="0.1001%" height="15" fill="rgb(250,208,3)" fg:x="18377" fg:w="117"/><text x="15.9708%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (117 samples, 0.10%)</title><rect x="15.7208%" y="357" width="0.1001%" height="15" fill="rgb(246,54,23)" fg:x="18377" fg:w="117"/><text x="15.9708%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (33 samples, 0.03%)</title><rect x="15.8269%" y="357" width="0.0282%" height="15" fill="rgb(243,76,11)" fg:x="18501" fg:w="33"/><text x="16.0769%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (33 samples, 0.03%)</title><rect x="15.8269%" y="341" width="0.0282%" height="15" fill="rgb(245,21,50)" fg:x="18501" fg:w="33"/><text x="16.0769%" y="351.50"></text></g><g><title>core::hint::spin_loop (1,086 samples, 0.93%)</title><rect x="15.8662%" y="341" width="0.9290%" height="15" fill="rgb(228,9,43)" fg:x="18547" fg:w="1086"/><text x="16.1162%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1,086 samples, 0.93%)</title><rect x="15.8662%" y="325" width="0.9290%" height="15" fill="rgb(208,100,47)" fg:x="18547" fg:w="1086"/><text x="16.1162%" y="335.50"></text></g><g><title>event_listener::Inner::lock (1,305 samples, 1.12%)</title><rect x="15.7123%" y="437" width="1.1164%" height="15" fill="rgb(232,26,8)" fg:x="18367" fg:w="1305"/><text x="15.9623%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,301 samples, 1.11%)</title><rect x="15.7157%" y="421" width="1.1130%" height="15" fill="rgb(216,166,38)" fg:x="18371" fg:w="1301"/><text x="15.9657%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,297 samples, 1.11%)</title><rect x="15.7191%" y="405" width="1.1095%" height="15" fill="rgb(251,202,51)" fg:x="18375" fg:w="1297"/><text x="15.9691%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (1,297 samples, 1.11%)</title><rect x="15.7191%" y="389" width="1.1095%" height="15" fill="rgb(254,216,34)" fg:x="18375" fg:w="1297"/><text x="15.9691%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (1,178 samples, 1.01%)</title><rect x="15.8209%" y="373" width="1.0077%" height="15" fill="rgb(251,32,27)" fg:x="18494" fg:w="1178"/><text x="16.0709%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (1,138 samples, 0.97%)</title><rect x="15.8551%" y="357" width="0.9735%" height="15" fill="rgb(208,127,28)" fg:x="18534" fg:w="1138"/><text x="16.1051%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (39 samples, 0.03%)</title><rect x="16.7953%" y="341" width="0.0334%" height="15" fill="rgb(224,137,22)" fg:x="19633" fg:w="39"/><text x="17.0453%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (39 samples, 0.03%)</title><rect x="16.7953%" y="325" width="0.0334%" height="15" fill="rgb(254,70,32)" fg:x="19633" fg:w="39"/><text x="17.0453%" y="335.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,513 samples, 1.29%)</title><rect x="15.5737%" y="453" width="1.2943%" height="15" fill="rgb(229,75,37)" fg:x="18205" fg:w="1513"/><text x="15.8237%" y="463.50"></text></g><g><title>event_listener::List::remove (46 samples, 0.04%)</title><rect x="16.8286%" y="437" width="0.0394%" height="15" fill="rgb(252,64,23)" fg:x="19672" fg:w="46"/><text x="17.0786%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (25 samples, 0.02%)</title><rect x="16.8466%" y="421" width="0.0214%" height="15" fill="rgb(232,162,48)" fg:x="19693" fg:w="25"/><text x="17.0966%" y="431.50"></text></g><g><title>core::mem::replace (25 samples, 0.02%)</title><rect x="16.8466%" y="405" width="0.0214%" height="15" fill="rgb(246,160,12)" fg:x="19693" fg:w="25"/><text x="17.0966%" y="415.50"></text></g><g><title>core::ptr::read (24 samples, 0.02%)</title><rect x="16.8475%" y="389" width="0.0205%" height="15" fill="rgb(247,166,0)" fg:x="19694" fg:w="24"/><text x="17.0975%" y="399.50"></text></g><g><title>[libc-2.31.so] (331 samples, 0.28%)</title><rect x="16.8680%" y="453" width="0.2832%" height="15" fill="rgb(249,219,21)" fg:x="19718" fg:w="331"/><text x="17.1180%" y="463.50"></text></g><g><title>[libc-2.31.so] (718 samples, 0.61%)</title><rect x="17.1837%" y="437" width="0.6142%" height="15" fill="rgb(205,209,3)" fg:x="20087" fg:w="718"/><text x="17.4337%" y="447.50"></text></g><g><title>[libc-2.31.so] (99 samples, 0.08%)</title><rect x="17.9536%" y="405" width="0.0847%" height="15" fill="rgb(243,44,1)" fg:x="20987" fg:w="99"/><text x="18.2036%" y="415.50"></text></g><g><title>concurrent_queue::full_fence (198 samples, 0.17%)</title><rect x="18.0383%" y="405" width="0.1694%" height="15" fill="rgb(206,159,16)" fg:x="21086" fg:w="198"/><text x="18.2883%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (193 samples, 0.17%)</title><rect x="18.0425%" y="389" width="0.1651%" height="15" fill="rgb(244,77,30)" fg:x="21091" fg:w="193"/><text x="18.2925%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (193 samples, 0.17%)</title><rect x="18.0425%" y="373" width="0.1651%" height="15" fill="rgb(218,69,12)" fg:x="21091" fg:w="193"/><text x="18.2925%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (193 samples, 0.17%)</title><rect x="18.0425%" y="357" width="0.1651%" height="15" fill="rgb(212,87,7)" fg:x="21091" fg:w="193"/><text x="18.2925%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (583 samples, 0.50%)</title><rect x="18.2119%" y="405" width="0.4987%" height="15" fill="rgb(245,114,25)" fg:x="21289" fg:w="583"/><text x="18.4619%" y="415.50"></text></g><g><title>core::ptr::read (583 samples, 0.50%)</title><rect x="18.2119%" y="389" width="0.4987%" height="15" fill="rgb(210,61,42)" fg:x="21289" fg:w="583"/><text x="18.4619%" y="399.50"></text></g><g><title>[libc-2.31.so] (583 samples, 0.50%)</title><rect x="18.2119%" y="373" width="0.4987%" height="15" fill="rgb(211,52,33)" fg:x="21289" fg:w="583"/><text x="18.4619%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (333 samples, 0.28%)</title><rect x="18.7106%" y="405" width="0.2849%" height="15" fill="rgb(234,58,33)" fg:x="21872" fg:w="333"/><text x="18.9606%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (333 samples, 0.28%)</title><rect x="18.7106%" y="389" width="0.2849%" height="15" fill="rgb(220,115,36)" fg:x="21872" fg:w="333"/><text x="18.9606%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,884 samples, 1.61%)</title><rect x="17.7979%" y="437" width="1.6117%" height="15" fill="rgb(243,153,54)" fg:x="20805" fg:w="1884"/><text x="18.0479%" y="447.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,865 samples, 1.60%)</title><rect x="17.8141%" y="421" width="1.5954%" height="15" fill="rgb(251,47,18)" fg:x="20824" fg:w="1865"/><text x="18.0641%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (484 samples, 0.41%)</title><rect x="18.9955%" y="405" width="0.4140%" height="15" fill="rgb(242,102,42)" fg:x="22205" fg:w="484"/><text x="19.2455%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (480 samples, 0.41%)</title><rect x="18.9989%" y="389" width="0.4106%" height="15" fill="rgb(234,31,38)" fg:x="22209" fg:w="480"/><text x="19.2489%" y="399.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,817 samples, 2.41%)</title><rect x="17.1511%" y="453" width="2.4098%" height="15" fill="rgb(221,117,51)" fg:x="20049" fg:w="2817"/><text x="17.4011%" y="463.50">as..</text></g><g><title>event_listener::Event::notify (177 samples, 0.15%)</title><rect x="19.4096%" y="437" width="0.1514%" height="15" fill="rgb(212,20,18)" fg:x="22689" fg:w="177"/><text x="19.6596%" y="447.50"></text></g><g><title>event_listener::full_fence (173 samples, 0.15%)</title><rect x="19.4130%" y="421" width="0.1480%" height="15" fill="rgb(245,133,36)" fg:x="22693" fg:w="173"/><text x="19.6630%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (168 samples, 0.14%)</title><rect x="19.4173%" y="405" width="0.1437%" height="15" fill="rgb(212,6,19)" fg:x="22698" fg:w="168"/><text x="19.6673%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (168 samples, 0.14%)</title><rect x="19.4173%" y="389" width="0.1437%" height="15" fill="rgb(218,1,36)" fg:x="22698" fg:w="168"/><text x="19.6673%" y="399.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="19.5721%" y="421" width="0.0214%" height="15" fill="rgb(246,84,54)" fg:x="22879" fg:w="25"/><text x="19.8221%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (75 samples, 0.06%)</title><rect x="19.5695%" y="453" width="0.0642%" height="15" fill="rgb(242,110,6)" fg:x="22876" fg:w="75"/><text x="19.8195%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (72 samples, 0.06%)</title><rect x="19.5721%" y="437" width="0.0616%" height="15" fill="rgb(214,47,5)" fg:x="22879" fg:w="72"/><text x="19.8221%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (47 samples, 0.04%)</title><rect x="19.5935%" y="421" width="0.0402%" height="15" fill="rgb(218,159,25)" fg:x="22904" fg:w="47"/><text x="19.8435%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="19.5935%" y="405" width="0.0402%" height="15" fill="rgb(215,211,28)" fg:x="22904" fg:w="47"/><text x="19.8435%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (47 samples, 0.04%)</title><rect x="19.5935%" y="389" width="0.0402%" height="15" fill="rgb(238,59,32)" fg:x="22904" fg:w="47"/><text x="19.8435%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (47 samples, 0.04%)</title><rect x="19.5935%" y="373" width="0.0402%" height="15" fill="rgb(226,82,3)" fg:x="22904" fg:w="47"/><text x="19.8435%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (57 samples, 0.05%)</title><rect x="19.6363%" y="437" width="0.0488%" height="15" fill="rgb(240,164,32)" fg:x="22954" fg:w="57"/><text x="19.8863%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (57 samples, 0.05%)</title><rect x="19.6363%" y="421" width="0.0488%" height="15" fill="rgb(232,46,7)" fg:x="22954" fg:w="57"/><text x="19.8863%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (57 samples, 0.05%)</title><rect x="19.6363%" y="405" width="0.0488%" height="15" fill="rgb(229,129,53)" fg:x="22954" fg:w="57"/><text x="19.8863%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (97 samples, 0.08%)</title><rect x="19.6850%" y="437" width="0.0830%" height="15" fill="rgb(234,188,29)" fg:x="23011" fg:w="97"/><text x="19.9350%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (94 samples, 0.08%)</title><rect x="19.6876%" y="421" width="0.0804%" height="15" fill="rgb(246,141,4)" fg:x="23014" fg:w="94"/><text x="19.9376%" y="431.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.08%)</title><rect x="19.6876%" y="405" width="0.0804%" height="15" fill="rgb(229,23,39)" fg:x="23014" fg:w="94"/><text x="19.9376%" y="415.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (94 samples, 0.08%)</title><rect x="19.6876%" y="389" width="0.0804%" height="15" fill="rgb(206,12,3)" fg:x="23014" fg:w="94"/><text x="19.9376%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (94 samples, 0.08%)</title><rect x="19.6876%" y="373" width="0.0804%" height="15" fill="rgb(252,226,20)" fg:x="23014" fg:w="94"/><text x="19.9376%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (93 samples, 0.08%)</title><rect x="19.6884%" y="357" width="0.0796%" height="15" fill="rgb(216,123,35)" fg:x="23015" fg:w="93"/><text x="19.9384%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_swap (93 samples, 0.08%)</title><rect x="19.6884%" y="341" width="0.0796%" height="15" fill="rgb(212,68,40)" fg:x="23015" fg:w="93"/><text x="19.9384%" y="351.50"></text></g><g><title>event_listener::Inner::lock (31 samples, 0.03%)</title><rect x="19.7714%" y="437" width="0.0265%" height="15" fill="rgb(254,125,32)" fg:x="23112" fg:w="31"/><text x="20.0214%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.02%)</title><rect x="19.7731%" y="421" width="0.0248%" height="15" fill="rgb(253,97,22)" fg:x="23114" fg:w="29"/><text x="20.0231%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (26 samples, 0.02%)</title><rect x="19.7757%" y="405" width="0.0222%" height="15" fill="rgb(241,101,14)" fg:x="23117" fg:w="26"/><text x="20.0257%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (26 samples, 0.02%)</title><rect x="19.7757%" y="389" width="0.0222%" height="15" fill="rgb(238,103,29)" fg:x="23117" fg:w="26"/><text x="20.0257%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (26 samples, 0.02%)</title><rect x="19.7757%" y="373" width="0.0222%" height="15" fill="rgb(233,195,47)" fg:x="23117" fg:w="26"/><text x="20.0257%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.02%)</title><rect x="19.7757%" y="357" width="0.0222%" height="15" fill="rgb(246,218,30)" fg:x="23117" fg:w="26"/><text x="20.0257%" y="367.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,024 samples, 4.30%)</title><rect x="15.5386%" y="533" width="4.2978%" height="15" fill="rgb(219,145,47)" fg:x="18164" fg:w="5024"/><text x="15.7886%" y="543.50">&lt;asyn..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (5,024 samples, 4.30%)</title><rect x="15.5386%" y="517" width="4.2978%" height="15" fill="rgb(243,12,26)" fg:x="18164" fg:w="5024"/><text x="15.7886%" y="527.50">&lt;trem..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,024 samples, 4.30%)</title><rect x="15.5386%" y="501" width="4.2978%" height="15" fill="rgb(214,87,16)" fg:x="18164" fg:w="5024"/><text x="15.7886%" y="511.50">&lt;asyn..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,024 samples, 4.30%)</title><rect x="15.5386%" y="485" width="4.2978%" height="15" fill="rgb(208,99,42)" fg:x="18164" fg:w="5024"/><text x="15.7886%" y="495.50">&lt;asyn..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5,024 samples, 4.30%)</title><rect x="15.5386%" y="469" width="4.2978%" height="15" fill="rgb(253,99,2)" fg:x="18164" fg:w="5024"/><text x="15.7886%" y="479.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (237 samples, 0.20%)</title><rect x="19.6337%" y="453" width="0.2027%" height="15" fill="rgb(220,168,23)" fg:x="22951" fg:w="237"/><text x="19.8837%" y="463.50"></text></g><g><title>event_listener::full_fence (38 samples, 0.03%)</title><rect x="19.8039%" y="437" width="0.0325%" height="15" fill="rgb(242,38,24)" fg:x="23150" fg:w="38"/><text x="20.0539%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (35 samples, 0.03%)</title><rect x="19.8065%" y="421" width="0.0299%" height="15" fill="rgb(225,182,9)" fg:x="23153" fg:w="35"/><text x="20.0565%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.03%)</title><rect x="19.8065%" y="405" width="0.0299%" height="15" fill="rgb(243,178,37)" fg:x="23153" fg:w="35"/><text x="20.0565%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.01%)</title><rect x="19.8732%" y="437" width="0.0145%" height="15" fill="rgb(232,139,19)" fg:x="23231" fg:w="17"/><text x="20.1232%" y="447.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (104 samples, 0.09%)</title><rect x="19.9579%" y="261" width="0.0890%" height="15" fill="rgb(225,201,24)" fg:x="23330" fg:w="104"/><text x="20.2079%" y="271.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (5,290 samples, 4.53%)</title><rect x="15.5386%" y="549" width="4.5254%" height="15" fill="rgb(221,47,46)" fg:x="18164" fg:w="5290"/><text x="15.7886%" y="559.50">tremo..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (266 samples, 0.23%)</title><rect x="19.8364%" y="533" width="0.2276%" height="15" fill="rgb(249,23,13)" fg:x="23188" fg:w="266"/><text x="20.0864%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (266 samples, 0.23%)</title><rect x="19.8364%" y="517" width="0.2276%" height="15" fill="rgb(219,9,5)" fg:x="23188" fg:w="266"/><text x="20.0864%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (266 samples, 0.23%)</title><rect x="19.8364%" y="501" width="0.2276%" height="15" fill="rgb(254,171,16)" fg:x="23188" fg:w="266"/><text x="20.0864%" y="511.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (266 samples, 0.23%)</title><rect x="19.8364%" y="485" width="0.2276%" height="15" fill="rgb(230,171,20)" fg:x="23188" fg:w="266"/><text x="20.0864%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (266 samples, 0.23%)</title><rect x="19.8364%" y="469" width="0.2276%" height="15" fill="rgb(210,71,41)" fg:x="23188" fg:w="266"/><text x="20.0864%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (266 samples, 0.23%)</title><rect x="19.8364%" y="453" width="0.2276%" height="15" fill="rgb(206,173,20)" fg:x="23188" fg:w="266"/><text x="20.0864%" y="463.50"></text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode (206 samples, 0.18%)</title><rect x="19.8878%" y="437" width="0.1762%" height="15" fill="rgb(233,88,34)" fg:x="23248" fg:w="206"/><text x="20.1378%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (187 samples, 0.16%)</title><rect x="19.9040%" y="421" width="0.1600%" height="15" fill="rgb(223,209,46)" fg:x="23267" fg:w="187"/><text x="20.1540%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (187 samples, 0.16%)</title><rect x="19.9040%" y="405" width="0.1600%" height="15" fill="rgb(250,43,18)" fg:x="23267" fg:w="187"/><text x="20.1540%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (180 samples, 0.15%)</title><rect x="19.9100%" y="389" width="0.1540%" height="15" fill="rgb(208,13,10)" fg:x="23274" fg:w="180"/><text x="20.1600%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (180 samples, 0.15%)</title><rect x="19.9100%" y="373" width="0.1540%" height="15" fill="rgb(212,200,36)" fg:x="23274" fg:w="180"/><text x="20.1600%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (180 samples, 0.15%)</title><rect x="19.9100%" y="357" width="0.1540%" height="15" fill="rgb(225,90,30)" fg:x="23274" fg:w="180"/><text x="20.1600%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (180 samples, 0.15%)</title><rect x="19.9100%" y="341" width="0.1540%" height="15" fill="rgb(236,182,39)" fg:x="23274" fg:w="180"/><text x="20.1600%" y="351.50"></text></g><g><title>alloc::alloc::alloc (180 samples, 0.15%)</title><rect x="19.9100%" y="325" width="0.1540%" height="15" fill="rgb(212,144,35)" fg:x="23274" fg:w="180"/><text x="20.1600%" y="335.50"></text></g><g><title>__rg_alloc (180 samples, 0.15%)</title><rect x="19.9100%" y="309" width="0.1540%" height="15" fill="rgb(228,63,44)" fg:x="23274" fg:w="180"/><text x="20.1600%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (180 samples, 0.15%)</title><rect x="19.9100%" y="293" width="0.1540%" height="15" fill="rgb(228,109,6)" fg:x="23274" fg:w="180"/><text x="20.1600%" y="303.50"></text></g><g><title>sn_rust_alloc (175 samples, 0.15%)</title><rect x="19.9143%" y="277" width="0.1497%" height="15" fill="rgb(238,117,24)" fg:x="23279" fg:w="175"/><text x="20.1643%" y="287.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="20.0469%" y="261" width="0.0171%" height="15" fill="rgb(242,26,26)" fg:x="23434" fg:w="20"/><text x="20.2969%" y="271.50"></text></g><g><title>[libc-2.31.so] (185 samples, 0.16%)</title><rect x="20.2710%" y="517" width="0.1583%" height="15" fill="rgb(221,92,48)" fg:x="23696" fg:w="185"/><text x="20.5210%" y="527.50"></text></g><g><title>[libc-2.31.so] (211 samples, 0.18%)</title><rect x="20.6697%" y="485" width="0.1805%" height="15" fill="rgb(209,209,32)" fg:x="24162" fg:w="211"/><text x="20.9197%" y="495.50"></text></g><g><title>[libc-2.31.so] (63 samples, 0.05%)</title><rect x="21.0041%" y="469" width="0.0539%" height="15" fill="rgb(221,70,22)" fg:x="24553" fg:w="63"/><text x="21.2541%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (79 samples, 0.07%)</title><rect x="21.0700%" y="405" width="0.0676%" height="15" fill="rgb(248,145,5)" fg:x="24630" fg:w="79"/><text x="21.3200%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (24 samples, 0.02%)</title><rect x="21.1171%" y="389" width="0.0205%" height="15" fill="rgb(226,116,26)" fg:x="24685" fg:w="24"/><text x="21.3671%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.02%)</title><rect x="21.1171%" y="373" width="0.0205%" height="15" fill="rgb(244,5,17)" fg:x="24685" fg:w="24"/><text x="21.3671%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.02%)</title><rect x="21.1171%" y="357" width="0.0205%" height="15" fill="rgb(252,159,33)" fg:x="24685" fg:w="24"/><text x="21.3671%" y="367.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.02%)</title><rect x="21.1171%" y="341" width="0.0205%" height="15" fill="rgb(206,71,0)" fg:x="24685" fg:w="24"/><text x="21.3671%" y="351.50"></text></g><g><title>__rg_alloc (24 samples, 0.02%)</title><rect x="21.1171%" y="325" width="0.0205%" height="15" fill="rgb(233,118,54)" fg:x="24685" fg:w="24"/><text x="21.3671%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (24 samples, 0.02%)</title><rect x="21.1171%" y="309" width="0.0205%" height="15" fill="rgb(234,83,48)" fg:x="24685" fg:w="24"/><text x="21.3671%" y="319.50"></text></g><g><title>sn_rust_alloc (23 samples, 0.02%)</title><rect x="21.1179%" y="293" width="0.0197%" height="15" fill="rgb(228,3,54)" fg:x="24686" fg:w="23"/><text x="21.3679%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (98 samples, 0.08%)</title><rect x="21.0597%" y="469" width="0.0838%" height="15" fill="rgb(226,155,13)" fg:x="24618" fg:w="98"/><text x="21.3097%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (96 samples, 0.08%)</title><rect x="21.0615%" y="453" width="0.0821%" height="15" fill="rgb(241,28,37)" fg:x="24620" fg:w="96"/><text x="21.3115%" y="463.50"></text></g><g><title>value_trait::Builder::object (95 samples, 0.08%)</title><rect x="21.0623%" y="437" width="0.0813%" height="15" fill="rgb(233,93,10)" fg:x="24621" fg:w="95"/><text x="21.3123%" y="447.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (86 samples, 0.07%)</title><rect x="21.0700%" y="421" width="0.0736%" height="15" fill="rgb(225,113,19)" fg:x="24630" fg:w="86"/><text x="21.3200%" y="431.50"></text></g><g><title>sn_rust_dealloc (111 samples, 0.09%)</title><rect x="21.1556%" y="325" width="0.0950%" height="15" fill="rgb(241,2,18)" fg:x="24730" fg:w="111"/><text x="21.4056%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (114 samples, 0.10%)</title><rect x="21.1538%" y="453" width="0.0975%" height="15" fill="rgb(228,207,21)" fg:x="24728" fg:w="114"/><text x="21.4038%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (114 samples, 0.10%)</title><rect x="21.1538%" y="437" width="0.0975%" height="15" fill="rgb(213,211,35)" fg:x="24728" fg:w="114"/><text x="21.4038%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (114 samples, 0.10%)</title><rect x="21.1538%" y="421" width="0.0975%" height="15" fill="rgb(209,83,10)" fg:x="24728" fg:w="114"/><text x="21.4038%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.10%)</title><rect x="21.1538%" y="405" width="0.0975%" height="15" fill="rgb(209,164,1)" fg:x="24728" fg:w="114"/><text x="21.4038%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (112 samples, 0.10%)</title><rect x="21.1556%" y="389" width="0.0958%" height="15" fill="rgb(213,184,43)" fg:x="24730" fg:w="112"/><text x="21.4056%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (112 samples, 0.10%)</title><rect x="21.1556%" y="373" width="0.0958%" height="15" fill="rgb(231,61,34)" fg:x="24730" fg:w="112"/><text x="21.4056%" y="383.50"></text></g><g><title>__rg_dealloc (112 samples, 0.10%)</title><rect x="21.1556%" y="357" width="0.0958%" height="15" fill="rgb(235,75,3)" fg:x="24730" fg:w="112"/><text x="21.4056%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (112 samples, 0.10%)</title><rect x="21.1556%" y="341" width="0.0958%" height="15" fill="rgb(220,106,47)" fg:x="24730" fg:w="112"/><text x="21.4056%" y="351.50"></text></g><g><title>sn_rust_dealloc (24 samples, 0.02%)</title><rect x="21.2625%" y="277" width="0.0205%" height="15" fill="rgb(210,196,33)" fg:x="24855" fg:w="24"/><text x="21.5125%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.02%)</title><rect x="21.2591%" y="341" width="0.0248%" height="15" fill="rgb(229,154,42)" fg:x="24851" fg:w="29"/><text x="21.5091%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.02%)</title><rect x="21.2591%" y="325" width="0.0248%" height="15" fill="rgb(228,114,26)" fg:x="24851" fg:w="29"/><text x="21.5091%" y="335.50"></text></g><g><title>__rg_dealloc (29 samples, 0.02%)</title><rect x="21.2591%" y="309" width="0.0248%" height="15" fill="rgb(208,144,1)" fg:x="24851" fg:w="29"/><text x="21.5091%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (29 samples, 0.02%)</title><rect x="21.2591%" y="293" width="0.0248%" height="15" fill="rgb(239,112,37)" fg:x="24851" fg:w="29"/><text x="21.5091%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="21.2514%" y="437" width="0.0359%" height="15" fill="rgb(210,96,50)" fg:x="24842" fg:w="42"/><text x="21.5014%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (40 samples, 0.03%)</title><rect x="21.2531%" y="421" width="0.0342%" height="15" fill="rgb(222,178,2)" fg:x="24844" fg:w="40"/><text x="21.5031%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (35 samples, 0.03%)</title><rect x="21.2574%" y="405" width="0.0299%" height="15" fill="rgb(226,74,18)" fg:x="24849" fg:w="35"/><text x="21.5074%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (35 samples, 0.03%)</title><rect x="21.2574%" y="389" width="0.0299%" height="15" fill="rgb(225,67,54)" fg:x="24849" fg:w="35"/><text x="21.5074%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (35 samples, 0.03%)</title><rect x="21.2574%" y="373" width="0.0299%" height="15" fill="rgb(251,92,32)" fg:x="24849" fg:w="35"/><text x="21.5074%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="21.2574%" y="357" width="0.0299%" height="15" fill="rgb(228,149,22)" fg:x="24849" fg:w="35"/><text x="21.5074%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (162 samples, 0.14%)</title><rect x="21.1538%" y="469" width="0.1386%" height="15" fill="rgb(243,54,13)" fg:x="24728" fg:w="162"/><text x="21.4038%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (48 samples, 0.04%)</title><rect x="21.2514%" y="453" width="0.0411%" height="15" fill="rgb(243,180,28)" fg:x="24842" fg:w="48"/><text x="21.5014%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (43 samples, 0.04%)</title><rect x="21.2924%" y="469" width="0.0368%" height="15" fill="rgb(208,167,24)" fg:x="24890" fg:w="43"/><text x="21.5424%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="21.3121%" y="453" width="0.0171%" height="15" fill="rgb(245,73,45)" fg:x="24913" fg:w="20"/><text x="21.5621%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (14 samples, 0.01%)</title><rect x="21.3172%" y="437" width="0.0120%" height="15" fill="rgb(237,203,48)" fg:x="24919" fg:w="14"/><text x="21.5672%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (14 samples, 0.01%)</title><rect x="21.3172%" y="421" width="0.0120%" height="15" fill="rgb(211,197,16)" fg:x="24919" fg:w="14"/><text x="21.5672%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (12 samples, 0.01%)</title><rect x="21.3190%" y="405" width="0.0103%" height="15" fill="rgb(243,99,51)" fg:x="24921" fg:w="12"/><text x="21.5690%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (12 samples, 0.01%)</title><rect x="21.3190%" y="389" width="0.0103%" height="15" fill="rgb(215,123,29)" fg:x="24921" fg:w="12"/><text x="21.5690%" y="399.50"></text></g><g><title>sn_rust_dealloc (65 samples, 0.06%)</title><rect x="21.3292%" y="469" width="0.0556%" height="15" fill="rgb(239,186,37)" fg:x="24933" fg:w="65"/><text x="21.5792%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (22 samples, 0.02%)</title><rect x="21.3977%" y="453" width="0.0188%" height="15" fill="rgb(252,136,39)" fg:x="25013" fg:w="22"/><text x="21.6477%" y="463.50"></text></g><g><title>core::time::Duration::as_nanos (12 samples, 0.01%)</title><rect x="21.4165%" y="453" width="0.0103%" height="15" fill="rgb(223,213,32)" fg:x="25035" fg:w="12"/><text x="21.6665%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (50 samples, 0.04%)</title><rect x="21.4267%" y="437" width="0.0428%" height="15" fill="rgb(233,115,5)" fg:x="25047" fg:w="50"/><text x="21.6767%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (29 samples, 0.02%)</title><rect x="21.4832%" y="405" width="0.0248%" height="15" fill="rgb(207,226,44)" fg:x="25113" fg:w="29"/><text x="21.7332%" y="415.50"></text></g><g><title>core::cmp::PartialOrd::ge (29 samples, 0.02%)</title><rect x="21.4832%" y="389" width="0.0248%" height="15" fill="rgb(208,126,0)" fg:x="25113" fg:w="29"/><text x="21.7332%" y="399.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (29 samples, 0.02%)</title><rect x="21.4832%" y="373" width="0.0248%" height="15" fill="rgb(244,66,21)" fg:x="25113" fg:w="29"/><text x="21.7332%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (13 samples, 0.01%)</title><rect x="21.4969%" y="357" width="0.0111%" height="15" fill="rgb(222,97,12)" fg:x="25129" fg:w="13"/><text x="21.7469%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (13 samples, 0.01%)</title><rect x="21.4969%" y="341" width="0.0111%" height="15" fill="rgb(219,213,19)" fg:x="25129" fg:w="13"/><text x="21.7469%" y="351.50"></text></g><g><title>std::time::SystemTime::duration_since (113 samples, 0.10%)</title><rect x="21.4267%" y="453" width="0.0967%" height="15" fill="rgb(252,169,30)" fg:x="25047" fg:w="113"/><text x="21.6767%" y="463.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (63 samples, 0.05%)</title><rect x="21.4695%" y="437" width="0.0539%" height="15" fill="rgb(206,32,51)" fg:x="25097" fg:w="63"/><text x="21.7195%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (63 samples, 0.05%)</title><rect x="21.4695%" y="421" width="0.0539%" height="15" fill="rgb(250,172,42)" fg:x="25097" fg:w="63"/><text x="21.7195%" y="431.50"></text></g><g><title>core::time::Duration::new (18 samples, 0.02%)</title><rect x="21.5080%" y="405" width="0.0154%" height="15" fill="rgb(209,34,43)" fg:x="25142" fg:w="18"/><text x="21.7580%" y="415.50"></text></g><g><title>tremor_common::time::nanotime (388 samples, 0.33%)</title><rect x="21.3857%" y="469" width="0.3319%" height="15" fill="rgb(223,11,35)" fg:x="24999" fg:w="388"/><text x="21.6357%" y="479.50"></text></g><g><title>std::time::SystemTime::now (227 samples, 0.19%)</title><rect x="21.5234%" y="453" width="0.1942%" height="15" fill="rgb(251,219,26)" fg:x="25160" fg:w="227"/><text x="21.7734%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (227 samples, 0.19%)</title><rect x="21.5234%" y="437" width="0.1942%" height="15" fill="rgb(231,119,3)" fg:x="25160" fg:w="227"/><text x="21.7734%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (227 samples, 0.19%)</title><rect x="21.5234%" y="421" width="0.1942%" height="15" fill="rgb(216,97,11)" fg:x="25160" fg:w="227"/><text x="21.7734%" y="431.50"></text></g><g><title>__clock_gettime (173 samples, 0.15%)</title><rect x="21.5696%" y="405" width="0.1480%" height="15" fill="rgb(223,59,9)" fg:x="25214" fg:w="173"/><text x="21.8196%" y="415.50"></text></g><g><title>__vdso_clock_gettime (168 samples, 0.14%)</title><rect x="21.5739%" y="389" width="0.1437%" height="15" fill="rgb(233,93,31)" fg:x="25219" fg:w="168"/><text x="21.8239%" y="399.50"></text></g><g><title>[[vdso]] (153 samples, 0.13%)</title><rect x="21.5867%" y="373" width="0.1309%" height="15" fill="rgb(239,81,33)" fg:x="25234" fg:w="153"/><text x="21.8367%" y="383.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,261 samples, 1.08%)</title><rect x="20.6620%" y="501" width="1.0787%" height="15" fill="rgb(213,120,34)" fg:x="24153" fg:w="1261"/><text x="20.9120%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,041 samples, 0.89%)</title><rect x="20.8502%" y="485" width="0.8905%" height="15" fill="rgb(243,49,53)" fg:x="24373" fg:w="1041"/><text x="21.1002%" y="495.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (27 samples, 0.02%)</title><rect x="21.7176%" y="469" width="0.0231%" height="15" fill="rgb(247,216,33)" fg:x="25387" fg:w="27"/><text x="21.9676%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (20 samples, 0.02%)</title><rect x="21.7236%" y="453" width="0.0171%" height="15" fill="rgb(226,26,14)" fg:x="25394" fg:w="20"/><text x="21.9736%" y="463.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.01%)</title><rect x="21.7270%" y="437" width="0.0137%" height="15" fill="rgb(215,49,53)" fg:x="25398" fg:w="16"/><text x="21.9770%" y="447.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (16 samples, 0.01%)</title><rect x="21.7270%" y="421" width="0.0137%" height="15" fill="rgb(245,162,40)" fg:x="25398" fg:w="16"/><text x="21.9770%" y="431.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (16 samples, 0.01%)</title><rect x="21.7270%" y="405" width="0.0137%" height="15" fill="rgb(229,68,17)" fg:x="25398" fg:w="16"/><text x="21.9770%" y="415.50"></text></g><g><title>[libc-2.31.so] (182 samples, 0.16%)</title><rect x="21.7467%" y="501" width="0.1557%" height="15" fill="rgb(213,182,10)" fg:x="25421" fg:w="182"/><text x="21.9967%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,918 samples, 1.64%)</title><rect x="20.2710%" y="533" width="1.6408%" height="15" fill="rgb(245,125,30)" fg:x="23696" fg:w="1918"/><text x="20.5210%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (1,733 samples, 1.48%)</title><rect x="20.4293%" y="517" width="1.4825%" height="15" fill="rgb(232,202,2)" fg:x="23881" fg:w="1733"/><text x="20.6793%" y="527.50"></text></g><g><title>[libc-2.31.so] (300 samples, 0.26%)</title><rect x="22.1145%" y="517" width="0.2566%" height="15" fill="rgb(237,140,51)" fg:x="25851" fg:w="300"/><text x="22.3645%" y="527.50"></text></g><g><title>sn_rust_dealloc (22 samples, 0.02%)</title><rect x="22.3780%" y="405" width="0.0188%" height="15" fill="rgb(236,157,25)" fg:x="26159" fg:w="22"/><text x="22.6280%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (28 samples, 0.02%)</title><rect x="22.3737%" y="517" width="0.0240%" height="15" fill="rgb(219,209,0)" fg:x="26154" fg:w="28"/><text x="22.6237%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (28 samples, 0.02%)</title><rect x="22.3737%" y="501" width="0.0240%" height="15" fill="rgb(240,116,54)" fg:x="26154" fg:w="28"/><text x="22.6237%" y="511.50"></text></g><g><title>alloc::alloc::box_free (28 samples, 0.02%)</title><rect x="22.3737%" y="485" width="0.0240%" height="15" fill="rgb(216,10,36)" fg:x="26154" fg:w="28"/><text x="22.6237%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.02%)</title><rect x="22.3737%" y="469" width="0.0240%" height="15" fill="rgb(222,72,44)" fg:x="26154" fg:w="28"/><text x="22.6237%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.02%)</title><rect x="22.3746%" y="453" width="0.0231%" height="15" fill="rgb(232,159,9)" fg:x="26155" fg:w="27"/><text x="22.6246%" y="463.50"></text></g><g><title>__rg_dealloc (27 samples, 0.02%)</title><rect x="22.3746%" y="437" width="0.0231%" height="15" fill="rgb(210,39,32)" fg:x="26155" fg:w="27"/><text x="22.6246%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (27 samples, 0.02%)</title><rect x="22.3746%" y="421" width="0.0231%" height="15" fill="rgb(216,194,45)" fg:x="26155" fg:w="27"/><text x="22.6246%" y="431.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (578 samples, 0.49%)</title><rect x="21.9118%" y="533" width="0.4945%" height="15" fill="rgb(218,18,35)" fg:x="25614" fg:w="578"/><text x="22.1618%" y="543.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (50 samples, 0.04%)</title><rect x="22.5577%" y="389" width="0.0428%" height="15" fill="rgb(207,83,51)" fg:x="26369" fg:w="50"/><text x="22.8077%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (228 samples, 0.20%)</title><rect x="22.4062%" y="517" width="0.1950%" height="15" fill="rgb(225,63,43)" fg:x="26192" fg:w="228"/><text x="22.6562%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (84 samples, 0.07%)</title><rect x="22.5294%" y="501" width="0.0719%" height="15" fill="rgb(207,57,36)" fg:x="26336" fg:w="84"/><text x="22.7794%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (84 samples, 0.07%)</title><rect x="22.5294%" y="485" width="0.0719%" height="15" fill="rgb(216,99,33)" fg:x="26336" fg:w="84"/><text x="22.7794%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (84 samples, 0.07%)</title><rect x="22.5294%" y="469" width="0.0719%" height="15" fill="rgb(225,42,16)" fg:x="26336" fg:w="84"/><text x="22.7794%" y="479.50"></text></g><g><title>alloc::alloc::alloc (82 samples, 0.07%)</title><rect x="22.5311%" y="453" width="0.0701%" height="15" fill="rgb(220,201,45)" fg:x="26338" fg:w="82"/><text x="22.7811%" y="463.50"></text></g><g><title>__rg_alloc (82 samples, 0.07%)</title><rect x="22.5311%" y="437" width="0.0701%" height="15" fill="rgb(225,33,4)" fg:x="26338" fg:w="82"/><text x="22.7811%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (82 samples, 0.07%)</title><rect x="22.5311%" y="421" width="0.0701%" height="15" fill="rgb(224,33,50)" fg:x="26338" fg:w="82"/><text x="22.7811%" y="431.50"></text></g><g><title>sn_rust_alloc (72 samples, 0.06%)</title><rect x="22.5397%" y="405" width="0.0616%" height="15" fill="rgb(246,198,51)" fg:x="26348" fg:w="72"/><text x="22.7897%" y="415.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (230 samples, 0.20%)</title><rect x="22.4062%" y="533" width="0.1968%" height="15" fill="rgb(205,22,4)" fg:x="26192" fg:w="230"/><text x="22.6562%" y="543.50"></text></g><g><title>[libc-2.31.so] (190 samples, 0.16%)</title><rect x="22.6030%" y="533" width="0.1625%" height="15" fill="rgb(206,3,8)" fg:x="26422" fg:w="190"/><text x="22.8530%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,178 samples, 2.72%)</title><rect x="20.0640%" y="549" width="2.7187%" height="15" fill="rgb(251,23,15)" fg:x="23454" fg:w="3178"/><text x="20.3140%" y="559.50">tr..</text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (14 samples, 0.01%)</title><rect x="23.0709%" y="533" width="0.0120%" height="15" fill="rgb(252,88,28)" fg:x="26969" fg:w="14"/><text x="23.3209%" y="543.50"></text></g><g><title>[libc-2.31.so] (313 samples, 0.27%)</title><rect x="23.1017%" y="517" width="0.2678%" height="15" fill="rgb(212,127,14)" fg:x="27005" fg:w="313"/><text x="23.3517%" y="527.50"></text></g><g><title>[libc-2.31.so] (447 samples, 0.38%)</title><rect x="23.4319%" y="501" width="0.3824%" height="15" fill="rgb(247,145,37)" fg:x="27391" fg:w="447"/><text x="23.6819%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (185 samples, 0.16%)</title><rect x="23.8143%" y="501" width="0.1583%" height="15" fill="rgb(209,117,53)" fg:x="27838" fg:w="185"/><text x="24.0643%" y="511.50"></text></g><g><title>core::ptr::write (176 samples, 0.15%)</title><rect x="23.8220%" y="485" width="0.1506%" height="15" fill="rgb(212,90,42)" fg:x="27847" fg:w="176"/><text x="24.0720%" y="495.50"></text></g><g><title>[libc-2.31.so] (176 samples, 0.15%)</title><rect x="23.8220%" y="469" width="0.1506%" height="15" fill="rgb(218,164,37)" fg:x="27847" fg:w="176"/><text x="24.0720%" y="479.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (441 samples, 0.38%)</title><rect x="23.9837%" y="501" width="0.3773%" height="15" fill="rgb(246,65,34)" fg:x="28036" fg:w="441"/><text x="24.2337%" y="511.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (436 samples, 0.37%)</title><rect x="23.9880%" y="485" width="0.3730%" height="15" fill="rgb(231,100,33)" fg:x="28041" fg:w="436"/><text x="24.2380%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (423 samples, 0.36%)</title><rect x="23.9991%" y="469" width="0.3619%" height="15" fill="rgb(228,126,14)" fg:x="28054" fg:w="423"/><text x="24.2491%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (423 samples, 0.36%)</title><rect x="23.9991%" y="453" width="0.3619%" height="15" fill="rgb(215,173,21)" fg:x="28054" fg:w="423"/><text x="24.2491%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (423 samples, 0.36%)</title><rect x="23.9991%" y="437" width="0.3619%" height="15" fill="rgb(210,6,40)" fg:x="28054" fg:w="423"/><text x="24.2491%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (423 samples, 0.36%)</title><rect x="23.9991%" y="421" width="0.3619%" height="15" fill="rgb(212,48,18)" fg:x="28054" fg:w="423"/><text x="24.2491%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (423 samples, 0.36%)</title><rect x="23.9991%" y="405" width="0.3619%" height="15" fill="rgb(230,214,11)" fg:x="28054" fg:w="423"/><text x="24.2491%" y="415.50"></text></g><g><title>[libc-2.31.so] (416 samples, 0.36%)</title><rect x="24.0051%" y="389" width="0.3559%" height="15" fill="rgb(254,105,39)" fg:x="28061" fg:w="416"/><text x="24.2551%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (12 samples, 0.01%)</title><rect x="24.3704%" y="485" width="0.0103%" height="15" fill="rgb(245,158,5)" fg:x="28488" fg:w="12"/><text x="24.6204%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.01%)</title><rect x="25.1215%" y="469" width="0.0111%" height="15" fill="rgb(249,208,11)" fg:x="29366" fg:w="13"/><text x="25.3715%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="25.1394%" y="469" width="0.0197%" height="15" fill="rgb(210,39,28)" fg:x="29387" fg:w="23"/><text x="25.3894%" y="479.50"></text></g><g><title>&lt;tremor_pipeline::executable_graph::OperatorNode as tremor_pipeline::op::Operator&gt;::on_event (323 samples, 0.28%)</title><rect x="25.1591%" y="469" width="0.2763%" height="15" fill="rgb(211,56,53)" fg:x="29410" fg:w="323"/><text x="25.4091%" y="479.50"></text></g><g><title>[libc-2.31.so] (270 samples, 0.23%)</title><rect x="25.2045%" y="453" width="0.2310%" height="15" fill="rgb(226,201,30)" fg:x="29463" fg:w="270"/><text x="25.4545%" y="463.50"></text></g><g><title>[libc-2.31.so] (107 samples, 0.09%)</title><rect x="25.4354%" y="469" width="0.0915%" height="15" fill="rgb(239,101,34)" fg:x="29733" fg:w="107"/><text x="25.6854%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (782 samples, 0.67%)</title><rect x="25.5287%" y="469" width="0.6690%" height="15" fill="rgb(226,209,5)" fg:x="29842" fg:w="782"/><text x="25.7787%" y="479.50"></text></g><g><title>core::ptr::read (769 samples, 0.66%)</title><rect x="25.5398%" y="453" width="0.6578%" height="15" fill="rgb(250,105,47)" fg:x="29855" fg:w="769"/><text x="25.7898%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (194 samples, 0.17%)</title><rect x="26.1976%" y="469" width="0.1660%" height="15" fill="rgb(230,72,3)" fg:x="30624" fg:w="194"/><text x="26.4476%" y="479.50"></text></g><g><title>core::ptr::write (180 samples, 0.15%)</title><rect x="26.2096%" y="453" width="0.1540%" height="15" fill="rgb(232,218,39)" fg:x="30638" fg:w="180"/><text x="26.4596%" y="463.50"></text></g><g><title>[libc-2.31.so] (179 samples, 0.15%)</title><rect x="26.2105%" y="437" width="0.1531%" height="15" fill="rgb(248,166,6)" fg:x="30639" fg:w="179"/><text x="26.4605%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;tremor_pipeline::event::Event,alloc::alloc::Global&gt;&gt; (13 samples, 0.01%)</title><rect x="26.4047%" y="437" width="0.0111%" height="15" fill="rgb(247,89,20)" fg:x="30866" fg:w="13"/><text x="26.6547%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="26.4047%" y="421" width="0.0111%" height="15" fill="rgb(248,130,54)" fg:x="30866" fg:w="13"/><text x="26.6547%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::event::Event&gt;&gt; (13 samples, 0.01%)</title><rect x="26.4047%" y="405" width="0.0111%" height="15" fill="rgb(234,196,4)" fg:x="30866" fg:w="13"/><text x="26.6547%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="26.4047%" y="389" width="0.0111%" height="15" fill="rgb(250,143,31)" fg:x="30866" fg:w="13"/><text x="26.6547%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="26.4047%" y="373" width="0.0111%" height="15" fill="rgb(211,110,34)" fg:x="30866" fg:w="13"/><text x="26.6547%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;tremor_pipeline::event::Event&gt;&gt; (71 samples, 0.06%)</title><rect x="26.3636%" y="469" width="0.0607%" height="15" fill="rgb(215,124,48)" fg:x="30818" fg:w="71"/><text x="26.6136%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="26.3841%" y="453" width="0.0402%" height="15" fill="rgb(216,46,13)" fg:x="30842" fg:w="47"/><text x="26.6341%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (14 samples, 0.01%)</title><rect x="26.4338%" y="469" width="0.0120%" height="15" fill="rgb(205,184,25)" fg:x="30900" fg:w="14"/><text x="26.6838%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (14 samples, 0.01%)</title><rect x="26.4338%" y="453" width="0.0120%" height="15" fill="rgb(228,1,10)" fg:x="30900" fg:w="14"/><text x="26.6838%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (14 samples, 0.01%)</title><rect x="26.4338%" y="437" width="0.0120%" height="15" fill="rgb(213,116,27)" fg:x="30900" fg:w="14"/><text x="26.6838%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (14 samples, 0.01%)</title><rect x="26.4338%" y="421" width="0.0120%" height="15" fill="rgb(241,95,50)" fg:x="30900" fg:w="14"/><text x="26.6838%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.01%)</title><rect x="26.8991%" y="453" width="0.0103%" height="15" fill="rgb(238,48,32)" fg:x="31444" fg:w="12"/><text x="27.1491%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (105 samples, 0.09%)</title><rect x="26.9094%" y="453" width="0.0898%" height="15" fill="rgb(235,113,49)" fg:x="31456" fg:w="105"/><text x="27.1594%" y="463.50"></text></g><g><title>core::ptr::read (70 samples, 0.06%)</title><rect x="26.9393%" y="437" width="0.0599%" height="15" fill="rgb(205,127,43)" fg:x="31491" fg:w="70"/><text x="27.1893%" y="447.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="26.9992%" y="453" width="0.0137%" height="15" fill="rgb(250,162,2)" fg:x="31561" fg:w="16"/><text x="27.2492%" y="463.50"></text></g><g><title>[libc-2.31.so] (181 samples, 0.15%)</title><rect x="27.0138%" y="453" width="0.1548%" height="15" fill="rgb(220,13,41)" fg:x="31578" fg:w="181"/><text x="27.2638%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (429 samples, 0.37%)</title><rect x="27.1686%" y="453" width="0.3670%" height="15" fill="rgb(249,221,25)" fg:x="31759" fg:w="429"/><text x="27.4186%" y="463.50"></text></g><g><title>core::ptr::write (400 samples, 0.34%)</title><rect x="27.1934%" y="437" width="0.3422%" height="15" fill="rgb(215,208,19)" fg:x="31788" fg:w="400"/><text x="27.4434%" y="447.50"></text></g><g><title>[libc-2.31.so] (395 samples, 0.34%)</title><rect x="27.1977%" y="421" width="0.3379%" height="15" fill="rgb(236,175,2)" fg:x="31793" fg:w="395"/><text x="27.4477%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (13 samples, 0.01%)</title><rect x="27.5356%" y="453" width="0.0111%" height="15" fill="rgb(241,52,2)" fg:x="32188" fg:w="13"/><text x="27.7856%" y="463.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue_events::{{closure}} (13 samples, 0.01%)</title><rect x="27.5356%" y="437" width="0.0111%" height="15" fill="rgb(248,140,14)" fg:x="32188" fg:w="13"/><text x="27.7856%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last (12 samples, 0.01%)</title><rect x="27.5364%" y="421" width="0.0103%" height="15" fill="rgb(253,22,42)" fg:x="32189" fg:w="12"/><text x="27.7864%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;)&gt; (13 samples, 0.01%)</title><rect x="27.5467%" y="453" width="0.0111%" height="15" fill="rgb(234,61,47)" fg:x="32201" fg:w="13"/><text x="27.7967%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (13 samples, 0.01%)</title><rect x="27.5467%" y="437" width="0.0111%" height="15" fill="rgb(208,226,15)" fg:x="32201" fg:w="13"/><text x="27.7967%" y="447.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="27.5467%" y="421" width="0.0111%" height="15" fill="rgb(217,221,4)" fg:x="32201" fg:w="13"/><text x="27.7967%" y="431.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (13 samples, 0.01%)</title><rect x="27.5724%" y="421" width="0.0111%" height="15" fill="rgb(212,174,34)" fg:x="32231" fg:w="13"/><text x="27.8224%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (29 samples, 0.02%)</title><rect x="27.5835%" y="421" width="0.0248%" height="15" fill="rgb(253,83,4)" fg:x="32244" fg:w="29"/><text x="27.8335%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.02%)</title><rect x="27.5835%" y="405" width="0.0248%" height="15" fill="rgb(250,195,49)" fg:x="32244" fg:w="29"/><text x="27.8335%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (20 samples, 0.02%)</title><rect x="27.5912%" y="389" width="0.0171%" height="15" fill="rgb(241,192,25)" fg:x="32253" fg:w="20"/><text x="27.8412%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="27.5912%" y="373" width="0.0171%" height="15" fill="rgb(208,124,10)" fg:x="32253" fg:w="20"/><text x="27.8412%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="27.5912%" y="357" width="0.0171%" height="15" fill="rgb(222,33,0)" fg:x="32253" fg:w="20"/><text x="27.8412%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="27.5912%" y="341" width="0.0171%" height="15" fill="rgb(234,209,28)" fg:x="32253" fg:w="20"/><text x="27.8412%" y="351.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="27.5912%" y="325" width="0.0171%" height="15" fill="rgb(224,11,23)" fg:x="32253" fg:w="20"/><text x="27.8412%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="27.5912%" y="309" width="0.0171%" height="15" fill="rgb(232,99,1)" fg:x="32253" fg:w="20"/><text x="27.8412%" y="319.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.05%)</title><rect x="27.5724%" y="437" width="0.0539%" height="15" fill="rgb(237,95,45)" fg:x="32231" fg:w="63"/><text x="27.8224%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)]&gt; (21 samples, 0.02%)</title><rect x="27.6083%" y="421" width="0.0180%" height="15" fill="rgb(208,109,11)" fg:x="32273" fg:w="21"/><text x="27.8583%" y="431.50"></text></g><g><title>sn_rust_dealloc (57 samples, 0.05%)</title><rect x="27.6263%" y="437" width="0.0488%" height="15" fill="rgb(216,190,48)" fg:x="32294" fg:w="57"/><text x="27.8763%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (147 samples, 0.13%)</title><rect x="27.5578%" y="453" width="0.1258%" height="15" fill="rgb(251,171,36)" fg:x="32214" fg:w="147"/><text x="27.8078%" y="463.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (14 samples, 0.01%)</title><rect x="27.6844%" y="453" width="0.0120%" height="15" fill="rgb(230,62,22)" fg:x="32362" fg:w="14"/><text x="27.9344%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (14 samples, 0.01%)</title><rect x="27.6844%" y="437" width="0.0120%" height="15" fill="rgb(225,114,35)" fg:x="32362" fg:w="14"/><text x="27.9344%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="27.6844%" y="421" width="0.0120%" height="15" fill="rgb(215,118,42)" fg:x="32362" fg:w="14"/><text x="27.9344%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (70 samples, 0.06%)</title><rect x="27.7110%" y="421" width="0.0599%" height="15" fill="rgb(243,119,21)" fg:x="32393" fg:w="70"/><text x="27.9610%" y="431.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (39 samples, 0.03%)</title><rect x="27.7375%" y="405" width="0.0334%" height="15" fill="rgb(252,177,53)" fg:x="32424" fg:w="39"/><text x="27.9875%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (39 samples, 0.03%)</title><rect x="27.7375%" y="389" width="0.0334%" height="15" fill="rgb(237,209,29)" fg:x="32424" fg:w="39"/><text x="27.9875%" y="399.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (104 samples, 0.09%)</title><rect x="27.7914%" y="389" width="0.0890%" height="15" fill="rgb(212,65,23)" fg:x="32487" fg:w="104"/><text x="28.0414%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (104 samples, 0.09%)</title><rect x="27.7914%" y="373" width="0.0890%" height="15" fill="rgb(230,222,46)" fg:x="32487" fg:w="104"/><text x="28.0414%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (104 samples, 0.09%)</title><rect x="27.7914%" y="357" width="0.0890%" height="15" fill="rgb(215,135,32)" fg:x="32487" fg:w="104"/><text x="28.0414%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (104 samples, 0.09%)</title><rect x="27.7914%" y="341" width="0.0890%" height="15" fill="rgb(246,101,22)" fg:x="32487" fg:w="104"/><text x="28.0414%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (104 samples, 0.09%)</title><rect x="27.7914%" y="325" width="0.0890%" height="15" fill="rgb(206,107,13)" fg:x="32487" fg:w="104"/><text x="28.0414%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (104 samples, 0.09%)</title><rect x="27.7914%" y="309" width="0.0890%" height="15" fill="rgb(250,100,44)" fg:x="32487" fg:w="104"/><text x="28.0414%" y="319.50"></text></g><g><title>[libc-2.31.so] (69 samples, 0.06%)</title><rect x="27.8213%" y="293" width="0.0590%" height="15" fill="rgb(231,147,38)" fg:x="32522" fg:w="69"/><text x="28.0713%" y="303.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (218 samples, 0.19%)</title><rect x="27.6964%" y="453" width="0.1865%" height="15" fill="rgb(229,8,40)" fg:x="32376" fg:w="218"/><text x="27.9464%" y="463.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (201 samples, 0.17%)</title><rect x="27.7110%" y="437" width="0.1719%" height="15" fill="rgb(221,135,30)" fg:x="32393" fg:w="201"/><text x="27.9610%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (131 samples, 0.11%)</title><rect x="27.7708%" y="421" width="0.1121%" height="15" fill="rgb(249,193,18)" fg:x="32463" fg:w="131"/><text x="28.0208%" y="431.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (K,L)&gt;::eq (131 samples, 0.11%)</title><rect x="27.7708%" y="405" width="0.1121%" height="15" fill="rgb(209,133,39)" fg:x="32463" fg:w="131"/><text x="28.0208%" y="415.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry_mut (65 samples, 0.06%)</title><rect x="27.9017%" y="421" width="0.0556%" height="15" fill="rgb(232,100,14)" fg:x="32616" fg:w="65"/><text x="28.1517%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (26 samples, 0.02%)</title><rect x="27.9761%" y="405" width="0.0222%" height="15" fill="rgb(224,185,1)" fg:x="32703" fg:w="26"/><text x="28.2261%" y="415.50"></text></g><g><title>&lt;halfbrown::raw_entry::RawEntryMut&lt;K,V,S&gt; as core::convert::From&lt;halfbrown::vecmap::raw_entry::RawEntryMut&lt;K,V,S&gt;&gt;&gt;::from (26 samples, 0.02%)</title><rect x="27.9761%" y="389" width="0.0222%" height="15" fill="rgb(223,139,8)" fg:x="32703" fg:w="26"/><text x="28.2261%" y="399.50"></text></g><g><title>halfbrown::raw_entry::RawEntryMut::Occupied (17 samples, 0.01%)</title><rect x="27.9838%" y="373" width="0.0145%" height="15" fill="rgb(232,213,38)" fg:x="32712" fg:w="17"/><text x="28.2338%" y="383.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (20 samples, 0.02%)</title><rect x="28.0138%" y="309" width="0.0171%" height="15" fill="rgb(207,94,22)" fg:x="32747" fg:w="20"/><text x="28.2638%" y="319.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (263 samples, 0.22%)</title><rect x="27.9573%" y="421" width="0.2250%" height="15" fill="rgb(219,183,54)" fg:x="32681" fg:w="263"/><text x="28.2073%" y="431.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (215 samples, 0.18%)</title><rect x="27.9984%" y="405" width="0.1839%" height="15" fill="rgb(216,185,54)" fg:x="32729" fg:w="215"/><text x="28.2484%" y="415.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (215 samples, 0.18%)</title><rect x="27.9984%" y="389" width="0.1839%" height="15" fill="rgb(254,217,39)" fg:x="32729" fg:w="215"/><text x="28.2484%" y="399.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (215 samples, 0.18%)</title><rect x="27.9984%" y="373" width="0.1839%" height="15" fill="rgb(240,178,23)" fg:x="32729" fg:w="215"/><text x="28.2484%" y="383.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::search (215 samples, 0.18%)</title><rect x="27.9984%" y="357" width="0.1839%" height="15" fill="rgb(218,11,47)" fg:x="32729" fg:w="215"/><text x="28.2484%" y="367.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (197 samples, 0.17%)</title><rect x="28.0138%" y="341" width="0.1685%" height="15" fill="rgb(218,51,51)" fg:x="32747" fg:w="197"/><text x="28.2638%" y="351.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (197 samples, 0.17%)</title><rect x="28.0138%" y="325" width="0.1685%" height="15" fill="rgb(238,126,27)" fg:x="32747" fg:w="197"/><text x="28.2638%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (177 samples, 0.15%)</title><rect x="28.0309%" y="309" width="0.1514%" height="15" fill="rgb(249,202,22)" fg:x="32767" fg:w="177"/><text x="28.2809%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (177 samples, 0.15%)</title><rect x="28.0309%" y="293" width="0.1514%" height="15" fill="rgb(254,195,49)" fg:x="32767" fg:w="177"/><text x="28.2809%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (177 samples, 0.15%)</title><rect x="28.0309%" y="277" width="0.1514%" height="15" fill="rgb(208,123,14)" fg:x="32767" fg:w="177"/><text x="28.2809%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (177 samples, 0.15%)</title><rect x="28.0309%" y="261" width="0.1514%" height="15" fill="rgb(224,200,8)" fg:x="32767" fg:w="177"/><text x="28.2809%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (177 samples, 0.15%)</title><rect x="28.0309%" y="245" width="0.1514%" height="15" fill="rgb(217,61,36)" fg:x="32767" fg:w="177"/><text x="28.2809%" y="255.50"></text></g><g><title>[libc-2.31.so] (67 samples, 0.06%)</title><rect x="28.1250%" y="229" width="0.0573%" height="15" fill="rgb(206,35,45)" fg:x="32877" fg:w="67"/><text x="28.3750%" y="239.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue_events (2,092 samples, 1.79%)</title><rect x="26.4457%" y="469" width="1.7896%" height="15" fill="rgb(217,65,33)" fg:x="30914" fg:w="2092"/><text x="26.6957%" y="479.50">t..</text></g><g><title>tremor_pipeline::executable_graph::NodeMetrics::inc_input (412 samples, 0.35%)</title><rect x="27.8829%" y="453" width="0.3525%" height="15" fill="rgb(222,158,48)" fg:x="32594" fg:w="412"/><text x="28.1329%" y="463.50"></text></g><g><title>tremor_pipeline::executable_graph::NodeMetrics::inc_input_n (409 samples, 0.35%)</title><rect x="27.8855%" y="437" width="0.3499%" height="15" fill="rgb(254,2,54)" fg:x="32597" fg:w="409"/><text x="28.1355%" y="447.50"></text></g><g><title>halfbrown::raw_entry::RawEntryMut&lt;K,V,S&gt;::or_insert_with (62 samples, 0.05%)</title><rect x="28.1823%" y="421" width="0.0530%" height="15" fill="rgb(250,143,38)" fg:x="32944" fg:w="62"/><text x="28.4323%" y="431.50"></text></g><g><title>halfbrown::raw_entry::RawOccupiedEntryMut&lt;K,V,S&gt;::into_key_value (30 samples, 0.03%)</title><rect x="28.2097%" y="405" width="0.0257%" height="15" fill="rgb(248,25,0)" fg:x="32976" fg:w="30"/><text x="28.4597%" y="415.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawOccupiedEntryMut&lt;K,V,S&gt;::into_key_value (17 samples, 0.01%)</title><rect x="28.2208%" y="389" width="0.0145%" height="15" fill="rgb(206,152,27)" fg:x="32989" fg:w="17"/><text x="28.4708%" y="399.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut_idx (17 samples, 0.01%)</title><rect x="28.2208%" y="373" width="0.0145%" height="15" fill="rgb(240,77,30)" fg:x="32989" fg:w="17"/><text x="28.4708%" y="383.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry_mut (40 samples, 0.03%)</title><rect x="28.2619%" y="437" width="0.0342%" height="15" fill="rgb(231,5,3)" fg:x="33037" fg:w="40"/><text x="28.5119%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (17 samples, 0.01%)</title><rect x="28.3286%" y="421" width="0.0145%" height="15" fill="rgb(207,226,32)" fg:x="33115" fg:w="17"/><text x="28.5786%" y="431.50"></text></g><g><title>&lt;halfbrown::raw_entry::RawEntryMut&lt;K,V,S&gt; as core::convert::From&lt;halfbrown::vecmap::raw_entry::RawEntryMut&lt;K,V,S&gt;&gt;&gt;::from (17 samples, 0.01%)</title><rect x="28.3286%" y="405" width="0.0145%" height="15" fill="rgb(222,207,47)" fg:x="33115" fg:w="17"/><text x="28.5786%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="28.3449%" y="357" width="0.0111%" height="15" fill="rgb(229,115,45)" fg:x="33134" fg:w="13"/><text x="28.5949%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13 samples, 0.01%)</title><rect x="28.3449%" y="341" width="0.0111%" height="15" fill="rgb(224,191,6)" fg:x="33134" fg:w="13"/><text x="28.5949%" y="351.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (171 samples, 0.15%)</title><rect x="28.2961%" y="437" width="0.1463%" height="15" fill="rgb(230,227,24)" fg:x="33077" fg:w="171"/><text x="28.5461%" y="447.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (116 samples, 0.10%)</title><rect x="28.3431%" y="421" width="0.0992%" height="15" fill="rgb(228,80,19)" fg:x="33132" fg:w="116"/><text x="28.5931%" y="431.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (116 samples, 0.10%)</title><rect x="28.3431%" y="405" width="0.0992%" height="15" fill="rgb(247,229,0)" fg:x="33132" fg:w="116"/><text x="28.5931%" y="415.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (116 samples, 0.10%)</title><rect x="28.3431%" y="389" width="0.0992%" height="15" fill="rgb(237,194,15)" fg:x="33132" fg:w="116"/><text x="28.5931%" y="399.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::search (116 samples, 0.10%)</title><rect x="28.3431%" y="373" width="0.0992%" height="15" fill="rgb(219,203,20)" fg:x="33132" fg:w="116"/><text x="28.5931%" y="383.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (90 samples, 0.08%)</title><rect x="28.3654%" y="357" width="0.0770%" height="15" fill="rgb(234,128,8)" fg:x="33158" fg:w="90"/><text x="28.6154%" y="367.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (90 samples, 0.08%)</title><rect x="28.3654%" y="341" width="0.0770%" height="15" fill="rgb(248,202,8)" fg:x="33158" fg:w="90"/><text x="28.6154%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (83 samples, 0.07%)</title><rect x="28.3714%" y="325" width="0.0710%" height="15" fill="rgb(206,104,37)" fg:x="33165" fg:w="83"/><text x="28.6214%" y="335.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (83 samples, 0.07%)</title><rect x="28.3714%" y="309" width="0.0710%" height="15" fill="rgb(223,8,27)" fg:x="33165" fg:w="83"/><text x="28.6214%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (83 samples, 0.07%)</title><rect x="28.3714%" y="293" width="0.0710%" height="15" fill="rgb(216,217,28)" fg:x="33165" fg:w="83"/><text x="28.6214%" y="303.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (83 samples, 0.07%)</title><rect x="28.3714%" y="277" width="0.0710%" height="15" fill="rgb(249,199,1)" fg:x="33165" fg:w="83"/><text x="28.6214%" y="287.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (83 samples, 0.07%)</title><rect x="28.3714%" y="261" width="0.0710%" height="15" fill="rgb(240,85,17)" fg:x="33165" fg:w="83"/><text x="28.6214%" y="271.50"></text></g><g><title>[libc-2.31.so] (59 samples, 0.05%)</title><rect x="28.3919%" y="245" width="0.0505%" height="15" fill="rgb(206,108,45)" fg:x="33189" fg:w="59"/><text x="28.6419%" y="255.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (5,968 samples, 5.11%)</title><rect x="23.3695%" y="517" width="5.1054%" height="15" fill="rgb(245,210,41)" fg:x="27318" fg:w="5968"/><text x="23.6195%" y="527.50">tremor..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (4,809 samples, 4.11%)</title><rect x="24.3610%" y="501" width="4.1139%" height="15" fill="rgb(206,13,37)" fg:x="28477" fg:w="4809"/><text x="24.6110%" y="511.50">trem..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (4,786 samples, 4.09%)</title><rect x="24.3806%" y="485" width="4.0942%" height="15" fill="rgb(250,61,18)" fg:x="28500" fg:w="4786"/><text x="24.6306%" y="495.50">trem..</text></g><g><title>tremor_pipeline::executable_graph::NodeMetrics::inc_output (279 samples, 0.24%)</title><rect x="28.2362%" y="469" width="0.2387%" height="15" fill="rgb(235,172,48)" fg:x="33007" fg:w="279"/><text x="28.4862%" y="479.50"></text></g><g><title>tremor_pipeline::executable_graph::NodeMetrics::inc_output_n (266 samples, 0.23%)</title><rect x="28.2473%" y="453" width="0.2276%" height="15" fill="rgb(249,201,17)" fg:x="33020" fg:w="266"/><text x="28.4973%" y="463.50"></text></g><g><title>halfbrown::raw_entry::RawEntryMut&lt;K,V,S&gt;::or_insert_with (38 samples, 0.03%)</title><rect x="28.4424%" y="437" width="0.0325%" height="15" fill="rgb(219,208,6)" fg:x="33248" fg:w="38"/><text x="28.6924%" y="447.50"></text></g><g><title>halfbrown::raw_entry::RawOccupiedEntryMut&lt;K,V,S&gt;::into_key_value (25 samples, 0.02%)</title><rect x="28.4535%" y="421" width="0.0214%" height="15" fill="rgb(248,31,23)" fg:x="33261" fg:w="25"/><text x="28.7035%" y="431.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawOccupiedEntryMut&lt;K,V,S&gt;::into_key_value (14 samples, 0.01%)</title><rect x="28.4629%" y="405" width="0.0120%" height="15" fill="rgb(245,15,42)" fg:x="33272" fg:w="14"/><text x="28.7129%" y="415.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut_idx (14 samples, 0.01%)</title><rect x="28.4629%" y="389" width="0.0120%" height="15" fill="rgb(222,217,39)" fg:x="33272" fg:w="14"/><text x="28.7129%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,333 samples, 5.42%)</title><rect x="23.0863%" y="533" width="5.4176%" height="15" fill="rgb(210,219,27)" fg:x="26987" fg:w="6333"/><text x="23.3363%" y="543.50">&lt;core::..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (34 samples, 0.03%)</title><rect x="28.4749%" y="517" width="0.0291%" height="15" fill="rgb(252,166,36)" fg:x="33286" fg:w="34"/><text x="28.7249%" y="527.50"></text></g><g><title>[libc-2.31.so] (779 samples, 0.67%)</title><rect x="28.5040%" y="533" width="0.6664%" height="15" fill="rgb(245,132,34)" fg:x="33320" fg:w="779"/><text x="28.7540%" y="543.50"></text></g><g><title>sn_rust_dealloc (94 samples, 0.08%)</title><rect x="29.1747%" y="373" width="0.0804%" height="15" fill="rgb(236,54,3)" fg:x="34104" fg:w="94"/><text x="29.4247%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (100 samples, 0.09%)</title><rect x="29.1704%" y="533" width="0.0855%" height="15" fill="rgb(241,173,43)" fg:x="34099" fg:w="100"/><text x="29.4204%" y="543.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (100 samples, 0.09%)</title><rect x="29.1704%" y="517" width="0.0855%" height="15" fill="rgb(215,190,9)" fg:x="34099" fg:w="100"/><text x="29.4204%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (95 samples, 0.08%)</title><rect x="29.1747%" y="501" width="0.0813%" height="15" fill="rgb(242,101,16)" fg:x="34104" fg:w="95"/><text x="29.4247%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (95 samples, 0.08%)</title><rect x="29.1747%" y="485" width="0.0813%" height="15" fill="rgb(223,190,21)" fg:x="34104" fg:w="95"/><text x="29.4247%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (95 samples, 0.08%)</title><rect x="29.1747%" y="469" width="0.0813%" height="15" fill="rgb(215,228,25)" fg:x="34104" fg:w="95"/><text x="29.4247%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (95 samples, 0.08%)</title><rect x="29.1747%" y="453" width="0.0813%" height="15" fill="rgb(225,36,22)" fg:x="34104" fg:w="95"/><text x="29.4247%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (95 samples, 0.08%)</title><rect x="29.1747%" y="437" width="0.0813%" height="15" fill="rgb(251,106,46)" fg:x="34104" fg:w="95"/><text x="29.4247%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (95 samples, 0.08%)</title><rect x="29.1747%" y="421" width="0.0813%" height="15" fill="rgb(208,90,1)" fg:x="34104" fg:w="95"/><text x="29.4247%" y="431.50"></text></g><g><title>__rg_dealloc (95 samples, 0.08%)</title><rect x="29.1747%" y="405" width="0.0813%" height="15" fill="rgb(243,10,4)" fg:x="34104" fg:w="95"/><text x="29.4247%" y="415.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (95 samples, 0.08%)</title><rect x="29.1747%" y="389" width="0.0813%" height="15" fill="rgb(212,137,27)" fg:x="34104" fg:w="95"/><text x="29.4247%" y="399.50"></text></g><g><title>async_global_executor::reactor::block_on (16,048 samples, 13.73%)</title><rect x="15.5386%" y="885" width="13.7284%" height="15" fill="rgb(231,220,49)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="895.50">async_global_executor..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (16,048 samples, 13.73%)</title><rect x="15.5386%" y="869" width="13.7284%" height="15" fill="rgb(237,96,20)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="879.50">async_global_executor..</text></g><g><title>async_io::driver::block_on (16,048 samples, 13.73%)</title><rect x="15.5386%" y="853" width="13.7284%" height="15" fill="rgb(239,229,30)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="863.50">async_io::driver::blo..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16,048 samples, 13.73%)</title><rect x="15.5386%" y="837" width="13.7284%" height="15" fill="rgb(219,65,33)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="847.50">&lt;futures_lite::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,048 samples, 13.73%)</title><rect x="15.5386%" y="821" width="13.7284%" height="15" fill="rgb(243,134,7)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="831.50">&lt;core::future::from_g..</text></g><g><title>async_executor::Executor::run::{{closure}} (16,048 samples, 13.73%)</title><rect x="15.5386%" y="805" width="13.7284%" height="15" fill="rgb(216,177,54)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="815.50">async_executor::Execu..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16,048 samples, 13.73%)</title><rect x="15.5386%" y="789" width="13.7284%" height="15" fill="rgb(211,160,20)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="799.50">&lt;futures_lite::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,048 samples, 13.73%)</title><rect x="15.5386%" y="773" width="13.7284%" height="15" fill="rgb(239,85,39)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="783.50">&lt;core::future::from_g..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (16,048 samples, 13.73%)</title><rect x="15.5386%" y="757" width="13.7284%" height="15" fill="rgb(232,125,22)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="767.50">async_executor::Execu..</text></g><g><title>async_task::runnable::Runnable::run (16,048 samples, 13.73%)</title><rect x="15.5386%" y="741" width="13.7284%" height="15" fill="rgb(244,57,34)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="751.50">async_task::runnable:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (16,048 samples, 13.73%)</title><rect x="15.5386%" y="725" width="13.7284%" height="15" fill="rgb(214,203,32)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="735.50">async_task::raw::RawT..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16,048 samples, 13.73%)</title><rect x="15.5386%" y="709" width="13.7284%" height="15" fill="rgb(207,58,43)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="719.50">&lt;core::pin::Pin&lt;P&gt; as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,048 samples, 13.73%)</title><rect x="15.5386%" y="693" width="13.7284%" height="15" fill="rgb(215,193,15)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="703.50">&lt;core::future::from_g..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (16,048 samples, 13.73%)</title><rect x="15.5386%" y="677" width="13.7284%" height="15" fill="rgb(232,15,44)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="687.50">async_executor::Execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (16,048 samples, 13.73%)</title><rect x="15.5386%" y="661" width="13.7284%" height="15" fill="rgb(212,3,48)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="671.50">&lt;async_std::task::bui..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (16,048 samples, 13.73%)</title><rect x="15.5386%" y="645" width="13.7284%" height="15" fill="rgb(218,128,7)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="655.50">async_std::task::task..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16,048 samples, 13.73%)</title><rect x="15.5386%" y="629" width="13.7284%" height="15" fill="rgb(226,216,39)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="639.50">std::thread::local::L..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16,048 samples, 13.73%)</title><rect x="15.5386%" y="613" width="13.7284%" height="15" fill="rgb(243,47,51)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="623.50">std::thread::local::L..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (16,048 samples, 13.73%)</title><rect x="15.5386%" y="597" width="13.7284%" height="15" fill="rgb(241,183,40)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="607.50">async_std::task::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (16,048 samples, 13.73%)</title><rect x="15.5386%" y="581" width="13.7284%" height="15" fill="rgb(231,217,32)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="591.50">&lt;async_std::task::bui..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,048 samples, 13.73%)</title><rect x="15.5386%" y="565" width="13.7284%" height="15" fill="rgb(229,61,38)" fg:x="18164" fg:w="16048"/><text x="15.7886%" y="575.50">&lt;core::future::from_g..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (7,580 samples, 6.48%)</title><rect x="22.7826%" y="549" width="6.4844%" height="15" fill="rgb(225,210,5)" fg:x="26632" fg:w="7580"/><text x="23.0326%" y="559.50">tremor_r..</text></g><g><title>[libc-2.31.so] (321 samples, 0.27%)</title><rect x="29.3517%" y="341" width="0.2746%" height="15" fill="rgb(231,79,45)" fg:x="34311" fg:w="321"/><text x="29.6017%" y="351.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (356 samples, 0.30%)</title><rect x="29.3269%" y="357" width="0.3045%" height="15" fill="rgb(224,100,7)" fg:x="34282" fg:w="356"/><text x="29.5769%" y="367.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (594 samples, 0.51%)</title><rect x="29.2807%" y="373" width="0.5081%" height="15" fill="rgb(241,198,18)" fg:x="34228" fg:w="594"/><text x="29.5307%" y="383.50"></text></g><g><title>[libc-2.31.so] (184 samples, 0.16%)</title><rect x="29.6315%" y="357" width="0.1574%" height="15" fill="rgb(252,97,53)" fg:x="34638" fg:w="184"/><text x="29.8815%" y="367.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (614 samples, 0.53%)</title><rect x="29.2688%" y="405" width="0.5253%" height="15" fill="rgb(220,88,7)" fg:x="34214" fg:w="614"/><text x="29.5188%" y="415.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (614 samples, 0.53%)</title><rect x="29.2688%" y="389" width="0.5253%" height="15" fill="rgb(213,176,14)" fg:x="34214" fg:w="614"/><text x="29.5188%" y="399.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="32.5135%" y="357" width="0.0128%" height="15" fill="rgb(246,73,7)" fg:x="38007" fg:w="15"/><text x="32.7635%" y="367.50"></text></g><g><title>[libc-2.31.so] (221 samples, 0.19%)</title><rect x="32.5263%" y="357" width="0.1891%" height="15" fill="rgb(245,64,36)" fg:x="38022" fg:w="221"/><text x="32.7763%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (25 samples, 0.02%)</title><rect x="32.7180%" y="357" width="0.0214%" height="15" fill="rgb(245,80,10)" fg:x="38246" fg:w="25"/><text x="32.9680%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 0.02%)</title><rect x="32.7180%" y="341" width="0.0214%" height="15" fill="rgb(232,107,50)" fg:x="38246" fg:w="25"/><text x="32.9680%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="32.7394%" y="293" width="0.0103%" height="15" fill="rgb(253,3,0)" fg:x="38271" fg:w="12"/><text x="32.9894%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (17 samples, 0.01%)</title><rect x="32.7394%" y="357" width="0.0145%" height="15" fill="rgb(212,99,53)" fg:x="38271" fg:w="17"/><text x="32.9894%" y="367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (17 samples, 0.01%)</title><rect x="32.7394%" y="341" width="0.0145%" height="15" fill="rgb(249,111,54)" fg:x="38271" fg:w="17"/><text x="32.9894%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.01%)</title><rect x="32.7394%" y="325" width="0.0145%" height="15" fill="rgb(249,55,30)" fg:x="38271" fg:w="17"/><text x="32.9894%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 0.01%)</title><rect x="32.7394%" y="309" width="0.0145%" height="15" fill="rgb(237,47,42)" fg:x="38271" fg:w="17"/><text x="32.9894%" y="319.50"></text></g><g><title>sn_rust_dealloc (67 samples, 0.06%)</title><rect x="32.7890%" y="197" width="0.0573%" height="15" fill="rgb(211,20,18)" fg:x="38329" fg:w="67"/><text x="33.0390%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 samples, 0.10%)</title><rect x="32.7607%" y="341" width="0.1035%" height="15" fill="rgb(231,203,46)" fg:x="38296" fg:w="121"/><text x="33.0107%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (121 samples, 0.10%)</title><rect x="32.7607%" y="325" width="0.1035%" height="15" fill="rgb(237,142,3)" fg:x="38296" fg:w="121"/><text x="33.0107%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (108 samples, 0.09%)</title><rect x="32.7719%" y="309" width="0.0924%" height="15" fill="rgb(241,107,1)" fg:x="38309" fg:w="108"/><text x="33.0219%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (108 samples, 0.09%)</title><rect x="32.7719%" y="293" width="0.0924%" height="15" fill="rgb(229,83,13)" fg:x="38309" fg:w="108"/><text x="33.0219%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 samples, 0.09%)</title><rect x="32.7719%" y="277" width="0.0924%" height="15" fill="rgb(241,91,40)" fg:x="38309" fg:w="108"/><text x="33.0219%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (105 samples, 0.09%)</title><rect x="32.7744%" y="261" width="0.0898%" height="15" fill="rgb(225,3,45)" fg:x="38312" fg:w="105"/><text x="33.0244%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (105 samples, 0.09%)</title><rect x="32.7744%" y="245" width="0.0898%" height="15" fill="rgb(244,223,14)" fg:x="38312" fg:w="105"/><text x="33.0244%" y="255.50"></text></g><g><title>__rg_dealloc (105 samples, 0.09%)</title><rect x="32.7744%" y="229" width="0.0898%" height="15" fill="rgb(224,124,37)" fg:x="38312" fg:w="105"/><text x="33.0244%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (105 samples, 0.09%)</title><rect x="32.7744%" y="213" width="0.0898%" height="15" fill="rgb(251,171,30)" fg:x="38312" fg:w="105"/><text x="33.0244%" y="223.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (21 samples, 0.02%)</title><rect x="32.8463%" y="197" width="0.0180%" height="15" fill="rgb(236,46,54)" fg:x="38396" fg:w="21"/><text x="33.0963%" y="207.50"></text></g><g><title>sn_rust_dealloc (40 samples, 0.03%)</title><rect x="32.8711%" y="245" width="0.0342%" height="15" fill="rgb(245,213,5)" fg:x="38425" fg:w="40"/><text x="33.1211%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (49 samples, 0.04%)</title><rect x="32.8643%" y="309" width="0.0419%" height="15" fill="rgb(230,144,27)" fg:x="38417" fg:w="49"/><text x="33.1143%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (49 samples, 0.04%)</title><rect x="32.8643%" y="293" width="0.0419%" height="15" fill="rgb(220,86,6)" fg:x="38417" fg:w="49"/><text x="33.1143%" y="303.50"></text></g><g><title>__rg_dealloc (49 samples, 0.04%)</title><rect x="32.8643%" y="277" width="0.0419%" height="15" fill="rgb(240,20,13)" fg:x="38417" fg:w="49"/><text x="33.1143%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (49 samples, 0.04%)</title><rect x="32.8643%" y="261" width="0.0419%" height="15" fill="rgb(217,89,34)" fg:x="38417" fg:w="49"/><text x="33.1143%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (176 samples, 0.15%)</title><rect x="32.7607%" y="357" width="0.1506%" height="15" fill="rgb(229,13,5)" fg:x="38296" fg:w="176"/><text x="33.0107%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (55 samples, 0.05%)</title><rect x="32.8643%" y="341" width="0.0471%" height="15" fill="rgb(244,67,35)" fg:x="38417" fg:w="55"/><text x="33.1143%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.05%)</title><rect x="32.8643%" y="325" width="0.0471%" height="15" fill="rgb(221,40,2)" fg:x="38417" fg:w="55"/><text x="33.1143%" y="335.50"></text></g><g><title>sn_rust_dealloc (124 samples, 0.11%)</title><rect x="32.9344%" y="181" width="0.1061%" height="15" fill="rgb(237,157,21)" fg:x="38499" fg:w="124"/><text x="33.1844%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (163 samples, 0.14%)</title><rect x="32.9267%" y="245" width="0.1394%" height="15" fill="rgb(222,94,11)" fg:x="38490" fg:w="163"/><text x="33.1767%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (163 samples, 0.14%)</title><rect x="32.9267%" y="229" width="0.1394%" height="15" fill="rgb(249,113,6)" fg:x="38490" fg:w="163"/><text x="33.1767%" y="239.50"></text></g><g><title>__rg_dealloc (163 samples, 0.14%)</title><rect x="32.9267%" y="213" width="0.1394%" height="15" fill="rgb(238,137,36)" fg:x="38490" fg:w="163"/><text x="33.1767%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (163 samples, 0.14%)</title><rect x="32.9267%" y="197" width="0.1394%" height="15" fill="rgb(210,102,26)" fg:x="38490" fg:w="163"/><text x="33.1767%" y="207.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (30 samples, 0.03%)</title><rect x="33.0405%" y="181" width="0.0257%" height="15" fill="rgb(218,30,30)" fg:x="38623" fg:w="30"/><text x="33.2905%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (170 samples, 0.15%)</title><rect x="32.9224%" y="309" width="0.1454%" height="15" fill="rgb(214,67,26)" fg:x="38485" fg:w="170"/><text x="33.1724%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (170 samples, 0.15%)</title><rect x="32.9224%" y="293" width="0.1454%" height="15" fill="rgb(251,9,53)" fg:x="38485" fg:w="170"/><text x="33.1724%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (170 samples, 0.15%)</title><rect x="32.9224%" y="277" width="0.1454%" height="15" fill="rgb(228,204,25)" fg:x="38485" fg:w="170"/><text x="33.1724%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (170 samples, 0.15%)</title><rect x="32.9224%" y="261" width="0.1454%" height="15" fill="rgb(207,153,8)" fg:x="38485" fg:w="170"/><text x="33.1724%" y="271.50"></text></g><g><title>sn_rust_dealloc (168 samples, 0.14%)</title><rect x="33.4622%" y="133" width="0.1437%" height="15" fill="rgb(242,9,16)" fg:x="39116" fg:w="168"/><text x="33.7122%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (191 samples, 0.16%)</title><rect x="33.4597%" y="197" width="0.1634%" height="15" fill="rgb(217,211,10)" fg:x="39113" fg:w="191"/><text x="33.7097%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (191 samples, 0.16%)</title><rect x="33.4597%" y="181" width="0.1634%" height="15" fill="rgb(219,228,52)" fg:x="39113" fg:w="191"/><text x="33.7097%" y="191.50"></text></g><g><title>__rg_dealloc (191 samples, 0.16%)</title><rect x="33.4597%" y="165" width="0.1634%" height="15" fill="rgb(231,92,29)" fg:x="39113" fg:w="191"/><text x="33.7097%" y="175.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (191 samples, 0.16%)</title><rect x="33.4597%" y="149" width="0.1634%" height="15" fill="rgb(232,8,23)" fg:x="39113" fg:w="191"/><text x="33.7097%" y="159.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (20 samples, 0.02%)</title><rect x="33.6059%" y="133" width="0.0171%" height="15" fill="rgb(216,211,34)" fg:x="39284" fg:w="20"/><text x="33.8559%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (664 samples, 0.57%)</title><rect x="33.0679%" y="293" width="0.5680%" height="15" fill="rgb(236,151,0)" fg:x="38655" fg:w="664"/><text x="33.3179%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (661 samples, 0.57%)</title><rect x="33.0704%" y="277" width="0.5655%" height="15" fill="rgb(209,168,3)" fg:x="38658" fg:w="661"/><text x="33.3204%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (659 samples, 0.56%)</title><rect x="33.0721%" y="261" width="0.5637%" height="15" fill="rgb(208,129,28)" fg:x="38660" fg:w="659"/><text x="33.3221%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (659 samples, 0.56%)</title><rect x="33.0721%" y="245" width="0.5637%" height="15" fill="rgb(229,78,22)" fg:x="38660" fg:w="659"/><text x="33.3221%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (659 samples, 0.56%)</title><rect x="33.0721%" y="229" width="0.5637%" height="15" fill="rgb(228,187,13)" fg:x="38660" fg:w="659"/><text x="33.3221%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (659 samples, 0.56%)</title><rect x="33.0721%" y="213" width="0.5637%" height="15" fill="rgb(240,119,24)" fg:x="38660" fg:w="659"/><text x="33.3221%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.01%)</title><rect x="33.6230%" y="197" width="0.0128%" height="15" fill="rgb(209,194,42)" fg:x="39304" fg:w="15"/><text x="33.8730%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (851 samples, 0.73%)</title><rect x="32.9181%" y="325" width="0.7280%" height="15" fill="rgb(247,200,46)" fg:x="38480" fg:w="851"/><text x="33.1681%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (676 samples, 0.58%)</title><rect x="33.0679%" y="309" width="0.5783%" height="15" fill="rgb(218,76,16)" fg:x="38655" fg:w="676"/><text x="33.3179%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (12 samples, 0.01%)</title><rect x="33.6359%" y="293" width="0.0103%" height="15" fill="rgb(225,21,48)" fg:x="39319" fg:w="12"/><text x="33.8859%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="33.6359%" y="277" width="0.0103%" height="15" fill="rgb(239,223,50)" fg:x="39319" fg:w="12"/><text x="33.8859%" y="287.50"></text></g><g><title>sn_rust_dealloc (43 samples, 0.04%)</title><rect x="33.6461%" y="325" width="0.0368%" height="15" fill="rgb(244,45,21)" fg:x="39331" fg:w="43"/><text x="33.8961%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (917 samples, 0.78%)</title><rect x="32.9147%" y="341" width="0.7845%" height="15" fill="rgb(232,33,43)" fg:x="38476" fg:w="917"/><text x="33.1647%" y="351.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (19 samples, 0.02%)</title><rect x="33.6829%" y="325" width="0.0163%" height="15" fill="rgb(209,8,3)" fg:x="39374" fg:w="19"/><text x="33.9329%" y="335.50"></text></g><g><title>core::mem::drop (611 samples, 0.52%)</title><rect x="34.0106%" y="229" width="0.5227%" height="15" fill="rgb(214,25,53)" fg:x="39757" fg:w="611"/><text x="34.2606%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;alloc::string::String&gt;&gt; (611 samples, 0.52%)</title><rect x="34.0106%" y="213" width="0.5227%" height="15" fill="rgb(254,186,54)" fg:x="39757" fg:w="611"/><text x="34.2606%" y="223.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (611 samples, 0.52%)</title><rect x="34.0106%" y="197" width="0.5227%" height="15" fill="rgb(208,174,49)" fg:x="39757" fg:w="611"/><text x="34.2606%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (600 samples, 0.51%)</title><rect x="34.0200%" y="181" width="0.5133%" height="15" fill="rgb(233,191,51)" fg:x="39768" fg:w="600"/><text x="34.2700%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_sub (600 samples, 0.51%)</title><rect x="34.0200%" y="165" width="0.5133%" height="15" fill="rgb(222,134,10)" fg:x="39768" fg:w="600"/><text x="34.2700%" y="175.50"></text></g><g><title>sn_rust_dealloc (130 samples, 0.11%)</title><rect x="34.5461%" y="101" width="0.1112%" height="15" fill="rgb(230,226,20)" fg:x="40383" fg:w="130"/><text x="34.7961%" y="111.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (982 samples, 0.84%)</title><rect x="34.0080%" y="245" width="0.8401%" height="15" fill="rgb(251,111,25)" fg:x="39754" fg:w="982"/><text x="34.2580%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (368 samples, 0.31%)</title><rect x="34.5333%" y="229" width="0.3148%" height="15" fill="rgb(224,40,46)" fg:x="40368" fg:w="368"/><text x="34.7833%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (368 samples, 0.31%)</title><rect x="34.5333%" y="213" width="0.3148%" height="15" fill="rgb(236,108,47)" fg:x="40368" fg:w="368"/><text x="34.7833%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (368 samples, 0.31%)</title><rect x="34.5333%" y="197" width="0.3148%" height="15" fill="rgb(234,93,0)" fg:x="40368" fg:w="368"/><text x="34.7833%" y="207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (368 samples, 0.31%)</title><rect x="34.5333%" y="181" width="0.3148%" height="15" fill="rgb(224,213,32)" fg:x="40368" fg:w="368"/><text x="34.7833%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (353 samples, 0.30%)</title><rect x="34.5461%" y="165" width="0.3020%" height="15" fill="rgb(251,11,48)" fg:x="40383" fg:w="353"/><text x="34.7961%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (353 samples, 0.30%)</title><rect x="34.5461%" y="149" width="0.3020%" height="15" fill="rgb(236,173,5)" fg:x="40383" fg:w="353"/><text x="34.7961%" y="159.50"></text></g><g><title>__rg_dealloc (353 samples, 0.30%)</title><rect x="34.5461%" y="133" width="0.3020%" height="15" fill="rgb(230,95,12)" fg:x="40383" fg:w="353"/><text x="34.7961%" y="143.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (353 samples, 0.30%)</title><rect x="34.5461%" y="117" width="0.3020%" height="15" fill="rgb(232,209,1)" fg:x="40383" fg:w="353"/><text x="34.7961%" y="127.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (223 samples, 0.19%)</title><rect x="34.6573%" y="101" width="0.1908%" height="15" fill="rgb(232,6,1)" fg:x="40513" fg:w="223"/><text x="34.9073%" y="111.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (724 samples, 0.62%)</title><rect x="34.8481%" y="245" width="0.6194%" height="15" fill="rgb(210,224,50)" fg:x="40736" fg:w="724"/><text x="35.0981%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_sub (724 samples, 0.62%)</title><rect x="34.8481%" y="229" width="0.6194%" height="15" fill="rgb(228,127,35)" fg:x="40736" fg:w="724"/><text x="35.0981%" y="239.50"></text></g><g><title>sn_rust_dealloc (49 samples, 0.04%)</title><rect x="35.4674%" y="245" width="0.0419%" height="15" fill="rgb(245,102,45)" fg:x="41460" fg:w="49"/><text x="35.7174%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,130 samples, 1.82%)</title><rect x="33.7086%" y="309" width="1.8221%" height="15" fill="rgb(214,1,49)" fg:x="39404" fg:w="2130"/><text x="33.9586%" y="319.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (2,130 samples, 1.82%)</title><rect x="33.7086%" y="293" width="1.8221%" height="15" fill="rgb(226,163,40)" fg:x="39404" fg:w="2130"/><text x="33.9586%" y="303.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (2,123 samples, 1.82%)</title><rect x="33.7146%" y="277" width="1.8161%" height="15" fill="rgb(239,212,28)" fg:x="39411" fg:w="2123"/><text x="33.9646%" y="287.50">c..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,123 samples, 1.82%)</title><rect x="33.7146%" y="261" width="1.8161%" height="15" fill="rgb(220,20,13)" fg:x="39411" fg:w="2123"/><text x="33.9646%" y="271.50">&lt;..</text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (25 samples, 0.02%)</title><rect x="35.5093%" y="245" width="0.0214%" height="15" fill="rgb(210,164,35)" fg:x="41509" fg:w="25"/><text x="35.7593%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (62 samples, 0.05%)</title><rect x="35.5376%" y="277" width="0.0530%" height="15" fill="rgb(248,109,41)" fg:x="41542" fg:w="62"/><text x="35.7876%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (62 samples, 0.05%)</title><rect x="35.5376%" y="261" width="0.0530%" height="15" fill="rgb(238,23,50)" fg:x="41542" fg:w="62"/><text x="35.7876%" y="271.50"></text></g><g><title>__rg_dealloc (62 samples, 0.05%)</title><rect x="35.5376%" y="245" width="0.0530%" height="15" fill="rgb(211,48,49)" fg:x="41542" fg:w="62"/><text x="35.7876%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (62 samples, 0.05%)</title><rect x="35.5376%" y="229" width="0.0530%" height="15" fill="rgb(223,36,21)" fg:x="41542" fg:w="62"/><text x="35.7876%" y="239.50"></text></g><g><title>sn_rust_dealloc (59 samples, 0.05%)</title><rect x="35.5401%" y="213" width="0.0505%" height="15" fill="rgb(207,123,46)" fg:x="41545" fg:w="59"/><text x="35.7901%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,201 samples, 1.88%)</title><rect x="33.7086%" y="325" width="1.8829%" height="15" fill="rgb(240,218,32)" fg:x="39404" fg:w="2201"/><text x="33.9586%" y="335.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (71 samples, 0.06%)</title><rect x="35.5307%" y="309" width="0.0607%" height="15" fill="rgb(252,5,43)" fg:x="41534" fg:w="71"/><text x="35.7807%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.06%)</title><rect x="35.5307%" y="293" width="0.0607%" height="15" fill="rgb(252,84,19)" fg:x="41534" fg:w="71"/><text x="35.7807%" y="303.50"></text></g><g><title>[main] (22 samples, 0.02%)</title><rect x="35.7249%" y="165" width="0.0188%" height="15" fill="rgb(243,152,39)" fg:x="41761" fg:w="22"/><text x="35.9749%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (22 samples, 0.02%)</title><rect x="35.7249%" y="149" width="0.0188%" height="15" fill="rgb(234,160,15)" fg:x="41761" fg:w="22"/><text x="35.9749%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (79 samples, 0.07%)</title><rect x="35.7437%" y="165" width="0.0676%" height="15" fill="rgb(237,34,20)" fg:x="41783" fg:w="79"/><text x="35.9937%" y="175.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.07%)</title><rect x="35.7437%" y="149" width="0.0676%" height="15" fill="rgb(229,97,13)" fg:x="41783" fg:w="79"/><text x="35.9937%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (506 samples, 0.43%)</title><rect x="36.0526%" y="133" width="0.4329%" height="15" fill="rgb(234,71,50)" fg:x="42144" fg:w="506"/><text x="36.3026%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;[tremor_value::value::Value]&gt; (500 samples, 0.43%)</title><rect x="36.0577%" y="117" width="0.4277%" height="15" fill="rgb(253,155,4)" fg:x="42150" fg:w="500"/><text x="36.3077%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (378 samples, 0.32%)</title><rect x="36.1621%" y="101" width="0.3234%" height="15" fill="rgb(222,185,37)" fg:x="42272" fg:w="378"/><text x="36.4121%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (815 samples, 0.70%)</title><rect x="35.8113%" y="165" width="0.6972%" height="15" fill="rgb(251,177,13)" fg:x="41862" fg:w="815"/><text x="36.0613%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_value::value::Value&gt;&gt; (533 samples, 0.46%)</title><rect x="36.0526%" y="149" width="0.4560%" height="15" fill="rgb(250,179,40)" fg:x="42144" fg:w="533"/><text x="36.3026%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_value::value::Value&gt;&gt; (27 samples, 0.02%)</title><rect x="36.4854%" y="133" width="0.0231%" height="15" fill="rgb(242,44,2)" fg:x="42650" fg:w="27"/><text x="36.7354%" y="143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="36.4854%" y="117" width="0.0231%" height="15" fill="rgb(216,177,13)" fg:x="42650" fg:w="27"/><text x="36.7354%" y="127.50"></text></g><g><title>sn_rust_dealloc (217 samples, 0.19%)</title><rect x="36.5085%" y="165" width="0.1856%" height="15" fill="rgb(216,106,43)" fg:x="42677" fg:w="217"/><text x="36.7585%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,453 samples, 1.24%)</title><rect x="35.6377%" y="213" width="1.2430%" height="15" fill="rgb(216,183,2)" fg:x="41659" fg:w="1453"/><text x="35.8877%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (1,453 samples, 1.24%)</title><rect x="35.6377%" y="197" width="1.2430%" height="15" fill="rgb(249,75,3)" fg:x="41659" fg:w="1453"/><text x="35.8877%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt; (1,423 samples, 1.22%)</title><rect x="35.6633%" y="181" width="1.2173%" height="15" fill="rgb(219,67,39)" fg:x="41689" fg:w="1423"/><text x="35.9133%" y="191.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (218 samples, 0.19%)</title><rect x="36.6942%" y="165" width="0.1865%" height="15" fill="rgb(253,228,2)" fg:x="42894" fg:w="218"/><text x="36.9442%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (1,503 samples, 1.29%)</title><rect x="35.6248%" y="261" width="1.2858%" height="15" fill="rgb(235,138,27)" fg:x="41644" fg:w="1503"/><text x="35.8748%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (1,488 samples, 1.27%)</title><rect x="35.6377%" y="245" width="1.2729%" height="15" fill="rgb(236,97,51)" fg:x="41659" fg:w="1488"/><text x="35.8877%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (1,488 samples, 1.27%)</title><rect x="35.6377%" y="229" width="1.2729%" height="15" fill="rgb(240,80,30)" fg:x="41659" fg:w="1488"/><text x="35.8877%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (35 samples, 0.03%)</title><rect x="36.8806%" y="213" width="0.0299%" height="15" fill="rgb(230,178,19)" fg:x="43112" fg:w="35"/><text x="37.1306%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="36.8806%" y="197" width="0.0299%" height="15" fill="rgb(210,190,27)" fg:x="43112" fg:w="35"/><text x="37.1306%" y="207.50"></text></g><g><title>sn_rust_dealloc (139 samples, 0.12%)</title><rect x="36.9106%" y="261" width="0.1189%" height="15" fill="rgb(222,107,31)" fg:x="43147" fg:w="139"/><text x="37.1606%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (1,959 samples, 1.68%)</title><rect x="35.6069%" y="309" width="1.6758%" height="15" fill="rgb(216,127,34)" fg:x="41623" fg:w="1959"/><text x="35.8569%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (1,949 samples, 1.67%)</title><rect x="35.6154%" y="293" width="1.6673%" height="15" fill="rgb(234,116,52)" fg:x="41633" fg:w="1949"/><text x="35.8654%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (1,938 samples, 1.66%)</title><rect x="35.6248%" y="277" width="1.6579%" height="15" fill="rgb(222,124,15)" fg:x="41644" fg:w="1938"/><text x="35.8748%" y="287.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (296 samples, 0.25%)</title><rect x="37.0295%" y="261" width="0.2532%" height="15" fill="rgb(231,179,28)" fg:x="43286" fg:w="296"/><text x="37.2795%" y="271.50"></text></g><g><title>sn_rust_dealloc (70 samples, 0.06%)</title><rect x="37.2827%" y="309" width="0.0599%" height="15" fill="rgb(226,93,45)" fg:x="43582" fg:w="70"/><text x="37.5327%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (4,261 samples, 3.65%)</title><rect x="33.7086%" y="341" width="3.6451%" height="15" fill="rgb(215,8,51)" fg:x="39404" fg:w="4261"/><text x="33.9586%" y="351.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (2,060 samples, 1.76%)</title><rect x="35.5915%" y="325" width="1.7623%" height="15" fill="rgb(223,106,5)" fg:x="41605" fg:w="2060"/><text x="35.8415%" y="335.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (13 samples, 0.01%)</title><rect x="37.3426%" y="309" width="0.0111%" height="15" fill="rgb(250,191,5)" fg:x="43652" fg:w="13"/><text x="37.5926%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (669 samples, 0.57%)</title><rect x="37.8952%" y="197" width="0.5723%" height="15" fill="rgb(242,132,44)" fg:x="44298" fg:w="669"/><text x="38.1452%" y="207.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (669 samples, 0.57%)</title><rect x="37.8952%" y="181" width="0.5723%" height="15" fill="rgb(251,152,29)" fg:x="44298" fg:w="669"/><text x="38.1452%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (96 samples, 0.08%)</title><rect x="38.4675%" y="197" width="0.0821%" height="15" fill="rgb(218,179,5)" fg:x="44967" fg:w="96"/><text x="38.7175%" y="207.50"></text></g><g><title>sn_rust_dealloc (154 samples, 0.13%)</title><rect x="38.5497%" y="197" width="0.1317%" height="15" fill="rgb(227,67,19)" fg:x="45063" fg:w="154"/><text x="38.7997%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,018 samples, 0.87%)</title><rect x="37.8336%" y="245" width="0.8709%" height="15" fill="rgb(233,119,31)" fg:x="44226" fg:w="1018"/><text x="38.0836%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (1,010 samples, 0.86%)</title><rect x="37.8405%" y="229" width="0.8640%" height="15" fill="rgb(241,120,22)" fg:x="44234" fg:w="1010"/><text x="38.0905%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt; (970 samples, 0.83%)</title><rect x="37.8747%" y="213" width="0.8298%" height="15" fill="rgb(224,102,30)" fg:x="44274" fg:w="970"/><text x="38.1247%" y="223.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (27 samples, 0.02%)</title><rect x="38.6814%" y="197" width="0.0231%" height="15" fill="rgb(210,164,37)" fg:x="45217" fg:w="27"/><text x="38.9314%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (1,572 samples, 1.34%)</title><rect x="37.3785%" y="293" width="1.3448%" height="15" fill="rgb(226,191,16)" fg:x="43694" fg:w="1572"/><text x="37.6285%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (1,040 samples, 0.89%)</title><rect x="37.8336%" y="277" width="0.8897%" height="15" fill="rgb(214,40,45)" fg:x="44226" fg:w="1040"/><text x="38.0836%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (1,040 samples, 0.89%)</title><rect x="37.8336%" y="261" width="0.8897%" height="15" fill="rgb(244,29,26)" fg:x="44226" fg:w="1040"/><text x="38.0836%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (22 samples, 0.02%)</title><rect x="38.7045%" y="245" width="0.0188%" height="15" fill="rgb(216,16,5)" fg:x="45244" fg:w="22"/><text x="38.9545%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="38.7045%" y="229" width="0.0188%" height="15" fill="rgb(249,76,35)" fg:x="45244" fg:w="22"/><text x="38.9545%" y="239.50"></text></g><g><title>sn_rust_dealloc (64 samples, 0.05%)</title><rect x="38.7233%" y="293" width="0.0547%" height="15" fill="rgb(207,11,44)" fg:x="45266" fg:w="64"/><text x="38.9733%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (1,718 samples, 1.47%)</title><rect x="37.3537%" y="341" width="1.4697%" height="15" fill="rgb(228,190,49)" fg:x="43665" fg:w="1718"/><text x="37.6037%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (1,691 samples, 1.45%)</title><rect x="37.3768%" y="325" width="1.4466%" height="15" fill="rgb(214,173,12)" fg:x="43692" fg:w="1691"/><text x="37.6268%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (1,689 samples, 1.44%)</title><rect x="37.3785%" y="309" width="1.4449%" height="15" fill="rgb(218,26,35)" fg:x="43694" fg:w="1689"/><text x="37.6285%" y="319.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (53 samples, 0.05%)</title><rect x="38.7781%" y="293" width="0.0453%" height="15" fill="rgb(220,200,19)" fg:x="45330" fg:w="53"/><text x="39.0281%" y="303.50"></text></g><g><title>sn_rust_dealloc (43 samples, 0.04%)</title><rect x="38.8234%" y="341" width="0.0368%" height="15" fill="rgb(239,95,49)" fg:x="45383" fg:w="43"/><text x="39.0734%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (6,996 samples, 5.98%)</title><rect x="32.9113%" y="357" width="5.9848%" height="15" fill="rgb(235,85,53)" fg:x="38472" fg:w="6996"/><text x="33.1613%" y="367.50">core::pt..</text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (42 samples, 0.04%)</title><rect x="38.8602%" y="341" width="0.0359%" height="15" fill="rgb(233,133,31)" fg:x="45426" fg:w="42"/><text x="39.1102%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (27 samples, 0.02%)</title><rect x="39.0065%" y="309" width="0.0231%" height="15" fill="rgb(218,25,20)" fg:x="45597" fg:w="27"/><text x="39.2565%" y="319.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (27 samples, 0.02%)</title><rect x="39.0065%" y="293" width="0.0231%" height="15" fill="rgb(252,210,38)" fg:x="45597" fg:w="27"/><text x="39.2565%" y="303.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (153 samples, 0.13%)</title><rect x="38.9021%" y="357" width="0.1309%" height="15" fill="rgb(242,134,21)" fg:x="45475" fg:w="153"/><text x="39.1521%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (152 samples, 0.13%)</title><rect x="38.9030%" y="341" width="0.1300%" height="15" fill="rgb(213,28,48)" fg:x="45476" fg:w="152"/><text x="39.1530%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (152 samples, 0.13%)</title><rect x="38.9030%" y="325" width="0.1300%" height="15" fill="rgb(250,196,2)" fg:x="45476" fg:w="152"/><text x="39.1530%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (23 samples, 0.02%)</title><rect x="39.0484%" y="341" width="0.0197%" height="15" fill="rgb(227,5,17)" fg:x="45646" fg:w="23"/><text x="39.2984%" y="351.50"></text></g><g><title>core::time::Duration::as_nanos (29 samples, 0.02%)</title><rect x="39.0681%" y="341" width="0.0248%" height="15" fill="rgb(221,226,24)" fg:x="45669" fg:w="29"/><text x="39.3181%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (82 samples, 0.07%)</title><rect x="39.0929%" y="325" width="0.0701%" height="15" fill="rgb(211,5,48)" fg:x="45698" fg:w="82"/><text x="39.3429%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (51 samples, 0.04%)</title><rect x="39.1955%" y="293" width="0.0436%" height="15" fill="rgb(219,150,6)" fg:x="45818" fg:w="51"/><text x="39.4455%" y="303.50"></text></g><g><title>core::cmp::PartialOrd::ge (51 samples, 0.04%)</title><rect x="39.1955%" y="277" width="0.0436%" height="15" fill="rgb(251,46,16)" fg:x="45818" fg:w="51"/><text x="39.4455%" y="287.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (47 samples, 0.04%)</title><rect x="39.1989%" y="261" width="0.0402%" height="15" fill="rgb(220,204,40)" fg:x="45822" fg:w="47"/><text x="39.4489%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (22 samples, 0.02%)</title><rect x="39.2203%" y="245" width="0.0188%" height="15" fill="rgb(211,85,2)" fg:x="45847" fg:w="22"/><text x="39.4703%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (22 samples, 0.02%)</title><rect x="39.2203%" y="229" width="0.0188%" height="15" fill="rgb(229,17,7)" fg:x="45847" fg:w="22"/><text x="39.4703%" y="239.50"></text></g><g><title>std::time::SystemTime::duration_since (188 samples, 0.16%)</title><rect x="39.0929%" y="341" width="0.1608%" height="15" fill="rgb(239,72,28)" fg:x="45698" fg:w="188"/><text x="39.3429%" y="351.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (106 samples, 0.09%)</title><rect x="39.1630%" y="325" width="0.0907%" height="15" fill="rgb(230,47,54)" fg:x="45780" fg:w="106"/><text x="39.4130%" y="335.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (106 samples, 0.09%)</title><rect x="39.1630%" y="309" width="0.0907%" height="15" fill="rgb(214,50,8)" fg:x="45780" fg:w="106"/><text x="39.4130%" y="319.50"></text></g><g><title>core::time::Duration::new (17 samples, 0.01%)</title><rect x="39.2392%" y="293" width="0.0145%" height="15" fill="rgb(216,198,43)" fg:x="45869" fg:w="17"/><text x="39.4892%" y="303.50"></text></g><g><title>tremor_common::time::nanotime (636 samples, 0.54%)</title><rect x="39.0330%" y="357" width="0.5441%" height="15" fill="rgb(234,20,35)" fg:x="45628" fg:w="636"/><text x="39.2830%" y="367.50"></text></g><g><title>std::time::SystemTime::now (378 samples, 0.32%)</title><rect x="39.2537%" y="341" width="0.3234%" height="15" fill="rgb(254,45,19)" fg:x="45886" fg:w="378"/><text x="39.5037%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (378 samples, 0.32%)</title><rect x="39.2537%" y="325" width="0.3234%" height="15" fill="rgb(219,14,44)" fg:x="45886" fg:w="378"/><text x="39.5037%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (378 samples, 0.32%)</title><rect x="39.2537%" y="309" width="0.3234%" height="15" fill="rgb(217,220,26)" fg:x="45886" fg:w="378"/><text x="39.5037%" y="319.50"></text></g><g><title>__clock_gettime (307 samples, 0.26%)</title><rect x="39.3144%" y="293" width="0.2626%" height="15" fill="rgb(213,158,28)" fg:x="45957" fg:w="307"/><text x="39.5644%" y="303.50"></text></g><g><title>__vdso_clock_gettime (295 samples, 0.25%)</title><rect x="39.3247%" y="277" width="0.2524%" height="15" fill="rgb(252,51,52)" fg:x="45969" fg:w="295"/><text x="39.5747%" y="287.50"></text></g><g><title>[[vdso]] (264 samples, 0.23%)</title><rect x="39.3512%" y="261" width="0.2258%" height="15" fill="rgb(246,89,16)" fg:x="46000" fg:w="264"/><text x="39.6012%" y="271.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (12,058 samples, 10.32%)</title><rect x="29.2688%" y="421" width="10.3152%" height="15" fill="rgb(216,158,49)" fg:x="34214" fg:w="12058"/><text x="29.5188%" y="431.50">tremor_runtime:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11,444 samples, 9.79%)</title><rect x="29.7940%" y="405" width="9.7899%" height="15" fill="rgb(236,107,19)" fg:x="34828" fg:w="11444"/><text x="30.0440%" y="415.50">&lt;core::pin::Pi..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,444 samples, 9.79%)</title><rect x="29.7940%" y="389" width="9.7899%" height="15" fill="rgb(228,185,30)" fg:x="34828" fg:w="11444"/><text x="30.0440%" y="399.50">&lt;core::future:..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (8,502 samples, 7.27%)</title><rect x="32.3108%" y="373" width="7.2731%" height="15" fill="rgb(246,134,8)" fg:x="37770" fg:w="8502"/><text x="32.5608%" y="383.50">&lt;tremor_ru..</text></g><g><title>async_global_executor::threading::thread_main_loop (12,063 samples, 10.32%)</title><rect x="29.2670%" y="885" width="10.3194%" height="15" fill="rgb(214,143,50)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="895.50">async_global_ex..</text></g><g><title>std::panic::catch_unwind (12,063 samples, 10.32%)</title><rect x="29.2670%" y="869" width="10.3194%" height="15" fill="rgb(228,75,8)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="879.50">std::panic::cat..</text></g><g><title>std::panicking::try (12,063 samples, 10.32%)</title><rect x="29.2670%" y="853" width="10.3194%" height="15" fill="rgb(207,175,4)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="863.50">std::panicking:..</text></g><g><title>std::panicking::try::do_call (12,063 samples, 10.32%)</title><rect x="29.2670%" y="837" width="10.3194%" height="15" fill="rgb(205,108,24)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="847.50">std::panicking:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (12,063 samples, 10.32%)</title><rect x="29.2670%" y="821" width="10.3194%" height="15" fill="rgb(244,120,49)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="831.50">async_global_ex..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12,063 samples, 10.32%)</title><rect x="29.2670%" y="805" width="10.3194%" height="15" fill="rgb(223,47,38)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="815.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12,063 samples, 10.32%)</title><rect x="29.2670%" y="789" width="10.3194%" height="15" fill="rgb(229,179,11)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="799.50">std::thread::lo..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (12,063 samples, 10.32%)</title><rect x="29.2670%" y="773" width="10.3194%" height="15" fill="rgb(231,122,1)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="783.50">async_global_ex..</text></g><g><title>async_global_executor::reactor::block_on (12,063 samples, 10.32%)</title><rect x="29.2670%" y="757" width="10.3194%" height="15" fill="rgb(245,119,9)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="767.50">async_global_ex..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (12,063 samples, 10.32%)</title><rect x="29.2670%" y="741" width="10.3194%" height="15" fill="rgb(241,163,25)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="751.50">async_global_ex..</text></g><g><title>async_io::driver::block_on (12,063 samples, 10.32%)</title><rect x="29.2670%" y="725" width="10.3194%" height="15" fill="rgb(217,214,3)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="735.50">async_io::drive..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (12,063 samples, 10.32%)</title><rect x="29.2670%" y="709" width="10.3194%" height="15" fill="rgb(240,86,28)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="719.50">&lt;futures_lite::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,063 samples, 10.32%)</title><rect x="29.2670%" y="693" width="10.3194%" height="15" fill="rgb(215,47,9)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="703.50">&lt;core::future::..</text></g><g><title>async_executor::Executor::run::{{closure}} (12,063 samples, 10.32%)</title><rect x="29.2670%" y="677" width="10.3194%" height="15" fill="rgb(252,25,45)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="687.50">async_executor:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (12,063 samples, 10.32%)</title><rect x="29.2670%" y="661" width="10.3194%" height="15" fill="rgb(251,164,9)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="671.50">&lt;futures_lite::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,063 samples, 10.32%)</title><rect x="29.2670%" y="645" width="10.3194%" height="15" fill="rgb(233,194,0)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="655.50">&lt;core::future::..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (12,063 samples, 10.32%)</title><rect x="29.2670%" y="629" width="10.3194%" height="15" fill="rgb(249,111,24)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="639.50">async_executor:..</text></g><g><title>async_task::runnable::Runnable::run (12,063 samples, 10.32%)</title><rect x="29.2670%" y="613" width="10.3194%" height="15" fill="rgb(250,223,3)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="623.50">async_task::run..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (12,063 samples, 10.32%)</title><rect x="29.2670%" y="597" width="10.3194%" height="15" fill="rgb(236,178,37)" fg:x="34212" fg:w="12063"/><text x="29.5170%" y="607.50">async_task::raw..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12,062 samples, 10.32%)</title><rect x="29.2679%" y="581" width="10.3186%" height="15" fill="rgb(241,158,50)" fg:x="34213" fg:w="12062"/><text x="29.5179%" y="591.50">&lt;core::pin::Pin..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,062 samples, 10.32%)</title><rect x="29.2679%" y="565" width="10.3186%" height="15" fill="rgb(213,121,41)" fg:x="34213" fg:w="12062"/><text x="29.5179%" y="575.50">&lt;core::future::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (12,062 samples, 10.32%)</title><rect x="29.2679%" y="549" width="10.3186%" height="15" fill="rgb(240,92,3)" fg:x="34213" fg:w="12062"/><text x="29.5179%" y="559.50">async_executor:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (12,062 samples, 10.32%)</title><rect x="29.2679%" y="533" width="10.3186%" height="15" fill="rgb(205,123,3)" fg:x="34213" fg:w="12062"/><text x="29.5179%" y="543.50">&lt;async_std::tas..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (12,062 samples, 10.32%)</title><rect x="29.2679%" y="517" width="10.3186%" height="15" fill="rgb(205,97,47)" fg:x="34213" fg:w="12062"/><text x="29.5179%" y="527.50">async_std::task..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12,062 samples, 10.32%)</title><rect x="29.2679%" y="501" width="10.3186%" height="15" fill="rgb(247,152,14)" fg:x="34213" fg:w="12062"/><text x="29.5179%" y="511.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12,062 samples, 10.32%)</title><rect x="29.2679%" y="485" width="10.3186%" height="15" fill="rgb(248,195,53)" fg:x="34213" fg:w="12062"/><text x="29.5179%" y="495.50">std::thread::lo..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (12,062 samples, 10.32%)</title><rect x="29.2679%" y="469" width="10.3186%" height="15" fill="rgb(226,201,16)" fg:x="34213" fg:w="12062"/><text x="29.5179%" y="479.50">async_std::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (12,062 samples, 10.32%)</title><rect x="29.2679%" y="453" width="10.3186%" height="15" fill="rgb(205,98,0)" fg:x="34213" fg:w="12062"/><text x="29.5179%" y="463.50">&lt;async_std::tas..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,062 samples, 10.32%)</title><rect x="29.2679%" y="437" width="10.3186%" height="15" fill="rgb(214,191,48)" fg:x="34213" fg:w="12062"/><text x="29.5179%" y="447.50">&lt;core::future::..</text></g><g><title>alloc::alloc::exchange_malloc (34 samples, 0.03%)</title><rect x="39.6190%" y="453" width="0.0291%" height="15" fill="rgb(237,112,39)" fg:x="46313" fg:w="34"/><text x="39.8690%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.03%)</title><rect x="39.6190%" y="437" width="0.0291%" height="15" fill="rgb(247,203,27)" fg:x="46313" fg:w="34"/><text x="39.8690%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.03%)</title><rect x="39.6190%" y="421" width="0.0291%" height="15" fill="rgb(235,124,28)" fg:x="46313" fg:w="34"/><text x="39.8690%" y="431.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.02%)</title><rect x="39.6250%" y="405" width="0.0231%" height="15" fill="rgb(208,207,46)" fg:x="46320" fg:w="27"/><text x="39.8750%" y="415.50"></text></g><g><title>__rg_alloc (27 samples, 0.02%)</title><rect x="39.6250%" y="389" width="0.0231%" height="15" fill="rgb(234,176,4)" fg:x="46320" fg:w="27"/><text x="39.8750%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (27 samples, 0.02%)</title><rect x="39.6250%" y="373" width="0.0231%" height="15" fill="rgb(230,133,28)" fg:x="46320" fg:w="27"/><text x="39.8750%" y="383.50"></text></g><g><title>sn_rust_alloc (27 samples, 0.02%)</title><rect x="39.6250%" y="357" width="0.0231%" height="15" fill="rgb(211,137,40)" fg:x="46320" fg:w="27"/><text x="39.8750%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (18 samples, 0.02%)</title><rect x="39.6669%" y="437" width="0.0154%" height="15" fill="rgb(254,35,13)" fg:x="46369" fg:w="18"/><text x="39.9169%" y="447.50"></text></g><g><title>core::time::Duration::as_nanos (26 samples, 0.02%)</title><rect x="39.6823%" y="437" width="0.0222%" height="15" fill="rgb(225,49,51)" fg:x="46387" fg:w="26"/><text x="39.9323%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (82 samples, 0.07%)</title><rect x="39.7045%" y="421" width="0.0701%" height="15" fill="rgb(251,10,15)" fg:x="46413" fg:w="82"/><text x="39.9545%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (30 samples, 0.03%)</title><rect x="39.8055%" y="389" width="0.0257%" height="15" fill="rgb(228,207,15)" fg:x="46531" fg:w="30"/><text x="40.0555%" y="399.50"></text></g><g><title>core::cmp::PartialOrd::ge (30 samples, 0.03%)</title><rect x="39.8055%" y="373" width="0.0257%" height="15" fill="rgb(241,99,19)" fg:x="46531" fg:w="30"/><text x="40.0555%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (30 samples, 0.03%)</title><rect x="39.8055%" y="357" width="0.0257%" height="15" fill="rgb(207,104,49)" fg:x="46531" fg:w="30"/><text x="40.0555%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (15 samples, 0.01%)</title><rect x="39.8183%" y="341" width="0.0128%" height="15" fill="rgb(234,99,18)" fg:x="46546" fg:w="15"/><text x="40.0683%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (15 samples, 0.01%)</title><rect x="39.8183%" y="325" width="0.0128%" height="15" fill="rgb(213,191,49)" fg:x="46546" fg:w="15"/><text x="40.0683%" y="335.50"></text></g><g><title>std::time::SystemTime::duration_since (162 samples, 0.14%)</title><rect x="39.7045%" y="437" width="0.1386%" height="15" fill="rgb(210,226,19)" fg:x="46413" fg:w="162"/><text x="39.9545%" y="447.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (80 samples, 0.07%)</title><rect x="39.7747%" y="421" width="0.0684%" height="15" fill="rgb(229,97,18)" fg:x="46495" fg:w="80"/><text x="40.0247%" y="431.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (80 samples, 0.07%)</title><rect x="39.7747%" y="405" width="0.0684%" height="15" fill="rgb(211,167,15)" fg:x="46495" fg:w="80"/><text x="40.0247%" y="415.50"></text></g><g><title>core::time::Duration::new (14 samples, 0.01%)</title><rect x="39.8311%" y="389" width="0.0120%" height="15" fill="rgb(210,169,34)" fg:x="46561" fg:w="14"/><text x="40.0811%" y="399.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (651 samples, 0.56%)</title><rect x="39.5865%" y="581" width="0.5569%" height="15" fill="rgb(241,121,31)" fg:x="46275" fg:w="651"/><text x="39.8365%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (651 samples, 0.56%)</title><rect x="39.5865%" y="565" width="0.5569%" height="15" fill="rgb(232,40,11)" fg:x="46275" fg:w="651"/><text x="39.8365%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (651 samples, 0.56%)</title><rect x="39.5865%" y="549" width="0.5569%" height="15" fill="rgb(205,86,26)" fg:x="46275" fg:w="651"/><text x="39.8365%" y="559.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (651 samples, 0.56%)</title><rect x="39.5865%" y="533" width="0.5569%" height="15" fill="rgb(231,126,28)" fg:x="46275" fg:w="651"/><text x="39.8365%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (651 samples, 0.56%)</title><rect x="39.5865%" y="517" width="0.5569%" height="15" fill="rgb(219,221,18)" fg:x="46275" fg:w="651"/><text x="39.8365%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (651 samples, 0.56%)</title><rect x="39.5865%" y="501" width="0.5569%" height="15" fill="rgb(211,40,0)" fg:x="46275" fg:w="651"/><text x="39.8365%" y="511.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (651 samples, 0.56%)</title><rect x="39.5865%" y="485" width="0.5569%" height="15" fill="rgb(239,85,43)" fg:x="46275" fg:w="651"/><text x="39.8365%" y="495.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (651 samples, 0.56%)</title><rect x="39.5865%" y="469" width="0.5569%" height="15" fill="rgb(231,55,21)" fg:x="46275" fg:w="651"/><text x="39.8365%" y="479.50"></text></g><g><title>tremor_common::time::nanotime (570 samples, 0.49%)</title><rect x="39.6558%" y="453" width="0.4876%" height="15" fill="rgb(225,184,43)" fg:x="46356" fg:w="570"/><text x="39.9058%" y="463.50"></text></g><g><title>std::time::SystemTime::now (351 samples, 0.30%)</title><rect x="39.8431%" y="437" width="0.3003%" height="15" fill="rgb(251,158,41)" fg:x="46575" fg:w="351"/><text x="40.0931%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (351 samples, 0.30%)</title><rect x="39.8431%" y="421" width="0.3003%" height="15" fill="rgb(234,159,37)" fg:x="46575" fg:w="351"/><text x="40.0931%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (351 samples, 0.30%)</title><rect x="39.8431%" y="405" width="0.3003%" height="15" fill="rgb(216,204,22)" fg:x="46575" fg:w="351"/><text x="40.0931%" y="415.50"></text></g><g><title>__clock_gettime (275 samples, 0.24%)</title><rect x="39.9081%" y="389" width="0.2353%" height="15" fill="rgb(214,17,3)" fg:x="46651" fg:w="275"/><text x="40.1581%" y="399.50"></text></g><g><title>__vdso_clock_gettime (263 samples, 0.22%)</title><rect x="39.9184%" y="373" width="0.2250%" height="15" fill="rgb(212,111,17)" fg:x="46663" fg:w="263"/><text x="40.1684%" y="383.50"></text></g><g><title>[[vdso]] (247 samples, 0.21%)</title><rect x="39.9321%" y="357" width="0.2113%" height="15" fill="rgb(221,157,24)" fg:x="46679" fg:w="247"/><text x="40.1821%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (213 samples, 0.18%)</title><rect x="40.2366%" y="469" width="0.1822%" height="15" fill="rgb(252,16,13)" fg:x="47035" fg:w="213"/><text x="40.4866%" y="479.50"></text></g><g><title>core::ptr::read (203 samples, 0.17%)</title><rect x="40.2452%" y="453" width="0.1737%" height="15" fill="rgb(221,62,2)" fg:x="47045" fg:w="203"/><text x="40.4952%" y="463.50"></text></g><g><title>[libc-2.31.so] (197 samples, 0.17%)</title><rect x="40.2503%" y="437" width="0.1685%" height="15" fill="rgb(247,87,22)" fg:x="47051" fg:w="197"/><text x="40.5003%" y="447.50"></text></g><g><title>[libc-2.31.so] (60 samples, 0.05%)</title><rect x="40.4205%" y="453" width="0.0513%" height="15" fill="rgb(215,73,9)" fg:x="47250" fg:w="60"/><text x="40.6705%" y="463.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (24 samples, 0.02%)</title><rect x="40.5035%" y="421" width="0.0205%" height="15" fill="rgb(207,175,33)" fg:x="47347" fg:w="24"/><text x="40.7535%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (16 samples, 0.01%)</title><rect x="40.5104%" y="405" width="0.0137%" height="15" fill="rgb(243,129,54)" fg:x="47355" fg:w="16"/><text x="40.7604%" y="415.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (50 samples, 0.04%)</title><rect x="40.4898%" y="437" width="0.0428%" height="15" fill="rgb(227,119,45)" fg:x="47331" fg:w="50"/><text x="40.7398%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (142 samples, 0.12%)</title><rect x="40.4188%" y="469" width="0.1215%" height="15" fill="rgb(205,109,36)" fg:x="47248" fg:w="142"/><text x="40.6688%" y="479.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (80 samples, 0.07%)</title><rect x="40.4719%" y="453" width="0.0684%" height="15" fill="rgb(205,6,39)" fg:x="47310" fg:w="80"/><text x="40.7219%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (92 samples, 0.08%)</title><rect x="40.5480%" y="341" width="0.0787%" height="15" fill="rgb(221,32,16)" fg:x="47399" fg:w="92"/><text x="40.7980%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (92 samples, 0.08%)</title><rect x="40.5480%" y="325" width="0.0787%" height="15" fill="rgb(228,144,50)" fg:x="47399" fg:w="92"/><text x="40.7980%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (92 samples, 0.08%)</title><rect x="40.5480%" y="309" width="0.0787%" height="15" fill="rgb(229,201,53)" fg:x="47399" fg:w="92"/><text x="40.7980%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (89 samples, 0.08%)</title><rect x="40.5506%" y="293" width="0.0761%" height="15" fill="rgb(249,153,27)" fg:x="47402" fg:w="89"/><text x="40.8006%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (89 samples, 0.08%)</title><rect x="40.5506%" y="277" width="0.0761%" height="15" fill="rgb(227,106,25)" fg:x="47402" fg:w="89"/><text x="40.8006%" y="287.50"></text></g><g><title>alloc::alloc::alloc (89 samples, 0.08%)</title><rect x="40.5506%" y="261" width="0.0761%" height="15" fill="rgb(230,65,29)" fg:x="47402" fg:w="89"/><text x="40.8006%" y="271.50"></text></g><g><title>__rg_alloc (89 samples, 0.08%)</title><rect x="40.5506%" y="245" width="0.0761%" height="15" fill="rgb(221,57,46)" fg:x="47402" fg:w="89"/><text x="40.8006%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (89 samples, 0.08%)</title><rect x="40.5506%" y="229" width="0.0761%" height="15" fill="rgb(229,161,17)" fg:x="47402" fg:w="89"/><text x="40.8006%" y="239.50"></text></g><g><title>sn_rust_alloc (84 samples, 0.07%)</title><rect x="40.5549%" y="213" width="0.0719%" height="15" fill="rgb(222,213,11)" fg:x="47407" fg:w="84"/><text x="40.8049%" y="223.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (114 samples, 0.10%)</title><rect x="40.5472%" y="469" width="0.0975%" height="15" fill="rgb(235,35,13)" fg:x="47398" fg:w="114"/><text x="40.7972%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (114 samples, 0.10%)</title><rect x="40.5472%" y="453" width="0.0975%" height="15" fill="rgb(233,158,34)" fg:x="47398" fg:w="114"/><text x="40.7972%" y="463.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (114 samples, 0.10%)</title><rect x="40.5472%" y="437" width="0.0975%" height="15" fill="rgb(215,151,48)" fg:x="47398" fg:w="114"/><text x="40.7972%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (114 samples, 0.10%)</title><rect x="40.5472%" y="421" width="0.0975%" height="15" fill="rgb(229,84,14)" fg:x="47398" fg:w="114"/><text x="40.7972%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (114 samples, 0.10%)</title><rect x="40.5472%" y="405" width="0.0975%" height="15" fill="rgb(229,68,14)" fg:x="47398" fg:w="114"/><text x="40.7972%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (114 samples, 0.10%)</title><rect x="40.5472%" y="389" width="0.0975%" height="15" fill="rgb(243,106,26)" fg:x="47398" fg:w="114"/><text x="40.7972%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (114 samples, 0.10%)</title><rect x="40.5472%" y="373" width="0.0975%" height="15" fill="rgb(206,45,38)" fg:x="47398" fg:w="114"/><text x="40.7972%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (114 samples, 0.10%)</title><rect x="40.5472%" y="357" width="0.0975%" height="15" fill="rgb(226,6,15)" fg:x="47398" fg:w="114"/><text x="40.7972%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (21 samples, 0.02%)</title><rect x="40.6267%" y="341" width="0.0180%" height="15" fill="rgb(232,22,54)" fg:x="47491" fg:w="21"/><text x="40.8767%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.02%)</title><rect x="40.6267%" y="325" width="0.0180%" height="15" fill="rgb(229,222,32)" fg:x="47491" fg:w="21"/><text x="40.8767%" y="335.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.01%)</title><rect x="40.6301%" y="309" width="0.0145%" height="15" fill="rgb(228,62,29)" fg:x="47495" fg:w="17"/><text x="40.8801%" y="319.50"></text></g><g><title>[libc-2.31.so] (321 samples, 0.27%)</title><rect x="40.6447%" y="469" width="0.2746%" height="15" fill="rgb(251,103,34)" fg:x="47512" fg:w="321"/><text x="40.8947%" y="479.50"></text></g><g><title>[libc-2.31.so] (202 samples, 0.17%)</title><rect x="40.9218%" y="453" width="0.1728%" height="15" fill="rgb(233,12,30)" fg:x="47836" fg:w="202"/><text x="41.1718%" y="463.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (188 samples, 0.16%)</title><rect x="41.1229%" y="341" width="0.1608%" height="15" fill="rgb(238,52,0)" fg:x="48071" fg:w="188"/><text x="41.3729%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (439 samples, 0.38%)</title><rect x="40.9193%" y="469" width="0.3755%" height="15" fill="rgb(223,98,5)" fg:x="47833" fg:w="439"/><text x="41.1693%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (234 samples, 0.20%)</title><rect x="41.0946%" y="453" width="0.2002%" height="15" fill="rgb(228,75,37)" fg:x="48038" fg:w="234"/><text x="41.3446%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (234 samples, 0.20%)</title><rect x="41.0946%" y="437" width="0.2002%" height="15" fill="rgb(205,115,49)" fg:x="48038" fg:w="234"/><text x="41.3446%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (234 samples, 0.20%)</title><rect x="41.0946%" y="421" width="0.2002%" height="15" fill="rgb(250,154,43)" fg:x="48038" fg:w="234"/><text x="41.3446%" y="431.50"></text></g><g><title>alloc::alloc::alloc (234 samples, 0.20%)</title><rect x="41.0946%" y="405" width="0.2002%" height="15" fill="rgb(226,43,29)" fg:x="48038" fg:w="234"/><text x="41.3446%" y="415.50"></text></g><g><title>__rg_alloc (234 samples, 0.20%)</title><rect x="41.0946%" y="389" width="0.2002%" height="15" fill="rgb(249,228,39)" fg:x="48038" fg:w="234"/><text x="41.3446%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (234 samples, 0.20%)</title><rect x="41.0946%" y="373" width="0.2002%" height="15" fill="rgb(216,79,43)" fg:x="48038" fg:w="234"/><text x="41.3446%" y="383.50"></text></g><g><title>sn_rust_alloc (234 samples, 0.20%)</title><rect x="41.0946%" y="357" width="0.2002%" height="15" fill="rgb(228,95,12)" fg:x="48038" fg:w="234"/><text x="41.3446%" y="367.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="41.2837%" y="341" width="0.0111%" height="15" fill="rgb(249,221,15)" fg:x="48259" fg:w="13"/><text x="41.5337%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (14 samples, 0.01%)</title><rect x="41.3042%" y="437" width="0.0120%" height="15" fill="rgb(233,34,13)" fg:x="48283" fg:w="14"/><text x="41.5542%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="41.3042%" y="421" width="0.0120%" height="15" fill="rgb(214,103,39)" fg:x="48283" fg:w="14"/><text x="41.5542%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="41.2948%" y="453" width="0.0231%" height="15" fill="rgb(251,126,39)" fg:x="48272" fg:w="27"/><text x="41.5448%" y="463.50"></text></g><g><title>sn_rust_dealloc (29 samples, 0.02%)</title><rect x="41.3179%" y="453" width="0.0248%" height="15" fill="rgb(214,216,36)" fg:x="48299" fg:w="29"/><text x="41.5679%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (60 samples, 0.05%)</title><rect x="41.2948%" y="469" width="0.0513%" height="15" fill="rgb(220,221,8)" fg:x="48272" fg:w="60"/><text x="41.5448%" y="479.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (29 samples, 0.02%)</title><rect x="41.3539%" y="469" width="0.0248%" height="15" fill="rgb(240,216,3)" fg:x="48341" fg:w="29"/><text x="41.6039%" y="479.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (29 samples, 0.02%)</title><rect x="41.3539%" y="453" width="0.0248%" height="15" fill="rgb(232,218,17)" fg:x="48341" fg:w="29"/><text x="41.6039%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (25 samples, 0.02%)</title><rect x="41.3573%" y="437" width="0.0214%" height="15" fill="rgb(229,163,45)" fg:x="48345" fg:w="25"/><text x="41.6073%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 0.02%)</title><rect x="41.3573%" y="421" width="0.0214%" height="15" fill="rgb(231,110,42)" fg:x="48345" fg:w="25"/><text x="41.6073%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (12 samples, 0.01%)</title><rect x="41.3684%" y="405" width="0.0103%" height="15" fill="rgb(208,170,48)" fg:x="48358" fg:w="12"/><text x="41.6184%" y="415.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (12 samples, 0.01%)</title><rect x="41.3684%" y="389" width="0.0103%" height="15" fill="rgb(239,116,25)" fg:x="48358" fg:w="12"/><text x="41.6184%" y="399.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (12 samples, 0.01%)</title><rect x="41.3684%" y="373" width="0.0103%" height="15" fill="rgb(219,200,50)" fg:x="48358" fg:w="12"/><text x="41.6184%" y="383.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (12 samples, 0.01%)</title><rect x="41.3684%" y="357" width="0.0103%" height="15" fill="rgb(245,200,0)" fg:x="48358" fg:w="12"/><text x="41.6184%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,465 samples, 1.25%)</title><rect x="40.1434%" y="565" width="1.2533%" height="15" fill="rgb(245,119,33)" fg:x="46926" fg:w="1465"/><text x="40.3934%" y="575.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (1,465 samples, 1.25%)</title><rect x="40.1434%" y="549" width="1.2533%" height="15" fill="rgb(231,125,12)" fg:x="46926" fg:w="1465"/><text x="40.3934%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,465 samples, 1.25%)</title><rect x="40.1434%" y="533" width="1.2533%" height="15" fill="rgb(216,96,41)" fg:x="46926" fg:w="1465"/><text x="40.3934%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,465 samples, 1.25%)</title><rect x="40.1434%" y="517" width="1.2533%" height="15" fill="rgb(248,43,45)" fg:x="46926" fg:w="1465"/><text x="40.3934%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,465 samples, 1.25%)</title><rect x="40.1434%" y="501" width="1.2533%" height="15" fill="rgb(217,222,7)" fg:x="46926" fg:w="1465"/><text x="40.3934%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (1,460 samples, 1.25%)</title><rect x="40.1477%" y="485" width="1.2490%" height="15" fill="rgb(233,28,6)" fg:x="46931" fg:w="1460"/><text x="40.3977%" y="495.50"></text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (16 samples, 0.01%)</title><rect x="41.3829%" y="469" width="0.0137%" height="15" fill="rgb(231,218,15)" fg:x="48375" fg:w="16"/><text x="41.6329%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (16 samples, 0.01%)</title><rect x="41.3829%" y="453" width="0.0137%" height="15" fill="rgb(226,171,48)" fg:x="48375" fg:w="16"/><text x="41.6329%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.01%)</title><rect x="41.3829%" y="437" width="0.0137%" height="15" fill="rgb(235,201,9)" fg:x="48375" fg:w="16"/><text x="41.6329%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (61 samples, 0.05%)</title><rect x="41.4471%" y="485" width="0.0522%" height="15" fill="rgb(217,80,15)" fg:x="48450" fg:w="61"/><text x="41.6971%" y="495.50"></text></g><g><title>core::mem::replace (61 samples, 0.05%)</title><rect x="41.4471%" y="469" width="0.0522%" height="15" fill="rgb(219,152,8)" fg:x="48450" fg:w="61"/><text x="41.6971%" y="479.50"></text></g><g><title>core::ptr::read (61 samples, 0.05%)</title><rect x="41.4471%" y="453" width="0.0522%" height="15" fill="rgb(243,107,38)" fg:x="48450" fg:w="61"/><text x="41.6971%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (97 samples, 0.08%)</title><rect x="41.4283%" y="501" width="0.0830%" height="15" fill="rgb(231,17,5)" fg:x="48428" fg:w="97"/><text x="41.6783%" y="511.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="41.4993%" y="485" width="0.0120%" height="15" fill="rgb(209,25,54)" fg:x="48511" fg:w="14"/><text x="41.7493%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (14 samples, 0.01%)</title><rect x="41.4993%" y="469" width="0.0120%" height="15" fill="rgb(219,0,2)" fg:x="48511" fg:w="14"/><text x="41.7493%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (70 samples, 0.06%)</title><rect x="41.5113%" y="501" width="0.0599%" height="15" fill="rgb(246,9,5)" fg:x="48525" fg:w="70"/><text x="41.7613%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (67 samples, 0.06%)</title><rect x="41.5138%" y="485" width="0.0573%" height="15" fill="rgb(226,159,4)" fg:x="48528" fg:w="67"/><text x="41.7638%" y="495.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.06%)</title><rect x="41.5138%" y="469" width="0.0573%" height="15" fill="rgb(219,175,34)" fg:x="48528" fg:w="67"/><text x="41.7638%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (64 samples, 0.05%)</title><rect x="41.5164%" y="453" width="0.0547%" height="15" fill="rgb(236,10,46)" fg:x="48531" fg:w="64"/><text x="41.7664%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (64 samples, 0.05%)</title><rect x="41.5164%" y="437" width="0.0547%" height="15" fill="rgb(240,211,16)" fg:x="48531" fg:w="64"/><text x="41.7664%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (64 samples, 0.05%)</title><rect x="41.5164%" y="421" width="0.0547%" height="15" fill="rgb(205,3,43)" fg:x="48531" fg:w="64"/><text x="41.7664%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (64 samples, 0.05%)</title><rect x="41.5164%" y="405" width="0.0547%" height="15" fill="rgb(245,7,22)" fg:x="48531" fg:w="64"/><text x="41.7664%" y="415.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (293 samples, 0.25%)</title><rect x="41.4052%" y="517" width="0.2507%" height="15" fill="rgb(239,132,32)" fg:x="48401" fg:w="293"/><text x="41.6552%" y="527.50"></text></g><g><title>event_listener::Inner::lock (84 samples, 0.07%)</title><rect x="41.5840%" y="501" width="0.0719%" height="15" fill="rgb(228,202,34)" fg:x="48610" fg:w="84"/><text x="41.8340%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (81 samples, 0.07%)</title><rect x="41.5865%" y="485" width="0.0693%" height="15" fill="rgb(254,200,22)" fg:x="48613" fg:w="81"/><text x="41.8365%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (78 samples, 0.07%)</title><rect x="41.5891%" y="469" width="0.0667%" height="15" fill="rgb(219,10,39)" fg:x="48616" fg:w="78"/><text x="41.8391%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (78 samples, 0.07%)</title><rect x="41.5891%" y="453" width="0.0667%" height="15" fill="rgb(226,210,39)" fg:x="48616" fg:w="78"/><text x="41.8391%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (78 samples, 0.07%)</title><rect x="41.5891%" y="437" width="0.0667%" height="15" fill="rgb(208,219,16)" fg:x="48616" fg:w="78"/><text x="41.8391%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (78 samples, 0.07%)</title><rect x="41.5891%" y="421" width="0.0667%" height="15" fill="rgb(216,158,51)" fg:x="48616" fg:w="78"/><text x="41.8391%" y="431.50"></text></g><g><title>concurrent_queue::full_fence (138 samples, 0.12%)</title><rect x="41.6866%" y="469" width="0.1181%" height="15" fill="rgb(233,14,44)" fg:x="48730" fg:w="138"/><text x="41.9366%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (138 samples, 0.12%)</title><rect x="41.6866%" y="453" width="0.1181%" height="15" fill="rgb(237,97,39)" fg:x="48730" fg:w="138"/><text x="41.9366%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (138 samples, 0.12%)</title><rect x="41.6866%" y="437" width="0.1181%" height="15" fill="rgb(218,198,43)" fg:x="48730" fg:w="138"/><text x="41.9366%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (138 samples, 0.12%)</title><rect x="41.6866%" y="421" width="0.1181%" height="15" fill="rgb(231,104,20)" fg:x="48730" fg:w="138"/><text x="41.9366%" y="431.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (479 samples, 0.41%)</title><rect x="41.3966%" y="533" width="0.4098%" height="15" fill="rgb(254,36,13)" fg:x="48391" fg:w="479"/><text x="41.6466%" y="543.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (176 samples, 0.15%)</title><rect x="41.6558%" y="517" width="0.1506%" height="15" fill="rgb(248,14,50)" fg:x="48694" fg:w="176"/><text x="41.9058%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (170 samples, 0.15%)</title><rect x="41.6610%" y="501" width="0.1454%" height="15" fill="rgb(217,107,29)" fg:x="48700" fg:w="170"/><text x="41.9110%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (160 samples, 0.14%)</title><rect x="41.6695%" y="485" width="0.1369%" height="15" fill="rgb(251,169,33)" fg:x="48710" fg:w="160"/><text x="41.9195%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (221 samples, 0.19%)</title><rect x="42.2452%" y="389" width="0.1891%" height="15" fill="rgb(217,108,32)" fg:x="49383" fg:w="221"/><text x="42.4952%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (221 samples, 0.19%)</title><rect x="42.2452%" y="373" width="0.1891%" height="15" fill="rgb(219,66,42)" fg:x="49383" fg:w="221"/><text x="42.4952%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (221 samples, 0.19%)</title><rect x="42.2452%" y="357" width="0.1891%" height="15" fill="rgb(206,180,7)" fg:x="49383" fg:w="221"/><text x="42.4952%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (218 samples, 0.19%)</title><rect x="42.2478%" y="341" width="0.1865%" height="15" fill="rgb(208,226,31)" fg:x="49386" fg:w="218"/><text x="42.4978%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (218 samples, 0.19%)</title><rect x="42.2478%" y="325" width="0.1865%" height="15" fill="rgb(218,26,49)" fg:x="49386" fg:w="218"/><text x="42.4978%" y="335.50"></text></g><g><title>alloc::alloc::alloc (218 samples, 0.19%)</title><rect x="42.2478%" y="309" width="0.1865%" height="15" fill="rgb(233,197,48)" fg:x="49386" fg:w="218"/><text x="42.4978%" y="319.50"></text></g><g><title>__rg_alloc (218 samples, 0.19%)</title><rect x="42.2478%" y="293" width="0.1865%" height="15" fill="rgb(252,181,51)" fg:x="49386" fg:w="218"/><text x="42.4978%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (218 samples, 0.19%)</title><rect x="42.2478%" y="277" width="0.1865%" height="15" fill="rgb(253,90,19)" fg:x="49386" fg:w="218"/><text x="42.4978%" y="287.50"></text></g><g><title>sn_rust_alloc (210 samples, 0.18%)</title><rect x="42.2547%" y="261" width="0.1796%" height="15" fill="rgb(215,171,30)" fg:x="49394" fg:w="210"/><text x="42.5047%" y="271.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (12 samples, 0.01%)</title><rect x="42.4240%" y="245" width="0.0103%" height="15" fill="rgb(214,222,9)" fg:x="49592" fg:w="12"/><text x="42.6740%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (256 samples, 0.22%)</title><rect x="42.2375%" y="469" width="0.2190%" height="15" fill="rgb(223,3,22)" fg:x="49374" fg:w="256"/><text x="42.4875%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (247 samples, 0.21%)</title><rect x="42.2452%" y="453" width="0.2113%" height="15" fill="rgb(225,196,46)" fg:x="49383" fg:w="247"/><text x="42.4952%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (247 samples, 0.21%)</title><rect x="42.2452%" y="437" width="0.2113%" height="15" fill="rgb(209,110,37)" fg:x="49383" fg:w="247"/><text x="42.4952%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (247 samples, 0.21%)</title><rect x="42.2452%" y="421" width="0.2113%" height="15" fill="rgb(249,89,12)" fg:x="49383" fg:w="247"/><text x="42.4952%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (247 samples, 0.21%)</title><rect x="42.2452%" y="405" width="0.2113%" height="15" fill="rgb(226,27,33)" fg:x="49383" fg:w="247"/><text x="42.4952%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (26 samples, 0.02%)</title><rect x="42.4343%" y="389" width="0.0222%" height="15" fill="rgb(213,82,22)" fg:x="49604" fg:w="26"/><text x="42.6843%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.02%)</title><rect x="42.4343%" y="373" width="0.0222%" height="15" fill="rgb(248,140,0)" fg:x="49604" fg:w="26"/><text x="42.6843%" y="383.50"></text></g><g><title>[libc-2.31.so] (25 samples, 0.02%)</title><rect x="42.4352%" y="357" width="0.0214%" height="15" fill="rgb(228,106,3)" fg:x="49605" fg:w="25"/><text x="42.6852%" y="367.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (25 samples, 0.02%)</title><rect x="42.5241%" y="181" width="0.0214%" height="15" fill="rgb(209,23,37)" fg:x="49709" fg:w="25"/><text x="42.7741%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (78 samples, 0.07%)</title><rect x="42.4796%" y="325" width="0.0667%" height="15" fill="rgb(241,93,50)" fg:x="49657" fg:w="78"/><text x="42.7296%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (78 samples, 0.07%)</title><rect x="42.4796%" y="309" width="0.0667%" height="15" fill="rgb(253,46,43)" fg:x="49657" fg:w="78"/><text x="42.7296%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (78 samples, 0.07%)</title><rect x="42.4796%" y="293" width="0.0667%" height="15" fill="rgb(226,206,43)" fg:x="49657" fg:w="78"/><text x="42.7296%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (70 samples, 0.06%)</title><rect x="42.4865%" y="277" width="0.0599%" height="15" fill="rgb(217,54,7)" fg:x="49665" fg:w="70"/><text x="42.7365%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (70 samples, 0.06%)</title><rect x="42.4865%" y="261" width="0.0599%" height="15" fill="rgb(223,5,52)" fg:x="49665" fg:w="70"/><text x="42.7365%" y="271.50"></text></g><g><title>alloc::alloc::alloc (70 samples, 0.06%)</title><rect x="42.4865%" y="245" width="0.0599%" height="15" fill="rgb(206,52,46)" fg:x="49665" fg:w="70"/><text x="42.7365%" y="255.50"></text></g><g><title>__rg_alloc (70 samples, 0.06%)</title><rect x="42.4865%" y="229" width="0.0599%" height="15" fill="rgb(253,136,11)" fg:x="49665" fg:w="70"/><text x="42.7365%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (70 samples, 0.06%)</title><rect x="42.4865%" y="213" width="0.0599%" height="15" fill="rgb(208,106,33)" fg:x="49665" fg:w="70"/><text x="42.7365%" y="223.50"></text></g><g><title>sn_rust_alloc (67 samples, 0.06%)</title><rect x="42.4891%" y="197" width="0.0573%" height="15" fill="rgb(206,54,4)" fg:x="49668" fg:w="67"/><text x="42.7391%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (161 samples, 0.14%)</title><rect x="42.4685%" y="405" width="0.1377%" height="15" fill="rgb(213,3,15)" fg:x="49644" fg:w="161"/><text x="42.7185%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (148 samples, 0.13%)</title><rect x="42.4796%" y="389" width="0.1266%" height="15" fill="rgb(252,211,39)" fg:x="49657" fg:w="148"/><text x="42.7296%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (148 samples, 0.13%)</title><rect x="42.4796%" y="373" width="0.1266%" height="15" fill="rgb(223,6,36)" fg:x="49657" fg:w="148"/><text x="42.7296%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (148 samples, 0.13%)</title><rect x="42.4796%" y="357" width="0.1266%" height="15" fill="rgb(252,169,45)" fg:x="49657" fg:w="148"/><text x="42.7296%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (148 samples, 0.13%)</title><rect x="42.4796%" y="341" width="0.1266%" height="15" fill="rgb(212,48,26)" fg:x="49657" fg:w="148"/><text x="42.7296%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (70 samples, 0.06%)</title><rect x="42.5464%" y="325" width="0.0599%" height="15" fill="rgb(251,102,48)" fg:x="49735" fg:w="70"/><text x="42.7964%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (70 samples, 0.06%)</title><rect x="42.5464%" y="309" width="0.0599%" height="15" fill="rgb(243,208,16)" fg:x="49735" fg:w="70"/><text x="42.7964%" y="319.50"></text></g><g><title>[libc-2.31.so] (68 samples, 0.06%)</title><rect x="42.5481%" y="293" width="0.0582%" height="15" fill="rgb(219,96,24)" fg:x="49737" fg:w="68"/><text x="42.7981%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="42.6062%" y="405" width="0.0145%" height="15" fill="rgb(219,33,29)" fg:x="49805" fg:w="17"/><text x="42.8562%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="42.6097%" y="389" width="0.0111%" height="15" fill="rgb(223,176,5)" fg:x="49809" fg:w="13"/><text x="42.8597%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="42.6097%" y="373" width="0.0111%" height="15" fill="rgb(228,140,14)" fg:x="49809" fg:w="13"/><text x="42.8597%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (43 samples, 0.04%)</title><rect x="42.6268%" y="357" width="0.0368%" height="15" fill="rgb(217,179,31)" fg:x="49829" fg:w="43"/><text x="42.8768%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.04%)</title><rect x="42.6268%" y="341" width="0.0368%" height="15" fill="rgb(230,9,30)" fg:x="49829" fg:w="43"/><text x="42.8768%" y="351.50"></text></g><g><title>alloc::alloc::alloc (41 samples, 0.04%)</title><rect x="42.6285%" y="325" width="0.0351%" height="15" fill="rgb(230,136,20)" fg:x="49831" fg:w="41"/><text x="42.8785%" y="335.50"></text></g><g><title>__rg_alloc (41 samples, 0.04%)</title><rect x="42.6285%" y="309" width="0.0351%" height="15" fill="rgb(215,210,22)" fg:x="49831" fg:w="41"/><text x="42.8785%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (41 samples, 0.04%)</title><rect x="42.6285%" y="293" width="0.0351%" height="15" fill="rgb(218,43,5)" fg:x="49831" fg:w="41"/><text x="42.8785%" y="303.50"></text></g><g><title>sn_rust_alloc (41 samples, 0.04%)</title><rect x="42.6285%" y="277" width="0.0351%" height="15" fill="rgb(216,11,5)" fg:x="49831" fg:w="41"/><text x="42.8785%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (55 samples, 0.05%)</title><rect x="42.6208%" y="405" width="0.0471%" height="15" fill="rgb(209,82,29)" fg:x="49822" fg:w="55"/><text x="42.8708%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (48 samples, 0.04%)</title><rect x="42.6268%" y="389" width="0.0411%" height="15" fill="rgb(244,115,12)" fg:x="49829" fg:w="48"/><text x="42.8768%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (48 samples, 0.04%)</title><rect x="42.6268%" y="373" width="0.0411%" height="15" fill="rgb(222,82,18)" fg:x="49829" fg:w="48"/><text x="42.8768%" y="383.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (741 samples, 0.63%)</title><rect x="42.0382%" y="485" width="0.6339%" height="15" fill="rgb(249,227,8)" fg:x="49141" fg:w="741"/><text x="42.2882%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (252 samples, 0.22%)</title><rect x="42.4565%" y="469" width="0.2156%" height="15" fill="rgb(253,141,45)" fg:x="49630" fg:w="252"/><text x="42.7065%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (244 samples, 0.21%)</title><rect x="42.4634%" y="453" width="0.2087%" height="15" fill="rgb(234,184,4)" fg:x="49638" fg:w="244"/><text x="42.7134%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (244 samples, 0.21%)</title><rect x="42.4634%" y="437" width="0.2087%" height="15" fill="rgb(218,194,23)" fg:x="49638" fg:w="244"/><text x="42.7134%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (244 samples, 0.21%)</title><rect x="42.4634%" y="421" width="0.2087%" height="15" fill="rgb(235,66,41)" fg:x="49638" fg:w="244"/><text x="42.7134%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (12 samples, 0.01%)</title><rect x="42.6935%" y="405" width="0.0103%" height="15" fill="rgb(245,217,1)" fg:x="49907" fg:w="12"/><text x="42.9435%" y="415.50"></text></g><g><title>core::time::Duration::as_nanos (14 samples, 0.01%)</title><rect x="42.7038%" y="405" width="0.0120%" height="15" fill="rgb(229,91,1)" fg:x="49919" fg:w="14"/><text x="42.9538%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (58 samples, 0.05%)</title><rect x="42.7157%" y="389" width="0.0496%" height="15" fill="rgb(207,101,30)" fg:x="49933" fg:w="58"/><text x="42.9657%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (23 samples, 0.02%)</title><rect x="42.7902%" y="357" width="0.0197%" height="15" fill="rgb(223,82,49)" fg:x="50020" fg:w="23"/><text x="43.0402%" y="367.50"></text></g><g><title>core::cmp::PartialOrd::ge (23 samples, 0.02%)</title><rect x="42.7902%" y="341" width="0.0197%" height="15" fill="rgb(218,167,17)" fg:x="50020" fg:w="23"/><text x="43.0402%" y="351.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (22 samples, 0.02%)</title><rect x="42.7910%" y="325" width="0.0188%" height="15" fill="rgb(208,103,14)" fg:x="50021" fg:w="22"/><text x="43.0410%" y="335.50"></text></g><g><title>std::time::SystemTime::duration_since (122 samples, 0.10%)</title><rect x="42.7157%" y="405" width="0.1044%" height="15" fill="rgb(238,20,8)" fg:x="49933" fg:w="122"/><text x="42.9657%" y="415.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (64 samples, 0.05%)</title><rect x="42.7654%" y="389" width="0.0547%" height="15" fill="rgb(218,80,54)" fg:x="49991" fg:w="64"/><text x="43.0154%" y="399.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (64 samples, 0.05%)</title><rect x="42.7654%" y="373" width="0.0547%" height="15" fill="rgb(240,144,17)" fg:x="49991" fg:w="64"/><text x="43.0154%" y="383.50"></text></g><g><title>core::time::Duration::new (12 samples, 0.01%)</title><rect x="42.8098%" y="357" width="0.0103%" height="15" fill="rgb(245,27,50)" fg:x="50043" fg:w="12"/><text x="43.0598%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (402 samples, 0.34%)</title><rect x="42.6721%" y="485" width="0.3439%" height="15" fill="rgb(251,51,7)" fg:x="49882" fg:w="402"/><text x="42.9221%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (402 samples, 0.34%)</title><rect x="42.6721%" y="469" width="0.3439%" height="15" fill="rgb(245,217,29)" fg:x="49882" fg:w="402"/><text x="42.9221%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (395 samples, 0.34%)</title><rect x="42.6781%" y="453" width="0.3379%" height="15" fill="rgb(221,176,29)" fg:x="49889" fg:w="395"/><text x="42.9281%" y="463.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}::{{closure}} (395 samples, 0.34%)</title><rect x="42.6781%" y="437" width="0.3379%" height="15" fill="rgb(212,180,24)" fg:x="49889" fg:w="395"/><text x="42.9281%" y="447.50"></text></g><g><title>tremor_common::time::nanotime (392 samples, 0.34%)</title><rect x="42.6807%" y="421" width="0.3353%" height="15" fill="rgb(254,24,2)" fg:x="49892" fg:w="392"/><text x="42.9307%" y="431.50"></text></g><g><title>std::time::SystemTime::now (229 samples, 0.20%)</title><rect x="42.8201%" y="405" width="0.1959%" height="15" fill="rgb(230,100,2)" fg:x="50055" fg:w="229"/><text x="43.0701%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (229 samples, 0.20%)</title><rect x="42.8201%" y="389" width="0.1959%" height="15" fill="rgb(219,142,25)" fg:x="50055" fg:w="229"/><text x="43.0701%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (229 samples, 0.20%)</title><rect x="42.8201%" y="373" width="0.1959%" height="15" fill="rgb(240,73,43)" fg:x="50055" fg:w="229"/><text x="43.0701%" y="383.50"></text></g><g><title>__clock_gettime (191 samples, 0.16%)</title><rect x="42.8526%" y="357" width="0.1634%" height="15" fill="rgb(214,114,15)" fg:x="50093" fg:w="191"/><text x="43.1026%" y="367.50"></text></g><g><title>__vdso_clock_gettime (181 samples, 0.15%)</title><rect x="42.8612%" y="341" width="0.1548%" height="15" fill="rgb(207,130,4)" fg:x="50103" fg:w="181"/><text x="43.1112%" y="351.50"></text></g><g><title>[[vdso]] (159 samples, 0.14%)</title><rect x="42.8800%" y="325" width="0.1360%" height="15" fill="rgb(221,25,40)" fg:x="50125" fg:w="159"/><text x="43.1300%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (54 samples, 0.05%)</title><rect x="43.0417%" y="453" width="0.0462%" height="15" fill="rgb(241,184,7)" fg:x="50314" fg:w="54"/><text x="43.2917%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (18 samples, 0.02%)</title><rect x="43.0725%" y="437" width="0.0154%" height="15" fill="rgb(235,159,4)" fg:x="50350" fg:w="18"/><text x="43.3225%" y="447.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (338 samples, 0.29%)</title><rect x="43.2470%" y="261" width="0.2891%" height="15" fill="rgb(214,87,48)" fg:x="50554" fg:w="338"/><text x="43.4970%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (532 samples, 0.46%)</title><rect x="43.0913%" y="405" width="0.4551%" height="15" fill="rgb(246,198,24)" fg:x="50372" fg:w="532"/><text x="43.3413%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (526 samples, 0.45%)</title><rect x="43.0964%" y="389" width="0.4500%" height="15" fill="rgb(209,66,40)" fg:x="50378" fg:w="526"/><text x="43.3464%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (526 samples, 0.45%)</title><rect x="43.0964%" y="373" width="0.4500%" height="15" fill="rgb(233,147,39)" fg:x="50378" fg:w="526"/><text x="43.3464%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (524 samples, 0.45%)</title><rect x="43.0981%" y="357" width="0.4483%" height="15" fill="rgb(231,145,52)" fg:x="50380" fg:w="524"/><text x="43.3481%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (524 samples, 0.45%)</title><rect x="43.0981%" y="341" width="0.4483%" height="15" fill="rgb(206,20,26)" fg:x="50380" fg:w="524"/><text x="43.3481%" y="351.50"></text></g><g><title>alloc::alloc::alloc (524 samples, 0.45%)</title><rect x="43.0981%" y="325" width="0.4483%" height="15" fill="rgb(238,220,4)" fg:x="50380" fg:w="524"/><text x="43.3481%" y="335.50"></text></g><g><title>__rg_alloc (524 samples, 0.45%)</title><rect x="43.0981%" y="309" width="0.4483%" height="15" fill="rgb(252,195,42)" fg:x="50380" fg:w="524"/><text x="43.3481%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (524 samples, 0.45%)</title><rect x="43.0981%" y="293" width="0.4483%" height="15" fill="rgb(209,10,6)" fg:x="50380" fg:w="524"/><text x="43.3481%" y="303.50"></text></g><g><title>sn_rust_alloc (516 samples, 0.44%)</title><rect x="43.1050%" y="277" width="0.4414%" height="15" fill="rgb(229,3,52)" fg:x="50388" fg:w="516"/><text x="43.3550%" y="287.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="43.5361%" y="261" width="0.0103%" height="15" fill="rgb(253,49,37)" fg:x="50892" fg:w="12"/><text x="43.7861%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (802 samples, 0.69%)</title><rect x="43.0417%" y="469" width="0.6861%" height="15" fill="rgb(240,103,49)" fg:x="50314" fg:w="802"/><text x="43.2917%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (748 samples, 0.64%)</title><rect x="43.0879%" y="453" width="0.6399%" height="15" fill="rgb(250,182,30)" fg:x="50368" fg:w="748"/><text x="43.3379%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (748 samples, 0.64%)</title><rect x="43.0879%" y="437" width="0.6399%" height="15" fill="rgb(248,8,30)" fg:x="50368" fg:w="748"/><text x="43.3379%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (748 samples, 0.64%)</title><rect x="43.0879%" y="421" width="0.6399%" height="15" fill="rgb(237,120,30)" fg:x="50368" fg:w="748"/><text x="43.3379%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (212 samples, 0.18%)</title><rect x="43.5464%" y="405" width="0.1814%" height="15" fill="rgb(221,146,34)" fg:x="50904" fg:w="212"/><text x="43.7964%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (212 samples, 0.18%)</title><rect x="43.5464%" y="389" width="0.1814%" height="15" fill="rgb(242,55,13)" fg:x="50904" fg:w="212"/><text x="43.7964%" y="399.50"></text></g><g><title>[libc-2.31.so] (211 samples, 0.18%)</title><rect x="43.5473%" y="373" width="0.1805%" height="15" fill="rgb(242,112,31)" fg:x="50905" fg:w="211"/><text x="43.7973%" y="383.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,247 samples, 1.92%)</title><rect x="41.8064%" y="517" width="1.9222%" height="15" fill="rgb(249,192,27)" fg:x="48870" fg:w="2247"/><text x="42.0564%" y="527.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (2,230 samples, 1.91%)</title><rect x="41.8209%" y="501" width="1.9077%" height="15" fill="rgb(208,204,44)" fg:x="48887" fg:w="2230"/><text x="42.0709%" y="511.50">&lt;..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (825 samples, 0.71%)</title><rect x="43.0229%" y="485" width="0.7058%" height="15" fill="rgb(208,93,54)" fg:x="50292" fg:w="825"/><text x="43.2729%" y="495.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (4,194 samples, 3.59%)</title><rect x="40.1434%" y="581" width="3.5878%" height="15" fill="rgb(242,1,31)" fg:x="46926" fg:w="4194"/><text x="40.3934%" y="591.50">trem..</text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (2,729 samples, 2.33%)</title><rect x="41.3966%" y="565" width="2.3346%" height="15" fill="rgb(241,83,25)" fg:x="48391" fg:w="2729"/><text x="41.6466%" y="575.50">&lt;..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (2,729 samples, 2.33%)</title><rect x="41.3966%" y="549" width="2.3346%" height="15" fill="rgb(205,169,50)" fg:x="48391" fg:w="2729"/><text x="41.6466%" y="559.50">f..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,250 samples, 1.92%)</title><rect x="41.8064%" y="533" width="1.9248%" height="15" fill="rgb(239,186,37)" fg:x="48870" fg:w="2250"/><text x="42.0564%" y="543.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (13 samples, 0.01%)</title><rect x="43.7911%" y="517" width="0.0111%" height="15" fill="rgb(205,221,10)" fg:x="51190" fg:w="13"/><text x="44.0411%" y="527.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (336 samples, 0.29%)</title><rect x="43.7474%" y="533" width="0.2874%" height="15" fill="rgb(218,196,15)" fg:x="51139" fg:w="336"/><text x="43.9974%" y="543.50"></text></g><g><title>[libc-2.31.so] (272 samples, 0.23%)</title><rect x="43.8022%" y="517" width="0.2327%" height="15" fill="rgb(218,196,35)" fg:x="51203" fg:w="272"/><text x="44.0522%" y="527.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (544 samples, 0.47%)</title><rect x="43.7312%" y="565" width="0.4654%" height="15" fill="rgb(233,63,24)" fg:x="51120" fg:w="544"/><text x="43.9812%" y="575.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (544 samples, 0.47%)</title><rect x="43.7312%" y="549" width="0.4654%" height="15" fill="rgb(225,8,4)" fg:x="51120" fg:w="544"/><text x="43.9812%" y="559.50"></text></g><g><title>[libc-2.31.so] (189 samples, 0.16%)</title><rect x="44.0349%" y="533" width="0.1617%" height="15" fill="rgb(234,105,35)" fg:x="51475" fg:w="189"/><text x="44.2849%" y="543.50"></text></g><g><title>[libc-2.31.so] (76 samples, 0.07%)</title><rect x="44.2128%" y="549" width="0.0650%" height="15" fill="rgb(236,21,32)" fg:x="51683" fg:w="76"/><text x="44.4628%" y="559.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::operator::TrickleOperator as tremor_pipeline::op::Operator&gt;::on_event (144 samples, 0.12%)</title><rect x="44.2778%" y="485" width="0.1232%" height="15" fill="rgb(228,109,6)" fg:x="51759" fg:w="144"/><text x="44.5278%" y="495.50"></text></g><g><title>[libc-2.31.so] (106 samples, 0.09%)</title><rect x="44.3103%" y="469" width="0.0907%" height="15" fill="rgb(229,215,31)" fg:x="51797" fg:w="106"/><text x="44.5603%" y="479.50"></text></g><g><title>[libc-2.31.so] (72 samples, 0.06%)</title><rect x="44.5114%" y="469" width="0.0616%" height="15" fill="rgb(221,52,54)" fg:x="52032" fg:w="72"/><text x="44.7614%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (534 samples, 0.46%)</title><rect x="44.5961%" y="437" width="0.4568%" height="15" fill="rgb(252,129,43)" fg:x="52131" fg:w="534"/><text x="44.8461%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::op::EventAndInsights as core::convert::From&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt;&gt;::from (508 samples, 0.43%)</title><rect x="44.6183%" y="421" width="0.4346%" height="15" fill="rgb(248,183,27)" fg:x="52157" fg:w="508"/><text x="44.8683%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (12 samples, 0.01%)</title><rect x="45.0426%" y="405" width="0.0103%" height="15" fill="rgb(250,0,22)" fg:x="52653" fg:w="12"/><text x="45.2926%" y="415.50"></text></g><g><title>[libc-2.31.so] (88 samples, 0.08%)</title><rect x="45.0529%" y="437" width="0.0753%" height="15" fill="rgb(213,166,10)" fg:x="52665" fg:w="88"/><text x="45.3029%" y="447.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (36 samples, 0.03%)</title><rect x="45.2299%" y="325" width="0.0308%" height="15" fill="rgb(207,163,36)" fg:x="52872" fg:w="36"/><text x="45.4799%" y="335.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event::{{closure}} (797 samples, 0.68%)</title><rect x="44.5884%" y="453" width="0.6818%" height="15" fill="rgb(208,122,22)" fg:x="52122" fg:w="797"/><text x="44.8384%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (166 samples, 0.14%)</title><rect x="45.1281%" y="437" width="0.1420%" height="15" fill="rgb(207,104,49)" fg:x="52753" fg:w="166"/><text x="45.3781%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (163 samples, 0.14%)</title><rect x="45.1307%" y="421" width="0.1394%" height="15" fill="rgb(248,211,50)" fg:x="52756" fg:w="163"/><text x="45.3807%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (163 samples, 0.14%)</title><rect x="45.1307%" y="405" width="0.1394%" height="15" fill="rgb(217,13,45)" fg:x="52756" fg:w="163"/><text x="45.3807%" y="415.50"></text></g><g><title>alloc::alloc::alloc (163 samples, 0.14%)</title><rect x="45.1307%" y="389" width="0.1394%" height="15" fill="rgb(211,216,49)" fg:x="52756" fg:w="163"/><text x="45.3807%" y="399.50"></text></g><g><title>__rg_alloc (163 samples, 0.14%)</title><rect x="45.1307%" y="373" width="0.1394%" height="15" fill="rgb(221,58,53)" fg:x="52756" fg:w="163"/><text x="45.3807%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (163 samples, 0.14%)</title><rect x="45.1307%" y="357" width="0.1394%" height="15" fill="rgb(220,112,41)" fg:x="52756" fg:w="163"/><text x="45.3807%" y="367.50"></text></g><g><title>sn_rust_alloc (160 samples, 0.14%)</title><rect x="45.1333%" y="341" width="0.1369%" height="15" fill="rgb(236,38,28)" fg:x="52759" fg:w="160"/><text x="45.3833%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (897 samples, 0.77%)</title><rect x="44.5789%" y="469" width="0.7673%" height="15" fill="rgb(227,195,22)" fg:x="52111" fg:w="897"/><text x="44.8289%" y="479.50"></text></g><g><title>[libc-2.31.so] (89 samples, 0.08%)</title><rect x="45.2702%" y="453" width="0.0761%" height="15" fill="rgb(214,55,33)" fg:x="52919" fg:w="89"/><text x="45.5202%" y="463.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (1,263 samples, 1.08%)</title><rect x="44.2778%" y="549" width="1.0804%" height="15" fill="rgb(248,80,13)" fg:x="51759" fg:w="1263"/><text x="44.5278%" y="559.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,263 samples, 1.08%)</title><rect x="44.2778%" y="533" width="1.0804%" height="15" fill="rgb(238,52,6)" fg:x="51759" fg:w="1263"/><text x="44.5278%" y="543.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,263 samples, 1.08%)</title><rect x="44.2778%" y="517" width="1.0804%" height="15" fill="rgb(224,198,47)" fg:x="51759" fg:w="1263"/><text x="44.5278%" y="527.50"></text></g><g><title>&lt;tremor_pipeline::executable_graph::OperatorNode as tremor_pipeline::op::Operator&gt;::on_event (1,263 samples, 1.08%)</title><rect x="44.2778%" y="501" width="1.0804%" height="15" fill="rgb(233,171,20)" fg:x="51759" fg:w="1263"/><text x="44.5278%" y="511.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event (1,119 samples, 0.96%)</title><rect x="44.4010%" y="485" width="0.9573%" height="15" fill="rgb(241,30,25)" fg:x="51903" fg:w="1119"/><text x="44.6510%" y="495.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.01%)</title><rect x="45.4558%" y="533" width="0.0103%" height="15" fill="rgb(207,171,38)" fg:x="53136" fg:w="12"/><text x="45.7058%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.02%)</title><rect x="45.4695%" y="517" width="0.0214%" height="15" fill="rgb(234,70,1)" fg:x="53152" fg:w="25"/><text x="45.7195%" y="527.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (217 samples, 0.19%)</title><rect x="45.4695%" y="533" width="0.1856%" height="15" fill="rgb(232,178,18)" fg:x="53152" fg:w="217"/><text x="45.7195%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (192 samples, 0.16%)</title><rect x="45.4909%" y="517" width="0.1642%" height="15" fill="rgb(241,78,40)" fg:x="53177" fg:w="192"/><text x="45.7409%" y="527.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (190 samples, 0.16%)</title><rect x="45.4926%" y="501" width="0.1625%" height="15" fill="rgb(222,35,25)" fg:x="53179" fg:w="190"/><text x="45.7426%" y="511.50"></text></g><g><title>core::ptr::read (190 samples, 0.16%)</title><rect x="45.4926%" y="485" width="0.1625%" height="15" fill="rgb(207,92,16)" fg:x="53179" fg:w="190"/><text x="45.7426%" y="495.50"></text></g><g><title>[libc-2.31.so] (188 samples, 0.16%)</title><rect x="45.4943%" y="469" width="0.1608%" height="15" fill="rgb(216,59,51)" fg:x="53181" fg:w="188"/><text x="45.7443%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (237 samples, 0.20%)</title><rect x="45.6577%" y="405" width="0.2027%" height="15" fill="rgb(213,80,28)" fg:x="53372" fg:w="237"/><text x="45.9077%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (237 samples, 0.20%)</title><rect x="45.6577%" y="389" width="0.2027%" height="15" fill="rgb(220,93,7)" fg:x="53372" fg:w="237"/><text x="45.9077%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (237 samples, 0.20%)</title><rect x="45.6577%" y="373" width="0.2027%" height="15" fill="rgb(225,24,44)" fg:x="53372" fg:w="237"/><text x="45.9077%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (236 samples, 0.20%)</title><rect x="45.6585%" y="357" width="0.2019%" height="15" fill="rgb(243,74,40)" fg:x="53373" fg:w="236"/><text x="45.9085%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (236 samples, 0.20%)</title><rect x="45.6585%" y="341" width="0.2019%" height="15" fill="rgb(228,39,7)" fg:x="53373" fg:w="236"/><text x="45.9085%" y="351.50"></text></g><g><title>alloc::alloc::alloc (236 samples, 0.20%)</title><rect x="45.6585%" y="325" width="0.2019%" height="15" fill="rgb(227,79,8)" fg:x="53373" fg:w="236"/><text x="45.9085%" y="335.50"></text></g><g><title>__rg_alloc (236 samples, 0.20%)</title><rect x="45.6585%" y="309" width="0.2019%" height="15" fill="rgb(236,58,11)" fg:x="53373" fg:w="236"/><text x="45.9085%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (236 samples, 0.20%)</title><rect x="45.6585%" y="293" width="0.2019%" height="15" fill="rgb(249,63,35)" fg:x="53373" fg:w="236"/><text x="45.9085%" y="303.50"></text></g><g><title>sn_rust_alloc (226 samples, 0.19%)</title><rect x="45.6671%" y="277" width="0.1933%" height="15" fill="rgb(252,114,16)" fg:x="53383" fg:w="226"/><text x="45.9171%" y="287.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (266 samples, 0.23%)</title><rect x="45.6577%" y="533" width="0.2276%" height="15" fill="rgb(254,151,24)" fg:x="53372" fg:w="266"/><text x="45.9077%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (266 samples, 0.23%)</title><rect x="45.6577%" y="517" width="0.2276%" height="15" fill="rgb(253,54,39)" fg:x="53372" fg:w="266"/><text x="45.9077%" y="527.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (266 samples, 0.23%)</title><rect x="45.6577%" y="501" width="0.2276%" height="15" fill="rgb(243,25,45)" fg:x="53372" fg:w="266"/><text x="45.9077%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (266 samples, 0.23%)</title><rect x="45.6577%" y="485" width="0.2276%" height="15" fill="rgb(234,134,9)" fg:x="53372" fg:w="266"/><text x="45.9077%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (266 samples, 0.23%)</title><rect x="45.6577%" y="469" width="0.2276%" height="15" fill="rgb(227,166,31)" fg:x="53372" fg:w="266"/><text x="45.9077%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (266 samples, 0.23%)</title><rect x="45.6577%" y="453" width="0.2276%" height="15" fill="rgb(245,143,41)" fg:x="53372" fg:w="266"/><text x="45.9077%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (266 samples, 0.23%)</title><rect x="45.6577%" y="437" width="0.2276%" height="15" fill="rgb(238,181,32)" fg:x="53372" fg:w="266"/><text x="45.9077%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (266 samples, 0.23%)</title><rect x="45.6577%" y="421" width="0.2276%" height="15" fill="rgb(224,113,18)" fg:x="53372" fg:w="266"/><text x="45.9077%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (29 samples, 0.02%)</title><rect x="45.8604%" y="405" width="0.0248%" height="15" fill="rgb(240,229,28)" fg:x="53609" fg:w="29"/><text x="46.1104%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.02%)</title><rect x="45.8604%" y="389" width="0.0248%" height="15" fill="rgb(250,185,3)" fg:x="53609" fg:w="29"/><text x="46.1104%" y="399.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.02%)</title><rect x="45.8664%" y="373" width="0.0188%" height="15" fill="rgb(212,59,25)" fg:x="53616" fg:w="22"/><text x="46.1164%" y="383.50"></text></g><g><title>[libc-2.31.so] (496 samples, 0.42%)</title><rect x="45.8852%" y="533" width="0.4243%" height="15" fill="rgb(221,87,20)" fg:x="53638" fg:w="496"/><text x="46.1352%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (23 samples, 0.02%)</title><rect x="46.3181%" y="533" width="0.0197%" height="15" fill="rgb(213,74,28)" fg:x="54144" fg:w="23"/><text x="46.5681%" y="543.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="46.3181%" y="517" width="0.0197%" height="15" fill="rgb(224,132,34)" fg:x="54144" fg:w="23"/><text x="46.5681%" y="527.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (85 samples, 0.07%)</title><rect x="46.3694%" y="501" width="0.0727%" height="15" fill="rgb(222,101,24)" fg:x="54204" fg:w="85"/><text x="46.6194%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (80 samples, 0.07%)</title><rect x="46.3737%" y="485" width="0.0684%" height="15" fill="rgb(254,142,4)" fg:x="54209" fg:w="80"/><text x="46.6237%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (80 samples, 0.07%)</title><rect x="46.3737%" y="469" width="0.0684%" height="15" fill="rgb(230,229,49)" fg:x="54209" fg:w="80"/><text x="46.6237%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (80 samples, 0.07%)</title><rect x="46.3737%" y="453" width="0.0684%" height="15" fill="rgb(238,70,47)" fg:x="54209" fg:w="80"/><text x="46.6237%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (80 samples, 0.07%)</title><rect x="46.3737%" y="437" width="0.0684%" height="15" fill="rgb(231,160,17)" fg:x="54209" fg:w="80"/><text x="46.6237%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (80 samples, 0.07%)</title><rect x="46.3737%" y="421" width="0.0684%" height="15" fill="rgb(218,68,53)" fg:x="54209" fg:w="80"/><text x="46.6237%" y="431.50"></text></g><g><title>[libc-2.31.so] (65 samples, 0.06%)</title><rect x="46.3865%" y="405" width="0.0556%" height="15" fill="rgb(236,111,10)" fg:x="54224" fg:w="65"/><text x="46.6365%" y="415.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (113 samples, 0.10%)</title><rect x="46.3523%" y="533" width="0.0967%" height="15" fill="rgb(224,34,41)" fg:x="54184" fg:w="113"/><text x="46.6023%" y="543.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (105 samples, 0.09%)</title><rect x="46.3592%" y="517" width="0.0898%" height="15" fill="rgb(241,118,19)" fg:x="54192" fg:w="105"/><text x="46.6092%" y="527.50"></text></g><g><title>async_io::driver::block_on (8,064 samples, 6.90%)</title><rect x="39.5865%" y="885" width="6.8984%" height="15" fill="rgb(238,129,25)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="895.50">async_io:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,064 samples, 6.90%)</title><rect x="39.5865%" y="869" width="6.8984%" height="15" fill="rgb(238,22,31)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="879.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,064 samples, 6.90%)</title><rect x="39.5865%" y="853" width="6.8984%" height="15" fill="rgb(222,174,48)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="863.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::run::{{closure}} (8,064 samples, 6.90%)</title><rect x="39.5865%" y="837" width="6.8984%" height="15" fill="rgb(206,152,40)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="847.50">async_exe..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,064 samples, 6.90%)</title><rect x="39.5865%" y="821" width="6.8984%" height="15" fill="rgb(218,99,54)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="831.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,064 samples, 6.90%)</title><rect x="39.5865%" y="805" width="6.8984%" height="15" fill="rgb(220,174,26)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="815.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8,064 samples, 6.90%)</title><rect x="39.5865%" y="789" width="6.8984%" height="15" fill="rgb(245,116,9)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="799.50">async_exe..</text></g><g><title>async_task::runnable::Runnable::run (8,064 samples, 6.90%)</title><rect x="39.5865%" y="773" width="6.8984%" height="15" fill="rgb(209,72,35)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="783.50">async_tas..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,064 samples, 6.90%)</title><rect x="39.5865%" y="757" width="6.8984%" height="15" fill="rgb(226,126,21)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="767.50">async_tas..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,064 samples, 6.90%)</title><rect x="39.5865%" y="741" width="6.8984%" height="15" fill="rgb(227,192,1)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="751.50">&lt;core::pi..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,064 samples, 6.90%)</title><rect x="39.5865%" y="725" width="6.8984%" height="15" fill="rgb(237,180,29)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="735.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,064 samples, 6.90%)</title><rect x="39.5865%" y="709" width="6.8984%" height="15" fill="rgb(230,197,35)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="719.50">async_exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,064 samples, 6.90%)</title><rect x="39.5865%" y="693" width="6.8984%" height="15" fill="rgb(246,193,31)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="703.50">&lt;async_st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,064 samples, 6.90%)</title><rect x="39.5865%" y="677" width="6.8984%" height="15" fill="rgb(241,36,4)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="687.50">async_std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,064 samples, 6.90%)</title><rect x="39.5865%" y="661" width="6.8984%" height="15" fill="rgb(241,130,17)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="671.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,064 samples, 6.90%)</title><rect x="39.5865%" y="645" width="6.8984%" height="15" fill="rgb(206,137,32)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="655.50">std::thre..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,064 samples, 6.90%)</title><rect x="39.5865%" y="629" width="6.8984%" height="15" fill="rgb(237,228,51)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="639.50">async_std..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,064 samples, 6.90%)</title><rect x="39.5865%" y="613" width="6.8984%" height="15" fill="rgb(243,6,42)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="623.50">&lt;async_st..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,064 samples, 6.90%)</title><rect x="39.5865%" y="597" width="6.8984%" height="15" fill="rgb(251,74,28)" fg:x="46275" fg:w="8064"/><text x="39.8365%" y="607.50">&lt;core::fu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,219 samples, 2.75%)</title><rect x="43.7312%" y="581" width="2.7537%" height="15" fill="rgb(218,20,49)" fg:x="51120" fg:w="3219"/><text x="43.9812%" y="591.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,675 samples, 2.29%)</title><rect x="44.1966%" y="565" width="2.2884%" height="15" fill="rgb(238,28,14)" fg:x="51664" fg:w="2675"/><text x="44.4466%" y="575.50">&lt;..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,317 samples, 1.13%)</title><rect x="45.3583%" y="549" width="1.1266%" height="15" fill="rgb(229,40,46)" fg:x="53022" fg:w="1317"/><text x="45.6083%" y="559.50"></text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (42 samples, 0.04%)</title><rect x="46.4490%" y="533" width="0.0359%" height="15" fill="rgb(244,195,20)" fg:x="54297" fg:w="42"/><text x="46.6990%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (42 samples, 0.04%)</title><rect x="46.4490%" y="517" width="0.0359%" height="15" fill="rgb(253,56,35)" fg:x="54297" fg:w="42"/><text x="46.6990%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (42 samples, 0.04%)</title><rect x="46.4490%" y="501" width="0.0359%" height="15" fill="rgb(210,149,44)" fg:x="54297" fg:w="42"/><text x="46.6990%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (35 samples, 0.03%)</title><rect x="46.4550%" y="485" width="0.0299%" height="15" fill="rgb(240,135,12)" fg:x="54304" fg:w="35"/><text x="46.7050%" y="495.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (16 samples, 0.01%)</title><rect x="46.4866%" y="885" width="0.0137%" height="15" fill="rgb(251,24,50)" fg:x="54341" fg:w="16"/><text x="46.7366%" y="895.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (258 samples, 0.22%)</title><rect x="46.6098%" y="517" width="0.2207%" height="15" fill="rgb(243,200,47)" fg:x="54485" fg:w="258"/><text x="46.8598%" y="527.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (258 samples, 0.22%)</title><rect x="46.6098%" y="501" width="0.2207%" height="15" fill="rgb(224,166,26)" fg:x="54485" fg:w="258"/><text x="46.8598%" y="511.50"></text></g><g><title>&lt;halfbrown::iter::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 0.13%)</title><rect x="46.8305%" y="517" width="0.1317%" height="15" fill="rgb(233,0,47)" fg:x="54743" fg:w="154"/><text x="47.0805%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (70 samples, 0.06%)</title><rect x="46.9024%" y="501" width="0.0599%" height="15" fill="rgb(253,80,5)" fg:x="54827" fg:w="70"/><text x="47.1524%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (60 samples, 0.05%)</title><rect x="46.9109%" y="485" width="0.0513%" height="15" fill="rgb(214,133,25)" fg:x="54837" fg:w="60"/><text x="47.1609%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (60 samples, 0.05%)</title><rect x="46.9109%" y="469" width="0.0513%" height="15" fill="rgb(209,27,14)" fg:x="54837" fg:w="60"/><text x="47.1609%" y="479.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::is_empty (112 samples, 0.10%)</title><rect x="46.9623%" y="517" width="0.0958%" height="15" fill="rgb(219,102,51)" fg:x="54897" fg:w="112"/><text x="47.2123%" y="527.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::is_empty (13 samples, 0.01%)</title><rect x="47.0469%" y="501" width="0.0111%" height="15" fill="rgb(237,18,16)" fg:x="54996" fg:w="13"/><text x="47.2969%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (13 samples, 0.01%)</title><rect x="47.0469%" y="485" width="0.0111%" height="15" fill="rgb(241,85,17)" fg:x="54996" fg:w="13"/><text x="47.2969%" y="495.50"></text></g><g><title>&lt;value_trait::generator::WriterGenerator&lt;W,V&gt; as value_trait::generator::BaseGenerator&gt;::get_writer (33 samples, 0.03%)</title><rect x="47.0666%" y="501" width="0.0282%" height="15" fill="rgb(236,90,42)" fg:x="55019" fg:w="33"/><text x="47.3166%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (35 samples, 0.03%)</title><rect x="47.1154%" y="437" width="0.0299%" height="15" fill="rgb(249,57,21)" fg:x="55076" fg:w="35"/><text x="47.3654%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (209 samples, 0.18%)</title><rect x="47.1453%" y="437" width="0.1788%" height="15" fill="rgb(243,12,36)" fg:x="55111" fg:w="209"/><text x="47.3953%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (181 samples, 0.15%)</title><rect x="47.1693%" y="421" width="0.1548%" height="15" fill="rgb(253,128,47)" fg:x="55139" fg:w="181"/><text x="47.4193%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (181 samples, 0.15%)</title><rect x="47.1693%" y="405" width="0.1548%" height="15" fill="rgb(207,33,20)" fg:x="55139" fg:w="181"/><text x="47.4193%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (59 samples, 0.05%)</title><rect x="47.2736%" y="389" width="0.0505%" height="15" fill="rgb(233,215,35)" fg:x="55261" fg:w="59"/><text x="47.5236%" y="399.50"></text></g><g><title>value_trait::generator::BaseGenerator::write (585 samples, 0.50%)</title><rect x="47.0666%" y="517" width="0.5004%" height="15" fill="rgb(249,188,52)" fg:x="55019" fg:w="585"/><text x="47.3166%" y="527.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (552 samples, 0.47%)</title><rect x="47.0949%" y="501" width="0.4722%" height="15" fill="rgb(225,12,32)" fg:x="55052" fg:w="552"/><text x="47.3449%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (552 samples, 0.47%)</title><rect x="47.0949%" y="485" width="0.4722%" height="15" fill="rgb(247,98,14)" fg:x="55052" fg:w="552"/><text x="47.3449%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (552 samples, 0.47%)</title><rect x="47.0949%" y="469" width="0.4722%" height="15" fill="rgb(247,219,48)" fg:x="55052" fg:w="552"/><text x="47.3449%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (552 samples, 0.47%)</title><rect x="47.0949%" y="453" width="0.4722%" height="15" fill="rgb(253,60,48)" fg:x="55052" fg:w="552"/><text x="47.3449%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (284 samples, 0.24%)</title><rect x="47.3241%" y="437" width="0.2430%" height="15" fill="rgb(245,15,52)" fg:x="55320" fg:w="284"/><text x="47.5741%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (314 samples, 0.27%)</title><rect x="48.6338%" y="501" width="0.2686%" height="15" fill="rgb(220,133,28)" fg:x="56851" fg:w="314"/><text x="48.8838%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (314 samples, 0.27%)</title><rect x="48.6338%" y="485" width="0.2686%" height="15" fill="rgb(217,180,4)" fg:x="56851" fg:w="314"/><text x="48.8838%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (174 samples, 0.15%)</title><rect x="48.9615%" y="421" width="0.1489%" height="15" fill="rgb(251,24,1)" fg:x="57234" fg:w="174"/><text x="49.2115%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (142 samples, 0.12%)</title><rect x="48.9888%" y="405" width="0.1215%" height="15" fill="rgb(212,185,49)" fg:x="57266" fg:w="142"/><text x="49.2388%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (80 samples, 0.07%)</title><rect x="49.0419%" y="389" width="0.0684%" height="15" fill="rgb(215,175,22)" fg:x="57328" fg:w="80"/><text x="49.2919%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (428 samples, 0.37%)</title><rect x="49.1103%" y="421" width="0.3661%" height="15" fill="rgb(250,205,14)" fg:x="57408" fg:w="428"/><text x="49.3603%" y="431.50"></text></g><g><title>[libc-2.31.so] (373 samples, 0.32%)</title><rect x="49.1574%" y="405" width="0.3191%" height="15" fill="rgb(225,211,22)" fg:x="57463" fg:w="373"/><text x="49.4074%" y="415.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (3,479 samples, 2.98%)</title><rect x="46.5063%" y="709" width="2.9761%" height="15" fill="rgb(251,179,42)" fg:x="54364" fg:w="3479"/><text x="46.7563%" y="719.50">tre..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,479 samples, 2.98%)</title><rect x="46.5063%" y="693" width="2.9761%" height="15" fill="rgb(208,216,51)" fg:x="54364" fg:w="3479"/><text x="46.7563%" y="703.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,479 samples, 2.98%)</title><rect x="46.5063%" y="677" width="2.9761%" height="15" fill="rgb(235,36,11)" fg:x="54364" fg:w="3479"/><text x="46.7563%" y="687.50">&lt;co..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (3,479 samples, 2.98%)</title><rect x="46.5063%" y="661" width="2.9761%" height="15" fill="rgb(213,189,28)" fg:x="54364" fg:w="3479"/><text x="46.7563%" y="671.50">&lt;tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (3,479 samples, 2.98%)</title><rect x="46.5063%" y="645" width="2.9761%" height="15" fill="rgb(227,203,42)" fg:x="54364" fg:w="3479"/><text x="46.7563%" y="655.50">tre..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (3,479 samples, 2.98%)</title><rect x="46.5063%" y="629" width="2.9761%" height="15" fill="rgb(244,72,36)" fg:x="54364" fg:w="3479"/><text x="46.7563%" y="639.50">tre..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (3,479 samples, 2.98%)</title><rect x="46.5063%" y="613" width="2.9761%" height="15" fill="rgb(213,53,17)" fg:x="54364" fg:w="3479"/><text x="46.7563%" y="623.50">tre..</text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode (3,479 samples, 2.98%)</title><rect x="46.5063%" y="597" width="2.9761%" height="15" fill="rgb(207,167,3)" fg:x="54364" fg:w="3479"/><text x="46.7563%" y="607.50">&lt;tr..</text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode_into (3,479 samples, 2.98%)</title><rect x="46.5063%" y="581" width="2.9761%" height="15" fill="rgb(216,98,30)" fg:x="54364" fg:w="3479"/><text x="46.7563%" y="591.50">&lt;tr..</text></g><g><title>tremor_value::value::serialize::&lt;impl value_trait::Writable for tremor_value::value::Value&gt;::write (3,479 samples, 2.98%)</title><rect x="46.5063%" y="565" width="2.9761%" height="15" fill="rgb(236,123,15)" fg:x="54364" fg:w="3479"/><text x="46.7563%" y="575.50">tre..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (3,479 samples, 2.98%)</title><rect x="46.5063%" y="549" width="2.9761%" height="15" fill="rgb(248,81,50)" fg:x="54364" fg:w="3479"/><text x="46.7563%" y="559.50">tre..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_object (3,462 samples, 2.96%)</title><rect x="46.5208%" y="533" width="2.9616%" height="15" fill="rgb(214,120,4)" fg:x="54381" fg:w="3462"/><text x="46.7708%" y="543.50">tre..</text></g><g><title>value_trait::generator::BaseGenerator::write_simple_str_content (2,239 samples, 1.92%)</title><rect x="47.5671%" y="517" width="1.9154%" height="15" fill="rgb(208,179,34)" fg:x="55604" fg:w="2239"/><text x="47.8171%" y="527.50">v..</text></g><g><title>value_trait::generator::BaseGenerator::write (678 samples, 0.58%)</title><rect x="48.9024%" y="501" width="0.5800%" height="15" fill="rgb(227,140,7)" fg:x="57165" fg:w="678"/><text x="49.1524%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (672 samples, 0.57%)</title><rect x="48.9076%" y="485" width="0.5749%" height="15" fill="rgb(214,22,6)" fg:x="57171" fg:w="672"/><text x="49.1576%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (672 samples, 0.57%)</title><rect x="48.9076%" y="469" width="0.5749%" height="15" fill="rgb(207,137,27)" fg:x="57171" fg:w="672"/><text x="49.1576%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (672 samples, 0.57%)</title><rect x="48.9076%" y="453" width="0.5749%" height="15" fill="rgb(210,8,46)" fg:x="57171" fg:w="672"/><text x="49.1576%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (672 samples, 0.57%)</title><rect x="48.9076%" y="437" width="0.5749%" height="15" fill="rgb(240,16,54)" fg:x="57171" fg:w="672"/><text x="49.1576%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (16 samples, 0.01%)</title><rect x="49.4978%" y="421" width="0.0137%" height="15" fill="rgb(211,209,29)" fg:x="57861" fg:w="16"/><text x="49.7478%" y="431.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="49.4978%" y="405" width="0.0137%" height="15" fill="rgb(226,228,24)" fg:x="57861" fg:w="16"/><text x="49.7478%" y="415.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.01%)</title><rect x="49.4978%" y="389" width="0.0137%" height="15" fill="rgb(222,84,9)" fg:x="57861" fg:w="16"/><text x="49.7478%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (16 samples, 0.01%)</title><rect x="49.4978%" y="373" width="0.0137%" height="15" fill="rgb(234,203,30)" fg:x="57861" fg:w="16"/><text x="49.7478%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (16 samples, 0.01%)</title><rect x="49.4978%" y="357" width="0.0137%" height="15" fill="rgb(238,109,14)" fg:x="57861" fg:w="16"/><text x="49.7478%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_swap (16 samples, 0.01%)</title><rect x="49.4978%" y="341" width="0.0137%" height="15" fill="rgb(233,206,34)" fg:x="57861" fg:w="16"/><text x="49.7478%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (16 samples, 0.01%)</title><rect x="49.5244%" y="341" width="0.0137%" height="15" fill="rgb(220,167,47)" fg:x="57892" fg:w="16"/><text x="49.7744%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_swap (16 samples, 0.01%)</title><rect x="49.5244%" y="325" width="0.0137%" height="15" fill="rgb(238,105,10)" fg:x="57892" fg:w="16"/><text x="49.7744%" y="335.50"></text></g><g><title>parking::Unparker::unpark (23 samples, 0.02%)</title><rect x="49.5218%" y="373" width="0.0197%" height="15" fill="rgb(213,227,17)" fg:x="57889" fg:w="23"/><text x="49.7718%" y="383.50"></text></g><g><title>parking::Inner::unpark (21 samples, 0.02%)</title><rect x="49.5235%" y="357" width="0.0180%" height="15" fill="rgb(217,132,38)" fg:x="57891" fg:w="21"/><text x="49.7735%" y="367.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (34 samples, 0.03%)</title><rect x="49.5132%" y="389" width="0.0291%" height="15" fill="rgb(242,146,4)" fg:x="57879" fg:w="34"/><text x="49.7632%" y="399.50"></text></g><g><title>core::task::wake::Waker::wake (47 samples, 0.04%)</title><rect x="49.5132%" y="421" width="0.0402%" height="15" fill="rgb(212,61,9)" fg:x="57879" fg:w="47"/><text x="49.7632%" y="431.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (47 samples, 0.04%)</title><rect x="49.5132%" y="405" width="0.0402%" height="15" fill="rgb(247,126,22)" fg:x="57879" fg:w="47"/><text x="49.7632%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="49.5423%" y="389" width="0.0111%" height="15" fill="rgb(220,196,2)" fg:x="57913" fg:w="13"/><text x="49.7923%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="49.5423%" y="373" width="0.0111%" height="15" fill="rgb(208,46,4)" fg:x="57913" fg:w="13"/><text x="49.7923%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.01%)</title><rect x="49.5432%" y="357" width="0.0103%" height="15" fill="rgb(252,104,46)" fg:x="57914" fg:w="12"/><text x="49.7932%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.01%)</title><rect x="49.5432%" y="341" width="0.0103%" height="15" fill="rgb(237,152,48)" fg:x="57914" fg:w="12"/><text x="49.7932%" y="351.50"></text></g><g><title>async_executor::State::notify (88 samples, 0.08%)</title><rect x="49.4961%" y="437" width="0.0753%" height="15" fill="rgb(221,59,37)" fg:x="57859" fg:w="88"/><text x="49.7461%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.02%)</title><rect x="49.5534%" y="421" width="0.0180%" height="15" fill="rgb(209,202,51)" fg:x="57926" fg:w="21"/><text x="49.8034%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (18 samples, 0.02%)</title><rect x="49.5560%" y="405" width="0.0154%" height="15" fill="rgb(228,81,30)" fg:x="57929" fg:w="18"/><text x="49.8060%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (18 samples, 0.02%)</title><rect x="49.5560%" y="389" width="0.0154%" height="15" fill="rgb(227,42,39)" fg:x="57929" fg:w="18"/><text x="49.8060%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (18 samples, 0.02%)</title><rect x="49.5774%" y="405" width="0.0154%" height="15" fill="rgb(221,26,2)" fg:x="57954" fg:w="18"/><text x="49.8274%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (18 samples, 0.02%)</title><rect x="49.5774%" y="389" width="0.0154%" height="15" fill="rgb(254,61,31)" fg:x="57954" fg:w="18"/><text x="49.8274%" y="399.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (116 samples, 0.10%)</title><rect x="49.4961%" y="453" width="0.0992%" height="15" fill="rgb(222,173,38)" fg:x="57859" fg:w="116"/><text x="49.7461%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (28 samples, 0.02%)</title><rect x="49.5714%" y="437" width="0.0240%" height="15" fill="rgb(218,50,12)" fg:x="57947" fg:w="28"/><text x="49.8214%" y="447.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (27 samples, 0.02%)</title><rect x="49.5723%" y="421" width="0.0231%" height="15" fill="rgb(223,88,40)" fg:x="57948" fg:w="27"/><text x="49.8223%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (24 samples, 0.02%)</title><rect x="49.5954%" y="453" width="0.0205%" height="15" fill="rgb(237,54,19)" fg:x="57975" fg:w="24"/><text x="49.8454%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (24 samples, 0.02%)</title><rect x="49.5954%" y="437" width="0.0205%" height="15" fill="rgb(251,129,25)" fg:x="57975" fg:w="24"/><text x="49.8454%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (167 samples, 0.14%)</title><rect x="49.4824%" y="629" width="0.1429%" height="15" fill="rgb(238,97,19)" fg:x="57843" fg:w="167"/><text x="49.7324%" y="639.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (167 samples, 0.14%)</title><rect x="49.4824%" y="613" width="0.1429%" height="15" fill="rgb(240,169,18)" fg:x="57843" fg:w="167"/><text x="49.7324%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (167 samples, 0.14%)</title><rect x="49.4824%" y="597" width="0.1429%" height="15" fill="rgb(230,187,49)" fg:x="57843" fg:w="167"/><text x="49.7324%" y="607.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (167 samples, 0.14%)</title><rect x="49.4824%" y="581" width="0.1429%" height="15" fill="rgb(209,44,26)" fg:x="57843" fg:w="167"/><text x="49.7324%" y="591.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (167 samples, 0.14%)</title><rect x="49.4824%" y="565" width="0.1429%" height="15" fill="rgb(244,0,6)" fg:x="57843" fg:w="167"/><text x="49.7324%" y="575.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (167 samples, 0.14%)</title><rect x="49.4824%" y="549" width="0.1429%" height="15" fill="rgb(248,18,21)" fg:x="57843" fg:w="167"/><text x="49.7324%" y="559.50"></text></g><g><title>event_listener::Event::notify (167 samples, 0.14%)</title><rect x="49.4824%" y="533" width="0.1429%" height="15" fill="rgb(245,180,19)" fg:x="57843" fg:w="167"/><text x="49.7324%" y="543.50"></text></g><g><title>event_listener::List::notify (165 samples, 0.14%)</title><rect x="49.4842%" y="517" width="0.1412%" height="15" fill="rgb(252,118,36)" fg:x="57845" fg:w="165"/><text x="49.7342%" y="527.50"></text></g><g><title>core::task::wake::Waker::wake (161 samples, 0.14%)</title><rect x="49.4876%" y="501" width="0.1377%" height="15" fill="rgb(210,224,19)" fg:x="57849" fg:w="161"/><text x="49.7376%" y="511.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (160 samples, 0.14%)</title><rect x="49.4884%" y="485" width="0.1369%" height="15" fill="rgb(218,30,24)" fg:x="57850" fg:w="160"/><text x="49.7384%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (153 samples, 0.13%)</title><rect x="49.4944%" y="469" width="0.1309%" height="15" fill="rgb(219,75,50)" fg:x="57857" fg:w="153"/><text x="49.7444%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.03%)</title><rect x="50.1814%" y="613" width="0.0257%" height="15" fill="rgb(234,72,50)" fg:x="58660" fg:w="30"/><text x="50.4314%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (69 samples, 0.06%)</title><rect x="50.3456%" y="517" width="0.0590%" height="15" fill="rgb(219,100,48)" fg:x="58852" fg:w="69"/><text x="50.5956%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (69 samples, 0.06%)</title><rect x="50.3456%" y="501" width="0.0590%" height="15" fill="rgb(253,5,41)" fg:x="58852" fg:w="69"/><text x="50.5956%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (69 samples, 0.06%)</title><rect x="50.3456%" y="485" width="0.0590%" height="15" fill="rgb(247,181,11)" fg:x="58852" fg:w="69"/><text x="50.5956%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (66 samples, 0.06%)</title><rect x="50.3482%" y="469" width="0.0565%" height="15" fill="rgb(222,223,25)" fg:x="58855" fg:w="66"/><text x="50.5982%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (66 samples, 0.06%)</title><rect x="50.3482%" y="453" width="0.0565%" height="15" fill="rgb(214,198,28)" fg:x="58855" fg:w="66"/><text x="50.5982%" y="463.50"></text></g><g><title>alloc::alloc::alloc (66 samples, 0.06%)</title><rect x="50.3482%" y="437" width="0.0565%" height="15" fill="rgb(230,46,43)" fg:x="58855" fg:w="66"/><text x="50.5982%" y="447.50"></text></g><g><title>__rg_alloc (66 samples, 0.06%)</title><rect x="50.3482%" y="421" width="0.0565%" height="15" fill="rgb(233,65,53)" fg:x="58855" fg:w="66"/><text x="50.5982%" y="431.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (66 samples, 0.06%)</title><rect x="50.3482%" y="405" width="0.0565%" height="15" fill="rgb(221,121,27)" fg:x="58855" fg:w="66"/><text x="50.5982%" y="415.50"></text></g><g><title>sn_rust_alloc (55 samples, 0.05%)</title><rect x="50.3576%" y="389" width="0.0471%" height="15" fill="rgb(247,70,47)" fg:x="58866" fg:w="55"/><text x="50.6076%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (114 samples, 0.10%)</title><rect x="50.3353%" y="597" width="0.0975%" height="15" fill="rgb(228,85,35)" fg:x="58840" fg:w="114"/><text x="50.5853%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (102 samples, 0.09%)</title><rect x="50.3456%" y="581" width="0.0873%" height="15" fill="rgb(209,50,18)" fg:x="58852" fg:w="102"/><text x="50.5956%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (102 samples, 0.09%)</title><rect x="50.3456%" y="565" width="0.0873%" height="15" fill="rgb(250,19,35)" fg:x="58852" fg:w="102"/><text x="50.5956%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (102 samples, 0.09%)</title><rect x="50.3456%" y="549" width="0.0873%" height="15" fill="rgb(253,107,29)" fg:x="58852" fg:w="102"/><text x="50.5956%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (102 samples, 0.09%)</title><rect x="50.3456%" y="533" width="0.0873%" height="15" fill="rgb(252,179,29)" fg:x="58852" fg:w="102"/><text x="50.5956%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (33 samples, 0.03%)</title><rect x="50.4046%" y="517" width="0.0282%" height="15" fill="rgb(238,194,6)" fg:x="58921" fg:w="33"/><text x="50.6546%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.03%)</title><rect x="50.4046%" y="501" width="0.0282%" height="15" fill="rgb(238,164,29)" fg:x="58921" fg:w="33"/><text x="50.6546%" y="511.50"></text></g><g><title>[libc-2.31.so] (26 samples, 0.02%)</title><rect x="50.4106%" y="485" width="0.0222%" height="15" fill="rgb(224,25,9)" fg:x="58928" fg:w="26"/><text x="50.6606%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (45 samples, 0.04%)</title><rect x="50.4363%" y="453" width="0.0385%" height="15" fill="rgb(244,153,23)" fg:x="58958" fg:w="45"/><text x="50.6863%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (45 samples, 0.04%)</title><rect x="50.4363%" y="437" width="0.0385%" height="15" fill="rgb(212,203,14)" fg:x="58958" fg:w="45"/><text x="50.6863%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (45 samples, 0.04%)</title><rect x="50.4363%" y="421" width="0.0385%" height="15" fill="rgb(220,164,20)" fg:x="58958" fg:w="45"/><text x="50.6863%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.03%)</title><rect x="50.4406%" y="405" width="0.0342%" height="15" fill="rgb(222,203,48)" fg:x="58963" fg:w="40"/><text x="50.6906%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.03%)</title><rect x="50.4406%" y="389" width="0.0342%" height="15" fill="rgb(215,159,22)" fg:x="58963" fg:w="40"/><text x="50.6906%" y="399.50"></text></g><g><title>alloc::alloc::alloc (40 samples, 0.03%)</title><rect x="50.4406%" y="373" width="0.0342%" height="15" fill="rgb(216,183,47)" fg:x="58963" fg:w="40"/><text x="50.6906%" y="383.50"></text></g><g><title>__rg_alloc (40 samples, 0.03%)</title><rect x="50.4406%" y="357" width="0.0342%" height="15" fill="rgb(229,195,25)" fg:x="58963" fg:w="40"/><text x="50.6906%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (40 samples, 0.03%)</title><rect x="50.4406%" y="341" width="0.0342%" height="15" fill="rgb(224,132,51)" fg:x="58963" fg:w="40"/><text x="50.6906%" y="351.50"></text></g><g><title>sn_rust_alloc (35 samples, 0.03%)</title><rect x="50.4448%" y="325" width="0.0299%" height="15" fill="rgb(240,63,7)" fg:x="58968" fg:w="35"/><text x="50.6948%" y="335.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (18 samples, 0.02%)</title><rect x="50.4594%" y="309" width="0.0154%" height="15" fill="rgb(249,182,41)" fg:x="58985" fg:w="18"/><text x="50.7094%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (73 samples, 0.06%)</title><rect x="50.4363%" y="533" width="0.0624%" height="15" fill="rgb(243,47,26)" fg:x="58958" fg:w="73"/><text x="50.6863%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (73 samples, 0.06%)</title><rect x="50.4363%" y="517" width="0.0624%" height="15" fill="rgb(233,48,2)" fg:x="58958" fg:w="73"/><text x="50.6863%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (73 samples, 0.06%)</title><rect x="50.4363%" y="501" width="0.0624%" height="15" fill="rgb(244,165,34)" fg:x="58958" fg:w="73"/><text x="50.6863%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (73 samples, 0.06%)</title><rect x="50.4363%" y="485" width="0.0624%" height="15" fill="rgb(207,89,7)" fg:x="58958" fg:w="73"/><text x="50.6863%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (73 samples, 0.06%)</title><rect x="50.4363%" y="469" width="0.0624%" height="15" fill="rgb(244,117,36)" fg:x="58958" fg:w="73"/><text x="50.6863%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (28 samples, 0.02%)</title><rect x="50.4748%" y="453" width="0.0240%" height="15" fill="rgb(226,144,34)" fg:x="59003" fg:w="28"/><text x="50.7248%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.02%)</title><rect x="50.4748%" y="437" width="0.0240%" height="15" fill="rgb(213,23,19)" fg:x="59003" fg:w="28"/><text x="50.7248%" y="447.50"></text></g><g><title>[libc-2.31.so] (24 samples, 0.02%)</title><rect x="50.4782%" y="421" width="0.0205%" height="15" fill="rgb(217,75,12)" fg:x="59007" fg:w="24"/><text x="50.7282%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="50.4987%" y="533" width="0.0180%" height="15" fill="rgb(224,159,17)" fg:x="59031" fg:w="21"/><text x="50.7487%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="50.5030%" y="517" width="0.0137%" height="15" fill="rgb(217,118,1)" fg:x="59036" fg:w="16"/><text x="50.7530%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="50.5030%" y="501" width="0.0137%" height="15" fill="rgb(232,180,48)" fg:x="59036" fg:w="16"/><text x="50.7530%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.03%)</title><rect x="50.5193%" y="485" width="0.0257%" height="15" fill="rgb(230,27,33)" fg:x="59055" fg:w="30"/><text x="50.7693%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.03%)</title><rect x="50.5193%" y="469" width="0.0257%" height="15" fill="rgb(205,31,21)" fg:x="59055" fg:w="30"/><text x="50.7693%" y="479.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.03%)</title><rect x="50.5193%" y="453" width="0.0257%" height="15" fill="rgb(253,59,4)" fg:x="59055" fg:w="30"/><text x="50.7693%" y="463.50"></text></g><g><title>__rg_alloc (30 samples, 0.03%)</title><rect x="50.5193%" y="437" width="0.0257%" height="15" fill="rgb(224,201,9)" fg:x="59055" fg:w="30"/><text x="50.7693%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (30 samples, 0.03%)</title><rect x="50.5193%" y="421" width="0.0257%" height="15" fill="rgb(229,206,30)" fg:x="59055" fg:w="30"/><text x="50.7693%" y="431.50"></text></g><g><title>sn_rust_alloc (25 samples, 0.02%)</title><rect x="50.5235%" y="405" width="0.0214%" height="15" fill="rgb(212,67,47)" fg:x="59060" fg:w="25"/><text x="50.7735%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (36 samples, 0.03%)</title><rect x="50.5167%" y="533" width="0.0308%" height="15" fill="rgb(211,96,50)" fg:x="59052" fg:w="36"/><text x="50.7667%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (35 samples, 0.03%)</title><rect x="50.5176%" y="517" width="0.0299%" height="15" fill="rgb(252,114,18)" fg:x="59053" fg:w="35"/><text x="50.7676%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (35 samples, 0.03%)</title><rect x="50.5176%" y="501" width="0.0299%" height="15" fill="rgb(223,58,37)" fg:x="59053" fg:w="35"/><text x="50.7676%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (140 samples, 0.12%)</title><rect x="50.4329%" y="597" width="0.1198%" height="15" fill="rgb(237,70,4)" fg:x="58954" fg:w="140"/><text x="50.6829%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (140 samples, 0.12%)</title><rect x="50.4329%" y="581" width="0.1198%" height="15" fill="rgb(244,85,46)" fg:x="58954" fg:w="140"/><text x="50.6829%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (140 samples, 0.12%)</title><rect x="50.4329%" y="565" width="0.1198%" height="15" fill="rgb(223,39,52)" fg:x="58954" fg:w="140"/><text x="50.6829%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (140 samples, 0.12%)</title><rect x="50.4329%" y="549" width="0.1198%" height="15" fill="rgb(218,200,14)" fg:x="58954" fg:w="140"/><text x="50.6829%" y="559.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (402 samples, 0.34%)</title><rect x="50.2122%" y="613" width="0.3439%" height="15" fill="rgb(208,171,16)" fg:x="58696" fg:w="402"/><text x="50.4622%" y="623.50"></text></g><g><title>[libc-2.31.so] (47 samples, 0.04%)</title><rect x="50.5560%" y="613" width="0.0402%" height="15" fill="rgb(234,200,18)" fg:x="59098" fg:w="47"/><text x="50.8060%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (212 samples, 0.18%)</title><rect x="50.6005%" y="613" width="0.1814%" height="15" fill="rgb(228,45,11)" fg:x="59150" fg:w="212"/><text x="50.8505%" y="623.50"></text></g><g><title>core::ptr::write (198 samples, 0.17%)</title><rect x="50.6125%" y="597" width="0.1694%" height="15" fill="rgb(237,182,11)" fg:x="59164" fg:w="198"/><text x="50.8625%" y="607.50"></text></g><g><title>[libc-2.31.so] (197 samples, 0.17%)</title><rect x="50.6134%" y="581" width="0.1685%" height="15" fill="rgb(241,175,49)" fg:x="59165" fg:w="197"/><text x="50.8634%" y="591.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (197 samples, 0.17%)</title><rect x="50.8204%" y="453" width="0.1685%" height="15" fill="rgb(247,38,35)" fg:x="59407" fg:w="197"/><text x="51.0704%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (249 samples, 0.21%)</title><rect x="50.7819%" y="613" width="0.2130%" height="15" fill="rgb(228,39,49)" fg:x="59362" fg:w="249"/><text x="51.0319%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (249 samples, 0.21%)</title><rect x="50.7819%" y="597" width="0.2130%" height="15" fill="rgb(226,101,26)" fg:x="59362" fg:w="249"/><text x="51.0319%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (241 samples, 0.21%)</title><rect x="50.7887%" y="581" width="0.2062%" height="15" fill="rgb(206,141,19)" fg:x="59370" fg:w="241"/><text x="51.0387%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (241 samples, 0.21%)</title><rect x="50.7887%" y="565" width="0.2062%" height="15" fill="rgb(211,200,13)" fg:x="59370" fg:w="241"/><text x="51.0387%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (233 samples, 0.20%)</title><rect x="50.7956%" y="549" width="0.1993%" height="15" fill="rgb(241,121,6)" fg:x="59378" fg:w="233"/><text x="51.0456%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (233 samples, 0.20%)</title><rect x="50.7956%" y="533" width="0.1993%" height="15" fill="rgb(234,221,29)" fg:x="59378" fg:w="233"/><text x="51.0456%" y="543.50"></text></g><g><title>alloc::alloc::alloc (233 samples, 0.20%)</title><rect x="50.7956%" y="517" width="0.1993%" height="15" fill="rgb(229,136,5)" fg:x="59378" fg:w="233"/><text x="51.0456%" y="527.50"></text></g><g><title>__rg_alloc (233 samples, 0.20%)</title><rect x="50.7956%" y="501" width="0.1993%" height="15" fill="rgb(238,36,11)" fg:x="59378" fg:w="233"/><text x="51.0456%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (233 samples, 0.20%)</title><rect x="50.7956%" y="485" width="0.1993%" height="15" fill="rgb(251,55,41)" fg:x="59378" fg:w="233"/><text x="51.0456%" y="495.50"></text></g><g><title>sn_rust_alloc (230 samples, 0.20%)</title><rect x="50.7981%" y="469" width="0.1968%" height="15" fill="rgb(242,34,40)" fg:x="59381" fg:w="230"/><text x="51.0481%" y="479.50"></text></g><g><title>sn_rust_dealloc (31 samples, 0.03%)</title><rect x="51.0052%" y="453" width="0.0265%" height="15" fill="rgb(215,42,17)" fg:x="59623" fg:w="31"/><text x="51.2552%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.03%)</title><rect x="51.0035%" y="517" width="0.0291%" height="15" fill="rgb(207,44,46)" fg:x="59621" fg:w="34"/><text x="51.2535%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.03%)</title><rect x="51.0035%" y="501" width="0.0291%" height="15" fill="rgb(211,206,28)" fg:x="59621" fg:w="34"/><text x="51.2535%" y="511.50"></text></g><g><title>__rg_dealloc (34 samples, 0.03%)</title><rect x="51.0035%" y="485" width="0.0291%" height="15" fill="rgb(237,167,16)" fg:x="59621" fg:w="34"/><text x="51.2535%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (34 samples, 0.03%)</title><rect x="51.0035%" y="469" width="0.0291%" height="15" fill="rgb(233,66,6)" fg:x="59621" fg:w="34"/><text x="51.2535%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (47 samples, 0.04%)</title><rect x="50.9949%" y="613" width="0.0402%" height="15" fill="rgb(246,123,29)" fg:x="59611" fg:w="47"/><text x="51.2449%" y="623.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="50.9949%" y="597" width="0.0402%" height="15" fill="rgb(209,62,40)" fg:x="59611" fg:w="47"/><text x="51.2449%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (37 samples, 0.03%)</title><rect x="51.0035%" y="581" width="0.0317%" height="15" fill="rgb(218,4,25)" fg:x="59621" fg:w="37"/><text x="51.2535%" y="591.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="51.0035%" y="565" width="0.0317%" height="15" fill="rgb(253,91,49)" fg:x="59621" fg:w="37"/><text x="51.2535%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (37 samples, 0.03%)</title><rect x="51.0035%" y="549" width="0.0317%" height="15" fill="rgb(228,155,29)" fg:x="59621" fg:w="37"/><text x="51.2535%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="51.0035%" y="533" width="0.0317%" height="15" fill="rgb(243,57,37)" fg:x="59621" fg:w="37"/><text x="51.2535%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (15 samples, 0.01%)</title><rect x="51.0351%" y="613" width="0.0128%" height="15" fill="rgb(244,167,17)" fg:x="59658" fg:w="15"/><text x="51.2851%" y="623.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (1,833 samples, 1.57%)</title><rect x="49.4824%" y="709" width="1.5681%" height="15" fill="rgb(207,181,38)" fg:x="57843" fg:w="1833"/><text x="49.7324%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,833 samples, 1.57%)</title><rect x="49.4824%" y="693" width="1.5681%" height="15" fill="rgb(211,8,23)" fg:x="57843" fg:w="1833"/><text x="49.7324%" y="703.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (1,833 samples, 1.57%)</title><rect x="49.4824%" y="677" width="1.5681%" height="15" fill="rgb(235,11,44)" fg:x="57843" fg:w="1833"/><text x="49.7324%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,833 samples, 1.57%)</title><rect x="49.4824%" y="661" width="1.5681%" height="15" fill="rgb(248,18,52)" fg:x="57843" fg:w="1833"/><text x="49.7324%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,833 samples, 1.57%)</title><rect x="49.4824%" y="645" width="1.5681%" height="15" fill="rgb(208,4,7)" fg:x="57843" fg:w="1833"/><text x="49.7324%" y="655.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (1,666 samples, 1.43%)</title><rect x="49.6253%" y="629" width="1.4252%" height="15" fill="rgb(240,17,39)" fg:x="58010" fg:w="1666"/><text x="49.8753%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (83 samples, 0.07%)</title><rect x="51.1429%" y="581" width="0.0710%" height="15" fill="rgb(207,170,3)" fg:x="59784" fg:w="83"/><text x="51.3929%" y="591.50"></text></g><g><title>core::mem::replace (83 samples, 0.07%)</title><rect x="51.1429%" y="565" width="0.0710%" height="15" fill="rgb(236,100,52)" fg:x="59784" fg:w="83"/><text x="51.3929%" y="575.50"></text></g><g><title>core::ptr::read (82 samples, 0.07%)</title><rect x="51.1438%" y="549" width="0.0701%" height="15" fill="rgb(246,78,51)" fg:x="59785" fg:w="82"/><text x="51.3938%" y="559.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (138 samples, 0.12%)</title><rect x="51.1104%" y="597" width="0.1181%" height="15" fill="rgb(211,17,15)" fg:x="59746" fg:w="138"/><text x="51.3604%" y="607.50"></text></g><g><title>core::mem::drop (17 samples, 0.01%)</title><rect x="51.2139%" y="581" width="0.0145%" height="15" fill="rgb(209,59,46)" fg:x="59867" fg:w="17"/><text x="51.4639%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (17 samples, 0.01%)</title><rect x="51.2139%" y="565" width="0.0145%" height="15" fill="rgb(210,92,25)" fg:x="59867" fg:w="17"/><text x="51.4639%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (116 samples, 0.10%)</title><rect x="51.2284%" y="597" width="0.0992%" height="15" fill="rgb(238,174,52)" fg:x="59884" fg:w="116"/><text x="51.4784%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (107 samples, 0.09%)</title><rect x="51.2361%" y="581" width="0.0915%" height="15" fill="rgb(230,73,7)" fg:x="59893" fg:w="107"/><text x="51.4861%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (107 samples, 0.09%)</title><rect x="51.2361%" y="565" width="0.0915%" height="15" fill="rgb(243,124,40)" fg:x="59893" fg:w="107"/><text x="51.4861%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (95 samples, 0.08%)</title><rect x="51.2464%" y="549" width="0.0813%" height="15" fill="rgb(244,170,11)" fg:x="59905" fg:w="95"/><text x="51.4964%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (95 samples, 0.08%)</title><rect x="51.2464%" y="533" width="0.0813%" height="15" fill="rgb(207,114,54)" fg:x="59905" fg:w="95"/><text x="51.4964%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (95 samples, 0.08%)</title><rect x="51.2464%" y="517" width="0.0813%" height="15" fill="rgb(205,42,20)" fg:x="59905" fg:w="95"/><text x="51.4964%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (95 samples, 0.08%)</title><rect x="51.2464%" y="501" width="0.0813%" height="15" fill="rgb(230,30,28)" fg:x="59905" fg:w="95"/><text x="51.4964%" y="511.50"></text></g><g><title>core::task::wake::Waker::will_wake (26 samples, 0.02%)</title><rect x="51.3328%" y="597" width="0.0222%" height="15" fill="rgb(205,73,54)" fg:x="60006" fg:w="26"/><text x="51.5828%" y="607.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (26 samples, 0.02%)</title><rect x="51.3328%" y="581" width="0.0222%" height="15" fill="rgb(254,227,23)" fg:x="60006" fg:w="26"/><text x="51.5828%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (26 samples, 0.02%)</title><rect x="51.3328%" y="565" width="0.0222%" height="15" fill="rgb(228,202,34)" fg:x="60006" fg:w="26"/><text x="51.5828%" y="575.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (26 samples, 0.02%)</title><rect x="51.3328%" y="549" width="0.0222%" height="15" fill="rgb(222,225,37)" fg:x="60006" fg:w="26"/><text x="51.5828%" y="559.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,106 samples, 0.95%)</title><rect x="51.0659%" y="613" width="0.9461%" height="15" fill="rgb(221,14,54)" fg:x="59694" fg:w="1106"/><text x="51.3159%" y="623.50"></text></g><g><title>event_listener::Inner::lock (768 samples, 0.66%)</title><rect x="51.3551%" y="597" width="0.6570%" height="15" fill="rgb(254,102,2)" fg:x="60032" fg:w="768"/><text x="51.6051%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (756 samples, 0.65%)</title><rect x="51.3653%" y="581" width="0.6467%" height="15" fill="rgb(232,104,17)" fg:x="60044" fg:w="756"/><text x="51.6153%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (749 samples, 0.64%)</title><rect x="51.3713%" y="565" width="0.6407%" height="15" fill="rgb(250,220,14)" fg:x="60051" fg:w="749"/><text x="51.6213%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (749 samples, 0.64%)</title><rect x="51.3713%" y="549" width="0.6407%" height="15" fill="rgb(241,158,9)" fg:x="60051" fg:w="749"/><text x="51.6213%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (748 samples, 0.64%)</title><rect x="51.3722%" y="533" width="0.6399%" height="15" fill="rgb(246,9,43)" fg:x="60052" fg:w="748"/><text x="51.6222%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (748 samples, 0.64%)</title><rect x="51.3722%" y="517" width="0.6399%" height="15" fill="rgb(206,73,33)" fg:x="60052" fg:w="748"/><text x="51.6222%" y="527.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,131 samples, 0.97%)</title><rect x="51.0505%" y="693" width="0.9675%" height="15" fill="rgb(222,79,8)" fg:x="59676" fg:w="1131"/><text x="51.3005%" y="703.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,131 samples, 0.97%)</title><rect x="51.0505%" y="677" width="0.9675%" height="15" fill="rgb(234,8,54)" fg:x="59676" fg:w="1131"/><text x="51.3005%" y="687.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,131 samples, 0.97%)</title><rect x="51.0505%" y="661" width="0.9675%" height="15" fill="rgb(209,134,38)" fg:x="59676" fg:w="1131"/><text x="51.3005%" y="671.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,131 samples, 0.97%)</title><rect x="51.0505%" y="645" width="0.9675%" height="15" fill="rgb(230,127,29)" fg:x="59676" fg:w="1131"/><text x="51.3005%" y="655.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,131 samples, 0.97%)</title><rect x="51.0505%" y="629" width="0.9675%" height="15" fill="rgb(242,44,41)" fg:x="59676" fg:w="1131"/><text x="51.3005%" y="639.50"></text></g><g><title>&lt;tremor_pipeline::op::EventAndInsights as core::convert::From&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt;&gt;::from (416 samples, 0.36%)</title><rect x="52.1558%" y="565" width="0.3559%" height="15" fill="rgb(222,56,43)" fg:x="60968" fg:w="416"/><text x="52.4058%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (14 samples, 0.01%)</title><rect x="52.4997%" y="549" width="0.0120%" height="15" fill="rgb(238,39,47)" fg:x="61370" fg:w="14"/><text x="52.7497%" y="559.50"></text></g><g><title>&lt;tremor_pipeline::op::EventAndInsights as core::convert::From&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt;&gt;::from (16 samples, 0.01%)</title><rect x="52.5159%" y="549" width="0.0137%" height="15" fill="rgb(226,79,43)" fg:x="61389" fg:w="16"/><text x="52.7659%" y="559.50"></text></g><g><title>&lt;tremor_pipeline::op::EventAndInsights as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (33 samples, 0.03%)</title><rect x="52.5116%" y="565" width="0.0282%" height="15" fill="rgb(242,105,53)" fg:x="61384" fg:w="33"/><text x="52.7616%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (470 samples, 0.40%)</title><rect x="52.1412%" y="581" width="0.4021%" height="15" fill="rgb(251,132,46)" fg:x="60951" fg:w="470"/><text x="52.3912%" y="591.50"></text></g><g><title>[libc-2.31.so] (324 samples, 0.28%)</title><rect x="52.5433%" y="581" width="0.2772%" height="15" fill="rgb(231,77,14)" fg:x="61421" fg:w="324"/><text x="52.7933%" y="591.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (48 samples, 0.04%)</title><rect x="52.8564%" y="469" width="0.0411%" height="15" fill="rgb(240,135,9)" fg:x="61787" fg:w="48"/><text x="53.1064%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (98 samples, 0.08%)</title><rect x="52.8205%" y="581" width="0.0838%" height="15" fill="rgb(248,109,14)" fg:x="61745" fg:w="98"/><text x="53.0705%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (98 samples, 0.08%)</title><rect x="52.8205%" y="565" width="0.0838%" height="15" fill="rgb(227,146,52)" fg:x="61745" fg:w="98"/><text x="53.0705%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (98 samples, 0.08%)</title><rect x="52.8205%" y="549" width="0.0838%" height="15" fill="rgb(232,54,3)" fg:x="61745" fg:w="98"/><text x="53.0705%" y="559.50"></text></g><g><title>alloc::alloc::alloc (98 samples, 0.08%)</title><rect x="52.8205%" y="533" width="0.0838%" height="15" fill="rgb(229,201,43)" fg:x="61745" fg:w="98"/><text x="53.0705%" y="543.50"></text></g><g><title>__rg_alloc (98 samples, 0.08%)</title><rect x="52.8205%" y="517" width="0.0838%" height="15" fill="rgb(252,161,33)" fg:x="61745" fg:w="98"/><text x="53.0705%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (98 samples, 0.08%)</title><rect x="52.8205%" y="501" width="0.0838%" height="15" fill="rgb(226,146,40)" fg:x="61745" fg:w="98"/><text x="53.0705%" y="511.50"></text></g><g><title>sn_rust_alloc (90 samples, 0.08%)</title><rect x="52.8273%" y="485" width="0.0770%" height="15" fill="rgb(219,47,25)" fg:x="61753" fg:w="90"/><text x="53.0773%" y="495.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry_mut (17 samples, 0.01%)</title><rect x="52.9120%" y="581" width="0.0145%" height="15" fill="rgb(250,135,13)" fg:x="61852" fg:w="17"/><text x="53.1620%" y="591.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (14 samples, 0.01%)</title><rect x="52.9505%" y="485" width="0.0120%" height="15" fill="rgb(219,229,18)" fg:x="61897" fg:w="14"/><text x="53.2005%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (14 samples, 0.01%)</title><rect x="52.9505%" y="469" width="0.0120%" height="15" fill="rgb(217,152,27)" fg:x="61897" fg:w="14"/><text x="53.2005%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="52.9505%" y="453" width="0.0120%" height="15" fill="rgb(225,71,47)" fg:x="61897" fg:w="14"/><text x="53.2005%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (14 samples, 0.01%)</title><rect x="52.9505%" y="437" width="0.0120%" height="15" fill="rgb(220,139,14)" fg:x="61897" fg:w="14"/><text x="53.2005%" y="447.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (310 samples, 0.27%)</title><rect x="52.9265%" y="581" width="0.2652%" height="15" fill="rgb(247,54,32)" fg:x="61869" fg:w="310"/><text x="53.1765%" y="591.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (306 samples, 0.26%)</title><rect x="52.9300%" y="565" width="0.2618%" height="15" fill="rgb(252,131,39)" fg:x="61873" fg:w="306"/><text x="53.1800%" y="575.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (306 samples, 0.26%)</title><rect x="52.9300%" y="549" width="0.2618%" height="15" fill="rgb(210,108,39)" fg:x="61873" fg:w="306"/><text x="53.1800%" y="559.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (306 samples, 0.26%)</title><rect x="52.9300%" y="533" width="0.2618%" height="15" fill="rgb(205,23,29)" fg:x="61873" fg:w="306"/><text x="53.1800%" y="543.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::search (306 samples, 0.26%)</title><rect x="52.9300%" y="517" width="0.2618%" height="15" fill="rgb(246,139,46)" fg:x="61873" fg:w="306"/><text x="53.1800%" y="527.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (282 samples, 0.24%)</title><rect x="52.9505%" y="501" width="0.2412%" height="15" fill="rgb(250,81,26)" fg:x="61897" fg:w="282"/><text x="53.2005%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (268 samples, 0.23%)</title><rect x="52.9625%" y="485" width="0.2293%" height="15" fill="rgb(214,104,7)" fg:x="61911" fg:w="268"/><text x="53.2125%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (268 samples, 0.23%)</title><rect x="52.9625%" y="469" width="0.2293%" height="15" fill="rgb(233,189,8)" fg:x="61911" fg:w="268"/><text x="53.2125%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (268 samples, 0.23%)</title><rect x="52.9625%" y="453" width="0.2293%" height="15" fill="rgb(228,141,17)" fg:x="61911" fg:w="268"/><text x="53.2125%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (268 samples, 0.23%)</title><rect x="52.9625%" y="437" width="0.2293%" height="15" fill="rgb(247,157,1)" fg:x="61911" fg:w="268"/><text x="53.2125%" y="447.50"></text></g><g><title>[libc-2.31.so] (193 samples, 0.17%)</title><rect x="53.0266%" y="421" width="0.1651%" height="15" fill="rgb(249,225,5)" fg:x="61986" fg:w="193"/><text x="53.2766%" y="431.50"></text></g><g><title>ahash::operations::folded_multiply (30 samples, 0.03%)</title><rect x="53.2037%" y="501" width="0.0257%" height="15" fill="rgb(242,55,13)" fg:x="62193" fg:w="30"/><text x="53.4537%" y="511.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (22 samples, 0.02%)</title><rect x="53.2105%" y="485" width="0.0188%" height="15" fill="rgb(230,49,50)" fg:x="62201" fg:w="22"/><text x="53.4605%" y="495.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (38 samples, 0.03%)</title><rect x="53.2037%" y="517" width="0.0325%" height="15" fill="rgb(241,111,38)" fg:x="62193" fg:w="38"/><text x="53.4537%" y="527.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (38 samples, 0.03%)</title><rect x="53.2619%" y="453" width="0.0325%" height="15" fill="rgb(252,155,4)" fg:x="62261" fg:w="38"/><text x="53.5119%" y="463.50"></text></g><g><title>ahash::operations::folded_multiply (24 samples, 0.02%)</title><rect x="53.2739%" y="437" width="0.0205%" height="15" fill="rgb(212,69,32)" fg:x="62275" fg:w="24"/><text x="53.5239%" y="447.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (20 samples, 0.02%)</title><rect x="53.2773%" y="421" width="0.0171%" height="15" fill="rgb(243,107,47)" fg:x="62279" fg:w="20"/><text x="53.5273%" y="431.50"></text></g><g><title>ahash::operations::read_small (12 samples, 0.01%)</title><rect x="53.2944%" y="453" width="0.0103%" height="15" fill="rgb(247,130,12)" fg:x="62299" fg:w="12"/><text x="53.5444%" y="463.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (79 samples, 0.07%)</title><rect x="53.2456%" y="469" width="0.0676%" height="15" fill="rgb(233,74,16)" fg:x="62242" fg:w="79"/><text x="53.4956%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (167 samples, 0.14%)</title><rect x="53.1951%" y="533" width="0.1429%" height="15" fill="rgb(208,58,18)" fg:x="62183" fg:w="167"/><text x="53.4451%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (110 samples, 0.09%)</title><rect x="53.2439%" y="517" width="0.0941%" height="15" fill="rgb(242,225,1)" fg:x="62240" fg:w="110"/><text x="53.4939%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (108 samples, 0.09%)</title><rect x="53.2456%" y="501" width="0.0924%" height="15" fill="rgb(249,39,40)" fg:x="62242" fg:w="108"/><text x="53.4956%" y="511.50"></text></g><g><title>core::hash::Hasher::write_str (108 samples, 0.09%)</title><rect x="53.2456%" y="485" width="0.0924%" height="15" fill="rgb(207,72,44)" fg:x="62242" fg:w="108"/><text x="53.4956%" y="495.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u8 (29 samples, 0.02%)</title><rect x="53.3132%" y="469" width="0.0248%" height="15" fill="rgb(215,193,12)" fg:x="62321" fg:w="29"/><text x="53.5632%" y="479.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (29 samples, 0.02%)</title><rect x="53.3132%" y="453" width="0.0248%" height="15" fill="rgb(248,41,39)" fg:x="62321" fg:w="29"/><text x="53.5632%" y="463.50"></text></g><g><title>ahash::operations::folded_multiply (19 samples, 0.02%)</title><rect x="53.3218%" y="437" width="0.0163%" height="15" fill="rgb(253,85,4)" fg:x="62331" fg:w="19"/><text x="53.5718%" y="447.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (14 samples, 0.01%)</title><rect x="53.3260%" y="421" width="0.0120%" height="15" fill="rgb(243,70,31)" fg:x="62336" fg:w="14"/><text x="53.5760%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.02%)</title><rect x="53.3722%" y="485" width="0.0240%" height="15" fill="rgb(253,195,26)" fg:x="62390" fg:w="28"/><text x="53.6222%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="53.3722%" y="501" width="0.0274%" height="15" fill="rgb(243,42,11)" fg:x="62390" fg:w="32"/><text x="53.6222%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (24 samples, 0.02%)</title><rect x="53.3996%" y="469" width="0.0205%" height="15" fill="rgb(239,66,17)" fg:x="62422" fg:w="24"/><text x="53.6496%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (24 samples, 0.02%)</title><rect x="53.3996%" y="453" width="0.0205%" height="15" fill="rgb(217,132,21)" fg:x="62422" fg:w="24"/><text x="53.6496%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (24 samples, 0.02%)</title><rect x="53.3996%" y="437" width="0.0205%" height="15" fill="rgb(252,202,21)" fg:x="62422" fg:w="24"/><text x="53.6496%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (194 samples, 0.17%)</title><rect x="53.3996%" y="485" width="0.1660%" height="15" fill="rgb(233,98,36)" fg:x="62422" fg:w="194"/><text x="53.6496%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (170 samples, 0.15%)</title><rect x="53.4201%" y="469" width="0.1454%" height="15" fill="rgb(216,153,54)" fg:x="62446" fg:w="170"/><text x="53.6701%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (170 samples, 0.15%)</title><rect x="53.4201%" y="453" width="0.1454%" height="15" fill="rgb(250,99,7)" fg:x="62446" fg:w="170"/><text x="53.6701%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (170 samples, 0.15%)</title><rect x="53.4201%" y="437" width="0.1454%" height="15" fill="rgb(207,56,50)" fg:x="62446" fg:w="170"/><text x="53.6701%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (170 samples, 0.15%)</title><rect x="53.4201%" y="421" width="0.1454%" height="15" fill="rgb(244,61,34)" fg:x="62446" fg:w="170"/><text x="53.6701%" y="431.50"></text></g><g><title>[libc-2.31.so] (67 samples, 0.06%)</title><rect x="53.5082%" y="405" width="0.0573%" height="15" fill="rgb(241,50,38)" fg:x="62549" fg:w="67"/><text x="53.7582%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (325 samples, 0.28%)</title><rect x="53.3996%" y="501" width="0.2780%" height="15" fill="rgb(212,166,30)" fg:x="62422" fg:w="325"/><text x="53.6496%" y="511.50"></text></g><g><title>&lt;lru::KeyRef&lt;K&gt; as core::borrow::Borrow&lt;K&gt;&gt;::borrow (131 samples, 0.11%)</title><rect x="53.5656%" y="485" width="0.1121%" height="15" fill="rgb(249,127,32)" fg:x="62616" fg:w="131"/><text x="53.8156%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (693 samples, 0.59%)</title><rect x="53.1951%" y="565" width="0.5928%" height="15" fill="rgb(209,103,0)" fg:x="62183" fg:w="693"/><text x="53.4451%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (693 samples, 0.59%)</title><rect x="53.1951%" y="549" width="0.5928%" height="15" fill="rgb(238,209,51)" fg:x="62183" fg:w="693"/><text x="53.4451%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (526 samples, 0.45%)</title><rect x="53.3380%" y="533" width="0.4500%" height="15" fill="rgb(237,56,23)" fg:x="62350" fg:w="526"/><text x="53.5880%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (526 samples, 0.45%)</title><rect x="53.3380%" y="517" width="0.4500%" height="15" fill="rgb(215,153,46)" fg:x="62350" fg:w="526"/><text x="53.5880%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (129 samples, 0.11%)</title><rect x="53.6776%" y="501" width="0.1104%" height="15" fill="rgb(224,49,31)" fg:x="62747" fg:w="129"/><text x="53.9276%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (129 samples, 0.11%)</title><rect x="53.6776%" y="485" width="0.1104%" height="15" fill="rgb(250,18,42)" fg:x="62747" fg:w="129"/><text x="53.9276%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (129 samples, 0.11%)</title><rect x="53.6776%" y="469" width="0.1104%" height="15" fill="rgb(215,176,39)" fg:x="62747" fg:w="129"/><text x="53.9276%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (122 samples, 0.10%)</title><rect x="53.6836%" y="453" width="0.1044%" height="15" fill="rgb(223,77,29)" fg:x="62754" fg:w="122"/><text x="53.9336%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (122 samples, 0.10%)</title><rect x="53.6836%" y="437" width="0.1044%" height="15" fill="rgb(234,94,52)" fg:x="62754" fg:w="122"/><text x="53.9336%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (122 samples, 0.10%)</title><rect x="53.6836%" y="421" width="0.1044%" height="15" fill="rgb(220,154,50)" fg:x="62754" fg:w="122"/><text x="53.9336%" y="431.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::attach (78 samples, 0.07%)</title><rect x="53.7880%" y="565" width="0.0667%" height="15" fill="rgb(212,11,10)" fg:x="62876" fg:w="78"/><text x="54.0380%" y="575.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get_mut (801 samples, 0.69%)</title><rect x="53.1917%" y="581" width="0.6852%" height="15" fill="rgb(205,166,19)" fg:x="62179" fg:w="801"/><text x="53.4417%" y="591.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::detach (26 samples, 0.02%)</title><rect x="53.8547%" y="565" width="0.0222%" height="15" fill="rgb(244,198,16)" fg:x="62954" fg:w="26"/><text x="54.1047%" y="575.50"></text></g><g><title>sn_rust_dealloc (26 samples, 0.02%)</title><rect x="53.8770%" y="581" width="0.0222%" height="15" fill="rgb(219,69,12)" fg:x="62980" fg:w="26"/><text x="54.1270%" y="591.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (135 samples, 0.12%)</title><rect x="54.0421%" y="373" width="0.1155%" height="15" fill="rgb(245,30,7)" fg:x="63173" fg:w="135"/><text x="54.2921%" y="383.50"></text></g><g><title>tremor_value::value::serialize::&lt;impl value_trait::Writable for tremor_value::value::Value&gt;::encode (313 samples, 0.27%)</title><rect x="53.9060%" y="581" width="0.2678%" height="15" fill="rgb(218,221,48)" fg:x="63014" fg:w="313"/><text x="54.1560%" y="591.50"></text></g><g><title>value_trait::generator::DumpGenerator&lt;VT&gt;::new (275 samples, 0.24%)</title><rect x="53.9385%" y="565" width="0.2353%" height="15" fill="rgb(216,66,15)" fg:x="63052" fg:w="275"/><text x="54.1885%" y="575.50"></text></g><g><title>&lt;value_trait::generator::DumpGenerator&lt;VT&gt; as core::default::Default&gt;::default (275 samples, 0.24%)</title><rect x="53.9385%" y="549" width="0.2353%" height="15" fill="rgb(226,122,50)" fg:x="63052" fg:w="275"/><text x="54.1885%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (271 samples, 0.23%)</title><rect x="53.9420%" y="533" width="0.2318%" height="15" fill="rgb(239,156,16)" fg:x="63056" fg:w="271"/><text x="54.1920%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (271 samples, 0.23%)</title><rect x="53.9420%" y="517" width="0.2318%" height="15" fill="rgb(224,27,38)" fg:x="63056" fg:w="271"/><text x="54.1920%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (271 samples, 0.23%)</title><rect x="53.9420%" y="501" width="0.2318%" height="15" fill="rgb(224,39,27)" fg:x="63056" fg:w="271"/><text x="54.1920%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (271 samples, 0.23%)</title><rect x="53.9420%" y="485" width="0.2318%" height="15" fill="rgb(215,92,29)" fg:x="63056" fg:w="271"/><text x="54.1920%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (271 samples, 0.23%)</title><rect x="53.9420%" y="469" width="0.2318%" height="15" fill="rgb(207,159,16)" fg:x="63056" fg:w="271"/><text x="54.1920%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (271 samples, 0.23%)</title><rect x="53.9420%" y="453" width="0.2318%" height="15" fill="rgb(238,163,47)" fg:x="63056" fg:w="271"/><text x="54.1920%" y="463.50"></text></g><g><title>alloc::alloc::alloc (270 samples, 0.23%)</title><rect x="53.9428%" y="437" width="0.2310%" height="15" fill="rgb(219,91,49)" fg:x="63057" fg:w="270"/><text x="54.1928%" y="447.50"></text></g><g><title>__rg_alloc (270 samples, 0.23%)</title><rect x="53.9428%" y="421" width="0.2310%" height="15" fill="rgb(227,167,31)" fg:x="63057" fg:w="270"/><text x="54.1928%" y="431.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (270 samples, 0.23%)</title><rect x="53.9428%" y="405" width="0.2310%" height="15" fill="rgb(234,80,54)" fg:x="63057" fg:w="270"/><text x="54.1928%" y="415.50"></text></g><g><title>sn_rust_alloc (265 samples, 0.23%)</title><rect x="53.9471%" y="389" width="0.2267%" height="15" fill="rgb(212,114,2)" fg:x="63062" fg:w="265"/><text x="54.1971%" y="399.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="54.1575%" y="373" width="0.0163%" height="15" fill="rgb(234,50,24)" fg:x="63308" fg:w="19"/><text x="54.4075%" y="383.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (33 samples, 0.03%)</title><rect x="54.1858%" y="501" width="0.0282%" height="15" fill="rgb(221,68,8)" fg:x="63341" fg:w="33"/><text x="54.4358%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (20 samples, 0.02%)</title><rect x="54.1969%" y="485" width="0.0171%" height="15" fill="rgb(254,180,31)" fg:x="63354" fg:w="20"/><text x="54.4469%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (20 samples, 0.02%)</title><rect x="54.1969%" y="469" width="0.0171%" height="15" fill="rgb(247,130,50)" fg:x="63354" fg:w="20"/><text x="54.4469%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (20 samples, 0.02%)</title><rect x="54.1969%" y="453" width="0.0171%" height="15" fill="rgb(211,109,4)" fg:x="63354" fg:w="20"/><text x="54.4469%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (20 samples, 0.02%)</title><rect x="54.1969%" y="437" width="0.0171%" height="15" fill="rgb(238,50,21)" fg:x="63354" fg:w="20"/><text x="54.4469%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (20 samples, 0.02%)</title><rect x="54.1969%" y="421" width="0.0171%" height="15" fill="rgb(225,57,45)" fg:x="63354" fg:w="20"/><text x="54.4469%" y="431.50"></text></g><g><title>value_trait::ValueAccess::get (48 samples, 0.04%)</title><rect x="54.1738%" y="581" width="0.0411%" height="15" fill="rgb(209,196,50)" fg:x="63327" fg:w="48"/><text x="54.4238%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (43 samples, 0.04%)</title><rect x="54.1781%" y="565" width="0.0368%" height="15" fill="rgb(242,140,13)" fg:x="63332" fg:w="43"/><text x="54.4281%" y="575.50"></text></g><g><title>value_trait::ValueAccess::get::{{closure}} (40 samples, 0.03%)</title><rect x="54.1806%" y="549" width="0.0342%" height="15" fill="rgb(217,111,7)" fg:x="63335" fg:w="40"/><text x="54.4306%" y="559.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;MapK,MapE&gt; as value_trait::object::Object&gt;::get (40 samples, 0.03%)</title><rect x="54.1806%" y="533" width="0.0342%" height="15" fill="rgb(253,193,51)" fg:x="63335" fg:w="40"/><text x="54.4306%" y="543.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (40 samples, 0.03%)</title><rect x="54.1806%" y="517" width="0.0342%" height="15" fill="rgb(252,70,29)" fg:x="63335" fg:w="40"/><text x="54.4306%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (13 samples, 0.01%)</title><rect x="54.2208%" y="565" width="0.0111%" height="15" fill="rgb(232,127,12)" fg:x="63382" fg:w="13"/><text x="54.4708%" y="575.50"></text></g><g><title>value_trait::ValueAccess::get_str (197 samples, 0.17%)</title><rect x="54.2149%" y="581" width="0.1685%" height="15" fill="rgb(211,180,21)" fg:x="63375" fg:w="197"/><text x="54.4649%" y="591.50"></text></g><g><title>value_trait::ValueAccess::get (177 samples, 0.15%)</title><rect x="54.2320%" y="565" width="0.1514%" height="15" fill="rgb(229,72,13)" fg:x="63395" fg:w="177"/><text x="54.4820%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (166 samples, 0.14%)</title><rect x="54.2414%" y="549" width="0.1420%" height="15" fill="rgb(240,211,49)" fg:x="63406" fg:w="166"/><text x="54.4914%" y="559.50"></text></g><g><title>value_trait::ValueAccess::get::{{closure}} (164 samples, 0.14%)</title><rect x="54.2431%" y="533" width="0.1403%" height="15" fill="rgb(219,149,40)" fg:x="63408" fg:w="164"/><text x="54.4931%" y="543.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;MapK,MapE&gt; as value_trait::object::Object&gt;::get (164 samples, 0.14%)</title><rect x="54.2431%" y="517" width="0.1403%" height="15" fill="rgb(210,127,46)" fg:x="63408" fg:w="164"/><text x="54.4931%" y="527.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (164 samples, 0.14%)</title><rect x="54.2431%" y="501" width="0.1403%" height="15" fill="rgb(220,106,7)" fg:x="63408" fg:w="164"/><text x="54.4931%" y="511.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (137 samples, 0.12%)</title><rect x="54.2662%" y="485" width="0.1172%" height="15" fill="rgb(249,31,22)" fg:x="63435" fg:w="137"/><text x="54.5162%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (120 samples, 0.10%)</title><rect x="54.2807%" y="469" width="0.1027%" height="15" fill="rgb(253,1,49)" fg:x="63452" fg:w="120"/><text x="54.5307%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (120 samples, 0.10%)</title><rect x="54.2807%" y="453" width="0.1027%" height="15" fill="rgb(227,144,33)" fg:x="63452" fg:w="120"/><text x="54.5307%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (120 samples, 0.10%)</title><rect x="54.2807%" y="437" width="0.1027%" height="15" fill="rgb(249,163,44)" fg:x="63452" fg:w="120"/><text x="54.5307%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (120 samples, 0.10%)</title><rect x="54.2807%" y="421" width="0.1027%" height="15" fill="rgb(234,15,39)" fg:x="63452" fg:w="120"/><text x="54.5307%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (120 samples, 0.10%)</title><rect x="54.2807%" y="405" width="0.1027%" height="15" fill="rgb(207,66,16)" fg:x="63452" fg:w="120"/><text x="54.5307%" y="415.50"></text></g><g><title>[libc-2.31.so] (89 samples, 0.08%)</title><rect x="54.3072%" y="389" width="0.0761%" height="15" fill="rgb(233,112,24)" fg:x="63483" fg:w="89"/><text x="54.5572%" y="399.50"></text></g><g><title>&lt;u64 as core::ops::arith::Add&gt;::add (57 samples, 0.05%)</title><rect x="54.4227%" y="533" width="0.0488%" height="15" fill="rgb(230,90,22)" fg:x="63618" fg:w="57"/><text x="54.6727%" y="543.50"></text></g><g><title>window::SlidingWindow&lt;T&gt;::add (76 samples, 0.07%)</title><rect x="54.4125%" y="549" width="0.0650%" height="15" fill="rgb(229,61,13)" fg:x="63606" fg:w="76"/><text x="54.6625%" y="559.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::operator::TrickleOperator as tremor_pipeline::op::Operator&gt;::on_event (2,876 samples, 2.46%)</title><rect x="52.0180%" y="613" width="2.4603%" height="15" fill="rgb(225,57,24)" fg:x="60807" fg:w="2876"/><text x="52.2680%" y="623.50">&lt;t..</text></g><g><title>&lt;tremor_pipeline::op::grouper::bucket::Grouper as tremor_pipeline::op::Operator&gt;::on_event (2,876 samples, 2.46%)</title><rect x="52.0180%" y="597" width="2.4603%" height="15" fill="rgb(208,169,48)" fg:x="60807" fg:w="2876"/><text x="52.2680%" y="607.50">&lt;t..</text></g><g><title>window::TimeWindow::inc_t (111 samples, 0.09%)</title><rect x="54.3834%" y="581" width="0.0950%" height="15" fill="rgb(244,218,51)" fg:x="63572" fg:w="111"/><text x="54.6334%" y="591.50"></text></g><g><title>window::TimeWindow::add_t (109 samples, 0.09%)</title><rect x="54.3851%" y="565" width="0.0932%" height="15" fill="rgb(214,148,10)" fg:x="63574" fg:w="109"/><text x="54.6351%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (69 samples, 0.06%)</title><rect x="54.5031%" y="565" width="0.0590%" height="15" fill="rgb(225,174,27)" fg:x="63712" fg:w="69"/><text x="54.7531%" y="575.50"></text></g><g><title>tremor_script::script::Script::run (23 samples, 0.02%)</title><rect x="54.5622%" y="565" width="0.0197%" height="15" fill="rgb(230,96,26)" fg:x="63781" fg:w="23"/><text x="54.8122%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9,443 samples, 8.08%)</title><rect x="46.5054%" y="885" width="8.0781%" height="15" fill="rgb(232,10,30)" fg:x="54363" fg:w="9443"/><text x="46.7554%" y="895.50">async_task:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9,442 samples, 8.08%)</title><rect x="46.5063%" y="869" width="8.0773%" height="15" fill="rgb(222,8,50)" fg:x="54364" fg:w="9442"/><text x="46.7563%" y="879.50">&lt;core::pin:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,442 samples, 8.08%)</title><rect x="46.5063%" y="853" width="8.0773%" height="15" fill="rgb(213,81,27)" fg:x="54364" fg:w="9442"/><text x="46.7563%" y="863.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (9,442 samples, 8.08%)</title><rect x="46.5063%" y="837" width="8.0773%" height="15" fill="rgb(245,50,10)" fg:x="54364" fg:w="9442"/><text x="46.7563%" y="847.50">async_execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (9,442 samples, 8.08%)</title><rect x="46.5063%" y="821" width="8.0773%" height="15" fill="rgb(216,100,18)" fg:x="54364" fg:w="9442"/><text x="46.7563%" y="831.50">&lt;async_std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (9,442 samples, 8.08%)</title><rect x="46.5063%" y="805" width="8.0773%" height="15" fill="rgb(236,147,54)" fg:x="54364" fg:w="9442"/><text x="46.7563%" y="815.50">async_std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,442 samples, 8.08%)</title><rect x="46.5063%" y="789" width="8.0773%" height="15" fill="rgb(205,143,26)" fg:x="54364" fg:w="9442"/><text x="46.7563%" y="799.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,442 samples, 8.08%)</title><rect x="46.5063%" y="773" width="8.0773%" height="15" fill="rgb(236,26,9)" fg:x="54364" fg:w="9442"/><text x="46.7563%" y="783.50">std::thread..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (9,442 samples, 8.08%)</title><rect x="46.5063%" y="757" width="8.0773%" height="15" fill="rgb(221,165,53)" fg:x="54364" fg:w="9442"/><text x="46.7563%" y="767.50">async_std::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (9,442 samples, 8.08%)</title><rect x="46.5063%" y="741" width="8.0773%" height="15" fill="rgb(214,110,17)" fg:x="54364" fg:w="9442"/><text x="46.7563%" y="751.50">&lt;async_std:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,442 samples, 8.08%)</title><rect x="46.5063%" y="725" width="8.0773%" height="15" fill="rgb(237,197,12)" fg:x="54364" fg:w="9442"/><text x="46.7563%" y="735.50">&lt;core::futu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (4,130 samples, 3.53%)</title><rect x="51.0505%" y="709" width="3.5331%" height="15" fill="rgb(205,84,17)" fg:x="59676" fg:w="4130"/><text x="51.3005%" y="719.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,999 samples, 2.57%)</title><rect x="52.0180%" y="693" width="2.5655%" height="15" fill="rgb(237,18,45)" fg:x="60807" fg:w="2999"/><text x="52.2680%" y="703.50">&lt;c..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (2,999 samples, 2.57%)</title><rect x="52.0180%" y="677" width="2.5655%" height="15" fill="rgb(221,87,14)" fg:x="60807" fg:w="2999"/><text x="52.2680%" y="687.50">tr..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (2,999 samples, 2.57%)</title><rect x="52.0180%" y="661" width="2.5655%" height="15" fill="rgb(238,186,15)" fg:x="60807" fg:w="2999"/><text x="52.2680%" y="671.50">tr..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (2,999 samples, 2.57%)</title><rect x="52.0180%" y="645" width="2.5655%" height="15" fill="rgb(208,115,11)" fg:x="60807" fg:w="2999"/><text x="52.2680%" y="655.50">tr..</text></g><g><title>&lt;tremor_pipeline::executable_graph::OperatorNode as tremor_pipeline::op::Operator&gt;::on_event (2,999 samples, 2.57%)</title><rect x="52.0180%" y="629" width="2.5655%" height="15" fill="rgb(254,175,0)" fg:x="60807" fg:w="2999"/><text x="52.2680%" y="639.50">&lt;t..</text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event (123 samples, 0.11%)</title><rect x="54.4783%" y="613" width="0.1052%" height="15" fill="rgb(227,24,42)" fg:x="63683" fg:w="123"/><text x="54.7283%" y="623.50"></text></g><g><title>tremor_script::srs::EventPayload::rent_mut (123 samples, 0.11%)</title><rect x="54.4783%" y="597" width="0.1052%" height="15" fill="rgb(223,211,37)" fg:x="63683" fg:w="123"/><text x="54.7283%" y="607.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event::{{closure}} (115 samples, 0.10%)</title><rect x="54.4852%" y="581" width="0.0984%" height="15" fill="rgb(235,49,27)" fg:x="63691" fg:w="115"/><text x="54.7352%" y="591.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (13 samples, 0.01%)</title><rect x="54.6015%" y="885" width="0.0111%" height="15" fill="rgb(254,97,51)" fg:x="63827" fg:w="13"/><text x="54.8515%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (81 samples, 0.07%)</title><rect x="54.6298%" y="885" width="0.0693%" height="15" fill="rgb(249,51,40)" fg:x="63860" fg:w="81"/><text x="54.8798%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (34 samples, 0.03%)</title><rect x="54.6700%" y="869" width="0.0291%" height="15" fill="rgb(210,128,45)" fg:x="63907" fg:w="34"/><text x="54.9200%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (34 samples, 0.03%)</title><rect x="54.6700%" y="853" width="0.0291%" height="15" fill="rgb(224,137,50)" fg:x="63907" fg:w="34"/><text x="54.9200%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="54.6700%" y="837" width="0.0291%" height="15" fill="rgb(242,15,9)" fg:x="63907" fg:w="34"/><text x="54.9200%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (34 samples, 0.03%)</title><rect x="54.6700%" y="821" width="0.0291%" height="15" fill="rgb(233,187,41)" fg:x="63907" fg:w="34"/><text x="54.9200%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt; (34 samples, 0.03%)</title><rect x="54.6700%" y="805" width="0.0291%" height="15" fill="rgb(227,2,29)" fg:x="63907" fg:w="34"/><text x="54.9200%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (26 samples, 0.02%)</title><rect x="54.6990%" y="885" width="0.0222%" height="15" fill="rgb(222,70,3)" fg:x="63941" fg:w="26"/><text x="54.9490%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (39 samples, 0.03%)</title><rect x="54.7273%" y="885" width="0.0334%" height="15" fill="rgb(213,11,42)" fg:x="63974" fg:w="39"/><text x="54.9773%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (24 samples, 0.02%)</title><rect x="54.7401%" y="869" width="0.0205%" height="15" fill="rgb(225,150,9)" fg:x="63989" fg:w="24"/><text x="54.9901%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (188 samples, 0.16%)</title><rect x="54.7778%" y="869" width="0.1608%" height="15" fill="rgb(230,162,45)" fg:x="64033" fg:w="188"/><text x="55.0278%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[tremor_value::value::Value]&gt; (12 samples, 0.01%)</title><rect x="54.9283%" y="853" width="0.0103%" height="15" fill="rgb(222,14,52)" fg:x="64209" fg:w="12"/><text x="55.1783%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (210 samples, 0.18%)</title><rect x="54.7606%" y="885" width="0.1796%" height="15" fill="rgb(254,198,14)" fg:x="64013" fg:w="210"/><text x="55.0106%" y="895.50"></text></g><g><title>event_listener::Event::notify (27 samples, 0.02%)</title><rect x="54.9403%" y="885" width="0.0231%" height="15" fill="rgb(220,217,30)" fg:x="64223" fg:w="27"/><text x="55.1903%" y="895.50"></text></g><g><title>event_listener::full_fence (14 samples, 0.01%)</title><rect x="54.9514%" y="869" width="0.0120%" height="15" fill="rgb(215,146,41)" fg:x="64236" fg:w="14"/><text x="55.2014%" y="879.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::insert_nocheck (54 samples, 0.05%)</title><rect x="54.9651%" y="885" width="0.0462%" height="15" fill="rgb(217,27,36)" fg:x="64252" fg:w="54"/><text x="55.2151%" y="895.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (85 samples, 0.07%)</title><rect x="55.0113%" y="885" width="0.0727%" height="15" fill="rgb(219,218,39)" fg:x="64306" fg:w="85"/><text x="55.2613%" y="895.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (30 samples, 0.03%)</title><rect x="55.0840%" y="885" width="0.0257%" height="15" fill="rgb(219,4,42)" fg:x="64391" fg:w="30"/><text x="55.3340%" y="895.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get_mut (22 samples, 0.02%)</title><rect x="55.1097%" y="885" width="0.0188%" height="15" fill="rgb(249,119,36)" fg:x="64421" fg:w="22"/><text x="55.3597%" y="895.50"></text></g><g><title>parking::Inner::park (13 samples, 0.01%)</title><rect x="55.1285%" y="885" width="0.0111%" height="15" fill="rgb(209,23,33)" fg:x="64443" fg:w="13"/><text x="55.3785%" y="895.50"></text></g><g><title>polling::Poller::wait (12 samples, 0.01%)</title><rect x="55.1405%" y="885" width="0.0103%" height="15" fill="rgb(211,10,0)" fg:x="64457" fg:w="12"/><text x="55.3905%" y="895.50"></text></g><g><title>polling::epoll::Poller::wait (34 samples, 0.03%)</title><rect x="55.1507%" y="885" width="0.0291%" height="15" fill="rgb(208,99,37)" fg:x="64469" fg:w="34"/><text x="55.4007%" y="895.50"></text></g><g><title>simd_json::stage2::&lt;impl simd_json::Deserializer&gt;::build_tape (27 samples, 0.02%)</title><rect x="55.1798%" y="885" width="0.0231%" height="15" fill="rgb(213,132,31)" fg:x="64503" fg:w="27"/><text x="55.4298%" y="895.50"></text></g><g><title>sn_rust_alloc (62 samples, 0.05%)</title><rect x="55.2029%" y="885" width="0.0530%" height="15" fill="rgb(243,129,40)" fg:x="64530" fg:w="62"/><text x="55.4529%" y="895.50"></text></g><g><title>sn_rust_dealloc (21 samples, 0.02%)</title><rect x="55.2560%" y="885" width="0.0180%" height="15" fill="rgb(210,66,33)" fg:x="64592" fg:w="21"/><text x="55.5060%" y="895.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (29 samples, 0.02%)</title><rect x="55.2868%" y="885" width="0.0248%" height="15" fill="rgb(209,189,4)" fg:x="64628" fg:w="29"/><text x="55.5368%" y="895.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (37 samples, 0.03%)</title><rect x="55.3167%" y="885" width="0.0317%" height="15" fill="rgb(214,107,37)" fg:x="64663" fg:w="37"/><text x="55.5667%" y="895.50"></text></g><g><title>sn_rust_dealloc (12 samples, 0.01%)</title><rect x="55.4852%" y="501" width="0.0103%" height="15" fill="rgb(245,88,54)" fg:x="64860" fg:w="12"/><text x="55.7352%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.03%)</title><rect x="55.4809%" y="565" width="0.0257%" height="15" fill="rgb(205,146,20)" fg:x="64855" fg:w="30"/><text x="55.7309%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.03%)</title><rect x="55.4809%" y="549" width="0.0257%" height="15" fill="rgb(220,161,25)" fg:x="64855" fg:w="30"/><text x="55.7309%" y="559.50"></text></g><g><title>__rg_dealloc (30 samples, 0.03%)</title><rect x="55.4809%" y="533" width="0.0257%" height="15" fill="rgb(215,152,15)" fg:x="64855" fg:w="30"/><text x="55.7309%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (30 samples, 0.03%)</title><rect x="55.4809%" y="517" width="0.0257%" height="15" fill="rgb(233,192,44)" fg:x="64855" fg:w="30"/><text x="55.7309%" y="527.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (13 samples, 0.01%)</title><rect x="55.4955%" y="501" width="0.0111%" height="15" fill="rgb(240,170,46)" fg:x="64872" fg:w="13"/><text x="55.7455%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::ValueDeserializer&gt; (35 samples, 0.03%)</title><rect x="55.4792%" y="645" width="0.0299%" height="15" fill="rgb(207,104,33)" fg:x="64853" fg:w="35"/><text x="55.7292%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;simd_json::Deserializer&gt; (35 samples, 0.03%)</title><rect x="55.4792%" y="629" width="0.0299%" height="15" fill="rgb(219,21,39)" fg:x="64853" fg:w="35"/><text x="55.7292%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;simd_json::value::tape::Node&gt;&gt; (35 samples, 0.03%)</title><rect x="55.4792%" y="613" width="0.0299%" height="15" fill="rgb(214,133,29)" fg:x="64853" fg:w="35"/><text x="55.7292%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;simd_json::value::tape::Node&gt;&gt; (35 samples, 0.03%)</title><rect x="55.4792%" y="597" width="0.0299%" height="15" fill="rgb(226,93,6)" fg:x="64853" fg:w="35"/><text x="55.7292%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="55.4792%" y="581" width="0.0299%" height="15" fill="rgb(252,222,34)" fg:x="64853" fg:w="35"/><text x="55.7292%" y="591.50"></text></g><g><title>simd_json::Deserializer::next_ (94 samples, 0.08%)</title><rect x="55.5126%" y="629" width="0.0804%" height="15" fill="rgb(252,92,48)" fg:x="64892" fg:w="94"/><text x="55.7626%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (52 samples, 0.04%)</title><rect x="55.7051%" y="613" width="0.0445%" height="15" fill="rgb(245,223,24)" fg:x="65117" fg:w="52"/><text x="55.9551%" y="623.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::convert::From&lt;&amp;T&gt;&gt;::from (52 samples, 0.04%)</title><rect x="55.7051%" y="597" width="0.0445%" height="15" fill="rgb(205,176,3)" fg:x="65117" fg:w="52"/><text x="55.9551%" y="607.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrowed (52 samples, 0.04%)</title><rect x="55.7051%" y="581" width="0.0445%" height="15" fill="rgb(235,151,15)" fg:x="65117" fg:w="52"/><text x="55.9551%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (53 samples, 0.05%)</title><rect x="55.7496%" y="613" width="0.0453%" height="15" fill="rgb(237,209,11)" fg:x="65169" fg:w="53"/><text x="55.9996%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (53 samples, 0.05%)</title><rect x="55.7496%" y="597" width="0.0453%" height="15" fill="rgb(243,227,24)" fg:x="65169" fg:w="53"/><text x="55.9996%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (50 samples, 0.04%)</title><rect x="55.7521%" y="581" width="0.0428%" height="15" fill="rgb(239,193,16)" fg:x="65172" fg:w="50"/><text x="56.0021%" y="591.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::insert_nocheck (53 samples, 0.05%)</title><rect x="55.7949%" y="613" width="0.0453%" height="15" fill="rgb(231,27,9)" fg:x="65222" fg:w="53"/><text x="56.0449%" y="623.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (362 samples, 0.31%)</title><rect x="55.9147%" y="421" width="0.3097%" height="15" fill="rgb(219,169,10)" fg:x="65362" fg:w="362"/><text x="56.1647%" y="431.50"></text></g><g><title>halfbrown::HashMap&lt;K,V&gt;::with_capacity (466 samples, 0.40%)</title><rect x="55.8402%" y="613" width="0.3986%" height="15" fill="rgb(244,229,43)" fg:x="65275" fg:w="466"/><text x="56.0902%" y="623.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V&gt;::with_capacity (462 samples, 0.40%)</title><rect x="55.8437%" y="597" width="0.3952%" height="15" fill="rgb(254,38,20)" fg:x="65279" fg:w="462"/><text x="56.0937%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (462 samples, 0.40%)</title><rect x="55.8437%" y="581" width="0.3952%" height="15" fill="rgb(250,47,30)" fg:x="65279" fg:w="462"/><text x="56.0937%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (462 samples, 0.40%)</title><rect x="55.8437%" y="565" width="0.3952%" height="15" fill="rgb(224,124,36)" fg:x="65279" fg:w="462"/><text x="56.0937%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (462 samples, 0.40%)</title><rect x="55.8437%" y="549" width="0.3952%" height="15" fill="rgb(246,68,51)" fg:x="65279" fg:w="462"/><text x="56.0937%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (462 samples, 0.40%)</title><rect x="55.8437%" y="533" width="0.3952%" height="15" fill="rgb(253,43,49)" fg:x="65279" fg:w="462"/><text x="56.0937%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (462 samples, 0.40%)</title><rect x="55.8437%" y="517" width="0.3952%" height="15" fill="rgb(219,54,36)" fg:x="65279" fg:w="462"/><text x="56.0937%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (462 samples, 0.40%)</title><rect x="55.8437%" y="501" width="0.3952%" height="15" fill="rgb(227,133,34)" fg:x="65279" fg:w="462"/><text x="56.0937%" y="511.50"></text></g><g><title>alloc::alloc::alloc (461 samples, 0.39%)</title><rect x="55.8445%" y="485" width="0.3944%" height="15" fill="rgb(247,227,15)" fg:x="65280" fg:w="461"/><text x="56.0945%" y="495.50"></text></g><g><title>__rg_alloc (461 samples, 0.39%)</title><rect x="55.8445%" y="469" width="0.3944%" height="15" fill="rgb(229,96,14)" fg:x="65280" fg:w="461"/><text x="56.0945%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (461 samples, 0.39%)</title><rect x="55.8445%" y="453" width="0.3944%" height="15" fill="rgb(220,79,17)" fg:x="65280" fg:w="461"/><text x="56.0945%" y="463.50"></text></g><g><title>sn_rust_alloc (457 samples, 0.39%)</title><rect x="55.8479%" y="437" width="0.3909%" height="15" fill="rgb(205,131,53)" fg:x="65284" fg:w="457"/><text x="56.0979%" y="447.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.01%)</title><rect x="56.2243%" y="421" width="0.0145%" height="15" fill="rgb(209,50,29)" fg:x="65724" fg:w="17"/><text x="56.4743%" y="431.50"></text></g><g><title>simd_json::Deserializer::next_ (158 samples, 0.14%)</title><rect x="56.2389%" y="613" width="0.1352%" height="15" fill="rgb(245,86,46)" fg:x="65741" fg:w="158"/><text x="56.4889%" y="623.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse (47 samples, 0.04%)</title><rect x="56.3740%" y="613" width="0.0402%" height="15" fill="rgb(235,66,46)" fg:x="65899" fg:w="47"/><text x="56.6240%" y="623.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (21 samples, 0.02%)</title><rect x="56.4758%" y="469" width="0.0180%" height="15" fill="rgb(232,148,31)" fg:x="66018" fg:w="21"/><text x="56.7258%" y="479.50"></text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::decode (1,336 samples, 1.14%)</title><rect x="55.3518%" y="677" width="1.1429%" height="15" fill="rgb(217,149,8)" fg:x="64704" fg:w="1336"/><text x="55.6018%" y="687.50"></text></g><g><title>tremor_value::value::parse_to_value_with_buffers (1,315 samples, 1.12%)</title><rect x="55.3697%" y="661" width="1.1249%" height="15" fill="rgb(209,183,11)" fg:x="64725" fg:w="1315"/><text x="55.6197%" y="671.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse (1,152 samples, 0.99%)</title><rect x="55.5092%" y="645" width="0.9855%" height="15" fill="rgb(208,55,20)" fg:x="64888" fg:w="1152"/><text x="55.7592%" y="655.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse_map (1,054 samples, 0.90%)</title><rect x="55.5930%" y="629" width="0.9017%" height="15" fill="rgb(218,39,14)" fg:x="64986" fg:w="1054"/><text x="55.8430%" y="639.50"></text></g><g><title>tremor_value::value::from::&lt;impl core::convert::From&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; for tremor_value::value::Value&gt;::from (94 samples, 0.08%)</title><rect x="56.4142%" y="613" width="0.0804%" height="15" fill="rgb(216,169,33)" fg:x="65946" fg:w="94"/><text x="56.6642%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (55 samples, 0.05%)</title><rect x="56.4476%" y="597" width="0.0471%" height="15" fill="rgb(233,80,24)" fg:x="65985" fg:w="55"/><text x="56.6976%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (53 samples, 0.05%)</title><rect x="56.4493%" y="581" width="0.0453%" height="15" fill="rgb(213,179,31)" fg:x="65987" fg:w="53"/><text x="56.6993%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (53 samples, 0.05%)</title><rect x="56.4493%" y="565" width="0.0453%" height="15" fill="rgb(209,19,5)" fg:x="65987" fg:w="53"/><text x="56.6993%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53 samples, 0.05%)</title><rect x="56.4493%" y="549" width="0.0453%" height="15" fill="rgb(219,18,35)" fg:x="65987" fg:w="53"/><text x="56.6993%" y="559.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.04%)</title><rect x="56.4527%" y="533" width="0.0419%" height="15" fill="rgb(209,169,16)" fg:x="65991" fg:w="49"/><text x="56.7027%" y="543.50"></text></g><g><title>__rg_alloc (49 samples, 0.04%)</title><rect x="56.4527%" y="517" width="0.0419%" height="15" fill="rgb(245,90,51)" fg:x="65991" fg:w="49"/><text x="56.7027%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (49 samples, 0.04%)</title><rect x="56.4527%" y="501" width="0.0419%" height="15" fill="rgb(220,99,45)" fg:x="65991" fg:w="49"/><text x="56.7027%" y="511.50"></text></g><g><title>sn_rust_alloc (49 samples, 0.04%)</title><rect x="56.4527%" y="485" width="0.0419%" height="15" fill="rgb(249,89,25)" fg:x="65991" fg:w="49"/><text x="56.7027%" y="495.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (14 samples, 0.01%)</title><rect x="56.4947%" y="645" width="0.0120%" height="15" fill="rgb(239,193,0)" fg:x="66040" fg:w="14"/><text x="56.7447%" y="655.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="56.4947%" y="629" width="0.0120%" height="15" fill="rgb(231,126,1)" fg:x="66040" fg:w="14"/><text x="56.7447%" y="639.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="56.4947%" y="613" width="0.0120%" height="15" fill="rgb(243,166,3)" fg:x="66040" fg:w="14"/><text x="56.7447%" y="623.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="56.4947%" y="597" width="0.0120%" height="15" fill="rgb(223,22,34)" fg:x="66040" fg:w="14"/><text x="56.7447%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="56.4947%" y="581" width="0.0120%" height="15" fill="rgb(251,52,51)" fg:x="66040" fg:w="14"/><text x="56.7447%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.01%)</title><rect x="56.4947%" y="565" width="0.0120%" height="15" fill="rgb(221,165,28)" fg:x="66040" fg:w="14"/><text x="56.7447%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.01%)</title><rect x="56.4947%" y="549" width="0.0120%" height="15" fill="rgb(218,121,47)" fg:x="66040" fg:w="14"/><text x="56.7447%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.01%)</title><rect x="56.4947%" y="533" width="0.0120%" height="15" fill="rgb(209,120,9)" fg:x="66040" fg:w="14"/><text x="56.7447%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="56.4947%" y="517" width="0.0120%" height="15" fill="rgb(236,68,12)" fg:x="66040" fg:w="14"/><text x="56.7447%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,359 samples, 1.16%)</title><rect x="55.3518%" y="789" width="1.1626%" height="15" fill="rgb(225,194,26)" fg:x="64704" fg:w="1359"/><text x="55.6018%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (1,359 samples, 1.16%)</title><rect x="55.3518%" y="773" width="1.1626%" height="15" fill="rgb(231,84,39)" fg:x="64704" fg:w="1359"/><text x="55.6018%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,359 samples, 1.16%)</title><rect x="55.3518%" y="757" width="1.1626%" height="15" fill="rgb(210,11,45)" fg:x="64704" fg:w="1359"/><text x="55.6018%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,359 samples, 1.16%)</title><rect x="55.3518%" y="741" width="1.1626%" height="15" fill="rgb(224,54,52)" fg:x="64704" fg:w="1359"/><text x="55.6018%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (1,359 samples, 1.16%)</title><rect x="55.3518%" y="725" width="1.1626%" height="15" fill="rgb(238,102,14)" fg:x="64704" fg:w="1359"/><text x="55.6018%" y="735.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (1,359 samples, 1.16%)</title><rect x="55.3518%" y="709" width="1.1626%" height="15" fill="rgb(243,160,52)" fg:x="64704" fg:w="1359"/><text x="55.6018%" y="719.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (1,359 samples, 1.16%)</title><rect x="55.3518%" y="693" width="1.1626%" height="15" fill="rgb(216,114,19)" fg:x="64704" fg:w="1359"/><text x="55.6018%" y="703.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="56.4947%" y="677" width="0.0197%" height="15" fill="rgb(244,166,37)" fg:x="66040" fg:w="23"/><text x="56.7447%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="56.4947%" y="661" width="0.0197%" height="15" fill="rgb(246,29,44)" fg:x="66040" fg:w="23"/><text x="56.7447%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (1,362 samples, 1.17%)</title><rect x="55.3518%" y="805" width="1.1651%" height="15" fill="rgb(215,56,53)" fg:x="64704" fg:w="1362"/><text x="55.6018%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,387 samples, 1.19%)</title><rect x="55.3492%" y="885" width="1.1865%" height="15" fill="rgb(217,60,2)" fg:x="64701" fg:w="1387"/><text x="55.5992%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,384 samples, 1.18%)</title><rect x="55.3518%" y="869" width="1.1840%" height="15" fill="rgb(207,26,24)" fg:x="64704" fg:w="1384"/><text x="55.6018%" y="879.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,384 samples, 1.18%)</title><rect x="55.3518%" y="853" width="1.1840%" height="15" fill="rgb(252,210,15)" fg:x="64704" fg:w="1384"/><text x="55.6018%" y="863.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,384 samples, 1.18%)</title><rect x="55.3518%" y="837" width="1.1840%" height="15" fill="rgb(253,209,26)" fg:x="64704" fg:w="1384"/><text x="55.6018%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,384 samples, 1.18%)</title><rect x="55.3518%" y="821" width="1.1840%" height="15" fill="rgb(238,170,14)" fg:x="64704" fg:w="1384"/><text x="55.6018%" y="831.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (22 samples, 0.02%)</title><rect x="56.5169%" y="805" width="0.0188%" height="15" fill="rgb(216,178,15)" fg:x="66066" fg:w="22"/><text x="56.7669%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="56.5169%" y="789" width="0.0188%" height="15" fill="rgb(250,197,2)" fg:x="66066" fg:w="22"/><text x="56.7669%" y="799.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (22 samples, 0.02%)</title><rect x="56.5169%" y="773" width="0.0188%" height="15" fill="rgb(212,70,42)" fg:x="66066" fg:w="22"/><text x="56.7669%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (22 samples, 0.02%)</title><rect x="56.5169%" y="757" width="0.0188%" height="15" fill="rgb(227,213,9)" fg:x="66066" fg:w="22"/><text x="56.7669%" y="767.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (22 samples, 0.02%)</title><rect x="56.5169%" y="741" width="0.0188%" height="15" fill="rgb(245,99,25)" fg:x="66066" fg:w="22"/><text x="56.7669%" y="751.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (22 samples, 0.02%)</title><rect x="56.5169%" y="725" width="0.0188%" height="15" fill="rgb(250,82,29)" fg:x="66066" fg:w="22"/><text x="56.7669%" y="735.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (22 samples, 0.02%)</title><rect x="56.5169%" y="709" width="0.0188%" height="15" fill="rgb(241,226,54)" fg:x="66066" fg:w="22"/><text x="56.7669%" y="719.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (22 samples, 0.02%)</title><rect x="56.5169%" y="693" width="0.0188%" height="15" fill="rgb(221,99,41)" fg:x="66066" fg:w="22"/><text x="56.7669%" y="703.50"></text></g><g><title>tremor_common::time::nanotime (24 samples, 0.02%)</title><rect x="56.5357%" y="885" width="0.0205%" height="15" fill="rgb(213,90,21)" fg:x="66088" fg:w="24"/><text x="56.7857%" y="895.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event (32 samples, 0.03%)</title><rect x="56.5640%" y="837" width="0.0274%" height="15" fill="rgb(205,208,24)" fg:x="66121" fg:w="32"/><text x="56.8140%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (14 samples, 0.01%)</title><rect x="56.5794%" y="821" width="0.0120%" height="15" fill="rgb(246,31,12)" fg:x="66139" fg:w="14"/><text x="56.8294%" y="831.50"></text></g><g><title>tremor_pipeline::executable_graph::NodeMetrics::inc_input (51 samples, 0.04%)</title><rect x="56.5563%" y="885" width="0.0436%" height="15" fill="rgb(213,154,6)" fg:x="66112" fg:w="51"/><text x="56.8063%" y="895.50"></text></g><g><title>tremor_pipeline::executable_graph::NodeMetrics::inc_input_n (42 samples, 0.04%)</title><rect x="56.5640%" y="869" width="0.0359%" height="15" fill="rgb(222,163,29)" fg:x="66121" fg:w="42"/><text x="56.8140%" y="879.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry_mut (42 samples, 0.04%)</title><rect x="56.5640%" y="853" width="0.0359%" height="15" fill="rgb(227,201,8)" fg:x="66121" fg:w="42"/><text x="56.8140%" y="863.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (35 samples, 0.03%)</title><rect x="56.5999%" y="885" width="0.0299%" height="15" fill="rgb(233,9,32)" fg:x="66163" fg:w="35"/><text x="56.8499%" y="895.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (21 samples, 0.02%)</title><rect x="57.9387%" y="661" width="0.0180%" height="15" fill="rgb(217,54,24)" fg:x="67728" fg:w="21"/><text x="58.1887%" y="671.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (21 samples, 0.02%)</title><rect x="57.9387%" y="645" width="0.0180%" height="15" fill="rgb(235,192,0)" fg:x="67728" fg:w="21"/><text x="58.1887%" y="655.50"></text></g><g><title>[libc-2.31.so] (163 samples, 0.14%)</title><rect x="57.9566%" y="661" width="0.1394%" height="15" fill="rgb(235,45,9)" fg:x="67749" fg:w="163"/><text x="58.2066%" y="671.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_int (123 samples, 0.11%)</title><rect x="58.0961%" y="661" width="0.1052%" height="15" fill="rgb(246,42,40)" fg:x="67912" fg:w="123"/><text x="58.3461%" y="671.50"></text></g><g><title>itoa::write (122 samples, 0.10%)</title><rect x="58.0969%" y="645" width="0.1044%" height="15" fill="rgb(248,111,24)" fg:x="67913" fg:w="122"/><text x="58.3469%" y="655.50"></text></g><g><title>itoa::Buffer::format (122 samples, 0.10%)</title><rect x="58.0969%" y="629" width="0.1044%" height="15" fill="rgb(249,65,22)" fg:x="67913" fg:w="122"/><text x="58.3469%" y="639.50"></text></g><g><title>&lt;u64 as itoa::Integer&gt;::write (122 samples, 0.10%)</title><rect x="58.0969%" y="613" width="0.1044%" height="15" fill="rgb(238,111,51)" fg:x="67913" fg:w="122"/><text x="58.3469%" y="623.50"></text></g><g><title>&lt;u64 as itoa::IntegerPrivate&lt;[u8: _]&gt;&gt;::write_to (122 samples, 0.10%)</title><rect x="58.0969%" y="597" width="0.1044%" height="15" fill="rgb(250,118,22)" fg:x="67913" fg:w="122"/><text x="58.3469%" y="607.50"></text></g><g><title>&lt;value_trait::generator::WriterGenerator&lt;W,V&gt; as value_trait::generator::BaseGenerator&gt;::get_writer (15 samples, 0.01%)</title><rect x="58.2013%" y="629" width="0.0128%" height="15" fill="rgb(234,84,26)" fg:x="68035" fg:w="15"/><text x="58.4513%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (31 samples, 0.03%)</title><rect x="58.2603%" y="565" width="0.0265%" height="15" fill="rgb(243,172,12)" fg:x="68104" fg:w="31"/><text x="58.5103%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (30 samples, 0.03%)</title><rect x="58.2612%" y="549" width="0.0257%" height="15" fill="rgb(236,150,49)" fg:x="68105" fg:w="30"/><text x="58.5112%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (30 samples, 0.03%)</title><rect x="58.2612%" y="533" width="0.0257%" height="15" fill="rgb(225,197,26)" fg:x="68105" fg:w="30"/><text x="58.5112%" y="543.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_char (118 samples, 0.10%)</title><rect x="58.2013%" y="645" width="0.1009%" height="15" fill="rgb(214,17,42)" fg:x="68035" fg:w="118"/><text x="58.4513%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (103 samples, 0.09%)</title><rect x="58.2141%" y="629" width="0.0881%" height="15" fill="rgb(224,165,40)" fg:x="68050" fg:w="103"/><text x="58.4641%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (103 samples, 0.09%)</title><rect x="58.2141%" y="613" width="0.0881%" height="15" fill="rgb(246,100,4)" fg:x="68050" fg:w="103"/><text x="58.4641%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (103 samples, 0.09%)</title><rect x="58.2141%" y="597" width="0.0881%" height="15" fill="rgb(222,103,0)" fg:x="68050" fg:w="103"/><text x="58.4641%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (103 samples, 0.09%)</title><rect x="58.2141%" y="581" width="0.0881%" height="15" fill="rgb(227,189,26)" fg:x="68050" fg:w="103"/><text x="58.4641%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.02%)</title><rect x="58.2869%" y="565" width="0.0154%" height="15" fill="rgb(214,202,17)" fg:x="68135" fg:w="18"/><text x="58.5369%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 0.08%)</title><rect x="58.4323%" y="629" width="0.0838%" height="15" fill="rgb(229,111,3)" fg:x="68305" fg:w="98"/><text x="58.6823%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 0.08%)</title><rect x="58.4323%" y="613" width="0.0838%" height="15" fill="rgb(229,172,15)" fg:x="68305" fg:w="98"/><text x="58.6823%" y="623.50"></text></g><g><title>value_trait::generator::BaseGenerator::write (109 samples, 0.09%)</title><rect x="58.5161%" y="629" width="0.0932%" height="15" fill="rgb(230,224,35)" fg:x="68403" fg:w="109"/><text x="58.7661%" y="639.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (109 samples, 0.09%)</title><rect x="58.5161%" y="613" width="0.0932%" height="15" fill="rgb(251,141,6)" fg:x="68403" fg:w="109"/><text x="58.7661%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (109 samples, 0.09%)</title><rect x="58.5161%" y="597" width="0.0932%" height="15" fill="rgb(225,208,6)" fg:x="68403" fg:w="109"/><text x="58.7661%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (109 samples, 0.09%)</title><rect x="58.5161%" y="581" width="0.0932%" height="15" fill="rgb(246,181,16)" fg:x="68403" fg:w="109"/><text x="58.7661%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (109 samples, 0.09%)</title><rect x="58.5161%" y="565" width="0.0932%" height="15" fill="rgb(227,129,36)" fg:x="68403" fg:w="109"/><text x="58.7661%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (85 samples, 0.07%)</title><rect x="58.5366%" y="549" width="0.0727%" height="15" fill="rgb(248,117,24)" fg:x="68427" fg:w="85"/><text x="58.7866%" y="559.50"></text></g><g><title>[libc-2.31.so] (84 samples, 0.07%)</title><rect x="58.5375%" y="533" width="0.0719%" height="15" fill="rgb(214,185,35)" fg:x="68428" fg:w="84"/><text x="58.7875%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (79 samples, 0.07%)</title><rect x="58.6205%" y="549" width="0.0676%" height="15" fill="rgb(236,150,34)" fg:x="68525" fg:w="79"/><text x="58.8705%" y="559.50"></text></g><g><title>[libc-2.31.so] (43 samples, 0.04%)</title><rect x="58.6513%" y="533" width="0.0368%" height="15" fill="rgb(243,228,27)" fg:x="68561" fg:w="43"/><text x="58.9013%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (2,412 samples, 2.06%)</title><rect x="56.6298%" y="885" width="2.0634%" height="15" fill="rgb(245,77,44)" fg:x="66198" fg:w="2412"/><text x="56.8798%" y="895.50">t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,412 samples, 2.06%)</title><rect x="56.6298%" y="869" width="2.0634%" height="15" fill="rgb(235,214,42)" fg:x="66198" fg:w="2412"/><text x="56.8798%" y="879.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,412 samples, 2.06%)</title><rect x="56.6298%" y="853" width="2.0634%" height="15" fill="rgb(221,74,3)" fg:x="66198" fg:w="2412"/><text x="56.8798%" y="863.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (2,412 samples, 2.06%)</title><rect x="56.6298%" y="837" width="2.0634%" height="15" fill="rgb(206,121,29)" fg:x="66198" fg:w="2412"/><text x="56.8798%" y="847.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (2,412 samples, 2.06%)</title><rect x="56.6298%" y="821" width="2.0634%" height="15" fill="rgb(249,131,53)" fg:x="66198" fg:w="2412"/><text x="56.8798%" y="831.50">t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (2,412 samples, 2.06%)</title><rect x="56.6298%" y="805" width="2.0634%" height="15" fill="rgb(236,170,29)" fg:x="66198" fg:w="2412"/><text x="56.8798%" y="815.50">t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (2,412 samples, 2.06%)</title><rect x="56.6298%" y="789" width="2.0634%" height="15" fill="rgb(247,96,15)" fg:x="66198" fg:w="2412"/><text x="56.8798%" y="799.50">t..</text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode (2,412 samples, 2.06%)</title><rect x="56.6298%" y="773" width="2.0634%" height="15" fill="rgb(211,210,7)" fg:x="66198" fg:w="2412"/><text x="56.8798%" y="783.50">&lt;..</text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::encode_into (2,412 samples, 2.06%)</title><rect x="56.6298%" y="757" width="2.0634%" height="15" fill="rgb(240,88,50)" fg:x="66198" fg:w="2412"/><text x="56.8798%" y="767.50">&lt;..</text></g><g><title>tremor_value::value::serialize::&lt;impl value_trait::Writable for tremor_value::value::Value&gt;::write (2,412 samples, 2.06%)</title><rect x="56.6298%" y="741" width="2.0634%" height="15" fill="rgb(209,229,26)" fg:x="66198" fg:w="2412"/><text x="56.8798%" y="751.50">t..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (2,412 samples, 2.06%)</title><rect x="56.6298%" y="725" width="2.0634%" height="15" fill="rgb(210,68,23)" fg:x="66198" fg:w="2412"/><text x="56.8798%" y="735.50">t..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_object (2,412 samples, 2.06%)</title><rect x="56.6298%" y="709" width="2.0634%" height="15" fill="rgb(229,180,13)" fg:x="66198" fg:w="2412"/><text x="56.8798%" y="719.50">t..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (2,412 samples, 2.06%)</title><rect x="56.6298%" y="693" width="2.0634%" height="15" fill="rgb(236,53,44)" fg:x="66198" fg:w="2412"/><text x="56.8798%" y="703.50">t..</text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (2,412 samples, 2.06%)</title><rect x="56.6298%" y="677" width="2.0634%" height="15" fill="rgb(244,214,29)" fg:x="66198" fg:w="2412"/><text x="56.8798%" y="687.50">t..</text></g><g><title>value_trait::generator::BaseGenerator::write_string (575 samples, 0.49%)</title><rect x="58.2013%" y="661" width="0.4919%" height="15" fill="rgb(220,75,29)" fg:x="68035" fg:w="575"/><text x="58.4513%" y="671.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_string_content (457 samples, 0.39%)</title><rect x="58.3023%" y="645" width="0.3909%" height="15" fill="rgb(214,183,37)" fg:x="68153" fg:w="457"/><text x="58.5523%" y="655.50"></text></g><g><title>value_trait::generator::write_str_simd (98 samples, 0.08%)</title><rect x="58.6094%" y="629" width="0.0838%" height="15" fill="rgb(239,117,29)" fg:x="68512" fg:w="98"/><text x="58.8594%" y="639.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (90 samples, 0.08%)</title><rect x="58.6162%" y="613" width="0.0770%" height="15" fill="rgb(237,171,35)" fg:x="68520" fg:w="90"/><text x="58.8662%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (90 samples, 0.08%)</title><rect x="58.6162%" y="597" width="0.0770%" height="15" fill="rgb(229,178,53)" fg:x="68520" fg:w="90"/><text x="58.8662%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (90 samples, 0.08%)</title><rect x="58.6162%" y="581" width="0.0770%" height="15" fill="rgb(210,102,19)" fg:x="68520" fg:w="90"/><text x="58.8662%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (90 samples, 0.08%)</title><rect x="58.6162%" y="565" width="0.0770%" height="15" fill="rgb(235,127,22)" fg:x="68520" fg:w="90"/><text x="58.8662%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::clone_from_slice (109 samples, 0.09%)</title><rect x="58.7471%" y="709" width="0.0932%" height="15" fill="rgb(244,31,31)" fg:x="68673" fg:w="109"/><text x="58.9971%" y="719.50"></text></g><g><title>&lt;[T] as core::slice::CloneFromSpec&lt;T&gt;&gt;::spec_clone_from (109 samples, 0.09%)</title><rect x="58.7471%" y="693" width="0.0932%" height="15" fill="rgb(231,43,21)" fg:x="68673" fg:w="109"/><text x="58.9971%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (109 samples, 0.09%)</title><rect x="58.7471%" y="677" width="0.0932%" height="15" fill="rgb(217,131,35)" fg:x="68673" fg:w="109"/><text x="58.9971%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (109 samples, 0.09%)</title><rect x="58.7471%" y="661" width="0.0932%" height="15" fill="rgb(221,149,4)" fg:x="68673" fg:w="109"/><text x="58.9971%" y="671.50"></text></g><g><title>[libc-2.31.so] (109 samples, 0.09%)</title><rect x="58.7471%" y="645" width="0.0932%" height="15" fill="rgb(232,170,28)" fg:x="68673" fg:w="109"/><text x="58.9971%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (13 samples, 0.01%)</title><rect x="59.1474%" y="677" width="0.0111%" height="15" fill="rgb(238,56,10)" fg:x="69141" fg:w="13"/><text x="59.3974%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (47 samples, 0.04%)</title><rect x="59.1586%" y="677" width="0.0402%" height="15" fill="rgb(235,196,14)" fg:x="69154" fg:w="47"/><text x="59.4086%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (71 samples, 0.06%)</title><rect x="59.1988%" y="677" width="0.0607%" height="15" fill="rgb(216,45,48)" fg:x="69201" fg:w="71"/><text x="59.4488%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (73 samples, 0.06%)</title><rect x="59.2595%" y="677" width="0.0624%" height="15" fill="rgb(238,213,17)" fg:x="69272" fg:w="73"/><text x="59.5095%" y="687.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInput as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::find_whitespace_and_structurals (279 samples, 0.24%)</title><rect x="59.0953%" y="693" width="0.2387%" height="15" fill="rgb(212,13,2)" fg:x="69080" fg:w="279"/><text x="59.3453%" y="703.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (14 samples, 0.01%)</title><rect x="59.3220%" y="677" width="0.0120%" height="15" fill="rgb(240,114,20)" fg:x="69345" fg:w="14"/><text x="59.5720%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (23 samples, 0.02%)</title><rect x="59.9687%" y="613" width="0.0197%" height="15" fill="rgb(228,41,40)" fg:x="70101" fg:w="23"/><text x="60.2187%" y="623.50"></text></g><g><title>[libc-2.31.so] (91 samples, 0.08%)</title><rect x="60.1654%" y="501" width="0.0778%" height="15" fill="rgb(244,132,35)" fg:x="70331" fg:w="91"/><text x="60.4154%" y="511.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (344 samples, 0.29%)</title><rect x="60.2536%" y="501" width="0.2943%" height="15" fill="rgb(253,189,4)" fg:x="70434" fg:w="344"/><text x="60.5036%" y="511.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="60.5478%" y="501" width="0.0163%" height="15" fill="rgb(224,37,19)" fg:x="70778" fg:w="19"/><text x="60.7978%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (650 samples, 0.56%)</title><rect x="60.0098%" y="597" width="0.5560%" height="15" fill="rgb(235,223,18)" fg:x="70149" fg:w="650"/><text x="60.2598%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (650 samples, 0.56%)</title><rect x="60.0098%" y="581" width="0.5560%" height="15" fill="rgb(235,163,25)" fg:x="70149" fg:w="650"/><text x="60.2598%" y="591.50"></text></g><g><title>alloc::alloc::realloc (650 samples, 0.56%)</title><rect x="60.0098%" y="565" width="0.5560%" height="15" fill="rgb(217,145,28)" fg:x="70149" fg:w="650"/><text x="60.2598%" y="575.50"></text></g><g><title>__rg_realloc (650 samples, 0.56%)</title><rect x="60.0098%" y="549" width="0.5560%" height="15" fill="rgb(223,223,32)" fg:x="70149" fg:w="650"/><text x="60.2598%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::realloc (650 samples, 0.56%)</title><rect x="60.0098%" y="533" width="0.5560%" height="15" fill="rgb(227,189,39)" fg:x="70149" fg:w="650"/><text x="60.2598%" y="543.50"></text></g><g><title>sn_rust_realloc (643 samples, 0.55%)</title><rect x="60.0157%" y="517" width="0.5501%" height="15" fill="rgb(248,10,22)" fg:x="70156" fg:w="643"/><text x="60.2657%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (667 samples, 0.57%)</title><rect x="60.0003%" y="613" width="0.5706%" height="15" fill="rgb(248,46,39)" fg:x="70138" fg:w="667"/><text x="60.2503%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (764 samples, 0.65%)</title><rect x="59.9268%" y="677" width="0.6536%" height="15" fill="rgb(248,113,48)" fg:x="70052" fg:w="764"/><text x="60.1768%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (764 samples, 0.65%)</title><rect x="59.9268%" y="661" width="0.6536%" height="15" fill="rgb(245,16,25)" fg:x="70052" fg:w="764"/><text x="60.1768%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (723 samples, 0.62%)</title><rect x="59.9618%" y="645" width="0.6185%" height="15" fill="rgb(249,152,16)" fg:x="70093" fg:w="723"/><text x="60.2118%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (723 samples, 0.62%)</title><rect x="59.9618%" y="629" width="0.6185%" height="15" fill="rgb(250,16,1)" fg:x="70093" fg:w="723"/><text x="60.2118%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (17 samples, 0.01%)</title><rect x="60.5863%" y="677" width="0.0145%" height="15" fill="rgb(249,138,3)" fg:x="70823" fg:w="17"/><text x="60.8363%" y="687.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (330 samples, 0.28%)</title><rect x="60.6009%" y="677" width="0.2823%" height="15" fill="rgb(227,71,41)" fg:x="70840" fg:w="330"/><text x="60.8509%" y="687.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (330 samples, 0.28%)</title><rect x="60.6009%" y="661" width="0.2823%" height="15" fill="rgb(209,184,23)" fg:x="70840" fg:w="330"/><text x="60.8509%" y="671.50"></text></g><g><title>core::core_arch::simd::i32x8::new (330 samples, 0.28%)</title><rect x="60.6009%" y="645" width="0.2823%" height="15" fill="rgb(223,215,31)" fg:x="70840" fg:w="330"/><text x="60.8509%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_storeu_si256 (30 samples, 0.03%)</title><rect x="60.8832%" y="677" width="0.0257%" height="15" fill="rgb(210,146,28)" fg:x="71170" fg:w="30"/><text x="61.1332%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (196 samples, 0.17%)</title><rect x="60.9088%" y="677" width="0.1677%" height="15" fill="rgb(209,183,41)" fg:x="71200" fg:w="196"/><text x="61.1588%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (201 samples, 0.17%)</title><rect x="61.0765%" y="677" width="0.1719%" height="15" fill="rgb(209,224,45)" fg:x="71396" fg:w="201"/><text x="61.3265%" y="687.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInput as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::flatten_bits (2,354 samples, 2.01%)</title><rect x="59.3339%" y="693" width="2.0138%" height="15" fill="rgb(224,209,51)" fg:x="69359" fg:w="2354"/><text x="59.5839%" y="703.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (116 samples, 0.10%)</title><rect x="61.2485%" y="677" width="0.0992%" height="15" fill="rgb(223,17,39)" fg:x="71597" fg:w="116"/><text x="61.4985%" y="687.50"></text></g><g><title>simdutf8::implementation::x86::avx2::&lt;impl simdutf8::implementation::helpers::Utf8CheckAlgorithm&lt;simdutf8::implementation::helpers::SimdU8Value&lt;core::core_arch::x86::__m256i&gt;&gt;&gt;::check_incomplete_pending (28 samples, 0.02%)</title><rect x="61.3776%" y="661" width="0.0240%" height="15" fill="rgb(234,204,37)" fg:x="71748" fg:w="28"/><text x="61.6276%" y="671.50"></text></g><g><title>simdutf8::implementation::x86::avx2::&lt;impl simdutf8::implementation::helpers::SimdU8Value&lt;core::core_arch::x86::__m256i&gt;&gt;::or (28 samples, 0.02%)</title><rect x="61.3776%" y="645" width="0.0240%" height="15" fill="rgb(236,120,5)" fg:x="71748" fg:w="28"/><text x="61.6276%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (28 samples, 0.02%)</title><rect x="61.3776%" y="629" width="0.0240%" height="15" fill="rgb(248,97,27)" fg:x="71748" fg:w="28"/><text x="61.6276%" y="639.50"></text></g><g><title>simdutf8::implementation::x86::avx2::&lt;impl simdutf8::implementation::helpers::SimdU8Value&lt;core::core_arch::x86::__m256i&gt;&gt;::is_ascii (46 samples, 0.04%)</title><rect x="61.4016%" y="645" width="0.0394%" height="15" fill="rgb(240,66,17)" fg:x="71776" fg:w="46"/><text x="61.6516%" y="655.50"></text></g><g><title>simdutf8::implementation::x86::avx2::&lt;impl simdutf8::implementation::helpers::Utf8CheckAlgorithm&lt;simdutf8::implementation::helpers::SimdU8Value&lt;core::core_arch::x86::__m256i&gt;&gt;&gt;::check_utf8 (149 samples, 0.13%)</title><rect x="61.3528%" y="677" width="0.1275%" height="15" fill="rgb(210,79,3)" fg:x="71719" fg:w="149"/><text x="61.6028%" y="687.50"></text></g><g><title>simdutf8::implementation::x86::avx2::SimdInput::is_ascii (92 samples, 0.08%)</title><rect x="61.4016%" y="661" width="0.0787%" height="15" fill="rgb(214,176,27)" fg:x="71776" fg:w="92"/><text x="61.6516%" y="671.50"></text></g><g><title>simdutf8::implementation::x86::avx2::&lt;impl simdutf8::implementation::helpers::SimdU8Value&lt;core::core_arch::x86::__m256i&gt;&gt;::or (46 samples, 0.04%)</title><rect x="61.4409%" y="645" width="0.0394%" height="15" fill="rgb(235,185,3)" fg:x="71822" fg:w="46"/><text x="61.6909%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (46 samples, 0.04%)</title><rect x="61.4409%" y="629" width="0.0394%" height="15" fill="rgb(227,24,12)" fg:x="71822" fg:w="46"/><text x="61.6909%" y="639.50"></text></g><g><title>&lt;simdutf8::implementation::x86::avx2::ChunkedUtf8ValidatorImp as simdutf8::basic::imp::ChunkedUtf8Validator&gt;::update_from_chunks (240 samples, 0.21%)</title><rect x="61.3528%" y="693" width="0.2053%" height="15" fill="rgb(252,169,48)" fg:x="71719" fg:w="240"/><text x="61.6028%" y="703.50"></text></g><g><title>simdutf8::implementation::x86::avx2::SimdInput::new (91 samples, 0.08%)</title><rect x="61.4803%" y="677" width="0.0778%" height="15" fill="rgb(212,65,1)" fg:x="71868" fg:w="91"/><text x="61.7303%" y="687.50"></text></g><g><title>simdutf8::implementation::x86::avx2::&lt;impl simdutf8::implementation::helpers::SimdU8Value&lt;core::core_arch::x86::__m256i&gt;&gt;::load_from (91 samples, 0.08%)</title><rect x="61.4803%" y="661" width="0.0778%" height="15" fill="rgb(242,39,24)" fg:x="71868" fg:w="91"/><text x="61.7303%" y="671.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (91 samples, 0.08%)</title><rect x="61.4803%" y="645" width="0.0778%" height="15" fill="rgb(249,32,23)" fg:x="71868" fg:w="91"/><text x="61.7303%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (91 samples, 0.08%)</title><rect x="61.4803%" y="629" width="0.0778%" height="15" fill="rgb(251,195,23)" fg:x="71868" fg:w="91"/><text x="61.7303%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="61.5581%" y="693" width="0.0111%" height="15" fill="rgb(236,174,8)" fg:x="71959" fg:w="13"/><text x="61.8081%" y="703.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (178 samples, 0.15%)</title><rect x="61.6719%" y="533" width="0.1523%" height="15" fill="rgb(220,197,8)" fg:x="72092" fg:w="178"/><text x="61.9219%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (298 samples, 0.25%)</title><rect x="61.5804%" y="629" width="0.2549%" height="15" fill="rgb(240,108,37)" fg:x="71985" fg:w="298"/><text x="61.8304%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (298 samples, 0.25%)</title><rect x="61.5804%" y="613" width="0.2549%" height="15" fill="rgb(232,176,24)" fg:x="71985" fg:w="298"/><text x="61.8304%" y="623.50"></text></g><g><title>alloc::alloc::alloc (296 samples, 0.25%)</title><rect x="61.5821%" y="597" width="0.2532%" height="15" fill="rgb(243,35,29)" fg:x="71987" fg:w="296"/><text x="61.8321%" y="607.50"></text></g><g><title>__rg_alloc (296 samples, 0.25%)</title><rect x="61.5821%" y="581" width="0.2532%" height="15" fill="rgb(210,37,18)" fg:x="71987" fg:w="296"/><text x="61.8321%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (296 samples, 0.25%)</title><rect x="61.5821%" y="565" width="0.2532%" height="15" fill="rgb(224,184,40)" fg:x="71987" fg:w="296"/><text x="61.8321%" y="575.50"></text></g><g><title>sn_rust_alloc (295 samples, 0.25%)</title><rect x="61.5829%" y="549" width="0.2524%" height="15" fill="rgb(236,39,29)" fg:x="71988" fg:w="295"/><text x="61.8329%" y="559.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="61.8242%" y="533" width="0.0111%" height="15" fill="rgb(232,48,39)" fg:x="72270" fg:w="13"/><text x="62.0742%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (312 samples, 0.27%)</title><rect x="61.5693%" y="693" width="0.2669%" height="15" fill="rgb(236,34,42)" fg:x="71972" fg:w="312"/><text x="61.8193%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (312 samples, 0.27%)</title><rect x="61.5693%" y="677" width="0.2669%" height="15" fill="rgb(243,106,37)" fg:x="71972" fg:w="312"/><text x="61.8193%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (304 samples, 0.26%)</title><rect x="61.5761%" y="661" width="0.2601%" height="15" fill="rgb(218,96,6)" fg:x="71980" fg:w="304"/><text x="61.8261%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (304 samples, 0.26%)</title><rect x="61.5761%" y="645" width="0.2601%" height="15" fill="rgb(235,130,12)" fg:x="71980" fg:w="304"/><text x="61.8261%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from (43 samples, 0.04%)</title><rect x="61.8362%" y="693" width="0.0368%" height="15" fill="rgb(231,95,0)" fg:x="72284" fg:w="43"/><text x="62.0862%" y="703.50"></text></g><g><title>core::intrinsics::copy (43 samples, 0.04%)</title><rect x="61.8362%" y="677" width="0.0368%" height="15" fill="rgb(228,12,23)" fg:x="72284" fg:w="43"/><text x="62.0862%" y="687.50"></text></g><g><title>[libc-2.31.so] (25 samples, 0.02%)</title><rect x="61.8516%" y="661" width="0.0214%" height="15" fill="rgb(216,12,1)" fg:x="72302" fg:w="25"/><text x="62.1016%" y="671.50"></text></g><g><title>simd_json::Stage1Parse::finalize_structurals (203 samples, 0.17%)</title><rect x="61.8729%" y="693" width="0.1737%" height="15" fill="rgb(219,59,3)" fg:x="72327" fg:w="203"/><text x="62.1229%" y="703.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInput as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::cmp_mask_against_input (84 samples, 0.07%)</title><rect x="62.2502%" y="677" width="0.0719%" height="15" fill="rgb(215,208,46)" fg:x="72768" fg:w="84"/><text x="62.5002%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (55 samples, 0.05%)</title><rect x="62.2750%" y="661" width="0.0471%" height="15" fill="rgb(254,224,29)" fg:x="72797" fg:w="55"/><text x="62.5250%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (21 samples, 0.02%)</title><rect x="62.3221%" y="677" width="0.0180%" height="15" fill="rgb(232,14,29)" fg:x="72852" fg:w="21"/><text x="62.5721%" y="687.50"></text></g><g><title>simd_json::Stage1Parse::find_odd_backslash_sequences (359 samples, 0.31%)</title><rect x="62.0466%" y="693" width="0.3071%" height="15" fill="rgb(208,45,52)" fg:x="72530" fg:w="359"/><text x="62.2966%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (16 samples, 0.01%)</title><rect x="62.3400%" y="677" width="0.0137%" height="15" fill="rgb(234,191,28)" fg:x="72873" fg:w="16"/><text x="62.5900%" y="687.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInput as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::cmp_mask_against_input (74 samples, 0.06%)</title><rect x="62.5436%" y="677" width="0.0633%" height="15" fill="rgb(244,67,43)" fg:x="73111" fg:w="74"/><text x="62.7936%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (56 samples, 0.05%)</title><rect x="62.5590%" y="661" width="0.0479%" height="15" fill="rgb(236,189,24)" fg:x="73129" fg:w="56"/><text x="62.8090%" y="671.50"></text></g><g><title>core::core_arch::x86::pclmulqdq::_mm_clmulepi64_si128 (162 samples, 0.14%)</title><rect x="62.7019%" y="661" width="0.1386%" height="15" fill="rgb(239,214,33)" fg:x="73296" fg:w="162"/><text x="62.9519%" y="671.50"></text></g><g><title>simd_json::Deserializer::find_structural_bits (4,692 samples, 4.01%)</title><rect x="58.8403%" y="709" width="4.0138%" height="15" fill="rgb(226,176,41)" fg:x="68782" fg:w="4692"/><text x="59.0903%" y="719.50">simd..</text></g><g><title>simd_json::Stage1Parse::find_quote_mask_and_bits (585 samples, 0.50%)</title><rect x="62.3537%" y="693" width="0.5004%" height="15" fill="rgb(248,47,8)" fg:x="72889" fg:w="585"/><text x="62.6037%" y="703.50"></text></g><g><title>&lt;simd_json::avx2::stage1::SimdInput as simd_json::Stage1Parse&lt;core::core_arch::x86::__m256i&gt;&gt;::compute_quote_mask (289 samples, 0.25%)</title><rect x="62.6069%" y="677" width="0.2472%" height="15" fill="rgb(218,81,44)" fg:x="73185" fg:w="289"/><text x="62.8569%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi64x (16 samples, 0.01%)</title><rect x="62.8405%" y="661" width="0.0137%" height="15" fill="rgb(213,98,6)" fg:x="73458" fg:w="16"/><text x="63.0905%" y="671.50"></text></g><g><title>core::core_arch::simd::i64x2::new (16 samples, 0.01%)</title><rect x="62.8405%" y="645" width="0.0137%" height="15" fill="rgb(222,85,22)" fg:x="73458" fg:w="16"/><text x="63.0905%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (118 samples, 0.10%)</title><rect x="63.9295%" y="693" width="0.1009%" height="15" fill="rgb(239,46,39)" fg:x="74731" fg:w="118"/><text x="64.1795%" y="703.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (1,641 samples, 1.40%)</title><rect x="64.2554%" y="533" width="1.4038%" height="15" fill="rgb(237,12,29)" fg:x="75112" fg:w="1641"/><text x="64.5054%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,935 samples, 1.66%)</title><rect x="64.0433%" y="629" width="1.6553%" height="15" fill="rgb(214,77,8)" fg:x="74864" fg:w="1935"/><text x="64.2933%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,935 samples, 1.66%)</title><rect x="64.0433%" y="613" width="1.6553%" height="15" fill="rgb(217,168,37)" fg:x="74864" fg:w="1935"/><text x="64.2933%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1,932 samples, 1.65%)</title><rect x="64.0458%" y="597" width="1.6528%" height="15" fill="rgb(221,217,23)" fg:x="74867" fg:w="1932"/><text x="64.2958%" y="607.50"></text></g><g><title>__rg_alloc (1,932 samples, 1.65%)</title><rect x="64.0458%" y="581" width="1.6528%" height="15" fill="rgb(243,229,36)" fg:x="74867" fg:w="1932"/><text x="64.2958%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,932 samples, 1.65%)</title><rect x="64.0458%" y="565" width="1.6528%" height="15" fill="rgb(251,163,40)" fg:x="74867" fg:w="1932"/><text x="64.2958%" y="575.50"></text></g><g><title>sn_rust_alloc (1,930 samples, 1.65%)</title><rect x="64.0475%" y="549" width="1.6510%" height="15" fill="rgb(237,222,12)" fg:x="74869" fg:w="1930"/><text x="64.2975%" y="559.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (46 samples, 0.04%)</title><rect x="65.6592%" y="533" width="0.0394%" height="15" fill="rgb(248,132,6)" fg:x="76753" fg:w="46"/><text x="65.9092%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,952 samples, 1.67%)</title><rect x="64.0321%" y="693" width="1.6699%" height="15" fill="rgb(227,167,50)" fg:x="74851" fg:w="1952"/><text x="64.2821%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,952 samples, 1.67%)</title><rect x="64.0321%" y="677" width="1.6699%" height="15" fill="rgb(242,84,37)" fg:x="74851" fg:w="1952"/><text x="64.2821%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,942 samples, 1.66%)</title><rect x="64.0407%" y="661" width="1.6613%" height="15" fill="rgb(212,4,50)" fg:x="74861" fg:w="1942"/><text x="64.2907%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,942 samples, 1.66%)</title><rect x="64.0407%" y="645" width="1.6613%" height="15" fill="rgb(230,228,32)" fg:x="74861" fg:w="1942"/><text x="64.2907%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (109 samples, 0.09%)</title><rect x="65.7028%" y="645" width="0.0932%" height="15" fill="rgb(248,217,23)" fg:x="76804" fg:w="109"/><text x="65.9528%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (109 samples, 0.09%)</title><rect x="65.7028%" y="629" width="0.0932%" height="15" fill="rgb(238,197,32)" fg:x="76804" fg:w="109"/><text x="65.9528%" y="639.50"></text></g><g><title>__rg_dealloc (109 samples, 0.09%)</title><rect x="65.7028%" y="613" width="0.0932%" height="15" fill="rgb(236,106,1)" fg:x="76804" fg:w="109"/><text x="65.9528%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (109 samples, 0.09%)</title><rect x="65.7028%" y="597" width="0.0932%" height="15" fill="rgb(219,228,13)" fg:x="76804" fg:w="109"/><text x="65.9528%" y="607.50"></text></g><g><title>sn_rust_dealloc (100 samples, 0.09%)</title><rect x="65.7105%" y="581" width="0.0855%" height="15" fill="rgb(238,30,35)" fg:x="76813" fg:w="100"/><text x="65.9605%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(simd_json::stage2::StackState,usize,usize)&gt;&gt; (111 samples, 0.09%)</title><rect x="65.7020%" y="693" width="0.0950%" height="15" fill="rgb(236,70,23)" fg:x="76803" fg:w="111"/><text x="65.9520%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(simd_json::stage2::StackState,usize,usize)&gt;&gt; (111 samples, 0.09%)</title><rect x="65.7020%" y="677" width="0.0950%" height="15" fill="rgb(249,104,48)" fg:x="76803" fg:w="111"/><text x="65.9520%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.09%)</title><rect x="65.7020%" y="661" width="0.0950%" height="15" fill="rgb(254,117,50)" fg:x="76803" fg:w="111"/><text x="65.9520%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (777 samples, 0.66%)</title><rect x="65.7969%" y="693" width="0.6647%" height="15" fill="rgb(223,152,4)" fg:x="76914" fg:w="777"/><text x="66.0469%" y="703.50"></text></g><g><title>core::ptr::write (777 samples, 0.66%)</title><rect x="65.7969%" y="677" width="0.6647%" height="15" fill="rgb(245,6,2)" fg:x="76914" fg:w="777"/><text x="66.0469%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_movemask_epi8 (311 samples, 0.27%)</title><rect x="66.6995%" y="677" width="0.2660%" height="15" fill="rgb(249,150,24)" fg:x="77969" fg:w="311"/><text x="66.9495%" y="687.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (117 samples, 0.10%)</title><rect x="66.9655%" y="677" width="0.1001%" height="15" fill="rgb(228,185,42)" fg:x="78280" fg:w="117"/><text x="67.2155%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (117 samples, 0.10%)</title><rect x="66.9655%" y="661" width="0.1001%" height="15" fill="rgb(226,39,33)" fg:x="78280" fg:w="117"/><text x="67.2155%" y="671.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (115 samples, 0.10%)</title><rect x="67.0656%" y="677" width="0.0984%" height="15" fill="rgb(221,166,19)" fg:x="78397" fg:w="115"/><text x="67.3156%" y="687.50"></text></g><g><title>simd_json::avx2::deser::&lt;impl simd_json::Deserializer&gt;::parse_str_ (912 samples, 0.78%)</title><rect x="66.4668%" y="693" width="0.7802%" height="15" fill="rgb(209,109,2)" fg:x="77697" fg:w="912"/><text x="66.7168%" y="703.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (97 samples, 0.08%)</title><rect x="67.1640%" y="677" width="0.0830%" height="15" fill="rgb(252,216,26)" fg:x="78512" fg:w="97"/><text x="67.4140%" y="687.50"></text></g><g><title>simd_json::numberparse::is_integer (29 samples, 0.02%)</title><rect x="67.6242%" y="677" width="0.0248%" height="15" fill="rgb(227,173,36)" fg:x="79050" fg:w="29"/><text x="67.8742%" y="687.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (29 samples, 0.02%)</title><rect x="67.6242%" y="661" width="0.0248%" height="15" fill="rgb(209,90,7)" fg:x="79050" fg:w="29"/><text x="67.8742%" y="671.50"></text></g><g><title>core::ops::range::RangeBounds::contains (29 samples, 0.02%)</title><rect x="67.6242%" y="645" width="0.0248%" height="15" fill="rgb(250,194,11)" fg:x="79050" fg:w="29"/><text x="67.8742%" y="655.50"></text></g><g><title>simd_json::numberparse::&lt;impl simd_json::Deserializer&gt;::parse_number_int (473 samples, 0.40%)</title><rect x="67.2470%" y="693" width="0.4046%" height="15" fill="rgb(220,72,50)" fg:x="78609" fg:w="473"/><text x="67.4970%" y="703.50"></text></g><g><title>simd_json::stage2::is_valid_false_atom (14 samples, 0.01%)</title><rect x="67.6516%" y="693" width="0.0120%" height="15" fill="rgb(222,106,48)" fg:x="79082" fg:w="14"/><text x="67.9016%" y="703.50"></text></g><g><title>simd_json::stage2::&lt;impl simd_json::Deserializer&gt;::build_tape (5,642 samples, 4.83%)</title><rect x="62.8542%" y="709" width="4.8265%" height="15" fill="rgb(216,220,45)" fg:x="73474" fg:w="5642"/><text x="63.1042%" y="719.50">simd_j..</text></g><g><title>simd_json::stage2::is_valid_true_atom (20 samples, 0.02%)</title><rect x="67.6636%" y="693" width="0.0171%" height="15" fill="rgb(234,112,18)" fg:x="79096" fg:w="20"/><text x="67.9136%" y="703.50"></text></g><g><title>simd_json::charutils::is_not_structural_or_whitespace (14 samples, 0.01%)</title><rect x="67.6687%" y="677" width="0.0120%" height="15" fill="rgb(206,179,9)" fg:x="79102" fg:w="14"/><text x="67.9187%" y="687.50"></text></g><g><title>sn_rust_dealloc (52 samples, 0.04%)</title><rect x="67.6807%" y="709" width="0.0445%" height="15" fill="rgb(215,115,40)" fg:x="79116" fg:w="52"/><text x="67.9307%" y="719.50"></text></g><g><title>simd_json::Deserializer::from_slice_with_buffers (10,562 samples, 9.04%)</title><rect x="58.6949%" y="725" width="9.0354%" height="15" fill="rgb(222,69,34)" fg:x="68612" fg:w="10562"/><text x="58.9449%" y="735.50">simd_json::De..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (41 samples, 0.04%)</title><rect x="68.6439%" y="645" width="0.0351%" height="15" fill="rgb(209,161,10)" fg:x="80242" fg:w="41"/><text x="68.8939%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (41 samples, 0.04%)</title><rect x="68.6439%" y="629" width="0.0351%" height="15" fill="rgb(217,6,38)" fg:x="80242" fg:w="41"/><text x="68.8939%" y="639.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::insert_nocheck (1,978 samples, 1.69%)</title><rect x="67.7303%" y="693" width="1.6921%" height="15" fill="rgb(229,229,48)" fg:x="79174" fg:w="1978"/><text x="67.9803%" y="703.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::insert_nocheck (1,921 samples, 1.64%)</title><rect x="67.7791%" y="677" width="1.6433%" height="15" fill="rgb(225,21,28)" fg:x="79231" fg:w="1921"/><text x="68.0291%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (915 samples, 0.78%)</title><rect x="68.6396%" y="661" width="0.7827%" height="15" fill="rgb(206,33,13)" fg:x="80237" fg:w="915"/><text x="68.8896%" y="671.50"></text></g><g><title>core::ptr::write (869 samples, 0.74%)</title><rect x="68.6790%" y="645" width="0.7434%" height="15" fill="rgb(242,178,17)" fg:x="80283" fg:w="869"/><text x="68.9290%" y="655.50"></text></g><g><title>simd_json::Deserializer::next_ (127 samples, 0.11%)</title><rect x="69.4592%" y="677" width="0.1086%" height="15" fill="rgb(220,162,5)" fg:x="81195" fg:w="127"/><text x="69.7092%" y="687.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (156 samples, 0.13%)</title><rect x="69.7115%" y="501" width="0.1335%" height="15" fill="rgb(210,33,43)" fg:x="81490" fg:w="156"/><text x="69.9615%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (219 samples, 0.19%)</title><rect x="69.6679%" y="597" width="0.1873%" height="15" fill="rgb(216,116,54)" fg:x="81439" fg:w="219"/><text x="69.9179%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (219 samples, 0.19%)</title><rect x="69.6679%" y="581" width="0.1873%" height="15" fill="rgb(249,92,24)" fg:x="81439" fg:w="219"/><text x="69.9179%" y="591.50"></text></g><g><title>alloc::alloc::alloc (214 samples, 0.18%)</title><rect x="69.6722%" y="565" width="0.1831%" height="15" fill="rgb(231,189,14)" fg:x="81444" fg:w="214"/><text x="69.9222%" y="575.50"></text></g><g><title>__rg_alloc (214 samples, 0.18%)</title><rect x="69.6722%" y="549" width="0.1831%" height="15" fill="rgb(230,8,41)" fg:x="81444" fg:w="214"/><text x="69.9222%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (214 samples, 0.18%)</title><rect x="69.6722%" y="533" width="0.1831%" height="15" fill="rgb(249,7,27)" fg:x="81444" fg:w="214"/><text x="69.9222%" y="543.50"></text></g><g><title>sn_rust_alloc (214 samples, 0.18%)</title><rect x="69.6722%" y="517" width="0.1831%" height="15" fill="rgb(232,86,5)" fg:x="81444" fg:w="214"/><text x="69.9222%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (239 samples, 0.20%)</title><rect x="69.6551%" y="661" width="0.2045%" height="15" fill="rgb(224,175,18)" fg:x="81424" fg:w="239"/><text x="69.9051%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (239 samples, 0.20%)</title><rect x="69.6551%" y="645" width="0.2045%" height="15" fill="rgb(220,129,12)" fg:x="81424" fg:w="239"/><text x="69.9051%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (230 samples, 0.20%)</title><rect x="69.6628%" y="629" width="0.1968%" height="15" fill="rgb(210,19,36)" fg:x="81433" fg:w="230"/><text x="69.9128%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (230 samples, 0.20%)</title><rect x="69.6628%" y="613" width="0.1968%" height="15" fill="rgb(219,96,14)" fg:x="81433" fg:w="230"/><text x="69.9128%" y="623.50"></text></g><g><title>core::ptr::write (1,296 samples, 1.11%)</title><rect x="69.8595%" y="661" width="1.1087%" height="15" fill="rgb(249,106,1)" fg:x="81663" fg:w="1296"/><text x="70.1095%" y="671.50"></text></g><g><title>simd_json::Deserializer::next_ (191 samples, 0.16%)</title><rect x="71.0469%" y="645" width="0.1634%" height="15" fill="rgb(249,155,20)" fg:x="83051" fg:w="191"/><text x="71.2969%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (37 samples, 0.03%)</title><rect x="71.1787%" y="629" width="0.0317%" height="15" fill="rgb(244,168,9)" fg:x="83205" fg:w="37"/><text x="71.4287%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (37 samples, 0.03%)</title><rect x="71.1787%" y="613" width="0.0317%" height="15" fill="rgb(216,23,50)" fg:x="83205" fg:w="37"/><text x="71.4287%" y="623.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse_array (1,944 samples, 1.66%)</title><rect x="69.5678%" y="677" width="1.6630%" height="15" fill="rgb(224,219,20)" fg:x="81322" fg:w="1944"/><text x="69.8178%" y="687.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse (307 samples, 0.26%)</title><rect x="70.9682%" y="661" width="0.2626%" height="15" fill="rgb(222,156,15)" fg:x="82959" fg:w="307"/><text x="71.2182%" y="671.50"></text></g><g><title>tremor_value::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for tremor_value::value::Value&gt;::from (24 samples, 0.02%)</title><rect x="71.2103%" y="645" width="0.0205%" height="15" fill="rgb(231,97,17)" fg:x="83242" fg:w="24"/><text x="71.4603%" y="655.50"></text></g><g><title>tremor_value::value::Value::String (24 samples, 0.02%)</title><rect x="71.2103%" y="629" width="0.0205%" height="15" fill="rgb(218,70,48)" fg:x="83242" fg:w="24"/><text x="71.4603%" y="639.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (14,686 samples, 12.56%)</title><rect x="58.6932%" y="885" width="12.5633%" height="15" fill="rgb(212,196,52)" fg:x="68610" fg:w="14686"/><text x="58.9432%" y="895.50">tremor_runtime::con..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,686 samples, 12.56%)</title><rect x="58.6932%" y="869" width="12.5633%" height="15" fill="rgb(243,203,18)" fg:x="68610" fg:w="14686"/><text x="58.9432%" y="879.50">&lt;core::future::from..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (14,686 samples, 12.56%)</title><rect x="58.6932%" y="853" width="12.5633%" height="15" fill="rgb(252,125,41)" fg:x="68610" fg:w="14686"/><text x="58.9432%" y="863.50">tremor_runtime::con..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,686 samples, 12.56%)</title><rect x="58.6932%" y="837" width="12.5633%" height="15" fill="rgb(223,180,33)" fg:x="68610" fg:w="14686"/><text x="58.9432%" y="847.50">&lt;core::future::from..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (14,686 samples, 12.56%)</title><rect x="58.6932%" y="821" width="12.5633%" height="15" fill="rgb(254,159,46)" fg:x="68610" fg:w="14686"/><text x="58.9432%" y="831.50">tremor_runtime::con..</text></g><g><title>tremor_runtime::connectors::source::build_events (14,684 samples, 12.56%)</title><rect x="58.6949%" y="805" width="12.5616%" height="15" fill="rgb(254,38,10)" fg:x="68612" fg:w="14684"/><text x="58.9449%" y="815.50">tremor_runtime::con..</text></g><g><title>tremor_script::srs::EventPayload::try_new (14,684 samples, 12.56%)</title><rect x="58.6949%" y="789" width="12.5616%" height="15" fill="rgb(208,217,32)" fg:x="68612" fg:w="14684"/><text x="58.9449%" y="799.50">tremor_script::srs:..</text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (14,684 samples, 12.56%)</title><rect x="58.6949%" y="773" width="12.5616%" height="15" fill="rgb(221,120,13)" fg:x="68612" fg:w="14684"/><text x="58.9449%" y="783.50">tremor_runtime::con..</text></g><g><title>&lt;tremor_runtime::codec::json::Json&lt;S&gt; as tremor_runtime::codec::Codec&gt;::decode (14,684 samples, 12.56%)</title><rect x="58.6949%" y="757" width="12.5616%" height="15" fill="rgb(246,54,52)" fg:x="68612" fg:w="14684"/><text x="58.9449%" y="767.50">&lt;tremor_runtime::co..</text></g><g><title>tremor_value::value::parse_to_value_with_buffers (14,684 samples, 12.56%)</title><rect x="58.6949%" y="741" width="12.5616%" height="15" fill="rgb(242,34,25)" fg:x="68612" fg:w="14684"/><text x="58.9449%" y="751.50">tremor_value::value..</text></g><g><title>tremor_value::value::ValueDeserializer::parse (4,122 samples, 3.53%)</title><rect x="67.7303%" y="725" width="3.5262%" height="15" fill="rgb(247,209,9)" fg:x="79174" fg:w="4122"/><text x="67.9803%" y="735.50">tre..</text></g><g><title>tremor_value::value::ValueDeserializer::parse_map (4,122 samples, 3.53%)</title><rect x="67.7303%" y="709" width="3.5262%" height="15" fill="rgb(228,71,26)" fg:x="79174" fg:w="4122"/><text x="67.9803%" y="719.50">tre..</text></g><g><title>tremor_value::value::ValueDeserializer::parse (2,138 samples, 1.83%)</title><rect x="69.4275%" y="693" width="1.8290%" height="15" fill="rgb(222,145,49)" fg:x="81158" fg:w="2138"/><text x="69.6775%" y="703.50">t..</text></g><g><title>tremor_value::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for tremor_value::value::Value&gt;::from (30 samples, 0.03%)</title><rect x="71.2308%" y="677" width="0.0257%" height="15" fill="rgb(218,121,17)" fg:x="83266" fg:w="30"/><text x="71.4808%" y="687.50"></text></g><g><title>tremor_value::value::Value::String (30 samples, 0.03%)</title><rect x="71.2308%" y="661" width="0.0257%" height="15" fill="rgb(244,50,7)" fg:x="83266" fg:w="30"/><text x="71.4808%" y="671.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="71.2830%" y="869" width="0.0137%" height="15" fill="rgb(246,229,37)" fg:x="83327" fg:w="16"/><text x="71.5330%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="71.2847%" y="853" width="0.0120%" height="15" fill="rgb(225,18,5)" fg:x="83329" fg:w="14"/><text x="71.5347%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="71.2847%" y="837" width="0.0120%" height="15" fill="rgb(213,204,8)" fg:x="83329" fg:w="14"/><text x="71.5347%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.01%)</title><rect x="71.2847%" y="821" width="0.0120%" height="15" fill="rgb(238,103,6)" fg:x="83329" fg:w="14"/><text x="71.5347%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.01%)</title><rect x="71.2847%" y="805" width="0.0120%" height="15" fill="rgb(222,25,35)" fg:x="83329" fg:w="14"/><text x="71.5347%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.01%)</title><rect x="71.2847%" y="789" width="0.0120%" height="15" fill="rgb(213,203,35)" fg:x="83329" fg:w="14"/><text x="71.5347%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (46 samples, 0.04%)</title><rect x="71.2651%" y="885" width="0.0394%" height="15" fill="rgb(221,79,53)" fg:x="83306" fg:w="46"/><text x="71.5151%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (82 samples, 0.07%)</title><rect x="71.3746%" y="725" width="0.0701%" height="15" fill="rgb(243,200,35)" fg:x="83434" fg:w="82"/><text x="71.6246%" y="735.50"></text></g><g><title>core::mem::replace (82 samples, 0.07%)</title><rect x="71.3746%" y="709" width="0.0701%" height="15" fill="rgb(248,60,25)" fg:x="83434" fg:w="82"/><text x="71.6246%" y="719.50"></text></g><g><title>core::ptr::read (82 samples, 0.07%)</title><rect x="71.3746%" y="693" width="0.0701%" height="15" fill="rgb(227,53,46)" fg:x="83434" fg:w="82"/><text x="71.6246%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (136 samples, 0.12%)</title><rect x="71.3497%" y="741" width="0.1163%" height="15" fill="rgb(216,120,32)" fg:x="83405" fg:w="136"/><text x="71.5997%" y="751.50"></text></g><g><title>core::mem::drop (25 samples, 0.02%)</title><rect x="71.4447%" y="725" width="0.0214%" height="15" fill="rgb(220,134,1)" fg:x="83516" fg:w="25"/><text x="71.6947%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (25 samples, 0.02%)</title><rect x="71.4447%" y="709" width="0.0214%" height="15" fill="rgb(237,168,5)" fg:x="83516" fg:w="25"/><text x="71.6947%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (140 samples, 0.12%)</title><rect x="71.4661%" y="741" width="0.1198%" height="15" fill="rgb(231,100,33)" fg:x="83541" fg:w="140"/><text x="71.7161%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (134 samples, 0.11%)</title><rect x="71.4712%" y="725" width="0.1146%" height="15" fill="rgb(236,177,47)" fg:x="83547" fg:w="134"/><text x="71.7212%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (134 samples, 0.11%)</title><rect x="71.4712%" y="709" width="0.1146%" height="15" fill="rgb(235,7,49)" fg:x="83547" fg:w="134"/><text x="71.7212%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (118 samples, 0.10%)</title><rect x="71.4849%" y="693" width="0.1009%" height="15" fill="rgb(232,119,22)" fg:x="83563" fg:w="118"/><text x="71.7349%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (118 samples, 0.10%)</title><rect x="71.4849%" y="677" width="0.1009%" height="15" fill="rgb(254,73,53)" fg:x="83563" fg:w="118"/><text x="71.7349%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (118 samples, 0.10%)</title><rect x="71.4849%" y="661" width="0.1009%" height="15" fill="rgb(251,35,20)" fg:x="83563" fg:w="118"/><text x="71.7349%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_swap (118 samples, 0.10%)</title><rect x="71.4849%" y="645" width="0.1009%" height="15" fill="rgb(241,119,20)" fg:x="83563" fg:w="118"/><text x="71.7349%" y="655.50"></text></g><g><title>core::task::wake::Waker::will_wake (24 samples, 0.02%)</title><rect x="71.5901%" y="741" width="0.0205%" height="15" fill="rgb(207,102,14)" fg:x="83686" fg:w="24"/><text x="71.8401%" y="751.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (24 samples, 0.02%)</title><rect x="71.5901%" y="725" width="0.0205%" height="15" fill="rgb(248,201,50)" fg:x="83686" fg:w="24"/><text x="71.8401%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (24 samples, 0.02%)</title><rect x="71.5901%" y="709" width="0.0205%" height="15" fill="rgb(222,185,44)" fg:x="83686" fg:w="24"/><text x="71.8401%" y="719.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (24 samples, 0.02%)</title><rect x="71.5901%" y="693" width="0.0205%" height="15" fill="rgb(218,107,18)" fg:x="83686" fg:w="24"/><text x="71.8401%" y="703.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (523 samples, 0.45%)</title><rect x="71.3172%" y="869" width="0.4474%" height="15" fill="rgb(237,177,39)" fg:x="83367" fg:w="523"/><text x="71.5672%" y="879.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (523 samples, 0.45%)</title><rect x="71.3172%" y="853" width="0.4474%" height="15" fill="rgb(246,69,6)" fg:x="83367" fg:w="523"/><text x="71.5672%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (523 samples, 0.45%)</title><rect x="71.3172%" y="837" width="0.4474%" height="15" fill="rgb(234,208,37)" fg:x="83367" fg:w="523"/><text x="71.5672%" y="847.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (523 samples, 0.45%)</title><rect x="71.3172%" y="821" width="0.4474%" height="15" fill="rgb(225,4,6)" fg:x="83367" fg:w="523"/><text x="71.5672%" y="831.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (523 samples, 0.45%)</title><rect x="71.3172%" y="805" width="0.4474%" height="15" fill="rgb(233,45,0)" fg:x="83367" fg:w="523"/><text x="71.5672%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (523 samples, 0.45%)</title><rect x="71.3172%" y="789" width="0.4474%" height="15" fill="rgb(226,136,5)" fg:x="83367" fg:w="523"/><text x="71.5672%" y="799.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (523 samples, 0.45%)</title><rect x="71.3172%" y="773" width="0.4474%" height="15" fill="rgb(211,91,47)" fg:x="83367" fg:w="523"/><text x="71.5672%" y="783.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (523 samples, 0.45%)</title><rect x="71.3172%" y="757" width="0.4474%" height="15" fill="rgb(242,88,51)" fg:x="83367" fg:w="523"/><text x="71.5672%" y="767.50"></text></g><g><title>event_listener::Inner::lock (180 samples, 0.15%)</title><rect x="71.6107%" y="741" width="0.1540%" height="15" fill="rgb(230,91,28)" fg:x="83710" fg:w="180"/><text x="71.8607%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (166 samples, 0.14%)</title><rect x="71.6226%" y="725" width="0.1420%" height="15" fill="rgb(254,186,29)" fg:x="83724" fg:w="166"/><text x="71.8726%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (158 samples, 0.14%)</title><rect x="71.6295%" y="709" width="0.1352%" height="15" fill="rgb(238,6,4)" fg:x="83732" fg:w="158"/><text x="71.8795%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (158 samples, 0.14%)</title><rect x="71.6295%" y="693" width="0.1352%" height="15" fill="rgb(221,151,16)" fg:x="83732" fg:w="158"/><text x="71.8795%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (158 samples, 0.14%)</title><rect x="71.6295%" y="677" width="0.1352%" height="15" fill="rgb(251,143,52)" fg:x="83732" fg:w="158"/><text x="71.8795%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (158 samples, 0.14%)</title><rect x="71.6295%" y="661" width="0.1352%" height="15" fill="rgb(206,90,15)" fg:x="83732" fg:w="158"/><text x="71.8795%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.01%)</title><rect x="71.9759%" y="485" width="0.0137%" height="15" fill="rgb(218,35,8)" fg:x="84137" fg:w="16"/><text x="72.2259%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.01%)</title><rect x="71.9759%" y="469" width="0.0137%" height="15" fill="rgb(239,215,6)" fg:x="84137" fg:w="16"/><text x="72.2259%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.01%)</title><rect x="71.9759%" y="453" width="0.0137%" height="15" fill="rgb(245,116,39)" fg:x="84137" fg:w="16"/><text x="72.2259%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.01%)</title><rect x="71.9759%" y="437" width="0.0137%" height="15" fill="rgb(242,65,28)" fg:x="84137" fg:w="16"/><text x="72.2259%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.01%)</title><rect x="71.9759%" y="421" width="0.0137%" height="15" fill="rgb(252,132,53)" fg:x="84137" fg:w="16"/><text x="72.2259%" y="431.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.01%)</title><rect x="71.9759%" y="405" width="0.0137%" height="15" fill="rgb(224,159,50)" fg:x="84137" fg:w="16"/><text x="72.2259%" y="415.50"></text></g><g><title>__rg_alloc (16 samples, 0.01%)</title><rect x="71.9759%" y="389" width="0.0137%" height="15" fill="rgb(224,93,4)" fg:x="84137" fg:w="16"/><text x="72.2259%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.01%)</title><rect x="71.9759%" y="373" width="0.0137%" height="15" fill="rgb(208,81,34)" fg:x="84137" fg:w="16"/><text x="72.2259%" y="383.50"></text></g><g><title>sn_rust_alloc (16 samples, 0.01%)</title><rect x="71.9759%" y="357" width="0.0137%" height="15" fill="rgb(233,92,54)" fg:x="84137" fg:w="16"/><text x="72.2259%" y="367.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (32 samples, 0.03%)</title><rect x="71.9648%" y="645" width="0.0274%" height="15" fill="rgb(237,21,14)" fg:x="84124" fg:w="32"/><text x="72.2148%" y="655.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (28 samples, 0.02%)</title><rect x="71.9682%" y="629" width="0.0240%" height="15" fill="rgb(249,128,51)" fg:x="84128" fg:w="28"/><text x="72.2182%" y="639.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="71.9691%" y="613" width="0.0231%" height="15" fill="rgb(223,129,24)" fg:x="84129" fg:w="27"/><text x="72.2191%" y="623.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="71.9734%" y="597" width="0.0188%" height="15" fill="rgb(231,168,25)" fg:x="84134" fg:w="22"/><text x="72.2234%" y="607.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (19 samples, 0.02%)</title><rect x="71.9759%" y="581" width="0.0163%" height="15" fill="rgb(224,39,20)" fg:x="84137" fg:w="19"/><text x="72.2259%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (19 samples, 0.02%)</title><rect x="71.9759%" y="565" width="0.0163%" height="15" fill="rgb(225,152,53)" fg:x="84137" fg:w="19"/><text x="72.2259%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (19 samples, 0.02%)</title><rect x="71.9759%" y="549" width="0.0163%" height="15" fill="rgb(252,17,24)" fg:x="84137" fg:w="19"/><text x="72.2259%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="71.9759%" y="533" width="0.0163%" height="15" fill="rgb(250,114,30)" fg:x="84137" fg:w="19"/><text x="72.2259%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="71.9759%" y="517" width="0.0163%" height="15" fill="rgb(229,5,4)" fg:x="84137" fg:w="19"/><text x="72.2259%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="71.9759%" y="501" width="0.0163%" height="15" fill="rgb(225,176,49)" fg:x="84137" fg:w="19"/><text x="72.2259%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (59 samples, 0.05%)</title><rect x="71.9948%" y="645" width="0.0505%" height="15" fill="rgb(224,221,49)" fg:x="84159" fg:w="59"/><text x="72.2448%" y="655.50"></text></g><g><title>sn_rust_dealloc (31 samples, 0.03%)</title><rect x="72.1171%" y="565" width="0.0265%" height="15" fill="rgb(253,169,27)" fg:x="84302" fg:w="31"/><text x="72.3671%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (63 samples, 0.05%)</title><rect x="72.0983%" y="613" width="0.0539%" height="15" fill="rgb(211,206,16)" fg:x="84280" fg:w="63"/><text x="72.3483%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (54 samples, 0.05%)</title><rect x="72.1060%" y="597" width="0.0462%" height="15" fill="rgb(244,87,35)" fg:x="84289" fg:w="54"/><text x="72.3560%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (51 samples, 0.04%)</title><rect x="72.1085%" y="581" width="0.0436%" height="15" fill="rgb(246,28,10)" fg:x="84292" fg:w="51"/><text x="72.3585%" y="591.50"></text></g><g><title>sn_rust_dealloc (16 samples, 0.01%)</title><rect x="72.1522%" y="613" width="0.0137%" height="15" fill="rgb(229,12,44)" fg:x="84343" fg:w="16"/><text x="72.4022%" y="623.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry_mut (22 samples, 0.02%)</title><rect x="72.1710%" y="581" width="0.0188%" height="15" fill="rgb(210,145,37)" fg:x="84365" fg:w="22"/><text x="72.4210%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.01%)</title><rect x="72.2044%" y="469" width="0.0128%" height="15" fill="rgb(227,112,52)" fg:x="84404" fg:w="15"/><text x="72.4544%" y="479.50"></text></g><g><title>sn_rust_alloc (12 samples, 0.01%)</title><rect x="72.2069%" y="453" width="0.0103%" height="15" fill="rgb(238,155,34)" fg:x="84407" fg:w="12"/><text x="72.4569%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (24 samples, 0.02%)</title><rect x="72.2001%" y="501" width="0.0205%" height="15" fill="rgb(239,226,36)" fg:x="84399" fg:w="24"/><text x="72.4501%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (24 samples, 0.02%)</title><rect x="72.2001%" y="485" width="0.0205%" height="15" fill="rgb(230,16,23)" fg:x="84399" fg:w="24"/><text x="72.4501%" y="495.50"></text></g><g><title>halfbrown::raw_entry::RawVacantEntryMut&lt;K,V,S&gt;::insert (57 samples, 0.05%)</title><rect x="72.1941%" y="565" width="0.0488%" height="15" fill="rgb(236,171,36)" fg:x="84392" fg:w="57"/><text x="72.4441%" y="575.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawVacantEntryMut&lt;K,V,S&gt;::insert (55 samples, 0.05%)</title><rect x="72.1958%" y="549" width="0.0471%" height="15" fill="rgb(221,22,14)" fg:x="84394" fg:w="55"/><text x="72.4458%" y="559.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::insert_idx (53 samples, 0.05%)</title><rect x="72.1975%" y="533" width="0.0453%" height="15" fill="rgb(242,43,11)" fg:x="84396" fg:w="53"/><text x="72.4475%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (52 samples, 0.04%)</title><rect x="72.1984%" y="517" width="0.0445%" height="15" fill="rgb(232,69,23)" fg:x="84397" fg:w="52"/><text x="72.4484%" y="527.50"></text></g><g><title>core::ptr::write (25 samples, 0.02%)</title><rect x="72.2215%" y="501" width="0.0214%" height="15" fill="rgb(216,180,54)" fg:x="84424" fg:w="25"/><text x="72.4715%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (42 samples, 0.04%)</title><rect x="72.2454%" y="517" width="0.0359%" height="15" fill="rgb(216,5,24)" fg:x="84452" fg:w="42"/><text x="72.4954%" y="527.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (95 samples, 0.08%)</title><rect x="72.2976%" y="325" width="0.0813%" height="15" fill="rgb(225,89,9)" fg:x="84513" fg:w="95"/><text x="72.5476%" y="335.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign (394 samples, 0.34%)</title><rect x="72.0452%" y="645" width="0.3371%" height="15" fill="rgb(243,75,33)" fg:x="84218" fg:w="394"/><text x="72.2952%" y="655.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign_nested (376 samples, 0.32%)</title><rect x="72.0606%" y="629" width="0.3217%" height="15" fill="rgb(247,141,45)" fg:x="84236" fg:w="376"/><text x="72.3106%" y="639.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup_or_insert_mut (249 samples, 0.21%)</title><rect x="72.1693%" y="613" width="0.2130%" height="15" fill="rgb(232,177,36)" fg:x="84363" fg:w="249"/><text x="72.4193%" y="623.50"></text></g><g><title>tremor_value::known_key::KnownKey::map_lookup_or_insert_mut (247 samples, 0.21%)</title><rect x="72.1710%" y="597" width="0.2113%" height="15" fill="rgb(219,125,36)" fg:x="84365" fg:w="247"/><text x="72.4210%" y="607.50"></text></g><g><title>halfbrown::raw_entry::RawEntryMut&lt;K,V,S&gt;::or_insert_with (220 samples, 0.19%)</title><rect x="72.1941%" y="581" width="0.1882%" height="15" fill="rgb(227,94,9)" fg:x="84392" fg:w="220"/><text x="72.4441%" y="591.50"></text></g><g><title>tremor_value::known_key::KnownKey::map_lookup_or_insert_mut::{{closure}} (163 samples, 0.14%)</title><rect x="72.2428%" y="565" width="0.1394%" height="15" fill="rgb(240,34,52)" fg:x="84449" fg:w="163"/><text x="72.4928%" y="575.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign_nested::{{closure}} (160 samples, 0.14%)</title><rect x="72.2454%" y="549" width="0.1369%" height="15" fill="rgb(216,45,12)" fg:x="84452" fg:w="160"/><text x="72.4954%" y="559.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (160 samples, 0.14%)</title><rect x="72.2454%" y="533" width="0.1369%" height="15" fill="rgb(246,21,19)" fg:x="84452" fg:w="160"/><text x="72.4954%" y="543.50"></text></g><g><title>halfbrown::HashMap&lt;K,V&gt;::with_capacity (118 samples, 0.10%)</title><rect x="72.2813%" y="517" width="0.1009%" height="15" fill="rgb(213,98,42)" fg:x="84494" fg:w="118"/><text x="72.5313%" y="527.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V&gt;::with_capacity (117 samples, 0.10%)</title><rect x="72.2822%" y="501" width="0.1001%" height="15" fill="rgb(250,136,47)" fg:x="84495" fg:w="117"/><text x="72.5322%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (117 samples, 0.10%)</title><rect x="72.2822%" y="485" width="0.1001%" height="15" fill="rgb(251,124,27)" fg:x="84495" fg:w="117"/><text x="72.5322%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (117 samples, 0.10%)</title><rect x="72.2822%" y="469" width="0.1001%" height="15" fill="rgb(229,180,14)" fg:x="84495" fg:w="117"/><text x="72.5322%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (117 samples, 0.10%)</title><rect x="72.2822%" y="453" width="0.1001%" height="15" fill="rgb(245,216,25)" fg:x="84495" fg:w="117"/><text x="72.5322%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (117 samples, 0.10%)</title><rect x="72.2822%" y="437" width="0.1001%" height="15" fill="rgb(251,43,5)" fg:x="84495" fg:w="117"/><text x="72.5322%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (117 samples, 0.10%)</title><rect x="72.2822%" y="421" width="0.1001%" height="15" fill="rgb(250,128,24)" fg:x="84495" fg:w="117"/><text x="72.5322%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (117 samples, 0.10%)</title><rect x="72.2822%" y="405" width="0.1001%" height="15" fill="rgb(217,117,27)" fg:x="84495" fg:w="117"/><text x="72.5322%" y="415.50"></text></g><g><title>alloc::alloc::alloc (117 samples, 0.10%)</title><rect x="72.2822%" y="389" width="0.1001%" height="15" fill="rgb(245,147,4)" fg:x="84495" fg:w="117"/><text x="72.5322%" y="399.50"></text></g><g><title>__rg_alloc (117 samples, 0.10%)</title><rect x="72.2822%" y="373" width="0.1001%" height="15" fill="rgb(242,201,35)" fg:x="84495" fg:w="117"/><text x="72.5322%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (117 samples, 0.10%)</title><rect x="72.2822%" y="357" width="0.1001%" height="15" fill="rgb(218,181,1)" fg:x="84495" fg:w="117"/><text x="72.5322%" y="367.50"></text></g><g><title>sn_rust_alloc (115 samples, 0.10%)</title><rect x="72.2839%" y="341" width="0.0984%" height="15" fill="rgb(222,6,29)" fg:x="84497" fg:w="115"/><text x="72.5339%" y="351.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::execute_effectors (602 samples, 0.51%)</title><rect x="71.8699%" y="677" width="0.5150%" height="15" fill="rgb(208,186,3)" fg:x="84013" fg:w="602"/><text x="72.1199%" y="687.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (566 samples, 0.48%)</title><rect x="71.9007%" y="661" width="0.4842%" height="15" fill="rgb(216,36,26)" fg:x="84049" fg:w="566"/><text x="72.1507%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (24 samples, 0.02%)</title><rect x="72.4191%" y="645" width="0.0205%" height="15" fill="rgb(248,201,23)" fg:x="84655" fg:w="24"/><text x="72.6691%" y="655.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (99 samples, 0.08%)</title><rect x="72.4482%" y="517" width="0.0847%" height="15" fill="rgb(251,170,31)" fg:x="84689" fg:w="99"/><text x="72.6982%" y="527.50"></text></g><g><title>tremor_value::value::cmp::&lt;impl core::cmp::PartialEq for tremor_value::value::Value&gt;::eq (99 samples, 0.08%)</title><rect x="72.4482%" y="501" width="0.0847%" height="15" fill="rgb(207,110,25)" fg:x="84689" fg:w="99"/><text x="72.6982%" y="511.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.01%)</title><rect x="72.5217%" y="485" width="0.0111%" height="15" fill="rgb(250,54,15)" fg:x="84775" fg:w="13"/><text x="72.7717%" y="495.50"></text></g><g><title>tremor_script::ast::Invocable::invoke (106 samples, 0.09%)</title><rect x="72.4430%" y="645" width="0.0907%" height="15" fill="rgb(227,68,33)" fg:x="84683" fg:w="106"/><text x="72.6930%" y="655.50"></text></g><g><title>tremor_script::registry::TremorFnWrapper::invoke (105 samples, 0.09%)</title><rect x="72.4439%" y="629" width="0.0898%" height="15" fill="rgb(238,34,41)" fg:x="84684" fg:w="105"/><text x="72.6939%" y="639.50"></text></g><g><title>tremor_script::std_lib::array::load::&lt;impl tremor_script::registry::TremorFn for tremor_script::std_lib::array::load::contains::Func&gt;::invoke (105 samples, 0.09%)</title><rect x="72.4439%" y="613" width="0.0898%" height="15" fill="rgb(220,11,15)" fg:x="84684" fg:w="105"/><text x="72.6939%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (103 samples, 0.09%)</title><rect x="72.4456%" y="597" width="0.0881%" height="15" fill="rgb(246,111,35)" fg:x="84686" fg:w="103"/><text x="72.6956%" y="607.50"></text></g><g><title>tremor_script::std_lib::array::load::&lt;impl tremor_script::registry::TremorFn for tremor_script::std_lib::array::load::contains::Func&gt;::invoke::{{closure}} (103 samples, 0.09%)</title><rect x="72.4456%" y="581" width="0.0881%" height="15" fill="rgb(209,88,53)" fg:x="84686" fg:w="103"/><text x="72.6956%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (102 samples, 0.09%)</title><rect x="72.4464%" y="565" width="0.0873%" height="15" fill="rgb(231,185,47)" fg:x="84687" fg:w="102"/><text x="72.6964%" y="575.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (102 samples, 0.09%)</title><rect x="72.4464%" y="549" width="0.0873%" height="15" fill="rgb(233,154,1)" fg:x="84687" fg:w="102"/><text x="72.6964%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (102 samples, 0.09%)</title><rect x="72.4464%" y="533" width="0.0873%" height="15" fill="rgb(225,15,46)" fg:x="84687" fg:w="102"/><text x="72.6964%" y="543.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (71 samples, 0.06%)</title><rect x="72.5713%" y="517" width="0.0607%" height="15" fill="rgb(211,135,41)" fg:x="84833" fg:w="71"/><text x="72.8213%" y="527.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (69 samples, 0.06%)</title><rect x="72.5731%" y="501" width="0.0590%" height="15" fill="rgb(208,54,0)" fg:x="84835" fg:w="69"/><text x="72.8231%" y="511.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_hash (69 samples, 0.06%)</title><rect x="72.5731%" y="485" width="0.0590%" height="15" fill="rgb(244,136,14)" fg:x="84835" fg:w="69"/><text x="72.8231%" y="495.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::search (69 samples, 0.06%)</title><rect x="72.5731%" y="469" width="0.0590%" height="15" fill="rgb(241,56,14)" fg:x="84835" fg:w="69"/><text x="72.8231%" y="479.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (69 samples, 0.06%)</title><rect x="72.5731%" y="453" width="0.0590%" height="15" fill="rgb(205,80,24)" fg:x="84835" fg:w="69"/><text x="72.8231%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (66 samples, 0.06%)</title><rect x="72.5756%" y="437" width="0.0565%" height="15" fill="rgb(220,57,4)" fg:x="84838" fg:w="66"/><text x="72.8256%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (66 samples, 0.06%)</title><rect x="72.5756%" y="421" width="0.0565%" height="15" fill="rgb(226,193,50)" fg:x="84838" fg:w="66"/><text x="72.8256%" y="431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (66 samples, 0.06%)</title><rect x="72.5756%" y="405" width="0.0565%" height="15" fill="rgb(231,168,22)" fg:x="84838" fg:w="66"/><text x="72.8256%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (66 samples, 0.06%)</title><rect x="72.5756%" y="389" width="0.0565%" height="15" fill="rgb(254,215,14)" fg:x="84838" fg:w="66"/><text x="72.8256%" y="399.50"></text></g><g><title>[libc-2.31.so] (58 samples, 0.05%)</title><rect x="72.5825%" y="373" width="0.0496%" height="15" fill="rgb(211,115,16)" fg:x="84846" fg:w="58"/><text x="72.8325%" y="383.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (290 samples, 0.25%)</title><rect x="72.3849%" y="677" width="0.2481%" height="15" fill="rgb(236,210,16)" fg:x="84615" fg:w="290"/><text x="72.6349%" y="687.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::invoke2 (276 samples, 0.24%)</title><rect x="72.3968%" y="661" width="0.2361%" height="15" fill="rgb(221,94,12)" fg:x="84629" fg:w="276"/><text x="72.6468%" y="671.50"></text></g><g><title>tremor_script::interpreter::imut_expr::eval_for_fn_arg (116 samples, 0.10%)</title><rect x="72.5337%" y="645" width="0.0992%" height="15" fill="rgb(235,218,49)" fg:x="84789" fg:w="116"/><text x="72.7837%" y="655.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (102 samples, 0.09%)</title><rect x="72.5457%" y="629" width="0.0873%" height="15" fill="rgb(217,114,14)" fg:x="84803" fg:w="102"/><text x="72.7957%" y="639.50"></text></g><g><title>tremor_script::interpreter::resolve (99 samples, 0.08%)</title><rect x="72.5482%" y="613" width="0.0847%" height="15" fill="rgb(216,145,22)" fg:x="84806" fg:w="99"/><text x="72.7982%" y="623.50"></text></g><g><title>tremor_script::interpreter::resolve_value (98 samples, 0.08%)</title><rect x="72.5491%" y="597" width="0.0838%" height="15" fill="rgb(217,112,39)" fg:x="84807" fg:w="98"/><text x="72.7991%" y="607.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup (76 samples, 0.07%)</title><rect x="72.5679%" y="581" width="0.0650%" height="15" fill="rgb(225,85,32)" fg:x="84829" fg:w="76"/><text x="72.8179%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (76 samples, 0.07%)</title><rect x="72.5679%" y="565" width="0.0650%" height="15" fill="rgb(245,209,47)" fg:x="84829" fg:w="76"/><text x="72.8179%" y="575.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup::{{closure}} (73 samples, 0.06%)</title><rect x="72.5705%" y="549" width="0.0624%" height="15" fill="rgb(218,220,15)" fg:x="84832" fg:w="73"/><text x="72.8205%" y="559.50"></text></g><g><title>tremor_value::known_key::KnownKey::map_lookup (73 samples, 0.06%)</title><rect x="72.5705%" y="533" width="0.0624%" height="15" fill="rgb(222,202,31)" fg:x="84832" fg:w="73"/><text x="72.8205%" y="543.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::if_expr (954 samples, 0.82%)</title><rect x="71.8493%" y="693" width="0.8161%" height="15" fill="rgb(243,203,4)" fg:x="83989" fg:w="954"/><text x="72.0993%" y="703.50"></text></g><g><title>tremor_script::interpreter::test_predicate_expr (38 samples, 0.03%)</title><rect x="72.6329%" y="677" width="0.0325%" height="15" fill="rgb(237,92,17)" fg:x="84905" fg:w="38"/><text x="72.8829%" y="687.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (25 samples, 0.02%)</title><rect x="72.8990%" y="677" width="0.0214%" height="15" fill="rgb(231,119,7)" fg:x="85216" fg:w="25"/><text x="73.1490%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (17 samples, 0.01%)</title><rect x="72.9058%" y="661" width="0.0145%" height="15" fill="rgb(237,82,41)" fg:x="85224" fg:w="17"/><text x="73.1558%" y="671.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (17 samples, 0.01%)</title><rect x="72.9058%" y="645" width="0.0145%" height="15" fill="rgb(226,81,48)" fg:x="85224" fg:w="17"/><text x="73.1558%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.02%)</title><rect x="72.9289%" y="677" width="0.0248%" height="15" fill="rgb(234,70,51)" fg:x="85251" fg:w="29"/><text x="73.1789%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::borrow::Cow&lt;tremor_value::value::Value&gt;&gt;&gt; (35 samples, 0.03%)</title><rect x="72.9589%" y="677" width="0.0299%" height="15" fill="rgb(251,86,4)" fg:x="85286" fg:w="35"/><text x="73.2089%" y="687.50"></text></g><g><title>tremor_script::ast::ClauseGroup&lt;Ex&gt;::precondition (45 samples, 0.04%)</title><rect x="72.9888%" y="677" width="0.0385%" height="15" fill="rgb(244,144,28)" fg:x="85321" fg:w="45"/><text x="73.2388%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (45 samples, 0.04%)</title><rect x="72.9888%" y="661" width="0.0385%" height="15" fill="rgb(232,161,39)" fg:x="85321" fg:w="45"/><text x="73.2388%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="73.4123%" y="661" width="0.0120%" height="15" fill="rgb(247,34,51)" fg:x="85816" fg:w="14"/><text x="73.6623%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (64 samples, 0.05%)</title><rect x="74.3841%" y="485" width="0.0547%" height="15" fill="rgb(225,132,2)" fg:x="86952" fg:w="64"/><text x="74.6341%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (64 samples, 0.05%)</title><rect x="74.3841%" y="469" width="0.0547%" height="15" fill="rgb(209,159,44)" fg:x="86952" fg:w="64"/><text x="74.6341%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (64 samples, 0.05%)</title><rect x="74.3841%" y="453" width="0.0547%" height="15" fill="rgb(251,214,1)" fg:x="86952" fg:w="64"/><text x="74.6341%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (64 samples, 0.05%)</title><rect x="74.3841%" y="437" width="0.0547%" height="15" fill="rgb(247,84,47)" fg:x="86952" fg:w="64"/><text x="74.6341%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (64 samples, 0.05%)</title><rect x="74.3841%" y="421" width="0.0547%" height="15" fill="rgb(240,111,43)" fg:x="86952" fg:w="64"/><text x="74.6341%" y="431.50"></text></g><g><title>alloc::alloc::alloc (59 samples, 0.05%)</title><rect x="74.3883%" y="405" width="0.0505%" height="15" fill="rgb(215,214,35)" fg:x="86957" fg:w="59"/><text x="74.6383%" y="415.50"></text></g><g><title>__rg_alloc (59 samples, 0.05%)</title><rect x="74.3883%" y="389" width="0.0505%" height="15" fill="rgb(248,207,23)" fg:x="86957" fg:w="59"/><text x="74.6383%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (59 samples, 0.05%)</title><rect x="74.3883%" y="373" width="0.0505%" height="15" fill="rgb(214,186,4)" fg:x="86957" fg:w="59"/><text x="74.6383%" y="383.50"></text></g><g><title>sn_rust_alloc (57 samples, 0.05%)</title><rect x="74.3901%" y="357" width="0.0488%" height="15" fill="rgb(220,133,22)" fg:x="86959" fg:w="57"/><text x="74.6401%" y="367.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (87 samples, 0.07%)</title><rect x="74.3841%" y="581" width="0.0744%" height="15" fill="rgb(239,134,19)" fg:x="86952" fg:w="87"/><text x="74.6341%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (87 samples, 0.07%)</title><rect x="74.3841%" y="565" width="0.0744%" height="15" fill="rgb(250,140,9)" fg:x="86952" fg:w="87"/><text x="74.6341%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (87 samples, 0.07%)</title><rect x="74.3841%" y="549" width="0.0744%" height="15" fill="rgb(225,59,14)" fg:x="86952" fg:w="87"/><text x="74.6341%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (87 samples, 0.07%)</title><rect x="74.3841%" y="533" width="0.0744%" height="15" fill="rgb(214,152,51)" fg:x="86952" fg:w="87"/><text x="74.6341%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (87 samples, 0.07%)</title><rect x="74.3841%" y="517" width="0.0744%" height="15" fill="rgb(251,227,43)" fg:x="86952" fg:w="87"/><text x="74.6341%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (87 samples, 0.07%)</title><rect x="74.3841%" y="501" width="0.0744%" height="15" fill="rgb(241,96,17)" fg:x="86952" fg:w="87"/><text x="74.6341%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (23 samples, 0.02%)</title><rect x="74.4388%" y="485" width="0.0197%" height="15" fill="rgb(234,198,43)" fg:x="87016" fg:w="23"/><text x="74.6888%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.02%)</title><rect x="74.4388%" y="469" width="0.0197%" height="15" fill="rgb(220,108,29)" fg:x="87016" fg:w="23"/><text x="74.6888%" y="479.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.02%)</title><rect x="74.4397%" y="453" width="0.0188%" height="15" fill="rgb(226,163,33)" fg:x="87017" fg:w="22"/><text x="74.6897%" y="463.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (160 samples, 0.14%)</title><rect x="74.3259%" y="629" width="0.1369%" height="15" fill="rgb(205,194,45)" fg:x="86884" fg:w="160"/><text x="74.5759%" y="639.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (150 samples, 0.13%)</title><rect x="74.3345%" y="613" width="0.1283%" height="15" fill="rgb(206,143,44)" fg:x="86894" fg:w="150"/><text x="74.5845%" y="623.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (100 samples, 0.09%)</title><rect x="74.3772%" y="597" width="0.0855%" height="15" fill="rgb(236,136,36)" fg:x="86944" fg:w="100"/><text x="74.6272%" y="607.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (225 samples, 0.19%)</title><rect x="74.2831%" y="645" width="0.1925%" height="15" fill="rgb(249,172,42)" fg:x="86834" fg:w="225"/><text x="74.5331%" y="655.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (12 samples, 0.01%)</title><rect x="74.4653%" y="629" width="0.0103%" height="15" fill="rgb(216,139,23)" fg:x="87047" fg:w="12"/><text x="74.7153%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (757 samples, 0.65%)</title><rect x="74.4842%" y="645" width="0.6476%" height="15" fill="rgb(207,166,20)" fg:x="87069" fg:w="757"/><text x="74.7342%" y="655.50"></text></g><g><title>tremor_script::ast::Path::segments (40 samples, 0.03%)</title><rect x="75.2926%" y="629" width="0.0342%" height="15" fill="rgb(210,209,22)" fg:x="88014" fg:w="40"/><text x="75.5426%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (28 samples, 0.02%)</title><rect x="75.4987%" y="613" width="0.0240%" height="15" fill="rgb(232,118,20)" fg:x="88255" fg:w="28"/><text x="75.7487%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (14 samples, 0.01%)</title><rect x="75.5107%" y="597" width="0.0120%" height="15" fill="rgb(238,113,42)" fg:x="88269" fg:w="14"/><text x="75.7607%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="75.5227%" y="613" width="0.0111%" height="15" fill="rgb(231,42,5)" fg:x="88283" fg:w="13"/><text x="75.7727%" y="623.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="75.6288%" y="581" width="0.0120%" height="15" fill="rgb(243,166,24)" fg:x="88407" fg:w="14"/><text x="75.8788%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="75.6288%" y="565" width="0.0120%" height="15" fill="rgb(237,226,12)" fg:x="88407" fg:w="14"/><text x="75.8788%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="75.6288%" y="549" width="0.0120%" height="15" fill="rgb(229,133,24)" fg:x="88407" fg:w="14"/><text x="75.8788%" y="559.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="75.6288%" y="533" width="0.0120%" height="15" fill="rgb(238,33,43)" fg:x="88407" fg:w="14"/><text x="75.8788%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="75.6288%" y="517" width="0.0120%" height="15" fill="rgb(227,59,38)" fg:x="88407" fg:w="14"/><text x="75.8788%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="75.6681%" y="517" width="0.0257%" height="15" fill="rgb(230,97,0)" fg:x="88453" fg:w="30"/><text x="75.9181%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (29 samples, 0.02%)</title><rect x="75.6690%" y="501" width="0.0248%" height="15" fill="rgb(250,173,50)" fg:x="88454" fg:w="29"/><text x="75.9190%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (93 samples, 0.08%)</title><rect x="75.6407%" y="565" width="0.0796%" height="15" fill="rgb(240,15,50)" fg:x="88421" fg:w="93"/><text x="75.8907%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (61 samples, 0.05%)</title><rect x="75.6681%" y="549" width="0.0522%" height="15" fill="rgb(221,93,22)" fg:x="88453" fg:w="61"/><text x="75.9181%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (61 samples, 0.05%)</title><rect x="75.6681%" y="533" width="0.0522%" height="15" fill="rgb(245,180,53)" fg:x="88453" fg:w="61"/><text x="75.9181%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (31 samples, 0.03%)</title><rect x="75.6938%" y="517" width="0.0265%" height="15" fill="rgb(231,88,51)" fg:x="88483" fg:w="31"/><text x="75.9438%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="75.6938%" y="501" width="0.0265%" height="15" fill="rgb(240,58,21)" fg:x="88483" fg:w="31"/><text x="75.9438%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="75.7040%" y="485" width="0.0163%" height="15" fill="rgb(237,21,10)" fg:x="88495" fg:w="19"/><text x="75.9540%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="75.7040%" y="469" width="0.0163%" height="15" fill="rgb(218,43,11)" fg:x="88495" fg:w="19"/><text x="75.9540%" y="479.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="75.7040%" y="453" width="0.0163%" height="15" fill="rgb(218,221,29)" fg:x="88495" fg:w="19"/><text x="75.9540%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="75.7040%" y="437" width="0.0163%" height="15" fill="rgb(214,118,42)" fg:x="88495" fg:w="19"/><text x="75.9540%" y="447.50"></text></g><g><title>sn_rust_dealloc (365 samples, 0.31%)</title><rect x="75.7203%" y="565" width="0.3122%" height="15" fill="rgb(251,200,26)" fg:x="88514" fg:w="365"/><text x="75.9703%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (696 samples, 0.60%)</title><rect x="75.5338%" y="613" width="0.5954%" height="15" fill="rgb(237,101,39)" fg:x="88296" fg:w="696"/><text x="75.7838%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (634 samples, 0.54%)</title><rect x="75.5868%" y="597" width="0.5424%" height="15" fill="rgb(251,117,11)" fg:x="88358" fg:w="634"/><text x="75.8368%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (571 samples, 0.49%)</title><rect x="75.6407%" y="581" width="0.4885%" height="15" fill="rgb(216,223,23)" fg:x="88421" fg:w="571"/><text x="75.8907%" y="591.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (113 samples, 0.10%)</title><rect x="76.0325%" y="565" width="0.0967%" height="15" fill="rgb(251,54,12)" fg:x="88879" fg:w="113"/><text x="76.2825%" y="575.50"></text></g><g><title>sn_rust_dealloc (164 samples, 0.14%)</title><rect x="76.1292%" y="613" width="0.1403%" height="15" fill="rgb(254,176,54)" fg:x="88992" fg:w="164"/><text x="76.3792%" y="623.50"></text></g><g><title>tremor_script::ast::Path::segments (18 samples, 0.02%)</title><rect x="76.2712%" y="613" width="0.0154%" height="15" fill="rgb(210,32,8)" fg:x="89158" fg:w="18"/><text x="76.5212%" y="623.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="76.2977%" y="581" width="0.0154%" height="15" fill="rgb(235,52,38)" fg:x="89189" fg:w="18"/><text x="76.5477%" y="591.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (18 samples, 0.02%)</title><rect x="76.2977%" y="565" width="0.0154%" height="15" fill="rgb(231,4,44)" fg:x="89189" fg:w="18"/><text x="76.5477%" y="575.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry_mut (194 samples, 0.17%)</title><rect x="76.3131%" y="581" width="0.1660%" height="15" fill="rgb(249,2,32)" fg:x="89207" fg:w="194"/><text x="76.5631%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="76.5048%" y="517" width="0.0171%" height="15" fill="rgb(224,65,26)" fg:x="89431" fg:w="20"/><text x="76.7548%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="76.5048%" y="501" width="0.0171%" height="15" fill="rgb(250,73,40)" fg:x="89431" fg:w="20"/><text x="76.7548%" y="511.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (64 samples, 0.05%)</title><rect x="76.4791%" y="581" width="0.0547%" height="15" fill="rgb(253,177,16)" fg:x="89401" fg:w="64"/><text x="76.7291%" y="591.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (46 samples, 0.04%)</title><rect x="76.4945%" y="565" width="0.0394%" height="15" fill="rgb(217,32,34)" fg:x="89419" fg:w="46"/><text x="76.7445%" y="575.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (46 samples, 0.04%)</title><rect x="76.4945%" y="549" width="0.0394%" height="15" fill="rgb(212,7,10)" fg:x="89419" fg:w="46"/><text x="76.7445%" y="559.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::search (46 samples, 0.04%)</title><rect x="76.4945%" y="533" width="0.0394%" height="15" fill="rgb(245,89,8)" fg:x="89419" fg:w="46"/><text x="76.7445%" y="543.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (14 samples, 0.01%)</title><rect x="76.5219%" y="517" width="0.0120%" height="15" fill="rgb(237,16,53)" fg:x="89451" fg:w="14"/><text x="76.7719%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (14 samples, 0.01%)</title><rect x="76.5219%" y="501" width="0.0120%" height="15" fill="rgb(250,204,30)" fg:x="89451" fg:w="14"/><text x="76.7719%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.01%)</title><rect x="76.5219%" y="485" width="0.0120%" height="15" fill="rgb(208,77,27)" fg:x="89451" fg:w="14"/><text x="76.7719%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (14 samples, 0.01%)</title><rect x="76.5219%" y="469" width="0.0120%" height="15" fill="rgb(250,204,28)" fg:x="89451" fg:w="14"/><text x="76.7719%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (14 samples, 0.01%)</title><rect x="76.5219%" y="453" width="0.0120%" height="15" fill="rgb(244,63,21)" fg:x="89451" fg:w="14"/><text x="76.7719%" y="463.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut_idx (34 samples, 0.03%)</title><rect x="76.5441%" y="533" width="0.0291%" height="15" fill="rgb(236,85,44)" fg:x="89477" fg:w="34"/><text x="76.7941%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (18 samples, 0.02%)</title><rect x="76.5578%" y="517" width="0.0154%" height="15" fill="rgb(215,98,4)" fg:x="89493" fg:w="18"/><text x="76.8078%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (18 samples, 0.02%)</title><rect x="76.5578%" y="501" width="0.0154%" height="15" fill="rgb(235,38,11)" fg:x="89493" fg:w="18"/><text x="76.8078%" y="511.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (29 samples, 0.02%)</title><rect x="76.7708%" y="437" width="0.0248%" height="15" fill="rgb(254,186,25)" fg:x="89742" fg:w="29"/><text x="77.0208%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (188 samples, 0.16%)</title><rect x="76.6399%" y="469" width="0.1608%" height="15" fill="rgb(225,55,31)" fg:x="89589" fg:w="188"/><text x="76.8899%" y="479.50"></text></g><g><title>sn_rust_alloc (173 samples, 0.15%)</title><rect x="76.6528%" y="453" width="0.1480%" height="15" fill="rgb(211,15,21)" fg:x="89604" fg:w="173"/><text x="76.9028%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (213 samples, 0.18%)</title><rect x="76.6348%" y="501" width="0.1822%" height="15" fill="rgb(215,187,41)" fg:x="89583" fg:w="213"/><text x="76.8848%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (213 samples, 0.18%)</title><rect x="76.6348%" y="485" width="0.1822%" height="15" fill="rgb(248,69,32)" fg:x="89583" fg:w="213"/><text x="76.8848%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (16 samples, 0.01%)</title><rect x="76.8221%" y="501" width="0.0137%" height="15" fill="rgb(252,102,52)" fg:x="89802" fg:w="16"/><text x="77.0721%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (16 samples, 0.01%)</title><rect x="76.8221%" y="485" width="0.0137%" height="15" fill="rgb(253,140,32)" fg:x="89802" fg:w="16"/><text x="77.0721%" y="495.50"></text></g><g><title>halfbrown::raw_entry::RawVacantEntryMut&lt;K,V,S&gt;::insert (611 samples, 0.52%)</title><rect x="76.5338%" y="565" width="0.5227%" height="15" fill="rgb(216,56,42)" fg:x="89465" fg:w="611"/><text x="76.7838%" y="575.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawVacantEntryMut&lt;K,V,S&gt;::insert (599 samples, 0.51%)</title><rect x="76.5441%" y="549" width="0.5124%" height="15" fill="rgb(216,184,14)" fg:x="89477" fg:w="599"/><text x="76.7941%" y="559.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::insert_idx (565 samples, 0.48%)</title><rect x="76.5732%" y="533" width="0.4833%" height="15" fill="rgb(237,187,27)" fg:x="89511" fg:w="565"/><text x="76.8232%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (538 samples, 0.46%)</title><rect x="76.5963%" y="517" width="0.4602%" height="15" fill="rgb(219,65,3)" fg:x="89538" fg:w="538"/><text x="76.8463%" y="527.50"></text></g><g><title>core::ptr::write (258 samples, 0.22%)</title><rect x="76.8358%" y="501" width="0.2207%" height="15" fill="rgb(245,83,25)" fg:x="89818" fg:w="258"/><text x="77.0858%" y="511.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="77.0565%" y="549" width="0.0299%" height="15" fill="rgb(214,205,45)" fg:x="90076" fg:w="35"/><text x="77.3065%" y="559.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (18 samples, 0.02%)</title><rect x="77.3987%" y="389" width="0.0154%" height="15" fill="rgb(241,20,18)" fg:x="90476" fg:w="18"/><text x="77.6487%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (387 samples, 0.33%)</title><rect x="77.0865%" y="517" width="0.3311%" height="15" fill="rgb(232,163,23)" fg:x="90111" fg:w="387"/><text x="77.3365%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (115 samples, 0.10%)</title><rect x="77.3192%" y="501" width="0.0984%" height="15" fill="rgb(214,5,46)" fg:x="90383" fg:w="115"/><text x="77.5692%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (115 samples, 0.10%)</title><rect x="77.3192%" y="485" width="0.0984%" height="15" fill="rgb(229,78,17)" fg:x="90383" fg:w="115"/><text x="77.5692%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (115 samples, 0.10%)</title><rect x="77.3192%" y="469" width="0.0984%" height="15" fill="rgb(248,89,10)" fg:x="90383" fg:w="115"/><text x="77.5692%" y="479.50"></text></g><g><title>alloc::alloc::alloc (103 samples, 0.09%)</title><rect x="77.3294%" y="453" width="0.0881%" height="15" fill="rgb(248,54,15)" fg:x="90395" fg:w="103"/><text x="77.5794%" y="463.50"></text></g><g><title>__rg_alloc (103 samples, 0.09%)</title><rect x="77.3294%" y="437" width="0.0881%" height="15" fill="rgb(223,116,6)" fg:x="90395" fg:w="103"/><text x="77.5794%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (103 samples, 0.09%)</title><rect x="77.3294%" y="421" width="0.0881%" height="15" fill="rgb(205,125,38)" fg:x="90395" fg:w="103"/><text x="77.5794%" y="431.50"></text></g><g><title>sn_rust_alloc (92 samples, 0.08%)</title><rect x="77.3388%" y="405" width="0.0787%" height="15" fill="rgb(251,78,38)" fg:x="90406" fg:w="92"/><text x="77.5888%" y="415.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (1,036 samples, 0.89%)</title><rect x="77.5775%" y="325" width="0.8863%" height="15" fill="rgb(253,78,28)" fg:x="90685" fg:w="1036"/><text x="77.8275%" y="335.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign (3,936 samples, 3.37%)</title><rect x="75.1317%" y="645" width="3.3671%" height="15" fill="rgb(209,120,3)" fg:x="87826" fg:w="3936"/><text x="75.3817%" y="655.50">tre..</text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign_nested (3,708 samples, 3.17%)</title><rect x="75.3268%" y="629" width="3.1721%" height="15" fill="rgb(238,229,9)" fg:x="88054" fg:w="3708"/><text x="75.5768%" y="639.50">tre..</text></g><g><title>tremor_value::known_key::KnownKey::lookup_or_insert_mut (2,586 samples, 2.21%)</title><rect x="76.2866%" y="613" width="2.2122%" height="15" fill="rgb(253,159,18)" fg:x="89176" fg:w="2586"/><text x="76.5366%" y="623.50">t..</text></g><g><title>tremor_value::known_key::KnownKey::map_lookup_or_insert_mut (2,573 samples, 2.20%)</title><rect x="76.2977%" y="597" width="2.2011%" height="15" fill="rgb(244,42,34)" fg:x="89189" fg:w="2573"/><text x="76.5477%" y="607.50">t..</text></g><g><title>halfbrown::raw_entry::RawEntryMut&lt;K,V,S&gt;::or_insert_with (2,297 samples, 1.96%)</title><rect x="76.5338%" y="581" width="1.9650%" height="15" fill="rgb(224,8,7)" fg:x="89465" fg:w="2297"/><text x="76.7838%" y="591.50">h..</text></g><g><title>tremor_value::known_key::KnownKey::map_lookup_or_insert_mut::{{closure}} (1,686 samples, 1.44%)</title><rect x="77.0565%" y="565" width="1.4423%" height="15" fill="rgb(210,201,45)" fg:x="90076" fg:w="1686"/><text x="77.3065%" y="575.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign_nested::{{closure}} (1,651 samples, 1.41%)</title><rect x="77.0865%" y="549" width="1.4124%" height="15" fill="rgb(252,185,21)" fg:x="90111" fg:w="1651"/><text x="77.3365%" y="559.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (1,651 samples, 1.41%)</title><rect x="77.0865%" y="533" width="1.4124%" height="15" fill="rgb(223,131,1)" fg:x="90111" fg:w="1651"/><text x="77.3365%" y="543.50"></text></g><g><title>halfbrown::HashMap&lt;K,V&gt;::with_capacity (1,264 samples, 1.08%)</title><rect x="77.4175%" y="517" width="1.0813%" height="15" fill="rgb(245,141,16)" fg:x="90498" fg:w="1264"/><text x="77.6675%" y="527.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V&gt;::with_capacity (1,248 samples, 1.07%)</title><rect x="77.4312%" y="501" width="1.0676%" height="15" fill="rgb(229,55,45)" fg:x="90514" fg:w="1248"/><text x="77.6812%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,248 samples, 1.07%)</title><rect x="77.4312%" y="485" width="1.0676%" height="15" fill="rgb(208,92,15)" fg:x="90514" fg:w="1248"/><text x="77.6812%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,248 samples, 1.07%)</title><rect x="77.4312%" y="469" width="1.0676%" height="15" fill="rgb(234,185,47)" fg:x="90514" fg:w="1248"/><text x="77.6812%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,248 samples, 1.07%)</title><rect x="77.4312%" y="453" width="1.0676%" height="15" fill="rgb(253,104,50)" fg:x="90514" fg:w="1248"/><text x="77.6812%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,248 samples, 1.07%)</title><rect x="77.4312%" y="437" width="1.0676%" height="15" fill="rgb(205,70,7)" fg:x="90514" fg:w="1248"/><text x="77.6812%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,248 samples, 1.07%)</title><rect x="77.4312%" y="421" width="1.0676%" height="15" fill="rgb(240,178,43)" fg:x="90514" fg:w="1248"/><text x="77.6812%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,248 samples, 1.07%)</title><rect x="77.4312%" y="405" width="1.0676%" height="15" fill="rgb(214,112,2)" fg:x="90514" fg:w="1248"/><text x="77.6812%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1,248 samples, 1.07%)</title><rect x="77.4312%" y="389" width="1.0676%" height="15" fill="rgb(206,46,17)" fg:x="90514" fg:w="1248"/><text x="77.6812%" y="399.50"></text></g><g><title>__rg_alloc (1,248 samples, 1.07%)</title><rect x="77.4312%" y="373" width="1.0676%" height="15" fill="rgb(225,220,16)" fg:x="90514" fg:w="1248"/><text x="77.6812%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,248 samples, 1.07%)</title><rect x="77.4312%" y="357" width="1.0676%" height="15" fill="rgb(238,65,40)" fg:x="90514" fg:w="1248"/><text x="77.6812%" y="367.50"></text></g><g><title>sn_rust_alloc (1,232 samples, 1.05%)</title><rect x="77.4449%" y="341" width="1.0539%" height="15" fill="rgb(230,151,21)" fg:x="90530" fg:w="1232"/><text x="77.6949%" y="351.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="78.4638%" y="325" width="0.0351%" height="15" fill="rgb(218,58,49)" fg:x="91721" fg:w="41"/><text x="78.7138%" y="335.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::execute_effectors (6,804 samples, 5.82%)</title><rect x="73.0273%" y="677" width="5.8206%" height="15" fill="rgb(219,179,14)" fg:x="85366" fg:w="6804"/><text x="73.2773%" y="687.50">tremor_..</text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (6,338 samples, 5.42%)</title><rect x="73.4260%" y="661" width="5.4219%" height="15" fill="rgb(223,72,1)" fg:x="85832" fg:w="6338"/><text x="73.6760%" y="671.50">tremor_..</text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (408 samples, 0.35%)</title><rect x="78.4988%" y="645" width="0.3490%" height="15" fill="rgb(238,126,10)" fg:x="91762" fg:w="408"/><text x="78.7488%" y="655.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (30 samples, 0.03%)</title><rect x="78.8222%" y="629" width="0.0257%" height="15" fill="rgb(224,206,38)" fg:x="92140" fg:w="30"/><text x="79.0722%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="79.0900%" y="629" width="0.0111%" height="15" fill="rgb(212,201,54)" fg:x="92453" fg:w="13"/><text x="79.3400%" y="639.50"></text></g><g><title>tremor_script::ast::Path::segments (39 samples, 0.03%)</title><rect x="79.1045%" y="629" width="0.0334%" height="15" fill="rgb(218,154,48)" fg:x="92470" fg:w="39"/><text x="79.3545%" y="639.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry (418 samples, 0.36%)</title><rect x="79.1421%" y="565" width="0.3576%" height="15" fill="rgb(232,93,24)" fg:x="92514" fg:w="418"/><text x="79.3921%" y="575.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (36 samples, 0.03%)</title><rect x="79.5006%" y="501" width="0.0308%" height="15" fill="rgb(245,30,21)" fg:x="92933" fg:w="36"/><text x="79.7506%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (36 samples, 0.03%)</title><rect x="79.5006%" y="485" width="0.0308%" height="15" fill="rgb(242,148,29)" fg:x="92933" fg:w="36"/><text x="79.7506%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (36 samples, 0.03%)</title><rect x="79.5006%" y="469" width="0.0308%" height="15" fill="rgb(244,153,54)" fg:x="92933" fg:w="36"/><text x="79.7506%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (36 samples, 0.03%)</title><rect x="79.5006%" y="453" width="0.0308%" height="15" fill="rgb(252,87,22)" fg:x="92933" fg:w="36"/><text x="79.7506%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (36 samples, 0.03%)</title><rect x="79.5006%" y="437" width="0.0308%" height="15" fill="rgb(210,51,29)" fg:x="92933" fg:w="36"/><text x="79.7506%" y="447.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (1,919 samples, 1.64%)</title><rect x="79.4997%" y="565" width="1.6416%" height="15" fill="rgb(242,136,47)" fg:x="92932" fg:w="1919"/><text x="79.7497%" y="575.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (1,918 samples, 1.64%)</title><rect x="79.5006%" y="549" width="1.6408%" height="15" fill="rgb(238,68,4)" fg:x="92933" fg:w="1918"/><text x="79.7506%" y="559.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_hash (1,918 samples, 1.64%)</title><rect x="79.5006%" y="533" width="1.6408%" height="15" fill="rgb(242,161,30)" fg:x="92933" fg:w="1918"/><text x="79.7506%" y="543.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::search (1,918 samples, 1.64%)</title><rect x="79.5006%" y="517" width="1.6408%" height="15" fill="rgb(218,58,44)" fg:x="92933" fg:w="1918"/><text x="79.7506%" y="527.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (1,876 samples, 1.60%)</title><rect x="79.5365%" y="501" width="1.6048%" height="15" fill="rgb(252,125,32)" fg:x="92975" fg:w="1876"/><text x="79.7865%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,867 samples, 1.60%)</title><rect x="79.5442%" y="485" width="1.5971%" height="15" fill="rgb(219,178,0)" fg:x="92984" fg:w="1867"/><text x="79.7942%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,867 samples, 1.60%)</title><rect x="79.5442%" y="469" width="1.5971%" height="15" fill="rgb(213,152,7)" fg:x="92984" fg:w="1867"/><text x="79.7942%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,867 samples, 1.60%)</title><rect x="79.5442%" y="453" width="1.5971%" height="15" fill="rgb(249,109,34)" fg:x="92984" fg:w="1867"/><text x="79.7942%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,867 samples, 1.60%)</title><rect x="79.5442%" y="437" width="1.5971%" height="15" fill="rgb(232,96,21)" fg:x="92984" fg:w="1867"/><text x="79.7942%" y="447.50"></text></g><g><title>[libc-2.31.so] (683 samples, 0.58%)</title><rect x="80.5571%" y="421" width="0.5843%" height="15" fill="rgb(228,27,39)" fg:x="94168" fg:w="683"/><text x="80.8071%" y="431.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (2,693 samples, 2.30%)</title><rect x="78.8479%" y="677" width="2.3038%" height="15" fill="rgb(211,182,52)" fg:x="92170" fg:w="2693"/><text x="79.0979%" y="687.50">t..</text></g><g><title>tremor_script::interpreter::resolve (2,638 samples, 2.26%)</title><rect x="78.8949%" y="661" width="2.2567%" height="15" fill="rgb(234,178,38)" fg:x="92225" fg:w="2638"/><text x="79.1449%" y="671.50">t..</text></g><g><title>tremor_script::interpreter::resolve_value (2,609 samples, 2.23%)</title><rect x="78.9197%" y="645" width="2.2319%" height="15" fill="rgb(221,111,3)" fg:x="92254" fg:w="2609"/><text x="79.1697%" y="655.50">t..</text></g><g><title>tremor_value::known_key::KnownKey::lookup (2,354 samples, 2.01%)</title><rect x="79.1379%" y="629" width="2.0138%" height="15" fill="rgb(228,175,21)" fg:x="92509" fg:w="2354"/><text x="79.3879%" y="639.50">t..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,354 samples, 2.01%)</title><rect x="79.1379%" y="613" width="2.0138%" height="15" fill="rgb(228,174,43)" fg:x="92509" fg:w="2354"/><text x="79.3879%" y="623.50">c..</text></g><g><title>tremor_value::known_key::KnownKey::lookup::{{closure}} (2,349 samples, 2.01%)</title><rect x="79.1421%" y="597" width="2.0095%" height="15" fill="rgb(211,191,0)" fg:x="92514" fg:w="2349"/><text x="79.3921%" y="607.50">t..</text></g><g><title>tremor_value::known_key::KnownKey::map_lookup (2,349 samples, 2.01%)</title><rect x="79.1421%" y="581" width="2.0095%" height="15" fill="rgb(253,117,3)" fg:x="92514" fg:w="2349"/><text x="79.3921%" y="591.50">t..</text></g><g><title>tremor_value::known_key::KnownKey::key (12 samples, 0.01%)</title><rect x="81.1414%" y="565" width="0.0103%" height="15" fill="rgb(241,127,19)" fg:x="94851" fg:w="12"/><text x="81.3914%" y="575.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.01%)</title><rect x="81.1414%" y="549" width="0.0103%" height="15" fill="rgb(218,103,12)" fg:x="94851" fg:w="12"/><text x="81.3914%" y="559.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (12 samples, 0.01%)</title><rect x="81.1414%" y="533" width="0.0103%" height="15" fill="rgb(236,214,43)" fg:x="94851" fg:w="12"/><text x="81.3914%" y="543.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::borrow::Borrow&lt;B&gt;&gt;::borrow (90 samples, 0.08%)</title><rect x="81.7872%" y="661" width="0.0770%" height="15" fill="rgb(244,144,19)" fg:x="95606" fg:w="90"/><text x="82.0372%" y="671.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (90 samples, 0.08%)</title><rect x="81.7872%" y="645" width="0.0770%" height="15" fill="rgb(246,188,10)" fg:x="95606" fg:w="90"/><text x="82.0372%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;tremor_value::value::Value&gt;&gt; (17 samples, 0.01%)</title><rect x="81.8642%" y="661" width="0.0145%" height="15" fill="rgb(212,193,33)" fg:x="95696" fg:w="17"/><text x="82.1142%" y="671.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (104 samples, 0.09%)</title><rect x="81.8788%" y="661" width="0.0890%" height="15" fill="rgb(241,51,29)" fg:x="95713" fg:w="104"/><text x="82.1288%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (76 samples, 0.07%)</title><rect x="81.9746%" y="645" width="0.0650%" height="15" fill="rgb(211,58,19)" fg:x="95825" fg:w="76"/><text x="82.2246%" y="655.50"></text></g><g><title>tremor_script::interpreter::test_guard (88 samples, 0.08%)</title><rect x="81.9677%" y="661" width="0.0753%" height="15" fill="rgb(229,111,26)" fg:x="95817" fg:w="88"/><text x="82.2177%" y="671.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (12,609 samples, 10.79%)</title><rect x="71.7646%" y="853" width="10.7865%" height="15" fill="rgb(213,115,40)" fg:x="83890" fg:w="12609"/><text x="72.0146%" y="863.50">tremor_pipeline:..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (12,609 samples, 10.79%)</title><rect x="71.7646%" y="837" width="10.7865%" height="15" fill="rgb(209,56,44)" fg:x="83890" fg:w="12609"/><text x="72.0146%" y="847.50">tremor_pipeline:..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (12,609 samples, 10.79%)</title><rect x="71.7646%" y="821" width="10.7865%" height="15" fill="rgb(230,108,32)" fg:x="83890" fg:w="12609"/><text x="72.0146%" y="831.50">tremor_pipeline:..</text></g><g><title>&lt;tremor_pipeline::executable_graph::OperatorNode as tremor_pipeline::op::Operator&gt;::on_event (12,609 samples, 10.79%)</title><rect x="71.7646%" y="805" width="10.7865%" height="15" fill="rgb(216,165,31)" fg:x="83890" fg:w="12609"/><text x="72.0146%" y="815.50">&lt;tremor_pipeline..</text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event (12,609 samples, 10.79%)</title><rect x="71.7646%" y="789" width="10.7865%" height="15" fill="rgb(218,122,21)" fg:x="83890" fg:w="12609"/><text x="72.0146%" y="799.50">&lt;tremor_pipeline..</text></g><g><title>tremor_script::srs::EventPayload::rent_mut (12,609 samples, 10.79%)</title><rect x="71.7646%" y="773" width="10.7865%" height="15" fill="rgb(223,224,47)" fg:x="83890" fg:w="12609"/><text x="72.0146%" y="783.50">tremor_script::s..</text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event::{{closure}} (12,609 samples, 10.79%)</title><rect x="71.7646%" y="757" width="10.7865%" height="15" fill="rgb(238,102,44)" fg:x="83890" fg:w="12609"/><text x="72.0146%" y="767.50">&lt;tremor_pipeline..</text></g><g><title>tremor_script::script::Script::run (12,609 samples, 10.79%)</title><rect x="71.7646%" y="741" width="10.7865%" height="15" fill="rgb(236,46,40)" fg:x="83890" fg:w="12609"/><text x="72.0146%" y="751.50">tremor_script::s..</text></g><g><title>tremor_script::ast::Script::run (12,609 samples, 10.79%)</title><rect x="71.7646%" y="725" width="10.7865%" height="15" fill="rgb(247,202,50)" fg:x="83890" fg:w="12609"/><text x="72.0146%" y="735.50">tremor_script::a..</text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (12,609 samples, 10.79%)</title><rect x="71.7646%" y="709" width="10.7865%" height="15" fill="rgb(209,99,20)" fg:x="83890" fg:w="12609"/><text x="72.0146%" y="719.50">tremor_script::i..</text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::match_expr (11,556 samples, 9.89%)</title><rect x="72.6654%" y="693" width="9.8857%" height="15" fill="rgb(252,27,34)" fg:x="84943" fg:w="11556"/><text x="72.9154%" y="703.50">tremor_script:..</text></g><g><title>tremor_script::interpreter::test_predicate_expr (1,636 samples, 1.40%)</title><rect x="81.1516%" y="677" width="1.3995%" height="15" fill="rgb(215,206,23)" fg:x="94863" fg:w="1636"/><text x="81.4016%" y="687.50"></text></g><g><title>tremor_script::interpreter::val_eq (594 samples, 0.51%)</title><rect x="82.0430%" y="661" width="0.5081%" height="15" fill="rgb(212,135,36)" fg:x="95905" fg:w="594"/><text x="82.2930%" y="671.50"></text></g><g><title>[libc-2.31.so] (395 samples, 0.34%)</title><rect x="82.2132%" y="645" width="0.3379%" height="15" fill="rgb(240,189,1)" fg:x="96104" fg:w="395"/><text x="82.4632%" y="655.50"></text></g><g><title>[libc-2.31.so] (123 samples, 0.11%)</title><rect x="82.6538%" y="757" width="0.1052%" height="15" fill="rgb(242,56,20)" fg:x="96619" fg:w="123"/><text x="82.9038%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (113 samples, 0.10%)</title><rect x="82.8078%" y="741" width="0.0967%" height="15" fill="rgb(247,132,33)" fg:x="96799" fg:w="113"/><text x="83.0578%" y="751.50"></text></g><g><title>core::ptr::write (113 samples, 0.10%)</title><rect x="82.8078%" y="725" width="0.0967%" height="15" fill="rgb(208,149,11)" fg:x="96799" fg:w="113"/><text x="83.0578%" y="735.50"></text></g><g><title>[libc-2.31.so] (108 samples, 0.09%)</title><rect x="82.8121%" y="709" width="0.0924%" height="15" fill="rgb(211,33,11)" fg:x="96804" fg:w="108"/><text x="83.0621%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (258 samples, 0.22%)</title><rect x="82.9045%" y="741" width="0.2207%" height="15" fill="rgb(221,29,38)" fg:x="96912" fg:w="258"/><text x="83.1545%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (258 samples, 0.22%)</title><rect x="82.9045%" y="725" width="0.2207%" height="15" fill="rgb(206,182,49)" fg:x="96912" fg:w="258"/><text x="83.1545%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (216 samples, 0.18%)</title><rect x="83.1252%" y="741" width="0.1848%" height="15" fill="rgb(216,140,1)" fg:x="97170" fg:w="216"/><text x="83.3752%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (211 samples, 0.18%)</title><rect x="83.1294%" y="725" width="0.1805%" height="15" fill="rgb(232,57,40)" fg:x="97175" fg:w="211"/><text x="83.3794%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (840 samples, 0.72%)</title><rect x="82.5939%" y="773" width="0.7186%" height="15" fill="rgb(224,186,18)" fg:x="96549" fg:w="840"/><text x="82.8439%" y="783.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (647 samples, 0.55%)</title><rect x="82.7590%" y="757" width="0.5535%" height="15" fill="rgb(215,121,11)" fg:x="96742" fg:w="647"/><text x="83.0090%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (58 samples, 0.05%)</title><rect x="83.3228%" y="757" width="0.0496%" height="15" fill="rgb(245,147,10)" fg:x="97401" fg:w="58"/><text x="83.5728%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (56 samples, 0.05%)</title><rect x="83.3245%" y="741" width="0.0479%" height="15" fill="rgb(238,153,13)" fg:x="97403" fg:w="56"/><text x="83.5745%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="83.3245%" y="725" width="0.0479%" height="15" fill="rgb(233,108,0)" fg:x="97403" fg:w="56"/><text x="83.5745%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (53 samples, 0.05%)</title><rect x="83.3271%" y="709" width="0.0453%" height="15" fill="rgb(212,157,17)" fg:x="97406" fg:w="53"/><text x="83.5771%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (53 samples, 0.05%)</title><rect x="83.3271%" y="693" width="0.0453%" height="15" fill="rgb(225,213,38)" fg:x="97406" fg:w="53"/><text x="83.5771%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (53 samples, 0.05%)</title><rect x="83.3271%" y="677" width="0.0453%" height="15" fill="rgb(248,16,11)" fg:x="97406" fg:w="53"/><text x="83.5771%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_swap (53 samples, 0.05%)</title><rect x="83.3271%" y="661" width="0.0453%" height="15" fill="rgb(241,33,4)" fg:x="97406" fg:w="53"/><text x="83.5771%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (38 samples, 0.03%)</title><rect x="83.3724%" y="757" width="0.0325%" height="15" fill="rgb(222,26,43)" fg:x="97459" fg:w="38"/><text x="83.6224%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (38 samples, 0.03%)</title><rect x="83.3724%" y="741" width="0.0325%" height="15" fill="rgb(243,29,36)" fg:x="97459" fg:w="38"/><text x="83.6224%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (50 samples, 0.04%)</title><rect x="83.4083%" y="693" width="0.0428%" height="15" fill="rgb(241,9,27)" fg:x="97501" fg:w="50"/><text x="83.6583%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (50 samples, 0.04%)</title><rect x="83.4083%" y="677" width="0.0428%" height="15" fill="rgb(205,117,26)" fg:x="97501" fg:w="50"/><text x="83.6583%" y="687.50"></text></g><g><title>event_listener::Inner::lock (56 samples, 0.05%)</title><rect x="83.4049%" y="757" width="0.0479%" height="15" fill="rgb(209,80,39)" fg:x="97497" fg:w="56"/><text x="83.6549%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (54 samples, 0.05%)</title><rect x="83.4066%" y="741" width="0.0462%" height="15" fill="rgb(239,155,6)" fg:x="97499" fg:w="54"/><text x="83.6566%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (53 samples, 0.05%)</title><rect x="83.4075%" y="725" width="0.0453%" height="15" fill="rgb(212,104,12)" fg:x="97500" fg:w="53"/><text x="83.6575%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (53 samples, 0.05%)</title><rect x="83.4075%" y="709" width="0.0453%" height="15" fill="rgb(234,204,3)" fg:x="97500" fg:w="53"/><text x="83.6575%" y="719.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (39 samples, 0.03%)</title><rect x="83.4622%" y="709" width="0.0334%" height="15" fill="rgb(251,218,7)" fg:x="97564" fg:w="39"/><text x="83.7122%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (39 samples, 0.03%)</title><rect x="83.4622%" y="693" width="0.0334%" height="15" fill="rgb(221,81,32)" fg:x="97564" fg:w="39"/><text x="83.7122%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (39 samples, 0.03%)</title><rect x="83.4622%" y="677" width="0.0334%" height="15" fill="rgb(214,152,26)" fg:x="97564" fg:w="39"/><text x="83.7122%" y="687.50"></text></g><g><title>async_executor::Sleepers::notify (24 samples, 0.02%)</title><rect x="83.4982%" y="661" width="0.0205%" height="15" fill="rgb(223,22,3)" fg:x="97606" fg:w="24"/><text x="83.7482%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (19 samples, 0.02%)</title><rect x="83.5024%" y="645" width="0.0163%" height="15" fill="rgb(207,174,7)" fg:x="97611" fg:w="19"/><text x="83.7524%" y="655.50"></text></g><g><title>core::ptr::read (18 samples, 0.02%)</title><rect x="83.5033%" y="629" width="0.0154%" height="15" fill="rgb(224,19,52)" fg:x="97612" fg:w="18"/><text x="83.7533%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (62 samples, 0.05%)</title><rect x="83.5187%" y="661" width="0.0530%" height="15" fill="rgb(228,24,14)" fg:x="97630" fg:w="62"/><text x="83.7687%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.05%)</title><rect x="83.5187%" y="645" width="0.0530%" height="15" fill="rgb(230,153,43)" fg:x="97630" fg:w="62"/><text x="83.7687%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (62 samples, 0.05%)</title><rect x="83.5187%" y="629" width="0.0530%" height="15" fill="rgb(231,106,12)" fg:x="97630" fg:w="62"/><text x="83.7687%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (62 samples, 0.05%)</title><rect x="83.5187%" y="613" width="0.0530%" height="15" fill="rgb(215,92,2)" fg:x="97630" fg:w="62"/><text x="83.7687%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (62 samples, 0.05%)</title><rect x="83.5187%" y="597" width="0.0530%" height="15" fill="rgb(249,143,25)" fg:x="97630" fg:w="62"/><text x="83.7687%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (62 samples, 0.05%)</title><rect x="83.5187%" y="581" width="0.0530%" height="15" fill="rgb(252,7,35)" fg:x="97630" fg:w="62"/><text x="83.7687%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (46 samples, 0.04%)</title><rect x="83.5717%" y="661" width="0.0394%" height="15" fill="rgb(216,69,40)" fg:x="97692" fg:w="46"/><text x="83.8217%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (46 samples, 0.04%)</title><rect x="83.5717%" y="645" width="0.0394%" height="15" fill="rgb(240,36,33)" fg:x="97692" fg:w="46"/><text x="83.8217%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (14 samples, 0.01%)</title><rect x="83.6230%" y="581" width="0.0120%" height="15" fill="rgb(231,128,14)" fg:x="97752" fg:w="14"/><text x="83.8730%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="83.6230%" y="565" width="0.0120%" height="15" fill="rgb(245,143,14)" fg:x="97752" fg:w="14"/><text x="83.8730%" y="575.50"></text></g><g><title>async_io::reactor::Reactor::notify (43 samples, 0.04%)</title><rect x="83.6188%" y="613" width="0.0368%" height="15" fill="rgb(222,130,28)" fg:x="97747" fg:w="43"/><text x="83.8688%" y="623.50"></text></g><g><title>polling::Poller::notify (39 samples, 0.03%)</title><rect x="83.6222%" y="597" width="0.0334%" height="15" fill="rgb(212,10,48)" fg:x="97751" fg:w="39"/><text x="83.8722%" y="607.50"></text></g><g><title>polling::epoll::Poller::notify (24 samples, 0.02%)</title><rect x="83.6350%" y="581" width="0.0205%" height="15" fill="rgb(254,118,45)" fg:x="97766" fg:w="24"/><text x="83.8850%" y="591.50"></text></g><g><title>__libc_write (21 samples, 0.02%)</title><rect x="83.6376%" y="565" width="0.0180%" height="15" fill="rgb(228,6,45)" fg:x="97769" fg:w="21"/><text x="83.8876%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (45 samples, 0.04%)</title><rect x="83.6846%" y="581" width="0.0385%" height="15" fill="rgb(241,18,35)" fg:x="97824" fg:w="45"/><text x="83.9346%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_swap (45 samples, 0.04%)</title><rect x="83.6846%" y="565" width="0.0385%" height="15" fill="rgb(227,214,53)" fg:x="97824" fg:w="45"/><text x="83.9346%" y="575.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (15 samples, 0.01%)</title><rect x="83.7231%" y="581" width="0.0128%" height="15" fill="rgb(224,107,51)" fg:x="97869" fg:w="15"/><text x="83.9731%" y="591.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (15 samples, 0.01%)</title><rect x="83.7231%" y="565" width="0.0128%" height="15" fill="rgb(248,60,28)" fg:x="97869" fg:w="15"/><text x="83.9731%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (15 samples, 0.01%)</title><rect x="83.7231%" y="549" width="0.0128%" height="15" fill="rgb(249,101,23)" fg:x="97869" fg:w="15"/><text x="83.9731%" y="559.50"></text></g><g><title>parking::Unparker::unpark (88 samples, 0.08%)</title><rect x="83.6615%" y="613" width="0.0753%" height="15" fill="rgb(228,51,19)" fg:x="97797" fg:w="88"/><text x="83.9115%" y="623.50"></text></g><g><title>parking::Inner::unpark (70 samples, 0.06%)</title><rect x="83.6769%" y="597" width="0.0599%" height="15" fill="rgb(213,20,6)" fg:x="97815" fg:w="70"/><text x="83.9269%" y="607.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (153 samples, 0.13%)</title><rect x="83.6111%" y="629" width="0.1309%" height="15" fill="rgb(212,124,10)" fg:x="97738" fg:w="153"/><text x="83.8611%" y="639.50"></text></g><g><title>core::task::wake::Waker::wake (220 samples, 0.19%)</title><rect x="83.6111%" y="661" width="0.1882%" height="15" fill="rgb(248,3,40)" fg:x="97738" fg:w="220"/><text x="83.8611%" y="671.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (220 samples, 0.19%)</title><rect x="83.6111%" y="645" width="0.1882%" height="15" fill="rgb(223,178,23)" fg:x="97738" fg:w="220"/><text x="83.8611%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (67 samples, 0.06%)</title><rect x="83.7420%" y="629" width="0.0573%" height="15" fill="rgb(240,132,45)" fg:x="97891" fg:w="67"/><text x="83.9920%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.06%)</title><rect x="83.7420%" y="613" width="0.0573%" height="15" fill="rgb(245,164,36)" fg:x="97891" fg:w="67"/><text x="83.9920%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (63 samples, 0.05%)</title><rect x="83.7454%" y="597" width="0.0539%" height="15" fill="rgb(231,188,53)" fg:x="97895" fg:w="63"/><text x="83.9954%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (63 samples, 0.05%)</title><rect x="83.7454%" y="581" width="0.0539%" height="15" fill="rgb(237,198,39)" fg:x="97895" fg:w="63"/><text x="83.9954%" y="591.50"></text></g><g><title>std::sync::poison::Flag::get (14 samples, 0.01%)</title><rect x="83.7993%" y="613" width="0.0120%" height="15" fill="rgb(223,120,35)" fg:x="97958" fg:w="14"/><text x="84.0493%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (14 samples, 0.01%)</title><rect x="83.7993%" y="597" width="0.0120%" height="15" fill="rgb(253,107,49)" fg:x="97958" fg:w="14"/><text x="84.0493%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="83.7993%" y="581" width="0.0120%" height="15" fill="rgb(216,44,31)" fg:x="97958" fg:w="14"/><text x="84.0493%" y="591.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (17 samples, 0.01%)</title><rect x="83.7993%" y="645" width="0.0145%" height="15" fill="rgb(253,87,21)" fg:x="97958" fg:w="17"/><text x="84.0493%" y="655.50"></text></g><g><title>std::sync::poison::Flag::borrow (17 samples, 0.01%)</title><rect x="83.7993%" y="629" width="0.0145%" height="15" fill="rgb(226,18,2)" fg:x="97958" fg:w="17"/><text x="84.0493%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (49 samples, 0.04%)</title><rect x="83.8172%" y="613" width="0.0419%" height="15" fill="rgb(216,8,46)" fg:x="97979" fg:w="49"/><text x="84.0672%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (49 samples, 0.04%)</title><rect x="83.8172%" y="597" width="0.0419%" height="15" fill="rgb(226,140,39)" fg:x="97979" fg:w="49"/><text x="84.0672%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (19 samples, 0.02%)</title><rect x="83.8609%" y="597" width="0.0163%" height="15" fill="rgb(221,194,54)" fg:x="98030" fg:w="19"/><text x="84.1109%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="83.8609%" y="581" width="0.0163%" height="15" fill="rgb(213,92,11)" fg:x="98030" fg:w="19"/><text x="84.1109%" y="591.50"></text></g><g><title>core::hint::spin_loop (18 samples, 0.02%)</title><rect x="83.8865%" y="581" width="0.0154%" height="15" fill="rgb(229,162,46)" fg:x="98060" fg:w="18"/><text x="84.1365%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (18 samples, 0.02%)</title><rect x="83.8865%" y="565" width="0.0154%" height="15" fill="rgb(214,111,36)" fg:x="98060" fg:w="18"/><text x="84.1365%" y="575.50"></text></g><g><title>async_executor::State::notify (485 samples, 0.41%)</title><rect x="83.4964%" y="677" width="0.4149%" height="15" fill="rgb(207,6,21)" fg:x="97604" fg:w="485"/><text x="83.7464%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (131 samples, 0.11%)</title><rect x="83.7993%" y="661" width="0.1121%" height="15" fill="rgb(213,127,38)" fg:x="97958" fg:w="131"/><text x="84.0493%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (114 samples, 0.10%)</title><rect x="83.8138%" y="645" width="0.0975%" height="15" fill="rgb(238,118,32)" fg:x="97975" fg:w="114"/><text x="84.0638%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (114 samples, 0.10%)</title><rect x="83.8138%" y="629" width="0.0975%" height="15" fill="rgb(240,139,39)" fg:x="97975" fg:w="114"/><text x="84.0638%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (61 samples, 0.05%)</title><rect x="83.8592%" y="613" width="0.0522%" height="15" fill="rgb(235,10,37)" fg:x="98028" fg:w="61"/><text x="84.1092%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (30 samples, 0.03%)</title><rect x="83.8857%" y="597" width="0.0257%" height="15" fill="rgb(249,171,38)" fg:x="98059" fg:w="30"/><text x="84.1357%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (102 samples, 0.09%)</title><rect x="83.9250%" y="645" width="0.0873%" height="15" fill="rgb(242,144,32)" fg:x="98105" fg:w="102"/><text x="84.1750%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (102 samples, 0.09%)</title><rect x="83.9250%" y="629" width="0.0873%" height="15" fill="rgb(217,117,21)" fg:x="98105" fg:w="102"/><text x="84.1750%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (46 samples, 0.04%)</title><rect x="84.0123%" y="645" width="0.0394%" height="15" fill="rgb(249,87,1)" fg:x="98207" fg:w="46"/><text x="84.2623%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_or (46 samples, 0.04%)</title><rect x="84.0123%" y="629" width="0.0394%" height="15" fill="rgb(248,196,48)" fg:x="98207" fg:w="46"/><text x="84.2623%" y="639.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (652 samples, 0.56%)</title><rect x="83.4964%" y="693" width="0.5578%" height="15" fill="rgb(251,206,33)" fg:x="97604" fg:w="652"/><text x="83.7464%" y="703.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (167 samples, 0.14%)</title><rect x="83.9113%" y="677" width="0.1429%" height="15" fill="rgb(232,141,28)" fg:x="98089" fg:w="167"/><text x="84.1613%" y="687.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (163 samples, 0.14%)</title><rect x="83.9148%" y="661" width="0.1394%" height="15" fill="rgb(209,167,14)" fg:x="98093" fg:w="163"/><text x="84.1648%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (187 samples, 0.16%)</title><rect x="84.0542%" y="693" width="0.1600%" height="15" fill="rgb(225,11,50)" fg:x="98256" fg:w="187"/><text x="84.3042%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (187 samples, 0.16%)</title><rect x="84.0542%" y="677" width="0.1600%" height="15" fill="rgb(209,50,20)" fg:x="98256" fg:w="187"/><text x="84.3042%" y="687.50"></text></g><g><title>event_listener::List::notify (927 samples, 0.79%)</title><rect x="83.4528%" y="757" width="0.7930%" height="15" fill="rgb(212,17,46)" fg:x="97553" fg:w="927"/><text x="83.7028%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake (918 samples, 0.79%)</title><rect x="83.4605%" y="741" width="0.7853%" height="15" fill="rgb(216,101,39)" fg:x="97562" fg:w="918"/><text x="83.7105%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (918 samples, 0.79%)</title><rect x="83.4605%" y="725" width="0.7853%" height="15" fill="rgb(212,228,48)" fg:x="97562" fg:w="918"/><text x="83.7105%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (877 samples, 0.75%)</title><rect x="83.4956%" y="709" width="0.7502%" height="15" fill="rgb(250,6,50)" fg:x="97603" fg:w="877"/><text x="83.7456%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (37 samples, 0.03%)</title><rect x="84.2142%" y="693" width="0.0317%" height="15" fill="rgb(250,160,48)" fg:x="98443" fg:w="37"/><text x="84.4642%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (37 samples, 0.03%)</title><rect x="84.2142%" y="677" width="0.0317%" height="15" fill="rgb(244,216,33)" fg:x="98443" fg:w="37"/><text x="84.4642%" y="687.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,867 samples, 2.45%)</title><rect x="82.5854%" y="789" width="2.4526%" height="15" fill="rgb(207,157,5)" fg:x="96539" fg:w="2867"/><text x="82.8354%" y="799.50">as..</text></g><g><title>event_listener::Event::notify (2,017 samples, 1.73%)</title><rect x="83.3125%" y="773" width="1.7255%" height="15" fill="rgb(228,199,8)" fg:x="97389" fg:w="2017"/><text x="83.5625%" y="783.50"></text></g><g><title>event_listener::full_fence (926 samples, 0.79%)</title><rect x="84.2458%" y="757" width="0.7922%" height="15" fill="rgb(227,80,20)" fg:x="98480" fg:w="926"/><text x="84.4958%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (922 samples, 0.79%)</title><rect x="84.2492%" y="741" width="0.7887%" height="15" fill="rgb(222,9,33)" fg:x="98484" fg:w="922"/><text x="84.4992%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (922 samples, 0.79%)</title><rect x="84.2492%" y="725" width="0.7887%" height="15" fill="rgb(239,44,28)" fg:x="98484" fg:w="922"/><text x="84.4992%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (15 samples, 0.01%)</title><rect x="85.0380%" y="789" width="0.0128%" height="15" fill="rgb(249,187,43)" fg:x="99406" fg:w="15"/><text x="85.2880%" y="799.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (16,201 samples, 13.86%)</title><rect x="71.3164%" y="885" width="13.8593%" height="15" fill="rgb(216,141,28)" fg:x="83366" fg:w="16201"/><text x="71.5664%" y="895.50">tremor_runtime::pipel..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,677 samples, 13.41%)</title><rect x="71.7646%" y="869" width="13.4111%" height="15" fill="rgb(230,154,53)" fg:x="83890" fg:w="15677"/><text x="72.0146%" y="879.50">&lt;core::future::from_..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,068 samples, 2.62%)</title><rect x="82.5512%" y="853" width="2.6246%" height="15" fill="rgb(227,82,4)" fg:x="96499" fg:w="3068"/><text x="82.8012%" y="863.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,068 samples, 2.62%)</title><rect x="82.5512%" y="837" width="2.6246%" height="15" fill="rgb(220,107,16)" fg:x="96499" fg:w="3068"/><text x="82.8012%" y="847.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (3,068 samples, 2.62%)</title><rect x="82.5512%" y="821" width="2.6246%" height="15" fill="rgb(207,187,2)" fg:x="96499" fg:w="3068"/><text x="82.8012%" y="831.50">tr..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (3,068 samples, 2.62%)</title><rect x="82.5512%" y="805" width="2.6246%" height="15" fill="rgb(210,162,52)" fg:x="96499" fg:w="3068"/><text x="82.8012%" y="815.50">&lt;a..</text></g><g><title>event_listener::Event::notify (143 samples, 0.12%)</title><rect x="85.0534%" y="789" width="0.1223%" height="15" fill="rgb(217,216,49)" fg:x="99424" fg:w="143"/><text x="85.3034%" y="799.50"></text></g><g><title>event_listener::full_fence (141 samples, 0.12%)</title><rect x="85.0551%" y="773" width="0.1206%" height="15" fill="rgb(218,146,49)" fg:x="99426" fg:w="141"/><text x="85.3051%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (136 samples, 0.12%)</title><rect x="85.0594%" y="757" width="0.1163%" height="15" fill="rgb(216,55,40)" fg:x="99431" fg:w="136"/><text x="85.3094%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (136 samples, 0.12%)</title><rect x="85.0594%" y="741" width="0.1163%" height="15" fill="rgb(208,196,21)" fg:x="99431" fg:w="136"/><text x="85.3094%" y="751.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (30 samples, 0.03%)</title><rect x="85.1757%" y="885" width="0.0257%" height="15" fill="rgb(242,117,42)" fg:x="99567" fg:w="30"/><text x="85.4257%" y="895.50"></text></g><g><title>tremor_script::ast::Script::run (45 samples, 0.04%)</title><rect x="85.2108%" y="885" width="0.0385%" height="15" fill="rgb(210,11,23)" fg:x="99608" fg:w="45"/><text x="85.4608%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (41 samples, 0.04%)</title><rect x="85.2142%" y="869" width="0.0351%" height="15" fill="rgb(217,110,2)" fg:x="99612" fg:w="41"/><text x="85.4642%" y="879.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::if_expr (41 samples, 0.04%)</title><rect x="85.2142%" y="853" width="0.0351%" height="15" fill="rgb(229,77,54)" fg:x="99612" fg:w="41"/><text x="85.4642%" y="863.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::execute_effectors (41 samples, 0.04%)</title><rect x="85.2142%" y="837" width="0.0351%" height="15" fill="rgb(218,53,16)" fg:x="99612" fg:w="41"/><text x="85.4642%" y="847.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (41 samples, 0.04%)</title><rect x="85.2142%" y="821" width="0.0351%" height="15" fill="rgb(215,38,13)" fg:x="99612" fg:w="41"/><text x="85.4642%" y="831.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (41 samples, 0.04%)</title><rect x="85.2142%" y="805" width="0.0351%" height="15" fill="rgb(235,42,18)" fg:x="99612" fg:w="41"/><text x="85.4642%" y="815.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (41 samples, 0.04%)</title><rect x="85.2142%" y="789" width="0.0351%" height="15" fill="rgb(219,66,54)" fg:x="99612" fg:w="41"/><text x="85.4642%" y="799.50"></text></g><g><title>tremor_script::interpreter::resolve (41 samples, 0.04%)</title><rect x="85.2142%" y="773" width="0.0351%" height="15" fill="rgb(222,205,4)" fg:x="99612" fg:w="41"/><text x="85.4642%" y="783.50"></text></g><g><title>tremor_script::interpreter::resolve_value (41 samples, 0.04%)</title><rect x="85.2142%" y="757" width="0.0351%" height="15" fill="rgb(227,213,46)" fg:x="99612" fg:w="41"/><text x="85.4642%" y="767.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup (30 samples, 0.03%)</title><rect x="85.2236%" y="741" width="0.0257%" height="15" fill="rgb(250,145,42)" fg:x="99623" fg:w="30"/><text x="85.4736%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (29 samples, 0.02%)</title><rect x="85.2245%" y="725" width="0.0248%" height="15" fill="rgb(219,15,2)" fg:x="99624" fg:w="29"/><text x="85.4745%" y="735.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup::{{closure}} (29 samples, 0.02%)</title><rect x="85.2245%" y="709" width="0.0248%" height="15" fill="rgb(231,181,52)" fg:x="99624" fg:w="29"/><text x="85.4745%" y="719.50"></text></g><g><title>tremor_value::known_key::KnownKey::map_lookup (29 samples, 0.02%)</title><rect x="85.2245%" y="693" width="0.0248%" height="15" fill="rgb(235,1,42)" fg:x="99624" fg:w="29"/><text x="85.4745%" y="703.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (27 samples, 0.02%)</title><rect x="85.2262%" y="677" width="0.0231%" height="15" fill="rgb(249,88,27)" fg:x="99626" fg:w="27"/><text x="85.4762%" y="687.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (27 samples, 0.02%)</title><rect x="85.2262%" y="661" width="0.0231%" height="15" fill="rgb(235,145,16)" fg:x="99626" fg:w="27"/><text x="85.4762%" y="671.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_hash (27 samples, 0.02%)</title><rect x="85.2262%" y="645" width="0.0231%" height="15" fill="rgb(237,114,19)" fg:x="99626" fg:w="27"/><text x="85.4762%" y="655.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::search (27 samples, 0.02%)</title><rect x="85.2262%" y="629" width="0.0231%" height="15" fill="rgb(238,51,50)" fg:x="99626" fg:w="27"/><text x="85.4762%" y="639.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (25 samples, 0.02%)</title><rect x="85.2279%" y="613" width="0.0214%" height="15" fill="rgb(205,194,25)" fg:x="99628" fg:w="25"/><text x="85.4779%" y="623.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (25 samples, 0.02%)</title><rect x="85.2279%" y="597" width="0.0214%" height="15" fill="rgb(215,203,17)" fg:x="99628" fg:w="25"/><text x="85.4779%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (25 samples, 0.02%)</title><rect x="85.2279%" y="581" width="0.0214%" height="15" fill="rgb(233,112,49)" fg:x="99628" fg:w="25"/><text x="85.4779%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (25 samples, 0.02%)</title><rect x="85.2279%" y="565" width="0.0214%" height="15" fill="rgb(241,130,26)" fg:x="99628" fg:w="25"/><text x="85.4779%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (25 samples, 0.02%)</title><rect x="85.2279%" y="549" width="0.0214%" height="15" fill="rgb(252,223,19)" fg:x="99628" fg:w="25"/><text x="85.4779%" y="559.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.01%)</title><rect x="85.2373%" y="533" width="0.0120%" height="15" fill="rgb(211,95,25)" fg:x="99639" fg:w="14"/><text x="85.4873%" y="543.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign (42 samples, 0.04%)</title><rect x="85.2493%" y="885" width="0.0359%" height="15" fill="rgb(251,182,27)" fg:x="99653" fg:w="42"/><text x="85.4993%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::assign_nested (17 samples, 0.01%)</title><rect x="85.2852%" y="885" width="0.0145%" height="15" fill="rgb(238,24,4)" fg:x="99695" fg:w="17"/><text x="85.5352%" y="895.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (13 samples, 0.01%)</title><rect x="85.3100%" y="885" width="0.0111%" height="15" fill="rgb(224,220,25)" fg:x="99724" fg:w="13"/><text x="85.5600%" y="895.50"></text></g><g><title>tremor_script::interpreter::val_eq (73 samples, 0.06%)</title><rect x="85.3374%" y="885" width="0.0624%" height="15" fill="rgb(239,133,26)" fg:x="99756" fg:w="73"/><text x="85.5874%" y="895.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::raw_entry (16 samples, 0.01%)</title><rect x="85.5213%" y="629" width="0.0137%" height="15" fill="rgb(211,94,48)" fg:x="99971" fg:w="16"/><text x="85.7713%" y="639.50"></text></g><g><title>halfbrown::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (226 samples, 0.19%)</title><rect x="85.5350%" y="629" width="0.1933%" height="15" fill="rgb(239,87,6)" fg:x="99987" fg:w="226"/><text x="85.7850%" y="639.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck (222 samples, 0.19%)</title><rect x="85.5384%" y="613" width="0.1899%" height="15" fill="rgb(227,62,0)" fg:x="99991" fg:w="222"/><text x="85.7884%" y="623.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_hash (222 samples, 0.19%)</title><rect x="85.5384%" y="597" width="0.1899%" height="15" fill="rgb(211,226,4)" fg:x="99991" fg:w="222"/><text x="85.7884%" y="607.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::search (222 samples, 0.19%)</title><rect x="85.5384%" y="581" width="0.1899%" height="15" fill="rgb(253,38,52)" fg:x="99991" fg:w="222"/><text x="85.7884%" y="591.50"></text></g><g><title>halfbrown::vecmap::raw_entry::RawEntryBuilder&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (211 samples, 0.18%)</title><rect x="85.5478%" y="565" width="0.1805%" height="15" fill="rgb(229,126,40)" fg:x="100002" fg:w="211"/><text x="85.7978%" y="575.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (203 samples, 0.17%)</title><rect x="85.5547%" y="549" width="0.1737%" height="15" fill="rgb(229,165,44)" fg:x="100010" fg:w="203"/><text x="85.8047%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (203 samples, 0.17%)</title><rect x="85.5547%" y="533" width="0.1737%" height="15" fill="rgb(247,95,47)" fg:x="100010" fg:w="203"/><text x="85.8047%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (203 samples, 0.17%)</title><rect x="85.5547%" y="517" width="0.1737%" height="15" fill="rgb(216,140,30)" fg:x="100010" fg:w="203"/><text x="85.8047%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (203 samples, 0.17%)</title><rect x="85.5547%" y="501" width="0.1737%" height="15" fill="rgb(246,214,8)" fg:x="100010" fg:w="203"/><text x="85.8047%" y="511.50"></text></g><g><title>[libc-2.31.so] (114 samples, 0.10%)</title><rect x="85.6308%" y="485" width="0.0975%" height="15" fill="rgb(227,224,15)" fg:x="100099" fg:w="114"/><text x="85.8808%" y="495.50"></text></g><g><title>tremor_script::srs::EventPayload::rent_mut (390 samples, 0.33%)</title><rect x="85.3998%" y="885" width="0.3336%" height="15" fill="rgb(233,175,4)" fg:x="99829" fg:w="390"/><text x="85.6498%" y="895.50"></text></g><g><title>&lt;tremor_pipeline::op::trickle::script::Script as tremor_pipeline::op::Operator&gt;::on_event::{{closure}} (380 samples, 0.33%)</title><rect x="85.4084%" y="869" width="0.3251%" height="15" fill="rgb(221,66,45)" fg:x="99839" fg:w="380"/><text x="85.6584%" y="879.50"></text></g><g><title>tremor_script::script::Script::run (380 samples, 0.33%)</title><rect x="85.4084%" y="853" width="0.3251%" height="15" fill="rgb(221,178,18)" fg:x="99839" fg:w="380"/><text x="85.6584%" y="863.50"></text></g><g><title>tremor_script::ast::Script::run (380 samples, 0.33%)</title><rect x="85.4084%" y="837" width="0.3251%" height="15" fill="rgb(213,81,29)" fg:x="99839" fg:w="380"/><text x="85.6584%" y="847.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (380 samples, 0.33%)</title><rect x="85.4084%" y="821" width="0.3251%" height="15" fill="rgb(220,89,49)" fg:x="99839" fg:w="380"/><text x="85.6584%" y="831.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::match_expr (377 samples, 0.32%)</title><rect x="85.4110%" y="805" width="0.3225%" height="15" fill="rgb(227,60,33)" fg:x="99842" fg:w="377"/><text x="85.6610%" y="815.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::execute_effectors (377 samples, 0.32%)</title><rect x="85.4110%" y="789" width="0.3225%" height="15" fill="rgb(205,113,12)" fg:x="99842" fg:w="377"/><text x="85.6610%" y="799.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (377 samples, 0.32%)</title><rect x="85.4110%" y="773" width="0.3225%" height="15" fill="rgb(211,32,1)" fg:x="99842" fg:w="377"/><text x="85.6610%" y="783.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (377 samples, 0.32%)</title><rect x="85.4110%" y="757" width="0.3225%" height="15" fill="rgb(246,2,12)" fg:x="99842" fg:w="377"/><text x="85.6610%" y="767.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (377 samples, 0.32%)</title><rect x="85.4110%" y="741" width="0.3225%" height="15" fill="rgb(243,37,27)" fg:x="99842" fg:w="377"/><text x="85.6610%" y="751.50"></text></g><g><title>tremor_script::interpreter::resolve (377 samples, 0.32%)</title><rect x="85.4110%" y="725" width="0.3225%" height="15" fill="rgb(248,211,31)" fg:x="99842" fg:w="377"/><text x="85.6610%" y="735.50"></text></g><g><title>tremor_script::interpreter::resolve_value (377 samples, 0.32%)</title><rect x="85.4110%" y="709" width="0.3225%" height="15" fill="rgb(242,146,47)" fg:x="99842" fg:w="377"/><text x="85.6610%" y="719.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup (255 samples, 0.22%)</title><rect x="85.5153%" y="693" width="0.2181%" height="15" fill="rgb(206,70,20)" fg:x="99964" fg:w="255"/><text x="85.7653%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (255 samples, 0.22%)</title><rect x="85.5153%" y="677" width="0.2181%" height="15" fill="rgb(215,10,51)" fg:x="99964" fg:w="255"/><text x="85.7653%" y="687.50"></text></g><g><title>tremor_value::known_key::KnownKey::lookup::{{closure}} (248 samples, 0.21%)</title><rect x="85.5213%" y="661" width="0.2122%" height="15" fill="rgb(243,178,53)" fg:x="99971" fg:w="248"/><text x="85.7713%" y="671.50"></text></g><g><title>tremor_value::known_key::KnownKey::map_lookup (248 samples, 0.21%)</title><rect x="85.5213%" y="645" width="0.2122%" height="15" fill="rgb(233,221,20)" fg:x="99971" fg:w="248"/><text x="85.7713%" y="655.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (14 samples, 0.01%)</title><rect x="85.7335%" y="885" width="0.0120%" height="15" fill="rgb(218,95,35)" fg:x="100219" fg:w="14"/><text x="85.9835%" y="895.50"></text></g><g><title>tremor_value::value::ValueDeserializer::parse (97 samples, 0.08%)</title><rect x="85.7454%" y="885" width="0.0830%" height="15" fill="rgb(229,13,5)" fg:x="100233" fg:w="97"/><text x="85.9954%" y="895.50"></text></g><g><title>tremor_value::value::serialize::FastGenerator::write_json (294 samples, 0.25%)</title><rect x="85.8284%" y="885" width="0.2515%" height="15" fill="rgb(252,164,30)" fg:x="100330" fg:w="294"/><text x="86.0784%" y="895.50"></text></g><g><title>tremor_value::value::serialize::FastGenerator::write_object (44 samples, 0.04%)</title><rect x="86.0423%" y="869" width="0.0376%" height="15" fill="rgb(232,68,36)" fg:x="100580" fg:w="44"/><text x="86.2923%" y="879.50"></text></g><g><title>value_trait::generator::BaseGenerator::write_simple_str_content (24 samples, 0.02%)</title><rect x="86.0594%" y="853" width="0.0205%" height="15" fill="rgb(219,59,54)" fg:x="100600" fg:w="24"/><text x="86.3094%" y="863.50"></text></g><g><title>value_trait::generator::BaseGenerator::write (24 samples, 0.02%)</title><rect x="86.0594%" y="837" width="0.0205%" height="15" fill="rgb(250,92,33)" fg:x="100600" fg:w="24"/><text x="86.3094%" y="847.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (24 samples, 0.02%)</title><rect x="86.0594%" y="821" width="0.0205%" height="15" fill="rgb(229,162,54)" fg:x="100600" fg:w="24"/><text x="86.3094%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (24 samples, 0.02%)</title><rect x="86.0594%" y="805" width="0.0205%" height="15" fill="rgb(244,114,52)" fg:x="100600" fg:w="24"/><text x="86.3094%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (24 samples, 0.02%)</title><rect x="86.0594%" y="789" width="0.0205%" height="15" fill="rgb(212,211,43)" fg:x="100600" fg:w="24"/><text x="86.3094%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (24 samples, 0.02%)</title><rect x="86.0594%" y="773" width="0.0205%" height="15" fill="rgb(226,147,8)" fg:x="100600" fg:w="24"/><text x="86.3094%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24 samples, 0.02%)</title><rect x="86.0594%" y="757" width="0.0205%" height="15" fill="rgb(226,23,13)" fg:x="100600" fg:w="24"/><text x="86.3094%" y="767.50"></text></g><g><title>[unknown] (93,881 samples, 80.31%)</title><rect x="5.7863%" y="901" width="80.3116%" height="15" fill="rgb(240,63,4)" fg:x="6764" fg:w="93881"/><text x="6.0363%" y="911.50">[unknown]</text></g><g><title>window::TimeWindow::add_t (18 samples, 0.02%)</title><rect x="86.0825%" y="885" width="0.0154%" height="15" fill="rgb(221,1,32)" fg:x="100627" fg:w="18"/><text x="86.3325%" y="895.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="86.1142%" y="885" width="0.0188%" height="15" fill="rgb(242,117,10)" fg:x="100664" fg:w="22"/><text x="86.3642%" y="895.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="86.1176%" y="869" width="0.0154%" height="15" fill="rgb(249,172,44)" fg:x="100668" fg:w="18"/><text x="86.3676%" y="879.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (17 samples, 0.01%)</title><rect x="86.1184%" y="853" width="0.0145%" height="15" fill="rgb(244,46,45)" fg:x="100669" fg:w="17"/><text x="86.3684%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (26 samples, 0.02%)</title><rect x="86.1364%" y="885" width="0.0222%" height="15" fill="rgb(206,43,17)" fg:x="100690" fg:w="26"/><text x="86.3864%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (32 samples, 0.03%)</title><rect x="86.1621%" y="885" width="0.0274%" height="15" fill="rgb(239,218,39)" fg:x="100720" fg:w="32"/><text x="86.4121%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="86.1672%" y="869" width="0.0222%" height="15" fill="rgb(208,169,54)" fg:x="100726" fg:w="26"/><text x="86.4172%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (24 samples, 0.02%)</title><rect x="86.1689%" y="853" width="0.0205%" height="15" fill="rgb(247,25,42)" fg:x="100728" fg:w="24"/><text x="86.4189%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="86.1740%" y="837" width="0.0154%" height="15" fill="rgb(226,23,31)" fg:x="100734" fg:w="18"/><text x="86.4240%" y="847.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (17 samples, 0.01%)</title><rect x="86.1749%" y="821" width="0.0145%" height="15" fill="rgb(247,16,28)" fg:x="100735" fg:w="17"/><text x="86.4249%" y="831.50"></text></g><g><title>&lt;tremor_pipeline::executable_graph::OperatorNode as tremor_pipeline::op::Operator&gt;::on_event (12 samples, 0.01%)</title><rect x="86.2553%" y="805" width="0.0103%" height="15" fill="rgb(231,147,38)" fg:x="100829" fg:w="12"/><text x="86.5053%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (72 samples, 0.06%)</title><rect x="86.2391%" y="869" width="0.0616%" height="15" fill="rgb(253,81,48)" fg:x="100810" fg:w="72"/><text x="86.4891%" y="879.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (70 samples, 0.06%)</title><rect x="86.2408%" y="853" width="0.0599%" height="15" fill="rgb(249,222,43)" fg:x="100812" fg:w="70"/><text x="86.4908%" y="863.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (55 samples, 0.05%)</title><rect x="86.2536%" y="837" width="0.0471%" height="15" fill="rgb(221,3,27)" fg:x="100827" fg:w="55"/><text x="86.5036%" y="847.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (55 samples, 0.05%)</title><rect x="86.2536%" y="821" width="0.0471%" height="15" fill="rgb(228,180,5)" fg:x="100827" fg:w="55"/><text x="86.5036%" y="831.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue_events (35 samples, 0.03%)</title><rect x="86.2707%" y="805" width="0.0299%" height="15" fill="rgb(227,131,42)" fg:x="100847" fg:w="35"/><text x="86.5207%" y="815.50"></text></g><g><title>__dso_handle (241 samples, 0.21%)</title><rect x="86.0979%" y="901" width="0.2062%" height="15" fill="rgb(212,3,39)" fg:x="100645" fg:w="241"/><text x="86.3479%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (134 samples, 0.11%)</title><rect x="86.1894%" y="885" width="0.1146%" height="15" fill="rgb(226,45,5)" fg:x="100752" fg:w="134"/><text x="86.4394%" y="895.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (26 samples, 0.02%)</title><rect x="86.3494%" y="869" width="0.0222%" height="15" fill="rgb(215,167,45)" fg:x="100939" fg:w="26"/><text x="86.5994%" y="879.50"></text></g><g><title>async_task::runnable::Runnable::run (26 samples, 0.02%)</title><rect x="86.3494%" y="853" width="0.0222%" height="15" fill="rgb(250,218,53)" fg:x="100939" fg:w="26"/><text x="86.5994%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.03%)</title><rect x="86.3443%" y="885" width="0.0325%" height="15" fill="rgb(207,140,0)" fg:x="100933" fg:w="38"/><text x="86.5943%" y="895.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (29 samples, 0.02%)</title><rect x="86.3768%" y="885" width="0.0248%" height="15" fill="rgb(238,133,51)" fg:x="100971" fg:w="29"/><text x="86.6268%" y="895.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (29 samples, 0.02%)</title><rect x="86.3768%" y="869" width="0.0248%" height="15" fill="rgb(218,203,53)" fg:x="100971" fg:w="29"/><text x="86.6268%" y="879.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (25 samples, 0.02%)</title><rect x="86.3802%" y="853" width="0.0214%" height="15" fill="rgb(226,184,25)" fg:x="100975" fg:w="25"/><text x="86.6302%" y="863.50"></text></g><g><title>async_io::reactor::ReactorLock::react (13 samples, 0.01%)</title><rect x="86.4059%" y="885" width="0.0111%" height="15" fill="rgb(231,121,21)" fg:x="101005" fg:w="13"/><text x="86.6559%" y="895.50"></text></g><g><title>polling::epoll::Poller::modify (28 samples, 0.02%)</title><rect x="86.4247%" y="885" width="0.0240%" height="15" fill="rgb(251,14,34)" fg:x="101027" fg:w="28"/><text x="86.6747%" y="895.50"></text></g><g><title>polling::epoll::Poller::ctl (13 samples, 0.01%)</title><rect x="86.4375%" y="869" width="0.0111%" height="15" fill="rgb(249,193,11)" fg:x="101042" fg:w="13"/><text x="86.6875%" y="879.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (131 samples, 0.11%)</title><rect x="86.3417%" y="901" width="0.1121%" height="15" fill="rgb(220,172,37)" fg:x="100930" fg:w="131"/><text x="86.5917%" y="911.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc_slow&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="86.4752%" y="501" width="0.0325%" height="15" fill="rgb(231,229,43)" fg:x="101086" fg:w="38"/><text x="86.7252%" y="511.50"></text></g><g><title>snmalloc::BackendAllocator&lt;snmalloc::PALLinux, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, snmalloc::BasicPagemap&lt;snmalloc::PALLinux, snmalloc::FlatPagemap&lt;14ul, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, snmalloc::PALLinux, false&gt;, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, false&gt;, snmalloc::StandardLocalState&lt;snmalloc::PALLinux, snmalloc::BasicPagemap&lt;snmalloc::PALLinux, snmalloc::FlatPagemap&lt;14ul, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, snmalloc::PALLinux, false&gt;, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, false&gt;, snmalloc::PagemapRegisterRange&lt;snmalloc::BasicPagemap&lt;snmalloc::PALLinux, snmalloc::FlatPagemap&lt;14ul, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, snmalloc::PALLinux, false&gt;, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, false&gt;, true&gt;::Type&lt;snmalloc::PalRange&lt;snmalloc::PALLinux&gt; &gt;, 14ul&gt; &gt;::alloc_chunk (36 samples, 0.03%)</title><rect x="86.4769%" y="485" width="0.0308%" height="15" fill="rgb(250,161,5)" fg:x="101088" fg:w="36"/><text x="86.7269%" y="495.50"></text></g><g><title>snmalloc::SmallBuddyRange::Type&lt;snmalloc::LargeBuddyRange&lt;21ul, 21ul, snmalloc::BasicPagemap&lt;snmalloc::PALLinux, snmalloc::FlatPagemap&lt;14ul, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, snmalloc::PALLinux, false&gt;, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, false&gt;, 12ul&gt;::Type&lt;snmalloc::StatsRange::Type&lt;snmalloc::CommitRange&lt;snmalloc::PALLinux&gt;::Type&lt;snmalloc::GlobalRange::Type&lt;snmalloc::LogRange&lt;2ul&gt;::Type&lt;snmalloc::LargeBuddyRange&lt;24ul, 63ul, snmalloc::BasicPagemap&lt;snmalloc::PALLinux, snmalloc::FlatPagemap&lt;14ul, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, snmalloc::PALLinux, false&gt;, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, false&gt;, 14ul&gt;::Type&lt;snmalloc::PagemapRegisterRange&lt;snmalloc::BasicPagemap&lt;snmalloc::PALLinux, snmalloc::FlatPagemap&lt;14ul, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, snmalloc::PALLinux, false&gt;, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, false&gt;, true&gt;::Type&lt;snmalloc::PalRange&lt;snmalloc::PALLinux&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::alloc_range (36 samples, 0.03%)</title><rect x="86.4769%" y="469" width="0.0308%" height="15" fill="rgb(218,225,18)" fg:x="101088" fg:w="36"/><text x="86.7269%" y="479.50"></text></g><g><title>snmalloc::range_to_pow_2_blocks&lt;4ul, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)2, (snmalloc::capptr::dimension::AddressSpaceControl)1, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::SmallBuddyRange::Type&lt;snmalloc::LargeBuddyRange&lt;21ul, 21ul, snmalloc::BasicPagemap&lt;snmalloc::PALLinux, snmalloc::FlatPagemap&lt;14ul, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, snmalloc::PALLinux, false&gt;, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, false&gt;, 12ul&gt;::Type&lt;snmalloc::StatsRange::Type&lt;snmalloc::CommitRange&lt;snmalloc::PALLinux&gt;::Type&lt;snmalloc::GlobalRange::Type&lt;snmalloc::LogRange&lt;2ul&gt;::Type&lt;snmalloc::LargeBuddyRange&lt;24ul, 63ul, snmalloc::BasicPagemap&lt;snmalloc::PALLinux, snmalloc::FlatPagemap&lt;14ul, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, snmalloc::PALLinux, false&gt;, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, false&gt;, 14ul&gt;::Type&lt;snmalloc::PagemapRegisterRange&lt;snmalloc::BasicPagemap&lt;snmalloc::PALLinux, snmalloc::FlatPagemap&lt;14ul, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, snmalloc::PALLinux, false&gt;, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, false&gt;, true&gt;::Type&lt;snmalloc::PalRange&lt;snmalloc::PALLinux&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::add_range(snmalloc::CapPtr&lt;void, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)2, (snmalloc::capptr::dimension::AddressSpaceControl)1, (snmalloc::capptr::dimension::Wildness)1&gt; &gt;, unsigned long)::{lambda(snmalloc::CapPtr&lt;void, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)2, (snmalloc::capptr::dimension::AddressSpaceControl)1, (snmalloc::capptr::dimension::Wildness)1&gt; &gt;, unsigned long, bool)#1}&gt; (14 samples, 0.01%)</title><rect x="86.4957%" y="453" width="0.0120%" height="15" fill="rgb(245,45,42)" fg:x="101110" fg:w="14"/><text x="86.7457%" y="463.50"></text></g><g><title>snmalloc::Buddy&lt;snmalloc::BuddyInplaceRep&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)2, (snmalloc::capptr::dimension::AddressSpaceControl)1, (snmalloc::capptr::dimension::Wildness)1&gt; &gt;, 4ul, 14ul&gt;::add_block (13 samples, 0.01%)</title><rect x="86.4965%" y="437" width="0.0111%" height="15" fill="rgb(211,115,1)" fg:x="101111" fg:w="13"/><text x="86.7465%" y="447.50"></text></g><g><title>async_channel::bounded (49 samples, 0.04%)</title><rect x="86.4700%" y="661" width="0.0419%" height="15" fill="rgb(248,133,52)" fg:x="101080" fg:w="49"/><text x="86.7200%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (49 samples, 0.04%)</title><rect x="86.4700%" y="645" width="0.0419%" height="15" fill="rgb(238,100,21)" fg:x="101080" fg:w="49"/><text x="86.7200%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (49 samples, 0.04%)</title><rect x="86.4700%" y="629" width="0.0419%" height="15" fill="rgb(247,144,11)" fg:x="101080" fg:w="49"/><text x="86.7200%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.04%)</title><rect x="86.4700%" y="613" width="0.0419%" height="15" fill="rgb(206,164,16)" fg:x="101080" fg:w="49"/><text x="86.7200%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.04%)</title><rect x="86.4700%" y="597" width="0.0419%" height="15" fill="rgb(222,34,3)" fg:x="101080" fg:w="49"/><text x="86.7200%" y="607.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.04%)</title><rect x="86.4700%" y="581" width="0.0419%" height="15" fill="rgb(248,82,4)" fg:x="101080" fg:w="49"/><text x="86.7200%" y="591.50"></text></g><g><title>__rg_alloc (49 samples, 0.04%)</title><rect x="86.4700%" y="565" width="0.0419%" height="15" fill="rgb(228,81,46)" fg:x="101080" fg:w="49"/><text x="86.7200%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (49 samples, 0.04%)</title><rect x="86.4700%" y="549" width="0.0419%" height="15" fill="rgb(227,67,47)" fg:x="101080" fg:w="49"/><text x="86.7200%" y="559.50"></text></g><g><title>sn_rust_alloc (49 samples, 0.04%)</title><rect x="86.4700%" y="533" width="0.0419%" height="15" fill="rgb(215,93,53)" fg:x="101080" fg:w="49"/><text x="86.7200%" y="543.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::lazy_init&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long)#2}, unsigned long&gt; (48 samples, 0.04%)</title><rect x="86.4709%" y="517" width="0.0411%" height="15" fill="rgb(248,194,39)" fg:x="101081" fg:w="48"/><text x="86.7209%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (31 samples, 0.03%)</title><rect x="86.8122%" y="293" width="0.0265%" height="15" fill="rgb(215,5,19)" fg:x="101480" fg:w="31"/><text x="87.0622%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (30 samples, 0.03%)</title><rect x="87.0252%" y="197" width="0.0257%" height="15" fill="rgb(226,215,51)" fg:x="101729" fg:w="30"/><text x="87.2752%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (30 samples, 0.03%)</title><rect x="87.0252%" y="181" width="0.0257%" height="15" fill="rgb(225,56,26)" fg:x="101729" fg:w="30"/><text x="87.2752%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (27 samples, 0.02%)</title><rect x="87.0278%" y="165" width="0.0231%" height="15" fill="rgb(222,75,29)" fg:x="101732" fg:w="27"/><text x="87.2778%" y="175.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}}::{{closure}} (24 samples, 0.02%)</title><rect x="87.0304%" y="149" width="0.0205%" height="15" fill="rgb(236,139,6)" fg:x="101735" fg:w="24"/><text x="87.2804%" y="159.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::ptr_eq (24 samples, 0.02%)</title><rect x="87.0304%" y="133" width="0.0205%" height="15" fill="rgb(223,137,36)" fg:x="101735" fg:w="24"/><text x="87.2804%" y="143.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (112 samples, 0.10%)</title><rect x="87.0509%" y="197" width="0.0958%" height="15" fill="rgb(226,99,2)" fg:x="101759" fg:w="112"/><text x="87.3009%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (426 samples, 0.36%)</title><rect x="86.8456%" y="245" width="0.3644%" height="15" fill="rgb(206,133,23)" fg:x="101519" fg:w="426"/><text x="87.0956%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (356 samples, 0.30%)</title><rect x="86.9055%" y="229" width="0.3045%" height="15" fill="rgb(243,173,15)" fg:x="101589" fg:w="356"/><text x="87.1555%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (294 samples, 0.25%)</title><rect x="86.9585%" y="213" width="0.2515%" height="15" fill="rgb(228,69,28)" fg:x="101651" fg:w="294"/><text x="87.2085%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (74 samples, 0.06%)</title><rect x="87.1467%" y="197" width="0.0633%" height="15" fill="rgb(212,51,22)" fg:x="101871" fg:w="74"/><text x="87.3967%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (74 samples, 0.06%)</title><rect x="87.1467%" y="181" width="0.0633%" height="15" fill="rgb(227,113,0)" fg:x="101871" fg:w="74"/><text x="87.3967%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (27 samples, 0.02%)</title><rect x="87.1869%" y="165" width="0.0231%" height="15" fill="rgb(252,84,27)" fg:x="101918" fg:w="27"/><text x="87.4369%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (27 samples, 0.02%)</title><rect x="87.1869%" y="149" width="0.0231%" height="15" fill="rgb(223,145,39)" fg:x="101918" fg:w="27"/><text x="87.4369%" y="159.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}}::{{closure}} (21 samples, 0.02%)</title><rect x="87.1920%" y="133" width="0.0180%" height="15" fill="rgb(239,219,30)" fg:x="101924" fg:w="21"/><text x="87.4420%" y="143.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::ptr_eq (21 samples, 0.02%)</title><rect x="87.1920%" y="117" width="0.0180%" height="15" fill="rgb(224,196,39)" fg:x="101924" fg:w="21"/><text x="87.4420%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (466 samples, 0.40%)</title><rect x="86.8387%" y="293" width="0.3986%" height="15" fill="rgb(205,35,43)" fg:x="101511" fg:w="466"/><text x="87.0887%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (466 samples, 0.40%)</title><rect x="86.8387%" y="277" width="0.3986%" height="15" fill="rgb(228,201,21)" fg:x="101511" fg:w="466"/><text x="87.0887%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (466 samples, 0.40%)</title><rect x="86.8387%" y="261" width="0.3986%" height="15" fill="rgb(237,118,16)" fg:x="101511" fg:w="466"/><text x="87.0887%" y="271.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (32 samples, 0.03%)</title><rect x="87.2100%" y="245" width="0.0274%" height="15" fill="rgb(241,17,19)" fg:x="101945" fg:w="32"/><text x="87.4600%" y="255.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (1,067 samples, 0.91%)</title><rect x="87.5171%" y="261" width="0.9128%" height="15" fill="rgb(214,10,25)" fg:x="102304" fg:w="1067"/><text x="87.7671%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (765 samples, 0.65%)</title><rect x="87.7755%" y="245" width="0.6544%" height="15" fill="rgb(238,37,29)" fg:x="102606" fg:w="765"/><text x="88.0255%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (765 samples, 0.65%)</title><rect x="87.7755%" y="229" width="0.6544%" height="15" fill="rgb(253,83,25)" fg:x="102606" fg:w="765"/><text x="88.0255%" y="239.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (1,316 samples, 1.13%)</title><rect x="87.3101%" y="277" width="1.1258%" height="15" fill="rgb(234,192,12)" fg:x="102062" fg:w="1316"/><text x="87.5601%" y="287.50"></text></g><g><title>async_executor::steal (1,407 samples, 1.20%)</title><rect x="87.2374%" y="293" width="1.2036%" height="15" fill="rgb(241,216,45)" fg:x="101977" fg:w="1407"/><text x="87.4874%" y="303.50"></text></g><g><title>concurrent_queue::full_fence (1,441 samples, 1.23%)</title><rect x="89.0338%" y="261" width="1.2327%" height="15" fill="rgb(242,22,33)" fg:x="104077" fg:w="1441"/><text x="89.2838%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1,417 samples, 1.21%)</title><rect x="89.0544%" y="245" width="1.2122%" height="15" fill="rgb(231,105,49)" fg:x="104101" fg:w="1417"/><text x="89.3044%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,417 samples, 1.21%)</title><rect x="89.0544%" y="229" width="1.2122%" height="15" fill="rgb(218,204,15)" fg:x="104101" fg:w="1417"/><text x="89.3044%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,417 samples, 1.21%)</title><rect x="89.0544%" y="213" width="1.2122%" height="15" fill="rgb(235,138,41)" fg:x="104101" fg:w="1417"/><text x="89.3044%" y="223.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,008 samples, 1.72%)</title><rect x="88.6309%" y="277" width="1.7178%" height="15" fill="rgb(246,0,9)" fg:x="103606" fg:w="2008"/><text x="88.8809%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (96 samples, 0.08%)</title><rect x="90.2666%" y="261" width="0.0821%" height="15" fill="rgb(210,74,4)" fg:x="105518" fg:w="96"/><text x="90.5166%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (66 samples, 0.06%)</title><rect x="90.2922%" y="245" width="0.0565%" height="15" fill="rgb(250,60,41)" fg:x="105548" fg:w="66"/><text x="90.5422%" y="255.50"></text></g><g><title>concurrent_queue::full_fence (187 samples, 0.16%)</title><rect x="90.3880%" y="261" width="0.1600%" height="15" fill="rgb(220,115,12)" fg:x="105660" fg:w="187"/><text x="90.6380%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (187 samples, 0.16%)</title><rect x="90.3880%" y="245" width="0.1600%" height="15" fill="rgb(237,100,13)" fg:x="105660" fg:w="187"/><text x="90.6380%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (187 samples, 0.16%)</title><rect x="90.3880%" y="229" width="0.1600%" height="15" fill="rgb(213,55,26)" fg:x="105660" fg:w="187"/><text x="90.6380%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (187 samples, 0.16%)</title><rect x="90.3880%" y="213" width="0.1600%" height="15" fill="rgb(216,17,4)" fg:x="105660" fg:w="187"/><text x="90.6380%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (29 samples, 0.02%)</title><rect x="90.5531%" y="245" width="0.0248%" height="15" fill="rgb(220,153,47)" fg:x="105853" fg:w="29"/><text x="90.8031%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (29 samples, 0.02%)</title><rect x="90.5531%" y="229" width="0.0248%" height="15" fill="rgb(215,131,9)" fg:x="105853" fg:w="29"/><text x="90.8031%" y="239.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (33 samples, 0.03%)</title><rect x="90.5506%" y="261" width="0.0282%" height="15" fill="rgb(233,46,42)" fg:x="105850" fg:w="33"/><text x="90.8006%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (15 samples, 0.01%)</title><rect x="90.5891%" y="261" width="0.0128%" height="15" fill="rgb(226,86,7)" fg:x="105895" fg:w="15"/><text x="90.8391%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="90.5891%" y="245" width="0.0128%" height="15" fill="rgb(239,226,21)" fg:x="105895" fg:w="15"/><text x="90.8391%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (77 samples, 0.07%)</title><rect x="90.6019%" y="261" width="0.0659%" height="15" fill="rgb(244,137,22)" fg:x="105910" fg:w="77"/><text x="90.8519%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (77 samples, 0.07%)</title><rect x="90.6019%" y="245" width="0.0659%" height="15" fill="rgb(211,139,35)" fg:x="105910" fg:w="77"/><text x="90.8519%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (89 samples, 0.08%)</title><rect x="90.6678%" y="261" width="0.0761%" height="15" fill="rgb(214,62,50)" fg:x="105987" fg:w="89"/><text x="90.9178%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_or (89 samples, 0.08%)</title><rect x="90.6678%" y="245" width="0.0761%" height="15" fill="rgb(212,113,44)" fg:x="105987" fg:w="89"/><text x="90.9178%" y="255.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,825 samples, 2.42%)</title><rect x="88.4410%" y="293" width="2.4167%" height="15" fill="rgb(226,150,43)" fg:x="103384" fg:w="2825"/><text x="88.6910%" y="303.50">co..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (595 samples, 0.51%)</title><rect x="90.3487%" y="277" width="0.5090%" height="15" fill="rgb(250,71,37)" fg:x="105614" fg:w="595"/><text x="90.5987%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (133 samples, 0.11%)</title><rect x="90.7439%" y="261" width="0.1138%" height="15" fill="rgb(219,76,19)" fg:x="106076" fg:w="133"/><text x="90.9939%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (133 samples, 0.11%)</title><rect x="90.7439%" y="245" width="0.1138%" height="15" fill="rgb(250,39,11)" fg:x="106076" fg:w="133"/><text x="90.9939%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (166 samples, 0.14%)</title><rect x="90.8577%" y="293" width="0.1420%" height="15" fill="rgb(230,64,31)" fg:x="106209" fg:w="166"/><text x="91.1077%" y="303.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (166 samples, 0.14%)</title><rect x="90.8577%" y="277" width="0.1420%" height="15" fill="rgb(208,222,23)" fg:x="106209" fg:w="166"/><text x="91.1077%" y="287.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (166 samples, 0.14%)</title><rect x="90.8577%" y="261" width="0.1420%" height="15" fill="rgb(227,125,18)" fg:x="106209" fg:w="166"/><text x="91.1077%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (166 samples, 0.14%)</title><rect x="90.8577%" y="245" width="0.1420%" height="15" fill="rgb(234,210,9)" fg:x="106209" fg:w="166"/><text x="91.1077%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (159 samples, 0.14%)</title><rect x="90.8637%" y="229" width="0.1360%" height="15" fill="rgb(217,127,24)" fg:x="106216" fg:w="159"/><text x="91.1137%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_sub (159 samples, 0.14%)</title><rect x="90.8637%" y="213" width="0.1360%" height="15" fill="rgb(239,141,48)" fg:x="106216" fg:w="159"/><text x="91.1137%" y="223.50"></text></g><g><title>fastrand::usize (29 samples, 0.02%)</title><rect x="90.9997%" y="293" width="0.0248%" height="15" fill="rgb(227,109,8)" fg:x="106375" fg:w="29"/><text x="91.2497%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24 samples, 0.02%)</title><rect x="91.0040%" y="277" width="0.0205%" height="15" fill="rgb(235,184,23)" fg:x="106380" fg:w="24"/><text x="91.2540%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24 samples, 0.02%)</title><rect x="91.0040%" y="261" width="0.0205%" height="15" fill="rgb(227,226,48)" fg:x="106380" fg:w="24"/><text x="91.2540%" y="271.50"></text></g><g><title>fastrand::usize::{{closure}} (13 samples, 0.01%)</title><rect x="91.0134%" y="245" width="0.0111%" height="15" fill="rgb(206,150,11)" fg:x="106391" fg:w="13"/><text x="91.2634%" y="255.50"></text></g><g><title>fastrand::Rng::usize (13 samples, 0.01%)</title><rect x="91.0134%" y="229" width="0.0111%" height="15" fill="rgb(254,2,33)" fg:x="106391" fg:w="13"/><text x="91.2634%" y="239.50"></text></g><g><title>std::sync::poison::Flag::get (22 samples, 0.02%)</title><rect x="91.0245%" y="245" width="0.0188%" height="15" fill="rgb(243,160,20)" fg:x="106404" fg:w="22"/><text x="91.2745%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (22 samples, 0.02%)</title><rect x="91.0245%" y="229" width="0.0188%" height="15" fill="rgb(218,208,30)" fg:x="106404" fg:w="22"/><text x="91.2745%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.02%)</title><rect x="91.0245%" y="213" width="0.0188%" height="15" fill="rgb(224,120,49)" fg:x="106404" fg:w="22"/><text x="91.2745%" y="223.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (28 samples, 0.02%)</title><rect x="91.0245%" y="277" width="0.0240%" height="15" fill="rgb(246,12,2)" fg:x="106404" fg:w="28"/><text x="91.2745%" y="287.50"></text></g><g><title>std::sync::poison::Flag::borrow (28 samples, 0.02%)</title><rect x="91.0245%" y="261" width="0.0240%" height="15" fill="rgb(236,117,3)" fg:x="106404" fg:w="28"/><text x="91.2745%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (230 samples, 0.20%)</title><rect x="91.0519%" y="245" width="0.1968%" height="15" fill="rgb(216,128,52)" fg:x="106436" fg:w="230"/><text x="91.3019%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (230 samples, 0.20%)</title><rect x="91.0519%" y="229" width="0.1968%" height="15" fill="rgb(246,145,19)" fg:x="106436" fg:w="230"/><text x="91.3019%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (40 samples, 0.03%)</title><rect x="91.2486%" y="245" width="0.0342%" height="15" fill="rgb(222,11,46)" fg:x="106666" fg:w="40"/><text x="91.4986%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (40 samples, 0.03%)</title><rect x="91.2486%" y="229" width="0.0342%" height="15" fill="rgb(245,82,36)" fg:x="106666" fg:w="40"/><text x="91.4986%" y="239.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (5,387 samples, 4.61%)</title><rect x="86.6796%" y="309" width="4.6084%" height="15" fill="rgb(250,73,51)" fg:x="101325" fg:w="5387"/><text x="86.9296%" y="319.50">async..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (308 samples, 0.26%)</title><rect x="91.0245%" y="293" width="0.2635%" height="15" fill="rgb(221,189,23)" fg:x="106404" fg:w="308"/><text x="91.2745%" y="303.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (280 samples, 0.24%)</title><rect x="91.0485%" y="277" width="0.2395%" height="15" fill="rgb(210,33,7)" fg:x="106432" fg:w="280"/><text x="91.2985%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (280 samples, 0.24%)</title><rect x="91.0485%" y="261" width="0.2395%" height="15" fill="rgb(210,107,22)" fg:x="106432" fg:w="280"/><text x="91.2985%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (32 samples, 0.03%)</title><rect x="91.2957%" y="229" width="0.0274%" height="15" fill="rgb(222,116,37)" fg:x="106721" fg:w="32"/><text x="91.5457%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_swap (32 samples, 0.03%)</title><rect x="91.2957%" y="213" width="0.0274%" height="15" fill="rgb(254,17,48)" fg:x="106721" fg:w="32"/><text x="91.5457%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (33 samples, 0.03%)</title><rect x="91.2957%" y="293" width="0.0282%" height="15" fill="rgb(224,36,32)" fg:x="106721" fg:w="33"/><text x="91.5457%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="91.2957%" y="277" width="0.0282%" height="15" fill="rgb(232,90,46)" fg:x="106721" fg:w="33"/><text x="91.5457%" y="287.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (33 samples, 0.03%)</title><rect x="91.2957%" y="261" width="0.0282%" height="15" fill="rgb(241,66,40)" fg:x="106721" fg:w="33"/><text x="91.5457%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (33 samples, 0.03%)</title><rect x="91.2957%" y="245" width="0.0282%" height="15" fill="rgb(249,184,29)" fg:x="106721" fg:w="33"/><text x="91.5457%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (66 samples, 0.06%)</title><rect x="91.3239%" y="293" width="0.0565%" height="15" fill="rgb(231,181,1)" fg:x="106754" fg:w="66"/><text x="91.5739%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (66 samples, 0.06%)</title><rect x="91.3239%" y="277" width="0.0565%" height="15" fill="rgb(224,94,2)" fg:x="106754" fg:w="66"/><text x="91.5739%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (19 samples, 0.02%)</title><rect x="91.4018%" y="213" width="0.0163%" height="15" fill="rgb(229,170,15)" fg:x="106845" fg:w="19"/><text x="91.6518%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="91.4018%" y="197" width="0.0163%" height="15" fill="rgb(240,127,35)" fg:x="106845" fg:w="19"/><text x="91.6518%" y="207.50"></text></g><g><title>async_io::reactor::Reactor::notify (75 samples, 0.06%)</title><rect x="91.3958%" y="245" width="0.0642%" height="15" fill="rgb(248,196,34)" fg:x="106838" fg:w="75"/><text x="91.6458%" y="255.50"></text></g><g><title>polling::Poller::notify (68 samples, 0.06%)</title><rect x="91.4018%" y="229" width="0.0582%" height="15" fill="rgb(236,137,7)" fg:x="106845" fg:w="68"/><text x="91.6518%" y="239.50"></text></g><g><title>polling::epoll::Poller::notify (48 samples, 0.04%)</title><rect x="91.4189%" y="213" width="0.0411%" height="15" fill="rgb(235,127,16)" fg:x="106865" fg:w="48"/><text x="91.6689%" y="223.50"></text></g><g><title>__libc_write (45 samples, 0.04%)</title><rect x="91.4214%" y="197" width="0.0385%" height="15" fill="rgb(250,192,54)" fg:x="106868" fg:w="45"/><text x="91.6714%" y="207.50"></text></g><g><title>__pthread_enable_asynccancel (19 samples, 0.02%)</title><rect x="91.4437%" y="181" width="0.0163%" height="15" fill="rgb(218,98,20)" fg:x="106894" fg:w="19"/><text x="91.6937%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (51 samples, 0.04%)</title><rect x="91.4993%" y="213" width="0.0436%" height="15" fill="rgb(230,176,47)" fg:x="106959" fg:w="51"/><text x="91.7493%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_swap (51 samples, 0.04%)</title><rect x="91.4993%" y="197" width="0.0436%" height="15" fill="rgb(244,2,33)" fg:x="106959" fg:w="51"/><text x="91.7493%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (15 samples, 0.01%)</title><rect x="91.5429%" y="165" width="0.0128%" height="15" fill="rgb(231,100,17)" fg:x="107010" fg:w="15"/><text x="91.7929%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.01%)</title><rect x="91.5429%" y="149" width="0.0128%" height="15" fill="rgb(245,23,12)" fg:x="107010" fg:w="15"/><text x="91.7929%" y="159.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (27 samples, 0.02%)</title><rect x="91.5429%" y="213" width="0.0231%" height="15" fill="rgb(249,55,22)" fg:x="107010" fg:w="27"/><text x="91.7929%" y="223.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (27 samples, 0.02%)</title><rect x="91.5429%" y="197" width="0.0231%" height="15" fill="rgb(207,134,9)" fg:x="107010" fg:w="27"/><text x="91.7929%" y="207.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (27 samples, 0.02%)</title><rect x="91.5429%" y="181" width="0.0231%" height="15" fill="rgb(218,134,0)" fg:x="107010" fg:w="27"/><text x="91.7929%" y="191.50"></text></g><g><title>std::sys::unix::futex::futex_wake (12 samples, 0.01%)</title><rect x="91.5557%" y="165" width="0.0103%" height="15" fill="rgb(213,212,33)" fg:x="107025" fg:w="12"/><text x="91.8057%" y="175.50"></text></g><g><title>parking::Unparker::unpark (125 samples, 0.11%)</title><rect x="91.4676%" y="245" width="0.1069%" height="15" fill="rgb(252,106,18)" fg:x="106922" fg:w="125"/><text x="91.7176%" y="255.50"></text></g><g><title>parking::Inner::unpark (98 samples, 0.08%)</title><rect x="91.4907%" y="229" width="0.0838%" height="15" fill="rgb(208,126,42)" fg:x="106949" fg:w="98"/><text x="91.7407%" y="239.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (238 samples, 0.20%)</title><rect x="91.3804%" y="261" width="0.2036%" height="15" fill="rgb(246,175,29)" fg:x="106820" fg:w="238"/><text x="91.6304%" y="271.50"></text></g><g><title>core::task::wake::Waker::wake (308 samples, 0.26%)</title><rect x="91.3804%" y="293" width="0.2635%" height="15" fill="rgb(215,13,50)" fg:x="106820" fg:w="308"/><text x="91.6304%" y="303.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (308 samples, 0.26%)</title><rect x="91.3804%" y="277" width="0.2635%" height="15" fill="rgb(216,172,15)" fg:x="106820" fg:w="308"/><text x="91.6304%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (70 samples, 0.06%)</title><rect x="91.5840%" y="261" width="0.0599%" height="15" fill="rgb(212,103,13)" fg:x="107058" fg:w="70"/><text x="91.8340%" y="271.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.06%)</title><rect x="91.5840%" y="245" width="0.0599%" height="15" fill="rgb(231,171,36)" fg:x="107058" fg:w="70"/><text x="91.8340%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (65 samples, 0.06%)</title><rect x="91.5882%" y="229" width="0.0556%" height="15" fill="rgb(250,123,20)" fg:x="107063" fg:w="65"/><text x="91.8382%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_sub (65 samples, 0.06%)</title><rect x="91.5882%" y="213" width="0.0556%" height="15" fill="rgb(212,53,50)" fg:x="107063" fg:w="65"/><text x="91.8382%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (27 samples, 0.02%)</title><rect x="91.6490%" y="245" width="0.0231%" height="15" fill="rgb(243,54,12)" fg:x="107134" fg:w="27"/><text x="91.8990%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (27 samples, 0.02%)</title><rect x="91.6490%" y="229" width="0.0231%" height="15" fill="rgb(234,101,34)" fg:x="107134" fg:w="27"/><text x="91.8990%" y="239.50"></text></g><g><title>async_executor::State::notify (453 samples, 0.39%)</title><rect x="91.2880%" y="309" width="0.3875%" height="15" fill="rgb(254,67,22)" fg:x="106712" fg:w="453"/><text x="91.5380%" y="319.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (37 samples, 0.03%)</title><rect x="91.6439%" y="293" width="0.0317%" height="15" fill="rgb(250,35,47)" fg:x="107128" fg:w="37"/><text x="91.8939%" y="303.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (32 samples, 0.03%)</title><rect x="91.6481%" y="277" width="0.0274%" height="15" fill="rgb(226,126,38)" fg:x="107133" fg:w="32"/><text x="91.8981%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (32 samples, 0.03%)</title><rect x="91.6481%" y="261" width="0.0274%" height="15" fill="rgb(216,138,53)" fg:x="107133" fg:w="32"/><text x="91.8981%" y="271.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (77 samples, 0.07%)</title><rect x="91.6969%" y="277" width="0.0659%" height="15" fill="rgb(246,199,43)" fg:x="107190" fg:w="77"/><text x="91.9469%" y="287.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (76 samples, 0.07%)</title><rect x="91.6977%" y="261" width="0.0650%" height="15" fill="rgb(232,125,11)" fg:x="107191" fg:w="76"/><text x="91.9477%" y="271.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (75 samples, 0.06%)</title><rect x="91.6986%" y="245" width="0.0642%" height="15" fill="rgb(218,219,45)" fg:x="107192" fg:w="75"/><text x="91.9486%" y="255.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (75 samples, 0.06%)</title><rect x="91.6986%" y="229" width="0.0642%" height="15" fill="rgb(216,102,54)" fg:x="107192" fg:w="75"/><text x="91.9486%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (75 samples, 0.06%)</title><rect x="91.6986%" y="213" width="0.0642%" height="15" fill="rgb(250,228,7)" fg:x="107192" fg:w="75"/><text x="91.9486%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_add (75 samples, 0.06%)</title><rect x="91.6986%" y="197" width="0.0642%" height="15" fill="rgb(226,125,25)" fg:x="107192" fg:w="75"/><text x="91.9486%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (26 samples, 0.02%)</title><rect x="91.7628%" y="277" width="0.0222%" height="15" fill="rgb(224,165,27)" fg:x="107267" fg:w="26"/><text x="92.0128%" y="287.50"></text></g><g><title>async_executor::Sleepers::insert (132 samples, 0.11%)</title><rect x="91.6909%" y="293" width="0.1129%" height="15" fill="rgb(233,86,3)" fg:x="107183" fg:w="132"/><text x="91.9409%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.02%)</title><rect x="91.7850%" y="277" width="0.0188%" height="15" fill="rgb(228,116,20)" fg:x="107293" fg:w="22"/><text x="92.0350%" y="287.50"></text></g><g><title>core::ptr::write (17 samples, 0.01%)</title><rect x="91.7893%" y="261" width="0.0145%" height="15" fill="rgb(209,192,17)" fg:x="107298" fg:w="17"/><text x="92.0393%" y="271.50"></text></g><g><title>async_executor::Sleepers::is_notified (22 samples, 0.02%)</title><rect x="91.8038%" y="293" width="0.0188%" height="15" fill="rgb(224,88,34)" fg:x="107315" fg:w="22"/><text x="92.0538%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.02%)</title><rect x="91.8877%" y="277" width="0.0231%" height="15" fill="rgb(233,38,6)" fg:x="107413" fg:w="27"/><text x="92.1377%" y="287.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (76 samples, 0.07%)</title><rect x="91.9108%" y="277" width="0.0650%" height="15" fill="rgb(212,59,30)" fg:x="107440" fg:w="76"/><text x="92.1608%" y="287.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (74 samples, 0.06%)</title><rect x="91.9125%" y="261" width="0.0633%" height="15" fill="rgb(213,80,3)" fg:x="107442" fg:w="74"/><text x="92.1625%" y="271.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (74 samples, 0.06%)</title><rect x="91.9125%" y="245" width="0.0633%" height="15" fill="rgb(251,178,7)" fg:x="107442" fg:w="74"/><text x="92.1625%" y="255.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (74 samples, 0.06%)</title><rect x="91.9125%" y="229" width="0.0633%" height="15" fill="rgb(213,154,26)" fg:x="107442" fg:w="74"/><text x="92.1625%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (74 samples, 0.06%)</title><rect x="91.9125%" y="213" width="0.0633%" height="15" fill="rgb(238,165,49)" fg:x="107442" fg:w="74"/><text x="92.1625%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_add (74 samples, 0.06%)</title><rect x="91.9125%" y="197" width="0.0633%" height="15" fill="rgb(248,91,46)" fg:x="107442" fg:w="74"/><text x="92.1625%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (27 samples, 0.02%)</title><rect x="91.9758%" y="277" width="0.0231%" height="15" fill="rgb(244,21,52)" fg:x="107516" fg:w="27"/><text x="92.2258%" y="287.50"></text></g><g><title>core::ptr::write (22 samples, 0.02%)</title><rect x="91.9801%" y="261" width="0.0188%" height="15" fill="rgb(247,122,20)" fg:x="107521" fg:w="22"/><text x="92.2301%" y="271.50"></text></g><g><title>async_executor::Sleepers::update (219 samples, 0.19%)</title><rect x="91.8226%" y="293" width="0.1873%" height="15" fill="rgb(218,27,9)" fg:x="107337" fg:w="219"/><text x="92.0726%" y="303.50"></text></g><g><title>core::task::wake::Waker::will_wake (13 samples, 0.01%)</title><rect x="91.9989%" y="277" width="0.0111%" height="15" fill="rgb(246,7,6)" fg:x="107543" fg:w="13"/><text x="92.2489%" y="287.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (13 samples, 0.01%)</title><rect x="91.9989%" y="261" width="0.0111%" height="15" fill="rgb(227,135,54)" fg:x="107543" fg:w="13"/><text x="92.2489%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (149 samples, 0.13%)</title><rect x="92.0143%" y="229" width="0.1275%" height="15" fill="rgb(247,14,11)" fg:x="107561" fg:w="149"/><text x="92.2643%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_swap (149 samples, 0.13%)</title><rect x="92.0143%" y="213" width="0.1275%" height="15" fill="rgb(206,149,34)" fg:x="107561" fg:w="149"/><text x="92.2643%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (156 samples, 0.13%)</title><rect x="92.0100%" y="293" width="0.1335%" height="15" fill="rgb(227,228,4)" fg:x="107556" fg:w="156"/><text x="92.2600%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (156 samples, 0.13%)</title><rect x="92.0100%" y="277" width="0.1335%" height="15" fill="rgb(238,218,28)" fg:x="107556" fg:w="156"/><text x="92.2600%" y="287.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (151 samples, 0.13%)</title><rect x="92.0143%" y="261" width="0.1292%" height="15" fill="rgb(252,86,40)" fg:x="107561" fg:w="151"/><text x="92.2643%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (151 samples, 0.13%)</title><rect x="92.0143%" y="245" width="0.1292%" height="15" fill="rgb(251,225,11)" fg:x="107561" fg:w="151"/><text x="92.2643%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (173 samples, 0.15%)</title><rect x="92.1434%" y="293" width="0.1480%" height="15" fill="rgb(206,46,49)" fg:x="107712" fg:w="173"/><text x="92.3934%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (173 samples, 0.15%)</title><rect x="92.1434%" y="277" width="0.1480%" height="15" fill="rgb(245,128,24)" fg:x="107712" fg:w="173"/><text x="92.3934%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (145 samples, 0.12%)</title><rect x="92.2914%" y="293" width="0.1240%" height="15" fill="rgb(219,177,34)" fg:x="107885" fg:w="145"/><text x="92.5414%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_store (145 samples, 0.12%)</title><rect x="92.2914%" y="277" width="0.1240%" height="15" fill="rgb(218,60,48)" fg:x="107885" fg:w="145"/><text x="92.5414%" y="287.50"></text></g><g><title>std::sync::poison::Flag::get (14 samples, 0.01%)</title><rect x="92.4180%" y="245" width="0.0120%" height="15" fill="rgb(221,11,5)" fg:x="108033" fg:w="14"/><text x="92.6680%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (14 samples, 0.01%)</title><rect x="92.4180%" y="229" width="0.0120%" height="15" fill="rgb(220,148,13)" fg:x="108033" fg:w="14"/><text x="92.6680%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="92.4180%" y="213" width="0.0120%" height="15" fill="rgb(210,16,3)" fg:x="108033" fg:w="14"/><text x="92.6680%" y="223.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="92.4155%" y="277" width="0.0188%" height="15" fill="rgb(236,80,2)" fg:x="108030" fg:w="22"/><text x="92.6655%" y="287.50"></text></g><g><title>std::sync::poison::Flag::borrow (22 samples, 0.02%)</title><rect x="92.4155%" y="261" width="0.0188%" height="15" fill="rgb(239,129,19)" fg:x="108030" fg:w="22"/><text x="92.6655%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (161 samples, 0.14%)</title><rect x="92.4369%" y="245" width="0.1377%" height="15" fill="rgb(220,106,35)" fg:x="108055" fg:w="161"/><text x="92.6869%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (161 samples, 0.14%)</title><rect x="92.4369%" y="229" width="0.1377%" height="15" fill="rgb(252,139,45)" fg:x="108055" fg:w="161"/><text x="92.6869%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (18 samples, 0.02%)</title><rect x="92.5746%" y="229" width="0.0154%" height="15" fill="rgb(229,8,36)" fg:x="108216" fg:w="18"/><text x="92.8246%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="92.5746%" y="213" width="0.0154%" height="15" fill="rgb(230,126,33)" fg:x="108216" fg:w="18"/><text x="92.8246%" y="223.50"></text></g><g><title>core::hint::spin_loop (17 samples, 0.01%)</title><rect x="92.5943%" y="213" width="0.0145%" height="15" fill="rgb(239,140,21)" fg:x="108239" fg:w="17"/><text x="92.8443%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (17 samples, 0.01%)</title><rect x="92.5943%" y="197" width="0.0145%" height="15" fill="rgb(254,104,9)" fg:x="108239" fg:w="17"/><text x="92.8443%" y="207.50"></text></g><g><title>async_executor::Ticker::sleep (1,106 samples, 0.95%)</title><rect x="91.6755%" y="309" width="0.9461%" height="15" fill="rgb(239,52,14)" fg:x="107165" fg:w="1106"/><text x="91.9255%" y="319.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (241 samples, 0.21%)</title><rect x="92.4155%" y="293" width="0.2062%" height="15" fill="rgb(208,227,44)" fg:x="108030" fg:w="241"/><text x="92.6655%" y="303.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (219 samples, 0.19%)</title><rect x="92.4343%" y="277" width="0.1873%" height="15" fill="rgb(246,18,19)" fg:x="108052" fg:w="219"/><text x="92.6843%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (219 samples, 0.19%)</title><rect x="92.4343%" y="261" width="0.1873%" height="15" fill="rgb(235,228,25)" fg:x="108052" fg:w="219"/><text x="92.6843%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (55 samples, 0.05%)</title><rect x="92.5746%" y="245" width="0.0471%" height="15" fill="rgb(240,156,20)" fg:x="108216" fg:w="55"/><text x="92.8246%" y="255.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (32 samples, 0.03%)</title><rect x="92.5943%" y="229" width="0.0274%" height="15" fill="rgb(224,8,20)" fg:x="108239" fg:w="32"/><text x="92.8443%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (15 samples, 0.01%)</title><rect x="92.6088%" y="213" width="0.0128%" height="15" fill="rgb(214,12,52)" fg:x="108256" fg:w="15"/><text x="92.8588%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="92.6088%" y="197" width="0.0128%" height="15" fill="rgb(211,220,47)" fg:x="108256" fg:w="15"/><text x="92.8588%" y="207.50"></text></g><g><title>async_executor::Sleepers::remove (94 samples, 0.08%)</title><rect x="92.6302%" y="293" width="0.0804%" height="15" fill="rgb(250,173,5)" fg:x="108281" fg:w="94"/><text x="92.8802%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (44 samples, 0.04%)</title><rect x="92.6730%" y="277" width="0.0376%" height="15" fill="rgb(250,125,52)" fg:x="108331" fg:w="44"/><text x="92.9230%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (44 samples, 0.04%)</title><rect x="92.6730%" y="261" width="0.0376%" height="15" fill="rgb(209,133,18)" fg:x="108331" fg:w="44"/><text x="92.9230%" y="271.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="92.6730%" y="245" width="0.0376%" height="15" fill="rgb(216,173,22)" fg:x="108331" fg:w="44"/><text x="92.9230%" y="255.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (44 samples, 0.04%)</title><rect x="92.6730%" y="229" width="0.0376%" height="15" fill="rgb(205,3,22)" fg:x="108331" fg:w="44"/><text x="92.9230%" y="239.50"></text></g><g><title>core::mem::drop (44 samples, 0.04%)</title><rect x="92.6730%" y="213" width="0.0376%" height="15" fill="rgb(248,22,20)" fg:x="108331" fg:w="44"/><text x="92.9230%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (44 samples, 0.04%)</title><rect x="92.6730%" y="197" width="0.0376%" height="15" fill="rgb(233,6,29)" fg:x="108331" fg:w="44"/><text x="92.9230%" y="207.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="92.6730%" y="181" width="0.0376%" height="15" fill="rgb(240,22,54)" fg:x="108331" fg:w="44"/><text x="92.9230%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (44 samples, 0.04%)</title><rect x="92.6730%" y="165" width="0.0376%" height="15" fill="rgb(231,133,32)" fg:x="108331" fg:w="44"/><text x="92.9230%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_sub (44 samples, 0.04%)</title><rect x="92.6730%" y="149" width="0.0376%" height="15" fill="rgb(248,193,4)" fg:x="108331" fg:w="44"/><text x="92.9230%" y="159.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (32 samples, 0.03%)</title><rect x="92.7106%" y="229" width="0.0274%" height="15" fill="rgb(211,178,46)" fg:x="108375" fg:w="32"/><text x="92.9606%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_swap (32 samples, 0.03%)</title><rect x="92.7106%" y="213" width="0.0274%" height="15" fill="rgb(224,5,42)" fg:x="108375" fg:w="32"/><text x="92.9606%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (37 samples, 0.03%)</title><rect x="92.7106%" y="293" width="0.0317%" height="15" fill="rgb(239,176,25)" fg:x="108375" fg:w="37"/><text x="92.9606%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="92.7106%" y="277" width="0.0317%" height="15" fill="rgb(245,187,50)" fg:x="108375" fg:w="37"/><text x="92.9606%" y="287.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (37 samples, 0.03%)</title><rect x="92.7106%" y="261" width="0.0317%" height="15" fill="rgb(248,24,15)" fg:x="108375" fg:w="37"/><text x="92.9606%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (37 samples, 0.03%)</title><rect x="92.7106%" y="245" width="0.0317%" height="15" fill="rgb(205,166,13)" fg:x="108375" fg:w="37"/><text x="92.9606%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (47 samples, 0.04%)</title><rect x="92.7423%" y="293" width="0.0402%" height="15" fill="rgb(208,114,23)" fg:x="108412" fg:w="47"/><text x="92.9923%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (47 samples, 0.04%)</title><rect x="92.7423%" y="277" width="0.0402%" height="15" fill="rgb(239,127,18)" fg:x="108412" fg:w="47"/><text x="92.9923%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (70 samples, 0.06%)</title><rect x="92.7825%" y="293" width="0.0599%" height="15" fill="rgb(219,154,28)" fg:x="108459" fg:w="70"/><text x="93.0325%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (70 samples, 0.06%)</title><rect x="92.7825%" y="277" width="0.0599%" height="15" fill="rgb(225,157,23)" fg:x="108459" fg:w="70"/><text x="93.0325%" y="287.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="92.8424%" y="277" width="0.0103%" height="15" fill="rgb(219,8,6)" fg:x="108529" fg:w="12"/><text x="93.0924%" y="287.50"></text></g><g><title>std::sync::poison::Flag::borrow (12 samples, 0.01%)</title><rect x="92.8424%" y="261" width="0.0103%" height="15" fill="rgb(212,47,6)" fg:x="108529" fg:w="12"/><text x="93.0924%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (41 samples, 0.04%)</title><rect x="92.8543%" y="245" width="0.0351%" height="15" fill="rgb(224,190,4)" fg:x="108543" fg:w="41"/><text x="93.1043%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (41 samples, 0.04%)</title><rect x="92.8543%" y="229" width="0.0351%" height="15" fill="rgb(239,183,29)" fg:x="108543" fg:w="41"/><text x="93.1043%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (12 samples, 0.01%)</title><rect x="92.8903%" y="229" width="0.0103%" height="15" fill="rgb(213,57,7)" fg:x="108585" fg:w="12"/><text x="93.1403%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.01%)</title><rect x="92.8903%" y="213" width="0.0103%" height="15" fill="rgb(216,148,1)" fg:x="108585" fg:w="12"/><text x="93.1403%" y="223.50"></text></g><g><title>core::hint::spin_loop (13 samples, 0.01%)</title><rect x="92.9022%" y="213" width="0.0111%" height="15" fill="rgb(236,182,29)" fg:x="108599" fg:w="13"/><text x="93.1522%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (13 samples, 0.01%)</title><rect x="92.9022%" y="197" width="0.0111%" height="15" fill="rgb(244,120,48)" fg:x="108599" fg:w="13"/><text x="93.1522%" y="207.50"></text></g><g><title>async_executor::Ticker::wake (356 samples, 0.30%)</title><rect x="92.6216%" y="309" width="0.3045%" height="15" fill="rgb(206,71,34)" fg:x="108271" fg:w="356"/><text x="92.8716%" y="319.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (98 samples, 0.08%)</title><rect x="92.8424%" y="293" width="0.0838%" height="15" fill="rgb(242,32,6)" fg:x="108529" fg:w="98"/><text x="93.0924%" y="303.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (86 samples, 0.07%)</title><rect x="92.8526%" y="277" width="0.0736%" height="15" fill="rgb(241,35,3)" fg:x="108541" fg:w="86"/><text x="93.1026%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (86 samples, 0.07%)</title><rect x="92.8526%" y="261" width="0.0736%" height="15" fill="rgb(222,62,19)" fg:x="108541" fg:w="86"/><text x="93.1026%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (43 samples, 0.04%)</title><rect x="92.8894%" y="245" width="0.0368%" height="15" fill="rgb(223,110,41)" fg:x="108584" fg:w="43"/><text x="93.1394%" y="255.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (28 samples, 0.02%)</title><rect x="92.9022%" y="229" width="0.0240%" height="15" fill="rgb(208,224,4)" fg:x="108599" fg:w="28"/><text x="93.1522%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (15 samples, 0.01%)</title><rect x="92.9134%" y="213" width="0.0128%" height="15" fill="rgb(241,137,19)" fg:x="108612" fg:w="15"/><text x="93.1634%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="92.9134%" y="197" width="0.0128%" height="15" fill="rgb(244,24,17)" fg:x="108612" fg:w="15"/><text x="93.1634%" y="207.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,342 samples, 6.28%)</title><rect x="86.6480%" y="373" width="6.2808%" height="15" fill="rgb(245,178,49)" fg:x="101288" fg:w="7342"/><text x="86.8980%" y="383.50">&lt;core::f..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (7,342 samples, 6.28%)</title><rect x="86.6480%" y="357" width="6.2808%" height="15" fill="rgb(219,160,38)" fg:x="101288" fg:w="7342"/><text x="86.8980%" y="367.50">async_ex..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (7,318 samples, 6.26%)</title><rect x="86.6685%" y="341" width="6.2603%" height="15" fill="rgb(228,137,14)" fg:x="101312" fg:w="7318"/><text x="86.9185%" y="351.50">&lt;futures..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (7,312 samples, 6.26%)</title><rect x="86.6736%" y="325" width="6.2551%" height="15" fill="rgb(237,134,11)" fg:x="101318" fg:w="7312"/><text x="86.9236%" y="335.50">async_ex..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,413 samples, 6.34%)</title><rect x="86.6257%" y="405" width="6.3415%" height="15" fill="rgb(211,126,44)" fg:x="101262" fg:w="7413"/><text x="86.8757%" y="415.50">&lt;core::f..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (7,412 samples, 6.34%)</title><rect x="86.6266%" y="389" width="6.3407%" height="15" fill="rgb(226,171,33)" fg:x="101263" fg:w="7412"/><text x="86.8766%" y="399.50">async_ex..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (44 samples, 0.04%)</title><rect x="92.9296%" y="373" width="0.0376%" height="15" fill="rgb(253,99,13)" fg:x="108631" fg:w="44"/><text x="93.1796%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_add (44 samples, 0.04%)</title><rect x="92.9296%" y="357" width="0.0376%" height="15" fill="rgb(244,48,7)" fg:x="108631" fg:w="44"/><text x="93.1796%" y="367.50"></text></g><g><title>[libc-2.31.so] (40 samples, 0.03%)</title><rect x="93.0998%" y="261" width="0.0342%" height="15" fill="rgb(244,217,54)" fg:x="108830" fg:w="40"/><text x="93.3498%" y="271.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (145 samples, 0.12%)</title><rect x="93.3899%" y="197" width="0.1240%" height="15" fill="rgb(224,15,18)" fg:x="109169" fg:w="145"/><text x="93.6399%" y="207.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (144 samples, 0.12%)</title><rect x="93.3907%" y="181" width="0.1232%" height="15" fill="rgb(244,99,12)" fg:x="109170" fg:w="144"/><text x="93.6407%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (16 samples, 0.01%)</title><rect x="93.5002%" y="165" width="0.0137%" height="15" fill="rgb(233,226,8)" fg:x="109298" fg:w="16"/><text x="93.7502%" y="175.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (128 samples, 0.11%)</title><rect x="93.5182%" y="197" width="0.1095%" height="15" fill="rgb(229,211,3)" fg:x="109319" fg:w="128"/><text x="93.7682%" y="207.50"></text></g><g><title>[libc-2.31.so] (78 samples, 0.07%)</title><rect x="93.6285%" y="181" width="0.0667%" height="15" fill="rgb(216,140,21)" fg:x="109448" fg:w="78"/><text x="93.8785%" y="191.50"></text></g><g><title>[libc-2.31.so] (173 samples, 0.15%)</title><rect x="93.7081%" y="165" width="0.1480%" height="15" fill="rgb(234,122,30)" fg:x="109541" fg:w="173"/><text x="93.9581%" y="175.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (47 samples, 0.04%)</title><rect x="93.9219%" y="53" width="0.0402%" height="15" fill="rgb(236,25,46)" fg:x="109791" fg:w="47"/><text x="94.1719%" y="63.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (322 samples, 0.28%)</title><rect x="93.6953%" y="181" width="0.2755%" height="15" fill="rgb(217,52,54)" fg:x="109526" fg:w="322"/><text x="93.9453%" y="191.50"></text></g><g><title>alloc::alloc::exchange_malloc (134 samples, 0.11%)</title><rect x="93.8561%" y="165" width="0.1146%" height="15" fill="rgb(222,29,26)" fg:x="109714" fg:w="134"/><text x="94.1061%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (134 samples, 0.11%)</title><rect x="93.8561%" y="149" width="0.1146%" height="15" fill="rgb(216,177,29)" fg:x="109714" fg:w="134"/><text x="94.1061%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (134 samples, 0.11%)</title><rect x="93.8561%" y="133" width="0.1146%" height="15" fill="rgb(247,136,51)" fg:x="109714" fg:w="134"/><text x="94.1061%" y="143.50"></text></g><g><title>alloc::alloc::alloc (134 samples, 0.11%)</title><rect x="93.8561%" y="117" width="0.1146%" height="15" fill="rgb(231,47,47)" fg:x="109714" fg:w="134"/><text x="94.1061%" y="127.50"></text></g><g><title>__rg_alloc (134 samples, 0.11%)</title><rect x="93.8561%" y="101" width="0.1146%" height="15" fill="rgb(211,192,36)" fg:x="109714" fg:w="134"/><text x="94.1061%" y="111.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (134 samples, 0.11%)</title><rect x="93.8561%" y="85" width="0.1146%" height="15" fill="rgb(229,156,32)" fg:x="109714" fg:w="134"/><text x="94.1061%" y="95.50"></text></g><g><title>sn_rust_alloc (122 samples, 0.10%)</title><rect x="93.8663%" y="69" width="0.1044%" height="15" fill="rgb(248,213,20)" fg:x="109726" fg:w="122"/><text x="94.1163%" y="79.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (412 samples, 0.35%)</title><rect x="93.6277%" y="197" width="0.3525%" height="15" fill="rgb(217,64,7)" fg:x="109447" fg:w="412"/><text x="93.8777%" y="207.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="93.9964%" y="181" width="0.0274%" height="15" fill="rgb(232,142,8)" fg:x="109878" fg:w="32"/><text x="94.2464%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.01%)</title><rect x="94.0092%" y="165" width="0.0145%" height="15" fill="rgb(224,92,44)" fg:x="109893" fg:w="17"/><text x="94.2592%" y="175.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (340 samples, 0.29%)</title><rect x="93.9801%" y="197" width="0.2909%" height="15" fill="rgb(214,169,17)" fg:x="109859" fg:w="340"/><text x="94.2301%" y="207.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (289 samples, 0.25%)</title><rect x="94.0237%" y="181" width="0.2472%" height="15" fill="rgb(210,59,37)" fg:x="109910" fg:w="289"/><text x="94.2737%" y="191.50"></text></g><g><title>[libc-2.31.so] (844 samples, 0.72%)</title><rect x="94.2710%" y="197" width="0.7220%" height="15" fill="rgb(214,116,48)" fg:x="110199" fg:w="844"/><text x="94.5210%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (55 samples, 0.05%)</title><rect x="94.9930%" y="197" width="0.0471%" height="15" fill="rgb(244,191,6)" fg:x="111043" fg:w="55"/><text x="95.2430%" y="207.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.05%)</title><rect x="94.9930%" y="181" width="0.0471%" height="15" fill="rgb(241,50,52)" fg:x="111043" fg:w="55"/><text x="95.2430%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (48 samples, 0.04%)</title><rect x="94.9990%" y="165" width="0.0411%" height="15" fill="rgb(236,75,39)" fg:x="111050" fg:w="48"/><text x="95.2490%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (48 samples, 0.04%)</title><rect x="94.9990%" y="149" width="0.0411%" height="15" fill="rgb(236,99,0)" fg:x="111050" fg:w="48"/><text x="95.2490%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (48 samples, 0.04%)</title><rect x="94.9990%" y="133" width="0.0411%" height="15" fill="rgb(207,202,15)" fg:x="111050" fg:w="48"/><text x="95.2490%" y="143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.04%)</title><rect x="94.9990%" y="117" width="0.0411%" height="15" fill="rgb(233,207,14)" fg:x="111050" fg:w="48"/><text x="95.2490%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (48 samples, 0.04%)</title><rect x="94.9990%" y="101" width="0.0411%" height="15" fill="rgb(226,27,51)" fg:x="111050" fg:w="48"/><text x="95.2490%" y="111.50"></text></g><g><title>alloc::alloc::dealloc (48 samples, 0.04%)</title><rect x="94.9990%" y="85" width="0.0411%" height="15" fill="rgb(206,104,42)" fg:x="111050" fg:w="48"/><text x="95.2490%" y="95.50"></text></g><g><title>__rg_dealloc (48 samples, 0.04%)</title><rect x="94.9990%" y="69" width="0.0411%" height="15" fill="rgb(212,225,4)" fg:x="111050" fg:w="48"/><text x="95.2490%" y="79.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (48 samples, 0.04%)</title><rect x="94.9990%" y="53" width="0.0411%" height="15" fill="rgb(233,96,42)" fg:x="111050" fg:w="48"/><text x="95.2490%" y="63.50"></text></g><g><title>sn_rust_dealloc (41 samples, 0.04%)</title><rect x="95.0050%" y="37" width="0.0351%" height="15" fill="rgb(229,21,32)" fg:x="111057" fg:w="41"/><text x="95.2550%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="95.0400%" y="197" width="0.0120%" height="15" fill="rgb(226,216,24)" fg:x="111098" fg:w="14"/><text x="95.2900%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="95.0400%" y="181" width="0.0120%" height="15" fill="rgb(221,163,17)" fg:x="111098" fg:w="14"/><text x="95.2900%" y="191.50"></text></g><g><title>sn_rust_dealloc (35 samples, 0.03%)</title><rect x="95.0691%" y="85" width="0.0299%" height="15" fill="rgb(216,216,42)" fg:x="111132" fg:w="35"/><text x="95.3191%" y="95.50"></text></g><g><title>alloc::alloc::box_free (47 samples, 0.04%)</title><rect x="95.0606%" y="165" width="0.0402%" height="15" fill="rgb(240,118,7)" fg:x="111122" fg:w="47"/><text x="95.3106%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (47 samples, 0.04%)</title><rect x="95.0606%" y="149" width="0.0402%" height="15" fill="rgb(221,67,37)" fg:x="111122" fg:w="47"/><text x="95.3106%" y="159.50"></text></g><g><title>alloc::alloc::dealloc (42 samples, 0.04%)</title><rect x="95.0648%" y="133" width="0.0359%" height="15" fill="rgb(241,32,44)" fg:x="111127" fg:w="42"/><text x="95.3148%" y="143.50"></text></g><g><title>__rg_dealloc (42 samples, 0.04%)</title><rect x="95.0648%" y="117" width="0.0359%" height="15" fill="rgb(235,204,43)" fg:x="111127" fg:w="42"/><text x="95.3148%" y="127.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (42 samples, 0.04%)</title><rect x="95.0648%" y="101" width="0.0359%" height="15" fill="rgb(213,116,10)" fg:x="111127" fg:w="42"/><text x="95.3148%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (58 samples, 0.05%)</title><rect x="95.0520%" y="197" width="0.0496%" height="15" fill="rgb(239,15,48)" fg:x="111112" fg:w="58"/><text x="95.3020%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (58 samples, 0.05%)</title><rect x="95.0520%" y="181" width="0.0496%" height="15" fill="rgb(207,123,36)" fg:x="111112" fg:w="58"/><text x="95.3020%" y="191.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (39 samples, 0.03%)</title><rect x="95.1376%" y="181" width="0.0334%" height="15" fill="rgb(209,103,30)" fg:x="111212" fg:w="39"/><text x="95.3876%" y="191.50"></text></g><g><title>core::time::Duration::as_nanos (49 samples, 0.04%)</title><rect x="95.1709%" y="181" width="0.0419%" height="15" fill="rgb(238,100,19)" fg:x="111251" fg:w="49"/><text x="95.4209%" y="191.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (188 samples, 0.16%)</title><rect x="95.2128%" y="165" width="0.1608%" height="15" fill="rgb(244,30,14)" fg:x="111300" fg:w="188"/><text x="95.4628%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (71 samples, 0.06%)</title><rect x="95.4412%" y="133" width="0.0607%" height="15" fill="rgb(249,174,6)" fg:x="111567" fg:w="71"/><text x="95.6912%" y="143.50"></text></g><g><title>core::cmp::PartialOrd::ge (71 samples, 0.06%)</title><rect x="95.4412%" y="117" width="0.0607%" height="15" fill="rgb(235,213,41)" fg:x="111567" fg:w="71"/><text x="95.6912%" y="127.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (66 samples, 0.06%)</title><rect x="95.4455%" y="101" width="0.0565%" height="15" fill="rgb(213,118,6)" fg:x="111572" fg:w="66"/><text x="95.6955%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (33 samples, 0.03%)</title><rect x="95.4738%" y="85" width="0.0282%" height="15" fill="rgb(235,44,51)" fg:x="111605" fg:w="33"/><text x="95.7238%" y="95.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (33 samples, 0.03%)</title><rect x="95.4738%" y="69" width="0.0282%" height="15" fill="rgb(217,9,53)" fg:x="111605" fg:w="33"/><text x="95.7238%" y="79.50"></text></g><g><title>std::time::SystemTime::duration_since (375 samples, 0.32%)</title><rect x="95.2128%" y="181" width="0.3208%" height="15" fill="rgb(237,172,34)" fg:x="111300" fg:w="375"/><text x="95.4628%" y="191.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (187 samples, 0.16%)</title><rect x="95.3737%" y="165" width="0.1600%" height="15" fill="rgb(206,206,11)" fg:x="111488" fg:w="187"/><text x="95.6237%" y="175.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (187 samples, 0.16%)</title><rect x="95.3737%" y="149" width="0.1600%" height="15" fill="rgb(214,149,29)" fg:x="111488" fg:w="187"/><text x="95.6237%" y="159.50"></text></g><g><title>core::time::Duration::new (37 samples, 0.03%)</title><rect x="95.5020%" y="133" width="0.0317%" height="15" fill="rgb(208,123,3)" fg:x="111638" fg:w="37"/><text x="95.7520%" y="143.50"></text></g><g><title>tremor_common::time::nanotime (1,334 samples, 1.14%)</title><rect x="95.1016%" y="197" width="1.1412%" height="15" fill="rgb(229,126,4)" fg:x="111170" fg:w="1334"/><text x="95.3516%" y="207.50"></text></g><g><title>std::time::SystemTime::now (829 samples, 0.71%)</title><rect x="95.5336%" y="181" width="0.7092%" height="15" fill="rgb(222,92,36)" fg:x="111675" fg:w="829"/><text x="95.7836%" y="191.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (829 samples, 0.71%)</title><rect x="95.5336%" y="165" width="0.7092%" height="15" fill="rgb(216,39,41)" fg:x="111675" fg:w="829"/><text x="95.7836%" y="175.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (829 samples, 0.71%)</title><rect x="95.5336%" y="149" width="0.7092%" height="15" fill="rgb(253,127,28)" fg:x="111675" fg:w="829"/><text x="95.7836%" y="159.50"></text></g><g><title>__clock_gettime (658 samples, 0.56%)</title><rect x="95.6799%" y="133" width="0.5629%" height="15" fill="rgb(249,152,51)" fg:x="111846" fg:w="658"/><text x="95.9299%" y="143.50"></text></g><g><title>__vdso_clock_gettime (622 samples, 0.53%)</title><rect x="95.7107%" y="117" width="0.5321%" height="15" fill="rgb(209,123,42)" fg:x="111882" fg:w="622"/><text x="95.9607%" y="127.50"></text></g><g><title>[[vdso]] (542 samples, 0.46%)</title><rect x="95.7792%" y="101" width="0.4637%" height="15" fill="rgb(241,118,22)" fg:x="111962" fg:w="542"/><text x="96.0292%" y="111.50"></text></g><g><title>core::mem::drop (20 samples, 0.02%)</title><rect x="96.2574%" y="133" width="0.0171%" height="15" fill="rgb(208,25,7)" fg:x="112521" fg:w="20"/><text x="96.5074%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (20 samples, 0.02%)</title><rect x="96.2574%" y="117" width="0.0171%" height="15" fill="rgb(243,144,39)" fg:x="112521" fg:w="20"/><text x="96.5074%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="96.2599%" y="101" width="0.0145%" height="15" fill="rgb(250,50,5)" fg:x="112524" fg:w="17"/><text x="96.5099%" y="111.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (40 samples, 0.03%)</title><rect x="96.2428%" y="197" width="0.0342%" height="15" fill="rgb(207,67,11)" fg:x="112504" fg:w="40"/><text x="96.4928%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (34 samples, 0.03%)</title><rect x="96.2479%" y="181" width="0.0291%" height="15" fill="rgb(245,204,40)" fg:x="112510" fg:w="34"/><text x="96.4979%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (34 samples, 0.03%)</title><rect x="96.2479%" y="165" width="0.0291%" height="15" fill="rgb(238,228,24)" fg:x="112510" fg:w="34"/><text x="96.4979%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="96.2479%" y="149" width="0.0291%" height="15" fill="rgb(217,116,22)" fg:x="112510" fg:w="34"/><text x="96.4979%" y="159.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (3,676 samples, 3.14%)</title><rect x="93.1460%" y="213" width="3.1447%" height="15" fill="rgb(234,98,12)" fg:x="108884" fg:w="3676"/><text x="93.3960%" y="223.50">tre..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,682 samples, 3.15%)</title><rect x="93.1426%" y="245" width="3.1498%" height="15" fill="rgb(242,170,50)" fg:x="108880" fg:w="3682"/><text x="93.3926%" y="255.50">&lt;as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,682 samples, 3.15%)</title><rect x="93.1426%" y="229" width="3.1498%" height="15" fill="rgb(235,7,5)" fg:x="108880" fg:w="3682"/><text x="93.3926%" y="239.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,784 samples, 3.24%)</title><rect x="93.0579%" y="357" width="3.2371%" height="15" fill="rgb(241,114,28)" fg:x="108781" fg:w="3784"/><text x="93.3079%" y="367.50">&lt;co..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,781 samples, 3.23%)</title><rect x="93.0605%" y="341" width="3.2345%" height="15" fill="rgb(246,112,42)" fg:x="108784" fg:w="3781"/><text x="93.3105%" y="351.50">asy..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (3,743 samples, 3.20%)</title><rect x="93.0930%" y="325" width="3.2020%" height="15" fill="rgb(248,228,14)" fg:x="108822" fg:w="3743"/><text x="93.3430%" y="335.50">&lt;as..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,743 samples, 3.20%)</title><rect x="93.0930%" y="309" width="3.2020%" height="15" fill="rgb(208,133,18)" fg:x="108822" fg:w="3743"/><text x="93.3430%" y="319.50">asy..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,737 samples, 3.20%)</title><rect x="93.0981%" y="293" width="3.1969%" height="15" fill="rgb(207,35,49)" fg:x="108828" fg:w="3737"/><text x="93.3481%" y="303.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,737 samples, 3.20%)</title><rect x="93.0981%" y="277" width="3.1969%" height="15" fill="rgb(205,68,36)" fg:x="108828" fg:w="3737"/><text x="93.3481%" y="287.50">std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,686 samples, 3.15%)</title><rect x="93.1418%" y="261" width="3.1532%" height="15" fill="rgb(245,62,40)" fg:x="108879" fg:w="3686"/><text x="93.3918%" y="271.50">asy..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,787 samples, 3.24%)</title><rect x="93.0579%" y="373" width="3.2396%" height="15" fill="rgb(228,27,24)" fg:x="108781" fg:w="3787"/><text x="93.3079%" y="383.50">&lt;co..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (23 samples, 0.02%)</title><rect x="96.2976%" y="373" width="0.0197%" height="15" fill="rgb(253,19,12)" fg:x="112568" fg:w="23"/><text x="96.5476%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (22 samples, 0.02%)</title><rect x="96.2984%" y="357" width="0.0188%" height="15" fill="rgb(232,28,20)" fg:x="112569" fg:w="22"/><text x="96.5484%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (22 samples, 0.02%)</title><rect x="96.2984%" y="341" width="0.0188%" height="15" fill="rgb(218,35,51)" fg:x="112569" fg:w="22"/><text x="96.5484%" y="351.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (19 samples, 0.02%)</title><rect x="96.3172%" y="357" width="0.0163%" height="15" fill="rgb(212,90,40)" fg:x="112591" fg:w="19"/><text x="96.5672%" y="367.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (22 samples, 0.02%)</title><rect x="96.3172%" y="373" width="0.0188%" height="15" fill="rgb(220,172,12)" fg:x="112591" fg:w="22"/><text x="96.5672%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (260 samples, 0.22%)</title><rect x="96.3361%" y="373" width="0.2224%" height="15" fill="rgb(226,159,20)" fg:x="112613" fg:w="260"/><text x="96.5861%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (260 samples, 0.22%)</title><rect x="96.3361%" y="357" width="0.2224%" height="15" fill="rgb(234,205,16)" fg:x="112613" fg:w="260"/><text x="96.5861%" y="367.50"></text></g><g><title>async_task::runnable::Runnable::run (4,205 samples, 3.60%)</title><rect x="92.9673%" y="405" width="3.5972%" height="15" fill="rgb(207,9,39)" fg:x="108675" fg:w="4205"/><text x="93.2173%" y="415.50">asyn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,147 samples, 3.55%)</title><rect x="93.0169%" y="389" width="3.5476%" height="15" fill="rgb(249,143,15)" fg:x="108733" fg:w="4147"/><text x="93.2669%" y="399.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,641 samples, 9.96%)</title><rect x="86.6197%" y="453" width="9.9584%" height="15" fill="rgb(253,133,29)" fg:x="101255" fg:w="11641"/><text x="86.8697%" y="463.50">&lt;futures_lite:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,641 samples, 9.96%)</title><rect x="86.6197%" y="437" width="9.9584%" height="15" fill="rgb(221,187,0)" fg:x="101255" fg:w="11641"/><text x="86.8697%" y="447.50">&lt;core::future:..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (11,640 samples, 9.96%)</title><rect x="86.6206%" y="421" width="9.9576%" height="15" fill="rgb(205,204,26)" fg:x="101256" fg:w="11640"/><text x="86.8706%" y="431.50">async_executor..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (16 samples, 0.01%)</title><rect x="96.5645%" y="405" width="0.0137%" height="15" fill="rgb(224,68,54)" fg:x="112880" fg:w="16"/><text x="96.8145%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (16 samples, 0.01%)</title><rect x="96.5645%" y="389" width="0.0137%" height="15" fill="rgb(209,67,4)" fg:x="112880" fg:w="16"/><text x="96.8145%" y="399.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (11,662 samples, 9.98%)</title><rect x="86.6069%" y="469" width="9.9764%" height="15" fill="rgb(228,229,18)" fg:x="101240" fg:w="11662"/><text x="86.8569%" y="479.50">async_executor..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="96.6363%" y="261" width="0.0274%" height="15" fill="rgb(231,89,13)" fg:x="112964" fg:w="32"/><text x="96.8863%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (32 samples, 0.03%)</title><rect x="96.6363%" y="245" width="0.0274%" height="15" fill="rgb(210,182,18)" fg:x="112964" fg:w="32"/><text x="96.8863%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (32 samples, 0.03%)</title><rect x="96.6363%" y="229" width="0.0274%" height="15" fill="rgb(240,105,2)" fg:x="112964" fg:w="32"/><text x="96.8863%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.03%)</title><rect x="96.6372%" y="213" width="0.0265%" height="15" fill="rgb(207,170,50)" fg:x="112965" fg:w="31"/><text x="96.8872%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.03%)</title><rect x="96.6372%" y="197" width="0.0265%" height="15" fill="rgb(232,133,24)" fg:x="112965" fg:w="31"/><text x="96.8872%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (31 samples, 0.03%)</title><rect x="96.6372%" y="181" width="0.0265%" height="15" fill="rgb(235,166,27)" fg:x="112965" fg:w="31"/><text x="96.8872%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (25 samples, 0.02%)</title><rect x="96.6423%" y="165" width="0.0214%" height="15" fill="rgb(209,19,13)" fg:x="112971" fg:w="25"/><text x="96.8923%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (25 samples, 0.02%)</title><rect x="96.6423%" y="149" width="0.0214%" height="15" fill="rgb(226,79,39)" fg:x="112971" fg:w="25"/><text x="96.8923%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (23 samples, 0.02%)</title><rect x="96.6440%" y="133" width="0.0197%" height="15" fill="rgb(222,163,10)" fg:x="112973" fg:w="23"/><text x="96.8940%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (23 samples, 0.02%)</title><rect x="96.6440%" y="117" width="0.0197%" height="15" fill="rgb(214,44,19)" fg:x="112973" fg:w="23"/><text x="96.8940%" y="127.50"></text></g><g><title>concurrent_queue::full_fence (45 samples, 0.04%)</title><rect x="96.6868%" y="229" width="0.0385%" height="15" fill="rgb(210,217,13)" fg:x="113023" fg:w="45"/><text x="96.9368%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (44 samples, 0.04%)</title><rect x="96.6877%" y="213" width="0.0376%" height="15" fill="rgb(237,61,54)" fg:x="113024" fg:w="44"/><text x="96.9377%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (44 samples, 0.04%)</title><rect x="96.6877%" y="197" width="0.0376%" height="15" fill="rgb(226,184,24)" fg:x="113024" fg:w="44"/><text x="96.9377%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (44 samples, 0.04%)</title><rect x="96.6877%" y="181" width="0.0376%" height="15" fill="rgb(223,226,4)" fg:x="113024" fg:w="44"/><text x="96.9377%" y="191.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (100 samples, 0.09%)</title><rect x="96.6765%" y="245" width="0.0855%" height="15" fill="rgb(210,26,41)" fg:x="113011" fg:w="100"/><text x="96.9265%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (43 samples, 0.04%)</title><rect x="96.7253%" y="229" width="0.0368%" height="15" fill="rgb(220,221,6)" fg:x="113068" fg:w="43"/><text x="96.9753%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (43 samples, 0.04%)</title><rect x="96.7253%" y="213" width="0.0368%" height="15" fill="rgb(225,89,49)" fg:x="113068" fg:w="43"/><text x="96.9753%" y="223.50"></text></g><g><title>concurrent_queue::full_fence (42 samples, 0.04%)</title><rect x="96.7681%" y="229" width="0.0359%" height="15" fill="rgb(218,70,45)" fg:x="113118" fg:w="42"/><text x="97.0181%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (42 samples, 0.04%)</title><rect x="96.7681%" y="213" width="0.0359%" height="15" fill="rgb(238,166,21)" fg:x="113118" fg:w="42"/><text x="97.0181%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (42 samples, 0.04%)</title><rect x="96.7681%" y="197" width="0.0359%" height="15" fill="rgb(224,141,44)" fg:x="113118" fg:w="42"/><text x="97.0181%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (42 samples, 0.04%)</title><rect x="96.7681%" y="181" width="0.0359%" height="15" fill="rgb(230,12,49)" fg:x="113118" fg:w="42"/><text x="97.0181%" y="191.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (175 samples, 0.15%)</title><rect x="96.6637%" y="261" width="0.1497%" height="15" fill="rgb(212,174,12)" fg:x="112996" fg:w="175"/><text x="96.9137%" y="271.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (60 samples, 0.05%)</title><rect x="96.7621%" y="245" width="0.0513%" height="15" fill="rgb(246,67,9)" fg:x="113111" fg:w="60"/><text x="97.0121%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (38 samples, 0.03%)</title><rect x="96.8134%" y="261" width="0.0325%" height="15" fill="rgb(239,35,23)" fg:x="113171" fg:w="38"/><text x="97.0634%" y="271.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="96.8134%" y="245" width="0.0325%" height="15" fill="rgb(211,167,0)" fg:x="113171" fg:w="38"/><text x="97.0634%" y="255.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (36 samples, 0.03%)</title><rect x="96.8151%" y="229" width="0.0308%" height="15" fill="rgb(225,119,45)" fg:x="113173" fg:w="36"/><text x="97.0651%" y="239.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (36 samples, 0.03%)</title><rect x="96.8151%" y="213" width="0.0308%" height="15" fill="rgb(210,162,6)" fg:x="113173" fg:w="36"/><text x="97.0651%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (31 samples, 0.03%)</title><rect x="96.8194%" y="197" width="0.0265%" height="15" fill="rgb(208,118,35)" fg:x="113178" fg:w="31"/><text x="97.0694%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_sub (31 samples, 0.03%)</title><rect x="96.8194%" y="181" width="0.0265%" height="15" fill="rgb(239,4,53)" fg:x="113178" fg:w="31"/><text x="97.0694%" y="191.50"></text></g><g><title>fastrand::usize (20 samples, 0.02%)</title><rect x="96.8459%" y="261" width="0.0171%" height="15" fill="rgb(213,130,21)" fg:x="113209" fg:w="20"/><text x="97.0959%" y="271.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (20 samples, 0.02%)</title><rect x="96.8459%" y="245" width="0.0171%" height="15" fill="rgb(235,148,0)" fg:x="113209" fg:w="20"/><text x="97.0959%" y="255.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.02%)</title><rect x="96.8459%" y="229" width="0.0171%" height="15" fill="rgb(244,224,18)" fg:x="113209" fg:w="20"/><text x="97.0959%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (32 samples, 0.03%)</title><rect x="96.8656%" y="213" width="0.0274%" height="15" fill="rgb(211,214,4)" fg:x="113232" fg:w="32"/><text x="97.1156%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (32 samples, 0.03%)</title><rect x="96.8656%" y="197" width="0.0274%" height="15" fill="rgb(206,119,25)" fg:x="113232" fg:w="32"/><text x="97.1156%" y="207.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (311 samples, 0.27%)</title><rect x="96.6286%" y="277" width="0.2660%" height="15" fill="rgb(243,93,47)" fg:x="112955" fg:w="311"/><text x="96.8786%" y="287.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (37 samples, 0.03%)</title><rect x="96.8630%" y="261" width="0.0317%" height="15" fill="rgb(224,194,6)" fg:x="113229" fg:w="37"/><text x="97.1130%" y="271.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (34 samples, 0.03%)</title><rect x="96.8656%" y="245" width="0.0291%" height="15" fill="rgb(243,229,6)" fg:x="113232" fg:w="34"/><text x="97.1156%" y="255.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (34 samples, 0.03%)</title><rect x="96.8656%" y="229" width="0.0291%" height="15" fill="rgb(207,23,50)" fg:x="113232" fg:w="34"/><text x="97.1156%" y="239.50"></text></g><g><title>async_executor::Sleepers::insert (12 samples, 0.01%)</title><rect x="96.8981%" y="261" width="0.0103%" height="15" fill="rgb(253,192,32)" fg:x="113270" fg:w="12"/><text x="97.1481%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.01%)</title><rect x="96.8981%" y="245" width="0.0103%" height="15" fill="rgb(213,21,6)" fg:x="113270" fg:w="12"/><text x="97.1481%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.01%)</title><rect x="96.8981%" y="229" width="0.0103%" height="15" fill="rgb(243,151,13)" fg:x="113270" fg:w="12"/><text x="97.1481%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.01%)</title><rect x="96.8981%" y="213" width="0.0103%" height="15" fill="rgb(233,165,41)" fg:x="113270" fg:w="12"/><text x="97.1481%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.01%)</title><rect x="96.8981%" y="197" width="0.0103%" height="15" fill="rgb(246,176,45)" fg:x="113270" fg:w="12"/><text x="97.1481%" y="207.50"></text></g><g><title>sn_rust_alloc (12 samples, 0.01%)</title><rect x="96.8981%" y="181" width="0.0103%" height="15" fill="rgb(217,170,52)" fg:x="113270" fg:w="12"/><text x="97.1481%" y="191.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc_slow&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="96.8981%" y="165" width="0.0103%" height="15" fill="rgb(214,203,54)" fg:x="113270" fg:w="12"/><text x="97.1481%" y="175.50"></text></g><g><title>async_executor::Sleepers::update (19 samples, 0.02%)</title><rect x="96.9084%" y="261" width="0.0163%" height="15" fill="rgb(248,215,49)" fg:x="113282" fg:w="19"/><text x="97.1584%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (36 samples, 0.03%)</title><rect x="96.9246%" y="261" width="0.0308%" height="15" fill="rgb(208,46,10)" fg:x="113301" fg:w="36"/><text x="97.1746%" y="271.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="96.9246%" y="245" width="0.0308%" height="15" fill="rgb(254,5,31)" fg:x="113301" fg:w="36"/><text x="97.1746%" y="255.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (28 samples, 0.02%)</title><rect x="96.9315%" y="229" width="0.0240%" height="15" fill="rgb(222,104,33)" fg:x="113309" fg:w="28"/><text x="97.1815%" y="239.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (28 samples, 0.02%)</title><rect x="96.9315%" y="213" width="0.0240%" height="15" fill="rgb(248,49,16)" fg:x="113309" fg:w="28"/><text x="97.1815%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (28 samples, 0.02%)</title><rect x="96.9315%" y="197" width="0.0240%" height="15" fill="rgb(232,198,41)" fg:x="113309" fg:w="28"/><text x="97.1815%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_swap (28 samples, 0.02%)</title><rect x="96.9315%" y="181" width="0.0240%" height="15" fill="rgb(214,125,3)" fg:x="113309" fg:w="28"/><text x="97.1815%" y="191.50"></text></g><g><title>async_executor::Ticker::sleep (104 samples, 0.09%)</title><rect x="96.8947%" y="277" width="0.0890%" height="15" fill="rgb(229,220,28)" fg:x="113266" fg:w="104"/><text x="97.1447%" y="287.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (33 samples, 0.03%)</title><rect x="96.9554%" y="261" width="0.0282%" height="15" fill="rgb(222,64,37)" fg:x="113337" fg:w="33"/><text x="97.2054%" y="271.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (30 samples, 0.03%)</title><rect x="96.9580%" y="245" width="0.0257%" height="15" fill="rgb(249,184,13)" fg:x="113340" fg:w="30"/><text x="97.2080%" y="255.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (30 samples, 0.03%)</title><rect x="96.9580%" y="229" width="0.0257%" height="15" fill="rgb(252,176,6)" fg:x="113340" fg:w="30"/><text x="97.2080%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (30 samples, 0.03%)</title><rect x="96.9580%" y="213" width="0.0257%" height="15" fill="rgb(228,153,7)" fg:x="113340" fg:w="30"/><text x="97.2080%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (30 samples, 0.03%)</title><rect x="96.9580%" y="197" width="0.0257%" height="15" fill="rgb(242,193,5)" fg:x="113340" fg:w="30"/><text x="97.2080%" y="207.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (440 samples, 0.38%)</title><rect x="96.6124%" y="389" width="0.3764%" height="15" fill="rgb(232,140,9)" fg:x="112936" fg:w="440"/><text x="96.8624%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (435 samples, 0.37%)</title><rect x="96.6167%" y="373" width="0.3721%" height="15" fill="rgb(213,222,16)" fg:x="112941" fg:w="435"/><text x="96.8667%" y="383.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (434 samples, 0.37%)</title><rect x="96.6175%" y="357" width="0.3713%" height="15" fill="rgb(222,75,50)" fg:x="112942" fg:w="434"/><text x="96.8675%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (434 samples, 0.37%)</title><rect x="96.6175%" y="341" width="0.3713%" height="15" fill="rgb(205,180,2)" fg:x="112942" fg:w="434"/><text x="96.8675%" y="351.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (434 samples, 0.37%)</title><rect x="96.6175%" y="325" width="0.3713%" height="15" fill="rgb(216,34,7)" fg:x="112942" fg:w="434"/><text x="96.8675%" y="335.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (423 samples, 0.36%)</title><rect x="96.6269%" y="309" width="0.3619%" height="15" fill="rgb(253,16,32)" fg:x="112953" fg:w="423"/><text x="96.8769%" y="319.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (423 samples, 0.36%)</title><rect x="96.6269%" y="293" width="0.3619%" height="15" fill="rgb(208,97,28)" fg:x="112953" fg:w="423"/><text x="96.8769%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (26 samples, 0.02%)</title><rect x="97.0315%" y="325" width="0.0222%" height="15" fill="rgb(225,92,11)" fg:x="113426" fg:w="26"/><text x="97.2815%" y="335.50"></text></g><g><title>core::mem::replace (26 samples, 0.02%)</title><rect x="97.0315%" y="309" width="0.0222%" height="15" fill="rgb(243,38,12)" fg:x="113426" fg:w="26"/><text x="97.2815%" y="319.50"></text></g><g><title>core::ptr::read (25 samples, 0.02%)</title><rect x="97.0324%" y="293" width="0.0214%" height="15" fill="rgb(208,139,16)" fg:x="113427" fg:w="25"/><text x="97.2824%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (40 samples, 0.03%)</title><rect x="97.0239%" y="341" width="0.0342%" height="15" fill="rgb(227,24,9)" fg:x="113417" fg:w="40"/><text x="97.2739%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (43 samples, 0.04%)</title><rect x="97.0581%" y="341" width="0.0368%" height="15" fill="rgb(206,62,11)" fg:x="113457" fg:w="43"/><text x="97.3081%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (40 samples, 0.03%)</title><rect x="97.0606%" y="325" width="0.0342%" height="15" fill="rgb(228,134,27)" fg:x="113460" fg:w="40"/><text x="97.3106%" y="335.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.03%)</title><rect x="97.0606%" y="309" width="0.0342%" height="15" fill="rgb(205,55,33)" fg:x="113460" fg:w="40"/><text x="97.3106%" y="319.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (32 samples, 0.03%)</title><rect x="97.0675%" y="293" width="0.0274%" height="15" fill="rgb(243,75,43)" fg:x="113468" fg:w="32"/><text x="97.3175%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (32 samples, 0.03%)</title><rect x="97.0675%" y="277" width="0.0274%" height="15" fill="rgb(223,27,42)" fg:x="113468" fg:w="32"/><text x="97.3175%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (32 samples, 0.03%)</title><rect x="97.0675%" y="261" width="0.0274%" height="15" fill="rgb(232,189,33)" fg:x="113468" fg:w="32"/><text x="97.3175%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_swap (32 samples, 0.03%)</title><rect x="97.0675%" y="245" width="0.0274%" height="15" fill="rgb(210,9,39)" fg:x="113468" fg:w="32"/><text x="97.3175%" y="255.50"></text></g><g><title>core::task::wake::Waker::will_wake (13 samples, 0.01%)</title><rect x="97.0949%" y="341" width="0.0111%" height="15" fill="rgb(242,85,26)" fg:x="113500" fg:w="13"/><text x="97.3449%" y="351.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (13 samples, 0.01%)</title><rect x="97.0949%" y="325" width="0.0111%" height="15" fill="rgb(248,44,4)" fg:x="113500" fg:w="13"/><text x="97.3449%" y="335.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (155 samples, 0.13%)</title><rect x="97.0093%" y="357" width="0.1326%" height="15" fill="rgb(250,96,46)" fg:x="113400" fg:w="155"/><text x="97.2593%" y="367.50"></text></g><g><title>event_listener::Inner::lock (42 samples, 0.04%)</title><rect x="97.1060%" y="341" width="0.0359%" height="15" fill="rgb(229,116,26)" fg:x="113513" fg:w="42"/><text x="97.3560%" y="351.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (41 samples, 0.04%)</title><rect x="97.1068%" y="325" width="0.0351%" height="15" fill="rgb(246,94,34)" fg:x="113514" fg:w="41"/><text x="97.3568%" y="335.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (39 samples, 0.03%)</title><rect x="97.1085%" y="309" width="0.0334%" height="15" fill="rgb(251,73,21)" fg:x="113516" fg:w="39"/><text x="97.3585%" y="319.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (39 samples, 0.03%)</title><rect x="97.1085%" y="293" width="0.0334%" height="15" fill="rgb(254,121,25)" fg:x="113516" fg:w="39"/><text x="97.3585%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (39 samples, 0.03%)</title><rect x="97.1085%" y="277" width="0.0334%" height="15" fill="rgb(215,161,49)" fg:x="113516" fg:w="39"/><text x="97.3585%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (39 samples, 0.03%)</title><rect x="97.1085%" y="261" width="0.0334%" height="15" fill="rgb(221,43,13)" fg:x="113516" fg:w="39"/><text x="97.3585%" y="271.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (716 samples, 0.61%)</title><rect x="96.6107%" y="421" width="0.6125%" height="15" fill="rgb(249,5,37)" fg:x="112934" fg:w="716"/><text x="96.8607%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (715 samples, 0.61%)</title><rect x="96.6115%" y="405" width="0.6117%" height="15" fill="rgb(226,25,44)" fg:x="112935" fg:w="715"/><text x="96.8615%" y="415.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (274 samples, 0.23%)</title><rect x="96.9888%" y="389" width="0.2344%" height="15" fill="rgb(238,189,16)" fg:x="113376" fg:w="274"/><text x="97.2388%" y="399.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (261 samples, 0.22%)</title><rect x="96.9999%" y="373" width="0.2233%" height="15" fill="rgb(251,186,8)" fg:x="113389" fg:w="261"/><text x="97.2499%" y="383.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (95 samples, 0.08%)</title><rect x="97.1419%" y="357" width="0.0813%" height="15" fill="rgb(254,34,31)" fg:x="113555" fg:w="95"/><text x="97.3919%" y="367.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (95 samples, 0.08%)</title><rect x="97.1419%" y="341" width="0.0813%" height="15" fill="rgb(225,215,27)" fg:x="113555" fg:w="95"/><text x="97.3919%" y="351.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (60 samples, 0.05%)</title><rect x="97.1718%" y="325" width="0.0513%" height="15" fill="rgb(221,192,48)" fg:x="113590" fg:w="60"/><text x="97.4218%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (60 samples, 0.05%)</title><rect x="97.1718%" y="309" width="0.0513%" height="15" fill="rgb(219,137,20)" fg:x="113590" fg:w="60"/><text x="97.4218%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (60 samples, 0.05%)</title><rect x="97.1718%" y="293" width="0.0513%" height="15" fill="rgb(219,84,11)" fg:x="113590" fg:w="60"/><text x="97.4218%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (60 samples, 0.05%)</title><rect x="97.1718%" y="277" width="0.0513%" height="15" fill="rgb(224,10,23)" fg:x="113590" fg:w="60"/><text x="97.4218%" y="287.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (24 samples, 0.02%)</title><rect x="97.2326%" y="405" width="0.0205%" height="15" fill="rgb(248,22,39)" fg:x="113661" fg:w="24"/><text x="97.4826%" y="415.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (17 samples, 0.01%)</title><rect x="97.2386%" y="389" width="0.0145%" height="15" fill="rgb(212,154,20)" fg:x="113668" fg:w="17"/><text x="97.4886%" y="399.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (12,485 samples, 10.68%)</title><rect x="86.5735%" y="501" width="10.6804%" height="15" fill="rgb(236,199,50)" fg:x="101201" fg:w="12485"/><text x="86.8235%" y="511.50">&lt;futures_lite::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,452 samples, 10.65%)</title><rect x="86.6018%" y="485" width="10.6522%" height="15" fill="rgb(211,9,17)" fg:x="101234" fg:w="12452"/><text x="86.8518%" y="495.50">&lt;core::future::f..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (784 samples, 0.67%)</title><rect x="96.5833%" y="469" width="0.6707%" height="15" fill="rgb(243,216,36)" fg:x="112902" fg:w="784"/><text x="96.8333%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (756 samples, 0.65%)</title><rect x="96.6072%" y="453" width="0.6467%" height="15" fill="rgb(250,2,10)" fg:x="112930" fg:w="756"/><text x="96.8572%" y="463.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (756 samples, 0.65%)</title><rect x="96.6072%" y="437" width="0.6467%" height="15" fill="rgb(226,50,48)" fg:x="112930" fg:w="756"/><text x="96.8572%" y="447.50"></text></g><g><title>async_executor::Runner::new (25 samples, 0.02%)</title><rect x="97.2326%" y="421" width="0.0214%" height="15" fill="rgb(243,81,16)" fg:x="113661" fg:w="25"/><text x="97.4826%" y="431.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (55 samples, 0.05%)</title><rect x="97.2728%" y="501" width="0.0471%" height="15" fill="rgb(250,14,2)" fg:x="113708" fg:w="55"/><text x="97.5228%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (54 samples, 0.05%)</title><rect x="97.2736%" y="485" width="0.0462%" height="15" fill="rgb(233,135,29)" fg:x="113709" fg:w="54"/><text x="97.5236%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (47 samples, 0.04%)</title><rect x="97.2796%" y="469" width="0.0402%" height="15" fill="rgb(224,64,43)" fg:x="113716" fg:w="47"/><text x="97.5296%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::try_lock (47 samples, 0.04%)</title><rect x="97.2796%" y="453" width="0.0402%" height="15" fill="rgb(238,84,13)" fg:x="113716" fg:w="47"/><text x="97.5296%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (47 samples, 0.04%)</title><rect x="97.2796%" y="437" width="0.0402%" height="15" fill="rgb(253,48,26)" fg:x="113716" fg:w="47"/><text x="97.5296%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (47 samples, 0.04%)</title><rect x="97.2796%" y="421" width="0.0402%" height="15" fill="rgb(205,223,31)" fg:x="113716" fg:w="47"/><text x="97.5296%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::ne (22 samples, 0.02%)</title><rect x="97.3446%" y="485" width="0.0188%" height="15" fill="rgb(221,41,32)" fg:x="113792" fg:w="22"/><text x="97.5946%" y="495.50"></text></g><g><title>sn_rust_dealloc (34 samples, 0.03%)</title><rect x="97.3857%" y="325" width="0.0291%" height="15" fill="rgb(213,158,31)" fg:x="113840" fg:w="34"/><text x="97.6357%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (45 samples, 0.04%)</title><rect x="97.3814%" y="389" width="0.0385%" height="15" fill="rgb(245,126,43)" fg:x="113835" fg:w="45"/><text x="97.6314%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (42 samples, 0.04%)</title><rect x="97.3840%" y="373" width="0.0359%" height="15" fill="rgb(227,7,22)" fg:x="113838" fg:w="42"/><text x="97.6340%" y="383.50"></text></g><g><title>__rg_dealloc (42 samples, 0.04%)</title><rect x="97.3840%" y="357" width="0.0359%" height="15" fill="rgb(252,90,44)" fg:x="113838" fg:w="42"/><text x="97.6340%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (42 samples, 0.04%)</title><rect x="97.3840%" y="341" width="0.0359%" height="15" fill="rgb(253,91,0)" fg:x="113838" fg:w="42"/><text x="97.6340%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (48 samples, 0.04%)</title><rect x="97.3797%" y="421" width="0.0411%" height="15" fill="rgb(252,175,49)" fg:x="113833" fg:w="48"/><text x="97.6297%" y="431.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (46 samples, 0.04%)</title><rect x="97.3814%" y="405" width="0.0394%" height="15" fill="rgb(246,150,1)" fg:x="113835" fg:w="46"/><text x="97.6314%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.05%)</title><rect x="97.3772%" y="469" width="0.0453%" height="15" fill="rgb(241,192,25)" fg:x="113830" fg:w="53"/><text x="97.6272%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (52 samples, 0.04%)</title><rect x="97.3780%" y="453" width="0.0445%" height="15" fill="rgb(239,187,11)" fg:x="113831" fg:w="52"/><text x="97.6280%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (50 samples, 0.04%)</title><rect x="97.3797%" y="437" width="0.0428%" height="15" fill="rgb(218,202,51)" fg:x="113833" fg:w="50"/><text x="97.6297%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (13 samples, 0.01%)</title><rect x="97.4225%" y="421" width="0.0111%" height="15" fill="rgb(225,176,8)" fg:x="113883" fg:w="13"/><text x="97.6725%" y="431.50"></text></g><g><title>alloc::collections::btree::mem::replace (13 samples, 0.01%)</title><rect x="97.4225%" y="405" width="0.0111%" height="15" fill="rgb(219,122,41)" fg:x="113883" fg:w="13"/><text x="97.6725%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="97.4225%" y="469" width="0.0145%" height="15" fill="rgb(248,140,20)" fg:x="113883" fg:w="17"/><text x="97.6725%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="97.4225%" y="453" width="0.0145%" height="15" fill="rgb(245,41,37)" fg:x="113883" fg:w="17"/><text x="97.6725%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (17 samples, 0.01%)</title><rect x="97.4225%" y="437" width="0.0145%" height="15" fill="rgb(235,82,39)" fg:x="113883" fg:w="17"/><text x="97.6725%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (41 samples, 0.04%)</title><rect x="97.4593%" y="437" width="0.0351%" height="15" fill="rgb(230,108,42)" fg:x="113926" fg:w="41"/><text x="97.7093%" y="447.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (35 samples, 0.03%)</title><rect x="97.4644%" y="421" width="0.0299%" height="15" fill="rgb(215,150,50)" fg:x="113932" fg:w="35"/><text x="97.7144%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (35 samples, 0.03%)</title><rect x="97.4644%" y="405" width="0.0299%" height="15" fill="rgb(233,212,5)" fg:x="113932" fg:w="35"/><text x="97.7144%" y="415.50"></text></g><g><title>[libc-2.31.so] (35 samples, 0.03%)</title><rect x="97.4644%" y="389" width="0.0299%" height="15" fill="rgb(245,80,22)" fg:x="113932" fg:w="35"/><text x="97.7144%" y="399.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (14 samples, 0.01%)</title><rect x="97.5063%" y="405" width="0.0120%" height="15" fill="rgb(238,129,16)" fg:x="113981" fg:w="14"/><text x="97.7563%" y="415.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (30 samples, 0.03%)</title><rect x="97.4986%" y="437" width="0.0257%" height="15" fill="rgb(240,19,0)" fg:x="113972" fg:w="30"/><text x="97.7486%" y="447.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (30 samples, 0.03%)</title><rect x="97.4986%" y="421" width="0.0257%" height="15" fill="rgb(232,42,35)" fg:x="113972" fg:w="30"/><text x="97.7486%" y="431.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (37 samples, 0.03%)</title><rect x="97.5944%" y="229" width="0.0317%" height="15" fill="rgb(223,130,24)" fg:x="114084" fg:w="37"/><text x="97.8444%" y="239.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (120 samples, 0.10%)</title><rect x="97.5243%" y="373" width="0.1027%" height="15" fill="rgb(237,16,22)" fg:x="114002" fg:w="120"/><text x="97.7743%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (120 samples, 0.10%)</title><rect x="97.5243%" y="357" width="0.1027%" height="15" fill="rgb(248,192,20)" fg:x="114002" fg:w="120"/><text x="97.7743%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (120 samples, 0.10%)</title><rect x="97.5243%" y="341" width="0.1027%" height="15" fill="rgb(233,167,2)" fg:x="114002" fg:w="120"/><text x="97.7743%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (120 samples, 0.10%)</title><rect x="97.5243%" y="325" width="0.1027%" height="15" fill="rgb(252,71,44)" fg:x="114002" fg:w="120"/><text x="97.7743%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (120 samples, 0.10%)</title><rect x="97.5243%" y="309" width="0.1027%" height="15" fill="rgb(238,37,47)" fg:x="114002" fg:w="120"/><text x="97.7743%" y="319.50"></text></g><g><title>alloc::alloc::alloc (118 samples, 0.10%)</title><rect x="97.5260%" y="293" width="0.1009%" height="15" fill="rgb(214,202,54)" fg:x="114004" fg:w="118"/><text x="97.7760%" y="303.50"></text></g><g><title>__rg_alloc (118 samples, 0.10%)</title><rect x="97.5260%" y="277" width="0.1009%" height="15" fill="rgb(254,165,40)" fg:x="114004" fg:w="118"/><text x="97.7760%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (118 samples, 0.10%)</title><rect x="97.5260%" y="261" width="0.1009%" height="15" fill="rgb(246,173,38)" fg:x="114004" fg:w="118"/><text x="97.7760%" y="271.50"></text></g><g><title>sn_rust_alloc (116 samples, 0.10%)</title><rect x="97.5277%" y="245" width="0.0992%" height="15" fill="rgb(215,3,27)" fg:x="114006" fg:w="116"/><text x="97.7777%" y="255.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (121 samples, 0.10%)</title><rect x="97.5243%" y="421" width="0.1035%" height="15" fill="rgb(239,169,51)" fg:x="114002" fg:w="121"/><text x="97.7743%" y="431.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (121 samples, 0.10%)</title><rect x="97.5243%" y="405" width="0.1035%" height="15" fill="rgb(212,5,25)" fg:x="114002" fg:w="121"/><text x="97.7743%" y="415.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (121 samples, 0.10%)</title><rect x="97.5243%" y="389" width="0.1035%" height="15" fill="rgb(243,45,17)" fg:x="114002" fg:w="121"/><text x="97.7743%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (216 samples, 0.18%)</title><rect x="97.4439%" y="469" width="0.1848%" height="15" fill="rgb(242,97,9)" fg:x="113908" fg:w="216"/><text x="97.6939%" y="479.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (205 samples, 0.18%)</title><rect x="97.4533%" y="453" width="0.1754%" height="15" fill="rgb(228,71,31)" fg:x="113919" fg:w="205"/><text x="97.7033%" y="463.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (122 samples, 0.10%)</title><rect x="97.5243%" y="437" width="0.1044%" height="15" fill="rgb(252,184,16)" fg:x="114002" fg:w="122"/><text x="97.7743%" y="447.50"></text></g><g><title>concurrent_queue::full_fence (37 samples, 0.03%)</title><rect x="97.6560%" y="421" width="0.0317%" height="15" fill="rgb(236,169,46)" fg:x="114156" fg:w="37"/><text x="97.9060%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (36 samples, 0.03%)</title><rect x="97.6569%" y="405" width="0.0308%" height="15" fill="rgb(207,17,47)" fg:x="114157" fg:w="36"/><text x="97.9069%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (36 samples, 0.03%)</title><rect x="97.6569%" y="389" width="0.0308%" height="15" fill="rgb(206,201,28)" fg:x="114157" fg:w="36"/><text x="97.9069%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (36 samples, 0.03%)</title><rect x="97.6569%" y="373" width="0.0308%" height="15" fill="rgb(224,184,23)" fg:x="114157" fg:w="36"/><text x="97.9069%" y="383.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (75 samples, 0.06%)</title><rect x="97.6287%" y="469" width="0.0642%" height="15" fill="rgb(208,139,48)" fg:x="114124" fg:w="75"/><text x="97.8787%" y="479.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (58 samples, 0.05%)</title><rect x="97.6432%" y="453" width="0.0496%" height="15" fill="rgb(208,130,10)" fg:x="114141" fg:w="58"/><text x="97.8932%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (57 samples, 0.05%)</title><rect x="97.6441%" y="437" width="0.0488%" height="15" fill="rgb(211,213,45)" fg:x="114142" fg:w="57"/><text x="97.8941%" y="447.50"></text></g><g><title>core::mem::drop (111 samples, 0.09%)</title><rect x="97.6928%" y="469" width="0.0950%" height="15" fill="rgb(235,100,30)" fg:x="114199" fg:w="111"/><text x="97.9428%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (111 samples, 0.09%)</title><rect x="97.6928%" y="453" width="0.0950%" height="15" fill="rgb(206,144,31)" fg:x="114199" fg:w="111"/><text x="97.9428%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.09%)</title><rect x="97.6928%" y="437" width="0.0950%" height="15" fill="rgb(224,200,26)" fg:x="114199" fg:w="111"/><text x="97.9428%" y="447.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (108 samples, 0.09%)</title><rect x="97.6954%" y="421" width="0.0924%" height="15" fill="rgb(247,104,53)" fg:x="114202" fg:w="108"/><text x="97.9454%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (108 samples, 0.09%)</title><rect x="97.6954%" y="405" width="0.0924%" height="15" fill="rgb(220,14,17)" fg:x="114202" fg:w="108"/><text x="97.9454%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (108 samples, 0.09%)</title><rect x="97.6954%" y="389" width="0.0924%" height="15" fill="rgb(230,140,40)" fg:x="114202" fg:w="108"/><text x="97.9454%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (108 samples, 0.09%)</title><rect x="97.6954%" y="373" width="0.0924%" height="15" fill="rgb(229,2,41)" fg:x="114202" fg:w="108"/><text x="97.9454%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.02%)</title><rect x="97.7886%" y="469" width="0.0188%" height="15" fill="rgb(232,89,16)" fg:x="114311" fg:w="22"/><text x="98.0386%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::process_timers::{{closure}} (15 samples, 0.01%)</title><rect x="97.7946%" y="453" width="0.0128%" height="15" fill="rgb(247,59,52)" fg:x="114318" fg:w="15"/><text x="98.0446%" y="463.50"></text></g><g><title>std::time::Instant::duration_since (15 samples, 0.01%)</title><rect x="97.7946%" y="437" width="0.0128%" height="15" fill="rgb(226,110,21)" fg:x="114318" fg:w="15"/><text x="98.0446%" y="447.50"></text></g><g><title>std::time::Instant::checked_duration_since (15 samples, 0.01%)</title><rect x="97.7946%" y="421" width="0.0128%" height="15" fill="rgb(224,176,43)" fg:x="114318" fg:w="15"/><text x="98.0446%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (15 samples, 0.01%)</title><rect x="97.7946%" y="405" width="0.0128%" height="15" fill="rgb(221,73,6)" fg:x="114318" fg:w="15"/><text x="98.0446%" y="415.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (12 samples, 0.01%)</title><rect x="97.7972%" y="389" width="0.0103%" height="15" fill="rgb(232,78,19)" fg:x="114321" fg:w="12"/><text x="98.0472%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (80 samples, 0.07%)</title><rect x="97.8160%" y="469" width="0.0684%" height="15" fill="rgb(233,112,48)" fg:x="114343" fg:w="80"/><text x="98.0660%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (80 samples, 0.07%)</title><rect x="97.8160%" y="453" width="0.0684%" height="15" fill="rgb(243,131,47)" fg:x="114343" fg:w="80"/><text x="98.0660%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (80 samples, 0.07%)</title><rect x="97.8160%" y="437" width="0.0684%" height="15" fill="rgb(226,51,1)" fg:x="114343" fg:w="80"/><text x="98.0660%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (80 samples, 0.07%)</title><rect x="97.8160%" y="421" width="0.0684%" height="15" fill="rgb(247,58,7)" fg:x="114343" fg:w="80"/><text x="98.0660%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (80 samples, 0.07%)</title><rect x="97.8160%" y="405" width="0.0684%" height="15" fill="rgb(209,7,32)" fg:x="114343" fg:w="80"/><text x="98.0660%" y="415.50"></text></g><g><title>__clock_gettime (94 samples, 0.08%)</title><rect x="97.8853%" y="421" width="0.0804%" height="15" fill="rgb(209,39,41)" fg:x="114424" fg:w="94"/><text x="98.1353%" y="431.50"></text></g><g><title>__vdso_clock_gettime (82 samples, 0.07%)</title><rect x="97.8956%" y="405" width="0.0701%" height="15" fill="rgb(226,182,46)" fg:x="114436" fg:w="82"/><text x="98.1456%" y="415.50"></text></g><g><title>[[vdso]] (75 samples, 0.06%)</title><rect x="97.9016%" y="389" width="0.0642%" height="15" fill="rgb(230,219,10)" fg:x="114443" fg:w="75"/><text x="98.1516%" y="399.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (704 samples, 0.60%)</title><rect x="97.3643%" y="485" width="0.6022%" height="15" fill="rgb(227,175,30)" fg:x="113815" fg:w="704"/><text x="97.6143%" y="495.50"></text></g><g><title>std::time::Instant::now (96 samples, 0.08%)</title><rect x="97.8844%" y="469" width="0.0821%" height="15" fill="rgb(217,2,50)" fg:x="114423" fg:w="96"/><text x="98.1344%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (96 samples, 0.08%)</title><rect x="97.8844%" y="453" width="0.0821%" height="15" fill="rgb(229,160,0)" fg:x="114423" fg:w="96"/><text x="98.1344%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (96 samples, 0.08%)</title><rect x="97.8844%" y="437" width="0.0821%" height="15" fill="rgb(207,78,37)" fg:x="114423" fg:w="96"/><text x="98.1344%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.02%)</title><rect x="97.9700%" y="485" width="0.0154%" height="15" fill="rgb(225,57,0)" fg:x="114523" fg:w="18"/><text x="98.2200%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.02%)</title><rect x="97.9700%" y="469" width="0.0154%" height="15" fill="rgb(232,154,2)" fg:x="114523" fg:w="18"/><text x="98.2200%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (30 samples, 0.03%)</title><rect x="98.0333%" y="469" width="0.0257%" height="15" fill="rgb(241,212,25)" fg:x="114597" fg:w="30"/><text x="98.2833%" y="479.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="98.0333%" y="453" width="0.0257%" height="15" fill="rgb(226,69,20)" fg:x="114597" fg:w="30"/><text x="98.2833%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (25 samples, 0.02%)</title><rect x="98.0376%" y="437" width="0.0214%" height="15" fill="rgb(247,184,54)" fg:x="114602" fg:w="25"/><text x="98.2876%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (25 samples, 0.02%)</title><rect x="98.0376%" y="421" width="0.0214%" height="15" fill="rgb(210,145,0)" fg:x="114602" fg:w="25"/><text x="98.2876%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (25 samples, 0.02%)</title><rect x="98.0376%" y="405" width="0.0214%" height="15" fill="rgb(253,82,12)" fg:x="114602" fg:w="25"/><text x="98.2876%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (25 samples, 0.02%)</title><rect x="98.0376%" y="389" width="0.0214%" height="15" fill="rgb(245,42,11)" fg:x="114602" fg:w="25"/><text x="98.2876%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (35 samples, 0.03%)</title><rect x="98.0590%" y="469" width="0.0299%" height="15" fill="rgb(219,147,32)" fg:x="114627" fg:w="35"/><text x="98.3090%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_swap (35 samples, 0.03%)</title><rect x="98.0590%" y="453" width="0.0299%" height="15" fill="rgb(246,12,7)" fg:x="114627" fg:w="35"/><text x="98.3090%" y="463.50"></text></g><g><title>__pthread_disable_asynccancel (22 samples, 0.02%)</title><rect x="98.2480%" y="437" width="0.0188%" height="15" fill="rgb(243,50,9)" fg:x="114848" fg:w="22"/><text x="98.4980%" y="447.50"></text></g><g><title>__libc_read (157 samples, 0.13%)</title><rect x="98.2010%" y="453" width="0.1343%" height="15" fill="rgb(219,149,6)" fg:x="114793" fg:w="157"/><text x="98.4510%" y="463.50"></text></g><g><title>__pthread_enable_asynccancel (80 samples, 0.07%)</title><rect x="98.2668%" y="437" width="0.0684%" height="15" fill="rgb(241,51,42)" fg:x="114870" fg:w="80"/><text x="98.5168%" y="447.50"></text></g><g><title>epoll_wait (202 samples, 0.17%)</title><rect x="98.3353%" y="453" width="0.1728%" height="15" fill="rgb(226,128,27)" fg:x="114950" fg:w="202"/><text x="98.5853%" y="463.50"></text></g><g><title>[libc-2.31.so] (56 samples, 0.05%)</title><rect x="98.4602%" y="437" width="0.0479%" height="15" fill="rgb(244,144,4)" fg:x="115096" fg:w="56"/><text x="98.7102%" y="447.50"></text></g><g><title>polling::epoll::Poller::modify (88 samples, 0.08%)</title><rect x="98.5098%" y="453" width="0.0753%" height="15" fill="rgb(221,4,13)" fg:x="115154" fg:w="88"/><text x="98.7598%" y="463.50"></text></g><g><title>polling::epoll::Poller::ctl (80 samples, 0.07%)</title><rect x="98.5166%" y="437" width="0.0684%" height="15" fill="rgb(208,170,28)" fg:x="115162" fg:w="80"/><text x="98.7666%" y="447.50"></text></g><g><title>epoll_ctl (75 samples, 0.06%)</title><rect x="98.5209%" y="421" width="0.0642%" height="15" fill="rgb(226,131,13)" fg:x="115167" fg:w="75"/><text x="98.7709%" y="431.50"></text></g><g><title>polling::epoll::Poller::wait (613 samples, 0.52%)</title><rect x="98.0957%" y="469" width="0.5244%" height="15" fill="rgb(215,72,41)" fg:x="114670" fg:w="613"/><text x="98.3457%" y="479.50"></text></g><g><title>syscall (41 samples, 0.04%)</title><rect x="98.5851%" y="453" width="0.0351%" height="15" fill="rgb(243,108,20)" fg:x="115242" fg:w="41"/><text x="98.8351%" y="463.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,564 samples, 1.34%)</title><rect x="97.3198%" y="501" width="1.3379%" height="15" fill="rgb(230,189,17)" fg:x="113763" fg:w="1564"/><text x="97.5698%" y="511.50"></text></g><g><title>polling::Poller::wait (785 samples, 0.67%)</title><rect x="97.9862%" y="485" width="0.6715%" height="15" fill="rgb(220,50,17)" fg:x="114542" fg:w="785"/><text x="98.2362%" y="495.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (44 samples, 0.04%)</title><rect x="98.6201%" y="469" width="0.0376%" height="15" fill="rgb(248,152,48)" fg:x="115283" fg:w="44"/><text x="98.8701%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (40 samples, 0.03%)</title><rect x="98.6236%" y="453" width="0.0342%" height="15" fill="rgb(244,91,11)" fg:x="115287" fg:w="40"/><text x="98.8736%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::try_lock (40 samples, 0.03%)</title><rect x="98.6236%" y="437" width="0.0342%" height="15" fill="rgb(220,157,5)" fg:x="115287" fg:w="40"/><text x="98.8736%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (40 samples, 0.03%)</title><rect x="98.6236%" y="421" width="0.0342%" height="15" fill="rgb(253,137,8)" fg:x="115287" fg:w="40"/><text x="98.8736%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (40 samples, 0.03%)</title><rect x="98.6236%" y="405" width="0.0342%" height="15" fill="rgb(217,137,51)" fg:x="115287" fg:w="40"/><text x="98.8736%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (21 samples, 0.02%)</title><rect x="98.6578%" y="453" width="0.0180%" height="15" fill="rgb(218,209,53)" fg:x="115327" fg:w="21"/><text x="98.9078%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_store (21 samples, 0.02%)</title><rect x="98.6578%" y="437" width="0.0180%" height="15" fill="rgb(249,137,25)" fg:x="115327" fg:w="21"/><text x="98.9078%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (25 samples, 0.02%)</title><rect x="98.6578%" y="501" width="0.0214%" height="15" fill="rgb(239,155,26)" fg:x="115327" fg:w="25"/><text x="98.9078%" y="511.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="98.6578%" y="485" width="0.0214%" height="15" fill="rgb(227,85,46)" fg:x="115327" fg:w="25"/><text x="98.9078%" y="495.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (25 samples, 0.02%)</title><rect x="98.6578%" y="469" width="0.0214%" height="15" fill="rgb(251,107,43)" fg:x="115327" fg:w="25"/><text x="98.9078%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (27 samples, 0.02%)</title><rect x="98.6826%" y="501" width="0.0231%" height="15" fill="rgb(234,170,33)" fg:x="115356" fg:w="27"/><text x="98.9326%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_store (27 samples, 0.02%)</title><rect x="98.6826%" y="485" width="0.0231%" height="15" fill="rgb(206,29,35)" fg:x="115356" fg:w="27"/><text x="98.9326%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (48 samples, 0.04%)</title><rect x="98.7288%" y="469" width="0.0411%" height="15" fill="rgb(227,138,25)" fg:x="115410" fg:w="48"/><text x="98.9788%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (48 samples, 0.04%)</title><rect x="98.7288%" y="453" width="0.0411%" height="15" fill="rgb(249,131,35)" fg:x="115410" fg:w="48"/><text x="98.9788%" y="463.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (40 samples, 0.03%)</title><rect x="98.7767%" y="389" width="0.0342%" height="15" fill="rgb(239,6,40)" fg:x="115466" fg:w="40"/><text x="99.0267%" y="399.50"></text></g><g><title>std::sys::unix::futex::futex_wait (188 samples, 0.16%)</title><rect x="98.7724%" y="405" width="0.1608%" height="15" fill="rgb(246,136,47)" fg:x="115461" fg:w="188"/><text x="99.0224%" y="415.50"></text></g><g><title>syscall (136 samples, 0.12%)</title><rect x="98.8169%" y="389" width="0.1163%" height="15" fill="rgb(253,58,26)" fg:x="115513" fg:w="136"/><text x="99.0669%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (125 samples, 0.11%)</title><rect x="98.9332%" y="405" width="0.1069%" height="15" fill="rgb(237,141,10)" fg:x="115649" fg:w="125"/><text x="99.1832%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (125 samples, 0.11%)</title><rect x="98.9332%" y="389" width="0.1069%" height="15" fill="rgb(234,156,12)" fg:x="115649" fg:w="125"/><text x="99.1832%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (125 samples, 0.11%)</title><rect x="98.9332%" y="373" width="0.1069%" height="15" fill="rgb(243,224,36)" fg:x="115649" fg:w="125"/><text x="99.1832%" y="383.50"></text></g><g><title>std::sync::condvar::Condvar::wait (325 samples, 0.28%)</title><rect x="98.7698%" y="469" width="0.2780%" height="15" fill="rgb(205,229,51)" fg:x="115458" fg:w="325"/><text x="99.0198%" y="479.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (325 samples, 0.28%)</title><rect x="98.7698%" y="453" width="0.2780%" height="15" fill="rgb(223,189,4)" fg:x="115458" fg:w="325"/><text x="99.0198%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (325 samples, 0.28%)</title><rect x="98.7698%" y="437" width="0.2780%" height="15" fill="rgb(249,167,54)" fg:x="115458" fg:w="325"/><text x="99.0198%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (325 samples, 0.28%)</title><rect x="98.7698%" y="421" width="0.2780%" height="15" fill="rgb(218,34,28)" fg:x="115458" fg:w="325"/><text x="99.0198%" y="431.50"></text></g><g><title>parking::Parker::park (402 samples, 0.34%)</title><rect x="98.7134%" y="501" width="0.3439%" height="15" fill="rgb(232,109,42)" fg:x="115392" fg:w="402"/><text x="98.9634%" y="511.50"></text></g><g><title>parking::Inner::park (398 samples, 0.34%)</title><rect x="98.7168%" y="485" width="0.3405%" height="15" fill="rgb(248,214,46)" fg:x="115396" fg:w="398"/><text x="98.9668%" y="495.50"></text></g><g><title>parking::Parker::park_timeout (288 samples, 0.25%)</title><rect x="99.0573%" y="501" width="0.2464%" height="15" fill="rgb(244,216,40)" fg:x="115794" fg:w="288"/><text x="99.3073%" y="511.50"></text></g><g><title>parking::Inner::park (258 samples, 0.22%)</title><rect x="99.0829%" y="485" width="0.2207%" height="15" fill="rgb(231,226,31)" fg:x="115824" fg:w="258"/><text x="99.3329%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (244 samples, 0.21%)</title><rect x="99.0949%" y="469" width="0.2087%" height="15" fill="rgb(238,38,43)" fg:x="115838" fg:w="244"/><text x="99.3449%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (244 samples, 0.21%)</title><rect x="99.0949%" y="453" width="0.2087%" height="15" fill="rgb(208,88,43)" fg:x="115838" fg:w="244"/><text x="99.3449%" y="463.50"></text></g><g><title>parking::pair (12 samples, 0.01%)</title><rect x="99.3037%" y="501" width="0.0103%" height="15" fill="rgb(205,136,37)" fg:x="116082" fg:w="12"/><text x="99.5537%" y="511.50"></text></g><g><title>parking::Parker::new (12 samples, 0.01%)</title><rect x="99.3037%" y="485" width="0.0103%" height="15" fill="rgb(237,34,14)" fg:x="116082" fg:w="12"/><text x="99.5537%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="99.3037%" y="469" width="0.0103%" height="15" fill="rgb(236,193,44)" fg:x="116082" fg:w="12"/><text x="99.5537%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="99.3037%" y="453" width="0.0103%" height="15" fill="rgb(231,48,10)" fg:x="116082" fg:w="12"/><text x="99.5537%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="99.3037%" y="437" width="0.0103%" height="15" fill="rgb(213,141,34)" fg:x="116082" fg:w="12"/><text x="99.5537%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="99.3037%" y="421" width="0.0103%" height="15" fill="rgb(249,130,34)" fg:x="116082" fg:w="12"/><text x="99.5537%" y="431.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="99.3037%" y="405" width="0.0103%" height="15" fill="rgb(219,42,41)" fg:x="116082" fg:w="12"/><text x="99.5537%" y="415.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="99.3037%" y="389" width="0.0103%" height="15" fill="rgb(224,100,54)" fg:x="116082" fg:w="12"/><text x="99.5537%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="99.3037%" y="373" width="0.0103%" height="15" fill="rgb(229,200,27)" fg:x="116082" fg:w="12"/><text x="99.5537%" y="383.50"></text></g><g><title>sn_rust_alloc (12 samples, 0.01%)</title><rect x="99.3037%" y="357" width="0.0103%" height="15" fill="rgb(217,118,10)" fg:x="116082" fg:w="12"/><text x="99.5537%" y="367.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc_slow&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="99.3037%" y="341" width="0.0103%" height="15" fill="rgb(206,22,3)" fg:x="116082" fg:w="12"/><text x="99.5537%" y="351.50"></text></g><g><title>std::panic::catch_unwind (15,061 samples, 12.88%)</title><rect x="86.4700%" y="789" width="12.8841%" height="15" fill="rgb(232,163,46)" fg:x="101080" fg:w="15061"/><text x="86.7200%" y="799.50">std::panic::catch_u..</text></g><g><title>std::panicking::try (15,061 samples, 12.88%)</title><rect x="86.4700%" y="773" width="12.8841%" height="15" fill="rgb(206,95,13)" fg:x="101080" fg:w="15061"/><text x="86.7200%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (15,061 samples, 12.88%)</title><rect x="86.4700%" y="757" width="12.8841%" height="15" fill="rgb(253,154,18)" fg:x="101080" fg:w="15061"/><text x="86.7200%" y="767.50">std::panicking::try..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15,061 samples, 12.88%)</title><rect x="86.4700%" y="741" width="12.8841%" height="15" fill="rgb(219,32,23)" fg:x="101080" fg:w="15061"/><text x="86.7200%" y="751.50">&lt;core::panic::unwin..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (15,061 samples, 12.88%)</title><rect x="86.4700%" y="725" width="12.8841%" height="15" fill="rgb(230,191,45)" fg:x="101080" fg:w="15061"/><text x="86.7200%" y="735.50">std::thread::Builde..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15,061 samples, 12.88%)</title><rect x="86.4700%" y="709" width="12.8841%" height="15" fill="rgb(229,64,36)" fg:x="101080" fg:w="15061"/><text x="86.7200%" y="719.50">std::sys_common::ba..</text></g><g><title>core::ops::function::FnOnce::call_once (15,061 samples, 12.88%)</title><rect x="86.4700%" y="693" width="12.8841%" height="15" fill="rgb(205,129,25)" fg:x="101080" fg:w="15061"/><text x="86.7200%" y="703.50">core::ops::function..</text></g><g><title>async_global_executor::threading::thread_main_loop (15,061 samples, 12.88%)</title><rect x="86.4700%" y="677" width="12.8841%" height="15" fill="rgb(254,112,7)" fg:x="101080" fg:w="15061"/><text x="86.7200%" y="687.50">async_global_execut..</text></g><g><title>std::panic::catch_unwind (15,012 samples, 12.84%)</title><rect x="86.5119%" y="661" width="12.8422%" height="15" fill="rgb(226,53,48)" fg:x="101129" fg:w="15012"/><text x="86.7619%" y="671.50">std::panic::catch_u..</text></g><g><title>std::panicking::try (15,012 samples, 12.84%)</title><rect x="86.5119%" y="645" width="12.8422%" height="15" fill="rgb(214,153,38)" fg:x="101129" fg:w="15012"/><text x="86.7619%" y="655.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (15,012 samples, 12.84%)</title><rect x="86.5119%" y="629" width="12.8422%" height="15" fill="rgb(243,101,7)" fg:x="101129" fg:w="15012"/><text x="86.7619%" y="639.50">std::panicking::try..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (15,012 samples, 12.84%)</title><rect x="86.5119%" y="613" width="12.8422%" height="15" fill="rgb(240,140,22)" fg:x="101129" fg:w="15012"/><text x="86.7619%" y="623.50">async_global_execut..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15,012 samples, 12.84%)</title><rect x="86.5119%" y="597" width="12.8422%" height="15" fill="rgb(235,114,2)" fg:x="101129" fg:w="15012"/><text x="86.7619%" y="607.50">std::thread::local:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15,012 samples, 12.84%)</title><rect x="86.5119%" y="581" width="12.8422%" height="15" fill="rgb(242,59,12)" fg:x="101129" fg:w="15012"/><text x="86.7619%" y="591.50">std::thread::local:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (15,012 samples, 12.84%)</title><rect x="86.5119%" y="565" width="12.8422%" height="15" fill="rgb(252,134,9)" fg:x="101129" fg:w="15012"/><text x="86.7619%" y="575.50">async_global_execut..</text></g><g><title>async_global_executor::reactor::block_on (15,012 samples, 12.84%)</title><rect x="86.5119%" y="549" width="12.8422%" height="15" fill="rgb(236,4,44)" fg:x="101129" fg:w="15012"/><text x="86.7619%" y="559.50">async_global_execut..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (15,012 samples, 12.84%)</title><rect x="86.5119%" y="533" width="12.8422%" height="15" fill="rgb(254,172,41)" fg:x="101129" fg:w="15012"/><text x="86.7619%" y="543.50">async_global_execut..</text></g><g><title>async_io::driver::block_on (15,012 samples, 12.84%)</title><rect x="86.5119%" y="517" width="12.8422%" height="15" fill="rgb(244,63,20)" fg:x="101129" fg:w="15012"/><text x="86.7619%" y="527.50">async_io::driver::b..</text></g><g><title>std::time::Instant::now (47 samples, 0.04%)</title><rect x="99.3139%" y="501" width="0.0402%" height="15" fill="rgb(250,73,31)" fg:x="116094" fg:w="47"/><text x="99.5639%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (47 samples, 0.04%)</title><rect x="99.3139%" y="485" width="0.0402%" height="15" fill="rgb(241,38,36)" fg:x="116094" fg:w="47"/><text x="99.5639%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (47 samples, 0.04%)</title><rect x="99.3139%" y="469" width="0.0402%" height="15" fill="rgb(245,211,2)" fg:x="116094" fg:w="47"/><text x="99.5639%" y="479.50"></text></g><g><title>__clock_gettime (38 samples, 0.03%)</title><rect x="99.3216%" y="453" width="0.0325%" height="15" fill="rgb(206,120,28)" fg:x="116103" fg:w="38"/><text x="99.5716%" y="463.50"></text></g><g><title>__vdso_clock_gettime (31 samples, 0.03%)</title><rect x="99.3276%" y="437" width="0.0265%" height="15" fill="rgb(211,59,34)" fg:x="116110" fg:w="31"/><text x="99.5776%" y="447.50"></text></g><g><title>[[vdso]] (28 samples, 0.02%)</title><rect x="99.3302%" y="421" width="0.0240%" height="15" fill="rgb(233,168,5)" fg:x="116113" fg:w="28"/><text x="99.5802%" y="431.50"></text></g><g><title>__libc_malloc (15 samples, 0.01%)</title><rect x="99.3550%" y="757" width="0.0128%" height="15" fill="rgb(234,33,13)" fg:x="116142" fg:w="15"/><text x="99.6050%" y="767.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.01%)</title><rect x="99.3550%" y="741" width="0.0128%" height="15" fill="rgb(231,150,26)" fg:x="116142" fg:w="15"/><text x="99.6050%" y="751.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.01%)</title><rect x="99.3550%" y="725" width="0.0128%" height="15" fill="rgb(217,191,4)" fg:x="116142" fg:w="15"/><text x="99.6050%" y="735.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.01%)</title><rect x="99.3567%" y="709" width="0.0111%" height="15" fill="rgb(246,198,38)" fg:x="116144" fg:w="13"/><text x="99.6067%" y="719.50"></text></g><g><title>std::sys::unix::thread::guard::current (17 samples, 0.01%)</title><rect x="99.3541%" y="789" width="0.0145%" height="15" fill="rgb(245,64,37)" fg:x="116141" fg:w="17"/><text x="99.6041%" y="799.50"></text></g><g><title>pthread_getattr_np (16 samples, 0.01%)</title><rect x="99.3550%" y="773" width="0.0137%" height="15" fill="rgb(250,30,36)" fg:x="116142" fg:w="16"/><text x="99.6050%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15,079 samples, 12.90%)</title><rect x="86.4700%" y="853" width="12.8995%" height="15" fill="rgb(217,86,53)" fg:x="101080" fg:w="15079"/><text x="86.7200%" y="863.50">&lt;alloc::boxed::Box&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15,079 samples, 12.90%)</title><rect x="86.4700%" y="837" width="12.8995%" height="15" fill="rgb(228,157,16)" fg:x="101080" fg:w="15079"/><text x="86.7200%" y="847.50">&lt;alloc::boxed::Box&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (15,079 samples, 12.90%)</title><rect x="86.4700%" y="821" width="12.8995%" height="15" fill="rgb(217,59,31)" fg:x="101080" fg:w="15079"/><text x="86.7200%" y="831.50">core::ops::function..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (15,079 samples, 12.90%)</title><rect x="86.4700%" y="805" width="12.8995%" height="15" fill="rgb(237,138,41)" fg:x="101080" fg:w="15079"/><text x="86.7200%" y="815.50">std::thread::Builde..</text></g><g><title>clone (15,101 samples, 12.92%)</title><rect x="86.4572%" y="901" width="12.9183%" height="15" fill="rgb(227,91,49)" fg:x="101065" fg:w="15101"/><text x="86.7072%" y="911.50">clone</text></g><g><title>start_thread (15,087 samples, 12.91%)</title><rect x="86.4692%" y="885" width="12.9063%" height="15" fill="rgb(247,21,44)" fg:x="101079" fg:w="15087"/><text x="86.7192%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15,086 samples, 12.91%)</title><rect x="86.4700%" y="869" width="12.9055%" height="15" fill="rgb(219,210,51)" fg:x="101080" fg:w="15086"/><text x="86.7200%" y="879.50">std::sys::unix::thr..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (16 samples, 0.01%)</title><rect x="99.3806%" y="901" width="0.0137%" height="15" fill="rgb(209,140,6)" fg:x="116172" fg:w="16"/><text x="99.6306%" y="911.50"></text></g><g><title>tremor_script::interpreter::expr::&lt;impl tremor_script::ast::Expr&gt;::run (167 samples, 0.14%)</title><rect x="99.4363%" y="901" width="0.1429%" height="15" fill="rgb(221,188,24)" fg:x="116237" fg:w="167"/><text x="99.6863%" y="911.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (18 samples, 0.02%)</title><rect x="99.5637%" y="885" width="0.0154%" height="15" fill="rgb(232,154,20)" fg:x="116386" fg:w="18"/><text x="99.8137%" y="895.50"></text></g><g><title>tremor_script::interpreter::imut_expr::&lt;impl tremor_script::ast::ImutExpr&gt;::run (12 samples, 0.01%)</title><rect x="99.5791%" y="901" width="0.0103%" height="15" fill="rgb(244,137,50)" fg:x="116404" fg:w="12"/><text x="99.8291%" y="911.50"></text></g><g><title>async-std/runti (116,349 samples, 99.53%)</title><rect x="0.0607%" y="917" width="99.5321%" height="15" fill="rgb(225,185,43)" fg:x="71" fg:w="116349"/><text x="0.3107%" y="927.50">async-std/runti</text></g><g><title>blocking-1 (14 samples, 0.01%)</title><rect x="99.5928%" y="917" width="0.0120%" height="15" fill="rgb(213,205,38)" fg:x="116420" fg:w="14"/><text x="99.8428%" y="927.50"></text></g><g><title>clone (14 samples, 0.01%)</title><rect x="99.5928%" y="901" width="0.0120%" height="15" fill="rgb(236,73,12)" fg:x="116420" fg:w="14"/><text x="99.8428%" y="911.50"></text></g><g><title>start_thread (14 samples, 0.01%)</title><rect x="99.5928%" y="885" width="0.0120%" height="15" fill="rgb(235,219,13)" fg:x="116420" fg:w="14"/><text x="99.8428%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (13 samples, 0.01%)</title><rect x="99.5937%" y="869" width="0.0111%" height="15" fill="rgb(218,59,36)" fg:x="116421" fg:w="13"/><text x="99.8437%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="99.5937%" y="853" width="0.0111%" height="15" fill="rgb(205,110,39)" fg:x="116421" fg:w="13"/><text x="99.8437%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="99.5937%" y="837" width="0.0111%" height="15" fill="rgb(218,206,42)" fg:x="116421" fg:w="13"/><text x="99.8437%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (13 samples, 0.01%)</title><rect x="99.5937%" y="821" width="0.0111%" height="15" fill="rgb(248,125,24)" fg:x="116421" fg:w="13"/><text x="99.8437%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (13 samples, 0.01%)</title><rect x="99.5937%" y="805" width="0.0111%" height="15" fill="rgb(242,28,27)" fg:x="116421" fg:w="13"/><text x="99.8437%" y="815.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.01%)</title><rect x="99.5937%" y="789" width="0.0111%" height="15" fill="rgb(216,228,15)" fg:x="116421" fg:w="13"/><text x="99.8437%" y="799.50"></text></g><g><title>std::panicking::try (13 samples, 0.01%)</title><rect x="99.5937%" y="773" width="0.0111%" height="15" fill="rgb(235,116,46)" fg:x="116421" fg:w="13"/><text x="99.8437%" y="783.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.01%)</title><rect x="99.5937%" y="757" width="0.0111%" height="15" fill="rgb(224,18,32)" fg:x="116421" fg:w="13"/><text x="99.8437%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="99.5937%" y="741" width="0.0111%" height="15" fill="rgb(252,5,12)" fg:x="116421" fg:w="13"/><text x="99.8437%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="99.5937%" y="725" width="0.0111%" height="15" fill="rgb(251,36,5)" fg:x="116421" fg:w="13"/><text x="99.8437%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 0.01%)</title><rect x="99.5937%" y="709" width="0.0111%" height="15" fill="rgb(217,53,14)" fg:x="116421" fg:w="13"/><text x="99.8437%" y="719.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (13 samples, 0.01%)</title><rect x="99.5937%" y="693" width="0.0111%" height="15" fill="rgb(215,86,45)" fg:x="116421" fg:w="13"/><text x="99.8437%" y="703.50"></text></g><g><title>blocking::Executor::main_loop (13 samples, 0.01%)</title><rect x="99.5937%" y="677" width="0.0111%" height="15" fill="rgb(242,169,11)" fg:x="116421" fg:w="13"/><text x="99.8437%" y="687.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (12 samples, 0.01%)</title><rect x="99.5945%" y="661" width="0.0103%" height="15" fill="rgb(211,213,45)" fg:x="116422" fg:w="12"/><text x="99.8445%" y="671.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (12 samples, 0.01%)</title><rect x="99.5945%" y="645" width="0.0103%" height="15" fill="rgb(205,88,11)" fg:x="116422" fg:w="12"/><text x="99.8445%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_timeout (12 samples, 0.01%)</title><rect x="99.5945%" y="629" width="0.0103%" height="15" fill="rgb(252,69,26)" fg:x="116422" fg:w="12"/><text x="99.8445%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (12 samples, 0.01%)</title><rect x="99.5945%" y="613" width="0.0103%" height="15" fill="rgb(246,123,37)" fg:x="116422" fg:w="12"/><text x="99.8445%" y="623.50"></text></g><g><title>blocking-2 (13 samples, 0.01%)</title><rect x="99.6048%" y="917" width="0.0111%" height="15" fill="rgb(212,205,5)" fg:x="116434" fg:w="13"/><text x="99.8548%" y="927.50"></text></g><g><title>clone (13 samples, 0.01%)</title><rect x="99.6048%" y="901" width="0.0111%" height="15" fill="rgb(253,148,0)" fg:x="116434" fg:w="13"/><text x="99.8548%" y="911.50"></text></g><g><title>start_thread (13 samples, 0.01%)</title><rect x="99.6048%" y="885" width="0.0111%" height="15" fill="rgb(239,22,4)" fg:x="116434" fg:w="13"/><text x="99.8548%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 0.01%)</title><rect x="99.6056%" y="869" width="0.0103%" height="15" fill="rgb(226,26,53)" fg:x="116435" fg:w="12"/><text x="99.8556%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="99.6056%" y="853" width="0.0103%" height="15" fill="rgb(225,229,45)" fg:x="116435" fg:w="12"/><text x="99.8556%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="99.6056%" y="837" width="0.0103%" height="15" fill="rgb(220,60,37)" fg:x="116435" fg:w="12"/><text x="99.8556%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (12 samples, 0.01%)</title><rect x="99.6056%" y="821" width="0.0103%" height="15" fill="rgb(217,180,35)" fg:x="116435" fg:w="12"/><text x="99.8556%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (12 samples, 0.01%)</title><rect x="99.6056%" y="805" width="0.0103%" height="15" fill="rgb(229,7,53)" fg:x="116435" fg:w="12"/><text x="99.8556%" y="815.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.01%)</title><rect x="99.6056%" y="789" width="0.0103%" height="15" fill="rgb(254,137,3)" fg:x="116435" fg:w="12"/><text x="99.8556%" y="799.50"></text></g><g><title>std::panicking::try (12 samples, 0.01%)</title><rect x="99.6056%" y="773" width="0.0103%" height="15" fill="rgb(215,140,41)" fg:x="116435" fg:w="12"/><text x="99.8556%" y="783.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.01%)</title><rect x="99.6056%" y="757" width="0.0103%" height="15" fill="rgb(250,80,15)" fg:x="116435" fg:w="12"/><text x="99.8556%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="99.6056%" y="741" width="0.0103%" height="15" fill="rgb(252,191,6)" fg:x="116435" fg:w="12"/><text x="99.8556%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="99.6056%" y="725" width="0.0103%" height="15" fill="rgb(246,217,18)" fg:x="116435" fg:w="12"/><text x="99.8556%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.01%)</title><rect x="99.6056%" y="709" width="0.0103%" height="15" fill="rgb(223,93,7)" fg:x="116435" fg:w="12"/><text x="99.8556%" y="719.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (12 samples, 0.01%)</title><rect x="99.6056%" y="693" width="0.0103%" height="15" fill="rgb(225,55,52)" fg:x="116435" fg:w="12"/><text x="99.8556%" y="703.50"></text></g><g><title>blocking::Executor::main_loop (12 samples, 0.01%)</title><rect x="99.6056%" y="677" width="0.0103%" height="15" fill="rgb(240,31,24)" fg:x="116435" fg:w="12"/><text x="99.8556%" y="687.50"></text></g><g><title>blocking-3 (12 samples, 0.01%)</title><rect x="99.6159%" y="917" width="0.0103%" height="15" fill="rgb(205,56,52)" fg:x="116447" fg:w="12"/><text x="99.8659%" y="927.50"></text></g><g><title>blocking-4 (12 samples, 0.01%)</title><rect x="99.6262%" y="917" width="0.0103%" height="15" fill="rgb(246,146,12)" fg:x="116459" fg:w="12"/><text x="99.8762%" y="927.50"></text></g><g><title>[ld-2.31.so] (14 samples, 0.01%)</title><rect x="99.6373%" y="901" width="0.0120%" height="15" fill="rgb(239,84,36)" fg:x="116472" fg:w="14"/><text x="99.8873%" y="911.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (15 samples, 0.01%)</title><rect x="99.6664%" y="613" width="0.0128%" height="15" fill="rgb(207,41,40)" fg:x="116506" fg:w="15"/><text x="99.9164%" y="623.50"></text></g><g><title>async_io::driver::block_on (15 samples, 0.01%)</title><rect x="99.6664%" y="597" width="0.0128%" height="15" fill="rgb(241,179,25)" fg:x="116506" fg:w="15"/><text x="99.9164%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="99.6664%" y="581" width="0.0128%" height="15" fill="rgb(210,0,34)" fg:x="116506" fg:w="15"/><text x="99.9164%" y="591.50"></text></g><g><title>async_global_executor::init::init::{{closure}} (15 samples, 0.01%)</title><rect x="99.6664%" y="565" width="0.0128%" height="15" fill="rgb(225,217,29)" fg:x="116506" fg:w="15"/><text x="99.9164%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="99.6664%" y="549" width="0.0128%" height="15" fill="rgb(216,191,38)" fg:x="116506" fg:w="15"/><text x="99.9164%" y="559.50"></text></g><g><title>async_global_executor::threading::spawn_more_threads::{{closure}} (15 samples, 0.01%)</title><rect x="99.6664%" y="533" width="0.0128%" height="15" fill="rgb(232,140,52)" fg:x="116506" fg:w="15"/><text x="99.9164%" y="543.50"></text></g><g><title>std::thread::Builder::spawn (15 samples, 0.01%)</title><rect x="99.6664%" y="517" width="0.0128%" height="15" fill="rgb(223,158,51)" fg:x="116506" fg:w="15"/><text x="99.9164%" y="527.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (15 samples, 0.01%)</title><rect x="99.6664%" y="501" width="0.0128%" height="15" fill="rgb(235,29,51)" fg:x="116506" fg:w="15"/><text x="99.9164%" y="511.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (15 samples, 0.01%)</title><rect x="99.6664%" y="485" width="0.0128%" height="15" fill="rgb(215,181,18)" fg:x="116506" fg:w="15"/><text x="99.9164%" y="495.50"></text></g><g><title>std::sys::unix::thread::Thread::new (15 samples, 0.01%)</title><rect x="99.6664%" y="469" width="0.0128%" height="15" fill="rgb(227,125,34)" fg:x="116506" fg:w="15"/><text x="99.9164%" y="479.50"></text></g><g><title>__pthread_create_2_1 (15 samples, 0.01%)</title><rect x="99.6664%" y="453" width="0.0128%" height="15" fill="rgb(230,197,49)" fg:x="116506" fg:w="15"/><text x="99.9164%" y="463.50"></text></g><g><title>async_global_executor::init::init_with_config (17 samples, 0.01%)</title><rect x="99.6664%" y="661" width="0.0145%" height="15" fill="rgb(239,141,16)" fg:x="116506" fg:w="17"/><text x="99.9164%" y="671.50"></text></g><g><title>async_global_executor::init::init (17 samples, 0.01%)</title><rect x="99.6664%" y="645" width="0.0145%" height="15" fill="rgb(225,105,43)" fg:x="116506" fg:w="17"/><text x="99.9164%" y="655.50"></text></g><g><title>async_global_executor::reactor::block_on (17 samples, 0.01%)</title><rect x="99.6664%" y="629" width="0.0145%" height="15" fill="rgb(214,131,14)" fg:x="116506" fg:w="17"/><text x="99.9164%" y="639.50"></text></g><g><title>async_std::task::builder::Builder::blocking (18 samples, 0.02%)</title><rect x="99.6664%" y="885" width="0.0154%" height="15" fill="rgb(229,177,11)" fg:x="116506" fg:w="18"/><text x="99.9164%" y="895.50"></text></g><g><title>async_std::task::builder::Builder::build (18 samples, 0.02%)</title><rect x="99.6664%" y="869" width="0.0154%" height="15" fill="rgb(231,180,14)" fg:x="116506" fg:w="18"/><text x="99.9164%" y="879.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (18 samples, 0.02%)</title><rect x="99.6664%" y="853" width="0.0154%" height="15" fill="rgb(232,88,2)" fg:x="116506" fg:w="18"/><text x="99.9164%" y="863.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (18 samples, 0.02%)</title><rect x="99.6664%" y="837" width="0.0154%" height="15" fill="rgb(205,220,8)" fg:x="116506" fg:w="18"/><text x="99.9164%" y="847.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (18 samples, 0.02%)</title><rect x="99.6664%" y="821" width="0.0154%" height="15" fill="rgb(225,23,53)" fg:x="116506" fg:w="18"/><text x="99.9164%" y="831.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (18 samples, 0.02%)</title><rect x="99.6664%" y="805" width="0.0154%" height="15" fill="rgb(213,62,29)" fg:x="116506" fg:w="18"/><text x="99.9164%" y="815.50"></text></g><g><title>once_cell::imp::initialize_or_wait (18 samples, 0.02%)</title><rect x="99.6664%" y="789" width="0.0154%" height="15" fill="rgb(227,75,7)" fg:x="116506" fg:w="18"/><text x="99.9164%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (18 samples, 0.02%)</title><rect x="99.6664%" y="773" width="0.0154%" height="15" fill="rgb(207,105,14)" fg:x="116506" fg:w="18"/><text x="99.9164%" y="783.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (18 samples, 0.02%)</title><rect x="99.6664%" y="757" width="0.0154%" height="15" fill="rgb(245,62,29)" fg:x="116506" fg:w="18"/><text x="99.9164%" y="767.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (18 samples, 0.02%)</title><rect x="99.6664%" y="741" width="0.0154%" height="15" fill="rgb(236,202,4)" fg:x="116506" fg:w="18"/><text x="99.9164%" y="751.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (18 samples, 0.02%)</title><rect x="99.6664%" y="725" width="0.0154%" height="15" fill="rgb(250,67,1)" fg:x="116506" fg:w="18"/><text x="99.9164%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 0.02%)</title><rect x="99.6664%" y="709" width="0.0154%" height="15" fill="rgb(253,115,44)" fg:x="116506" fg:w="18"/><text x="99.9164%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 0.02%)</title><rect x="99.6664%" y="693" width="0.0154%" height="15" fill="rgb(251,139,18)" fg:x="116506" fg:w="18"/><text x="99.9164%" y="703.50"></text></g><g><title>async_std::rt::RUNTIME::{{closure}} (18 samples, 0.02%)</title><rect x="99.6664%" y="677" width="0.0154%" height="15" fill="rgb(218,22,32)" fg:x="116506" fg:w="18"/><text x="99.9164%" y="687.50"></text></g><g><title>[unknown] (43 samples, 0.04%)</title><rect x="99.6510%" y="901" width="0.0368%" height="15" fill="rgb(243,53,5)" fg:x="116488" fg:w="43"/><text x="99.9010%" y="911.50"></text></g><g><title>__ctype_init (20 samples, 0.02%)</title><rect x="99.9324%" y="869" width="0.0171%" height="15" fill="rgb(227,56,16)" fg:x="116817" fg:w="20"/><text x="100.1824%" y="879.50"></text></g><g><title>main (374 samples, 0.32%)</title><rect x="99.6364%" y="917" width="0.3199%" height="15" fill="rgb(245,53,0)" fg:x="116471" fg:w="374"/><text x="99.8864%" y="927.50"></text></g><g><title>clone (313 samples, 0.27%)</title><rect x="99.6886%" y="901" width="0.2678%" height="15" fill="rgb(216,170,35)" fg:x="116532" fg:w="313"/><text x="99.9386%" y="911.50"></text></g><g><title>start_thread (47 samples, 0.04%)</title><rect x="99.9162%" y="885" width="0.0402%" height="15" fill="rgb(211,200,8)" fg:x="116798" fg:w="47"/><text x="100.1662%" y="895.50"></text></g><g><title>std::sys::unix::futex::futex_wait (25 samples, 0.02%)</title><rect x="99.9572%" y="581" width="0.0214%" height="15" fill="rgb(228,204,44)" fg:x="116846" fg:w="25"/><text x="100.2072%" y="591.50"></text></g><g><title>syscall (22 samples, 0.02%)</title><rect x="99.9598%" y="565" width="0.0188%" height="15" fill="rgb(214,121,17)" fg:x="116849" fg:w="22"/><text x="100.2098%" y="575.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (40 samples, 0.03%)</title><rect x="99.9564%" y="661" width="0.0342%" height="15" fill="rgb(233,64,38)" fg:x="116845" fg:w="40"/><text x="100.2064%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (40 samples, 0.03%)</title><rect x="99.9564%" y="645" width="0.0342%" height="15" fill="rgb(253,54,19)" fg:x="116845" fg:w="40"/><text x="100.2064%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (40 samples, 0.03%)</title><rect x="99.9564%" y="629" width="0.0342%" height="15" fill="rgb(253,94,18)" fg:x="116845" fg:w="40"/><text x="100.2064%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (40 samples, 0.03%)</title><rect x="99.9564%" y="613" width="0.0342%" height="15" fill="rgb(227,57,52)" fg:x="116845" fg:w="40"/><text x="100.2064%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (39 samples, 0.03%)</title><rect x="99.9572%" y="597" width="0.0334%" height="15" fill="rgb(230,228,50)" fg:x="116846" fg:w="39"/><text x="100.2072%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (14 samples, 0.01%)</title><rect x="99.9786%" y="581" width="0.0120%" height="15" fill="rgb(217,205,27)" fg:x="116871" fg:w="14"/><text x="100.2286%" y="591.50"></text></g><g><title>core::hint::spin_loop (14 samples, 0.01%)</title><rect x="99.9786%" y="565" width="0.0120%" height="15" fill="rgb(252,71,50)" fg:x="116871" fg:w="14"/><text x="100.2286%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (14 samples, 0.01%)</title><rect x="99.9786%" y="549" width="0.0120%" height="15" fill="rgb(209,86,4)" fg:x="116871" fg:w="14"/><text x="100.2286%" y="559.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (44 samples, 0.04%)</title><rect x="99.9564%" y="677" width="0.0376%" height="15" fill="rgb(229,94,0)" fg:x="116845" fg:w="44"/><text x="100.2064%" y="687.50"></text></g><g><title>std::panic::catch_unwind (46 samples, 0.04%)</title><rect x="99.9564%" y="789" width="0.0394%" height="15" fill="rgb(252,223,21)" fg:x="116845" fg:w="46"/><text x="100.2064%" y="799.50"></text></g><g><title>std::panicking::try (46 samples, 0.04%)</title><rect x="99.9564%" y="773" width="0.0394%" height="15" fill="rgb(230,210,4)" fg:x="116845" fg:w="46"/><text x="100.2064%" y="783.50"></text></g><g><title>std::panicking::try::do_call (46 samples, 0.04%)</title><rect x="99.9564%" y="757" width="0.0394%" height="15" fill="rgb(240,149,38)" fg:x="116845" fg:w="46"/><text x="100.2064%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (46 samples, 0.04%)</title><rect x="99.9564%" y="741" width="0.0394%" height="15" fill="rgb(254,105,20)" fg:x="116845" fg:w="46"/><text x="100.2064%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (46 samples, 0.04%)</title><rect x="99.9564%" y="725" width="0.0394%" height="15" fill="rgb(253,87,46)" fg:x="116845" fg:w="46"/><text x="100.2064%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (46 samples, 0.04%)</title><rect x="99.9564%" y="709" width="0.0394%" height="15" fill="rgb(253,116,33)" fg:x="116845" fg:w="46"/><text x="100.2064%" y="719.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (46 samples, 0.04%)</title><rect x="99.9564%" y="693" width="0.0394%" height="15" fill="rgb(229,198,5)" fg:x="116845" fg:w="46"/><text x="100.2064%" y="703.50"></text></g><g><title>clone (50 samples, 0.04%)</title><rect x="99.9564%" y="901" width="0.0428%" height="15" fill="rgb(242,38,37)" fg:x="116845" fg:w="50"/><text x="100.2064%" y="911.50"></text></g><g><title>start_thread (50 samples, 0.04%)</title><rect x="99.9564%" y="885" width="0.0428%" height="15" fill="rgb(242,69,53)" fg:x="116845" fg:w="50"/><text x="100.2064%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (50 samples, 0.04%)</title><rect x="99.9564%" y="869" width="0.0428%" height="15" fill="rgb(249,80,16)" fg:x="116845" fg:w="50"/><text x="100.2064%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50 samples, 0.04%)</title><rect x="99.9564%" y="853" width="0.0428%" height="15" fill="rgb(206,128,11)" fg:x="116845" fg:w="50"/><text x="100.2064%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50 samples, 0.04%)</title><rect x="99.9564%" y="837" width="0.0428%" height="15" fill="rgb(212,35,20)" fg:x="116845" fg:w="50"/><text x="100.2064%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (50 samples, 0.04%)</title><rect x="99.9564%" y="821" width="0.0428%" height="15" fill="rgb(236,79,13)" fg:x="116845" fg:w="50"/><text x="100.2064%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (50 samples, 0.04%)</title><rect x="99.9564%" y="805" width="0.0428%" height="15" fill="rgb(233,123,3)" fg:x="116845" fg:w="50"/><text x="100.2064%" y="815.50"></text></g><g><title>all (116,896 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(214,93,52)" fg:x="0" fg:w="116896"/><text x="0.2500%" y="943.50"></text></g><g><title>tokio-runtime-w (51 samples, 0.04%)</title><rect x="99.9564%" y="917" width="0.0436%" height="15" fill="rgb(251,37,40)" fg:x="116845" fg:w="51"/><text x="100.2064%" y="927.50"></text></g></svg></svg>