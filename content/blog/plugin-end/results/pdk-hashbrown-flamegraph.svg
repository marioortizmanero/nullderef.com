<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="111442"><g><title>__futex_abstimed_wait_common (45 samples, 0.04%)</title><rect x="0.0242%" y="805" width="0.0404%" height="15" fill="rgb(227,0,7)" fg:x="27" fg:w="45"/><text x="0.2742%" y="815.50"></text></g><g><title>__GI___clone (66 samples, 0.06%)</title><rect x="0.0063%" y="1141" width="0.0592%" height="15" fill="rgb(217,0,24)" fg:x="7" fg:w="66"/><text x="0.2563%" y="1151.50"></text></g><g><title>start_thread (66 samples, 0.06%)</title><rect x="0.0063%" y="1125" width="0.0592%" height="15" fill="rgb(221,193,54)" fg:x="7" fg:w="66"/><text x="0.2563%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (66 samples, 0.06%)</title><rect x="0.0063%" y="1109" width="0.0592%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="66"/><text x="0.2563%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (66 samples, 0.06%)</title><rect x="0.0063%" y="1093" width="0.0592%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="66"/><text x="0.2563%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (66 samples, 0.06%)</title><rect x="0.0063%" y="1077" width="0.0592%" height="15" fill="rgb(232,128,0)" fg:x="7" fg:w="66"/><text x="0.2563%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (66 samples, 0.06%)</title><rect x="0.0063%" y="1061" width="0.0592%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="66"/><text x="0.2563%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (66 samples, 0.06%)</title><rect x="0.0063%" y="1045" width="0.0592%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="66"/><text x="0.2563%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (66 samples, 0.06%)</title><rect x="0.0063%" y="1029" width="0.0592%" height="15" fill="rgb(218,30,26)" fg:x="7" fg:w="66"/><text x="0.2563%" y="1039.50"></text></g><g><title>std::panicking::try (66 samples, 0.06%)</title><rect x="0.0063%" y="1013" width="0.0592%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="66"/><text x="0.2563%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (66 samples, 0.06%)</title><rect x="0.0063%" y="997" width="0.0592%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="66"/><text x="0.2563%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (66 samples, 0.06%)</title><rect x="0.0063%" y="981" width="0.0592%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="66"/><text x="0.2563%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (66 samples, 0.06%)</title><rect x="0.0063%" y="965" width="0.0592%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="66"/><text x="0.2563%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (66 samples, 0.06%)</title><rect x="0.0063%" y="949" width="0.0592%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="66"/><text x="0.2563%" y="959.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (66 samples, 0.06%)</title><rect x="0.0063%" y="933" width="0.0592%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="66"/><text x="0.2563%" y="943.50"></text></g><g><title>async_io::driver::main_loop (66 samples, 0.06%)</title><rect x="0.0063%" y="917" width="0.0592%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="66"/><text x="0.2563%" y="927.50"></text></g><g><title>parking::Parker::park_timeout (51 samples, 0.05%)</title><rect x="0.0197%" y="901" width="0.0458%" height="15" fill="rgb(225,20,46)" fg:x="22" fg:w="51"/><text x="0.2697%" y="911.50"></text></g><g><title>parking::Inner::park (51 samples, 0.05%)</title><rect x="0.0197%" y="885" width="0.0458%" height="15" fill="rgb(210,31,41)" fg:x="22" fg:w="51"/><text x="0.2697%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (50 samples, 0.04%)</title><rect x="0.0206%" y="869" width="0.0449%" height="15" fill="rgb(221,200,47)" fg:x="23" fg:w="50"/><text x="0.2706%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (49 samples, 0.04%)</title><rect x="0.0215%" y="853" width="0.0440%" height="15" fill="rgb(226,26,5)" fg:x="24" fg:w="49"/><text x="0.2715%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (49 samples, 0.04%)</title><rect x="0.0215%" y="837" width="0.0440%" height="15" fill="rgb(249,33,26)" fg:x="24" fg:w="49"/><text x="0.2715%" y="847.50"></text></g><g><title>___pthread_cond_timedwait (48 samples, 0.04%)</title><rect x="0.0224%" y="821" width="0.0431%" height="15" fill="rgb(235,183,28)" fg:x="25" fg:w="48"/><text x="0.2724%" y="831.50"></text></g><g><title>async-io (72 samples, 0.06%)</title><rect x="0.0027%" y="1157" width="0.0646%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="72"/><text x="0.2527%" y="1167.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (66 samples, 0.06%)</title><rect x="0.4074%" y="1141" width="0.0592%" height="15" fill="rgb(247,18,42)" fg:x="454" fg:w="66"/><text x="0.6574%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="0.4666%" y="1141" width="0.0144%" height="15" fill="rgb(241,131,45)" fg:x="520" fg:w="16"/><text x="0.7166%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (13 samples, 0.01%)</title><rect x="0.4693%" y="1125" width="0.0117%" height="15" fill="rgb(249,31,29)" fg:x="523" fg:w="13"/><text x="0.7193%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="0.4693%" y="1109" width="0.0117%" height="15" fill="rgb(225,111,53)" fg:x="523" fg:w="13"/><text x="0.7193%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 samples, 0.10%)</title><rect x="0.4890%" y="1141" width="0.0969%" height="15" fill="rgb(238,160,17)" fg:x="545" fg:w="108"/><text x="0.7390%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (108 samples, 0.10%)</title><rect x="0.4890%" y="1125" width="0.0969%" height="15" fill="rgb(214,148,48)" fg:x="545" fg:w="108"/><text x="0.7390%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="0.5967%" y="1125" width="0.0341%" height="15" fill="rgb(232,36,49)" fg:x="665" fg:w="38"/><text x="0.8467%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="0.6308%" y="1125" width="0.0341%" height="15" fill="rgb(209,103,24)" fg:x="703" fg:w="38"/><text x="0.8808%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (13 samples, 0.01%)</title><rect x="0.6533%" y="1109" width="0.0117%" height="15" fill="rgb(229,88,8)" fg:x="728" fg:w="13"/><text x="0.9033%" y="1119.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="0.6533%" y="1093" width="0.0117%" height="15" fill="rgb(213,181,19)" fg:x="728" fg:w="13"/><text x="0.9033%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (13 samples, 0.01%)</title><rect x="0.6533%" y="1077" width="0.0117%" height="15" fill="rgb(254,191,54)" fg:x="728" fg:w="13"/><text x="0.9033%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="0.6533%" y="1061" width="0.0117%" height="15" fill="rgb(241,83,37)" fg:x="728" fg:w="13"/><text x="0.9033%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="0.6533%" y="1045" width="0.0117%" height="15" fill="rgb(233,36,39)" fg:x="728" fg:w="13"/><text x="0.9033%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="0.6533%" y="1029" width="0.0117%" height="15" fill="rgb(226,3,54)" fg:x="728" fg:w="13"/><text x="0.9033%" y="1039.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="0.6533%" y="1013" width="0.0117%" height="15" fill="rgb(245,192,40)" fg:x="728" fg:w="13"/><text x="0.9033%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="0.6533%" y="997" width="0.0117%" height="15" fill="rgb(238,167,29)" fg:x="728" fg:w="13"/><text x="0.9033%" y="1007.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (104 samples, 0.09%)</title><rect x="0.6649%" y="1125" width="0.0933%" height="15" fill="rgb(232,182,51)" fg:x="741" fg:w="104"/><text x="0.9149%" y="1135.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="0.7582%" y="1125" width="0.0126%" height="15" fill="rgb(231,60,39)" fg:x="845" fg:w="14"/><text x="1.0082%" y="1135.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (13 samples, 0.01%)</title><rect x="0.8291%" y="1093" width="0.0117%" height="15" fill="rgb(208,69,12)" fg:x="924" fg:w="13"/><text x="1.0791%" y="1103.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (27 samples, 0.02%)</title><rect x="0.8282%" y="1109" width="0.0242%" height="15" fill="rgb(235,93,37)" fg:x="923" fg:w="27"/><text x="1.0782%" y="1119.50"></text></g><g><title>event_listener::Event::notify (13 samples, 0.01%)</title><rect x="0.8408%" y="1093" width="0.0117%" height="15" fill="rgb(213,116,39)" fg:x="937" fg:w="13"/><text x="1.0908%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (68 samples, 0.06%)</title><rect x="0.8525%" y="1109" width="0.0610%" height="15" fill="rgb(222,207,29)" fg:x="950" fg:w="68"/><text x="1.1025%" y="1119.50"></text></g><g><title>core::mem::replace (68 samples, 0.06%)</title><rect x="0.8525%" y="1093" width="0.0610%" height="15" fill="rgb(206,96,30)" fg:x="950" fg:w="68"/><text x="1.1025%" y="1103.50"></text></g><g><title>core::ptr::read (68 samples, 0.06%)</title><rect x="0.8525%" y="1077" width="0.0610%" height="15" fill="rgb(218,138,4)" fg:x="950" fg:w="68"/><text x="1.1025%" y="1087.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (164 samples, 0.15%)</title><rect x="0.7708%" y="1125" width="0.1472%" height="15" fill="rgb(250,191,14)" fg:x="859" fg:w="164"/><text x="1.0208%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (52 samples, 0.05%)</title><rect x="1.3523%" y="1093" width="0.0467%" height="15" fill="rgb(239,60,40)" fg:x="1507" fg:w="52"/><text x="1.6023%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (52 samples, 0.05%)</title><rect x="1.3523%" y="1077" width="0.0467%" height="15" fill="rgb(206,27,48)" fg:x="1507" fg:w="52"/><text x="1.6023%" y="1087.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (170 samples, 0.15%)</title><rect x="1.2554%" y="1109" width="0.1525%" height="15" fill="rgb(225,35,8)" fg:x="1399" fg:w="170"/><text x="1.5054%" y="1119.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="1.4079%" y="1093" width="0.0242%" height="15" fill="rgb(250,213,24)" fg:x="1569" fg:w="27"/><text x="1.6579%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="1.4115%" y="1077" width="0.0206%" height="15" fill="rgb(247,123,22)" fg:x="1573" fg:w="23"/><text x="1.6615%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (23 samples, 0.02%)</title><rect x="1.4115%" y="1061" width="0.0206%" height="15" fill="rgb(231,138,38)" fg:x="1573" fg:w="23"/><text x="1.6615%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (23 samples, 0.02%)</title><rect x="1.4115%" y="1045" width="0.0206%" height="15" fill="rgb(231,145,46)" fg:x="1573" fg:w="23"/><text x="1.6615%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (23 samples, 0.02%)</title><rect x="1.4115%" y="1029" width="0.0206%" height="15" fill="rgb(251,118,11)" fg:x="1573" fg:w="23"/><text x="1.6615%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.02%)</title><rect x="1.4115%" y="1013" width="0.0206%" height="15" fill="rgb(217,147,25)" fg:x="1573" fg:w="23"/><text x="1.6615%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.02%)</title><rect x="1.4115%" y="997" width="0.0206%" height="15" fill="rgb(247,81,37)" fg:x="1573" fg:w="23"/><text x="1.6615%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.02%)</title><rect x="1.4115%" y="981" width="0.0206%" height="15" fill="rgb(209,12,38)" fg:x="1573" fg:w="23"/><text x="1.6615%" y="991.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (18 samples, 0.02%)</title><rect x="1.4160%" y="965" width="0.0162%" height="15" fill="rgb(227,1,9)" fg:x="1578" fg:w="18"/><text x="1.6660%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.02%)</title><rect x="1.4160%" y="949" width="0.0162%" height="15" fill="rgb(248,47,43)" fg:x="1578" fg:w="18"/><text x="1.6660%" y="959.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (39 samples, 0.03%)</title><rect x="1.4079%" y="1109" width="0.0350%" height="15" fill="rgb(221,10,30)" fg:x="1569" fg:w="39"/><text x="1.6579%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (12 samples, 0.01%)</title><rect x="1.4321%" y="1093" width="0.0108%" height="15" fill="rgb(210,229,1)" fg:x="1596" fg:w="12"/><text x="1.6821%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (12 samples, 0.01%)</title><rect x="1.4321%" y="1077" width="0.0108%" height="15" fill="rgb(222,148,37)" fg:x="1596" fg:w="12"/><text x="1.6821%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (12 samples, 0.01%)</title><rect x="1.4321%" y="1061" width="0.0108%" height="15" fill="rgb(234,67,33)" fg:x="1596" fg:w="12"/><text x="1.6821%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.01%)</title><rect x="1.4321%" y="1045" width="0.0108%" height="15" fill="rgb(247,98,35)" fg:x="1596" fg:w="12"/><text x="1.6821%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="1.4321%" y="1029" width="0.0108%" height="15" fill="rgb(247,138,52)" fg:x="1596" fg:w="12"/><text x="1.6821%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="1.4321%" y="1013" width="0.0108%" height="15" fill="rgb(213,79,30)" fg:x="1596" fg:w="12"/><text x="1.6821%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="1.4321%" y="997" width="0.0108%" height="15" fill="rgb(246,177,23)" fg:x="1596" fg:w="12"/><text x="1.6821%" y="1007.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="1.4429%" y="1109" width="0.0108%" height="15" fill="rgb(230,62,27)" fg:x="1608" fg:w="12"/><text x="1.6929%" y="1119.50"></text></g><g><title>async_task::runnable::Runnable::run (12 samples, 0.01%)</title><rect x="1.4429%" y="1093" width="0.0108%" height="15" fill="rgb(216,154,8)" fg:x="1608" fg:w="12"/><text x="1.6929%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="1.5066%" y="1093" width="0.0126%" height="15" fill="rgb(244,35,45)" fg:x="1679" fg:w="14"/><text x="1.7566%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (65 samples, 0.06%)</title><rect x="1.4689%" y="1109" width="0.0583%" height="15" fill="rgb(251,115,12)" fg:x="1637" fg:w="65"/><text x="1.7189%" y="1119.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (54 samples, 0.05%)</title><rect x="1.5353%" y="1109" width="0.0485%" height="15" fill="rgb(240,54,50)" fg:x="1711" fg:w="54"/><text x="1.7853%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (816 samples, 0.73%)</title><rect x="0.9180%" y="1125" width="0.7322%" height="15" fill="rgb(233,84,52)" fg:x="1023" fg:w="816"/><text x="1.1680%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (74 samples, 0.07%)</title><rect x="1.5838%" y="1109" width="0.0664%" height="15" fill="rgb(207,117,47)" fg:x="1765" fg:w="74"/><text x="1.8338%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (25 samples, 0.02%)</title><rect x="1.8637%" y="1109" width="0.0224%" height="15" fill="rgb(249,43,39)" fg:x="2077" fg:w="25"/><text x="2.1137%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (25 samples, 0.02%)</title><rect x="1.8637%" y="1093" width="0.0224%" height="15" fill="rgb(209,38,44)" fg:x="2077" fg:w="25"/><text x="2.1137%" y="1103.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="1.8637%" y="1077" width="0.0224%" height="15" fill="rgb(236,212,23)" fg:x="2077" fg:w="25"/><text x="2.1137%" y="1087.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (25 samples, 0.02%)</title><rect x="1.8637%" y="1061" width="0.0224%" height="15" fill="rgb(242,79,21)" fg:x="2077" fg:w="25"/><text x="2.1137%" y="1071.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (25 samples, 0.02%)</title><rect x="1.8637%" y="1045" width="0.0224%" height="15" fill="rgb(211,96,35)" fg:x="2077" fg:w="25"/><text x="2.1137%" y="1055.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (280 samples, 0.25%)</title><rect x="1.6502%" y="1125" width="0.2513%" height="15" fill="rgb(253,215,40)" fg:x="1839" fg:w="280"/><text x="1.9002%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (17 samples, 0.02%)</title><rect x="1.8862%" y="1109" width="0.0153%" height="15" fill="rgb(211,81,21)" fg:x="2102" fg:w="17"/><text x="2.1362%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="1.8862%" y="1093" width="0.0153%" height="15" fill="rgb(208,190,38)" fg:x="2102" fg:w="17"/><text x="2.1362%" y="1103.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="1.8862%" y="1077" width="0.0153%" height="15" fill="rgb(235,213,38)" fg:x="2102" fg:w="17"/><text x="2.1362%" y="1087.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (17 samples, 0.02%)</title><rect x="1.8862%" y="1061" width="0.0153%" height="15" fill="rgb(237,122,38)" fg:x="2102" fg:w="17"/><text x="2.1362%" y="1071.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="1.9014%" y="1125" width="0.0153%" height="15" fill="rgb(244,218,35)" fg:x="2119" fg:w="17"/><text x="2.1514%" y="1135.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (52 samples, 0.05%)</title><rect x="1.9167%" y="1125" width="0.0467%" height="15" fill="rgb(240,68,47)" fg:x="2136" fg:w="52"/><text x="2.1667%" y="1135.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (28 samples, 0.03%)</title><rect x="1.9382%" y="1109" width="0.0251%" height="15" fill="rgb(210,16,53)" fg:x="2160" fg:w="28"/><text x="2.1882%" y="1119.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (14 samples, 0.01%)</title><rect x="1.9508%" y="1093" width="0.0126%" height="15" fill="rgb(235,124,12)" fg:x="2174" fg:w="14"/><text x="2.2008%" y="1103.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (17 samples, 0.02%)</title><rect x="1.9643%" y="1125" width="0.0153%" height="15" fill="rgb(224,169,11)" fg:x="2189" fg:w="17"/><text x="2.2143%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (192 samples, 0.17%)</title><rect x="1.9795%" y="1125" width="0.1723%" height="15" fill="rgb(250,166,2)" fg:x="2206" fg:w="192"/><text x="2.2295%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (117 samples, 0.10%)</title><rect x="2.0468%" y="1109" width="0.1050%" height="15" fill="rgb(242,216,29)" fg:x="2281" fg:w="117"/><text x="2.2968%" y="1119.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (80 samples, 0.07%)</title><rect x="2.0800%" y="1093" width="0.0718%" height="15" fill="rgb(230,116,27)" fg:x="2318" fg:w="80"/><text x="2.3300%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (37 samples, 0.03%)</title><rect x="2.1186%" y="1077" width="0.0332%" height="15" fill="rgb(228,99,48)" fg:x="2361" fg:w="37"/><text x="2.3686%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (35 samples, 0.03%)</title><rect x="2.1204%" y="1061" width="0.0314%" height="15" fill="rgb(253,11,6)" fg:x="2363" fg:w="35"/><text x="2.3704%" y="1071.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (35 samples, 0.03%)</title><rect x="2.1204%" y="1045" width="0.0314%" height="15" fill="rgb(247,143,39)" fg:x="2363" fg:w="35"/><text x="2.3704%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (22 samples, 0.02%)</title><rect x="2.1321%" y="1029" width="0.0197%" height="15" fill="rgb(236,97,10)" fg:x="2376" fg:w="22"/><text x="2.3821%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="2.1321%" y="1013" width="0.0197%" height="15" fill="rgb(233,208,19)" fg:x="2376" fg:w="22"/><text x="2.3821%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="2.1321%" y="997" width="0.0197%" height="15" fill="rgb(216,164,2)" fg:x="2376" fg:w="22"/><text x="2.3821%" y="1007.50"></text></g><g><title>__rg_dealloc (22 samples, 0.02%)</title><rect x="2.1321%" y="981" width="0.0197%" height="15" fill="rgb(220,129,5)" fg:x="2376" fg:w="22"/><text x="2.3821%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (22 samples, 0.02%)</title><rect x="2.1321%" y="965" width="0.0197%" height="15" fill="rgb(242,17,10)" fg:x="2376" fg:w="22"/><text x="2.3821%" y="975.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (35 samples, 0.03%)</title><rect x="2.1518%" y="1125" width="0.0314%" height="15" fill="rgb(242,107,0)" fg:x="2398" fg:w="35"/><text x="2.4018%" y="1135.50"></text></g><g><title>value_trait::Builder::object (12 samples, 0.01%)</title><rect x="2.1724%" y="1109" width="0.0108%" height="15" fill="rgb(251,28,31)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="1119.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (12 samples, 0.01%)</title><rect x="2.1724%" y="1093" width="0.0108%" height="15" fill="rgb(233,223,10)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (12 samples, 0.01%)</title><rect x="2.1724%" y="1077" width="0.0108%" height="15" fill="rgb(215,21,27)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="1087.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (12 samples, 0.01%)</title><rect x="2.1724%" y="1061" width="0.0108%" height="15" fill="rgb(232,23,21)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (12 samples, 0.01%)</title><rect x="2.1724%" y="1045" width="0.0108%" height="15" fill="rgb(244,5,23)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (12 samples, 0.01%)</title><rect x="2.1724%" y="1029" width="0.0108%" height="15" fill="rgb(226,81,46)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="1039.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (12 samples, 0.01%)</title><rect x="2.1724%" y="1013" width="0.0108%" height="15" fill="rgb(247,70,30)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="1023.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="2.1724%" y="997" width="0.0108%" height="15" fill="rgb(212,68,19)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="2.1724%" y="981" width="0.0108%" height="15" fill="rgb(240,187,13)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="2.1724%" y="965" width="0.0108%" height="15" fill="rgb(223,113,26)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="2.1724%" y="949" width="0.0108%" height="15" fill="rgb(206,192,2)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="2.1724%" y="933" width="0.0108%" height="15" fill="rgb(241,108,4)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="943.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="2.1724%" y="917" width="0.0108%" height="15" fill="rgb(247,173,49)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="927.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="2.1724%" y="901" width="0.0108%" height="15" fill="rgb(224,114,35)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="2.1724%" y="885" width="0.0108%" height="15" fill="rgb(245,159,27)" fg:x="2421" fg:w="12"/><text x="2.4224%" y="895.50"></text></g><g><title>__GI___pthread_mutex_trylock (15 samples, 0.01%)</title><rect x="2.1958%" y="1125" width="0.0135%" height="15" fill="rgb(245,172,44)" fg:x="2447" fg:w="15"/><text x="2.4458%" y="1135.50"></text></g><g><title>___pthread_mutex_lock (56 samples, 0.05%)</title><rect x="2.2173%" y="1125" width="0.0503%" height="15" fill="rgb(236,23,11)" fg:x="2471" fg:w="56"/><text x="2.4673%" y="1135.50"></text></g><g><title>___pthread_rwlock_unlock (18 samples, 0.02%)</title><rect x="2.2720%" y="1125" width="0.0162%" height="15" fill="rgb(205,117,38)" fg:x="2532" fg:w="18"/><text x="2.5220%" y="1135.50"></text></g><g><title>__clock_gettime_2 (43 samples, 0.04%)</title><rect x="2.2882%" y="1125" width="0.0386%" height="15" fill="rgb(237,72,25)" fg:x="2550" fg:w="43"/><text x="2.5382%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (45 samples, 0.04%)</title><rect x="2.3375%" y="1125" width="0.0404%" height="15" fill="rgb(244,70,9)" fg:x="2605" fg:w="45"/><text x="2.5875%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (12 samples, 0.01%)</title><rect x="2.3878%" y="1125" width="0.0108%" height="15" fill="rgb(217,125,39)" fg:x="2661" fg:w="12"/><text x="2.6378%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (32 samples, 0.03%)</title><rect x="2.3986%" y="1125" width="0.0287%" height="15" fill="rgb(235,36,10)" fg:x="2673" fg:w="32"/><text x="2.6486%" y="1135.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (108 samples, 0.10%)</title><rect x="2.4327%" y="1125" width="0.0969%" height="15" fill="rgb(251,123,47)" fg:x="2711" fg:w="108"/><text x="2.6827%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (84 samples, 0.08%)</title><rect x="2.5296%" y="1125" width="0.0754%" height="15" fill="rgb(221,13,13)" fg:x="2819" fg:w="84"/><text x="2.7796%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (23 samples, 0.02%)</title><rect x="2.5843%" y="1109" width="0.0206%" height="15" fill="rgb(238,131,9)" fg:x="2880" fg:w="23"/><text x="2.8343%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (23 samples, 0.02%)</title><rect x="2.5843%" y="1093" width="0.0206%" height="15" fill="rgb(211,50,8)" fg:x="2880" fg:w="23"/><text x="2.8343%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (23 samples, 0.02%)</title><rect x="2.5843%" y="1077" width="0.0206%" height="15" fill="rgb(245,182,24)" fg:x="2880" fg:w="23"/><text x="2.8343%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (23 samples, 0.02%)</title><rect x="2.5843%" y="1061" width="0.0206%" height="15" fill="rgb(242,14,37)" fg:x="2880" fg:w="23"/><text x="2.8343%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="2.5843%" y="1045" width="0.0206%" height="15" fill="rgb(246,228,12)" fg:x="2880" fg:w="23"/><text x="2.8343%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="2.5843%" y="1029" width="0.0206%" height="15" fill="rgb(213,55,15)" fg:x="2880" fg:w="23"/><text x="2.8343%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (23 samples, 0.02%)</title><rect x="2.5843%" y="1013" width="0.0206%" height="15" fill="rgb(209,9,3)" fg:x="2880" fg:w="23"/><text x="2.8343%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.02%)</title><rect x="2.5843%" y="997" width="0.0206%" height="15" fill="rgb(230,59,30)" fg:x="2880" fg:w="23"/><text x="2.8343%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.02%)</title><rect x="2.5843%" y="981" width="0.0206%" height="15" fill="rgb(209,121,21)" fg:x="2880" fg:w="23"/><text x="2.8343%" y="991.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.02%)</title><rect x="2.5843%" y="965" width="0.0206%" height="15" fill="rgb(220,109,13)" fg:x="2880" fg:w="23"/><text x="2.8343%" y="975.50"></text></g><g><title>__rg_alloc (23 samples, 0.02%)</title><rect x="2.5843%" y="949" width="0.0206%" height="15" fill="rgb(232,18,1)" fg:x="2880" fg:w="23"/><text x="2.8343%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (23 samples, 0.02%)</title><rect x="2.5843%" y="933" width="0.0206%" height="15" fill="rgb(215,41,42)" fg:x="2880" fg:w="23"/><text x="2.8343%" y="943.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (43 samples, 0.04%)</title><rect x="2.6049%" y="1125" width="0.0386%" height="15" fill="rgb(224,123,36)" fg:x="2903" fg:w="43"/><text x="2.8549%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (30 samples, 0.03%)</title><rect x="2.6166%" y="1109" width="0.0269%" height="15" fill="rgb(240,125,3)" fg:x="2916" fg:w="30"/><text x="2.8666%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (30 samples, 0.03%)</title><rect x="2.6166%" y="1093" width="0.0269%" height="15" fill="rgb(205,98,50)" fg:x="2916" fg:w="30"/><text x="2.8666%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (30 samples, 0.03%)</title><rect x="2.6166%" y="1077" width="0.0269%" height="15" fill="rgb(205,185,37)" fg:x="2916" fg:w="30"/><text x="2.8666%" y="1087.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (14 samples, 0.01%)</title><rect x="2.6310%" y="1061" width="0.0126%" height="15" fill="rgb(238,207,15)" fg:x="2932" fg:w="14"/><text x="2.8810%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 0.01%)</title><rect x="2.6310%" y="1045" width="0.0126%" height="15" fill="rgb(213,199,42)" fg:x="2932" fg:w="14"/><text x="2.8810%" y="1055.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (14 samples, 0.01%)</title><rect x="2.6310%" y="1029" width="0.0126%" height="15" fill="rgb(235,201,11)" fg:x="2932" fg:w="14"/><text x="2.8810%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (14 samples, 0.01%)</title><rect x="2.6310%" y="1013" width="0.0126%" height="15" fill="rgb(207,46,11)" fg:x="2932" fg:w="14"/><text x="2.8810%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (70 samples, 0.06%)</title><rect x="2.6489%" y="1125" width="0.0628%" height="15" fill="rgb(241,35,35)" fg:x="2952" fg:w="70"/><text x="2.8989%" y="1135.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (55 samples, 0.05%)</title><rect x="2.6624%" y="1109" width="0.0494%" height="15" fill="rgb(243,32,47)" fg:x="2967" fg:w="55"/><text x="2.9124%" y="1119.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (55 samples, 0.05%)</title><rect x="2.6624%" y="1093" width="0.0494%" height="15" fill="rgb(247,202,23)" fg:x="2967" fg:w="55"/><text x="2.9124%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (19 samples, 0.02%)</title><rect x="2.7117%" y="1125" width="0.0170%" height="15" fill="rgb(219,102,11)" fg:x="3022" fg:w="19"/><text x="2.9617%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (126 samples, 0.11%)</title><rect x="2.8203%" y="1061" width="0.1131%" height="15" fill="rgb(243,110,44)" fg:x="3143" fg:w="126"/><text x="3.0703%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (126 samples, 0.11%)</title><rect x="2.8203%" y="1045" width="0.1131%" height="15" fill="rgb(222,74,54)" fg:x="3143" fg:w="126"/><text x="3.0703%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (126 samples, 0.11%)</title><rect x="2.8203%" y="1029" width="0.1131%" height="15" fill="rgb(216,99,12)" fg:x="3143" fg:w="126"/><text x="3.0703%" y="1039.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (126 samples, 0.11%)</title><rect x="2.8203%" y="1013" width="0.1131%" height="15" fill="rgb(226,22,26)" fg:x="3143" fg:w="126"/><text x="3.0703%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (135 samples, 0.12%)</title><rect x="2.8203%" y="1077" width="0.1211%" height="15" fill="rgb(217,163,10)" fg:x="3143" fg:w="135"/><text x="3.0703%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.06%)</title><rect x="2.9414%" y="1061" width="0.0583%" height="15" fill="rgb(213,25,53)" fg:x="3278" fg:w="65"/><text x="3.1914%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (65 samples, 0.06%)</title><rect x="2.9414%" y="1045" width="0.0583%" height="15" fill="rgb(252,105,26)" fg:x="3278" fg:w="65"/><text x="3.1914%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (65 samples, 0.06%)</title><rect x="2.9414%" y="1029" width="0.0583%" height="15" fill="rgb(220,39,43)" fg:x="3278" fg:w="65"/><text x="3.1914%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (65 samples, 0.06%)</title><rect x="2.9414%" y="1013" width="0.0583%" height="15" fill="rgb(229,68,48)" fg:x="3278" fg:w="65"/><text x="3.1914%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (65 samples, 0.06%)</title><rect x="2.9414%" y="997" width="0.0583%" height="15" fill="rgb(252,8,32)" fg:x="3278" fg:w="65"/><text x="3.1914%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (78 samples, 0.07%)</title><rect x="2.9414%" y="1077" width="0.0700%" height="15" fill="rgb(223,20,43)" fg:x="3278" fg:w="78"/><text x="3.1914%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (13 samples, 0.01%)</title><rect x="2.9998%" y="1061" width="0.0117%" height="15" fill="rgb(229,81,49)" fg:x="3343" fg:w="13"/><text x="3.2498%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="2.9998%" y="1045" width="0.0117%" height="15" fill="rgb(236,28,36)" fg:x="3343" fg:w="13"/><text x="3.2498%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="2.9998%" y="1029" width="0.0117%" height="15" fill="rgb(249,185,26)" fg:x="3343" fg:w="13"/><text x="3.2498%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="2.9998%" y="1013" width="0.0117%" height="15" fill="rgb(249,174,33)" fg:x="3343" fg:w="13"/><text x="3.2498%" y="1023.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="2.9998%" y="997" width="0.0117%" height="15" fill="rgb(233,201,37)" fg:x="3343" fg:w="13"/><text x="3.2498%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="2.9998%" y="981" width="0.0117%" height="15" fill="rgb(221,78,26)" fg:x="3343" fg:w="13"/><text x="3.2498%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (331 samples, 0.30%)</title><rect x="2.7288%" y="1125" width="0.2970%" height="15" fill="rgb(250,127,30)" fg:x="3041" fg:w="331"/><text x="2.9788%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (229 samples, 0.21%)</title><rect x="2.8203%" y="1109" width="0.2055%" height="15" fill="rgb(230,49,44)" fg:x="3143" fg:w="229"/><text x="3.0703%" y="1119.50"></text></g><g><title>core::mem::drop (229 samples, 0.21%)</title><rect x="2.8203%" y="1093" width="0.2055%" height="15" fill="rgb(229,67,23)" fg:x="3143" fg:w="229"/><text x="3.0703%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="3.0114%" y="1077" width="0.0144%" height="15" fill="rgb(249,83,47)" fg:x="3356" fg:w="16"/><text x="3.2614%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="3.0114%" y="1061" width="0.0144%" height="15" fill="rgb(215,43,3)" fg:x="3356" fg:w="16"/><text x="3.2614%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (16 samples, 0.01%)</title><rect x="3.0114%" y="1045" width="0.0144%" height="15" fill="rgb(238,154,13)" fg:x="3356" fg:w="16"/><text x="3.2614%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (16 samples, 0.01%)</title><rect x="3.0114%" y="1029" width="0.0144%" height="15" fill="rgb(219,56,2)" fg:x="3356" fg:w="16"/><text x="3.2614%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (16 samples, 0.01%)</title><rect x="3.0114%" y="1013" width="0.0144%" height="15" fill="rgb(233,0,4)" fg:x="3356" fg:w="16"/><text x="3.2614%" y="1023.50"></text></g><g><title>async_executor::Ticker::sleep (36 samples, 0.03%)</title><rect x="3.0473%" y="1125" width="0.0323%" height="15" fill="rgb(235,30,7)" fg:x="3396" fg:w="36"/><text x="3.2973%" y="1135.50"></text></g><g><title>async_executor::Ticker::wake (17 samples, 0.02%)</title><rect x="3.0796%" y="1125" width="0.0153%" height="15" fill="rgb(250,79,13)" fg:x="3432" fg:w="17"/><text x="3.3296%" y="1135.50"></text></g><g><title>async_executor::steal (139 samples, 0.12%)</title><rect x="3.0949%" y="1125" width="0.1247%" height="15" fill="rgb(211,146,34)" fg:x="3449" fg:w="139"/><text x="3.3449%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (34 samples, 0.03%)</title><rect x="3.2241%" y="1125" width="0.0305%" height="15" fill="rgb(228,22,38)" fg:x="3593" fg:w="34"/><text x="3.4741%" y="1135.50"></text></g><g><title>async_ffi::DropBomb::with (13 samples, 0.01%)</title><rect x="3.2429%" y="1109" width="0.0117%" height="15" fill="rgb(235,168,5)" fg:x="3614" fg:w="13"/><text x="3.4929%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (13 samples, 0.01%)</title><rect x="3.2429%" y="1093" width="0.0117%" height="15" fill="rgb(221,155,16)" fg:x="3614" fg:w="13"/><text x="3.4929%" y="1103.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="3.2429%" y="1077" width="0.0117%" height="15" fill="rgb(215,215,53)" fg:x="3614" fg:w="13"/><text x="3.4929%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}}&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="3.2429%" y="1061" width="0.0117%" height="15" fill="rgb(223,4,10)" fg:x="3614" fg:w="13"/><text x="3.4929%" y="1071.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="3.2429%" y="1045" width="0.0117%" height="15" fill="rgb(234,103,6)" fg:x="3614" fg:w="13"/><text x="3.4929%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="3.2429%" y="1029" width="0.0117%" height="15" fill="rgb(227,97,0)" fg:x="3614" fg:w="13"/><text x="3.4929%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="3.2429%" y="1013" width="0.0117%" height="15" fill="rgb(234,150,53)" fg:x="3614" fg:w="13"/><text x="3.4929%" y="1023.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="3.2429%" y="997" width="0.0117%" height="15" fill="rgb(228,201,54)" fg:x="3614" fg:w="13"/><text x="3.4929%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="3.2429%" y="981" width="0.0117%" height="15" fill="rgb(222,22,37)" fg:x="3614" fg:w="13"/><text x="3.4929%" y="991.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (20 samples, 0.02%)</title><rect x="3.2546%" y="1125" width="0.0179%" height="15" fill="rgb(237,53,32)" fg:x="3627" fg:w="20"/><text x="3.5046%" y="1135.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (13 samples, 0.01%)</title><rect x="3.2761%" y="1125" width="0.0117%" height="15" fill="rgb(233,25,53)" fg:x="3651" fg:w="13"/><text x="3.5261%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (24 samples, 0.02%)</title><rect x="3.2977%" y="1125" width="0.0215%" height="15" fill="rgb(210,40,34)" fg:x="3675" fg:w="24"/><text x="3.5477%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (135 samples, 0.12%)</title><rect x="3.3264%" y="1125" width="0.1211%" height="15" fill="rgb(241,220,44)" fg:x="3707" fg:w="135"/><text x="3.5764%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (103 samples, 0.09%)</title><rect x="3.4475%" y="1125" width="0.0924%" height="15" fill="rgb(235,28,35)" fg:x="3842" fg:w="103"/><text x="3.6975%" y="1135.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (35 samples, 0.03%)</title><rect x="3.5400%" y="1125" width="0.0314%" height="15" fill="rgb(210,56,17)" fg:x="3945" fg:w="35"/><text x="3.7900%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (13 samples, 0.01%)</title><rect x="3.5893%" y="1093" width="0.0117%" height="15" fill="rgb(224,130,29)" fg:x="4000" fg:w="13"/><text x="3.8393%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (13 samples, 0.01%)</title><rect x="3.5893%" y="1077" width="0.0117%" height="15" fill="rgb(235,212,8)" fg:x="4000" fg:w="13"/><text x="3.8393%" y="1087.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (13 samples, 0.01%)</title><rect x="3.5893%" y="1061" width="0.0117%" height="15" fill="rgb(223,33,50)" fg:x="4000" fg:w="13"/><text x="3.8393%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (13 samples, 0.01%)</title><rect x="3.5893%" y="1045" width="0.0117%" height="15" fill="rgb(219,149,13)" fg:x="4000" fg:w="13"/><text x="3.8393%" y="1055.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="3.5893%" y="1029" width="0.0117%" height="15" fill="rgb(250,156,29)" fg:x="4000" fg:w="13"/><text x="3.8393%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="3.5893%" y="1013" width="0.0117%" height="15" fill="rgb(216,193,19)" fg:x="4000" fg:w="13"/><text x="3.8393%" y="1023.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="3.5893%" y="997" width="0.0117%" height="15" fill="rgb(216,135,14)" fg:x="4000" fg:w="13"/><text x="3.8393%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="3.5893%" y="981" width="0.0117%" height="15" fill="rgb(241,47,5)" fg:x="4000" fg:w="13"/><text x="3.8393%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="3.5893%" y="965" width="0.0117%" height="15" fill="rgb(233,42,35)" fg:x="4000" fg:w="13"/><text x="3.8393%" y="975.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="3.5893%" y="949" width="0.0117%" height="15" fill="rgb(231,13,6)" fg:x="4000" fg:w="13"/><text x="3.8393%" y="959.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="3.5893%" y="933" width="0.0117%" height="15" fill="rgb(207,181,40)" fg:x="4000" fg:w="13"/><text x="3.8393%" y="943.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="3.5893%" y="917" width="0.0117%" height="15" fill="rgb(254,173,49)" fg:x="4000" fg:w="13"/><text x="3.8393%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (42 samples, 0.04%)</title><rect x="3.5759%" y="1125" width="0.0377%" height="15" fill="rgb(221,1,38)" fg:x="3985" fg:w="42"/><text x="3.8259%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (27 samples, 0.02%)</title><rect x="3.5893%" y="1109" width="0.0242%" height="15" fill="rgb(206,124,46)" fg:x="4000" fg:w="27"/><text x="3.8393%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (14 samples, 0.01%)</title><rect x="3.6010%" y="1093" width="0.0126%" height="15" fill="rgb(249,21,11)" fg:x="4013" fg:w="14"/><text x="3.8510%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="3.6028%" y="1077" width="0.0108%" height="15" fill="rgb(222,201,40)" fg:x="4015" fg:w="12"/><text x="3.8528%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="3.6028%" y="1061" width="0.0108%" height="15" fill="rgb(235,61,29)" fg:x="4015" fg:w="12"/><text x="3.8528%" y="1071.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="3.6028%" y="1045" width="0.0108%" height="15" fill="rgb(219,207,3)" fg:x="4015" fg:w="12"/><text x="3.8528%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (24 samples, 0.02%)</title><rect x="3.6135%" y="1125" width="0.0215%" height="15" fill="rgb(222,56,46)" fg:x="4027" fg:w="24"/><text x="3.8635%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (39 samples, 0.03%)</title><rect x="3.6351%" y="1125" width="0.0350%" height="15" fill="rgb(239,76,54)" fg:x="4051" fg:w="39"/><text x="3.8851%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt; (39 samples, 0.03%)</title><rect x="3.6351%" y="1109" width="0.0350%" height="15" fill="rgb(231,124,27)" fg:x="4051" fg:w="39"/><text x="3.8851%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="3.6701%" y="1125" width="0.0188%" height="15" fill="rgb(249,195,6)" fg:x="4090" fg:w="21"/><text x="3.9201%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (24 samples, 0.02%)</title><rect x="3.6889%" y="1125" width="0.0215%" height="15" fill="rgb(237,174,47)" fg:x="4111" fg:w="24"/><text x="3.9389%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="3.7105%" y="1125" width="0.0117%" height="15" fill="rgb(206,201,31)" fg:x="4135" fg:w="13"/><text x="3.9605%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (13 samples, 0.01%)</title><rect x="3.7105%" y="1109" width="0.0117%" height="15" fill="rgb(231,57,52)" fg:x="4135" fg:w="13"/><text x="3.9605%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (14 samples, 0.01%)</title><rect x="3.7257%" y="1125" width="0.0126%" height="15" fill="rgb(248,177,22)" fg:x="4152" fg:w="14"/><text x="3.9757%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (14 samples, 0.01%)</title><rect x="3.7257%" y="1109" width="0.0126%" height="15" fill="rgb(215,211,37)" fg:x="4152" fg:w="14"/><text x="3.9757%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (14 samples, 0.01%)</title><rect x="3.7257%" y="1093" width="0.0126%" height="15" fill="rgb(241,128,51)" fg:x="4152" fg:w="14"/><text x="3.9757%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="3.7257%" y="1077" width="0.0126%" height="15" fill="rgb(227,165,31)" fg:x="4152" fg:w="14"/><text x="3.9757%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (14 samples, 0.01%)</title><rect x="3.7257%" y="1061" width="0.0126%" height="15" fill="rgb(228,167,24)" fg:x="4152" fg:w="14"/><text x="3.9757%" y="1071.50"></text></g><g><title>event_listener::Inner::lock (18 samples, 0.02%)</title><rect x="3.7472%" y="1125" width="0.0162%" height="15" fill="rgb(228,143,12)" fg:x="4176" fg:w="18"/><text x="3.9972%" y="1135.50"></text></g><g><title>event_listener::List::notify (15 samples, 0.01%)</title><rect x="3.7634%" y="1125" width="0.0135%" height="15" fill="rgb(249,149,8)" fg:x="4194" fg:w="15"/><text x="4.0134%" y="1135.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (58 samples, 0.05%)</title><rect x="3.7769%" y="1125" width="0.0520%" height="15" fill="rgb(243,35,44)" fg:x="4209" fg:w="58"/><text x="4.0269%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIter&lt;T&gt;::drop_elements (13 samples, 0.01%)</title><rect x="3.8289%" y="1125" width="0.0117%" height="15" fill="rgb(246,89,9)" fg:x="4267" fg:w="13"/><text x="4.0789%" y="1135.50"></text></g><g><title>parking::Inner::park (33 samples, 0.03%)</title><rect x="3.8406%" y="1125" width="0.0296%" height="15" fill="rgb(233,213,13)" fg:x="4280" fg:w="33"/><text x="4.0906%" y="1135.50"></text></g><g><title>parking::Unparker::unpark (26 samples, 0.02%)</title><rect x="3.8702%" y="1125" width="0.0233%" height="15" fill="rgb(233,141,41)" fg:x="4313" fg:w="26"/><text x="4.1202%" y="1135.50"></text></g><g><title>polling::epoll::Poller::modify (17 samples, 0.02%)</title><rect x="3.8944%" y="1125" width="0.0153%" height="15" fill="rgb(239,167,4)" fg:x="4340" fg:w="17"/><text x="4.1444%" y="1135.50"></text></g><g><title>rust_alloc (43 samples, 0.04%)</title><rect x="3.9097%" y="1125" width="0.0386%" height="15" fill="rgb(209,217,16)" fg:x="4357" fg:w="43"/><text x="4.1597%" y="1135.50"></text></g><g><title>rust_dealloc (26 samples, 0.02%)</title><rect x="3.9482%" y="1125" width="0.0233%" height="15" fill="rgb(219,88,35)" fg:x="4400" fg:w="26"/><text x="4.1982%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (26 samples, 0.02%)</title><rect x="3.9482%" y="1109" width="0.0233%" height="15" fill="rgb(220,193,23)" fg:x="4400" fg:w="26"/><text x="4.1982%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (26 samples, 0.02%)</title><rect x="3.9482%" y="1093" width="0.0233%" height="15" fill="rgb(230,90,52)" fg:x="4400" fg:w="26"/><text x="4.1982%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (26 samples, 0.02%)</title><rect x="3.9482%" y="1077" width="0.0233%" height="15" fill="rgb(252,106,19)" fg:x="4400" fg:w="26"/><text x="4.1982%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (26 samples, 0.02%)</title><rect x="3.9482%" y="1061" width="0.0233%" height="15" fill="rgb(206,74,20)" fg:x="4400" fg:w="26"/><text x="4.1982%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (26 samples, 0.02%)</title><rect x="3.9482%" y="1045" width="0.0233%" height="15" fill="rgb(230,138,44)" fg:x="4400" fg:w="26"/><text x="4.1982%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (26 samples, 0.02%)</title><rect x="3.9482%" y="1029" width="0.0233%" height="15" fill="rgb(235,182,43)" fg:x="4400" fg:w="26"/><text x="4.1982%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (26 samples, 0.02%)</title><rect x="3.9482%" y="1013" width="0.0233%" height="15" fill="rgb(242,16,51)" fg:x="4400" fg:w="26"/><text x="4.1982%" y="1023.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (26 samples, 0.02%)</title><rect x="3.9482%" y="997" width="0.0233%" height="15" fill="rgb(248,9,4)" fg:x="4400" fg:w="26"/><text x="4.1982%" y="1007.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (42 samples, 0.04%)</title><rect x="3.9805%" y="1125" width="0.0377%" height="15" fill="rgb(210,31,22)" fg:x="4436" fg:w="42"/><text x="4.2305%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (61 samples, 0.05%)</title><rect x="4.0209%" y="1125" width="0.0547%" height="15" fill="rgb(239,54,39)" fg:x="4481" fg:w="61"/><text x="4.2709%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 samples, 0.03%)</title><rect x="4.0757%" y="1125" width="0.0350%" height="15" fill="rgb(230,99,41)" fg:x="4542" fg:w="39"/><text x="4.3257%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.02%)</title><rect x="4.0936%" y="1109" width="0.0170%" height="15" fill="rgb(253,106,12)" fg:x="4562" fg:w="19"/><text x="4.3436%" y="1119.50"></text></g><g><title>tremor_common::time::nanotime (51 samples, 0.05%)</title><rect x="4.1107%" y="1125" width="0.0458%" height="15" fill="rgb(213,46,41)" fg:x="4581" fg:w="51"/><text x="4.3607%" y="1135.50"></text></g><g><title>std::time::SystemTime::now (51 samples, 0.05%)</title><rect x="4.1107%" y="1109" width="0.0458%" height="15" fill="rgb(215,133,35)" fg:x="4581" fg:w="51"/><text x="4.3607%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (51 samples, 0.05%)</title><rect x="4.1107%" y="1093" width="0.0458%" height="15" fill="rgb(213,28,5)" fg:x="4581" fg:w="51"/><text x="4.3607%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::now (51 samples, 0.05%)</title><rect x="4.1107%" y="1077" width="0.0458%" height="15" fill="rgb(215,77,49)" fg:x="4581" fg:w="51"/><text x="4.3607%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.03%)</title><rect x="4.2363%" y="1109" width="0.0350%" height="15" fill="rgb(248,100,22)" fg:x="4721" fg:w="39"/><text x="4.4863%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (39 samples, 0.03%)</title><rect x="4.2363%" y="1093" width="0.0350%" height="15" fill="rgb(208,67,9)" fg:x="4721" fg:w="39"/><text x="4.4863%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (18 samples, 0.02%)</title><rect x="4.2551%" y="1077" width="0.0162%" height="15" fill="rgb(219,133,21)" fg:x="4742" fg:w="18"/><text x="4.5051%" y="1087.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="4.2740%" y="1093" width="0.0108%" height="15" fill="rgb(246,46,29)" fg:x="4763" fg:w="12"/><text x="4.5240%" y="1103.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (15 samples, 0.01%)</title><rect x="4.2740%" y="1109" width="0.0135%" height="15" fill="rgb(246,185,52)" fg:x="4763" fg:w="15"/><text x="4.5240%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (19 samples, 0.02%)</title><rect x="4.2946%" y="1093" width="0.0170%" height="15" fill="rgb(252,136,11)" fg:x="4786" fg:w="19"/><text x="4.5446%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (182 samples, 0.16%)</title><rect x="4.1573%" y="1125" width="0.1633%" height="15" fill="rgb(219,138,53)" fg:x="4633" fg:w="182"/><text x="4.4073%" y="1135.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (29 samples, 0.03%)</title><rect x="4.2946%" y="1109" width="0.0260%" height="15" fill="rgb(211,51,23)" fg:x="4786" fg:w="29"/><text x="4.5446%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (15 samples, 0.01%)</title><rect x="4.3206%" y="1125" width="0.0135%" height="15" fill="rgb(247,221,28)" fg:x="4815" fg:w="15"/><text x="4.5706%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="4.3942%" y="981" width="0.0179%" height="15" fill="rgb(251,222,45)" fg:x="4897" fg:w="20"/><text x="4.6442%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="4.3942%" y="965" width="0.0179%" height="15" fill="rgb(217,162,53)" fg:x="4897" fg:w="20"/><text x="4.6442%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.02%)</title><rect x="4.3942%" y="949" width="0.0179%" height="15" fill="rgb(229,93,14)" fg:x="4897" fg:w="20"/><text x="4.6442%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.02%)</title><rect x="4.3942%" y="933" width="0.0179%" height="15" fill="rgb(209,67,49)" fg:x="4897" fg:w="20"/><text x="4.6442%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.02%)</title><rect x="4.3942%" y="917" width="0.0179%" height="15" fill="rgb(213,87,29)" fg:x="4897" fg:w="20"/><text x="4.6442%" y="927.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.02%)</title><rect x="4.3942%" y="901" width="0.0179%" height="15" fill="rgb(205,151,52)" fg:x="4897" fg:w="20"/><text x="4.6442%" y="911.50"></text></g><g><title>__rg_alloc (20 samples, 0.02%)</title><rect x="4.3942%" y="885" width="0.0179%" height="15" fill="rgb(253,215,39)" fg:x="4897" fg:w="20"/><text x="4.6442%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (20 samples, 0.02%)</title><rect x="4.3942%" y="869" width="0.0179%" height="15" fill="rgb(221,220,41)" fg:x="4897" fg:w="20"/><text x="4.6442%" y="879.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (39 samples, 0.03%)</title><rect x="4.3942%" y="1109" width="0.0350%" height="15" fill="rgb(218,133,21)" fg:x="4897" fg:w="39"/><text x="4.6442%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (39 samples, 0.03%)</title><rect x="4.3942%" y="1093" width="0.0350%" height="15" fill="rgb(221,193,43)" fg:x="4897" fg:w="39"/><text x="4.6442%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (39 samples, 0.03%)</title><rect x="4.3942%" y="1077" width="0.0350%" height="15" fill="rgb(240,128,52)" fg:x="4897" fg:w="39"/><text x="4.6442%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (39 samples, 0.03%)</title><rect x="4.3942%" y="1061" width="0.0350%" height="15" fill="rgb(253,114,12)" fg:x="4897" fg:w="39"/><text x="4.6442%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (39 samples, 0.03%)</title><rect x="4.3942%" y="1045" width="0.0350%" height="15" fill="rgb(215,223,47)" fg:x="4897" fg:w="39"/><text x="4.6442%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39 samples, 0.03%)</title><rect x="4.3942%" y="1029" width="0.0350%" height="15" fill="rgb(248,225,23)" fg:x="4897" fg:w="39"/><text x="4.6442%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 0.03%)</title><rect x="4.3942%" y="1013" width="0.0350%" height="15" fill="rgb(250,108,0)" fg:x="4897" fg:w="39"/><text x="4.6442%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 0.03%)</title><rect x="4.3942%" y="997" width="0.0350%" height="15" fill="rgb(228,208,7)" fg:x="4897" fg:w="39"/><text x="4.6442%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (19 samples, 0.02%)</title><rect x="4.4122%" y="981" width="0.0170%" height="15" fill="rgb(244,45,10)" fg:x="4917" fg:w="19"/><text x="4.6622%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.02%)</title><rect x="4.4122%" y="965" width="0.0170%" height="15" fill="rgb(207,125,25)" fg:x="4917" fg:w="19"/><text x="4.6622%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (15 samples, 0.01%)</title><rect x="4.4472%" y="1093" width="0.0135%" height="15" fill="rgb(210,195,18)" fg:x="4956" fg:w="15"/><text x="4.6972%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="4.4472%" y="1077" width="0.0135%" height="15" fill="rgb(249,80,12)" fg:x="4956" fg:w="15"/><text x="4.6972%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (15 samples, 0.01%)</title><rect x="4.4472%" y="1061" width="0.0135%" height="15" fill="rgb(221,65,9)" fg:x="4956" fg:w="15"/><text x="4.6972%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (150 samples, 0.13%)</title><rect x="4.3359%" y="1125" width="0.1346%" height="15" fill="rgb(235,49,36)" fg:x="4832" fg:w="150"/><text x="4.5859%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (26 samples, 0.02%)</title><rect x="4.4472%" y="1109" width="0.0233%" height="15" fill="rgb(225,32,20)" fg:x="4956" fg:w="26"/><text x="4.6972%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (35 samples, 0.03%)</title><rect x="4.4705%" y="1125" width="0.0314%" height="15" fill="rgb(215,141,46)" fg:x="4982" fg:w="35"/><text x="4.7205%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (17 samples, 0.02%)</title><rect x="4.5019%" y="1125" width="0.0153%" height="15" fill="rgb(250,160,47)" fg:x="5017" fg:w="17"/><text x="4.7519%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (114 samples, 0.10%)</title><rect x="4.5171%" y="1125" width="0.1023%" height="15" fill="rgb(216,222,40)" fg:x="5034" fg:w="114"/><text x="4.7671%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.04%)</title><rect x="4.5836%" y="1109" width="0.0359%" height="15" fill="rgb(234,217,39)" fg:x="5108" fg:w="40"/><text x="4.8336%" y="1119.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (40 samples, 0.04%)</title><rect x="4.5836%" y="1093" width="0.0359%" height="15" fill="rgb(207,178,40)" fg:x="5108" fg:w="40"/><text x="4.8336%" y="1103.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (56 samples, 0.05%)</title><rect x="4.6194%" y="1125" width="0.0503%" height="15" fill="rgb(221,136,13)" fg:x="5148" fg:w="56"/><text x="4.8694%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (27 samples, 0.02%)</title><rect x="4.6455%" y="1109" width="0.0242%" height="15" fill="rgb(249,199,10)" fg:x="5177" fg:w="27"/><text x="4.8955%" y="1119.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="4.6589%" y="1093" width="0.0108%" height="15" fill="rgb(249,222,13)" fg:x="5192" fg:w="12"/><text x="4.9089%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="4.6589%" y="1077" width="0.0108%" height="15" fill="rgb(244,185,38)" fg:x="5192" fg:w="12"/><text x="4.9089%" y="1087.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (15 samples, 0.01%)</title><rect x="4.6760%" y="1125" width="0.0135%" height="15" fill="rgb(236,202,9)" fg:x="5211" fg:w="15"/><text x="4.9260%" y="1135.50"></text></g><g><title>[anon] (4,574 samples, 4.10%)</title><rect x="0.5860%" y="1141" width="4.1044%" height="15" fill="rgb(250,229,37)" fg:x="653" fg:w="4574"/><text x="0.8360%" y="1151.50">[ano..</text></g><g><title>[libc.so.6] (34 samples, 0.03%)</title><rect x="4.6903%" y="1141" width="0.0305%" height="15" fill="rgb(206,174,23)" fg:x="5227" fg:w="34"/><text x="4.9403%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="4.7208%" y="1125" width="0.0108%" height="15" fill="rgb(211,33,43)" fg:x="5261" fg:w="12"/><text x="4.9708%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.04%)</title><rect x="4.7343%" y="1125" width="0.0449%" height="15" fill="rgb(245,58,50)" fg:x="5276" fg:w="50"/><text x="4.9843%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (85 samples, 0.08%)</title><rect x="4.7792%" y="1125" width="0.0763%" height="15" fill="rgb(244,68,36)" fg:x="5326" fg:w="85"/><text x="5.0292%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (36 samples, 0.03%)</title><rect x="4.8231%" y="1109" width="0.0323%" height="15" fill="rgb(232,229,15)" fg:x="5375" fg:w="36"/><text x="5.0731%" y="1119.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (107 samples, 0.10%)</title><rect x="4.8563%" y="1125" width="0.0960%" height="15" fill="rgb(254,30,23)" fg:x="5412" fg:w="107"/><text x="5.1063%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (107 samples, 0.10%)</title><rect x="4.8563%" y="1109" width="0.0960%" height="15" fill="rgb(235,160,14)" fg:x="5412" fg:w="107"/><text x="5.1063%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (107 samples, 0.10%)</title><rect x="4.8563%" y="1093" width="0.0960%" height="15" fill="rgb(212,155,44)" fg:x="5412" fg:w="107"/><text x="5.1063%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (107 samples, 0.10%)</title><rect x="4.8563%" y="1077" width="0.0960%" height="15" fill="rgb(226,2,50)" fg:x="5412" fg:w="107"/><text x="5.1063%" y="1087.50"></text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (12 samples, 0.01%)</title><rect x="4.9524%" y="1125" width="0.0108%" height="15" fill="rgb(234,177,6)" fg:x="5519" fg:w="12"/><text x="5.2024%" y="1135.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="4.9524%" y="1109" width="0.0108%" height="15" fill="rgb(217,24,9)" fg:x="5519" fg:w="12"/><text x="5.2024%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="4.9524%" y="1093" width="0.0108%" height="15" fill="rgb(220,13,46)" fg:x="5519" fg:w="12"/><text x="5.2024%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="4.9524%" y="1077" width="0.0108%" height="15" fill="rgb(239,221,27)" fg:x="5519" fg:w="12"/><text x="5.2024%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (37 samples, 0.03%)</title><rect x="4.9631%" y="1125" width="0.0332%" height="15" fill="rgb(222,198,25)" fg:x="5531" fg:w="37"/><text x="5.2131%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (32 samples, 0.03%)</title><rect x="4.9963%" y="1125" width="0.0287%" height="15" fill="rgb(211,99,13)" fg:x="5568" fg:w="32"/><text x="5.2463%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="5.0080%" y="1109" width="0.0170%" height="15" fill="rgb(232,111,31)" fg:x="5581" fg:w="19"/><text x="5.2580%" y="1119.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="5.0080%" y="1093" width="0.0170%" height="15" fill="rgb(245,82,37)" fg:x="5581" fg:w="19"/><text x="5.2580%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="5.0080%" y="1077" width="0.0170%" height="15" fill="rgb(227,149,46)" fg:x="5581" fg:w="19"/><text x="5.2580%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="5.0080%" y="1061" width="0.0170%" height="15" fill="rgb(218,36,50)" fg:x="5581" fg:w="19"/><text x="5.2580%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (19 samples, 0.02%)</title><rect x="5.0080%" y="1045" width="0.0170%" height="15" fill="rgb(226,80,48)" fg:x="5581" fg:w="19"/><text x="5.2580%" y="1055.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (19 samples, 0.02%)</title><rect x="5.0080%" y="1029" width="0.0170%" height="15" fill="rgb(238,224,15)" fg:x="5581" fg:w="19"/><text x="5.2580%" y="1039.50"></text></g><g><title>async_ffi::FfiContext::with_context (19 samples, 0.02%)</title><rect x="5.0080%" y="1013" width="0.0170%" height="15" fill="rgb(241,136,10)" fg:x="5581" fg:w="19"/><text x="5.2580%" y="1023.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="5.0080%" y="997" width="0.0170%" height="15" fill="rgb(208,32,45)" fg:x="5581" fg:w="19"/><text x="5.2580%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIter&lt;T&gt;::drop_elements (19 samples, 0.02%)</title><rect x="5.0394%" y="1125" width="0.0170%" height="15" fill="rgb(207,135,9)" fg:x="5616" fg:w="19"/><text x="5.2894%" y="1135.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (17 samples, 0.02%)</title><rect x="5.0564%" y="1125" width="0.0153%" height="15" fill="rgb(206,86,44)" fg:x="5635" fg:w="17"/><text x="5.3064%" y="1135.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="5.0717%" y="1125" width="0.0135%" height="15" fill="rgb(245,177,15)" fg:x="5652" fg:w="15"/><text x="5.3217%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (15 samples, 0.01%)</title><rect x="5.0717%" y="1109" width="0.0135%" height="15" fill="rgb(206,64,50)" fg:x="5652" fg:w="15"/><text x="5.3217%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (15 samples, 0.01%)</title><rect x="5.0717%" y="1093" width="0.0135%" height="15" fill="rgb(234,36,40)" fg:x="5652" fg:w="15"/><text x="5.3217%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (15 samples, 0.01%)</title><rect x="5.0717%" y="1077" width="0.0135%" height="15" fill="rgb(213,64,8)" fg:x="5652" fg:w="15"/><text x="5.3217%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (15 samples, 0.01%)</title><rect x="5.0717%" y="1061" width="0.0135%" height="15" fill="rgb(210,75,36)" fg:x="5652" fg:w="15"/><text x="5.3217%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (15 samples, 0.01%)</title><rect x="5.0717%" y="1045" width="0.0135%" height="15" fill="rgb(229,88,21)" fg:x="5652" fg:w="15"/><text x="5.3217%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (15 samples, 0.01%)</title><rect x="5.0717%" y="1029" width="0.0135%" height="15" fill="rgb(252,204,47)" fg:x="5652" fg:w="15"/><text x="5.3217%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (15 samples, 0.01%)</title><rect x="5.0717%" y="1013" width="0.0135%" height="15" fill="rgb(208,77,27)" fg:x="5652" fg:w="15"/><text x="5.3217%" y="1023.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (15 samples, 0.01%)</title><rect x="5.0717%" y="997" width="0.0135%" height="15" fill="rgb(221,76,26)" fg:x="5652" fg:w="15"/><text x="5.3217%" y="1007.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (35 samples, 0.03%)</title><rect x="5.0932%" y="1125" width="0.0314%" height="15" fill="rgb(225,139,18)" fg:x="5676" fg:w="35"/><text x="5.3432%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (21 samples, 0.02%)</title><rect x="5.1058%" y="1109" width="0.0188%" height="15" fill="rgb(230,137,11)" fg:x="5690" fg:w="21"/><text x="5.3558%" y="1119.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (21 samples, 0.02%)</title><rect x="5.1058%" y="1093" width="0.0188%" height="15" fill="rgb(212,28,1)" fg:x="5690" fg:w="21"/><text x="5.3558%" y="1103.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="5.1058%" y="1077" width="0.0188%" height="15" fill="rgb(248,164,17)" fg:x="5690" fg:w="21"/><text x="5.3558%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="5.1058%" y="1061" width="0.0188%" height="15" fill="rgb(222,171,42)" fg:x="5690" fg:w="21"/><text x="5.3558%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="5.1058%" y="1045" width="0.0188%" height="15" fill="rgb(243,84,45)" fg:x="5690" fg:w="21"/><text x="5.3558%" y="1055.50"></text></g><g><title>[tremor-pdk-hashbrown] (453 samples, 0.41%)</title><rect x="4.7208%" y="1141" width="0.4065%" height="15" fill="rgb(252,49,23)" fg:x="5261" fg:w="453"/><text x="4.9708%" y="1151.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (63 samples, 0.06%)</title><rect x="5.2287%" y="1109" width="0.0565%" height="15" fill="rgb(215,19,7)" fg:x="5827" fg:w="63"/><text x="5.4787%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (25 samples, 0.02%)</title><rect x="5.2853%" y="1077" width="0.0224%" height="15" fill="rgb(238,81,41)" fg:x="5890" fg:w="25"/><text x="5.5353%" y="1087.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (25 samples, 0.02%)</title><rect x="5.2853%" y="1061" width="0.0224%" height="15" fill="rgb(210,199,37)" fg:x="5890" fg:w="25"/><text x="5.5353%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (25 samples, 0.02%)</title><rect x="5.2853%" y="1045" width="0.0224%" height="15" fill="rgb(244,192,49)" fg:x="5890" fg:w="25"/><text x="5.5353%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (25 samples, 0.02%)</title><rect x="5.2853%" y="1029" width="0.0224%" height="15" fill="rgb(226,211,11)" fg:x="5890" fg:w="25"/><text x="5.5353%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (25 samples, 0.02%)</title><rect x="5.2853%" y="1013" width="0.0224%" height="15" fill="rgb(236,162,54)" fg:x="5890" fg:w="25"/><text x="5.5353%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (25 samples, 0.02%)</title><rect x="5.2853%" y="997" width="0.0224%" height="15" fill="rgb(220,229,9)" fg:x="5890" fg:w="25"/><text x="5.5353%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (25 samples, 0.02%)</title><rect x="5.2853%" y="981" width="0.0224%" height="15" fill="rgb(250,87,22)" fg:x="5890" fg:w="25"/><text x="5.5353%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.02%)</title><rect x="5.2853%" y="965" width="0.0224%" height="15" fill="rgb(239,43,17)" fg:x="5890" fg:w="25"/><text x="5.5353%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.02%)</title><rect x="5.2853%" y="949" width="0.0224%" height="15" fill="rgb(231,177,25)" fg:x="5890" fg:w="25"/><text x="5.5353%" y="959.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.02%)</title><rect x="5.2853%" y="933" width="0.0224%" height="15" fill="rgb(219,179,1)" fg:x="5890" fg:w="25"/><text x="5.5353%" y="943.50"></text></g><g><title>__rg_alloc (25 samples, 0.02%)</title><rect x="5.2853%" y="917" width="0.0224%" height="15" fill="rgb(238,219,53)" fg:x="5890" fg:w="25"/><text x="5.5353%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (25 samples, 0.02%)</title><rect x="5.2853%" y="901" width="0.0224%" height="15" fill="rgb(232,167,36)" fg:x="5890" fg:w="25"/><text x="5.5353%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (17 samples, 0.02%)</title><rect x="5.3158%" y="1061" width="0.0153%" height="15" fill="rgb(244,19,51)" fg:x="5924" fg:w="17"/><text x="5.5658%" y="1071.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (17 samples, 0.02%)</title><rect x="5.3158%" y="1045" width="0.0153%" height="15" fill="rgb(224,6,22)" fg:x="5924" fg:w="17"/><text x="5.5658%" y="1055.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (254 samples, 0.23%)</title><rect x="5.1273%" y="1125" width="0.2279%" height="15" fill="rgb(224,145,5)" fg:x="5714" fg:w="254"/><text x="5.3773%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (78 samples, 0.07%)</title><rect x="5.2853%" y="1109" width="0.0700%" height="15" fill="rgb(234,130,49)" fg:x="5890" fg:w="78"/><text x="5.5353%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (78 samples, 0.07%)</title><rect x="5.2853%" y="1093" width="0.0700%" height="15" fill="rgb(254,6,2)" fg:x="5890" fg:w="78"/><text x="5.5353%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (53 samples, 0.05%)</title><rect x="5.3077%" y="1077" width="0.0476%" height="15" fill="rgb(208,96,46)" fg:x="5915" fg:w="53"/><text x="5.5577%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (27 samples, 0.02%)</title><rect x="5.3310%" y="1061" width="0.0242%" height="15" fill="rgb(239,3,39)" fg:x="5941" fg:w="27"/><text x="5.5810%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (27 samples, 0.02%)</title><rect x="5.3310%" y="1045" width="0.0242%" height="15" fill="rgb(233,210,1)" fg:x="5941" fg:w="27"/><text x="5.5810%" y="1055.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="5.3310%" y="1029" width="0.0242%" height="15" fill="rgb(244,137,37)" fg:x="5941" fg:w="27"/><text x="5.5810%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (36 samples, 0.03%)</title><rect x="5.3786%" y="1109" width="0.0323%" height="15" fill="rgb(240,136,2)" fg:x="5994" fg:w="36"/><text x="5.6286%" y="1119.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (36 samples, 0.03%)</title><rect x="5.3786%" y="1093" width="0.0323%" height="15" fill="rgb(239,18,37)" fg:x="5994" fg:w="36"/><text x="5.6286%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (36 samples, 0.03%)</title><rect x="5.3786%" y="1077" width="0.0323%" height="15" fill="rgb(218,185,22)" fg:x="5994" fg:w="36"/><text x="5.6286%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (36 samples, 0.03%)</title><rect x="5.3786%" y="1061" width="0.0323%" height="15" fill="rgb(225,218,4)" fg:x="5994" fg:w="36"/><text x="5.6286%" y="1071.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (65 samples, 0.06%)</title><rect x="5.3553%" y="1125" width="0.0583%" height="15" fill="rgb(230,182,32)" fg:x="5968" fg:w="65"/><text x="5.6053%" y="1135.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (36 samples, 0.03%)</title><rect x="5.4863%" y="1109" width="0.0323%" height="15" fill="rgb(242,56,43)" fg:x="6114" fg:w="36"/><text x="5.7363%" y="1119.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (115 samples, 0.10%)</title><rect x="5.4190%" y="1125" width="0.1032%" height="15" fill="rgb(233,99,24)" fg:x="6039" fg:w="115"/><text x="5.6690%" y="1135.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="5.5222%" y="1125" width="0.0260%" height="15" fill="rgb(234,209,42)" fg:x="6154" fg:w="29"/><text x="5.7722%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (16 samples, 0.01%)</title><rect x="5.8255%" y="469" width="0.0144%" height="15" fill="rgb(227,7,12)" fg:x="6492" fg:w="16"/><text x="6.0755%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.02%)</title><rect x="5.8452%" y="421" width="0.0242%" height="15" fill="rgb(245,203,43)" fg:x="6514" fg:w="27"/><text x="6.0952%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (15 samples, 0.01%)</title><rect x="5.8694%" y="421" width="0.0135%" height="15" fill="rgb(238,205,33)" fg:x="6541" fg:w="15"/><text x="6.1194%" y="431.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (14 samples, 0.01%)</title><rect x="5.8829%" y="389" width="0.0126%" height="15" fill="rgb(231,56,7)" fg:x="6556" fg:w="14"/><text x="6.1329%" y="399.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (14 samples, 0.01%)</title><rect x="5.8829%" y="373" width="0.0126%" height="15" fill="rgb(244,186,29)" fg:x="6556" fg:w="14"/><text x="6.1329%" y="383.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (14 samples, 0.01%)</title><rect x="5.8829%" y="357" width="0.0126%" height="15" fill="rgb(234,111,31)" fg:x="6556" fg:w="14"/><text x="6.1329%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (14 samples, 0.01%)</title><rect x="5.8829%" y="341" width="0.0126%" height="15" fill="rgb(241,149,10)" fg:x="6556" fg:w="14"/><text x="6.1329%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (14 samples, 0.01%)</title><rect x="5.8829%" y="325" width="0.0126%" height="15" fill="rgb(249,206,44)" fg:x="6556" fg:w="14"/><text x="6.1329%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (30 samples, 0.03%)</title><rect x="5.9349%" y="165" width="0.0269%" height="15" fill="rgb(251,153,30)" fg:x="6614" fg:w="30"/><text x="6.1849%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (30 samples, 0.03%)</title><rect x="5.9349%" y="149" width="0.0269%" height="15" fill="rgb(239,152,38)" fg:x="6614" fg:w="30"/><text x="6.1849%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (30 samples, 0.03%)</title><rect x="5.9349%" y="133" width="0.0269%" height="15" fill="rgb(249,139,47)" fg:x="6614" fg:w="30"/><text x="6.1849%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (54 samples, 0.05%)</title><rect x="5.9242%" y="197" width="0.0485%" height="15" fill="rgb(244,64,35)" fg:x="6602" fg:w="54"/><text x="6.1742%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (54 samples, 0.05%)</title><rect x="5.9242%" y="181" width="0.0485%" height="15" fill="rgb(216,46,15)" fg:x="6602" fg:w="54"/><text x="6.1742%" y="191.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="5.9618%" y="165" width="0.0108%" height="15" fill="rgb(250,74,19)" fg:x="6644" fg:w="12"/><text x="6.2118%" y="175.50"></text></g><g><title>rust_dealloc (77 samples, 0.07%)</title><rect x="5.9125%" y="261" width="0.0691%" height="15" fill="rgb(249,42,33)" fg:x="6589" fg:w="77"/><text x="6.1625%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (70 samples, 0.06%)</title><rect x="5.9188%" y="245" width="0.0628%" height="15" fill="rgb(242,149,17)" fg:x="6596" fg:w="70"/><text x="6.1688%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (64 samples, 0.06%)</title><rect x="5.9242%" y="229" width="0.0574%" height="15" fill="rgb(244,29,21)" fg:x="6602" fg:w="64"/><text x="6.1742%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (64 samples, 0.06%)</title><rect x="5.9242%" y="213" width="0.0574%" height="15" fill="rgb(220,130,37)" fg:x="6602" fg:w="64"/><text x="6.1742%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (97 samples, 0.09%)</title><rect x="5.8954%" y="325" width="0.0870%" height="15" fill="rgb(211,67,2)" fg:x="6570" fg:w="97"/><text x="6.1454%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (89 samples, 0.08%)</title><rect x="5.9026%" y="309" width="0.0799%" height="15" fill="rgb(235,68,52)" fg:x="6578" fg:w="89"/><text x="6.1526%" y="319.50"></text></g><g><title>__rg_dealloc (89 samples, 0.08%)</title><rect x="5.9026%" y="293" width="0.0799%" height="15" fill="rgb(246,142,3)" fg:x="6578" fg:w="89"/><text x="6.1526%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (89 samples, 0.08%)</title><rect x="5.9026%" y="277" width="0.0799%" height="15" fill="rgb(241,25,7)" fg:x="6578" fg:w="89"/><text x="6.1526%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (194 samples, 0.17%)</title><rect x="5.8255%" y="485" width="0.1741%" height="15" fill="rgb(242,119,39)" fg:x="6492" fg:w="194"/><text x="6.0755%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (178 samples, 0.16%)</title><rect x="5.8398%" y="469" width="0.1597%" height="15" fill="rgb(241,98,45)" fg:x="6508" fg:w="178"/><text x="6.0898%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (178 samples, 0.16%)</title><rect x="5.8398%" y="453" width="0.1597%" height="15" fill="rgb(254,28,30)" fg:x="6508" fg:w="178"/><text x="6.0898%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (178 samples, 0.16%)</title><rect x="5.8398%" y="437" width="0.1597%" height="15" fill="rgb(241,142,54)" fg:x="6508" fg:w="178"/><text x="6.0898%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (130 samples, 0.12%)</title><rect x="5.8829%" y="421" width="0.1167%" height="15" fill="rgb(222,85,15)" fg:x="6556" fg:w="130"/><text x="6.1329%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (130 samples, 0.12%)</title><rect x="5.8829%" y="405" width="0.1167%" height="15" fill="rgb(210,85,47)" fg:x="6556" fg:w="130"/><text x="6.1329%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (116 samples, 0.10%)</title><rect x="5.8954%" y="389" width="0.1041%" height="15" fill="rgb(224,206,25)" fg:x="6570" fg:w="116"/><text x="6.1454%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.10%)</title><rect x="5.8954%" y="373" width="0.1041%" height="15" fill="rgb(243,201,19)" fg:x="6570" fg:w="116"/><text x="6.1454%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (116 samples, 0.10%)</title><rect x="5.8954%" y="357" width="0.1041%" height="15" fill="rgb(236,59,4)" fg:x="6570" fg:w="116"/><text x="6.1454%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.10%)</title><rect x="5.8954%" y="341" width="0.1041%" height="15" fill="rgb(254,179,45)" fg:x="6570" fg:w="116"/><text x="6.1454%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (19 samples, 0.02%)</title><rect x="5.9825%" y="325" width="0.0170%" height="15" fill="rgb(226,14,10)" fg:x="6667" fg:w="19"/><text x="6.2325%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (81 samples, 0.07%)</title><rect x="5.9995%" y="485" width="0.0727%" height="15" fill="rgb(244,27,41)" fg:x="6686" fg:w="81"/><text x="6.2495%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (45 samples, 0.04%)</title><rect x="6.0318%" y="469" width="0.0404%" height="15" fill="rgb(235,35,32)" fg:x="6722" fg:w="45"/><text x="6.2818%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (45 samples, 0.04%)</title><rect x="6.0318%" y="453" width="0.0404%" height="15" fill="rgb(218,68,31)" fg:x="6722" fg:w="45"/><text x="6.2818%" y="463.50"></text></g><g><title>rust_alloc (25 samples, 0.02%)</title><rect x="6.0929%" y="293" width="0.0224%" height="15" fill="rgb(207,120,37)" fg:x="6790" fg:w="25"/><text x="6.3429%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::empty (47 samples, 0.04%)</title><rect x="6.1368%" y="277" width="0.0422%" height="15" fill="rgb(227,98,0)" fg:x="6839" fg:w="47"/><text x="6.3868%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (47 samples, 0.04%)</title><rect x="6.1368%" y="261" width="0.0422%" height="15" fill="rgb(207,7,3)" fg:x="6839" fg:w="47"/><text x="6.3868%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (437 samples, 0.39%)</title><rect x="6.0929%" y="325" width="0.3921%" height="15" fill="rgb(206,98,19)" fg:x="6790" fg:w="437"/><text x="6.3429%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (437 samples, 0.39%)</title><rect x="6.0929%" y="309" width="0.3921%" height="15" fill="rgb(217,5,26)" fg:x="6790" fg:w="437"/><text x="6.3429%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (407 samples, 0.37%)</title><rect x="6.1198%" y="293" width="0.3652%" height="15" fill="rgb(235,190,38)" fg:x="6820" fg:w="407"/><text x="6.3698%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (341 samples, 0.31%)</title><rect x="6.1790%" y="277" width="0.3060%" height="15" fill="rgb(247,86,24)" fg:x="6886" fg:w="341"/><text x="6.4290%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (341 samples, 0.31%)</title><rect x="6.1790%" y="261" width="0.3060%" height="15" fill="rgb(205,101,16)" fg:x="6886" fg:w="341"/><text x="6.4290%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (462 samples, 0.41%)</title><rect x="6.0722%" y="421" width="0.4146%" height="15" fill="rgb(246,168,33)" fg:x="6767" fg:w="462"/><text x="6.3222%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (462 samples, 0.41%)</title><rect x="6.0722%" y="405" width="0.4146%" height="15" fill="rgb(231,114,1)" fg:x="6767" fg:w="462"/><text x="6.3222%" y="415.50"></text></g><g><title>alloc::alloc::alloc (450 samples, 0.40%)</title><rect x="6.0830%" y="389" width="0.4038%" height="15" fill="rgb(207,184,53)" fg:x="6779" fg:w="450"/><text x="6.3330%" y="399.50"></text></g><g><title>__rg_alloc (450 samples, 0.40%)</title><rect x="6.0830%" y="373" width="0.4038%" height="15" fill="rgb(224,95,51)" fg:x="6779" fg:w="450"/><text x="6.3330%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (450 samples, 0.40%)</title><rect x="6.0830%" y="357" width="0.4038%" height="15" fill="rgb(212,188,45)" fg:x="6779" fg:w="450"/><text x="6.3330%" y="367.50"></text></g><g><title>rust_alloc (443 samples, 0.40%)</title><rect x="6.0893%" y="341" width="0.3975%" height="15" fill="rgb(223,154,38)" fg:x="6786" fg:w="443"/><text x="6.3393%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (481 samples, 0.43%)</title><rect x="6.0722%" y="437" width="0.4316%" height="15" fill="rgb(251,22,52)" fg:x="6767" fg:w="481"/><text x="6.3222%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (19 samples, 0.02%)</title><rect x="6.4868%" y="421" width="0.0170%" height="15" fill="rgb(229,209,22)" fg:x="7229" fg:w="19"/><text x="6.7368%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (19 samples, 0.02%)</title><rect x="6.4868%" y="405" width="0.0170%" height="15" fill="rgb(234,138,34)" fg:x="7229" fg:w="19"/><text x="6.7368%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (19 samples, 0.02%)</title><rect x="6.4868%" y="389" width="0.0170%" height="15" fill="rgb(212,95,11)" fg:x="7229" fg:w="19"/><text x="6.7368%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (489 samples, 0.44%)</title><rect x="6.0722%" y="485" width="0.4388%" height="15" fill="rgb(240,179,47)" fg:x="6767" fg:w="489"/><text x="6.3222%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (489 samples, 0.44%)</title><rect x="6.0722%" y="469" width="0.4388%" height="15" fill="rgb(240,163,11)" fg:x="6767" fg:w="489"/><text x="6.3222%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (489 samples, 0.44%)</title><rect x="6.0722%" y="453" width="0.4388%" height="15" fill="rgb(236,37,12)" fg:x="6767" fg:w="489"/><text x="6.3222%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (892 samples, 0.80%)</title><rect x="5.7160%" y="629" width="0.8004%" height="15" fill="rgb(232,164,16)" fg:x="6370" fg:w="892"/><text x="5.9660%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (892 samples, 0.80%)</title><rect x="5.7160%" y="613" width="0.8004%" height="15" fill="rgb(244,205,15)" fg:x="6370" fg:w="892"/><text x="5.9660%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (892 samples, 0.80%)</title><rect x="5.7160%" y="597" width="0.8004%" height="15" fill="rgb(223,117,47)" fg:x="6370" fg:w="892"/><text x="5.9660%" y="607.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (892 samples, 0.80%)</title><rect x="5.7160%" y="581" width="0.8004%" height="15" fill="rgb(244,107,35)" fg:x="6370" fg:w="892"/><text x="5.9660%" y="591.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (892 samples, 0.80%)</title><rect x="5.7160%" y="565" width="0.8004%" height="15" fill="rgb(205,140,8)" fg:x="6370" fg:w="892"/><text x="5.9660%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (892 samples, 0.80%)</title><rect x="5.7160%" y="549" width="0.8004%" height="15" fill="rgb(228,84,46)" fg:x="6370" fg:w="892"/><text x="5.9660%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (892 samples, 0.80%)</title><rect x="5.7160%" y="533" width="0.8004%" height="15" fill="rgb(254,188,9)" fg:x="6370" fg:w="892"/><text x="5.9660%" y="543.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (892 samples, 0.80%)</title><rect x="5.7160%" y="517" width="0.8004%" height="15" fill="rgb(206,112,54)" fg:x="6370" fg:w="892"/><text x="5.9660%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (777 samples, 0.70%)</title><rect x="5.8192%" y="501" width="0.6972%" height="15" fill="rgb(216,84,49)" fg:x="6485" fg:w="777"/><text x="6.0692%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (958 samples, 0.86%)</title><rect x="6.5595%" y="597" width="0.8596%" height="15" fill="rgb(214,194,35)" fg:x="7310" fg:w="958"/><text x="6.8095%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (16 samples, 0.01%)</title><rect x="7.4469%" y="533" width="0.0144%" height="15" fill="rgb(249,28,3)" fg:x="8299" fg:w="16"/><text x="7.6969%" y="543.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (16 samples, 0.01%)</title><rect x="7.4469%" y="517" width="0.0144%" height="15" fill="rgb(222,56,52)" fg:x="8299" fg:w="16"/><text x="7.6969%" y="527.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (16 samples, 0.01%)</title><rect x="7.4469%" y="501" width="0.0144%" height="15" fill="rgb(245,217,50)" fg:x="8299" fg:w="16"/><text x="7.6969%" y="511.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (16 samples, 0.01%)</title><rect x="7.4469%" y="485" width="0.0144%" height="15" fill="rgb(213,201,24)" fg:x="8299" fg:w="16"/><text x="7.6969%" y="495.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (16 samples, 0.01%)</title><rect x="7.4469%" y="469" width="0.0144%" height="15" fill="rgb(248,116,28)" fg:x="8299" fg:w="16"/><text x="7.6969%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (13 samples, 0.01%)</title><rect x="7.4640%" y="469" width="0.0117%" height="15" fill="rgb(219,72,43)" fg:x="8318" fg:w="13"/><text x="7.7140%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (13 samples, 0.01%)</title><rect x="7.4640%" y="453" width="0.0117%" height="15" fill="rgb(209,138,14)" fg:x="8318" fg:w="13"/><text x="7.7140%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (18 samples, 0.02%)</title><rect x="7.4640%" y="485" width="0.0162%" height="15" fill="rgb(222,18,33)" fg:x="8318" fg:w="18"/><text x="7.7140%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (23 samples, 0.02%)</title><rect x="7.4622%" y="501" width="0.0206%" height="15" fill="rgb(213,199,7)" fg:x="8316" fg:w="23"/><text x="7.7122%" y="511.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (14 samples, 0.01%)</title><rect x="7.4882%" y="485" width="0.0126%" height="15" fill="rgb(250,110,10)" fg:x="8345" fg:w="14"/><text x="7.7382%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (136 samples, 0.12%)</title><rect x="7.4613%" y="533" width="0.1220%" height="15" fill="rgb(248,123,6)" fg:x="8315" fg:w="136"/><text x="7.7113%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (136 samples, 0.12%)</title><rect x="7.4613%" y="517" width="0.1220%" height="15" fill="rgb(206,91,31)" fg:x="8315" fg:w="136"/><text x="7.7113%" y="527.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (112 samples, 0.10%)</title><rect x="7.4828%" y="501" width="0.1005%" height="15" fill="rgb(211,154,13)" fg:x="8339" fg:w="112"/><text x="7.7328%" y="511.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (92 samples, 0.08%)</title><rect x="7.5008%" y="485" width="0.0826%" height="15" fill="rgb(225,148,7)" fg:x="8359" fg:w="92"/><text x="7.7508%" y="495.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (92 samples, 0.08%)</title><rect x="7.5008%" y="469" width="0.0826%" height="15" fill="rgb(220,160,43)" fg:x="8359" fg:w="92"/><text x="7.7508%" y="479.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (92 samples, 0.08%)</title><rect x="7.5008%" y="453" width="0.0826%" height="15" fill="rgb(213,52,39)" fg:x="8359" fg:w="92"/><text x="7.7508%" y="463.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (13 samples, 0.01%)</title><rect x="7.5941%" y="501" width="0.0117%" height="15" fill="rgb(243,137,7)" fg:x="8463" fg:w="13"/><text x="7.8441%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (13 samples, 0.01%)</title><rect x="7.5941%" y="485" width="0.0117%" height="15" fill="rgb(230,79,13)" fg:x="8463" fg:w="13"/><text x="7.8441%" y="495.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="7.5941%" y="469" width="0.0117%" height="15" fill="rgb(247,105,23)" fg:x="8463" fg:w="13"/><text x="7.8441%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (17 samples, 0.02%)</title><rect x="7.6058%" y="501" width="0.0153%" height="15" fill="rgb(223,179,41)" fg:x="8476" fg:w="17"/><text x="7.8558%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (17 samples, 0.02%)</title><rect x="7.6058%" y="485" width="0.0153%" height="15" fill="rgb(218,9,34)" fg:x="8476" fg:w="17"/><text x="7.8558%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="7.5833%" y="533" width="0.0386%" height="15" fill="rgb(222,106,8)" fg:x="8451" fg:w="43"/><text x="7.8333%" y="543.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (33 samples, 0.03%)</title><rect x="7.5923%" y="517" width="0.0296%" height="15" fill="rgb(211,220,0)" fg:x="8461" fg:w="33"/><text x="7.8423%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (19 samples, 0.02%)</title><rect x="7.6327%" y="485" width="0.0170%" height="15" fill="rgb(229,52,16)" fg:x="8506" fg:w="19"/><text x="7.8827%" y="495.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (17 samples, 0.02%)</title><rect x="7.6345%" y="469" width="0.0153%" height="15" fill="rgb(212,155,18)" fg:x="8508" fg:w="17"/><text x="7.8845%" y="479.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (13 samples, 0.01%)</title><rect x="7.6381%" y="453" width="0.0117%" height="15" fill="rgb(242,21,14)" fg:x="8512" fg:w="13"/><text x="7.8881%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="7.6219%" y="533" width="0.0386%" height="15" fill="rgb(222,19,48)" fg:x="8494" fg:w="43"/><text x="7.8719%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="7.6273%" y="517" width="0.0332%" height="15" fill="rgb(232,45,27)" fg:x="8500" fg:w="37"/><text x="7.8773%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (32 samples, 0.03%)</title><rect x="7.6318%" y="501" width="0.0287%" height="15" fill="rgb(249,103,42)" fg:x="8505" fg:w="32"/><text x="7.8818%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="7.6497%" y="485" width="0.0108%" height="15" fill="rgb(246,81,33)" fg:x="8525" fg:w="12"/><text x="7.8997%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::empty (23 samples, 0.02%)</title><rect x="7.6605%" y="533" width="0.0206%" height="15" fill="rgb(252,33,42)" fg:x="8537" fg:w="23"/><text x="7.9105%" y="543.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (23 samples, 0.02%)</title><rect x="7.6605%" y="517" width="0.0206%" height="15" fill="rgb(209,212,41)" fg:x="8537" fg:w="23"/><text x="7.9105%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (559 samples, 0.50%)</title><rect x="7.4209%" y="581" width="0.5016%" height="15" fill="rgb(207,154,6)" fg:x="8270" fg:w="559"/><text x="7.6709%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (547 samples, 0.49%)</title><rect x="7.4317%" y="565" width="0.4908%" height="15" fill="rgb(223,64,47)" fg:x="8282" fg:w="547"/><text x="7.6817%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (537 samples, 0.48%)</title><rect x="7.4406%" y="549" width="0.4819%" height="15" fill="rgb(211,161,38)" fg:x="8292" fg:w="537"/><text x="7.6906%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::take (269 samples, 0.24%)</title><rect x="7.6811%" y="533" width="0.2414%" height="15" fill="rgb(219,138,40)" fg:x="8560" fg:w="269"/><text x="7.9311%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (269 samples, 0.24%)</title><rect x="7.6811%" y="517" width="0.2414%" height="15" fill="rgb(241,228,46)" fg:x="8560" fg:w="269"/><text x="7.9311%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (2,464 samples, 2.21%)</title><rect x="5.7160%" y="981" width="2.2110%" height="15" fill="rgb(223,209,38)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="991.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,464 samples, 2.21%)</title><rect x="5.7160%" y="965" width="2.2110%" height="15" fill="rgb(236,164,45)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="975.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (2,464 samples, 2.21%)</title><rect x="5.7160%" y="949" width="2.2110%" height="15" fill="rgb(231,15,5)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="959.50">t..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,464 samples, 2.21%)</title><rect x="5.7160%" y="933" width="2.2110%" height="15" fill="rgb(252,35,15)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="943.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,464 samples, 2.21%)</title><rect x="5.7160%" y="917" width="2.2110%" height="15" fill="rgb(248,181,18)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="927.50">&lt;..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (2,464 samples, 2.21%)</title><rect x="5.7160%" y="901" width="2.2110%" height="15" fill="rgb(233,39,42)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="911.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,464 samples, 2.21%)</title><rect x="5.7160%" y="885" width="2.2110%" height="15" fill="rgb(238,110,33)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="895.50">&lt;..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (2,464 samples, 2.21%)</title><rect x="5.7160%" y="869" width="2.2110%" height="15" fill="rgb(233,195,10)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="879.50">a..</text></g><g><title>std::panic::catch_unwind (2,464 samples, 2.21%)</title><rect x="5.7160%" y="853" width="2.2110%" height="15" fill="rgb(254,105,3)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="863.50">s..</text></g><g><title>std::panicking::try (2,464 samples, 2.21%)</title><rect x="5.7160%" y="837" width="2.2110%" height="15" fill="rgb(221,225,9)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="847.50">s..</text></g><g><title>std::panicking::try::do_call (2,464 samples, 2.21%)</title><rect x="5.7160%" y="821" width="2.2110%" height="15" fill="rgb(224,227,45)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="831.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,464 samples, 2.21%)</title><rect x="5.7160%" y="805" width="2.2110%" height="15" fill="rgb(229,198,43)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="815.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once (2,464 samples, 2.21%)</title><rect x="5.7160%" y="789" width="2.2110%" height="15" fill="rgb(206,209,35)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="799.50">c..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (2,464 samples, 2.21%)</title><rect x="5.7160%" y="773" width="2.2110%" height="15" fill="rgb(245,195,53)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="783.50">a..</text></g><g><title>async_ffi::FfiContext::with_context (2,464 samples, 2.21%)</title><rect x="5.7160%" y="757" width="2.2110%" height="15" fill="rgb(240,92,26)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="767.50">a..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (2,464 samples, 2.21%)</title><rect x="5.7160%" y="741" width="2.2110%" height="15" fill="rgb(207,40,23)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="751.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,464 samples, 2.21%)</title><rect x="5.7160%" y="725" width="2.2110%" height="15" fill="rgb(223,111,35)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="735.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (2,464 samples, 2.21%)</title><rect x="5.7160%" y="709" width="2.2110%" height="15" fill="rgb(229,147,28)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="719.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (2,464 samples, 2.21%)</title><rect x="5.7160%" y="693" width="2.2110%" height="15" fill="rgb(211,29,28)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="703.50">t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (2,464 samples, 2.21%)</title><rect x="5.7160%" y="677" width="2.2110%" height="15" fill="rgb(228,72,33)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="687.50">t..</text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (2,464 samples, 2.21%)</title><rect x="5.7160%" y="661" width="2.2110%" height="15" fill="rgb(205,214,31)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="671.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (2,464 samples, 2.21%)</title><rect x="5.7160%" y="645" width="2.2110%" height="15" fill="rgb(224,111,15)" fg:x="6370" fg:w="2464"/><text x="5.9660%" y="655.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,572 samples, 1.41%)</title><rect x="6.5164%" y="629" width="1.4106%" height="15" fill="rgb(253,21,26)" fg:x="7262" fg:w="1572"/><text x="6.7664%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (1,572 samples, 1.41%)</title><rect x="6.5164%" y="613" width="1.4106%" height="15" fill="rgb(245,139,43)" fg:x="7262" fg:w="1572"/><text x="6.7664%" y="623.50"></text></g><g><title>rust_alloc (566 samples, 0.51%)</title><rect x="7.4191%" y="597" width="0.5079%" height="15" fill="rgb(252,170,7)" fg:x="8268" fg:w="566"/><text x="7.6691%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="7.9270%" y="933" width="0.0153%" height="15" fill="rgb(231,118,14)" fg:x="8834" fg:w="17"/><text x="8.1770%" y="943.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (17 samples, 0.02%)</title><rect x="7.9270%" y="917" width="0.0153%" height="15" fill="rgb(238,83,0)" fg:x="8834" fg:w="17"/><text x="8.1770%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="7.9270%" y="901" width="0.0153%" height="15" fill="rgb(221,39,39)" fg:x="8834" fg:w="17"/><text x="8.1770%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (17 samples, 0.02%)</title><rect x="7.9270%" y="885" width="0.0153%" height="15" fill="rgb(222,119,46)" fg:x="8834" fg:w="17"/><text x="8.1770%" y="895.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="7.9270%" y="869" width="0.0153%" height="15" fill="rgb(222,165,49)" fg:x="8834" fg:w="17"/><text x="8.1770%" y="879.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (17 samples, 0.02%)</title><rect x="7.9270%" y="853" width="0.0153%" height="15" fill="rgb(219,113,52)" fg:x="8834" fg:w="17"/><text x="8.1770%" y="863.50"></text></g><g><title>event_listener::Event::notify (17 samples, 0.02%)</title><rect x="7.9270%" y="837" width="0.0153%" height="15" fill="rgb(214,7,15)" fg:x="8834" fg:w="17"/><text x="8.1770%" y="847.50"></text></g><g><title>event_listener::List::notify (17 samples, 0.02%)</title><rect x="7.9270%" y="821" width="0.0153%" height="15" fill="rgb(235,32,4)" fg:x="8834" fg:w="17"/><text x="8.1770%" y="831.50"></text></g><g><title>core::task::wake::Waker::wake (17 samples, 0.02%)</title><rect x="7.9270%" y="805" width="0.0153%" height="15" fill="rgb(238,90,54)" fg:x="8834" fg:w="17"/><text x="8.1770%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (17 samples, 0.02%)</title><rect x="7.9270%" y="789" width="0.0153%" height="15" fill="rgb(213,208,19)" fg:x="8834" fg:w="17"/><text x="8.1770%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (17 samples, 0.02%)</title><rect x="7.9270%" y="773" width="0.0153%" height="15" fill="rgb(233,156,4)" fg:x="8834" fg:w="17"/><text x="8.1770%" y="783.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (15 samples, 0.01%)</title><rect x="7.9288%" y="757" width="0.0135%" height="15" fill="rgb(207,194,5)" fg:x="8836" fg:w="15"/><text x="8.1788%" y="767.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (15 samples, 0.01%)</title><rect x="7.9288%" y="741" width="0.0135%" height="15" fill="rgb(206,111,30)" fg:x="8836" fg:w="15"/><text x="8.1788%" y="751.50"></text></g><g><title>async_io::reactor::Reactor::notify (15 samples, 0.01%)</title><rect x="7.9288%" y="725" width="0.0135%" height="15" fill="rgb(243,70,54)" fg:x="8836" fg:w="15"/><text x="8.1788%" y="735.50"></text></g><g><title>polling::Poller::notify (15 samples, 0.01%)</title><rect x="7.9288%" y="709" width="0.0135%" height="15" fill="rgb(242,28,8)" fg:x="8836" fg:w="15"/><text x="8.1788%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (14 samples, 0.01%)</title><rect x="7.9422%" y="469" width="0.0126%" height="15" fill="rgb(219,106,18)" fg:x="8851" fg:w="14"/><text x="8.1922%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (71 samples, 0.06%)</title><rect x="7.9422%" y="501" width="0.0637%" height="15" fill="rgb(244,222,10)" fg:x="8851" fg:w="71"/><text x="8.1922%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (71 samples, 0.06%)</title><rect x="7.9422%" y="485" width="0.0637%" height="15" fill="rgb(236,179,52)" fg:x="8851" fg:w="71"/><text x="8.1922%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (57 samples, 0.05%)</title><rect x="7.9548%" y="469" width="0.0511%" height="15" fill="rgb(213,23,39)" fg:x="8865" fg:w="57"/><text x="8.2048%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (51 samples, 0.05%)</title><rect x="7.9602%" y="453" width="0.0458%" height="15" fill="rgb(238,48,10)" fg:x="8871" fg:w="51"/><text x="8.2102%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (51 samples, 0.05%)</title><rect x="7.9602%" y="437" width="0.0458%" height="15" fill="rgb(251,196,23)" fg:x="8871" fg:w="51"/><text x="8.2102%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (51 samples, 0.05%)</title><rect x="7.9602%" y="421" width="0.0458%" height="15" fill="rgb(250,152,24)" fg:x="8871" fg:w="51"/><text x="8.2102%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (83 samples, 0.07%)</title><rect x="7.9422%" y="805" width="0.0745%" height="15" fill="rgb(209,150,17)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="815.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (83 samples, 0.07%)</title><rect x="7.9422%" y="789" width="0.0745%" height="15" fill="rgb(234,202,34)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (83 samples, 0.07%)</title><rect x="7.9422%" y="773" width="0.0745%" height="15" fill="rgb(253,148,53)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (83 samples, 0.07%)</title><rect x="7.9422%" y="757" width="0.0745%" height="15" fill="rgb(218,129,16)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (83 samples, 0.07%)</title><rect x="7.9422%" y="741" width="0.0745%" height="15" fill="rgb(216,85,19)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (83 samples, 0.07%)</title><rect x="7.9422%" y="725" width="0.0745%" height="15" fill="rgb(235,228,7)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (83 samples, 0.07%)</title><rect x="7.9422%" y="709" width="0.0745%" height="15" fill="rgb(245,175,0)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (83 samples, 0.07%)</title><rect x="7.9422%" y="693" width="0.0745%" height="15" fill="rgb(208,168,36)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (83 samples, 0.07%)</title><rect x="7.9422%" y="677" width="0.0745%" height="15" fill="rgb(246,171,24)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (83 samples, 0.07%)</title><rect x="7.9422%" y="661" width="0.0745%" height="15" fill="rgb(215,142,24)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (83 samples, 0.07%)</title><rect x="7.9422%" y="645" width="0.0745%" height="15" fill="rgb(250,187,7)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (83 samples, 0.07%)</title><rect x="7.9422%" y="629" width="0.0745%" height="15" fill="rgb(228,66,33)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="639.50"></text></g><g><title>alloc::alloc::alloc (83 samples, 0.07%)</title><rect x="7.9422%" y="613" width="0.0745%" height="15" fill="rgb(234,215,21)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="623.50"></text></g><g><title>__rg_alloc (83 samples, 0.07%)</title><rect x="7.9422%" y="597" width="0.0745%" height="15" fill="rgb(222,191,20)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (83 samples, 0.07%)</title><rect x="7.9422%" y="581" width="0.0745%" height="15" fill="rgb(245,79,54)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="591.50"></text></g><g><title>rust_alloc (83 samples, 0.07%)</title><rect x="7.9422%" y="565" width="0.0745%" height="15" fill="rgb(240,10,37)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (83 samples, 0.07%)</title><rect x="7.9422%" y="549" width="0.0745%" height="15" fill="rgb(214,192,32)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (83 samples, 0.07%)</title><rect x="7.9422%" y="533" width="0.0745%" height="15" fill="rgb(209,36,54)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (83 samples, 0.07%)</title><rect x="7.9422%" y="517" width="0.0745%" height="15" fill="rgb(220,10,11)" fg:x="8851" fg:w="83"/><text x="8.1922%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="8.0060%" y="501" width="0.0108%" height="15" fill="rgb(221,106,17)" fg:x="8922" fg:w="12"/><text x="8.2560%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="8.0060%" y="485" width="0.0108%" height="15" fill="rgb(251,142,44)" fg:x="8922" fg:w="12"/><text x="8.2560%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="8.0060%" y="469" width="0.0108%" height="15" fill="rgb(238,13,15)" fg:x="8922" fg:w="12"/><text x="8.2560%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="8.0167%" y="613" width="0.0386%" height="15" fill="rgb(208,107,27)" fg:x="8934" fg:w="43"/><text x="8.2667%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (43 samples, 0.04%)</title><rect x="8.0167%" y="597" width="0.0386%" height="15" fill="rgb(205,136,37)" fg:x="8934" fg:w="43"/><text x="8.2667%" y="607.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (35 samples, 0.03%)</title><rect x="8.0239%" y="581" width="0.0314%" height="15" fill="rgb(250,205,27)" fg:x="8942" fg:w="35"/><text x="8.2739%" y="591.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (25 samples, 0.02%)</title><rect x="8.0329%" y="565" width="0.0224%" height="15" fill="rgb(210,80,43)" fg:x="8952" fg:w="25"/><text x="8.2829%" y="575.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (25 samples, 0.02%)</title><rect x="8.0329%" y="549" width="0.0224%" height="15" fill="rgb(247,160,36)" fg:x="8952" fg:w="25"/><text x="8.2829%" y="559.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (25 samples, 0.02%)</title><rect x="8.0329%" y="533" width="0.0224%" height="15" fill="rgb(234,13,49)" fg:x="8952" fg:w="25"/><text x="8.2829%" y="543.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (130 samples, 0.12%)</title><rect x="7.9422%" y="917" width="0.1167%" height="15" fill="rgb(234,122,0)" fg:x="8851" fg:w="130"/><text x="8.1922%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (130 samples, 0.12%)</title><rect x="7.9422%" y="901" width="0.1167%" height="15" fill="rgb(207,146,38)" fg:x="8851" fg:w="130"/><text x="8.1922%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (130 samples, 0.12%)</title><rect x="7.9422%" y="885" width="0.1167%" height="15" fill="rgb(207,177,25)" fg:x="8851" fg:w="130"/><text x="8.1922%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (130 samples, 0.12%)</title><rect x="7.9422%" y="869" width="0.1167%" height="15" fill="rgb(211,178,42)" fg:x="8851" fg:w="130"/><text x="8.1922%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (130 samples, 0.12%)</title><rect x="7.9422%" y="853" width="0.1167%" height="15" fill="rgb(230,69,54)" fg:x="8851" fg:w="130"/><text x="8.1922%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (130 samples, 0.12%)</title><rect x="7.9422%" y="837" width="0.1167%" height="15" fill="rgb(214,135,41)" fg:x="8851" fg:w="130"/><text x="8.1922%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (130 samples, 0.12%)</title><rect x="7.9422%" y="821" width="0.1167%" height="15" fill="rgb(237,67,25)" fg:x="8851" fg:w="130"/><text x="8.1922%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (47 samples, 0.04%)</title><rect x="8.0167%" y="805" width="0.0422%" height="15" fill="rgb(222,189,50)" fg:x="8934" fg:w="47"/><text x="8.2667%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (47 samples, 0.04%)</title><rect x="8.0167%" y="789" width="0.0422%" height="15" fill="rgb(245,148,34)" fg:x="8934" fg:w="47"/><text x="8.2667%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (47 samples, 0.04%)</title><rect x="8.0167%" y="773" width="0.0422%" height="15" fill="rgb(222,29,6)" fg:x="8934" fg:w="47"/><text x="8.2667%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (47 samples, 0.04%)</title><rect x="8.0167%" y="757" width="0.0422%" height="15" fill="rgb(221,189,43)" fg:x="8934" fg:w="47"/><text x="8.2667%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (47 samples, 0.04%)</title><rect x="8.0167%" y="741" width="0.0422%" height="15" fill="rgb(207,36,27)" fg:x="8934" fg:w="47"/><text x="8.2667%" y="751.50"></text></g><g><title>alloc::alloc::alloc (47 samples, 0.04%)</title><rect x="8.0167%" y="725" width="0.0422%" height="15" fill="rgb(217,90,24)" fg:x="8934" fg:w="47"/><text x="8.2667%" y="735.50"></text></g><g><title>__rg_alloc (47 samples, 0.04%)</title><rect x="8.0167%" y="709" width="0.0422%" height="15" fill="rgb(224,66,35)" fg:x="8934" fg:w="47"/><text x="8.2667%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (47 samples, 0.04%)</title><rect x="8.0167%" y="693" width="0.0422%" height="15" fill="rgb(221,13,50)" fg:x="8934" fg:w="47"/><text x="8.2667%" y="703.50"></text></g><g><title>rust_alloc (47 samples, 0.04%)</title><rect x="8.0167%" y="677" width="0.0422%" height="15" fill="rgb(236,68,49)" fg:x="8934" fg:w="47"/><text x="8.2667%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="8.0167%" y="661" width="0.0422%" height="15" fill="rgb(229,146,28)" fg:x="8934" fg:w="47"/><text x="8.2667%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="8.0167%" y="645" width="0.0422%" height="15" fill="rgb(225,31,38)" fg:x="8934" fg:w="47"/><text x="8.2667%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="8.0167%" y="629" width="0.0422%" height="15" fill="rgb(250,208,3)" fg:x="8934" fg:w="47"/><text x="8.2667%" y="639.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (311 samples, 0.28%)</title><rect x="8.2967%" y="901" width="0.2791%" height="15" fill="rgb(246,54,23)" fg:x="9246" fg:w="311"/><text x="8.5467%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (55 samples, 0.05%)</title><rect x="8.5991%" y="757" width="0.0494%" height="15" fill="rgb(243,76,11)" fg:x="9583" fg:w="55"/><text x="8.8491%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="8.6090%" y="741" width="0.0395%" height="15" fill="rgb(245,21,50)" fg:x="9594" fg:w="44"/><text x="8.8590%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="8.6117%" y="725" width="0.0368%" height="15" fill="rgb(228,9,43)" fg:x="9597" fg:w="41"/><text x="8.8617%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::take (27 samples, 0.02%)</title><rect x="8.6242%" y="709" width="0.0242%" height="15" fill="rgb(208,100,47)" fg:x="9611" fg:w="27"/><text x="8.8742%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (27 samples, 0.02%)</title><rect x="8.6242%" y="693" width="0.0242%" height="15" fill="rgb(232,26,8)" fg:x="9611" fg:w="27"/><text x="8.8742%" y="703.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (88 samples, 0.08%)</title><rect x="8.5758%" y="901" width="0.0790%" height="15" fill="rgb(216,166,38)" fg:x="9557" fg:w="88"/><text x="8.8258%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (88 samples, 0.08%)</title><rect x="8.5758%" y="885" width="0.0790%" height="15" fill="rgb(251,202,51)" fg:x="9557" fg:w="88"/><text x="8.8258%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (73 samples, 0.07%)</title><rect x="8.5892%" y="869" width="0.0655%" height="15" fill="rgb(254,216,34)" fg:x="9572" fg:w="73"/><text x="8.8392%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (73 samples, 0.07%)</title><rect x="8.5892%" y="853" width="0.0655%" height="15" fill="rgb(251,32,27)" fg:x="9572" fg:w="73"/><text x="8.8392%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (73 samples, 0.07%)</title><rect x="8.5892%" y="837" width="0.0655%" height="15" fill="rgb(208,127,28)" fg:x="9572" fg:w="73"/><text x="8.8392%" y="847.50"></text></g><g><title>alloc::alloc::alloc (71 samples, 0.06%)</title><rect x="8.5910%" y="821" width="0.0637%" height="15" fill="rgb(224,137,22)" fg:x="9574" fg:w="71"/><text x="8.8410%" y="831.50"></text></g><g><title>__rg_alloc (71 samples, 0.06%)</title><rect x="8.5910%" y="805" width="0.0637%" height="15" fill="rgb(254,70,32)" fg:x="9574" fg:w="71"/><text x="8.8410%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (71 samples, 0.06%)</title><rect x="8.5910%" y="789" width="0.0637%" height="15" fill="rgb(229,75,37)" fg:x="9574" fg:w="71"/><text x="8.8410%" y="799.50"></text></g><g><title>rust_alloc (64 samples, 0.06%)</title><rect x="8.5973%" y="773" width="0.0574%" height="15" fill="rgb(252,64,23)" fg:x="9581" fg:w="64"/><text x="8.8473%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (89 samples, 0.08%)</title><rect x="8.6547%" y="901" width="0.0799%" height="15" fill="rgb(232,162,48)" fg:x="9645" fg:w="89"/><text x="8.9047%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (89 samples, 0.08%)</title><rect x="8.6547%" y="885" width="0.0799%" height="15" fill="rgb(246,160,12)" fg:x="9645" fg:w="89"/><text x="8.9047%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (89 samples, 0.08%)</title><rect x="8.6547%" y="869" width="0.0799%" height="15" fill="rgb(247,166,0)" fg:x="9645" fg:w="89"/><text x="8.9047%" y="879.50"></text></g><g><title>alloc::alloc::alloc (89 samples, 0.08%)</title><rect x="8.6547%" y="853" width="0.0799%" height="15" fill="rgb(249,219,21)" fg:x="9645" fg:w="89"/><text x="8.9047%" y="863.50"></text></g><g><title>__rg_alloc (89 samples, 0.08%)</title><rect x="8.6547%" y="837" width="0.0799%" height="15" fill="rgb(205,209,3)" fg:x="9645" fg:w="89"/><text x="8.9047%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (89 samples, 0.08%)</title><rect x="8.6547%" y="821" width="0.0799%" height="15" fill="rgb(243,44,1)" fg:x="9645" fg:w="89"/><text x="8.9047%" y="831.50"></text></g><g><title>rust_alloc (82 samples, 0.07%)</title><rect x="8.6610%" y="805" width="0.0736%" height="15" fill="rgb(206,159,16)" fg:x="9652" fg:w="82"/><text x="8.9110%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (78 samples, 0.07%)</title><rect x="8.6646%" y="789" width="0.0700%" height="15" fill="rgb(244,77,30)" fg:x="9656" fg:w="78"/><text x="8.9146%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (78 samples, 0.07%)</title><rect x="8.6646%" y="773" width="0.0700%" height="15" fill="rgb(218,69,12)" fg:x="9656" fg:w="78"/><text x="8.9146%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (68 samples, 0.06%)</title><rect x="8.6736%" y="757" width="0.0610%" height="15" fill="rgb(212,87,7)" fg:x="9666" fg:w="68"/><text x="8.9236%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (60 samples, 0.05%)</title><rect x="8.6807%" y="741" width="0.0538%" height="15" fill="rgb(245,114,25)" fg:x="9674" fg:w="60"/><text x="8.9307%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (60 samples, 0.05%)</title><rect x="8.6807%" y="725" width="0.0538%" height="15" fill="rgb(210,61,42)" fg:x="9674" fg:w="60"/><text x="8.9307%" y="735.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (16 samples, 0.01%)</title><rect x="9.0460%" y="885" width="0.0144%" height="15" fill="rgb(211,52,33)" fg:x="10081" fg:w="16"/><text x="9.2960%" y="895.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="9.0908%" y="869" width="0.0170%" height="15" fill="rgb(234,58,33)" fg:x="10131" fg:w="19"/><text x="9.3408%" y="879.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (19 samples, 0.02%)</title><rect x="9.0908%" y="853" width="0.0170%" height="15" fill="rgb(220,115,36)" fg:x="10131" fg:w="19"/><text x="9.3408%" y="863.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (55 samples, 0.05%)</title><rect x="9.0603%" y="885" width="0.0494%" height="15" fill="rgb(243,153,54)" fg:x="10097" fg:w="55"/><text x="9.3103%" y="895.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (12 samples, 0.01%)</title><rect x="9.1097%" y="885" width="0.0108%" height="15" fill="rgb(251,47,18)" fg:x="10152" fg:w="12"/><text x="9.3597%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (1,340 samples, 1.20%)</title><rect x="7.9270%" y="981" width="1.2024%" height="15" fill="rgb(242,102,42)" fg:x="8834" fg:w="1340"/><text x="8.1770%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,340 samples, 1.20%)</title><rect x="7.9270%" y="965" width="1.2024%" height="15" fill="rgb(234,31,38)" fg:x="8834" fg:w="1340"/><text x="8.1770%" y="975.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (1,340 samples, 1.20%)</title><rect x="7.9270%" y="949" width="1.2024%" height="15" fill="rgb(221,117,51)" fg:x="8834" fg:w="1340"/><text x="8.1770%" y="959.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (1,323 samples, 1.19%)</title><rect x="7.9422%" y="933" width="1.1872%" height="15" fill="rgb(212,20,18)" fg:x="8851" fg:w="1323"/><text x="8.1922%" y="943.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (1,182 samples, 1.06%)</title><rect x="8.0688%" y="917" width="1.0606%" height="15" fill="rgb(245,133,36)" fg:x="8992" fg:w="1182"/><text x="8.3188%" y="927.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (440 samples, 0.39%)</title><rect x="8.7346%" y="901" width="0.3948%" height="15" fill="rgb(212,6,19)" fg:x="9734" fg:w="440"/><text x="8.9846%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="9.2138%" y="869" width="0.0144%" height="15" fill="rgb(218,1,36)" fg:x="10268" fg:w="16"/><text x="9.4638%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (21 samples, 0.02%)</title><rect x="9.2281%" y="869" width="0.0188%" height="15" fill="rgb(246,84,54)" fg:x="10284" fg:w="21"/><text x="9.4781%" y="879.50"></text></g><g><title>core::mem::replace (21 samples, 0.02%)</title><rect x="9.2281%" y="853" width="0.0188%" height="15" fill="rgb(242,110,6)" fg:x="10284" fg:w="21"/><text x="9.4781%" y="863.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (208 samples, 0.19%)</title><rect x="9.2954%" y="853" width="0.1866%" height="15" fill="rgb(214,47,5)" fg:x="10359" fg:w="208"/><text x="9.5454%" y="863.50"></text></g><g><title>core::mem::replace (208 samples, 0.19%)</title><rect x="9.2954%" y="837" width="0.1866%" height="15" fill="rgb(218,159,25)" fg:x="10359" fg:w="208"/><text x="9.5454%" y="847.50"></text></g><g><title>core::ptr::read (208 samples, 0.19%)</title><rect x="9.2954%" y="821" width="0.1866%" height="15" fill="rgb(215,211,28)" fg:x="10359" fg:w="208"/><text x="9.5454%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (320 samples, 0.29%)</title><rect x="9.2470%" y="869" width="0.2871%" height="15" fill="rgb(238,59,32)" fg:x="10305" fg:w="320"/><text x="9.4970%" y="879.50"></text></g><g><title>core::mem::drop (58 samples, 0.05%)</title><rect x="9.4821%" y="853" width="0.0520%" height="15" fill="rgb(226,82,3)" fg:x="10567" fg:w="58"/><text x="9.7321%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (58 samples, 0.05%)</title><rect x="9.4821%" y="837" width="0.0520%" height="15" fill="rgb(240,164,32)" fg:x="10567" fg:w="58"/><text x="9.7321%" y="847.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="9.5341%" y="853" width="0.0153%" height="15" fill="rgb(232,46,7)" fg:x="10625" fg:w="17"/><text x="9.7841%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="9.5709%" y="805" width="0.0144%" height="15" fill="rgb(229,129,53)" fg:x="10666" fg:w="16"/><text x="9.8209%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (303 samples, 0.27%)</title><rect x="9.5853%" y="789" width="0.2719%" height="15" fill="rgb(234,188,29)" fg:x="10682" fg:w="303"/><text x="9.8353%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (371 samples, 0.33%)</title><rect x="9.5341%" y="869" width="0.3329%" height="15" fill="rgb(246,141,4)" fg:x="10625" fg:w="371"/><text x="9.7841%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (354 samples, 0.32%)</title><rect x="9.5494%" y="853" width="0.3177%" height="15" fill="rgb(229,23,39)" fg:x="10642" fg:w="354"/><text x="9.7994%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (354 samples, 0.32%)</title><rect x="9.5494%" y="837" width="0.3177%" height="15" fill="rgb(206,12,3)" fg:x="10642" fg:w="354"/><text x="9.7994%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (330 samples, 0.30%)</title><rect x="9.5709%" y="821" width="0.2961%" height="15" fill="rgb(252,226,20)" fg:x="10666" fg:w="330"/><text x="9.8209%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (314 samples, 0.28%)</title><rect x="9.5853%" y="805" width="0.2818%" height="15" fill="rgb(216,123,35)" fg:x="10682" fg:w="314"/><text x="9.8353%" y="815.50"></text></g><g><title>core::task::wake::Waker::will_wake (26 samples, 0.02%)</title><rect x="9.8760%" y="869" width="0.0233%" height="15" fill="rgb(212,68,40)" fg:x="11006" fg:w="26"/><text x="10.1260%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (26 samples, 0.02%)</title><rect x="9.8760%" y="853" width="0.0233%" height="15" fill="rgb(254,125,32)" fg:x="11006" fg:w="26"/><text x="10.1260%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (23 samples, 0.02%)</title><rect x="9.8787%" y="837" width="0.0206%" height="15" fill="rgb(253,97,22)" fg:x="11009" fg:w="23"/><text x="10.1287%" y="847.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (23 samples, 0.02%)</title><rect x="9.8787%" y="821" width="0.0206%" height="15" fill="rgb(241,101,14)" fg:x="11009" fg:w="23"/><text x="10.1287%" y="831.50"></text></g><g><title>std::sync::poison::Flag::get (145 samples, 0.13%)</title><rect x="9.9146%" y="805" width="0.1301%" height="15" fill="rgb(238,103,29)" fg:x="11049" fg:w="145"/><text x="10.1646%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (145 samples, 0.13%)</title><rect x="9.9146%" y="789" width="0.1301%" height="15" fill="rgb(233,195,47)" fg:x="11049" fg:w="145"/><text x="10.1646%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (132 samples, 0.12%)</title><rect x="9.9262%" y="773" width="0.1184%" height="15" fill="rgb(246,218,30)" fg:x="11062" fg:w="132"/><text x="10.1762%" y="783.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (159 samples, 0.14%)</title><rect x="9.9146%" y="837" width="0.1427%" height="15" fill="rgb(219,145,47)" fg:x="11049" fg:w="159"/><text x="10.1646%" y="847.50"></text></g><g><title>std::sync::poison::Flag::borrow (159 samples, 0.14%)</title><rect x="9.9146%" y="821" width="0.1427%" height="15" fill="rgb(243,12,26)" fg:x="11049" fg:w="159"/><text x="10.1646%" y="831.50"></text></g><g><title>std::thread::panicking (14 samples, 0.01%)</title><rect x="10.0447%" y="805" width="0.0126%" height="15" fill="rgb(214,87,16)" fg:x="11194" fg:w="14"/><text x="10.2947%" y="815.50"></text></g><g><title>std::panicking::panicking (14 samples, 0.01%)</title><rect x="10.0447%" y="789" width="0.0126%" height="15" fill="rgb(208,99,42)" fg:x="11194" fg:w="14"/><text x="10.2947%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (14 samples, 0.01%)</title><rect x="10.0447%" y="773" width="0.0126%" height="15" fill="rgb(253,99,2)" fg:x="11194" fg:w="14"/><text x="10.2947%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="10.0447%" y="757" width="0.0126%" height="15" fill="rgb(220,168,23)" fg:x="11194" fg:w="14"/><text x="10.2947%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="10.0447%" y="741" width="0.0126%" height="15" fill="rgb(242,38,24)" fg:x="11194" fg:w="14"/><text x="10.2947%" y="751.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2,043 samples, 1.83%)</title><rect x="9.1725%" y="885" width="1.8332%" height="15" fill="rgb(225,182,9)" fg:x="10222" fg:w="2043"/><text x="9.4225%" y="895.50">&lt;..</text></g><g><title>event_listener::Inner::lock (1,233 samples, 1.11%)</title><rect x="9.8993%" y="869" width="1.1064%" height="15" fill="rgb(243,178,37)" fg:x="11032" fg:w="1233"/><text x="10.1493%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,216 samples, 1.09%)</title><rect x="9.9146%" y="853" width="1.0912%" height="15" fill="rgb(232,139,19)" fg:x="11049" fg:w="1216"/><text x="10.1646%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,057 samples, 0.95%)</title><rect x="10.0572%" y="837" width="0.9485%" height="15" fill="rgb(225,201,24)" fg:x="11208" fg:w="1057"/><text x="10.3072%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1,027 samples, 0.92%)</title><rect x="10.0842%" y="821" width="0.9216%" height="15" fill="rgb(221,47,46)" fg:x="11238" fg:w="1027"/><text x="10.3342%" y="831.50"></text></g><g><title>___pthread_mutex_lock (1,027 samples, 0.92%)</title><rect x="10.0842%" y="805" width="0.9216%" height="15" fill="rgb(249,23,13)" fg:x="11238" fg:w="1027"/><text x="10.3342%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,100 samples, 1.88%)</title><rect x="9.1294%" y="965" width="1.8844%" height="15" fill="rgb(219,9,5)" fg:x="10174" fg:w="2100"/><text x="9.3794%" y="975.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,100 samples, 1.88%)</title><rect x="9.1294%" y="949" width="1.8844%" height="15" fill="rgb(254,171,16)" fg:x="10174" fg:w="2100"/><text x="9.3794%" y="959.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,100 samples, 1.88%)</title><rect x="9.1294%" y="933" width="1.8844%" height="15" fill="rgb(230,171,20)" fg:x="10174" fg:w="2100"/><text x="9.3794%" y="943.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,100 samples, 1.88%)</title><rect x="9.1294%" y="917" width="1.8844%" height="15" fill="rgb(210,71,41)" fg:x="10174" fg:w="2100"/><text x="9.3794%" y="927.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,100 samples, 1.88%)</title><rect x="9.1294%" y="901" width="1.8844%" height="15" fill="rgb(206,173,20)" fg:x="10174" fg:w="2100"/><text x="9.3794%" y="911.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="11.0317%" y="917" width="0.0188%" height="15" fill="rgb(233,88,34)" fg:x="12294" fg:w="21"/><text x="11.2817%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (167 samples, 0.15%)</title><rect x="11.0506%" y="917" width="0.1499%" height="15" fill="rgb(223,209,46)" fg:x="12315" fg:w="167"/><text x="11.3006%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (648 samples, 0.58%)</title><rect x="11.3422%" y="901" width="0.5815%" height="15" fill="rgb(250,43,18)" fg:x="12640" fg:w="648"/><text x="11.5922%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="11.9264%" y="853" width="0.0170%" height="15" fill="rgb(208,13,10)" fg:x="13291" fg:w="19"/><text x="12.1764%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (28 samples, 0.03%)</title><rect x="11.9237%" y="885" width="0.0251%" height="15" fill="rgb(212,200,36)" fg:x="13288" fg:w="28"/><text x="12.1737%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (25 samples, 0.02%)</title><rect x="11.9264%" y="869" width="0.0224%" height="15" fill="rgb(225,90,30)" fg:x="13291" fg:w="25"/><text x="12.1764%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,052 samples, 0.94%)</title><rect x="11.0138%" y="965" width="0.9440%" height="15" fill="rgb(236,182,39)" fg:x="12274" fg:w="1052"/><text x="11.2638%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,052 samples, 0.94%)</title><rect x="11.0138%" y="949" width="0.9440%" height="15" fill="rgb(212,144,35)" fg:x="12274" fg:w="1052"/><text x="11.2638%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,052 samples, 0.94%)</title><rect x="11.0138%" y="933" width="0.9440%" height="15" fill="rgb(228,63,44)" fg:x="12274" fg:w="1052"/><text x="11.2638%" y="943.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (844 samples, 0.76%)</title><rect x="11.2004%" y="917" width="0.7573%" height="15" fill="rgb(228,109,6)" fg:x="12482" fg:w="844"/><text x="11.4504%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (38 samples, 0.03%)</title><rect x="11.9237%" y="901" width="0.0341%" height="15" fill="rgb(238,117,24)" fg:x="13288" fg:w="38"/><text x="12.1737%" y="911.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (6,957 samples, 6.24%)</title><rect x="5.7160%" y="1109" width="6.2427%" height="15" fill="rgb(242,26,26)" fg:x="6370" fg:w="6957"/><text x="5.9660%" y="1119.50">async_ex..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (6,957 samples, 6.24%)</title><rect x="5.7160%" y="1093" width="6.2427%" height="15" fill="rgb(221,92,48)" fg:x="6370" fg:w="6957"/><text x="5.9660%" y="1103.50">&lt;async_s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (6,957 samples, 6.24%)</title><rect x="5.7160%" y="1077" width="6.2427%" height="15" fill="rgb(209,209,32)" fg:x="6370" fg:w="6957"/><text x="5.9660%" y="1087.50">async_st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,957 samples, 6.24%)</title><rect x="5.7160%" y="1061" width="6.2427%" height="15" fill="rgb(221,70,22)" fg:x="6370" fg:w="6957"/><text x="5.9660%" y="1071.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,957 samples, 6.24%)</title><rect x="5.7160%" y="1045" width="6.2427%" height="15" fill="rgb(248,145,5)" fg:x="6370" fg:w="6957"/><text x="5.9660%" y="1055.50">std::thr..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,957 samples, 6.24%)</title><rect x="5.7160%" y="1029" width="6.2427%" height="15" fill="rgb(226,116,26)" fg:x="6370" fg:w="6957"/><text x="5.9660%" y="1039.50">async_st..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,957 samples, 6.24%)</title><rect x="5.7160%" y="1013" width="6.2427%" height="15" fill="rgb(244,5,17)" fg:x="6370" fg:w="6957"/><text x="5.9660%" y="1023.50">&lt;async_s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,957 samples, 6.24%)</title><rect x="5.7160%" y="997" width="6.2427%" height="15" fill="rgb(252,159,33)" fg:x="6370" fg:w="6957"/><text x="5.9660%" y="1007.50">&lt;core::f..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,153 samples, 2.83%)</title><rect x="9.1294%" y="981" width="2.8293%" height="15" fill="rgb(206,71,0)" fg:x="10174" fg:w="3153"/><text x="9.3794%" y="991.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (84 samples, 0.08%)</title><rect x="11.9587%" y="1077" width="0.0754%" height="15" fill="rgb(233,118,54)" fg:x="13327" fg:w="84"/><text x="12.2087%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (84 samples, 0.08%)</title><rect x="11.9587%" y="1061" width="0.0754%" height="15" fill="rgb(234,83,48)" fg:x="13327" fg:w="84"/><text x="12.2087%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (84 samples, 0.08%)</title><rect x="11.9587%" y="1045" width="0.0754%" height="15" fill="rgb(228,3,54)" fg:x="13327" fg:w="84"/><text x="12.2087%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (86 samples, 0.08%)</title><rect x="11.9587%" y="1109" width="0.0772%" height="15" fill="rgb(226,155,13)" fg:x="13327" fg:w="86"/><text x="12.2087%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (86 samples, 0.08%)</title><rect x="11.9587%" y="1093" width="0.0772%" height="15" fill="rgb(241,28,37)" fg:x="13327" fg:w="86"/><text x="12.2087%" y="1103.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (12 samples, 0.01%)</title><rect x="12.0529%" y="581" width="0.0108%" height="15" fill="rgb(233,93,10)" fg:x="13432" fg:w="12"/><text x="12.3029%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="12.0529%" y="565" width="0.0108%" height="15" fill="rgb(225,113,19)" fg:x="13432" fg:w="12"/><text x="12.3029%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (23 samples, 0.02%)</title><rect x="12.0475%" y="629" width="0.0206%" height="15" fill="rgb(241,2,18)" fg:x="13426" fg:w="23"/><text x="12.2975%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (23 samples, 0.02%)</title><rect x="12.0475%" y="613" width="0.0206%" height="15" fill="rgb(228,207,21)" fg:x="13426" fg:w="23"/><text x="12.2975%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (19 samples, 0.02%)</title><rect x="12.0511%" y="597" width="0.0170%" height="15" fill="rgb(213,211,35)" fg:x="13430" fg:w="19"/><text x="12.3011%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (29 samples, 0.03%)</title><rect x="12.0475%" y="645" width="0.0260%" height="15" fill="rgb(209,83,10)" fg:x="13426" fg:w="29"/><text x="12.2975%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (39 samples, 0.03%)</title><rect x="12.0421%" y="661" width="0.0350%" height="15" fill="rgb(209,164,1)" fg:x="13420" fg:w="39"/><text x="12.2921%" y="671.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (35 samples, 0.03%)</title><rect x="12.0843%" y="645" width="0.0314%" height="15" fill="rgb(213,184,43)" fg:x="13467" fg:w="35"/><text x="12.3343%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,454 samples, 6.69%)</title><rect x="5.5500%" y="1125" width="6.6887%" height="15" fill="rgb(231,61,34)" fg:x="6185" fg:w="7454"/><text x="5.8000%" y="1135.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (226 samples, 0.20%)</title><rect x="12.0359%" y="1109" width="0.2028%" height="15" fill="rgb(235,75,3)" fg:x="13413" fg:w="226"/><text x="12.2859%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (226 samples, 0.20%)</title><rect x="12.0359%" y="1093" width="0.2028%" height="15" fill="rgb(220,106,47)" fg:x="13413" fg:w="226"/><text x="12.2859%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (226 samples, 0.20%)</title><rect x="12.0359%" y="1077" width="0.2028%" height="15" fill="rgb(210,196,33)" fg:x="13413" fg:w="226"/><text x="12.2859%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (226 samples, 0.20%)</title><rect x="12.0359%" y="1061" width="0.2028%" height="15" fill="rgb(229,154,42)" fg:x="13413" fg:w="226"/><text x="12.2859%" y="1071.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (220 samples, 0.20%)</title><rect x="12.0412%" y="1045" width="0.1974%" height="15" fill="rgb(228,114,26)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (220 samples, 0.20%)</title><rect x="12.0412%" y="1029" width="0.1974%" height="15" fill="rgb(208,144,1)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="1039.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (220 samples, 0.20%)</title><rect x="12.0412%" y="1013" width="0.1974%" height="15" fill="rgb(239,112,37)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="1023.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (220 samples, 0.20%)</title><rect x="12.0412%" y="997" width="0.1974%" height="15" fill="rgb(210,96,50)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (220 samples, 0.20%)</title><rect x="12.0412%" y="981" width="0.1974%" height="15" fill="rgb(222,178,2)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="991.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (220 samples, 0.20%)</title><rect x="12.0412%" y="965" width="0.1974%" height="15" fill="rgb(226,74,18)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (220 samples, 0.20%)</title><rect x="12.0412%" y="949" width="0.1974%" height="15" fill="rgb(225,67,54)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="959.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (220 samples, 0.20%)</title><rect x="12.0412%" y="933" width="0.1974%" height="15" fill="rgb(251,92,32)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (220 samples, 0.20%)</title><rect x="12.0412%" y="917" width="0.1974%" height="15" fill="rgb(228,149,22)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="927.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (220 samples, 0.20%)</title><rect x="12.0412%" y="901" width="0.1974%" height="15" fill="rgb(243,54,13)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (220 samples, 0.20%)</title><rect x="12.0412%" y="885" width="0.1974%" height="15" fill="rgb(243,180,28)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (220 samples, 0.20%)</title><rect x="12.0412%" y="869" width="0.1974%" height="15" fill="rgb(208,167,24)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (220 samples, 0.20%)</title><rect x="12.0412%" y="853" width="0.1974%" height="15" fill="rgb(245,73,45)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (220 samples, 0.20%)</title><rect x="12.0412%" y="837" width="0.1974%" height="15" fill="rgb(237,203,48)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (220 samples, 0.20%)</title><rect x="12.0412%" y="821" width="0.1974%" height="15" fill="rgb(211,197,16)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="831.50"></text></g><g><title>alloc::alloc::alloc (220 samples, 0.20%)</title><rect x="12.0412%" y="805" width="0.1974%" height="15" fill="rgb(243,99,51)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="815.50"></text></g><g><title>__rg_alloc (220 samples, 0.20%)</title><rect x="12.0412%" y="789" width="0.1974%" height="15" fill="rgb(215,123,29)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (220 samples, 0.20%)</title><rect x="12.0412%" y="773" width="0.1974%" height="15" fill="rgb(239,186,37)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="783.50"></text></g><g><title>rust_alloc (220 samples, 0.20%)</title><rect x="12.0412%" y="757" width="0.1974%" height="15" fill="rgb(252,136,39)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (220 samples, 0.20%)</title><rect x="12.0412%" y="741" width="0.1974%" height="15" fill="rgb(223,213,32)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (220 samples, 0.20%)</title><rect x="12.0412%" y="725" width="0.1974%" height="15" fill="rgb(233,115,5)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (220 samples, 0.20%)</title><rect x="12.0412%" y="709" width="0.1974%" height="15" fill="rgb(207,226,44)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (220 samples, 0.20%)</title><rect x="12.0412%" y="693" width="0.1974%" height="15" fill="rgb(208,126,0)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (220 samples, 0.20%)</title><rect x="12.0412%" y="677" width="0.1974%" height="15" fill="rgb(244,66,21)" fg:x="13419" fg:w="220"/><text x="12.2912%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (180 samples, 0.16%)</title><rect x="12.0771%" y="661" width="0.1615%" height="15" fill="rgb(222,97,12)" fg:x="13459" fg:w="180"/><text x="12.3271%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (137 samples, 0.12%)</title><rect x="12.1157%" y="645" width="0.1229%" height="15" fill="rgb(219,213,19)" fg:x="13502" fg:w="137"/><text x="12.3657%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (137 samples, 0.12%)</title><rect x="12.1157%" y="629" width="0.1229%" height="15" fill="rgb(252,169,30)" fg:x="13502" fg:w="137"/><text x="12.3657%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (137 samples, 0.12%)</title><rect x="12.1157%" y="613" width="0.1229%" height="15" fill="rgb(206,32,51)" fg:x="13502" fg:w="137"/><text x="12.3657%" y="623.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (28 samples, 0.03%)</title><rect x="12.2387%" y="1125" width="0.0251%" height="15" fill="rgb(250,172,42)" fg:x="13639" fg:w="28"/><text x="12.4887%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (30 samples, 0.03%)</title><rect x="12.2754%" y="1125" width="0.0269%" height="15" fill="rgb(209,34,43)" fg:x="13680" fg:w="30"/><text x="12.5254%" y="1135.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (26 samples, 0.02%)</title><rect x="12.3024%" y="1125" width="0.0233%" height="15" fill="rgb(223,11,35)" fg:x="13710" fg:w="26"/><text x="12.5524%" y="1135.50"></text></g><g><title>__clock_gettime_2 (78 samples, 0.07%)</title><rect x="12.3427%" y="1125" width="0.0700%" height="15" fill="rgb(251,219,26)" fg:x="13755" fg:w="78"/><text x="12.5927%" y="1135.50"></text></g><g><title>__memcmp_avx2_movbe (14 samples, 0.01%)</title><rect x="12.4154%" y="1125" width="0.0126%" height="15" fill="rgb(231,119,3)" fg:x="13836" fg:w="14"/><text x="12.6654%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (133 samples, 0.12%)</title><rect x="12.4280%" y="1125" width="0.1193%" height="15" fill="rgb(216,97,11)" fg:x="13850" fg:w="133"/><text x="12.6780%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (25 samples, 0.02%)</title><rect x="12.5482%" y="1125" width="0.0224%" height="15" fill="rgb(223,59,9)" fg:x="13984" fg:w="25"/><text x="12.7982%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (31 samples, 0.03%)</title><rect x="12.5707%" y="1125" width="0.0278%" height="15" fill="rgb(233,93,31)" fg:x="14009" fg:w="31"/><text x="12.8207%" y="1135.50"></text></g><g><title>abi_stable::erased_types::iterator::next (16 samples, 0.01%)</title><rect x="12.5985%" y="1125" width="0.0144%" height="15" fill="rgb(239,81,33)" fg:x="14040" fg:w="16"/><text x="12.8485%" y="1135.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (17 samples, 0.02%)</title><rect x="12.6128%" y="1125" width="0.0153%" height="15" fill="rgb(213,120,34)" fg:x="14056" fg:w="17"/><text x="12.8628%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="12.6541%" y="1109" width="0.0233%" height="15" fill="rgb(243,49,53)" fg:x="14102" fg:w="26"/><text x="12.9041%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (26 samples, 0.02%)</title><rect x="12.6541%" y="1093" width="0.0233%" height="15" fill="rgb(247,216,33)" fg:x="14102" fg:w="26"/><text x="12.9041%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.02%)</title><rect x="12.6541%" y="1077" width="0.0233%" height="15" fill="rgb(226,26,14)" fg:x="14102" fg:w="26"/><text x="12.9041%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.02%)</title><rect x="12.6541%" y="1061" width="0.0233%" height="15" fill="rgb(215,49,53)" fg:x="14102" fg:w="26"/><text x="12.9041%" y="1071.50"></text></g><g><title>__rg_dealloc (26 samples, 0.02%)</title><rect x="12.6541%" y="1045" width="0.0233%" height="15" fill="rgb(245,162,40)" fg:x="14102" fg:w="26"/><text x="12.9041%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (26 samples, 0.02%)</title><rect x="12.6541%" y="1029" width="0.0233%" height="15" fill="rgb(229,68,17)" fg:x="14102" fg:w="26"/><text x="12.9041%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (63 samples, 0.06%)</title><rect x="12.6281%" y="1125" width="0.0565%" height="15" fill="rgb(213,182,10)" fg:x="14073" fg:w="63"/><text x="12.8781%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (34 samples, 0.03%)</title><rect x="12.6846%" y="1125" width="0.0305%" height="15" fill="rgb(245,125,30)" fg:x="14136" fg:w="34"/><text x="12.9346%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (16 samples, 0.01%)</title><rect x="12.7151%" y="1125" width="0.0144%" height="15" fill="rgb(232,202,2)" fg:x="14170" fg:w="16"/><text x="12.9651%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="12.8264%" y="1029" width="0.0108%" height="15" fill="rgb(237,140,51)" fg:x="14294" fg:w="12"/><text x="13.0764%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (12 samples, 0.01%)</title><rect x="12.8264%" y="1013" width="0.0108%" height="15" fill="rgb(236,157,25)" fg:x="14294" fg:w="12"/><text x="13.0764%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (12 samples, 0.01%)</title><rect x="12.8264%" y="997" width="0.0108%" height="15" fill="rgb(219,209,0)" fg:x="14294" fg:w="12"/><text x="13.0764%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.01%)</title><rect x="12.8264%" y="981" width="0.0108%" height="15" fill="rgb(240,116,54)" fg:x="14294" fg:w="12"/><text x="13.0764%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="12.8264%" y="965" width="0.0108%" height="15" fill="rgb(216,10,36)" fg:x="14294" fg:w="12"/><text x="13.0764%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="12.8264%" y="949" width="0.0108%" height="15" fill="rgb(222,72,44)" fg:x="14294" fg:w="12"/><text x="13.0764%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="12.8264%" y="933" width="0.0108%" height="15" fill="rgb(232,159,9)" fg:x="14294" fg:w="12"/><text x="13.0764%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (115 samples, 0.10%)</title><rect x="12.7394%" y="1125" width="0.1032%" height="15" fill="rgb(210,39,32)" fg:x="14197" fg:w="115"/><text x="12.9894%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (18 samples, 0.02%)</title><rect x="12.8264%" y="1109" width="0.0162%" height="15" fill="rgb(216,194,45)" fg:x="14294" fg:w="18"/><text x="13.0764%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 0.02%)</title><rect x="12.8264%" y="1093" width="0.0162%" height="15" fill="rgb(218,18,35)" fg:x="14294" fg:w="18"/><text x="13.0764%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.02%)</title><rect x="12.8264%" y="1077" width="0.0162%" height="15" fill="rgb(207,83,51)" fg:x="14294" fg:w="18"/><text x="13.0764%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="12.8264%" y="1061" width="0.0162%" height="15" fill="rgb(225,63,43)" fg:x="14294" fg:w="18"/><text x="13.0764%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.02%)</title><rect x="12.8264%" y="1045" width="0.0162%" height="15" fill="rgb(207,57,36)" fg:x="14294" fg:w="18"/><text x="13.0764%" y="1055.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (35 samples, 0.03%)</title><rect x="12.8426%" y="1125" width="0.0314%" height="15" fill="rgb(216,99,33)" fg:x="14312" fg:w="35"/><text x="13.0926%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (12 samples, 0.01%)</title><rect x="12.8632%" y="1109" width="0.0108%" height="15" fill="rgb(225,42,16)" fg:x="14335" fg:w="12"/><text x="13.1132%" y="1119.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="12.8632%" y="1093" width="0.0108%" height="15" fill="rgb(220,201,45)" fg:x="14335" fg:w="12"/><text x="13.1132%" y="1103.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (21 samples, 0.02%)</title><rect x="12.8811%" y="1125" width="0.0188%" height="15" fill="rgb(225,33,4)" fg:x="14355" fg:w="21"/><text x="13.1311%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="12.8820%" y="1109" width="0.0179%" height="15" fill="rgb(224,33,50)" fg:x="14356" fg:w="20"/><text x="13.1320%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (20 samples, 0.02%)</title><rect x="12.8820%" y="1093" width="0.0179%" height="15" fill="rgb(246,198,51)" fg:x="14356" fg:w="20"/><text x="13.1320%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (20 samples, 0.02%)</title><rect x="12.8820%" y="1077" width="0.0179%" height="15" fill="rgb(205,22,4)" fg:x="14356" fg:w="20"/><text x="13.1320%" y="1087.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (46 samples, 0.04%)</title><rect x="12.9000%" y="1125" width="0.0413%" height="15" fill="rgb(206,3,8)" fg:x="14376" fg:w="46"/><text x="13.1500%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="12.9260%" y="1109" width="0.0153%" height="15" fill="rgb(251,23,15)" fg:x="14405" fg:w="17"/><text x="13.1760%" y="1119.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="12.9431%" y="1125" width="0.0117%" height="15" fill="rgb(252,88,28)" fg:x="14424" fg:w="13"/><text x="13.1931%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (12 samples, 0.01%)</title><rect x="12.9547%" y="1125" width="0.0108%" height="15" fill="rgb(212,127,14)" fg:x="14437" fg:w="12"/><text x="13.2047%" y="1135.50"></text></g><g><title>async_ffi::DropBomb::with (12 samples, 0.01%)</title><rect x="12.9547%" y="1109" width="0.0108%" height="15" fill="rgb(247,145,37)" fg:x="14437" fg:w="12"/><text x="13.2047%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (12 samples, 0.01%)</title><rect x="12.9547%" y="1093" width="0.0108%" height="15" fill="rgb(209,117,53)" fg:x="14437" fg:w="12"/><text x="13.2047%" y="1103.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="12.9547%" y="1077" width="0.0108%" height="15" fill="rgb(212,90,42)" fg:x="14437" fg:w="12"/><text x="13.2047%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (18 samples, 0.02%)</title><rect x="12.9655%" y="1125" width="0.0162%" height="15" fill="rgb(218,164,37)" fg:x="14449" fg:w="18"/><text x="13.2155%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="12.9843%" y="789" width="0.0179%" height="15" fill="rgb(246,65,34)" fg:x="14470" fg:w="20"/><text x="13.2343%" y="799.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (75 samples, 0.07%)</title><rect x="13.0023%" y="789" width="0.0673%" height="15" fill="rgb(231,100,33)" fg:x="14490" fg:w="75"/><text x="13.2523%" y="799.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (1,089 samples, 0.98%)</title><rect x="13.3415%" y="773" width="0.9772%" height="15" fill="rgb(228,126,14)" fg:x="14868" fg:w="1089"/><text x="13.5915%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (955 samples, 0.86%)</title><rect x="13.4617%" y="757" width="0.8569%" height="15" fill="rgb(215,173,21)" fg:x="15002" fg:w="955"/><text x="13.7117%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.01%)</title><rect x="14.3196%" y="773" width="0.0144%" height="15" fill="rgb(210,6,40)" fg:x="15958" fg:w="16"/><text x="14.5696%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="14.3339%" y="773" width="0.0117%" height="15" fill="rgb(212,48,18)" fg:x="15974" fg:w="13"/><text x="14.5839%" y="783.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (13 samples, 0.01%)</title><rect x="14.3339%" y="757" width="0.0117%" height="15" fill="rgb(230,214,11)" fg:x="15974" fg:w="13"/><text x="14.5839%" y="767.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (718 samples, 0.64%)</title><rect x="15.0419%" y="741" width="0.6443%" height="15" fill="rgb(254,105,39)" fg:x="16763" fg:w="718"/><text x="15.2919%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (85 samples, 0.08%)</title><rect x="15.6862%" y="741" width="0.0763%" height="15" fill="rgb(245,158,5)" fg:x="17481" fg:w="85"/><text x="15.9362%" y="751.50"></text></g><g><title>abi_stable::std_types::result::&lt;impl core::convert::From&lt;abi_stable::std_types::result::RResult&lt;T,E&gt;&gt; for core::result::Result&lt;T,E&gt;&gt;::from (25 samples, 0.02%)</title><rect x="15.7400%" y="725" width="0.0224%" height="15" fill="rgb(249,208,11)" fg:x="17541" fg:w="25"/><text x="15.9900%" y="735.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (191 samples, 0.17%)</title><rect x="15.7625%" y="709" width="0.1714%" height="15" fill="rgb(210,39,28)" fg:x="17566" fg:w="191"/><text x="16.0125%" y="719.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (179 samples, 0.16%)</title><rect x="15.7732%" y="693" width="0.1606%" height="15" fill="rgb(211,56,53)" fg:x="17578" fg:w="179"/><text x="16.0232%" y="703.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (179 samples, 0.16%)</title><rect x="15.7732%" y="677" width="0.1606%" height="15" fill="rgb(226,201,30)" fg:x="17578" fg:w="179"/><text x="16.0232%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (39 samples, 0.03%)</title><rect x="15.9724%" y="661" width="0.0350%" height="15" fill="rgb(239,101,34)" fg:x="17800" fg:w="39"/><text x="16.2224%" y="671.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (39 samples, 0.03%)</title><rect x="15.9724%" y="645" width="0.0350%" height="15" fill="rgb(226,209,5)" fg:x="17800" fg:w="39"/><text x="16.2224%" y="655.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (39 samples, 0.03%)</title><rect x="15.9724%" y="629" width="0.0350%" height="15" fill="rgb(250,105,47)" fg:x="17800" fg:w="39"/><text x="16.2224%" y="639.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,629 samples, 1.46%)</title><rect x="15.9500%" y="693" width="1.4617%" height="15" fill="rgb(230,72,3)" fg:x="17775" fg:w="1629"/><text x="16.2000%" y="703.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,614 samples, 1.45%)</title><rect x="15.9635%" y="677" width="1.4483%" height="15" fill="rgb(232,218,39)" fg:x="17790" fg:w="1614"/><text x="16.2135%" y="687.50"></text></g><g><title>std::panic::catch_unwind (1,565 samples, 1.40%)</title><rect x="16.0074%" y="661" width="1.4043%" height="15" fill="rgb(248,166,6)" fg:x="17839" fg:w="1565"/><text x="16.2574%" y="671.50"></text></g><g><title>std::panicking::try (1,565 samples, 1.40%)</title><rect x="16.0074%" y="645" width="1.4043%" height="15" fill="rgb(247,89,20)" fg:x="17839" fg:w="1565"/><text x="16.2574%" y="655.50"></text></g><g><title>std::panicking::try::do_call (1,565 samples, 1.40%)</title><rect x="16.0074%" y="629" width="1.4043%" height="15" fill="rgb(248,130,54)" fg:x="17839" fg:w="1565"/><text x="16.2574%" y="639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.02%)</title><rect x="17.3893%" y="613" width="0.0224%" height="15" fill="rgb(234,196,4)" fg:x="19379" fg:w="25"/><text x="17.6393%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (25 samples, 0.02%)</title><rect x="17.3893%" y="597" width="0.0224%" height="15" fill="rgb(250,143,31)" fg:x="19379" fg:w="25"/><text x="17.6393%" y="607.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (25 samples, 0.02%)</title><rect x="17.3893%" y="581" width="0.0224%" height="15" fill="rgb(211,110,34)" fg:x="19379" fg:w="25"/><text x="17.6393%" y="591.50"></text></g><g><title>async_ffi::FfiContext::with_context (12 samples, 0.01%)</title><rect x="17.4010%" y="565" width="0.0108%" height="15" fill="rgb(215,124,48)" fg:x="19392" fg:w="12"/><text x="17.6510%" y="575.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,648 samples, 1.48%)</title><rect x="15.9338%" y="709" width="1.4788%" height="15" fill="rgb(216,46,13)" fg:x="17757" fg:w="1648"/><text x="16.1838%" y="719.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,030 samples, 1.82%)</title><rect x="15.7625%" y="741" width="1.8216%" height="15" fill="rgb(205,184,25)" fg:x="17566" fg:w="2030"/><text x="16.0125%" y="751.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,030 samples, 1.82%)</title><rect x="15.7625%" y="725" width="1.8216%" height="15" fill="rgb(228,1,10)" fg:x="17566" fg:w="2030"/><text x="16.0125%" y="735.50">&lt;..</text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (191 samples, 0.17%)</title><rect x="17.4126%" y="709" width="0.1714%" height="15" fill="rgb(213,116,27)" fg:x="19405" fg:w="191"/><text x="17.6626%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (581 samples, 0.52%)</title><rect x="17.5840%" y="741" width="0.5213%" height="15" fill="rgb(241,95,50)" fg:x="19596" fg:w="581"/><text x="17.8340%" y="751.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (70 samples, 0.06%)</title><rect x="18.1054%" y="741" width="0.0628%" height="15" fill="rgb(238,48,32)" fg:x="20177" fg:w="70"/><text x="18.3554%" y="751.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (13 samples, 0.01%)</title><rect x="18.1682%" y="693" width="0.0117%" height="15" fill="rgb(235,113,49)" fg:x="20247" fg:w="13"/><text x="18.4182%" y="703.50"></text></g><g><title>async_ffi::DropBomb::with (13 samples, 0.01%)</title><rect x="18.1682%" y="677" width="0.0117%" height="15" fill="rgb(205,127,43)" fg:x="20247" fg:w="13"/><text x="18.4182%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="18.2104%" y="549" width="0.0117%" height="15" fill="rgb(250,162,2)" fg:x="20294" fg:w="13"/><text x="18.4604%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (35 samples, 0.03%)</title><rect x="18.1978%" y="597" width="0.0314%" height="15" fill="rgb(220,13,41)" fg:x="20280" fg:w="35"/><text x="18.4478%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (35 samples, 0.03%)</title><rect x="18.1978%" y="581" width="0.0314%" height="15" fill="rgb(249,221,25)" fg:x="20280" fg:w="35"/><text x="18.4478%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (33 samples, 0.03%)</title><rect x="18.1996%" y="565" width="0.0296%" height="15" fill="rgb(215,208,19)" fg:x="20282" fg:w="33"/><text x="18.4496%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (49 samples, 0.04%)</title><rect x="18.1879%" y="629" width="0.0440%" height="15" fill="rgb(236,175,2)" fg:x="20269" fg:w="49"/><text x="18.4379%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (49 samples, 0.04%)</title><rect x="18.1879%" y="613" width="0.0440%" height="15" fill="rgb(241,52,2)" fg:x="20269" fg:w="49"/><text x="18.4379%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (58 samples, 0.05%)</title><rect x="18.1879%" y="661" width="0.0520%" height="15" fill="rgb(248,140,14)" fg:x="20269" fg:w="58"/><text x="18.4379%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (58 samples, 0.05%)</title><rect x="18.1879%" y="645" width="0.0520%" height="15" fill="rgb(253,22,42)" fg:x="20269" fg:w="58"/><text x="18.4379%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (66 samples, 0.06%)</title><rect x="18.1879%" y="677" width="0.0592%" height="15" fill="rgb(234,61,47)" fg:x="20269" fg:w="66"/><text x="18.4379%" y="687.50"></text></g><g><title>rust_dealloc (87 samples, 0.08%)</title><rect x="18.1799%" y="693" width="0.0781%" height="15" fill="rgb(208,226,15)" fg:x="20260" fg:w="87"/><text x="18.4299%" y="703.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="18.2472%" y="677" width="0.0108%" height="15" fill="rgb(217,221,4)" fg:x="20335" fg:w="12"/><text x="18.4972%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (111 samples, 0.10%)</title><rect x="18.1682%" y="741" width="0.0996%" height="15" fill="rgb(212,174,34)" fg:x="20247" fg:w="111"/><text x="18.4182%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (111 samples, 0.10%)</title><rect x="18.1682%" y="725" width="0.0996%" height="15" fill="rgb(253,83,4)" fg:x="20247" fg:w="111"/><text x="18.4182%" y="735.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.10%)</title><rect x="18.1682%" y="709" width="0.0996%" height="15" fill="rgb(250,195,49)" fg:x="20247" fg:w="111"/><text x="18.4182%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (168 samples, 0.15%)</title><rect x="18.7694%" y="725" width="0.1508%" height="15" fill="rgb(241,192,25)" fg:x="20917" fg:w="168"/><text x="19.0194%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (239 samples, 0.21%)</title><rect x="18.9534%" y="629" width="0.2145%" height="15" fill="rgb(208,124,10)" fg:x="21122" fg:w="239"/><text x="19.2034%" y="639.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="19.1723%" y="485" width="0.0153%" height="15" fill="rgb(222,33,0)" fg:x="21366" fg:w="17"/><text x="19.4223%" y="495.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="19.1876%" y="485" width="0.0108%" height="15" fill="rgb(234,209,28)" fg:x="21383" fg:w="12"/><text x="19.4376%" y="495.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="19.1876%" y="469" width="0.0108%" height="15" fill="rgb(224,11,23)" fg:x="21383" fg:w="12"/><text x="19.4376%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (15 samples, 0.01%)</title><rect x="19.2091%" y="469" width="0.0135%" height="15" fill="rgb(232,99,1)" fg:x="21407" fg:w="15"/><text x="19.4591%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (15 samples, 0.01%)</title><rect x="19.2091%" y="453" width="0.0135%" height="15" fill="rgb(237,95,45)" fg:x="21407" fg:w="15"/><text x="19.4591%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (15 samples, 0.01%)</title><rect x="19.2091%" y="437" width="0.0135%" height="15" fill="rgb(208,109,11)" fg:x="21407" fg:w="15"/><text x="19.4591%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="19.2091%" y="421" width="0.0135%" height="15" fill="rgb(216,190,48)" fg:x="21407" fg:w="15"/><text x="19.4591%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="19.2091%" y="405" width="0.0135%" height="15" fill="rgb(251,171,36)" fg:x="21407" fg:w="15"/><text x="19.4591%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (16 samples, 0.01%)</title><rect x="19.2270%" y="405" width="0.0144%" height="15" fill="rgb(230,62,22)" fg:x="21427" fg:w="16"/><text x="19.4770%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (16 samples, 0.01%)</title><rect x="19.2270%" y="389" width="0.0144%" height="15" fill="rgb(225,114,35)" fg:x="21427" fg:w="16"/><text x="19.4770%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (14 samples, 0.01%)</title><rect x="19.2288%" y="373" width="0.0126%" height="15" fill="rgb(215,118,42)" fg:x="21429" fg:w="14"/><text x="19.4788%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (18 samples, 0.02%)</title><rect x="19.2270%" y="421" width="0.0162%" height="15" fill="rgb(243,119,21)" fg:x="21427" fg:w="18"/><text x="19.4770%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (32 samples, 0.03%)</title><rect x="19.2226%" y="437" width="0.0287%" height="15" fill="rgb(252,177,53)" fg:x="21422" fg:w="32"/><text x="19.4726%" y="447.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (13 samples, 0.01%)</title><rect x="19.2584%" y="421" width="0.0117%" height="15" fill="rgb(237,209,29)" fg:x="21462" fg:w="13"/><text x="19.5084%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (183 samples, 0.16%)</title><rect x="19.2226%" y="469" width="0.1642%" height="15" fill="rgb(212,65,23)" fg:x="21422" fg:w="183"/><text x="19.4726%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (183 samples, 0.16%)</title><rect x="19.2226%" y="453" width="0.1642%" height="15" fill="rgb(230,222,46)" fg:x="21422" fg:w="183"/><text x="19.4726%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (151 samples, 0.14%)</title><rect x="19.2513%" y="437" width="0.1355%" height="15" fill="rgb(215,135,32)" fg:x="21454" fg:w="151"/><text x="19.5013%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (130 samples, 0.12%)</title><rect x="19.2701%" y="421" width="0.1167%" height="15" fill="rgb(246,101,22)" fg:x="21475" fg:w="130"/><text x="19.5201%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (130 samples, 0.12%)</title><rect x="19.2701%" y="405" width="0.1167%" height="15" fill="rgb(206,107,13)" fg:x="21475" fg:w="130"/><text x="19.5201%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (130 samples, 0.12%)</title><rect x="19.2701%" y="389" width="0.1167%" height="15" fill="rgb(250,100,44)" fg:x="21475" fg:w="130"/><text x="19.5201%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (21 samples, 0.02%)</title><rect x="19.3948%" y="437" width="0.0188%" height="15" fill="rgb(231,147,38)" fg:x="21614" fg:w="21"/><text x="19.6448%" y="447.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (21 samples, 0.02%)</title><rect x="19.3948%" y="421" width="0.0188%" height="15" fill="rgb(229,8,40)" fg:x="21614" fg:w="21"/><text x="19.6448%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="19.3948%" y="405" width="0.0188%" height="15" fill="rgb(221,135,30)" fg:x="21614" fg:w="21"/><text x="19.6448%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (41 samples, 0.04%)</title><rect x="19.4137%" y="437" width="0.0368%" height="15" fill="rgb(249,193,18)" fg:x="21635" fg:w="41"/><text x="19.6637%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (41 samples, 0.04%)</title><rect x="19.4137%" y="421" width="0.0368%" height="15" fill="rgb(209,133,39)" fg:x="21635" fg:w="41"/><text x="19.6637%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (79 samples, 0.07%)</title><rect x="19.3868%" y="469" width="0.0709%" height="15" fill="rgb(232,100,14)" fg:x="21605" fg:w="79"/><text x="19.6368%" y="479.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (73 samples, 0.07%)</title><rect x="19.3922%" y="453" width="0.0655%" height="15" fill="rgb(224,185,1)" fg:x="21611" fg:w="73"/><text x="19.6422%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="19.4577%" y="469" width="0.0170%" height="15" fill="rgb(223,139,8)" fg:x="21684" fg:w="19"/><text x="19.7077%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="19.4586%" y="453" width="0.0162%" height="15" fill="rgb(232,213,38)" fg:x="21685" fg:w="18"/><text x="19.7086%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="19.4621%" y="437" width="0.0126%" height="15" fill="rgb(207,94,22)" fg:x="21689" fg:w="14"/><text x="19.7121%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::empty (32 samples, 0.03%)</title><rect x="19.4747%" y="469" width="0.0287%" height="15" fill="rgb(219,183,54)" fg:x="21703" fg:w="32"/><text x="19.7247%" y="479.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (32 samples, 0.03%)</title><rect x="19.4747%" y="453" width="0.0287%" height="15" fill="rgb(216,185,54)" fg:x="21703" fg:w="32"/><text x="19.7247%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (891 samples, 0.80%)</title><rect x="19.1723%" y="517" width="0.7995%" height="15" fill="rgb(254,217,39)" fg:x="21366" fg:w="891"/><text x="19.4223%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (891 samples, 0.80%)</title><rect x="19.1723%" y="501" width="0.7995%" height="15" fill="rgb(240,178,23)" fg:x="21366" fg:w="891"/><text x="19.4223%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (862 samples, 0.77%)</title><rect x="19.1983%" y="485" width="0.7735%" height="15" fill="rgb(218,11,47)" fg:x="21395" fg:w="862"/><text x="19.4483%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (522 samples, 0.47%)</title><rect x="19.5034%" y="469" width="0.4684%" height="15" fill="rgb(218,51,51)" fg:x="21735" fg:w="522"/><text x="19.7534%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (522 samples, 0.47%)</title><rect x="19.5034%" y="453" width="0.4684%" height="15" fill="rgb(238,126,27)" fg:x="21735" fg:w="522"/><text x="19.7534%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,169 samples, 1.05%)</title><rect x="18.9354%" y="645" width="1.0490%" height="15" fill="rgb(249,202,22)" fg:x="21102" fg:w="1169"/><text x="19.1854%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (910 samples, 0.82%)</title><rect x="19.1678%" y="629" width="0.8166%" height="15" fill="rgb(254,195,49)" fg:x="21361" fg:w="910"/><text x="19.4178%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (910 samples, 0.82%)</title><rect x="19.1678%" y="613" width="0.8166%" height="15" fill="rgb(208,123,14)" fg:x="21361" fg:w="910"/><text x="19.4178%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (910 samples, 0.82%)</title><rect x="19.1678%" y="597" width="0.8166%" height="15" fill="rgb(224,200,8)" fg:x="21361" fg:w="910"/><text x="19.4178%" y="607.50"></text></g><g><title>alloc::alloc::alloc (909 samples, 0.82%)</title><rect x="19.1687%" y="581" width="0.8157%" height="15" fill="rgb(217,61,36)" fg:x="21362" fg:w="909"/><text x="19.4187%" y="591.50"></text></g><g><title>__rg_alloc (909 samples, 0.82%)</title><rect x="19.1687%" y="565" width="0.8157%" height="15" fill="rgb(206,35,45)" fg:x="21362" fg:w="909"/><text x="19.4187%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (909 samples, 0.82%)</title><rect x="19.1687%" y="549" width="0.8157%" height="15" fill="rgb(217,65,33)" fg:x="21362" fg:w="909"/><text x="19.4187%" y="559.50"></text></g><g><title>rust_alloc (909 samples, 0.82%)</title><rect x="19.1687%" y="533" width="0.8157%" height="15" fill="rgb(222,158,48)" fg:x="21362" fg:w="909"/><text x="19.4187%" y="543.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="19.9718%" y="517" width="0.0126%" height="15" fill="rgb(254,2,54)" fg:x="22257" fg:w="14"/><text x="20.2218%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (1,193 samples, 1.07%)</title><rect x="18.9202%" y="725" width="1.0705%" height="15" fill="rgb(250,143,38)" fg:x="21085" fg:w="1193"/><text x="19.1702%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (1,176 samples, 1.06%)</title><rect x="18.9354%" y="709" width="1.0553%" height="15" fill="rgb(248,25,0)" fg:x="21102" fg:w="1176"/><text x="19.1854%" y="719.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (1,176 samples, 1.06%)</title><rect x="18.9354%" y="693" width="1.0553%" height="15" fill="rgb(206,152,27)" fg:x="21102" fg:w="1176"/><text x="19.1854%" y="703.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (1,176 samples, 1.06%)</title><rect x="18.9354%" y="677" width="1.0553%" height="15" fill="rgb(240,77,30)" fg:x="21102" fg:w="1176"/><text x="19.1854%" y="687.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (1,176 samples, 1.06%)</title><rect x="18.9354%" y="661" width="1.0553%" height="15" fill="rgb(231,5,3)" fg:x="21102" fg:w="1176"/><text x="19.1854%" y="671.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (5,960 samples, 5.35%)</title><rect x="14.6955%" y="757" width="5.3481%" height="15" fill="rgb(207,226,32)" fg:x="16377" fg:w="5960"/><text x="14.9455%" y="767.50">tremor_..</text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (1,979 samples, 1.78%)</title><rect x="18.2678%" y="741" width="1.7758%" height="15" fill="rgb(222,207,47)" fg:x="20358" fg:w="1979"/><text x="18.5178%" y="751.50">t..</text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::_::&lt;impl tremor_runtime::connectors::sink::RawSink_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::on_event (57 samples, 0.05%)</title><rect x="19.9925%" y="725" width="0.0511%" height="15" fill="rgb(229,115,45)" fg:x="22280" fg:w="57"/><text x="20.2425%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,350 samples, 5.70%)</title><rect x="14.3510%" y="773" width="5.6980%" height="15" fill="rgb(224,191,6)" fg:x="15993" fg:w="6350"/><text x="14.6010%" y="783.50">&lt;core::..</text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (18 samples, 0.02%)</title><rect x="20.0974%" y="645" width="0.0162%" height="15" fill="rgb(230,227,24)" fg:x="22397" fg:w="18"/><text x="20.3474%" y="655.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="20.1333%" y="501" width="0.0135%" height="15" fill="rgb(228,80,19)" fg:x="22437" fg:w="15"/><text x="20.3833%" y="511.50"></text></g><g><title>rust_alloc (19 samples, 0.02%)</title><rect x="20.1477%" y="469" width="0.0170%" height="15" fill="rgb(247,229,0)" fg:x="22453" fg:w="19"/><text x="20.3977%" y="479.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (275 samples, 0.25%)</title><rect x="20.0974%" y="661" width="0.2468%" height="15" fill="rgb(237,194,15)" fg:x="22397" fg:w="275"/><text x="20.3474%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (257 samples, 0.23%)</title><rect x="20.1136%" y="645" width="0.2306%" height="15" fill="rgb(219,203,20)" fg:x="22415" fg:w="257"/><text x="20.3636%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (257 samples, 0.23%)</title><rect x="20.1136%" y="629" width="0.2306%" height="15" fill="rgb(234,128,8)" fg:x="22415" fg:w="257"/><text x="20.3636%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (238 samples, 0.21%)</title><rect x="20.1307%" y="613" width="0.2136%" height="15" fill="rgb(248,202,8)" fg:x="22434" fg:w="238"/><text x="20.3807%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (238 samples, 0.21%)</title><rect x="20.1307%" y="597" width="0.2136%" height="15" fill="rgb(206,104,37)" fg:x="22434" fg:w="238"/><text x="20.3807%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (238 samples, 0.21%)</title><rect x="20.1307%" y="581" width="0.2136%" height="15" fill="rgb(223,8,27)" fg:x="22434" fg:w="238"/><text x="20.3807%" y="591.50"></text></g><g><title>alloc::alloc::alloc (238 samples, 0.21%)</title><rect x="20.1307%" y="565" width="0.2136%" height="15" fill="rgb(216,217,28)" fg:x="22434" fg:w="238"/><text x="20.3807%" y="575.50"></text></g><g><title>__rg_alloc (238 samples, 0.21%)</title><rect x="20.1307%" y="549" width="0.2136%" height="15" fill="rgb(249,199,1)" fg:x="22434" fg:w="238"/><text x="20.3807%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (238 samples, 0.21%)</title><rect x="20.1307%" y="533" width="0.2136%" height="15" fill="rgb(240,85,17)" fg:x="22434" fg:w="238"/><text x="20.3807%" y="543.50"></text></g><g><title>rust_alloc (235 samples, 0.21%)</title><rect x="20.1333%" y="517" width="0.2109%" height="15" fill="rgb(206,108,45)" fg:x="22437" fg:w="235"/><text x="20.3833%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (220 samples, 0.20%)</title><rect x="20.1468%" y="501" width="0.1974%" height="15" fill="rgb(245,210,41)" fg:x="22452" fg:w="220"/><text x="20.3968%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (219 samples, 0.20%)</title><rect x="20.1477%" y="485" width="0.1965%" height="15" fill="rgb(206,13,37)" fg:x="22453" fg:w="219"/><text x="20.3977%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (199 samples, 0.18%)</title><rect x="20.1656%" y="469" width="0.1786%" height="15" fill="rgb(250,61,18)" fg:x="22473" fg:w="199"/><text x="20.4156%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (180 samples, 0.16%)</title><rect x="20.1827%" y="453" width="0.1615%" height="15" fill="rgb(235,172,48)" fg:x="22492" fg:w="180"/><text x="20.4327%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (180 samples, 0.16%)</title><rect x="20.1827%" y="437" width="0.1615%" height="15" fill="rgb(249,201,17)" fg:x="22492" fg:w="180"/><text x="20.4327%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (13 samples, 0.01%)</title><rect x="20.3586%" y="597" width="0.0117%" height="15" fill="rgb(219,208,6)" fg:x="22688" fg:w="13"/><text x="20.6086%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (13 samples, 0.01%)</title><rect x="20.3586%" y="581" width="0.0117%" height="15" fill="rgb(248,31,23)" fg:x="22688" fg:w="13"/><text x="20.6086%" y="591.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (319 samples, 0.29%)</title><rect x="20.0876%" y="741" width="0.2862%" height="15" fill="rgb(245,15,42)" fg:x="22386" fg:w="319"/><text x="20.3376%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (308 samples, 0.28%)</title><rect x="20.0974%" y="725" width="0.2764%" height="15" fill="rgb(222,217,39)" fg:x="22397" fg:w="308"/><text x="20.3474%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (308 samples, 0.28%)</title><rect x="20.0974%" y="709" width="0.2764%" height="15" fill="rgb(210,219,27)" fg:x="22397" fg:w="308"/><text x="20.3474%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (308 samples, 0.28%)</title><rect x="20.0974%" y="693" width="0.2764%" height="15" fill="rgb(252,166,36)" fg:x="22397" fg:w="308"/><text x="20.3474%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (308 samples, 0.28%)</title><rect x="20.0974%" y="677" width="0.2764%" height="15" fill="rgb(245,132,34)" fg:x="22397" fg:w="308"/><text x="20.3474%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (33 samples, 0.03%)</title><rect x="20.3442%" y="661" width="0.0296%" height="15" fill="rgb(236,54,3)" fg:x="22672" fg:w="33"/><text x="20.5942%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (33 samples, 0.03%)</title><rect x="20.3442%" y="645" width="0.0296%" height="15" fill="rgb(241,173,43)" fg:x="22672" fg:w="33"/><text x="20.5942%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (33 samples, 0.03%)</title><rect x="20.3442%" y="629" width="0.0296%" height="15" fill="rgb(215,190,9)" fg:x="22672" fg:w="33"/><text x="20.5942%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (24 samples, 0.02%)</title><rect x="20.3523%" y="613" width="0.0215%" height="15" fill="rgb(242,101,16)" fg:x="22681" fg:w="24"/><text x="20.6023%" y="623.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="20.7498%" y="709" width="0.0126%" height="15" fill="rgb(223,190,21)" fg:x="23124" fg:w="14"/><text x="20.9998%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (26 samples, 0.02%)</title><rect x="20.7624%" y="693" width="0.0233%" height="15" fill="rgb(215,228,25)" fg:x="23138" fg:w="26"/><text x="21.0124%" y="703.50"></text></g><g><title>std::collections::hash::map::RandomState::new (26 samples, 0.02%)</title><rect x="20.7624%" y="677" width="0.0233%" height="15" fill="rgb(225,36,22)" fg:x="23138" fg:w="26"/><text x="21.0124%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (26 samples, 0.02%)</title><rect x="20.7624%" y="661" width="0.0233%" height="15" fill="rgb(251,106,46)" fg:x="23138" fg:w="26"/><text x="21.0124%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (26 samples, 0.02%)</title><rect x="20.7624%" y="645" width="0.0233%" height="15" fill="rgb(208,90,1)" fg:x="23138" fg:w="26"/><text x="21.0124%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (17 samples, 0.02%)</title><rect x="20.7704%" y="629" width="0.0153%" height="15" fill="rgb(243,10,4)" fg:x="23147" fg:w="17"/><text x="21.0204%" y="639.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="20.8360%" y="469" width="0.0108%" height="15" fill="rgb(212,137,27)" fg:x="23220" fg:w="12"/><text x="21.0860%" y="479.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="20.8360%" y="453" width="0.0108%" height="15" fill="rgb(231,220,49)" fg:x="23220" fg:w="12"/><text x="21.0860%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="20.8467%" y="453" width="0.0188%" height="15" fill="rgb(237,96,20)" fg:x="23232" fg:w="21"/><text x="21.0967%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (21 samples, 0.02%)</title><rect x="20.8467%" y="437" width="0.0188%" height="15" fill="rgb(239,229,30)" fg:x="23232" fg:w="21"/><text x="21.0967%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (18 samples, 0.02%)</title><rect x="20.8494%" y="421" width="0.0162%" height="15" fill="rgb(219,65,33)" fg:x="23235" fg:w="18"/><text x="21.0994%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (15 samples, 0.01%)</title><rect x="20.8521%" y="405" width="0.0135%" height="15" fill="rgb(243,134,7)" fg:x="23238" fg:w="15"/><text x="21.1021%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="20.8521%" y="389" width="0.0135%" height="15" fill="rgb(216,177,54)" fg:x="23238" fg:w="15"/><text x="21.1021%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="20.8521%" y="373" width="0.0135%" height="15" fill="rgb(211,160,20)" fg:x="23238" fg:w="15"/><text x="21.1021%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="20.8656%" y="453" width="0.0117%" height="15" fill="rgb(239,85,39)" fg:x="23253" fg:w="13"/><text x="21.1156%" y="463.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (13 samples, 0.01%)</title><rect x="20.8656%" y="437" width="0.0117%" height="15" fill="rgb(232,125,22)" fg:x="23253" fg:w="13"/><text x="21.1156%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (108 samples, 0.10%)</title><rect x="20.8360%" y="501" width="0.0969%" height="15" fill="rgb(244,57,34)" fg:x="23220" fg:w="108"/><text x="21.0860%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (108 samples, 0.10%)</title><rect x="20.8360%" y="485" width="0.0969%" height="15" fill="rgb(214,203,32)" fg:x="23220" fg:w="108"/><text x="21.0860%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (96 samples, 0.09%)</title><rect x="20.8467%" y="469" width="0.0861%" height="15" fill="rgb(207,58,43)" fg:x="23232" fg:w="96"/><text x="21.0967%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (62 samples, 0.06%)</title><rect x="20.8772%" y="453" width="0.0556%" height="15" fill="rgb(215,193,15)" fg:x="23266" fg:w="62"/><text x="21.1272%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (62 samples, 0.06%)</title><rect x="20.8772%" y="437" width="0.0556%" height="15" fill="rgb(232,15,44)" fg:x="23266" fg:w="62"/><text x="21.1272%" y="447.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (206 samples, 0.18%)</title><rect x="20.7624%" y="709" width="0.1848%" height="15" fill="rgb(212,3,48)" fg:x="23138" fg:w="206"/><text x="21.0124%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (180 samples, 0.16%)</title><rect x="20.7857%" y="693" width="0.1615%" height="15" fill="rgb(218,128,7)" fg:x="23164" fg:w="180"/><text x="21.0357%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (180 samples, 0.16%)</title><rect x="20.7857%" y="677" width="0.1615%" height="15" fill="rgb(226,216,39)" fg:x="23164" fg:w="180"/><text x="21.0357%" y="687.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (170 samples, 0.15%)</title><rect x="20.7947%" y="661" width="0.1525%" height="15" fill="rgb(243,47,51)" fg:x="23174" fg:w="170"/><text x="21.0447%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (170 samples, 0.15%)</title><rect x="20.7947%" y="645" width="0.1525%" height="15" fill="rgb(241,183,40)" fg:x="23174" fg:w="170"/><text x="21.0447%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (169 samples, 0.15%)</title><rect x="20.7956%" y="629" width="0.1516%" height="15" fill="rgb(231,217,32)" fg:x="23175" fg:w="169"/><text x="21.0456%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (143 samples, 0.13%)</title><rect x="20.8189%" y="613" width="0.1283%" height="15" fill="rgb(229,61,38)" fg:x="23201" fg:w="143"/><text x="21.0689%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (133 samples, 0.12%)</title><rect x="20.8279%" y="597" width="0.1193%" height="15" fill="rgb(225,210,5)" fg:x="23211" fg:w="133"/><text x="21.0779%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (133 samples, 0.12%)</title><rect x="20.8279%" y="581" width="0.1193%" height="15" fill="rgb(231,79,45)" fg:x="23211" fg:w="133"/><text x="21.0779%" y="591.50"></text></g><g><title>alloc::alloc::alloc (133 samples, 0.12%)</title><rect x="20.8279%" y="565" width="0.1193%" height="15" fill="rgb(224,100,7)" fg:x="23211" fg:w="133"/><text x="21.0779%" y="575.50"></text></g><g><title>__rg_alloc (133 samples, 0.12%)</title><rect x="20.8279%" y="549" width="0.1193%" height="15" fill="rgb(241,198,18)" fg:x="23211" fg:w="133"/><text x="21.0779%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (133 samples, 0.12%)</title><rect x="20.8279%" y="533" width="0.1193%" height="15" fill="rgb(252,97,53)" fg:x="23211" fg:w="133"/><text x="21.0779%" y="543.50"></text></g><g><title>rust_alloc (133 samples, 0.12%)</title><rect x="20.8279%" y="517" width="0.1193%" height="15" fill="rgb(220,88,7)" fg:x="23211" fg:w="133"/><text x="21.0779%" y="527.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (16 samples, 0.01%)</title><rect x="20.9329%" y="501" width="0.0144%" height="15" fill="rgb(213,176,14)" fg:x="23328" fg:w="16"/><text x="21.1829%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (13 samples, 0.01%)</title><rect x="20.9813%" y="661" width="0.0117%" height="15" fill="rgb(246,73,7)" fg:x="23382" fg:w="13"/><text x="21.2313%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="20.9813%" y="645" width="0.0117%" height="15" fill="rgb(245,64,36)" fg:x="23382" fg:w="13"/><text x="21.2313%" y="655.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (13 samples, 0.01%)</title><rect x="20.9813%" y="629" width="0.0117%" height="15" fill="rgb(245,80,10)" fg:x="23382" fg:w="13"/><text x="21.2313%" y="639.50"></text></g><g><title>abi_stable::erased_types::iterator::next (33 samples, 0.03%)</title><rect x="20.9975%" y="661" width="0.0296%" height="15" fill="rgb(232,107,50)" fg:x="23400" fg:w="33"/><text x="21.2475%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.07%)</title><rect x="20.9705%" y="693" width="0.0736%" height="15" fill="rgb(253,3,0)" fg:x="23370" fg:w="82"/><text x="21.2205%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (82 samples, 0.07%)</title><rect x="20.9705%" y="677" width="0.0736%" height="15" fill="rgb(212,99,53)" fg:x="23370" fg:w="82"/><text x="21.2205%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (19 samples, 0.02%)</title><rect x="21.0271%" y="661" width="0.0170%" height="15" fill="rgb(249,111,54)" fg:x="23433" fg:w="19"/><text x="21.2771%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (14 samples, 0.01%)</title><rect x="21.0316%" y="645" width="0.0126%" height="15" fill="rgb(249,55,30)" fg:x="23438" fg:w="14"/><text x="21.2816%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (12 samples, 0.01%)</title><rect x="21.0576%" y="661" width="0.0108%" height="15" fill="rgb(237,47,42)" fg:x="23467" fg:w="12"/><text x="21.3076%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (12 samples, 0.01%)</title><rect x="21.0576%" y="645" width="0.0108%" height="15" fill="rgb(211,20,18)" fg:x="23467" fg:w="12"/><text x="21.3076%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (50 samples, 0.04%)</title><rect x="21.0441%" y="693" width="0.0449%" height="15" fill="rgb(231,203,46)" fg:x="23452" fg:w="50"/><text x="21.2941%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (50 samples, 0.04%)</title><rect x="21.0441%" y="677" width="0.0449%" height="15" fill="rgb(237,142,3)" fg:x="23452" fg:w="50"/><text x="21.2941%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (23 samples, 0.02%)</title><rect x="21.0684%" y="661" width="0.0206%" height="15" fill="rgb(241,107,1)" fg:x="23479" fg:w="23"/><text x="21.3184%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (23 samples, 0.02%)</title><rect x="21.0684%" y="645" width="0.0206%" height="15" fill="rgb(229,83,13)" fg:x="23479" fg:w="23"/><text x="21.3184%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (12 samples, 0.01%)</title><rect x="21.0782%" y="629" width="0.0108%" height="15" fill="rgb(241,91,40)" fg:x="23490" fg:w="12"/><text x="21.3282%" y="639.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (14 samples, 0.01%)</title><rect x="21.0890%" y="693" width="0.0126%" height="15" fill="rgb(225,3,45)" fg:x="23502" fg:w="14"/><text x="21.3390%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (14 samples, 0.01%)</title><rect x="21.0890%" y="677" width="0.0126%" height="15" fill="rgb(244,223,14)" fg:x="23502" fg:w="14"/><text x="21.3390%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (14 samples, 0.01%)</title><rect x="21.0890%" y="661" width="0.0126%" height="15" fill="rgb(224,124,37)" fg:x="23502" fg:w="14"/><text x="21.3390%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (16 samples, 0.01%)</title><rect x="21.1321%" y="581" width="0.0144%" height="15" fill="rgb(251,171,30)" fg:x="23550" fg:w="16"/><text x="21.3821%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="21.1321%" y="565" width="0.0144%" height="15" fill="rgb(236,46,54)" fg:x="23550" fg:w="16"/><text x="21.3821%" y="575.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.01%)</title><rect x="21.1321%" y="549" width="0.0144%" height="15" fill="rgb(245,213,5)" fg:x="23550" fg:w="16"/><text x="21.3821%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="21.1321%" y="533" width="0.0144%" height="15" fill="rgb(230,144,27)" fg:x="23550" fg:w="16"/><text x="21.3821%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="21.1321%" y="517" width="0.0144%" height="15" fill="rgb(220,86,6)" fg:x="23550" fg:w="16"/><text x="21.3821%" y="527.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="21.1321%" y="501" width="0.0144%" height="15" fill="rgb(240,20,13)" fg:x="23550" fg:w="16"/><text x="21.3821%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="21.1321%" y="485" width="0.0144%" height="15" fill="rgb(217,89,34)" fg:x="23550" fg:w="16"/><text x="21.3821%" y="495.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="21.1653%" y="485" width="0.0108%" height="15" fill="rgb(229,13,5)" fg:x="23587" fg:w="12"/><text x="21.4153%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (12 samples, 0.01%)</title><rect x="21.2039%" y="437" width="0.0108%" height="15" fill="rgb(244,67,35)" fg:x="23630" fg:w="12"/><text x="21.4539%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (50 samples, 0.04%)</title><rect x="21.1814%" y="485" width="0.0449%" height="15" fill="rgb(221,40,2)" fg:x="23605" fg:w="50"/><text x="21.4314%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (50 samples, 0.04%)</title><rect x="21.1814%" y="469" width="0.0449%" height="15" fill="rgb(237,157,21)" fg:x="23605" fg:w="50"/><text x="21.4314%" y="479.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (49 samples, 0.04%)</title><rect x="21.1823%" y="453" width="0.0440%" height="15" fill="rgb(222,94,11)" fg:x="23606" fg:w="49"/><text x="21.4323%" y="463.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="21.2146%" y="437" width="0.0117%" height="15" fill="rgb(249,113,6)" fg:x="23642" fg:w="13"/><text x="21.4646%" y="447.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="21.2146%" y="421" width="0.0117%" height="15" fill="rgb(238,137,36)" fg:x="23642" fg:w="13"/><text x="21.4646%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (83 samples, 0.07%)</title><rect x="21.1653%" y="517" width="0.0745%" height="15" fill="rgb(210,102,26)" fg:x="23587" fg:w="83"/><text x="21.4153%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (83 samples, 0.07%)</title><rect x="21.1653%" y="501" width="0.0745%" height="15" fill="rgb(218,30,30)" fg:x="23587" fg:w="83"/><text x="21.4153%" y="511.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (15 samples, 0.01%)</title><rect x="21.2263%" y="485" width="0.0135%" height="15" fill="rgb(214,67,26)" fg:x="23655" fg:w="15"/><text x="21.4763%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (93 samples, 0.08%)</title><rect x="21.1653%" y="549" width="0.0835%" height="15" fill="rgb(251,9,53)" fg:x="23587" fg:w="93"/><text x="21.4153%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (93 samples, 0.08%)</title><rect x="21.1653%" y="533" width="0.0835%" height="15" fill="rgb(228,204,25)" fg:x="23587" fg:w="93"/><text x="21.4153%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (107 samples, 0.10%)</title><rect x="21.1554%" y="565" width="0.0960%" height="15" fill="rgb(207,153,8)" fg:x="23576" fg:w="107"/><text x="21.4054%" y="575.50"></text></g><g><title>rust_dealloc (122 samples, 0.11%)</title><rect x="21.1464%" y="581" width="0.1095%" height="15" fill="rgb(242,9,16)" fg:x="23566" fg:w="122"/><text x="21.3964%" y="591.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,346 samples, 1.21%)</title><rect x="20.0490%" y="773" width="1.2078%" height="15" fill="rgb(217,211,10)" fg:x="22343" fg:w="1346"/><text x="20.2990%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,313 samples, 1.18%)</title><rect x="20.0786%" y="757" width="1.1782%" height="15" fill="rgb(219,228,52)" fg:x="22376" fg:w="1313"/><text x="20.3286%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (984 samples, 0.88%)</title><rect x="20.3738%" y="741" width="0.8830%" height="15" fill="rgb(231,92,29)" fg:x="22705" fg:w="984"/><text x="20.6238%" y="751.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (565 samples, 0.51%)</title><rect x="20.7498%" y="725" width="0.5070%" height="15" fill="rgb(232,8,23)" fg:x="23124" fg:w="565"/><text x="20.9998%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (345 samples, 0.31%)</title><rect x="20.9472%" y="709" width="0.3096%" height="15" fill="rgb(216,211,34)" fg:x="23344" fg:w="345"/><text x="21.1972%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (173 samples, 0.16%)</title><rect x="21.1016%" y="693" width="0.1552%" height="15" fill="rgb(236,151,0)" fg:x="23516" fg:w="173"/><text x="21.3516%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (173 samples, 0.16%)</title><rect x="21.1016%" y="677" width="0.1552%" height="15" fill="rgb(209,168,3)" fg:x="23516" fg:w="173"/><text x="21.3516%" y="687.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (173 samples, 0.16%)</title><rect x="21.1016%" y="661" width="0.1552%" height="15" fill="rgb(208,129,28)" fg:x="23516" fg:w="173"/><text x="21.3516%" y="671.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (159 samples, 0.14%)</title><rect x="21.1141%" y="645" width="0.1427%" height="15" fill="rgb(229,78,22)" fg:x="23530" fg:w="159"/><text x="21.3641%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (153 samples, 0.14%)</title><rect x="21.1195%" y="629" width="0.1373%" height="15" fill="rgb(228,187,13)" fg:x="23536" fg:w="153"/><text x="21.3695%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (153 samples, 0.14%)</title><rect x="21.1195%" y="613" width="0.1373%" height="15" fill="rgb(240,119,24)" fg:x="23536" fg:w="153"/><text x="21.3695%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (153 samples, 0.14%)</title><rect x="21.1195%" y="597" width="0.1373%" height="15" fill="rgb(209,194,42)" fg:x="23536" fg:w="153"/><text x="21.3695%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.02%)</title><rect x="21.3196%" y="725" width="0.0162%" height="15" fill="rgb(247,200,46)" fg:x="23759" fg:w="18"/><text x="21.5696%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (18 samples, 0.02%)</title><rect x="21.3196%" y="709" width="0.0162%" height="15" fill="rgb(218,76,16)" fg:x="23759" fg:w="18"/><text x="21.5696%" y="719.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (94 samples, 0.08%)</title><rect x="21.2676%" y="757" width="0.0843%" height="15" fill="rgb(225,21,48)" fg:x="23701" fg:w="94"/><text x="21.5176%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (58 samples, 0.05%)</title><rect x="21.2999%" y="741" width="0.0520%" height="15" fill="rgb(239,223,50)" fg:x="23737" fg:w="58"/><text x="21.5499%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (18 samples, 0.02%)</title><rect x="21.3358%" y="725" width="0.0162%" height="15" fill="rgb(244,45,21)" fg:x="23777" fg:w="18"/><text x="21.5858%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 0.02%)</title><rect x="21.3358%" y="709" width="0.0162%" height="15" fill="rgb(232,33,43)" fg:x="23777" fg:w="18"/><text x="21.5858%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.02%)</title><rect x="21.3358%" y="693" width="0.0162%" height="15" fill="rgb(209,8,3)" fg:x="23777" fg:w="18"/><text x="21.5858%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="21.3358%" y="677" width="0.0162%" height="15" fill="rgb(214,25,53)" fg:x="23777" fg:w="18"/><text x="21.5858%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.02%)</title><rect x="21.3358%" y="661" width="0.0162%" height="15" fill="rgb(254,186,54)" fg:x="23777" fg:w="18"/><text x="21.5858%" y="671.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (15 samples, 0.01%)</title><rect x="21.4022%" y="629" width="0.0135%" height="15" fill="rgb(208,174,49)" fg:x="23851" fg:w="15"/><text x="21.6522%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="21.4488%" y="437" width="0.0135%" height="15" fill="rgb(233,191,51)" fg:x="23903" fg:w="15"/><text x="21.6988%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (15 samples, 0.01%)</title><rect x="21.4488%" y="421" width="0.0135%" height="15" fill="rgb(222,134,10)" fg:x="23903" fg:w="15"/><text x="21.6988%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (13 samples, 0.01%)</title><rect x="21.4506%" y="405" width="0.0117%" height="15" fill="rgb(230,226,20)" fg:x="23905" fg:w="13"/><text x="21.7006%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (273 samples, 0.24%)</title><rect x="21.4336%" y="485" width="0.2450%" height="15" fill="rgb(251,111,25)" fg:x="23886" fg:w="273"/><text x="21.6836%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (269 samples, 0.24%)</title><rect x="21.4372%" y="469" width="0.2414%" height="15" fill="rgb(224,40,46)" fg:x="23890" fg:w="269"/><text x="21.6872%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (262 samples, 0.24%)</title><rect x="21.4434%" y="453" width="0.2351%" height="15" fill="rgb(236,108,47)" fg:x="23897" fg:w="262"/><text x="21.6934%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (228 samples, 0.20%)</title><rect x="21.4740%" y="437" width="0.2046%" height="15" fill="rgb(234,93,0)" fg:x="23931" fg:w="228"/><text x="21.7240%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (228 samples, 0.20%)</title><rect x="21.4740%" y="421" width="0.2046%" height="15" fill="rgb(224,213,32)" fg:x="23931" fg:w="228"/><text x="21.7240%" y="431.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (309 samples, 0.28%)</title><rect x="21.4022%" y="645" width="0.2773%" height="15" fill="rgb(251,11,48)" fg:x="23851" fg:w="309"/><text x="21.6522%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (294 samples, 0.26%)</title><rect x="21.4156%" y="629" width="0.2638%" height="15" fill="rgb(236,173,5)" fg:x="23866" fg:w="294"/><text x="21.6656%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (294 samples, 0.26%)</title><rect x="21.4156%" y="613" width="0.2638%" height="15" fill="rgb(230,95,12)" fg:x="23866" fg:w="294"/><text x="21.6656%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (281 samples, 0.25%)</title><rect x="21.4273%" y="597" width="0.2521%" height="15" fill="rgb(232,209,1)" fg:x="23879" fg:w="281"/><text x="21.6773%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (281 samples, 0.25%)</title><rect x="21.4273%" y="581" width="0.2521%" height="15" fill="rgb(232,6,1)" fg:x="23879" fg:w="281"/><text x="21.6773%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (281 samples, 0.25%)</title><rect x="21.4273%" y="565" width="0.2521%" height="15" fill="rgb(210,224,50)" fg:x="23879" fg:w="281"/><text x="21.6773%" y="575.50"></text></g><g><title>alloc::alloc::alloc (281 samples, 0.25%)</title><rect x="21.4273%" y="549" width="0.2521%" height="15" fill="rgb(228,127,35)" fg:x="23879" fg:w="281"/><text x="21.6773%" y="559.50"></text></g><g><title>__rg_alloc (281 samples, 0.25%)</title><rect x="21.4273%" y="533" width="0.2521%" height="15" fill="rgb(245,102,45)" fg:x="23879" fg:w="281"/><text x="21.6773%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (281 samples, 0.25%)</title><rect x="21.4273%" y="517" width="0.2521%" height="15" fill="rgb(214,1,49)" fg:x="23879" fg:w="281"/><text x="21.6773%" y="527.50"></text></g><g><title>rust_alloc (280 samples, 0.25%)</title><rect x="21.4282%" y="501" width="0.2513%" height="15" fill="rgb(226,163,40)" fg:x="23880" fg:w="280"/><text x="21.6782%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (112 samples, 0.10%)</title><rect x="21.7270%" y="581" width="0.1005%" height="15" fill="rgb(239,212,28)" fg:x="24213" fg:w="112"/><text x="21.9770%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (112 samples, 0.10%)</title><rect x="21.7270%" y="565" width="0.1005%" height="15" fill="rgb(220,20,13)" fg:x="24213" fg:w="112"/><text x="21.9770%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (134 samples, 0.12%)</title><rect x="21.7171%" y="597" width="0.1202%" height="15" fill="rgb(210,164,35)" fg:x="24202" fg:w="134"/><text x="21.9671%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (667 samples, 0.60%)</title><rect x="21.3959%" y="725" width="0.5985%" height="15" fill="rgb(248,109,41)" fg:x="23844" fg:w="667"/><text x="21.6459%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (660 samples, 0.59%)</title><rect x="21.4022%" y="709" width="0.5922%" height="15" fill="rgb(238,23,50)" fg:x="23851" fg:w="660"/><text x="21.6522%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (660 samples, 0.59%)</title><rect x="21.4022%" y="693" width="0.5922%" height="15" fill="rgb(211,48,49)" fg:x="23851" fg:w="660"/><text x="21.6522%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (660 samples, 0.59%)</title><rect x="21.4022%" y="677" width="0.5922%" height="15" fill="rgb(223,36,21)" fg:x="23851" fg:w="660"/><text x="21.6522%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (660 samples, 0.59%)</title><rect x="21.4022%" y="661" width="0.5922%" height="15" fill="rgb(207,123,46)" fg:x="23851" fg:w="660"/><text x="21.6522%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (351 samples, 0.31%)</title><rect x="21.6794%" y="645" width="0.3150%" height="15" fill="rgb(240,218,32)" fg:x="24160" fg:w="351"/><text x="21.9294%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (351 samples, 0.31%)</title><rect x="21.6794%" y="629" width="0.3150%" height="15" fill="rgb(252,5,43)" fg:x="24160" fg:w="351"/><text x="21.9294%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (351 samples, 0.31%)</title><rect x="21.6794%" y="613" width="0.3150%" height="15" fill="rgb(252,84,19)" fg:x="24160" fg:w="351"/><text x="21.9294%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (175 samples, 0.16%)</title><rect x="21.8374%" y="597" width="0.1570%" height="15" fill="rgb(243,152,39)" fg:x="24336" fg:w="175"/><text x="22.0874%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="22.3210%" y="693" width="0.0144%" height="15" fill="rgb(234,160,15)" fg:x="24875" fg:w="16"/><text x="22.5710%" y="703.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (18 samples, 0.02%)</title><rect x="22.3354%" y="613" width="0.0162%" height="15" fill="rgb(237,34,20)" fg:x="24891" fg:w="18"/><text x="22.5854%" y="623.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="22.3354%" y="597" width="0.0162%" height="15" fill="rgb(229,97,13)" fg:x="24891" fg:w="18"/><text x="22.5854%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (38 samples, 0.03%)</title><rect x="22.3354%" y="677" width="0.0341%" height="15" fill="rgb(234,71,50)" fg:x="24891" fg:w="38"/><text x="22.5854%" y="687.50"></text></g><g><title>std::collections::hash::map::RandomState::new (38 samples, 0.03%)</title><rect x="22.3354%" y="661" width="0.0341%" height="15" fill="rgb(253,155,4)" fg:x="24891" fg:w="38"/><text x="22.5854%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (38 samples, 0.03%)</title><rect x="22.3354%" y="645" width="0.0341%" height="15" fill="rgb(222,185,37)" fg:x="24891" fg:w="38"/><text x="22.5854%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (38 samples, 0.03%)</title><rect x="22.3354%" y="629" width="0.0341%" height="15" fill="rgb(251,177,13)" fg:x="24891" fg:w="38"/><text x="22.5854%" y="639.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (20 samples, 0.02%)</title><rect x="22.3515%" y="613" width="0.0179%" height="15" fill="rgb(250,179,40)" fg:x="24909" fg:w="20"/><text x="22.6015%" y="623.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="22.4224%" y="453" width="0.0108%" height="15" fill="rgb(242,44,2)" fg:x="24988" fg:w="12"/><text x="22.6724%" y="463.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="22.4224%" y="437" width="0.0108%" height="15" fill="rgb(216,177,13)" fg:x="24988" fg:w="12"/><text x="22.6724%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="22.4332%" y="437" width="0.0197%" height="15" fill="rgb(216,106,43)" fg:x="25000" fg:w="22"/><text x="22.6832%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (22 samples, 0.02%)</title><rect x="22.4332%" y="421" width="0.0197%" height="15" fill="rgb(216,183,2)" fg:x="25000" fg:w="22"/><text x="22.6832%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (20 samples, 0.02%)</title><rect x="22.4350%" y="405" width="0.0179%" height="15" fill="rgb(249,75,3)" fg:x="25002" fg:w="20"/><text x="22.6850%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (15 samples, 0.01%)</title><rect x="22.4395%" y="389" width="0.0135%" height="15" fill="rgb(219,67,39)" fg:x="25007" fg:w="15"/><text x="22.6895%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="22.4395%" y="373" width="0.0135%" height="15" fill="rgb(253,228,2)" fg:x="25007" fg:w="15"/><text x="22.6895%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="22.4395%" y="357" width="0.0135%" height="15" fill="rgb(235,138,27)" fg:x="25007" fg:w="15"/><text x="22.6895%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (65 samples, 0.06%)</title><rect x="22.4215%" y="485" width="0.0583%" height="15" fill="rgb(236,97,51)" fg:x="24987" fg:w="65"/><text x="22.6715%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (65 samples, 0.06%)</title><rect x="22.4215%" y="469" width="0.0583%" height="15" fill="rgb(240,80,30)" fg:x="24987" fg:w="65"/><text x="22.6715%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (52 samples, 0.05%)</title><rect x="22.4332%" y="453" width="0.0467%" height="15" fill="rgb(230,178,19)" fg:x="25000" fg:w="52"/><text x="22.6832%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (29 samples, 0.03%)</title><rect x="22.4538%" y="437" width="0.0260%" height="15" fill="rgb(210,190,27)" fg:x="25023" fg:w="29"/><text x="22.7038%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (29 samples, 0.03%)</title><rect x="22.4538%" y="421" width="0.0260%" height="15" fill="rgb(222,107,31)" fg:x="25023" fg:w="29"/><text x="22.7038%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (171 samples, 0.15%)</title><rect x="22.3354%" y="693" width="0.1534%" height="15" fill="rgb(216,127,34)" fg:x="24891" fg:w="171"/><text x="22.5854%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (133 samples, 0.12%)</title><rect x="22.3695%" y="677" width="0.1193%" height="15" fill="rgb(234,116,52)" fg:x="24929" fg:w="133"/><text x="22.6195%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (133 samples, 0.12%)</title><rect x="22.3695%" y="661" width="0.1193%" height="15" fill="rgb(222,124,15)" fg:x="24929" fg:w="133"/><text x="22.6195%" y="671.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (122 samples, 0.11%)</title><rect x="22.3794%" y="645" width="0.1095%" height="15" fill="rgb(231,179,28)" fg:x="24940" fg:w="122"/><text x="22.6294%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (122 samples, 0.11%)</title><rect x="22.3794%" y="629" width="0.1095%" height="15" fill="rgb(226,93,45)" fg:x="24940" fg:w="122"/><text x="22.6294%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (120 samples, 0.11%)</title><rect x="22.3811%" y="613" width="0.1077%" height="15" fill="rgb(215,8,51)" fg:x="24942" fg:w="120"/><text x="22.6311%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (98 samples, 0.09%)</title><rect x="22.4009%" y="597" width="0.0879%" height="15" fill="rgb(223,106,5)" fg:x="24964" fg:w="98"/><text x="22.6509%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (85 samples, 0.08%)</title><rect x="22.4126%" y="581" width="0.0763%" height="15" fill="rgb(250,191,5)" fg:x="24977" fg:w="85"/><text x="22.6626%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (85 samples, 0.08%)</title><rect x="22.4126%" y="565" width="0.0763%" height="15" fill="rgb(242,132,44)" fg:x="24977" fg:w="85"/><text x="22.6626%" y="575.50"></text></g><g><title>alloc::alloc::alloc (85 samples, 0.08%)</title><rect x="22.4126%" y="549" width="0.0763%" height="15" fill="rgb(251,152,29)" fg:x="24977" fg:w="85"/><text x="22.6626%" y="559.50"></text></g><g><title>__rg_alloc (85 samples, 0.08%)</title><rect x="22.4126%" y="533" width="0.0763%" height="15" fill="rgb(218,179,5)" fg:x="24977" fg:w="85"/><text x="22.6626%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (85 samples, 0.08%)</title><rect x="22.4126%" y="517" width="0.0763%" height="15" fill="rgb(227,67,19)" fg:x="24977" fg:w="85"/><text x="22.6626%" y="527.50"></text></g><g><title>rust_alloc (85 samples, 0.08%)</title><rect x="22.4126%" y="501" width="0.0763%" height="15" fill="rgb(233,119,31)" fg:x="24977" fg:w="85"/><text x="22.6626%" y="511.50"></text></g><g><title>abi_stable::erased_types::iterator::next (42 samples, 0.04%)</title><rect x="22.5193%" y="645" width="0.0377%" height="15" fill="rgb(241,120,22)" fg:x="25096" fg:w="42"/><text x="22.7693%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.08%)</title><rect x="22.5032%" y="677" width="0.0790%" height="15" fill="rgb(224,102,30)" fg:x="25078" fg:w="88"/><text x="22.7532%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (88 samples, 0.08%)</title><rect x="22.5032%" y="661" width="0.0790%" height="15" fill="rgb(210,164,37)" fg:x="25078" fg:w="88"/><text x="22.7532%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (28 samples, 0.03%)</title><rect x="22.5570%" y="645" width="0.0251%" height="15" fill="rgb(226,191,16)" fg:x="25138" fg:w="28"/><text x="22.8070%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (18 samples, 0.02%)</title><rect x="22.5660%" y="629" width="0.0162%" height="15" fill="rgb(214,40,45)" fg:x="25148" fg:w="18"/><text x="22.8160%" y="639.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (13 samples, 0.01%)</title><rect x="22.5705%" y="613" width="0.0117%" height="15" fill="rgb(244,29,26)" fg:x="25153" fg:w="13"/><text x="22.8205%" y="623.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (33 samples, 0.03%)</title><rect x="22.5830%" y="645" width="0.0296%" height="15" fill="rgb(216,16,5)" fg:x="25167" fg:w="33"/><text x="22.8330%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (18 samples, 0.02%)</title><rect x="22.5965%" y="629" width="0.0162%" height="15" fill="rgb(249,76,35)" fg:x="25182" fg:w="18"/><text x="22.8465%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="22.6019%" y="613" width="0.0108%" height="15" fill="rgb(207,11,44)" fg:x="25188" fg:w="12"/><text x="22.8519%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="22.6019%" y="597" width="0.0108%" height="15" fill="rgb(228,190,49)" fg:x="25188" fg:w="12"/><text x="22.8519%" y="607.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="22.6019%" y="581" width="0.0108%" height="15" fill="rgb(214,173,12)" fg:x="25188" fg:w="12"/><text x="22.8519%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="22.6019%" y="565" width="0.0108%" height="15" fill="rgb(218,26,35)" fg:x="25188" fg:w="12"/><text x="22.8519%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="22.6127%" y="613" width="0.0135%" height="15" fill="rgb(220,200,19)" fg:x="25200" fg:w="15"/><text x="22.8627%" y="623.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (15 samples, 0.01%)</title><rect x="22.6127%" y="597" width="0.0135%" height="15" fill="rgb(239,95,49)" fg:x="25200" fg:w="15"/><text x="22.8627%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (61 samples, 0.05%)</title><rect x="22.5822%" y="677" width="0.0547%" height="15" fill="rgb(235,85,53)" fg:x="25166" fg:w="61"/><text x="22.8322%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (61 samples, 0.05%)</title><rect x="22.5822%" y="661" width="0.0547%" height="15" fill="rgb(233,133,31)" fg:x="25166" fg:w="61"/><text x="22.8322%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (27 samples, 0.02%)</title><rect x="22.6127%" y="645" width="0.0242%" height="15" fill="rgb(218,25,20)" fg:x="25200" fg:w="27"/><text x="22.8627%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (27 samples, 0.02%)</title><rect x="22.6127%" y="629" width="0.0242%" height="15" fill="rgb(252,210,38)" fg:x="25200" fg:w="27"/><text x="22.8627%" y="639.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (12 samples, 0.01%)</title><rect x="22.6261%" y="613" width="0.0108%" height="15" fill="rgb(242,134,21)" fg:x="25215" fg:w="12"/><text x="22.8761%" y="623.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (13 samples, 0.01%)</title><rect x="22.6369%" y="677" width="0.0117%" height="15" fill="rgb(213,28,48)" fg:x="25227" fg:w="13"/><text x="22.8869%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (13 samples, 0.01%)</title><rect x="22.6369%" y="661" width="0.0117%" height="15" fill="rgb(250,196,2)" fg:x="25227" fg:w="13"/><text x="22.8869%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (13 samples, 0.01%)</title><rect x="22.6369%" y="645" width="0.0117%" height="15" fill="rgb(227,5,17)" fg:x="25227" fg:w="13"/><text x="22.8869%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (16 samples, 0.01%)</title><rect x="22.6800%" y="565" width="0.0144%" height="15" fill="rgb(221,226,24)" fg:x="25275" fg:w="16"/><text x="22.9300%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="22.6827%" y="549" width="0.0117%" height="15" fill="rgb(211,5,48)" fg:x="25278" fg:w="13"/><text x="22.9327%" y="559.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="22.6827%" y="533" width="0.0117%" height="15" fill="rgb(219,150,6)" fg:x="25278" fg:w="13"/><text x="22.9327%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="22.6827%" y="517" width="0.0117%" height="15" fill="rgb(251,46,16)" fg:x="25278" fg:w="13"/><text x="22.9327%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="22.6827%" y="501" width="0.0117%" height="15" fill="rgb(220,204,40)" fg:x="25278" fg:w="13"/><text x="22.9327%" y="511.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="22.6827%" y="485" width="0.0117%" height="15" fill="rgb(211,85,2)" fg:x="25278" fg:w="13"/><text x="22.9327%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="22.6827%" y="469" width="0.0117%" height="15" fill="rgb(229,17,7)" fg:x="25278" fg:w="13"/><text x="22.9327%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (71 samples, 0.06%)</title><rect x="22.7500%" y="421" width="0.0637%" height="15" fill="rgb(239,72,28)" fg:x="25353" fg:w="71"/><text x="23.0000%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (68 samples, 0.06%)</title><rect x="22.7526%" y="405" width="0.0610%" height="15" fill="rgb(230,47,54)" fg:x="25356" fg:w="68"/><text x="23.0026%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (117 samples, 0.10%)</title><rect x="22.7257%" y="469" width="0.1050%" height="15" fill="rgb(214,50,8)" fg:x="25326" fg:w="117"/><text x="22.9757%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (117 samples, 0.10%)</title><rect x="22.7257%" y="453" width="0.1050%" height="15" fill="rgb(216,198,43)" fg:x="25326" fg:w="117"/><text x="22.9757%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (117 samples, 0.10%)</title><rect x="22.7257%" y="437" width="0.1050%" height="15" fill="rgb(234,20,35)" fg:x="25326" fg:w="117"/><text x="22.9757%" y="447.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="22.8137%" y="421" width="0.0170%" height="15" fill="rgb(254,45,19)" fg:x="25424" fg:w="19"/><text x="23.0637%" y="431.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (19 samples, 0.02%)</title><rect x="22.8137%" y="405" width="0.0170%" height="15" fill="rgb(219,14,44)" fg:x="25424" fg:w="19"/><text x="23.0637%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (167 samples, 0.15%)</title><rect x="22.7114%" y="501" width="0.1499%" height="15" fill="rgb(217,220,26)" fg:x="25310" fg:w="167"/><text x="22.9614%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (167 samples, 0.15%)</title><rect x="22.7114%" y="485" width="0.1499%" height="15" fill="rgb(213,158,28)" fg:x="25310" fg:w="167"/><text x="22.9614%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (34 samples, 0.03%)</title><rect x="22.8307%" y="469" width="0.0305%" height="15" fill="rgb(252,51,52)" fg:x="25443" fg:w="34"/><text x="23.0807%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (192 samples, 0.17%)</title><rect x="22.6988%" y="549" width="0.1723%" height="15" fill="rgb(246,89,16)" fg:x="25296" fg:w="192"/><text x="22.9488%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (178 samples, 0.16%)</title><rect x="22.7114%" y="533" width="0.1597%" height="15" fill="rgb(216,158,49)" fg:x="25310" fg:w="178"/><text x="22.9614%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (178 samples, 0.16%)</title><rect x="22.7114%" y="517" width="0.1597%" height="15" fill="rgb(236,107,19)" fg:x="25310" fg:w="178"/><text x="22.9614%" y="527.50"></text></g><g><title>rust_dealloc (198 samples, 0.18%)</title><rect x="22.6943%" y="565" width="0.1777%" height="15" fill="rgb(228,185,30)" fg:x="25291" fg:w="198"/><text x="22.9443%" y="575.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,697 samples, 1.52%)</title><rect x="21.3519%" y="757" width="1.5228%" height="15" fill="rgb(246,134,8)" fg:x="23795" fg:w="1697"/><text x="21.6019%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,648 samples, 1.48%)</title><rect x="21.3959%" y="741" width="1.4788%" height="15" fill="rgb(214,143,50)" fg:x="23844" fg:w="1648"/><text x="21.6459%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (981 samples, 0.88%)</title><rect x="21.9944%" y="725" width="0.8803%" height="15" fill="rgb(228,75,8)" fg:x="24511" fg:w="981"/><text x="22.2444%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (617 samples, 0.55%)</title><rect x="22.3210%" y="709" width="0.5537%" height="15" fill="rgb(207,175,4)" fg:x="24875" fg:w="617"/><text x="22.5710%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (430 samples, 0.39%)</title><rect x="22.4888%" y="693" width="0.3859%" height="15" fill="rgb(205,108,24)" fg:x="25062" fg:w="430"/><text x="22.7388%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (252 samples, 0.23%)</title><rect x="22.6486%" y="677" width="0.2261%" height="15" fill="rgb(244,120,49)" fg:x="25240" fg:w="252"/><text x="22.8986%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (252 samples, 0.23%)</title><rect x="22.6486%" y="661" width="0.2261%" height="15" fill="rgb(223,47,38)" fg:x="25240" fg:w="252"/><text x="22.8986%" y="671.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (252 samples, 0.23%)</title><rect x="22.6486%" y="645" width="0.2261%" height="15" fill="rgb(229,179,11)" fg:x="25240" fg:w="252"/><text x="22.8986%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (244 samples, 0.22%)</title><rect x="22.6557%" y="629" width="0.2189%" height="15" fill="rgb(231,122,1)" fg:x="25248" fg:w="244"/><text x="22.9057%" y="639.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (229 samples, 0.21%)</title><rect x="22.6692%" y="613" width="0.2055%" height="15" fill="rgb(245,119,9)" fg:x="25263" fg:w="229"/><text x="22.9192%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (229 samples, 0.21%)</title><rect x="22.6692%" y="597" width="0.2055%" height="15" fill="rgb(241,163,25)" fg:x="25263" fg:w="229"/><text x="22.9192%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (229 samples, 0.21%)</title><rect x="22.6692%" y="581" width="0.2055%" height="15" fill="rgb(217,214,3)" fg:x="25263" fg:w="229"/><text x="22.9192%" y="591.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (1,819 samples, 1.63%)</title><rect x="21.2568%" y="773" width="1.6322%" height="15" fill="rgb(240,86,28)" fg:x="23689" fg:w="1819"/><text x="21.5068%" y="783.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (16 samples, 0.01%)</title><rect x="22.8747%" y="757" width="0.0144%" height="15" fill="rgb(215,47,9)" fg:x="25492" fg:w="16"/><text x="23.1247%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,710 samples, 1.53%)</title><rect x="22.8890%" y="773" width="1.5344%" height="15" fill="rgb(252,25,45)" fg:x="25508" fg:w="1710"/><text x="23.1390%" y="783.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (39 samples, 0.03%)</title><rect x="24.5706%" y="485" width="0.0350%" height="15" fill="rgb(251,164,9)" fg:x="27382" fg:w="39"/><text x="24.8206%" y="495.50"></text></g><g><title> (39 samples, 0.03%)</title><rect x="24.5706%" y="469" width="0.0350%" height="15" fill="rgb(233,194,0)" fg:x="27382" fg:w="39"/><text x="24.8206%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (153 samples, 0.14%)</title><rect x="24.4863%" y="517" width="0.1373%" height="15" fill="rgb(249,111,24)" fg:x="27288" fg:w="153"/><text x="24.7363%" y="527.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (141 samples, 0.13%)</title><rect x="24.4970%" y="501" width="0.1265%" height="15" fill="rgb(250,223,3)" fg:x="27300" fg:w="141"/><text x="24.7470%" y="511.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (16 samples, 0.01%)</title><rect x="24.6092%" y="485" width="0.0144%" height="15" fill="rgb(236,178,37)" fg:x="27425" fg:w="16"/><text x="24.8592%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (228 samples, 0.20%)</title><rect x="24.4701%" y="549" width="0.2046%" height="15" fill="rgb(241,158,50)" fg:x="27270" fg:w="228"/><text x="24.7201%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (228 samples, 0.20%)</title><rect x="24.4701%" y="533" width="0.2046%" height="15" fill="rgb(213,121,41)" fg:x="27270" fg:w="228"/><text x="24.7201%" y="543.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (54 samples, 0.05%)</title><rect x="24.6263%" y="517" width="0.0485%" height="15" fill="rgb(240,92,3)" fg:x="27444" fg:w="54"/><text x="24.8763%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (258 samples, 0.23%)</title><rect x="24.4504%" y="597" width="0.2315%" height="15" fill="rgb(205,123,3)" fg:x="27248" fg:w="258"/><text x="24.7004%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (236 samples, 0.21%)</title><rect x="24.4701%" y="581" width="0.2118%" height="15" fill="rgb(205,97,47)" fg:x="27270" fg:w="236"/><text x="24.7201%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (236 samples, 0.21%)</title><rect x="24.4701%" y="565" width="0.2118%" height="15" fill="rgb(247,152,14)" fg:x="27270" fg:w="236"/><text x="24.7201%" y="575.50"></text></g><g><title>rust_dealloc (275 samples, 0.25%)</title><rect x="24.4396%" y="613" width="0.2468%" height="15" fill="rgb(248,195,53)" fg:x="27236" fg:w="275"/><text x="24.6896%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (294 samples, 0.26%)</title><rect x="24.4235%" y="773" width="0.2638%" height="15" fill="rgb(226,201,16)" fg:x="27218" fg:w="294"/><text x="24.6735%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (294 samples, 0.26%)</title><rect x="24.4235%" y="757" width="0.2638%" height="15" fill="rgb(205,98,0)" fg:x="27218" fg:w="294"/><text x="24.6735%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (277 samples, 0.25%)</title><rect x="24.4387%" y="741" width="0.2486%" height="15" fill="rgb(214,191,48)" fg:x="27235" fg:w="277"/><text x="24.6887%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (277 samples, 0.25%)</title><rect x="24.4387%" y="725" width="0.2486%" height="15" fill="rgb(237,112,39)" fg:x="27235" fg:w="277"/><text x="24.6887%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (277 samples, 0.25%)</title><rect x="24.4387%" y="709" width="0.2486%" height="15" fill="rgb(247,203,27)" fg:x="27235" fg:w="277"/><text x="24.6887%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (277 samples, 0.25%)</title><rect x="24.4387%" y="693" width="0.2486%" height="15" fill="rgb(235,124,28)" fg:x="27235" fg:w="277"/><text x="24.6887%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (277 samples, 0.25%)</title><rect x="24.4387%" y="677" width="0.2486%" height="15" fill="rgb(208,207,46)" fg:x="27235" fg:w="277"/><text x="24.6887%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (277 samples, 0.25%)</title><rect x="24.4387%" y="661" width="0.2486%" height="15" fill="rgb(234,176,4)" fg:x="27235" fg:w="277"/><text x="24.6887%" y="671.50"></text></g><g><title>__rg_dealloc (277 samples, 0.25%)</title><rect x="24.4387%" y="645" width="0.2486%" height="15" fill="rgb(230,133,28)" fg:x="27235" fg:w="277"/><text x="24.6887%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (277 samples, 0.25%)</title><rect x="24.4387%" y="629" width="0.2486%" height="15" fill="rgb(211,137,40)" fg:x="27235" fg:w="277"/><text x="24.6887%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (28 samples, 0.03%)</title><rect x="24.6873%" y="757" width="0.0251%" height="15" fill="rgb(254,35,13)" fg:x="27512" fg:w="28"/><text x="24.9373%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (42 samples, 0.04%)</title><rect x="24.6873%" y="773" width="0.0377%" height="15" fill="rgb(225,49,51)" fg:x="27512" fg:w="42"/><text x="24.9373%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="24.7124%" y="757" width="0.0126%" height="15" fill="rgb(251,10,15)" fg:x="27540" fg:w="14"/><text x="24.9624%" y="767.50"></text></g><g><title>core::time::Duration::as_nanos (24 samples, 0.02%)</title><rect x="24.7833%" y="757" width="0.0215%" height="15" fill="rgb(228,207,15)" fg:x="27619" fg:w="24"/><text x="25.0333%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (139 samples, 0.12%)</title><rect x="24.9008%" y="709" width="0.1247%" height="15" fill="rgb(241,99,19)" fg:x="27750" fg:w="139"/><text x="25.1508%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::ge (139 samples, 0.12%)</title><rect x="24.9008%" y="693" width="0.1247%" height="15" fill="rgb(207,104,49)" fg:x="27750" fg:w="139"/><text x="25.1508%" y="703.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (137 samples, 0.12%)</title><rect x="24.9026%" y="677" width="0.1229%" height="15" fill="rgb(234,99,18)" fg:x="27752" fg:w="137"/><text x="25.1526%" y="687.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (137 samples, 0.12%)</title><rect x="24.9026%" y="661" width="0.1229%" height="15" fill="rgb(213,191,49)" fg:x="27752" fg:w="137"/><text x="25.1526%" y="671.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (137 samples, 0.12%)</title><rect x="24.9026%" y="645" width="0.1229%" height="15" fill="rgb(210,226,19)" fg:x="27752" fg:w="137"/><text x="25.1526%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (72 samples, 0.06%)</title><rect x="24.9610%" y="629" width="0.0646%" height="15" fill="rgb(229,97,18)" fg:x="27817" fg:w="72"/><text x="25.2110%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (274 samples, 0.25%)</title><rect x="24.8048%" y="741" width="0.2459%" height="15" fill="rgb(211,167,15)" fg:x="27643" fg:w="274"/><text x="25.0548%" y="751.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (274 samples, 0.25%)</title><rect x="24.8048%" y="725" width="0.2459%" height="15" fill="rgb(210,169,34)" fg:x="27643" fg:w="274"/><text x="25.0548%" y="735.50"></text></g><g><title>core::time::Duration::new (28 samples, 0.03%)</title><rect x="25.0256%" y="709" width="0.0251%" height="15" fill="rgb(241,121,31)" fg:x="27889" fg:w="28"/><text x="25.2756%" y="719.50"></text></g><g><title>std::time::SystemTime::duration_since (291 samples, 0.26%)</title><rect x="24.8048%" y="757" width="0.2611%" height="15" fill="rgb(232,40,11)" fg:x="27643" fg:w="291"/><text x="25.0548%" y="767.50"></text></g><g><title>tremor_common::time::nanotime (17 samples, 0.02%)</title><rect x="25.0507%" y="741" width="0.0153%" height="15" fill="rgb(205,86,26)" fg:x="27917" fg:w="17"/><text x="25.3007%" y="751.50"></text></g><g><title>tremor_common::time::nanotime (1,757 samples, 1.58%)</title><rect x="24.7250%" y="773" width="1.5766%" height="15" fill="rgb(231,126,28)" fg:x="27554" fg:w="1757"/><text x="24.9750%" y="783.50"></text></g><g><title>std::time::SystemTime::now (1,377 samples, 1.24%)</title><rect x="25.0660%" y="757" width="1.2356%" height="15" fill="rgb(219,221,18)" fg:x="27934" fg:w="1377"/><text x="25.3160%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,377 samples, 1.24%)</title><rect x="25.0660%" y="741" width="1.2356%" height="15" fill="rgb(211,40,0)" fg:x="27934" fg:w="1377"/><text x="25.3160%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::now (1,377 samples, 1.24%)</title><rect x="25.0660%" y="725" width="1.2356%" height="15" fill="rgb(239,85,43)" fg:x="27934" fg:w="1377"/><text x="25.3160%" y="735.50"></text></g><g><title>__clock_gettime_2 (1,074 samples, 0.96%)</title><rect x="25.3378%" y="709" width="0.9637%" height="15" fill="rgb(231,55,21)" fg:x="28237" fg:w="1074"/><text x="25.5878%" y="719.50"></text></g><g><title>__vdso_clock_gettime (1,000 samples, 0.90%)</title><rect x="25.4042%" y="693" width="0.8973%" height="15" fill="rgb(225,184,43)" fg:x="28311" fg:w="1000"/><text x="25.6542%" y="703.50"></text></g><g><title>[[vdso]] (680 samples, 0.61%)</title><rect x="25.6914%" y="677" width="0.6102%" height="15" fill="rgb(251,158,41)" fg:x="28631" fg:w="680"/><text x="25.9414%" y="687.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="26.3016%" y="741" width="0.0117%" height="15" fill="rgb(234,159,37)" fg:x="29311" fg:w="13"/><text x="26.5516%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.01%)</title><rect x="26.3016%" y="725" width="0.0117%" height="15" fill="rgb(216,204,22)" fg:x="29311" fg:w="13"/><text x="26.5516%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="26.3016%" y="709" width="0.0117%" height="15" fill="rgb(214,17,3)" fg:x="29311" fg:w="13"/><text x="26.5516%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (13 samples, 0.01%)</title><rect x="26.3016%" y="693" width="0.0117%" height="15" fill="rgb(212,111,17)" fg:x="29311" fg:w="13"/><text x="26.5516%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="26.3016%" y="677" width="0.0117%" height="15" fill="rgb(221,157,24)" fg:x="29311" fg:w="13"/><text x="26.5516%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="26.3016%" y="661" width="0.0117%" height="15" fill="rgb(252,16,13)" fg:x="29311" fg:w="13"/><text x="26.5516%" y="671.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="26.3016%" y="645" width="0.0117%" height="15" fill="rgb(221,62,2)" fg:x="29311" fg:w="13"/><text x="26.5516%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (13 samples, 0.01%)</title><rect x="26.3016%" y="629" width="0.0117%" height="15" fill="rgb(247,87,22)" fg:x="29311" fg:w="13"/><text x="26.5516%" y="639.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (13 samples, 0.01%)</title><rect x="26.3016%" y="613" width="0.0117%" height="15" fill="rgb(215,73,9)" fg:x="29311" fg:w="13"/><text x="26.5516%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="26.3016%" y="597" width="0.0117%" height="15" fill="rgb(207,175,33)" fg:x="29311" fg:w="13"/><text x="26.5516%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (13 samples, 0.01%)</title><rect x="26.3016%" y="581" width="0.0117%" height="15" fill="rgb(243,129,54)" fg:x="29311" fg:w="13"/><text x="26.5516%" y="591.50"></text></g><g><title>abi_stable::erased_types::iterator::next (13 samples, 0.01%)</title><rect x="26.3016%" y="565" width="0.0117%" height="15" fill="rgb(227,119,45)" fg:x="29311" fg:w="13"/><text x="26.5516%" y="575.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (18 samples, 0.02%)</title><rect x="26.3366%" y="661" width="0.0162%" height="15" fill="rgb(205,109,36)" fg:x="29350" fg:w="18"/><text x="26.5866%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.02%)</title><rect x="26.3366%" y="645" width="0.0162%" height="15" fill="rgb(205,6,39)" fg:x="29350" fg:w="18"/><text x="26.5866%" y="655.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (18 samples, 0.02%)</title><rect x="26.3366%" y="629" width="0.0162%" height="15" fill="rgb(221,32,16)" fg:x="29350" fg:w="18"/><text x="26.5866%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="26.3599%" y="629" width="0.0170%" height="15" fill="rgb(228,144,50)" fg:x="29376" fg:w="19"/><text x="26.6099%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="26.3599%" y="613" width="0.0170%" height="15" fill="rgb(229,201,53)" fg:x="29376" fg:w="19"/><text x="26.6099%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="26.3599%" y="597" width="0.0170%" height="15" fill="rgb(249,153,27)" fg:x="29376" fg:w="19"/><text x="26.6099%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="26.3599%" y="581" width="0.0170%" height="15" fill="rgb(227,106,25)" fg:x="29376" fg:w="19"/><text x="26.6099%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="26.3599%" y="565" width="0.0170%" height="15" fill="rgb(230,65,29)" fg:x="29376" fg:w="19"/><text x="26.6099%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="26.3599%" y="549" width="0.0170%" height="15" fill="rgb(221,57,46)" fg:x="29376" fg:w="19"/><text x="26.6099%" y="559.50"></text></g><g><title>abi_stable::erased_types::iterator::next (37 samples, 0.03%)</title><rect x="26.3527%" y="661" width="0.0332%" height="15" fill="rgb(229,161,17)" fg:x="29368" fg:w="37"/><text x="26.6027%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (29 samples, 0.03%)</title><rect x="26.3599%" y="645" width="0.0260%" height="15" fill="rgb(222,213,11)" fg:x="29376" fg:w="29"/><text x="26.6099%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.06%)</title><rect x="26.3285%" y="725" width="0.0601%" height="15" fill="rgb(235,35,13)" fg:x="29341" fg:w="67"/><text x="26.5785%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.06%)</title><rect x="26.3285%" y="709" width="0.0601%" height="15" fill="rgb(233,158,34)" fg:x="29341" fg:w="67"/><text x="26.5785%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.06%)</title><rect x="26.3285%" y="693" width="0.0601%" height="15" fill="rgb(215,151,48)" fg:x="29341" fg:w="67"/><text x="26.5785%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (67 samples, 0.06%)</title><rect x="26.3285%" y="677" width="0.0601%" height="15" fill="rgb(229,84,14)" fg:x="29341" fg:w="67"/><text x="26.5785%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_ref (13 samples, 0.01%)</title><rect x="26.4066%" y="661" width="0.0117%" height="15" fill="rgb(229,68,14)" fg:x="29428" fg:w="13"/><text x="26.6566%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (53 samples, 0.05%)</title><rect x="26.3886%" y="725" width="0.0476%" height="15" fill="rgb(243,106,26)" fg:x="29408" fg:w="53"/><text x="26.6386%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (53 samples, 0.05%)</title><rect x="26.3886%" y="709" width="0.0476%" height="15" fill="rgb(206,45,38)" fg:x="29408" fg:w="53"/><text x="26.6386%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (53 samples, 0.05%)</title><rect x="26.3886%" y="693" width="0.0476%" height="15" fill="rgb(226,6,15)" fg:x="29408" fg:w="53"/><text x="26.6386%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (53 samples, 0.05%)</title><rect x="26.3886%" y="677" width="0.0476%" height="15" fill="rgb(232,22,54)" fg:x="29408" fg:w="53"/><text x="26.6386%" y="687.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;abi_stable::std_types::tuple::Tuple2&lt;K,V&gt;&gt;&gt;::extend (185 samples, 0.17%)</title><rect x="26.3016%" y="757" width="0.1660%" height="15" fill="rgb(229,222,32)" fg:x="29311" fg:w="185"/><text x="26.5516%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (172 samples, 0.15%)</title><rect x="26.3132%" y="741" width="0.1543%" height="15" fill="rgb(228,62,29)" fg:x="29324" fg:w="172"/><text x="26.5632%" y="751.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (35 samples, 0.03%)</title><rect x="26.4362%" y="725" width="0.0314%" height="15" fill="rgb(251,103,34)" fg:x="29461" fg:w="35"/><text x="26.6862%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (28 samples, 0.03%)</title><rect x="26.4425%" y="709" width="0.0251%" height="15" fill="rgb(233,12,30)" fg:x="29468" fg:w="28"/><text x="26.6925%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (28 samples, 0.03%)</title><rect x="26.4425%" y="693" width="0.0251%" height="15" fill="rgb(238,52,0)" fg:x="29468" fg:w="28"/><text x="26.6925%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (27 samples, 0.02%)</title><rect x="26.4434%" y="677" width="0.0242%" height="15" fill="rgb(223,98,5)" fg:x="29469" fg:w="27"/><text x="26.6934%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (27 samples, 0.02%)</title><rect x="26.4434%" y="661" width="0.0242%" height="15" fill="rgb(228,75,37)" fg:x="29469" fg:w="27"/><text x="26.6934%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (27 samples, 0.02%)</title><rect x="26.4434%" y="645" width="0.0242%" height="15" fill="rgb(205,115,49)" fg:x="29469" fg:w="27"/><text x="26.6934%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (27 samples, 0.02%)</title><rect x="26.4434%" y="629" width="0.0242%" height="15" fill="rgb(250,154,43)" fg:x="29469" fg:w="27"/><text x="26.6934%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (27 samples, 0.02%)</title><rect x="26.4434%" y="613" width="0.0242%" height="15" fill="rgb(226,43,29)" fg:x="29469" fg:w="27"/><text x="26.6934%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (34 samples, 0.03%)</title><rect x="26.9737%" y="629" width="0.0305%" height="15" fill="rgb(249,228,39)" fg:x="30060" fg:w="34"/><text x="27.2237%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (46 samples, 0.04%)</title><rect x="27.0042%" y="597" width="0.0413%" height="15" fill="rgb(216,79,43)" fg:x="30094" fg:w="46"/><text x="27.2542%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (46 samples, 0.04%)</title><rect x="27.0042%" y="581" width="0.0413%" height="15" fill="rgb(228,95,12)" fg:x="30094" fg:w="46"/><text x="27.2542%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (12 samples, 0.01%)</title><rect x="27.0455%" y="581" width="0.0108%" height="15" fill="rgb(249,221,15)" fg:x="30140" fg:w="12"/><text x="27.2955%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (71 samples, 0.06%)</title><rect x="27.0042%" y="613" width="0.0637%" height="15" fill="rgb(233,34,13)" fg:x="30094" fg:w="71"/><text x="27.2542%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (25 samples, 0.02%)</title><rect x="27.0455%" y="597" width="0.0224%" height="15" fill="rgb(214,103,39)" fg:x="30140" fg:w="25"/><text x="27.2955%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (13 samples, 0.01%)</title><rect x="27.0562%" y="581" width="0.0117%" height="15" fill="rgb(251,126,39)" fg:x="30152" fg:w="13"/><text x="27.3062%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.01%)</title><rect x="27.0562%" y="565" width="0.0117%" height="15" fill="rgb(214,216,36)" fg:x="30152" fg:w="13"/><text x="27.3062%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (665 samples, 0.60%)</title><rect x="26.4873%" y="677" width="0.5967%" height="15" fill="rgb(220,221,8)" fg:x="29518" fg:w="665"/><text x="26.7373%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (622 samples, 0.56%)</title><rect x="26.5259%" y="661" width="0.5581%" height="15" fill="rgb(240,216,3)" fg:x="29561" fg:w="622"/><text x="26.7759%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (134 samples, 0.12%)</title><rect x="26.9638%" y="645" width="0.1202%" height="15" fill="rgb(232,218,17)" fg:x="30049" fg:w="134"/><text x="27.2138%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (89 samples, 0.08%)</title><rect x="27.0042%" y="629" width="0.0799%" height="15" fill="rgb(229,163,45)" fg:x="30094" fg:w="89"/><text x="27.2542%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (18 samples, 0.02%)</title><rect x="27.0679%" y="613" width="0.0162%" height="15" fill="rgb(231,110,42)" fg:x="30165" fg:w="18"/><text x="27.3179%" y="623.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="27.1101%" y="517" width="0.0108%" height="15" fill="rgb(208,170,48)" fg:x="30212" fg:w="12"/><text x="27.3601%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (77 samples, 0.07%)</title><rect x="27.1208%" y="517" width="0.0691%" height="15" fill="rgb(239,116,25)" fg:x="30224" fg:w="77"/><text x="27.3708%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (77 samples, 0.07%)</title><rect x="27.1208%" y="501" width="0.0691%" height="15" fill="rgb(219,200,50)" fg:x="30224" fg:w="77"/><text x="27.3708%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (71 samples, 0.06%)</title><rect x="27.1262%" y="485" width="0.0637%" height="15" fill="rgb(245,200,0)" fg:x="30230" fg:w="71"/><text x="27.3762%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (56 samples, 0.05%)</title><rect x="27.1397%" y="469" width="0.0503%" height="15" fill="rgb(245,119,33)" fg:x="30245" fg:w="56"/><text x="27.3897%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (56 samples, 0.05%)</title><rect x="27.1397%" y="453" width="0.0503%" height="15" fill="rgb(231,125,12)" fg:x="30245" fg:w="56"/><text x="27.3897%" y="463.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (125 samples, 0.11%)</title><rect x="27.0840%" y="677" width="0.1122%" height="15" fill="rgb(216,96,41)" fg:x="30183" fg:w="125"/><text x="27.3340%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (125 samples, 0.11%)</title><rect x="27.0840%" y="661" width="0.1122%" height="15" fill="rgb(248,43,45)" fg:x="30183" fg:w="125"/><text x="27.3340%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (125 samples, 0.11%)</title><rect x="27.0840%" y="645" width="0.1122%" height="15" fill="rgb(217,222,7)" fg:x="30183" fg:w="125"/><text x="27.3340%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (111 samples, 0.10%)</title><rect x="27.0966%" y="629" width="0.0996%" height="15" fill="rgb(233,28,6)" fg:x="30197" fg:w="111"/><text x="27.3466%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (101 samples, 0.09%)</title><rect x="27.1056%" y="613" width="0.0906%" height="15" fill="rgb(231,218,15)" fg:x="30207" fg:w="101"/><text x="27.3556%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (101 samples, 0.09%)</title><rect x="27.1056%" y="597" width="0.0906%" height="15" fill="rgb(226,171,48)" fg:x="30207" fg:w="101"/><text x="27.3556%" y="607.50"></text></g><g><title>alloc::alloc::alloc (101 samples, 0.09%)</title><rect x="27.1056%" y="581" width="0.0906%" height="15" fill="rgb(235,201,9)" fg:x="30207" fg:w="101"/><text x="27.3556%" y="591.50"></text></g><g><title>__rg_alloc (101 samples, 0.09%)</title><rect x="27.1056%" y="565" width="0.0906%" height="15" fill="rgb(217,80,15)" fg:x="30207" fg:w="101"/><text x="27.3556%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (101 samples, 0.09%)</title><rect x="27.1056%" y="549" width="0.0906%" height="15" fill="rgb(219,152,8)" fg:x="30207" fg:w="101"/><text x="27.3556%" y="559.50"></text></g><g><title>rust_alloc (96 samples, 0.09%)</title><rect x="27.1101%" y="533" width="0.0861%" height="15" fill="rgb(243,107,38)" fg:x="30212" fg:w="96"/><text x="27.3601%" y="543.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (34 samples, 0.03%)</title><rect x="27.2115%" y="613" width="0.0305%" height="15" fill="rgb(231,17,5)" fg:x="30325" fg:w="34"/><text x="27.4615%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="27.2303%" y="597" width="0.0117%" height="15" fill="rgb(209,25,54)" fg:x="30346" fg:w="13"/><text x="27.4803%" y="607.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="27.2303%" y="581" width="0.0117%" height="15" fill="rgb(219,0,2)" fg:x="30346" fg:w="13"/><text x="27.4803%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="27.2303%" y="565" width="0.0117%" height="15" fill="rgb(246,9,5)" fg:x="30346" fg:w="13"/><text x="27.4803%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="27.2303%" y="549" width="0.0117%" height="15" fill="rgb(226,159,4)" fg:x="30346" fg:w="13"/><text x="27.4803%" y="559.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="27.2303%" y="533" width="0.0117%" height="15" fill="rgb(219,175,34)" fg:x="30346" fg:w="13"/><text x="27.4803%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="27.2303%" y="517" width="0.0117%" height="15" fill="rgb(236,10,46)" fg:x="30346" fg:w="13"/><text x="27.4803%" y="527.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="27.2465%" y="597" width="0.0117%" height="15" fill="rgb(240,211,16)" fg:x="30364" fg:w="13"/><text x="27.4965%" y="607.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (20 samples, 0.02%)</title><rect x="27.2967%" y="469" width="0.0179%" height="15" fill="rgb(205,3,43)" fg:x="30420" fg:w="20"/><text x="27.5467%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="27.2985%" y="453" width="0.0162%" height="15" fill="rgb(245,7,22)" fg:x="30422" fg:w="18"/><text x="27.5485%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (43 samples, 0.04%)</title><rect x="27.2815%" y="517" width="0.0386%" height="15" fill="rgb(239,132,32)" fg:x="30403" fg:w="43"/><text x="27.5315%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (43 samples, 0.04%)</title><rect x="27.2815%" y="501" width="0.0386%" height="15" fill="rgb(228,202,34)" fg:x="30403" fg:w="43"/><text x="27.5315%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (42 samples, 0.04%)</title><rect x="27.2824%" y="485" width="0.0377%" height="15" fill="rgb(254,200,22)" fg:x="30404" fg:w="42"/><text x="27.5324%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (69 samples, 0.06%)</title><rect x="27.2680%" y="549" width="0.0619%" height="15" fill="rgb(219,10,39)" fg:x="30388" fg:w="69"/><text x="27.5180%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (69 samples, 0.06%)</title><rect x="27.2680%" y="533" width="0.0619%" height="15" fill="rgb(226,210,39)" fg:x="30388" fg:w="69"/><text x="27.5180%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (89 samples, 0.08%)</title><rect x="27.2581%" y="597" width="0.0799%" height="15" fill="rgb(208,219,16)" fg:x="30377" fg:w="89"/><text x="27.5081%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (78 samples, 0.07%)</title><rect x="27.2680%" y="581" width="0.0700%" height="15" fill="rgb(216,158,51)" fg:x="30388" fg:w="78"/><text x="27.5180%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (78 samples, 0.07%)</title><rect x="27.2680%" y="565" width="0.0700%" height="15" fill="rgb(233,14,44)" fg:x="30388" fg:w="78"/><text x="27.5180%" y="575.50"></text></g><g><title>rust_dealloc (109 samples, 0.10%)</title><rect x="27.2420%" y="613" width="0.0978%" height="15" fill="rgb(237,97,39)" fg:x="30359" fg:w="109"/><text x="27.4920%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (164 samples, 0.15%)</title><rect x="27.2007%" y="629" width="0.1472%" height="15" fill="rgb(218,198,43)" fg:x="30313" fg:w="164"/><text x="27.4507%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,031 samples, 0.93%)</title><rect x="26.4676%" y="757" width="0.9251%" height="15" fill="rgb(231,104,20)" fg:x="29496" fg:w="1031"/><text x="26.7176%" y="767.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (1,031 samples, 0.93%)</title><rect x="26.4676%" y="741" width="0.9251%" height="15" fill="rgb(254,36,13)" fg:x="29496" fg:w="1031"/><text x="26.7176%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (1,022 samples, 0.92%)</title><rect x="26.4757%" y="725" width="0.9171%" height="15" fill="rgb(248,14,50)" fg:x="29505" fg:w="1022"/><text x="26.7257%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (1,009 samples, 0.91%)</title><rect x="26.4873%" y="709" width="0.9054%" height="15" fill="rgb(217,107,29)" fg:x="29518" fg:w="1009"/><text x="26.7373%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (1,009 samples, 0.91%)</title><rect x="26.4873%" y="693" width="0.9054%" height="15" fill="rgb(251,169,33)" fg:x="29518" fg:w="1009"/><text x="26.7373%" y="703.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (214 samples, 0.19%)</title><rect x="27.2007%" y="677" width="0.1920%" height="15" fill="rgb(217,108,32)" fg:x="30313" fg:w="214"/><text x="27.4507%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (214 samples, 0.19%)</title><rect x="27.2007%" y="661" width="0.1920%" height="15" fill="rgb(219,66,42)" fg:x="30313" fg:w="214"/><text x="27.4507%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (214 samples, 0.19%)</title><rect x="27.2007%" y="645" width="0.1920%" height="15" fill="rgb(206,180,7)" fg:x="30313" fg:w="214"/><text x="27.4507%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (50 samples, 0.04%)</title><rect x="27.3479%" y="629" width="0.0449%" height="15" fill="rgb(208,226,31)" fg:x="30477" fg:w="50"/><text x="27.5979%" y="639.50"></text></g><g><title>core::ptr::read (50 samples, 0.04%)</title><rect x="27.3479%" y="613" width="0.0449%" height="15" fill="rgb(218,26,49)" fg:x="30477" fg:w="50"/><text x="27.5979%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="27.4116%" y="629" width="0.0197%" height="15" fill="rgb(233,197,48)" fg:x="30548" fg:w="22"/><text x="27.6616%" y="639.50"></text></g><g><title>alloc::alloc::box_free (22 samples, 0.02%)</title><rect x="27.4116%" y="613" width="0.0197%" height="15" fill="rgb(252,181,51)" fg:x="30548" fg:w="22"/><text x="27.6616%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="27.4116%" y="597" width="0.0197%" height="15" fill="rgb(253,90,19)" fg:x="30548" fg:w="22"/><text x="27.6616%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="27.4116%" y="581" width="0.0197%" height="15" fill="rgb(215,171,30)" fg:x="30548" fg:w="22"/><text x="27.6616%" y="591.50"></text></g><g><title>__rg_dealloc (22 samples, 0.02%)</title><rect x="27.4116%" y="565" width="0.0197%" height="15" fill="rgb(214,222,9)" fg:x="30548" fg:w="22"/><text x="27.6616%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (22 samples, 0.02%)</title><rect x="27.4116%" y="549" width="0.0197%" height="15" fill="rgb(223,3,22)" fg:x="30548" fg:w="22"/><text x="27.6616%" y="559.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (67 samples, 0.06%)</title><rect x="27.4053%" y="645" width="0.0601%" height="15" fill="rgb(225,196,46)" fg:x="30541" fg:w="67"/><text x="27.6553%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (38 samples, 0.03%)</title><rect x="27.4313%" y="629" width="0.0341%" height="15" fill="rgb(209,110,37)" fg:x="30570" fg:w="38"/><text x="27.6813%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (38 samples, 0.03%)</title><rect x="27.4313%" y="613" width="0.0341%" height="15" fill="rgb(249,89,12)" fg:x="30570" fg:w="38"/><text x="27.6813%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (38 samples, 0.03%)</title><rect x="27.4313%" y="597" width="0.0341%" height="15" fill="rgb(226,27,33)" fg:x="30570" fg:w="38"/><text x="27.6813%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (38 samples, 0.03%)</title><rect x="27.4313%" y="581" width="0.0341%" height="15" fill="rgb(213,82,22)" fg:x="30570" fg:w="38"/><text x="27.6813%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="27.4313%" y="565" width="0.0341%" height="15" fill="rgb(248,140,0)" fg:x="30570" fg:w="38"/><text x="27.6813%" y="575.50"></text></g><g><title>hashbrown::raw::RawIter&lt;T&gt;::drop_elements (15 samples, 0.01%)</title><rect x="27.4519%" y="549" width="0.0135%" height="15" fill="rgb(228,106,3)" fg:x="30593" fg:w="15"/><text x="27.7019%" y="559.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.02%)</title><rect x="27.5255%" y="501" width="0.0153%" height="15" fill="rgb(209,23,37)" fg:x="30675" fg:w="17"/><text x="27.7755%" y="511.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="27.5291%" y="485" width="0.0117%" height="15" fill="rgb(241,93,50)" fg:x="30679" fg:w="13"/><text x="27.7791%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (62 samples, 0.06%)</title><rect x="27.4968%" y="549" width="0.0556%" height="15" fill="rgb(253,46,43)" fg:x="30643" fg:w="62"/><text x="27.7468%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (62 samples, 0.06%)</title><rect x="27.4968%" y="533" width="0.0556%" height="15" fill="rgb(226,206,43)" fg:x="30643" fg:w="62"/><text x="27.7468%" y="543.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (62 samples, 0.06%)</title><rect x="27.4968%" y="517" width="0.0556%" height="15" fill="rgb(217,54,7)" fg:x="30643" fg:w="62"/><text x="27.7468%" y="527.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="27.5408%" y="501" width="0.0117%" height="15" fill="rgb(223,5,52)" fg:x="30692" fg:w="13"/><text x="27.7908%" y="511.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="27.5408%" y="485" width="0.0117%" height="15" fill="rgb(206,52,46)" fg:x="30692" fg:w="13"/><text x="27.7908%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (93 samples, 0.08%)</title><rect x="27.4834%" y="581" width="0.0835%" height="15" fill="rgb(253,136,11)" fg:x="30628" fg:w="93"/><text x="27.7334%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (93 samples, 0.08%)</title><rect x="27.4834%" y="565" width="0.0835%" height="15" fill="rgb(208,106,33)" fg:x="30628" fg:w="93"/><text x="27.7334%" y="575.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (16 samples, 0.01%)</title><rect x="27.5524%" y="549" width="0.0144%" height="15" fill="rgb(206,54,4)" fg:x="30705" fg:w="16"/><text x="27.8024%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (101 samples, 0.09%)</title><rect x="27.4834%" y="613" width="0.0906%" height="15" fill="rgb(213,3,15)" fg:x="30628" fg:w="101"/><text x="27.7334%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (101 samples, 0.09%)</title><rect x="27.4834%" y="597" width="0.0906%" height="15" fill="rgb(252,211,39)" fg:x="30628" fg:w="101"/><text x="27.7334%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (113 samples, 0.10%)</title><rect x="27.4753%" y="629" width="0.1014%" height="15" fill="rgb(223,6,36)" fg:x="30619" fg:w="113"/><text x="27.7253%" y="639.50"></text></g><g><title>rust_dealloc (126 samples, 0.11%)</title><rect x="27.4654%" y="645" width="0.1131%" height="15" fill="rgb(252,169,45)" fg:x="30608" fg:w="126"/><text x="27.7154%" y="655.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (1,427 samples, 1.28%)</title><rect x="26.3016%" y="773" width="1.2805%" height="15" fill="rgb(212,48,26)" fg:x="29311" fg:w="1427"/><text x="26.5516%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (211 samples, 0.19%)</title><rect x="27.3927%" y="757" width="0.1893%" height="15" fill="rgb(251,102,48)" fg:x="30527" fg:w="211"/><text x="27.6427%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (211 samples, 0.19%)</title><rect x="27.3927%" y="741" width="0.1893%" height="15" fill="rgb(243,208,16)" fg:x="30527" fg:w="211"/><text x="27.6427%" y="751.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (211 samples, 0.19%)</title><rect x="27.3927%" y="725" width="0.1893%" height="15" fill="rgb(219,96,24)" fg:x="30527" fg:w="211"/><text x="27.6427%" y="735.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (209 samples, 0.19%)</title><rect x="27.3945%" y="709" width="0.1875%" height="15" fill="rgb(219,33,29)" fg:x="30529" fg:w="209"/><text x="27.6445%" y="719.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (203 samples, 0.18%)</title><rect x="27.3999%" y="693" width="0.1822%" height="15" fill="rgb(223,176,5)" fg:x="30535" fg:w="203"/><text x="27.6499%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (203 samples, 0.18%)</title><rect x="27.3999%" y="677" width="0.1822%" height="15" fill="rgb(228,140,14)" fg:x="30535" fg:w="203"/><text x="27.6499%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (203 samples, 0.18%)</title><rect x="27.3999%" y="661" width="0.1822%" height="15" fill="rgb(217,179,31)" fg:x="30535" fg:w="203"/><text x="27.6499%" y="671.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies (39 samples, 0.03%)</title><rect x="27.5874%" y="773" width="0.0350%" height="15" fill="rgb(230,9,30)" fg:x="30744" fg:w="39"/><text x="27.8374%" y="783.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (15 samples, 0.01%)</title><rect x="27.6224%" y="773" width="0.0135%" height="15" fill="rgb(230,136,20)" fg:x="30783" fg:w="15"/><text x="27.8724%" y="783.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (16,235 samples, 14.57%)</title><rect x="13.0696%" y="789" width="14.5681%" height="15" fill="rgb(215,210,22)" fg:x="14565" fg:w="16235"/><text x="13.3196%" y="799.50">tremor_runtime::connec..</text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (908 samples, 0.81%)</title><rect x="27.8925%" y="773" width="0.8148%" height="15" fill="rgb(218,43,5)" fg:x="31084" fg:w="908"/><text x="28.1425%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (710 samples, 0.64%)</title><rect x="28.0702%" y="757" width="0.6371%" height="15" fill="rgb(216,11,5)" fg:x="31282" fg:w="710"/><text x="28.3202%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.02%)</title><rect x="28.9298%" y="757" width="0.0242%" height="15" fill="rgb(209,82,29)" fg:x="32240" fg:w="27"/><text x="29.1798%" y="767.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (87 samples, 0.08%)</title><rect x="29.1739%" y="741" width="0.0781%" height="15" fill="rgb(244,115,12)" fg:x="32512" fg:w="87"/><text x="29.4239%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (191 samples, 0.17%)</title><rect x="29.4871%" y="725" width="0.1714%" height="15" fill="rgb(222,82,18)" fg:x="32861" fg:w="191"/><text x="29.7371%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (463 samples, 0.42%)</title><rect x="29.2520%" y="741" width="0.4155%" height="15" fill="rgb(249,227,8)" fg:x="32599" fg:w="463"/><text x="29.5020%" y="751.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (536 samples, 0.48%)</title><rect x="29.6675%" y="709" width="0.4810%" height="15" fill="rgb(253,141,45)" fg:x="33062" fg:w="536"/><text x="29.9175%" y="719.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (529 samples, 0.47%)</title><rect x="29.6737%" y="693" width="0.4747%" height="15" fill="rgb(234,184,4)" fg:x="33069" fg:w="529"/><text x="29.9237%" y="703.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (529 samples, 0.47%)</title><rect x="29.6737%" y="677" width="0.4747%" height="15" fill="rgb(218,194,23)" fg:x="33069" fg:w="529"/><text x="29.9237%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (319 samples, 0.29%)</title><rect x="30.2041%" y="661" width="0.2862%" height="15" fill="rgb(235,66,41)" fg:x="33660" fg:w="319"/><text x="30.4541%" y="671.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (319 samples, 0.29%)</title><rect x="30.2041%" y="645" width="0.2862%" height="15" fill="rgb(245,217,1)" fg:x="33660" fg:w="319"/><text x="30.4541%" y="655.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (319 samples, 0.29%)</title><rect x="30.2041%" y="629" width="0.2862%" height="15" fill="rgb(229,91,1)" fg:x="33660" fg:w="319"/><text x="30.4541%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (288 samples, 0.26%)</title><rect x="30.2319%" y="613" width="0.2584%" height="15" fill="rgb(207,101,30)" fg:x="33691" fg:w="288"/><text x="30.4819%" y="623.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 0.02%)</title><rect x="30.7164%" y="613" width="0.0242%" height="15" fill="rgb(223,82,49)" fg:x="34231" fg:w="27"/><text x="30.9664%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (27 samples, 0.02%)</title><rect x="30.7164%" y="597" width="0.0242%" height="15" fill="rgb(218,167,17)" fg:x="34231" fg:w="27"/><text x="30.9664%" y="607.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (27 samples, 0.02%)</title><rect x="30.7164%" y="581" width="0.0242%" height="15" fill="rgb(208,103,14)" fg:x="34231" fg:w="27"/><text x="30.9664%" y="591.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (14 samples, 0.01%)</title><rect x="30.7281%" y="565" width="0.0126%" height="15" fill="rgb(238,20,8)" fg:x="34244" fg:w="14"/><text x="30.9781%" y="575.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (804 samples, 0.72%)</title><rect x="30.1538%" y="693" width="0.7215%" height="15" fill="rgb(218,80,54)" fg:x="33604" fg:w="804"/><text x="30.4038%" y="703.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (770 samples, 0.69%)</title><rect x="30.1843%" y="677" width="0.6909%" height="15" fill="rgb(240,144,17)" fg:x="33638" fg:w="770"/><text x="30.4343%" y="687.50"></text></g><g><title>std::panic::catch_unwind (429 samples, 0.38%)</title><rect x="30.4903%" y="661" width="0.3850%" height="15" fill="rgb(245,27,50)" fg:x="33979" fg:w="429"/><text x="30.7403%" y="671.50"></text></g><g><title>std::panicking::try (429 samples, 0.38%)</title><rect x="30.4903%" y="645" width="0.3850%" height="15" fill="rgb(251,51,7)" fg:x="33979" fg:w="429"/><text x="30.7403%" y="655.50"></text></g><g><title>std::panicking::try::do_call (429 samples, 0.38%)</title><rect x="30.4903%" y="629" width="0.3850%" height="15" fill="rgb(245,217,29)" fg:x="33979" fg:w="429"/><text x="30.7403%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (150 samples, 0.13%)</title><rect x="30.7407%" y="613" width="0.1346%" height="15" fill="rgb(221,176,29)" fg:x="34258" fg:w="150"/><text x="30.9907%" y="623.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (811 samples, 0.73%)</title><rect x="30.1484%" y="709" width="0.7277%" height="15" fill="rgb(212,180,24)" fg:x="33598" fg:w="811"/><text x="30.3984%" y="719.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,594 samples, 1.43%)</title><rect x="29.6675%" y="741" width="1.4303%" height="15" fill="rgb(254,24,2)" fg:x="33062" fg:w="1594"/><text x="29.9175%" y="751.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,594 samples, 1.43%)</title><rect x="29.6675%" y="725" width="1.4303%" height="15" fill="rgb(230,100,2)" fg:x="33062" fg:w="1594"/><text x="29.9175%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (247 samples, 0.22%)</title><rect x="30.8762%" y="709" width="0.2216%" height="15" fill="rgb(219,142,25)" fg:x="34409" fg:w="247"/><text x="31.1262%" y="719.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (75 samples, 0.07%)</title><rect x="31.0978%" y="741" width="0.0673%" height="15" fill="rgb(240,73,43)" fg:x="34656" fg:w="75"/><text x="31.3478%" y="751.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (13 samples, 0.01%)</title><rect x="31.1777%" y="693" width="0.0117%" height="15" fill="rgb(214,114,15)" fg:x="34745" fg:w="13"/><text x="31.4277%" y="703.50"></text></g><g><title>async_ffi::DropBomb::with (13 samples, 0.01%)</title><rect x="31.1777%" y="677" width="0.0117%" height="15" fill="rgb(207,130,4)" fg:x="34745" fg:w="13"/><text x="31.4277%" y="687.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="31.1956%" y="597" width="0.0108%" height="15" fill="rgb(221,25,40)" fg:x="34765" fg:w="12"/><text x="31.4456%" y="607.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (16 samples, 0.01%)</title><rect x="31.2162%" y="549" width="0.0144%" height="15" fill="rgb(241,184,7)" fg:x="34788" fg:w="16"/><text x="31.4662%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (29 samples, 0.03%)</title><rect x="31.2064%" y="597" width="0.0260%" height="15" fill="rgb(235,159,4)" fg:x="34777" fg:w="29"/><text x="31.4564%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (29 samples, 0.03%)</title><rect x="31.2064%" y="581" width="0.0260%" height="15" fill="rgb(214,87,48)" fg:x="34777" fg:w="29"/><text x="31.4564%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (28 samples, 0.03%)</title><rect x="31.2073%" y="565" width="0.0251%" height="15" fill="rgb(246,198,24)" fg:x="34778" fg:w="28"/><text x="31.4573%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (43 samples, 0.04%)</title><rect x="31.1956%" y="629" width="0.0386%" height="15" fill="rgb(209,66,40)" fg:x="34765" fg:w="43"/><text x="31.4456%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (43 samples, 0.04%)</title><rect x="31.1956%" y="613" width="0.0386%" height="15" fill="rgb(233,147,39)" fg:x="34765" fg:w="43"/><text x="31.4456%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (50 samples, 0.04%)</title><rect x="31.1956%" y="661" width="0.0449%" height="15" fill="rgb(231,145,52)" fg:x="34765" fg:w="50"/><text x="31.4456%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (50 samples, 0.04%)</title><rect x="31.1956%" y="645" width="0.0449%" height="15" fill="rgb(206,20,26)" fg:x="34765" fg:w="50"/><text x="31.4456%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (58 samples, 0.05%)</title><rect x="31.1956%" y="677" width="0.0520%" height="15" fill="rgb(238,220,4)" fg:x="34765" fg:w="58"/><text x="31.4456%" y="687.50"></text></g><g><title>rust_dealloc (75 samples, 0.07%)</title><rect x="31.1893%" y="693" width="0.0673%" height="15" fill="rgb(252,195,42)" fg:x="34758" fg:w="75"/><text x="31.4393%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (110 samples, 0.10%)</title><rect x="31.1651%" y="741" width="0.0987%" height="15" fill="rgb(209,10,6)" fg:x="34731" fg:w="110"/><text x="31.4151%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (110 samples, 0.10%)</title><rect x="31.1651%" y="725" width="0.0987%" height="15" fill="rgb(229,3,52)" fg:x="34731" fg:w="110"/><text x="31.4151%" y="735.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (110 samples, 0.10%)</title><rect x="31.1651%" y="709" width="0.0987%" height="15" fill="rgb(253,49,37)" fg:x="34731" fg:w="110"/><text x="31.4151%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (18 samples, 0.02%)</title><rect x="31.7860%" y="437" width="0.0162%" height="15" fill="rgb(240,103,49)" fg:x="35423" fg:w="18"/><text x="32.0360%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (90 samples, 0.08%)</title><rect x="31.7860%" y="469" width="0.0808%" height="15" fill="rgb(250,182,30)" fg:x="35423" fg:w="90"/><text x="32.0360%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (90 samples, 0.08%)</title><rect x="31.7860%" y="453" width="0.0808%" height="15" fill="rgb(248,8,30)" fg:x="35423" fg:w="90"/><text x="32.0360%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (72 samples, 0.06%)</title><rect x="31.8022%" y="437" width="0.0646%" height="15" fill="rgb(237,120,30)" fg:x="35441" fg:w="72"/><text x="32.0522%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (62 samples, 0.06%)</title><rect x="31.8112%" y="421" width="0.0556%" height="15" fill="rgb(221,146,34)" fg:x="35451" fg:w="62"/><text x="32.0612%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (62 samples, 0.06%)</title><rect x="31.8112%" y="405" width="0.0556%" height="15" fill="rgb(242,55,13)" fg:x="35451" fg:w="62"/><text x="32.0612%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (62 samples, 0.06%)</title><rect x="31.8112%" y="389" width="0.0556%" height="15" fill="rgb(242,112,31)" fg:x="35451" fg:w="62"/><text x="32.0612%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (13 samples, 0.01%)</title><rect x="31.8901%" y="389" width="0.0117%" height="15" fill="rgb(249,192,27)" fg:x="35539" fg:w="13"/><text x="32.1401%" y="399.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="31.8901%" y="373" width="0.0117%" height="15" fill="rgb(208,204,44)" fg:x="35539" fg:w="13"/><text x="32.1401%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="31.8722%" y="437" width="0.0305%" height="15" fill="rgb(208,93,54)" fg:x="35519" fg:w="34"/><text x="32.1222%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="31.8803%" y="421" width="0.0224%" height="15" fill="rgb(242,1,31)" fg:x="35528" fg:w="25"/><text x="32.1303%" y="431.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (25 samples, 0.02%)</title><rect x="31.8803%" y="405" width="0.0224%" height="15" fill="rgb(241,83,25)" fg:x="35528" fg:w="25"/><text x="32.1303%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="31.8713%" y="469" width="0.0323%" height="15" fill="rgb(205,169,50)" fg:x="35518" fg:w="36"/><text x="32.1213%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="31.8713%" y="453" width="0.0323%" height="15" fill="rgb(239,186,37)" fg:x="35518" fg:w="36"/><text x="32.1213%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (206 samples, 0.18%)</title><rect x="31.7717%" y="517" width="0.1848%" height="15" fill="rgb(205,221,10)" fg:x="35407" fg:w="206"/><text x="32.0217%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (206 samples, 0.18%)</title><rect x="31.7717%" y="501" width="0.1848%" height="15" fill="rgb(218,196,15)" fg:x="35407" fg:w="206"/><text x="32.0217%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (197 samples, 0.18%)</title><rect x="31.7798%" y="485" width="0.1768%" height="15" fill="rgb(218,196,35)" fg:x="35416" fg:w="197"/><text x="32.0298%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (51 samples, 0.05%)</title><rect x="31.9108%" y="469" width="0.0458%" height="15" fill="rgb(233,63,24)" fg:x="35562" fg:w="51"/><text x="32.1608%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (51 samples, 0.05%)</title><rect x="31.9108%" y="453" width="0.0458%" height="15" fill="rgb(225,8,4)" fg:x="35562" fg:w="51"/><text x="32.1608%" y="463.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (749 samples, 0.67%)</title><rect x="31.2862%" y="725" width="0.6721%" height="15" fill="rgb(234,105,35)" fg:x="34866" fg:w="749"/><text x="31.5362%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (406 samples, 0.36%)</title><rect x="31.5940%" y="709" width="0.3643%" height="15" fill="rgb(236,21,32)" fg:x="35209" fg:w="406"/><text x="31.8440%" y="719.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (406 samples, 0.36%)</title><rect x="31.5940%" y="693" width="0.3643%" height="15" fill="rgb(228,109,6)" fg:x="35209" fg:w="406"/><text x="31.8440%" y="703.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (398 samples, 0.36%)</title><rect x="31.6012%" y="677" width="0.3571%" height="15" fill="rgb(229,215,31)" fg:x="35217" fg:w="398"/><text x="31.8512%" y="687.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (367 samples, 0.33%)</title><rect x="31.6290%" y="661" width="0.3293%" height="15" fill="rgb(221,52,54)" fg:x="35248" fg:w="367"/><text x="31.8790%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (367 samples, 0.33%)</title><rect x="31.6290%" y="645" width="0.3293%" height="15" fill="rgb(252,129,43)" fg:x="35248" fg:w="367"/><text x="31.8790%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (218 samples, 0.20%)</title><rect x="31.7627%" y="629" width="0.1956%" height="15" fill="rgb(248,183,27)" fg:x="35397" fg:w="218"/><text x="32.0127%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (218 samples, 0.20%)</title><rect x="31.7627%" y="613" width="0.1956%" height="15" fill="rgb(250,0,22)" fg:x="35397" fg:w="218"/><text x="32.0127%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (218 samples, 0.20%)</title><rect x="31.7627%" y="597" width="0.1956%" height="15" fill="rgb(213,166,10)" fg:x="35397" fg:w="218"/><text x="32.0127%" y="607.50"></text></g><g><title>alloc::alloc::alloc (215 samples, 0.19%)</title><rect x="31.7654%" y="581" width="0.1929%" height="15" fill="rgb(207,163,36)" fg:x="35400" fg:w="215"/><text x="32.0154%" y="591.50"></text></g><g><title>__rg_alloc (215 samples, 0.19%)</title><rect x="31.7654%" y="565" width="0.1929%" height="15" fill="rgb(208,122,22)" fg:x="35400" fg:w="215"/><text x="32.0154%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (215 samples, 0.19%)</title><rect x="31.7654%" y="549" width="0.1929%" height="15" fill="rgb(207,104,49)" fg:x="35400" fg:w="215"/><text x="32.0154%" y="559.50"></text></g><g><title>rust_alloc (215 samples, 0.19%)</title><rect x="31.7654%" y="533" width="0.1929%" height="15" fill="rgb(248,211,50)" fg:x="35400" fg:w="215"/><text x="32.0154%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (3,408 samples, 3.06%)</title><rect x="28.9541%" y="757" width="3.0581%" height="15" fill="rgb(217,13,45)" fg:x="32267" fg:w="3408"/><text x="29.2041%" y="767.50">tre..</text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_TO&lt;_ErasedPtr&gt;::pull_data (834 samples, 0.75%)</title><rect x="31.2638%" y="741" width="0.7484%" height="15" fill="rgb(211,216,49)" fg:x="34841" fg:w="834"/><text x="31.5138%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::_::&lt;impl tremor_runtime::connectors::source::RawSource_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::pull_data (57 samples, 0.05%)</title><rect x="31.9610%" y="725" width="0.0511%" height="15" fill="rgb(221,58,53)" fg:x="35618" fg:w="57"/><text x="32.2110%" y="735.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::control_plane::{{closure}} (271 samples, 0.24%)</title><rect x="32.0122%" y="757" width="0.2432%" height="15" fill="rgb(220,112,41)" fg:x="35675" fg:w="271"/><text x="32.2622%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::needs_control_plane_msg (211 samples, 0.19%)</title><rect x="32.0660%" y="741" width="0.1893%" height="15" fill="rgb(236,38,28)" fg:x="35735" fg:w="211"/><text x="32.3160%" y="751.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (182 samples, 0.16%)</title><rect x="32.0920%" y="725" width="0.1633%" height="15" fill="rgb(227,195,22)" fg:x="35764" fg:w="182"/><text x="32.3420%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (181 samples, 0.16%)</title><rect x="32.0929%" y="709" width="0.1624%" height="15" fill="rgb(214,55,33)" fg:x="35765" fg:w="181"/><text x="32.3429%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (105 samples, 0.09%)</title><rect x="32.1611%" y="693" width="0.0942%" height="15" fill="rgb(248,80,13)" fg:x="35841" fg:w="105"/><text x="32.4111%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (88 samples, 0.08%)</title><rect x="32.1764%" y="677" width="0.0790%" height="15" fill="rgb(238,52,6)" fg:x="35858" fg:w="88"/><text x="32.4264%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (88 samples, 0.08%)</title><rect x="32.1764%" y="661" width="0.0790%" height="15" fill="rgb(224,198,47)" fg:x="35858" fg:w="88"/><text x="32.4264%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::utypeid::UTypeId as core::cmp::PartialEq&gt;::eq (255 samples, 0.23%)</title><rect x="33.3456%" y="677" width="0.2288%" height="15" fill="rgb(233,171,20)" fg:x="37161" fg:w="255"/><text x="33.5956%" y="687.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (245 samples, 0.22%)</title><rect x="33.3546%" y="661" width="0.2198%" height="15" fill="rgb(241,30,25)" fg:x="37171" fg:w="245"/><text x="33.6046%" y="671.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (245 samples, 0.22%)</title><rect x="33.3546%" y="645" width="0.2198%" height="15" fill="rgb(207,171,38)" fg:x="37171" fg:w="245"/><text x="33.6046%" y="655.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (38 samples, 0.03%)</title><rect x="33.5744%" y="677" width="0.0341%" height="15" fill="rgb(234,70,1)" fg:x="37416" fg:w="38"/><text x="33.8244%" y="687.50"></text></g><g><title>abi_stable::std_types::utypeid::new_utypeid (19 samples, 0.02%)</title><rect x="33.5915%" y="661" width="0.0170%" height="15" fill="rgb(232,178,18)" fg:x="37435" fg:w="19"/><text x="33.8415%" y="671.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (297 samples, 0.27%)</title><rect x="33.3456%" y="693" width="0.2665%" height="15" fill="rgb(241,78,40)" fg:x="37161" fg:w="297"/><text x="33.5956%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (660 samples, 0.59%)</title><rect x="33.0279%" y="741" width="0.5922%" height="15" fill="rgb(222,35,25)" fg:x="36807" fg:w="660"/><text x="33.2779%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::convert::From&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (374 samples, 0.34%)</title><rect x="33.2846%" y="725" width="0.3356%" height="15" fill="rgb(207,92,16)" fg:x="37093" fg:w="374"/><text x="33.5346%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (352 samples, 0.32%)</title><rect x="33.3043%" y="709" width="0.3159%" height="15" fill="rgb(216,59,51)" fg:x="37115" fg:w="352"/><text x="33.5543%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::ops::deref::Deref&gt;::deref (17 samples, 0.02%)</title><rect x="33.6202%" y="741" width="0.0153%" height="15" fill="rgb(213,80,28)" fg:x="37467" fg:w="17"/><text x="33.8702%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (15 samples, 0.01%)</title><rect x="33.6220%" y="725" width="0.0135%" height="15" fill="rgb(220,93,7)" fg:x="37469" fg:w="15"/><text x="33.8720%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="33.6354%" y="741" width="0.0305%" height="15" fill="rgb(225,24,44)" fg:x="37484" fg:w="34"/><text x="33.8854%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (693 samples, 0.62%)</title><rect x="33.6677%" y="741" width="0.6218%" height="15" fill="rgb(243,74,40)" fg:x="37520" fg:w="693"/><text x="33.9177%" y="751.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (16 samples, 0.01%)</title><rect x="34.3075%" y="581" width="0.0144%" height="15" fill="rgb(228,39,7)" fg:x="38233" fg:w="16"/><text x="34.5575%" y="591.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="34.3084%" y="565" width="0.0135%" height="15" fill="rgb(227,79,8)" fg:x="38234" fg:w="15"/><text x="34.5584%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (32 samples, 0.03%)</title><rect x="34.3066%" y="645" width="0.0287%" height="15" fill="rgb(236,58,11)" fg:x="38232" fg:w="32"/><text x="34.5566%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new (32 samples, 0.03%)</title><rect x="34.3066%" y="629" width="0.0287%" height="15" fill="rgb(249,63,35)" fg:x="38232" fg:w="32"/><text x="34.5566%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32 samples, 0.03%)</title><rect x="34.3066%" y="613" width="0.0287%" height="15" fill="rgb(252,114,16)" fg:x="38232" fg:w="32"/><text x="34.5566%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (32 samples, 0.03%)</title><rect x="34.3066%" y="597" width="0.0287%" height="15" fill="rgb(254,151,24)" fg:x="38232" fg:w="32"/><text x="34.5566%" y="607.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="34.4044%" y="421" width="0.0153%" height="15" fill="rgb(253,54,39)" fg:x="38341" fg:w="17"/><text x="34.6544%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (17 samples, 0.02%)</title><rect x="34.4278%" y="341" width="0.0153%" height="15" fill="rgb(243,25,45)" fg:x="38367" fg:w="17"/><text x="34.6778%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (17 samples, 0.02%)</title><rect x="34.4278%" y="325" width="0.0153%" height="15" fill="rgb(234,134,9)" fg:x="38367" fg:w="17"/><text x="34.6778%" y="335.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="34.4314%" y="309" width="0.0117%" height="15" fill="rgb(227,166,31)" fg:x="38371" fg:w="13"/><text x="34.6814%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (23 samples, 0.02%)</title><rect x="34.4278%" y="357" width="0.0206%" height="15" fill="rgb(245,143,41)" fg:x="38367" fg:w="23"/><text x="34.6778%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (34 samples, 0.03%)</title><rect x="34.4233%" y="373" width="0.0305%" height="15" fill="rgb(238,181,32)" fg:x="38362" fg:w="34"/><text x="34.6733%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (27 samples, 0.02%)</title><rect x="34.4664%" y="357" width="0.0242%" height="15" fill="rgb(224,113,18)" fg:x="38410" fg:w="27"/><text x="34.7164%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (204 samples, 0.18%)</title><rect x="34.4233%" y="405" width="0.1831%" height="15" fill="rgb(240,229,28)" fg:x="38362" fg:w="204"/><text x="34.6733%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (204 samples, 0.18%)</title><rect x="34.4233%" y="389" width="0.1831%" height="15" fill="rgb(250,185,3)" fg:x="38362" fg:w="204"/><text x="34.6733%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (170 samples, 0.15%)</title><rect x="34.4538%" y="373" width="0.1525%" height="15" fill="rgb(212,59,25)" fg:x="38396" fg:w="170"/><text x="34.7038%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (129 samples, 0.12%)</title><rect x="34.4906%" y="357" width="0.1158%" height="15" fill="rgb(221,87,20)" fg:x="38437" fg:w="129"/><text x="34.7406%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (129 samples, 0.12%)</title><rect x="34.4906%" y="341" width="0.1158%" height="15" fill="rgb(213,74,28)" fg:x="38437" fg:w="129"/><text x="34.7406%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (129 samples, 0.12%)</title><rect x="34.4906%" y="325" width="0.1158%" height="15" fill="rgb(224,132,34)" fg:x="38437" fg:w="129"/><text x="34.7406%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (426 samples, 0.38%)</title><rect x="34.4044%" y="453" width="0.3823%" height="15" fill="rgb(222,101,24)" fg:x="38341" fg:w="426"/><text x="34.6544%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (426 samples, 0.38%)</title><rect x="34.4044%" y="437" width="0.3823%" height="15" fill="rgb(254,142,4)" fg:x="38341" fg:w="426"/><text x="34.6544%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (409 samples, 0.37%)</title><rect x="34.4197%" y="421" width="0.3670%" height="15" fill="rgb(230,229,49)" fg:x="38358" fg:w="409"/><text x="34.6697%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (182 samples, 0.16%)</title><rect x="34.6234%" y="405" width="0.1633%" height="15" fill="rgb(238,70,47)" fg:x="38585" fg:w="182"/><text x="34.8734%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (182 samples, 0.16%)</title><rect x="34.6234%" y="389" width="0.1633%" height="15" fill="rgb(231,160,17)" fg:x="38585" fg:w="182"/><text x="34.8734%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (506 samples, 0.45%)</title><rect x="34.3353%" y="581" width="0.4540%" height="15" fill="rgb(218,68,53)" fg:x="38264" fg:w="506"/><text x="34.5853%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (482 samples, 0.43%)</title><rect x="34.3569%" y="565" width="0.4325%" height="15" fill="rgb(236,111,10)" fg:x="38288" fg:w="482"/><text x="34.6069%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (446 samples, 0.40%)</title><rect x="34.3892%" y="549" width="0.4002%" height="15" fill="rgb(224,34,41)" fg:x="38324" fg:w="446"/><text x="34.6392%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (446 samples, 0.40%)</title><rect x="34.3892%" y="533" width="0.4002%" height="15" fill="rgb(241,118,19)" fg:x="38324" fg:w="446"/><text x="34.6392%" y="543.50"></text></g><g><title>alloc::alloc::alloc (446 samples, 0.40%)</title><rect x="34.3892%" y="517" width="0.4002%" height="15" fill="rgb(238,129,25)" fg:x="38324" fg:w="446"/><text x="34.6392%" y="527.50"></text></g><g><title>__rg_alloc (446 samples, 0.40%)</title><rect x="34.3892%" y="501" width="0.4002%" height="15" fill="rgb(238,22,31)" fg:x="38324" fg:w="446"/><text x="34.6392%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (446 samples, 0.40%)</title><rect x="34.3892%" y="485" width="0.4002%" height="15" fill="rgb(222,174,48)" fg:x="38324" fg:w="446"/><text x="34.6392%" y="495.50"></text></g><g><title>rust_alloc (438 samples, 0.39%)</title><rect x="34.3964%" y="469" width="0.3930%" height="15" fill="rgb(206,152,40)" fg:x="38332" fg:w="438"/><text x="34.6464%" y="479.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (551 samples, 0.49%)</title><rect x="34.3066%" y="661" width="0.4944%" height="15" fill="rgb(218,99,54)" fg:x="38232" fg:w="551"/><text x="34.5566%" y="671.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (519 samples, 0.47%)</title><rect x="34.3353%" y="645" width="0.4657%" height="15" fill="rgb(220,174,26)" fg:x="38264" fg:w="519"/><text x="34.5853%" y="655.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (519 samples, 0.47%)</title><rect x="34.3353%" y="629" width="0.4657%" height="15" fill="rgb(245,116,9)" fg:x="38264" fg:w="519"/><text x="34.5853%" y="639.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (519 samples, 0.47%)</title><rect x="34.3353%" y="613" width="0.4657%" height="15" fill="rgb(209,72,35)" fg:x="38264" fg:w="519"/><text x="34.5853%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (519 samples, 0.47%)</title><rect x="34.3353%" y="597" width="0.4657%" height="15" fill="rgb(226,126,21)" fg:x="38264" fg:w="519"/><text x="34.5853%" y="607.50"></text></g><g><title>value_trait::Builder::object (13 samples, 0.01%)</title><rect x="34.7894%" y="581" width="0.0117%" height="15" fill="rgb(227,192,1)" fg:x="38770" fg:w="13"/><text x="35.0394%" y="591.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (592 samples, 0.53%)</title><rect x="34.3066%" y="677" width="0.5312%" height="15" fill="rgb(237,180,29)" fg:x="38232" fg:w="592"/><text x="34.5566%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (41 samples, 0.04%)</title><rect x="34.8011%" y="661" width="0.0368%" height="15" fill="rgb(230,197,35)" fg:x="38783" fg:w="41"/><text x="35.0511%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (40 samples, 0.04%)</title><rect x="34.8020%" y="645" width="0.0359%" height="15" fill="rgb(246,193,31)" fg:x="38784" fg:w="40"/><text x="35.0520%" y="655.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (40 samples, 0.04%)</title><rect x="34.8020%" y="629" width="0.0359%" height="15" fill="rgb(241,36,4)" fg:x="38784" fg:w="40"/><text x="35.0520%" y="639.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (28 samples, 0.03%)</title><rect x="34.8127%" y="613" width="0.0251%" height="15" fill="rgb(241,130,17)" fg:x="38796" fg:w="28"/><text x="35.0627%" y="623.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (28 samples, 0.03%)</title><rect x="34.8127%" y="597" width="0.0251%" height="15" fill="rgb(206,137,32)" fg:x="38796" fg:w="28"/><text x="35.0627%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (28 samples, 0.03%)</title><rect x="34.8127%" y="581" width="0.0251%" height="15" fill="rgb(237,228,51)" fg:x="38796" fg:w="28"/><text x="35.0627%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (28 samples, 0.03%)</title><rect x="34.8127%" y="565" width="0.0251%" height="15" fill="rgb(243,6,42)" fg:x="38796" fg:w="28"/><text x="35.0627%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (28 samples, 0.03%)</title><rect x="34.8127%" y="549" width="0.0251%" height="15" fill="rgb(251,74,28)" fg:x="38796" fg:w="28"/><text x="35.0627%" y="559.50"></text></g><g><title>abi_stable::std_types::option::ROption&lt;T&gt;::unwrap_or_else (626 samples, 0.56%)</title><rect x="34.2896%" y="741" width="0.5617%" height="15" fill="rgb(218,20,49)" fg:x="38213" fg:w="626"/><text x="34.5396%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (618 samples, 0.55%)</title><rect x="34.2968%" y="725" width="0.5545%" height="15" fill="rgb(238,28,14)" fg:x="38221" fg:w="618"/><text x="34.5468%" y="735.50"></text></g><g><title>value_trait::Builder::object (607 samples, 0.54%)</title><rect x="34.3066%" y="709" width="0.5447%" height="15" fill="rgb(229,40,46)" fg:x="38232" fg:w="607"/><text x="34.5566%" y="719.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (607 samples, 0.54%)</title><rect x="34.3066%" y="693" width="0.5447%" height="15" fill="rgb(244,195,20)" fg:x="38232" fg:w="607"/><text x="34.5566%" y="703.50"></text></g><g><title>tremor_value::value::Value::Object (15 samples, 0.01%)</title><rect x="34.8379%" y="677" width="0.0135%" height="15" fill="rgb(253,56,35)" fg:x="38824" fg:w="15"/><text x="35.0879%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="34.8684%" y="741" width="0.0108%" height="15" fill="rgb(210,149,44)" fg:x="38858" fg:w="12"/><text x="35.1184%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (13 samples, 0.01%)</title><rect x="34.9375%" y="661" width="0.0117%" height="15" fill="rgb(240,135,12)" fg:x="38935" fg:w="13"/><text x="35.1875%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="34.9375%" y="645" width="0.0117%" height="15" fill="rgb(251,24,50)" fg:x="38935" fg:w="13"/><text x="35.1875%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (13 samples, 0.01%)</title><rect x="34.9375%" y="629" width="0.0117%" height="15" fill="rgb(243,200,47)" fg:x="38935" fg:w="13"/><text x="35.1875%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value)&gt;&gt; (13 samples, 0.01%)</title><rect x="34.9375%" y="613" width="0.0117%" height="15" fill="rgb(224,166,26)" fg:x="38935" fg:w="13"/><text x="35.1875%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="34.9375%" y="597" width="0.0117%" height="15" fill="rgb(233,0,47)" fg:x="38935" fg:w="13"/><text x="35.1875%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (50 samples, 0.04%)</title><rect x="34.9114%" y="677" width="0.0449%" height="15" fill="rgb(253,80,5)" fg:x="38906" fg:w="50"/><text x="35.1614%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (32 samples, 0.03%)</title><rect x="35.0155%" y="533" width="0.0287%" height="15" fill="rgb(214,133,25)" fg:x="39022" fg:w="32"/><text x="35.2655%" y="543.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (32 samples, 0.03%)</title><rect x="35.0155%" y="517" width="0.0287%" height="15" fill="rgb(209,27,14)" fg:x="39022" fg:w="32"/><text x="35.2655%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (77 samples, 0.07%)</title><rect x="34.9859%" y="581" width="0.0691%" height="15" fill="rgb(219,102,51)" fg:x="38989" fg:w="77"/><text x="35.2359%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (77 samples, 0.07%)</title><rect x="34.9859%" y="565" width="0.0691%" height="15" fill="rgb(237,18,16)" fg:x="38989" fg:w="77"/><text x="35.2359%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (73 samples, 0.07%)</title><rect x="34.9895%" y="549" width="0.0655%" height="15" fill="rgb(241,85,17)" fg:x="38993" fg:w="73"/><text x="35.2395%" y="559.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="35.0442%" y="533" width="0.0108%" height="15" fill="rgb(236,90,42)" fg:x="39054" fg:w="12"/><text x="35.2942%" y="543.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="35.0442%" y="517" width="0.0108%" height="15" fill="rgb(249,57,21)" fg:x="39054" fg:w="12"/><text x="35.2942%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (100 samples, 0.09%)</title><rect x="34.9725%" y="613" width="0.0897%" height="15" fill="rgb(243,12,36)" fg:x="38974" fg:w="100"/><text x="35.2225%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (100 samples, 0.09%)</title><rect x="34.9725%" y="597" width="0.0897%" height="15" fill="rgb(253,128,47)" fg:x="38974" fg:w="100"/><text x="35.2225%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (103 samples, 0.09%)</title><rect x="34.9725%" y="645" width="0.0924%" height="15" fill="rgb(207,33,20)" fg:x="38974" fg:w="103"/><text x="35.2225%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (103 samples, 0.09%)</title><rect x="34.9725%" y="629" width="0.0924%" height="15" fill="rgb(233,215,35)" fg:x="38974" fg:w="103"/><text x="35.2225%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (120 samples, 0.11%)</title><rect x="34.9644%" y="661" width="0.1077%" height="15" fill="rgb(249,188,52)" fg:x="38965" fg:w="120"/><text x="35.2144%" y="671.50"></text></g><g><title>rust_dealloc (143 samples, 0.13%)</title><rect x="34.9563%" y="677" width="0.1283%" height="15" fill="rgb(225,12,32)" fg:x="38956" fg:w="143"/><text x="35.2063%" y="687.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="35.0721%" y="661" width="0.0126%" height="15" fill="rgb(247,98,14)" fg:x="39085" fg:w="14"/><text x="35.3221%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (242 samples, 0.22%)</title><rect x="34.8791%" y="741" width="0.2172%" height="15" fill="rgb(247,219,48)" fg:x="38870" fg:w="242"/><text x="35.1291%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (238 samples, 0.21%)</title><rect x="34.8827%" y="725" width="0.2136%" height="15" fill="rgb(253,60,48)" fg:x="38874" fg:w="238"/><text x="35.1327%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (238 samples, 0.21%)</title><rect x="34.8827%" y="709" width="0.2136%" height="15" fill="rgb(245,15,52)" fg:x="38874" fg:w="238"/><text x="35.1327%" y="719.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (238 samples, 0.21%)</title><rect x="34.8827%" y="693" width="0.2136%" height="15" fill="rgb(220,133,28)" fg:x="38874" fg:w="238"/><text x="35.1327%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (13 samples, 0.01%)</title><rect x="35.0846%" y="677" width="0.0117%" height="15" fill="rgb(217,180,4)" fg:x="39099" fg:w="13"/><text x="35.3346%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (65 samples, 0.06%)</title><rect x="35.1708%" y="677" width="0.0583%" height="15" fill="rgb(251,24,1)" fg:x="39195" fg:w="65"/><text x="35.4208%" y="687.50"></text></g><g><title>core::cmp::PartialOrd::ge (65 samples, 0.06%)</title><rect x="35.1708%" y="661" width="0.0583%" height="15" fill="rgb(212,185,49)" fg:x="39195" fg:w="65"/><text x="35.4208%" y="671.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (64 samples, 0.06%)</title><rect x="35.1717%" y="645" width="0.0574%" height="15" fill="rgb(215,175,22)" fg:x="39196" fg:w="64"/><text x="35.4217%" y="655.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (64 samples, 0.06%)</title><rect x="35.1717%" y="629" width="0.0574%" height="15" fill="rgb(250,205,14)" fg:x="39196" fg:w="64"/><text x="35.4217%" y="639.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (64 samples, 0.06%)</title><rect x="35.1717%" y="613" width="0.0574%" height="15" fill="rgb(225,211,22)" fg:x="39196" fg:w="64"/><text x="35.4217%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (35 samples, 0.03%)</title><rect x="35.1977%" y="597" width="0.0314%" height="15" fill="rgb(251,179,42)" fg:x="39225" fg:w="35"/><text x="35.4477%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (120 samples, 0.11%)</title><rect x="35.1304%" y="709" width="0.1077%" height="15" fill="rgb(208,216,51)" fg:x="39150" fg:w="120"/><text x="35.3804%" y="719.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (120 samples, 0.11%)</title><rect x="35.1304%" y="693" width="0.1077%" height="15" fill="rgb(235,36,11)" fg:x="39150" fg:w="120"/><text x="35.3804%" y="703.50"></text></g><g><title>std::time::SystemTime::duration_since (128 samples, 0.11%)</title><rect x="35.1304%" y="725" width="0.1149%" height="15" fill="rgb(213,189,28)" fg:x="39150" fg:w="128"/><text x="35.3804%" y="735.50"></text></g><g><title>tremor_common::time::nanotime (771 samples, 0.69%)</title><rect x="35.0963%" y="741" width="0.6918%" height="15" fill="rgb(227,203,42)" fg:x="39112" fg:w="771"/><text x="35.3463%" y="751.50"></text></g><g><title>std::time::SystemTime::now (605 samples, 0.54%)</title><rect x="35.2452%" y="725" width="0.5429%" height="15" fill="rgb(244,72,36)" fg:x="39278" fg:w="605"/><text x="35.4952%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (605 samples, 0.54%)</title><rect x="35.2452%" y="709" width="0.5429%" height="15" fill="rgb(213,53,17)" fg:x="39278" fg:w="605"/><text x="35.4952%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::now (605 samples, 0.54%)</title><rect x="35.2452%" y="693" width="0.5429%" height="15" fill="rgb(207,167,3)" fg:x="39278" fg:w="605"/><text x="35.4952%" y="703.50"></text></g><g><title>__clock_gettime_2 (468 samples, 0.42%)</title><rect x="35.3682%" y="677" width="0.4199%" height="15" fill="rgb(216,98,30)" fg:x="39415" fg:w="468"/><text x="35.6182%" y="687.50"></text></g><g><title>__vdso_clock_gettime (434 samples, 0.39%)</title><rect x="35.3987%" y="661" width="0.3894%" height="15" fill="rgb(236,123,15)" fg:x="39449" fg:w="434"/><text x="35.6487%" y="671.50"></text></g><g><title>[[vdso]] (296 samples, 0.27%)</title><rect x="35.5225%" y="645" width="0.2656%" height="15" fill="rgb(248,81,50)" fg:x="39587" fg:w="296"/><text x="35.7725%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (16 samples, 0.01%)</title><rect x="35.8402%" y="661" width="0.0144%" height="15" fill="rgb(214,120,4)" fg:x="39941" fg:w="16"/><text x="36.0902%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,995 samples, 7.17%)</title><rect x="28.7073%" y="773" width="7.1741%" height="15" fill="rgb(208,179,34)" fg:x="31992" fg:w="7995"/><text x="28.9573%" y="783.50">&lt;core::fut..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (4,041 samples, 3.63%)</title><rect x="32.2553%" y="757" width="3.6261%" height="15" fill="rgb(227,140,7)" fg:x="35946" fg:w="4041"/><text x="32.5053%" y="767.50">trem..</text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (104 samples, 0.09%)</title><rect x="35.7881%" y="741" width="0.0933%" height="15" fill="rgb(214,22,6)" fg:x="39883" fg:w="104"/><text x="36.0381%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (87 samples, 0.08%)</title><rect x="35.8034%" y="725" width="0.0781%" height="15" fill="rgb(207,137,27)" fg:x="39900" fg:w="87"/><text x="36.0534%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (76 samples, 0.07%)</title><rect x="35.8132%" y="709" width="0.0682%" height="15" fill="rgb(210,8,46)" fg:x="39911" fg:w="76"/><text x="36.0632%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (76 samples, 0.07%)</title><rect x="35.8132%" y="693" width="0.0682%" height="15" fill="rgb(240,16,54)" fg:x="39911" fg:w="76"/><text x="36.0632%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (76 samples, 0.07%)</title><rect x="35.8132%" y="677" width="0.0682%" height="15" fill="rgb(211,209,29)" fg:x="39911" fg:w="76"/><text x="36.0632%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (30 samples, 0.03%)</title><rect x="35.8545%" y="661" width="0.0269%" height="15" fill="rgb(226,228,24)" fg:x="39957" fg:w="30"/><text x="36.1045%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (35 samples, 0.03%)</title><rect x="35.8877%" y="757" width="0.0314%" height="15" fill="rgb(222,84,9)" fg:x="39994" fg:w="35"/><text x="36.1377%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (44 samples, 0.04%)</title><rect x="35.8877%" y="773" width="0.0395%" height="15" fill="rgb(234,203,30)" fg:x="39994" fg:w="44"/><text x="36.1377%" y="783.50"></text></g><g><title>&lt;tremor_runtime::connectors::Connectivity as core::cmp::PartialEq&gt;::eq (12 samples, 0.01%)</title><rect x="35.9631%" y="757" width="0.0108%" height="15" fill="rgb(238,109,14)" fg:x="40078" fg:w="12"/><text x="36.2131%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (9,291 samples, 8.34%)</title><rect x="27.6377%" y="789" width="8.3371%" height="15" fill="rgb(233,206,34)" fg:x="30800" fg:w="9291"/><text x="27.8877%" y="799.50">tremor_runti..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::should_pull_data (53 samples, 0.05%)</title><rect x="35.9272%" y="773" width="0.0476%" height="15" fill="rgb(220,167,47)" fg:x="40038" fg:w="53"/><text x="36.1772%" y="783.50"></text></g><g><title>rust_dealloc (24 samples, 0.02%)</title><rect x="36.1004%" y="741" width="0.0215%" height="15" fill="rgb(238,105,10)" fg:x="40231" fg:w="24"/><text x="36.3504%" y="751.50"></text></g><g><title>rust_dealloc (30 samples, 0.03%)</title><rect x="36.1255%" y="677" width="0.0269%" height="15" fill="rgb(213,227,17)" fg:x="40259" fg:w="30"/><text x="36.3755%" y="687.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (25 samples, 0.02%)</title><rect x="36.2278%" y="645" width="0.0224%" height="15" fill="rgb(217,132,38)" fg:x="40373" fg:w="25"/><text x="36.4778%" y="655.50"></text></g><g><title> (25 samples, 0.02%)</title><rect x="36.2278%" y="629" width="0.0224%" height="15" fill="rgb(242,146,4)" fg:x="40373" fg:w="25"/><text x="36.4778%" y="639.50"></text></g><g><title>snmalloc::Remote::set_info (13 samples, 0.01%)</title><rect x="36.2502%" y="645" width="0.0117%" height="15" fill="rgb(212,61,9)" fg:x="40398" fg:w="13"/><text x="36.5002%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (118 samples, 0.11%)</title><rect x="36.1623%" y="677" width="0.1059%" height="15" fill="rgb(247,126,22)" fg:x="40300" fg:w="118"/><text x="36.4123%" y="687.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (93 samples, 0.08%)</title><rect x="36.1847%" y="661" width="0.0835%" height="15" fill="rgb(220,196,2)" fg:x="40325" fg:w="93"/><text x="36.4347%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (215 samples, 0.19%)</title><rect x="36.1255%" y="709" width="0.1929%" height="15" fill="rgb(208,46,4)" fg:x="40259" fg:w="215"/><text x="36.3755%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (215 samples, 0.19%)</title><rect x="36.1255%" y="693" width="0.1929%" height="15" fill="rgb(252,104,46)" fg:x="40259" fg:w="215"/><text x="36.3755%" y="703.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (47 samples, 0.04%)</title><rect x="36.2763%" y="677" width="0.0422%" height="15" fill="rgb(237,152,48)" fg:x="40427" fg:w="47"/><text x="36.5263%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (217 samples, 0.19%)</title><rect x="36.1255%" y="741" width="0.1947%" height="15" fill="rgb(221,59,37)" fg:x="40259" fg:w="217"/><text x="36.3755%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (217 samples, 0.19%)</title><rect x="36.1255%" y="725" width="0.1947%" height="15" fill="rgb(209,202,51)" fg:x="40259" fg:w="217"/><text x="36.3755%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (255 samples, 0.23%)</title><rect x="36.0986%" y="757" width="0.2288%" height="15" fill="rgb(228,81,30)" fg:x="40229" fg:w="255"/><text x="36.3486%" y="767.50"></text></g><g><title>rust_dealloc (288 samples, 0.26%)</title><rect x="36.0923%" y="773" width="0.2584%" height="15" fill="rgb(227,42,39)" fg:x="40222" fg:w="288"/><text x="36.3423%" y="783.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (26 samples, 0.02%)</title><rect x="36.3274%" y="757" width="0.0233%" height="15" fill="rgb(221,26,2)" fg:x="40484" fg:w="26"/><text x="36.5774%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="36.3507%" y="725" width="0.0108%" height="15" fill="rgb(254,61,31)" fg:x="40510" fg:w="12"/><text x="36.6007%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (53 samples, 0.05%)</title><rect x="36.3507%" y="741" width="0.0476%" height="15" fill="rgb(222,173,38)" fg:x="40510" fg:w="53"/><text x="36.6007%" y="751.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (41 samples, 0.04%)</title><rect x="36.3615%" y="725" width="0.0368%" height="15" fill="rgb(218,50,12)" fg:x="40522" fg:w="41"/><text x="36.6115%" y="735.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (29 samples, 0.03%)</title><rect x="36.3723%" y="709" width="0.0260%" height="15" fill="rgb(223,88,40)" fg:x="40534" fg:w="29"/><text x="36.6223%" y="719.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (29 samples, 0.03%)</title><rect x="36.3723%" y="693" width="0.0260%" height="15" fill="rgb(237,54,19)" fg:x="40534" fg:w="29"/><text x="36.6223%" y="703.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (29 samples, 0.03%)</title><rect x="36.3723%" y="677" width="0.0260%" height="15" fill="rgb(251,129,25)" fg:x="40534" fg:w="29"/><text x="36.6223%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (54 samples, 0.05%)</title><rect x="36.3507%" y="757" width="0.0485%" height="15" fill="rgb(238,97,19)" fg:x="40510" fg:w="54"/><text x="36.6007%" y="767.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (482 samples, 0.43%)</title><rect x="35.9748%" y="789" width="0.4325%" height="15" fill="rgb(240,169,18)" fg:x="40091" fg:w="482"/><text x="36.2248%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (63 samples, 0.06%)</title><rect x="36.3507%" y="773" width="0.0565%" height="15" fill="rgb(230,187,49)" fg:x="40510" fg:w="63"/><text x="36.6007%" y="783.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (35 samples, 0.03%)</title><rect x="37.5110%" y="773" width="0.0314%" height="15" fill="rgb(209,44,26)" fg:x="41803" fg:w="35"/><text x="37.7610%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="37.5424%" y="773" width="0.0170%" height="15" fill="rgb(244,0,6)" fg:x="41838" fg:w="19"/><text x="37.7924%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="37.7156%" y="757" width="0.0144%" height="15" fill="rgb(248,18,21)" fg:x="42031" fg:w="16"/><text x="37.9656%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (523 samples, 0.47%)</title><rect x="37.9848%" y="741" width="0.4693%" height="15" fill="rgb(245,180,19)" fg:x="42331" fg:w="523"/><text x="38.2348%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (452 samples, 0.41%)</title><rect x="38.4541%" y="741" width="0.4056%" height="15" fill="rgb(252,118,36)" fg:x="42854" fg:w="452"/><text x="38.7041%" y="751.50"></text></g><g><title>core::ptr::write (422 samples, 0.38%)</title><rect x="38.4810%" y="725" width="0.3787%" height="15" fill="rgb(210,224,19)" fg:x="42884" fg:w="422"/><text x="38.7310%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (420 samples, 0.38%)</title><rect x="38.4828%" y="709" width="0.3769%" height="15" fill="rgb(218,30,24)" fg:x="42886" fg:w="420"/><text x="38.7328%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (31 samples, 0.03%)</title><rect x="38.8597%" y="741" width="0.0278%" height="15" fill="rgb(219,75,50)" fg:x="43306" fg:w="31"/><text x="39.1097%" y="751.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (20 samples, 0.02%)</title><rect x="38.9045%" y="709" width="0.0179%" height="15" fill="rgb(234,72,50)" fg:x="43356" fg:w="20"/><text x="39.1545%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.02%)</title><rect x="38.9045%" y="693" width="0.0179%" height="15" fill="rgb(219,100,48)" fg:x="43356" fg:w="20"/><text x="39.1545%" y="703.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (13 samples, 0.01%)</title><rect x="38.9225%" y="709" width="0.0117%" height="15" fill="rgb(253,5,41)" fg:x="43376" fg:w="13"/><text x="39.1725%" y="719.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (13 samples, 0.01%)</title><rect x="38.9225%" y="693" width="0.0117%" height="15" fill="rgb(247,181,11)" fg:x="43376" fg:w="13"/><text x="39.1725%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (832 samples, 0.75%)</title><rect x="38.9351%" y="645" width="0.7466%" height="15" fill="rgb(222,223,25)" fg:x="43390" fg:w="832"/><text x="39.1851%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (753 samples, 0.68%)</title><rect x="39.0059%" y="629" width="0.6757%" height="15" fill="rgb(214,198,28)" fg:x="43469" fg:w="753"/><text x="39.2559%" y="639.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (872 samples, 0.78%)</title><rect x="38.9045%" y="725" width="0.7825%" height="15" fill="rgb(230,46,43)" fg:x="43356" fg:w="872"/><text x="39.1545%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (838 samples, 0.75%)</title><rect x="38.9351%" y="709" width="0.7520%" height="15" fill="rgb(233,65,53)" fg:x="43390" fg:w="838"/><text x="39.1851%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (838 samples, 0.75%)</title><rect x="38.9351%" y="693" width="0.7520%" height="15" fill="rgb(221,121,27)" fg:x="43390" fg:w="838"/><text x="39.1851%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (838 samples, 0.75%)</title><rect x="38.9351%" y="677" width="0.7520%" height="15" fill="rgb(247,70,47)" fg:x="43390" fg:w="838"/><text x="39.1851%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (838 samples, 0.75%)</title><rect x="38.9351%" y="661" width="0.7520%" height="15" fill="rgb(228,85,35)" fg:x="43390" fg:w="838"/><text x="39.1851%" y="671.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (909 samples, 0.82%)</title><rect x="38.8893%" y="741" width="0.8157%" height="15" fill="rgb(209,50,18)" fg:x="43339" fg:w="909"/><text x="39.1393%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (20 samples, 0.02%)</title><rect x="39.6870%" y="725" width="0.0179%" height="15" fill="rgb(250,19,35)" fg:x="44228" fg:w="20"/><text x="39.9370%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (15 samples, 0.01%)</title><rect x="39.7211%" y="725" width="0.0135%" height="15" fill="rgb(253,107,29)" fg:x="44266" fg:w="15"/><text x="39.9711%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse::revswap (15 samples, 0.01%)</title><rect x="39.7211%" y="709" width="0.0135%" height="15" fill="rgb(252,179,29)" fg:x="44266" fg:w="15"/><text x="39.9711%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (15 samples, 0.01%)</title><rect x="39.7211%" y="693" width="0.0135%" height="15" fill="rgb(238,194,6)" fg:x="44266" fg:w="15"/><text x="39.9711%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (15 samples, 0.01%)</title><rect x="39.7211%" y="677" width="0.0135%" height="15" fill="rgb(238,164,29)" fg:x="44266" fg:w="15"/><text x="39.9711%" y="687.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="40.4327%" y="709" width="0.0260%" height="15" fill="rgb(224,25,9)" fg:x="45059" fg:w="29"/><text x="40.6827%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (20 samples, 0.02%)</title><rect x="40.4668%" y="709" width="0.0179%" height="15" fill="rgb(244,153,23)" fg:x="45097" fg:w="20"/><text x="40.7168%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (502 samples, 0.45%)</title><rect x="40.4847%" y="709" width="0.4505%" height="15" fill="rgb(212,203,14)" fg:x="45117" fg:w="502"/><text x="40.7347%" y="719.50"></text></g><g><title>core::ptr::write (500 samples, 0.45%)</title><rect x="40.4865%" y="693" width="0.4487%" height="15" fill="rgb(220,164,20)" fg:x="45119" fg:w="500"/><text x="40.7365%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (481 samples, 0.43%)</title><rect x="40.5036%" y="677" width="0.4316%" height="15" fill="rgb(222,203,48)" fg:x="45138" fg:w="481"/><text x="40.7536%" y="687.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,352 samples, 1.21%)</title><rect x="39.7346%" y="725" width="1.2132%" height="15" fill="rgb(215,159,22)" fg:x="44281" fg:w="1352"/><text x="39.9846%" y="735.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (14 samples, 0.01%)</title><rect x="40.9352%" y="709" width="0.0126%" height="15" fill="rgb(216,183,47)" fg:x="45619" fg:w="14"/><text x="41.1852%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,397 samples, 1.25%)</title><rect x="39.7050%" y="741" width="1.2536%" height="15" fill="rgb(229,195,25)" fg:x="44248" fg:w="1397"/><text x="39.9550%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (12 samples, 0.01%)</title><rect x="40.9478%" y="725" width="0.0108%" height="15" fill="rgb(224,132,51)" fg:x="45633" fg:w="12"/><text x="41.1978%" y="735.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,611 samples, 3.24%)</title><rect x="37.7299%" y="757" width="3.2403%" height="15" fill="rgb(240,63,7)" fg:x="42047" fg:w="3611"/><text x="37.9799%" y="767.50">tre..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (13 samples, 0.01%)</title><rect x="40.9585%" y="741" width="0.0117%" height="15" fill="rgb(249,182,41)" fg:x="45645" fg:w="13"/><text x="41.2085%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (29 samples, 0.03%)</title><rect x="40.9702%" y="757" width="0.0260%" height="15" fill="rgb(243,47,26)" fg:x="45658" fg:w="29"/><text x="41.2202%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,861 samples, 3.46%)</title><rect x="37.5630%" y="773" width="3.4646%" height="15" fill="rgb(233,48,2)" fg:x="41861" fg:w="3861"/><text x="37.8130%" y="783.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (35 samples, 0.03%)</title><rect x="40.9962%" y="757" width="0.0314%" height="15" fill="rgb(244,165,34)" fg:x="45687" fg:w="35"/><text x="41.2462%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,619 samples, 1.45%)</title><rect x="41.0276%" y="773" width="1.4528%" height="15" fill="rgb(207,89,7)" fg:x="45722" fg:w="1619"/><text x="41.2776%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="42.4804%" y="757" width="0.0251%" height="15" fill="rgb(244,117,36)" fg:x="47341" fg:w="28"/><text x="42.7304%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (29 samples, 0.03%)</title><rect x="42.4804%" y="773" width="0.0260%" height="15" fill="rgb(226,144,34)" fg:x="47341" fg:w="29"/><text x="42.7304%" y="783.50"></text></g><g><title>async_global_executor::reactor::block_on (32,939 samples, 29.56%)</title><rect x="12.9816%" y="1125" width="29.5571%" height="15" fill="rgb(213,23,19)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="1135.50">async_global_executor::reactor::block_on</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (32,939 samples, 29.56%)</title><rect x="12.9816%" y="1109" width="29.5571%" height="15" fill="rgb(217,75,12)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="1119.50">async_global_executor::reactor::block_on::{{clos..</text></g><g><title>async_io::driver::block_on (32,939 samples, 29.56%)</title><rect x="12.9816%" y="1093" width="29.5571%" height="15" fill="rgb(224,159,17)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="1103.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (32,939 samples, 29.56%)</title><rect x="12.9816%" y="1077" width="29.5571%" height="15" fill="rgb(217,118,1)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="1087.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,939 samples, 29.56%)</title><rect x="12.9816%" y="1061" width="29.5571%" height="15" fill="rgb(232,180,48)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="1071.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as c..</text></g><g><title>async_executor::Executor::run::{{closure}} (32,939 samples, 29.56%)</title><rect x="12.9816%" y="1045" width="29.5571%" height="15" fill="rgb(230,27,33)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="1055.50">async_executor::Executor::run::{{closure}}</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (32,939 samples, 29.56%)</title><rect x="12.9816%" y="1029" width="29.5571%" height="15" fill="rgb(205,31,21)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="1039.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,939 samples, 29.56%)</title><rect x="12.9816%" y="1013" width="29.5571%" height="15" fill="rgb(253,59,4)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="1023.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as c..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (32,939 samples, 29.56%)</title><rect x="12.9816%" y="997" width="29.5571%" height="15" fill="rgb(224,201,9)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="1007.50">async_executor::Executor::run::{{closure}}::{{cl..</text></g><g><title>async_task::runnable::Runnable::run (32,939 samples, 29.56%)</title><rect x="12.9816%" y="981" width="29.5571%" height="15" fill="rgb(229,206,30)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="991.50">async_task::runnable::Runnable::run</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (32,939 samples, 29.56%)</title><rect x="12.9816%" y="965" width="29.5571%" height="15" fill="rgb(212,67,47)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="975.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (32,939 samples, 29.56%)</title><rect x="12.9816%" y="949" width="29.5571%" height="15" fill="rgb(211,96,50)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="959.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,939 samples, 29.56%)</title><rect x="12.9816%" y="933" width="29.5571%" height="15" fill="rgb(252,114,18)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="943.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as c..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (32,939 samples, 29.56%)</title><rect x="12.9816%" y="917" width="29.5571%" height="15" fill="rgb(223,58,37)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="927.50">async_executor::Executor::spawn::{{closure}}</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (32,939 samples, 29.56%)</title><rect x="12.9816%" y="901" width="29.5571%" height="15" fill="rgb(237,70,4)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="911.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; ..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (32,939 samples, 29.56%)</title><rect x="12.9816%" y="885" width="29.5571%" height="15" fill="rgb(244,85,46)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="895.50">async_std::task::task_locals_wrapper::TaskLocals..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32,939 samples, 29.56%)</title><rect x="12.9816%" y="869" width="29.5571%" height="15" fill="rgb(223,39,52)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="879.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (32,939 samples, 29.56%)</title><rect x="12.9816%" y="853" width="29.5571%" height="15" fill="rgb(218,200,14)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="863.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (32,939 samples, 29.56%)</title><rect x="12.9816%" y="837" width="29.5571%" height="15" fill="rgb(208,171,16)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="847.50">async_std::task::task_locals_wrapper::TaskLocals..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (32,939 samples, 29.56%)</title><rect x="12.9816%" y="821" width="29.5571%" height="15" fill="rgb(234,200,18)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="831.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; ..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,939 samples, 29.56%)</title><rect x="12.9816%" y="805" width="29.5571%" height="15" fill="rgb(228,45,11)" fg:x="14467" fg:w="32939"/><text x="13.2316%" y="815.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as c..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,833 samples, 6.13%)</title><rect x="36.4073%" y="789" width="6.1314%" height="15" fill="rgb(237,182,11)" fg:x="40573" fg:w="6833"/><text x="36.6573%" y="799.50">tremor_r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.04%)</title><rect x="42.5764%" y="549" width="0.0359%" height="15" fill="rgb(241,175,49)" fg:x="47448" fg:w="40"/><text x="42.8264%" y="559.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.04%)</title><rect x="42.9084%" y="533" width="0.0413%" height="15" fill="rgb(247,38,35)" fg:x="47818" fg:w="46"/><text x="43.1584%" y="543.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (40 samples, 0.04%)</title><rect x="42.9497%" y="533" width="0.0359%" height="15" fill="rgb(228,39,49)" fg:x="47864" fg:w="40"/><text x="43.1997%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.05%)</title><rect x="43.0116%" y="469" width="0.0467%" height="15" fill="rgb(226,101,26)" fg:x="47933" fg:w="52"/><text x="43.2616%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (63 samples, 0.06%)</title><rect x="43.0107%" y="533" width="0.0565%" height="15" fill="rgb(206,141,19)" fg:x="47932" fg:w="63"/><text x="43.2607%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (63 samples, 0.06%)</title><rect x="43.0107%" y="517" width="0.0565%" height="15" fill="rgb(211,200,13)" fg:x="47932" fg:w="63"/><text x="43.2607%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (63 samples, 0.06%)</title><rect x="43.0107%" y="501" width="0.0565%" height="15" fill="rgb(241,121,6)" fg:x="47932" fg:w="63"/><text x="43.2607%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (63 samples, 0.06%)</title><rect x="43.0107%" y="485" width="0.0565%" height="15" fill="rgb(234,221,29)" fg:x="47932" fg:w="63"/><text x="43.2607%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (13 samples, 0.01%)</title><rect x="43.1139%" y="373" width="0.0117%" height="15" fill="rgb(229,136,5)" fg:x="48047" fg:w="13"/><text x="43.3639%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (13 samples, 0.01%)</title><rect x="43.1139%" y="357" width="0.0117%" height="15" fill="rgb(238,36,11)" fg:x="48047" fg:w="13"/><text x="43.3639%" y="367.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="43.1148%" y="341" width="0.0108%" height="15" fill="rgb(251,55,41)" fg:x="48048" fg:w="12"/><text x="43.3648%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="43.1148%" y="325" width="0.0108%" height="15" fill="rgb(242,34,40)" fg:x="48048" fg:w="12"/><text x="43.3648%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="43.1148%" y="309" width="0.0108%" height="15" fill="rgb(215,42,17)" fg:x="48048" fg:w="12"/><text x="43.3648%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="43.1148%" y="293" width="0.0108%" height="15" fill="rgb(207,44,46)" fg:x="48048" fg:w="12"/><text x="43.3648%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="43.1148%" y="277" width="0.0108%" height="15" fill="rgb(211,206,28)" fg:x="48048" fg:w="12"/><text x="43.3648%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="43.1148%" y="261" width="0.0108%" height="15" fill="rgb(237,167,16)" fg:x="48048" fg:w="12"/><text x="43.3648%" y="271.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="43.1148%" y="245" width="0.0108%" height="15" fill="rgb(233,66,6)" fg:x="48048" fg:w="12"/><text x="43.3648%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="43.1148%" y="229" width="0.0108%" height="15" fill="rgb(246,123,29)" fg:x="48048" fg:w="12"/><text x="43.3648%" y="239.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (34 samples, 0.03%)</title><rect x="43.1929%" y="229" width="0.0305%" height="15" fill="rgb(209,62,40)" fg:x="48135" fg:w="34"/><text x="43.4429%" y="239.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (33 samples, 0.03%)</title><rect x="43.1938%" y="213" width="0.0296%" height="15" fill="rgb(218,4,25)" fg:x="48136" fg:w="33"/><text x="43.4438%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (95 samples, 0.09%)</title><rect x="43.1435%" y="277" width="0.0852%" height="15" fill="rgb(253,91,49)" fg:x="48080" fg:w="95"/><text x="43.3935%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (95 samples, 0.09%)</title><rect x="43.1435%" y="261" width="0.0852%" height="15" fill="rgb(228,155,29)" fg:x="48080" fg:w="95"/><text x="43.3935%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (84 samples, 0.08%)</title><rect x="43.1534%" y="245" width="0.0754%" height="15" fill="rgb(243,57,37)" fg:x="48091" fg:w="84"/><text x="43.4034%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (119 samples, 0.11%)</title><rect x="43.1319%" y="309" width="0.1068%" height="15" fill="rgb(244,167,17)" fg:x="48067" fg:w="119"/><text x="43.3819%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (119 samples, 0.11%)</title><rect x="43.1319%" y="293" width="0.1068%" height="15" fill="rgb(207,181,38)" fg:x="48067" fg:w="119"/><text x="43.3819%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (127 samples, 0.11%)</title><rect x="43.1319%" y="341" width="0.1140%" height="15" fill="rgb(211,8,23)" fg:x="48067" fg:w="127"/><text x="43.3819%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (127 samples, 0.11%)</title><rect x="43.1319%" y="325" width="0.1140%" height="15" fill="rgb(235,11,44)" fg:x="48067" fg:w="127"/><text x="43.3819%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (132 samples, 0.12%)</title><rect x="43.1310%" y="357" width="0.1184%" height="15" fill="rgb(248,18,52)" fg:x="48066" fg:w="132"/><text x="43.3810%" y="367.50"></text></g><g><title>rust_dealloc (142 samples, 0.13%)</title><rect x="43.1256%" y="373" width="0.1274%" height="15" fill="rgb(208,4,7)" fg:x="48060" fg:w="142"/><text x="43.3756%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (28 samples, 0.03%)</title><rect x="43.2584%" y="357" width="0.0251%" height="15" fill="rgb(240,17,39)" fg:x="48208" fg:w="28"/><text x="43.5084%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (218 samples, 0.20%)</title><rect x="43.0897%" y="437" width="0.1956%" height="15" fill="rgb(207,170,3)" fg:x="48020" fg:w="218"/><text x="43.3397%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (213 samples, 0.19%)</title><rect x="43.0942%" y="421" width="0.1911%" height="15" fill="rgb(236,100,52)" fg:x="48025" fg:w="213"/><text x="43.3442%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (203 samples, 0.18%)</title><rect x="43.1031%" y="405" width="0.1822%" height="15" fill="rgb(246,78,51)" fg:x="48035" fg:w="203"/><text x="43.3531%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (203 samples, 0.18%)</title><rect x="43.1031%" y="389" width="0.1822%" height="15" fill="rgb(211,17,15)" fg:x="48035" fg:w="203"/><text x="43.3531%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (36 samples, 0.03%)</title><rect x="43.2530%" y="373" width="0.0323%" height="15" fill="rgb(209,59,46)" fg:x="48202" fg:w="36"/><text x="43.5030%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (249 samples, 0.22%)</title><rect x="43.0771%" y="501" width="0.2234%" height="15" fill="rgb(210,92,25)" fg:x="48006" fg:w="249"/><text x="43.3271%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (240 samples, 0.22%)</title><rect x="43.0852%" y="485" width="0.2154%" height="15" fill="rgb(238,174,52)" fg:x="48015" fg:w="240"/><text x="43.3352%" y="495.50"></text></g><g><title>core::mem::drop (235 samples, 0.21%)</title><rect x="43.0897%" y="469" width="0.2109%" height="15" fill="rgb(230,73,7)" fg:x="48020" fg:w="235"/><text x="43.3397%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (235 samples, 0.21%)</title><rect x="43.0897%" y="453" width="0.2109%" height="15" fill="rgb(243,124,40)" fg:x="48020" fg:w="235"/><text x="43.3397%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="43.2853%" y="437" width="0.0153%" height="15" fill="rgb(244,170,11)" fg:x="48238" fg:w="17"/><text x="43.5353%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="43.2853%" y="421" width="0.0153%" height="15" fill="rgb(207,114,54)" fg:x="48238" fg:w="17"/><text x="43.5353%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="43.2853%" y="405" width="0.0153%" height="15" fill="rgb(205,42,20)" fg:x="48238" fg:w="17"/><text x="43.5353%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="43.2853%" y="389" width="0.0153%" height="15" fill="rgb(230,30,28)" fg:x="48238" fg:w="17"/><text x="43.5353%" y="399.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="43.2853%" y="373" width="0.0153%" height="15" fill="rgb(205,73,54)" fg:x="48238" fg:w="17"/><text x="43.5353%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="43.2853%" y="357" width="0.0153%" height="15" fill="rgb(254,227,23)" fg:x="48238" fg:w="17"/><text x="43.5353%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (34 samples, 0.03%)</title><rect x="43.3212%" y="405" width="0.0305%" height="15" fill="rgb(228,202,34)" fg:x="48278" fg:w="34"/><text x="43.5712%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (34 samples, 0.03%)</title><rect x="43.3212%" y="389" width="0.0305%" height="15" fill="rgb(222,225,37)" fg:x="48278" fg:w="34"/><text x="43.5712%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (34 samples, 0.03%)</title><rect x="43.3212%" y="373" width="0.0305%" height="15" fill="rgb(221,14,54)" fg:x="48278" fg:w="34"/><text x="43.5712%" y="383.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="43.3409%" y="357" width="0.0108%" height="15" fill="rgb(254,102,2)" fg:x="48300" fg:w="12"/><text x="43.5909%" y="367.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="43.3409%" y="341" width="0.0108%" height="15" fill="rgb(232,104,17)" fg:x="48300" fg:w="12"/><text x="43.5909%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (48 samples, 0.04%)</title><rect x="43.3131%" y="437" width="0.0431%" height="15" fill="rgb(250,220,14)" fg:x="48269" fg:w="48"/><text x="43.5631%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (48 samples, 0.04%)</title><rect x="43.3131%" y="421" width="0.0431%" height="15" fill="rgb(241,158,9)" fg:x="48269" fg:w="48"/><text x="43.5631%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (62 samples, 0.06%)</title><rect x="43.3068%" y="485" width="0.0556%" height="15" fill="rgb(246,9,43)" fg:x="48262" fg:w="62"/><text x="43.5568%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (55 samples, 0.05%)</title><rect x="43.3131%" y="469" width="0.0494%" height="15" fill="rgb(206,73,33)" fg:x="48269" fg:w="55"/><text x="43.5631%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (55 samples, 0.05%)</title><rect x="43.3131%" y="453" width="0.0494%" height="15" fill="rgb(222,79,8)" fg:x="48269" fg:w="55"/><text x="43.5631%" y="463.50"></text></g><g><title>rust_dealloc (71 samples, 0.06%)</title><rect x="43.3006%" y="501" width="0.0637%" height="15" fill="rgb(234,8,54)" fg:x="48255" fg:w="71"/><text x="43.5506%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (332 samples, 0.30%)</title><rect x="43.0672%" y="533" width="0.2979%" height="15" fill="rgb(209,134,38)" fg:x="47995" fg:w="332"/><text x="43.3172%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (332 samples, 0.30%)</title><rect x="43.0672%" y="517" width="0.2979%" height="15" fill="rgb(230,127,29)" fg:x="47995" fg:w="332"/><text x="43.3172%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.02%)</title><rect x="43.3840%" y="341" width="0.0188%" height="15" fill="rgb(242,44,41)" fg:x="48348" fg:w="21"/><text x="43.6340%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.02%)</title><rect x="43.3840%" y="325" width="0.0188%" height="15" fill="rgb(222,56,43)" fg:x="48348" fg:w="21"/><text x="43.6340%" y="335.50"></text></g><g><title>__rg_dealloc (21 samples, 0.02%)</title><rect x="43.3840%" y="309" width="0.0188%" height="15" fill="rgb(238,39,47)" fg:x="48348" fg:w="21"/><text x="43.6340%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (21 samples, 0.02%)</title><rect x="43.3840%" y="293" width="0.0188%" height="15" fill="rgb(226,79,43)" fg:x="48348" fg:w="21"/><text x="43.6340%" y="303.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (29 samples, 0.03%)</title><rect x="43.3822%" y="437" width="0.0260%" height="15" fill="rgb(242,105,53)" fg:x="48346" fg:w="29"/><text x="43.6322%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (29 samples, 0.03%)</title><rect x="43.3822%" y="421" width="0.0260%" height="15" fill="rgb(251,132,46)" fg:x="48346" fg:w="29"/><text x="43.6322%" y="431.50"></text></g><g><title>core::mem::drop (27 samples, 0.02%)</title><rect x="43.3840%" y="405" width="0.0242%" height="15" fill="rgb(231,77,14)" fg:x="48348" fg:w="27"/><text x="43.6340%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (27 samples, 0.02%)</title><rect x="43.3840%" y="389" width="0.0242%" height="15" fill="rgb(240,135,9)" fg:x="48348" fg:w="27"/><text x="43.6340%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (27 samples, 0.02%)</title><rect x="43.3840%" y="373" width="0.0242%" height="15" fill="rgb(248,109,14)" fg:x="48348" fg:w="27"/><text x="43.6340%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="43.3840%" y="357" width="0.0242%" height="15" fill="rgb(227,146,52)" fg:x="48348" fg:w="27"/><text x="43.6340%" y="367.50"></text></g><g><title>rust_dealloc (16 samples, 0.01%)</title><rect x="43.4217%" y="405" width="0.0144%" height="15" fill="rgb(232,54,3)" fg:x="48390" fg:w="16"/><text x="43.6717%" y="415.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="43.4486%" y="341" width="0.0135%" height="15" fill="rgb(229,201,43)" fg:x="48420" fg:w="15"/><text x="43.6986%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (20 samples, 0.02%)</title><rect x="43.5357%" y="309" width="0.0179%" height="15" fill="rgb(252,161,33)" fg:x="48517" fg:w="20"/><text x="43.7857%" y="319.50"></text></g><g><title> (20 samples, 0.02%)</title><rect x="43.5357%" y="293" width="0.0179%" height="15" fill="rgb(226,146,40)" fg:x="48517" fg:w="20"/><text x="43.7857%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (128 samples, 0.11%)</title><rect x="43.4710%" y="341" width="0.1149%" height="15" fill="rgb(219,47,25)" fg:x="48445" fg:w="128"/><text x="43.7210%" y="351.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (106 samples, 0.10%)</title><rect x="43.4908%" y="325" width="0.0951%" height="15" fill="rgb(250,135,13)" fg:x="48467" fg:w="106"/><text x="43.7408%" y="335.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (26 samples, 0.02%)</title><rect x="43.5626%" y="309" width="0.0233%" height="15" fill="rgb(219,229,18)" fg:x="48547" fg:w="26"/><text x="43.8126%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (168 samples, 0.15%)</title><rect x="43.4405%" y="373" width="0.1508%" height="15" fill="rgb(217,152,27)" fg:x="48411" fg:w="168"/><text x="43.6905%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (168 samples, 0.15%)</title><rect x="43.4405%" y="357" width="0.1508%" height="15" fill="rgb(225,71,47)" fg:x="48411" fg:w="168"/><text x="43.6905%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (179 samples, 0.16%)</title><rect x="43.4405%" y="405" width="0.1606%" height="15" fill="rgb(220,139,14)" fg:x="48411" fg:w="179"/><text x="43.6905%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (179 samples, 0.16%)</title><rect x="43.4405%" y="389" width="0.1606%" height="15" fill="rgb(247,54,32)" fg:x="48411" fg:w="179"/><text x="43.6905%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (209 samples, 0.19%)</title><rect x="43.4208%" y="421" width="0.1875%" height="15" fill="rgb(252,131,39)" fg:x="48389" fg:w="209"/><text x="43.6708%" y="431.50"></text></g><g><title>rust_dealloc (234 samples, 0.21%)</title><rect x="43.4082%" y="437" width="0.2100%" height="15" fill="rgb(210,108,39)" fg:x="48375" fg:w="234"/><text x="43.6582%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (268 samples, 0.24%)</title><rect x="43.3813%" y="485" width="0.2405%" height="15" fill="rgb(205,23,29)" fg:x="48345" fg:w="268"/><text x="43.6313%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (268 samples, 0.24%)</title><rect x="43.3813%" y="469" width="0.2405%" height="15" fill="rgb(246,139,46)" fg:x="48345" fg:w="268"/><text x="43.6313%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (268 samples, 0.24%)</title><rect x="43.3813%" y="453" width="0.2405%" height="15" fill="rgb(250,81,26)" fg:x="48345" fg:w="268"/><text x="43.6313%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (14 samples, 0.01%)</title><rect x="44.2060%" y="309" width="0.0126%" height="15" fill="rgb(214,104,7)" fg:x="49264" fg:w="14"/><text x="44.4560%" y="319.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (14 samples, 0.01%)</title><rect x="44.2060%" y="293" width="0.0126%" height="15" fill="rgb(233,189,8)" fg:x="49264" fg:w="14"/><text x="44.4560%" y="303.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="44.2077%" y="277" width="0.0108%" height="15" fill="rgb(228,141,17)" fg:x="49266" fg:w="12"/><text x="44.4577%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="44.2077%" y="261" width="0.0108%" height="15" fill="rgb(247,157,1)" fg:x="49266" fg:w="12"/><text x="44.4577%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="44.2077%" y="245" width="0.0108%" height="15" fill="rgb(249,225,5)" fg:x="49266" fg:w="12"/><text x="44.4577%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="44.2077%" y="229" width="0.0108%" height="15" fill="rgb(242,55,13)" fg:x="49266" fg:w="12"/><text x="44.4577%" y="239.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="44.2203%" y="293" width="0.0126%" height="15" fill="rgb(230,49,50)" fg:x="49280" fg:w="14"/><text x="44.4703%" y="303.50"></text></g><g><title>rust_dealloc (16 samples, 0.01%)</title><rect x="44.2338%" y="277" width="0.0144%" height="15" fill="rgb(241,111,38)" fg:x="49295" fg:w="16"/><text x="44.4838%" y="287.50"></text></g><g><title>rust_dealloc (35 samples, 0.03%)</title><rect x="44.2508%" y="213" width="0.0314%" height="15" fill="rgb(252,155,4)" fg:x="49314" fg:w="35"/><text x="44.5008%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (23 samples, 0.02%)</title><rect x="44.3549%" y="181" width="0.0206%" height="15" fill="rgb(212,69,32)" fg:x="49430" fg:w="23"/><text x="44.6049%" y="191.50"></text></g><g><title> (23 samples, 0.02%)</title><rect x="44.3549%" y="165" width="0.0206%" height="15" fill="rgb(243,107,47)" fg:x="49430" fg:w="23"/><text x="44.6049%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (107 samples, 0.10%)</title><rect x="44.2894%" y="213" width="0.0960%" height="15" fill="rgb(247,130,12)" fg:x="49357" fg:w="107"/><text x="44.5394%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (93 samples, 0.08%)</title><rect x="44.3020%" y="197" width="0.0835%" height="15" fill="rgb(233,74,16)" fg:x="49371" fg:w="93"/><text x="44.5520%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (176 samples, 0.16%)</title><rect x="44.2499%" y="277" width="0.1579%" height="15" fill="rgb(208,58,18)" fg:x="49313" fg:w="176"/><text x="44.4999%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (176 samples, 0.16%)</title><rect x="44.2499%" y="261" width="0.1579%" height="15" fill="rgb(242,225,1)" fg:x="49313" fg:w="176"/><text x="44.4999%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (176 samples, 0.16%)</title><rect x="44.2499%" y="245" width="0.1579%" height="15" fill="rgb(249,39,40)" fg:x="49313" fg:w="176"/><text x="44.4999%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (176 samples, 0.16%)</title><rect x="44.2499%" y="229" width="0.1579%" height="15" fill="rgb(207,72,44)" fg:x="49313" fg:w="176"/><text x="44.4999%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (25 samples, 0.02%)</title><rect x="44.3854%" y="213" width="0.0224%" height="15" fill="rgb(215,193,12)" fg:x="49464" fg:w="25"/><text x="44.6354%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (202 samples, 0.18%)</title><rect x="44.2338%" y="293" width="0.1813%" height="15" fill="rgb(248,41,39)" fg:x="49295" fg:w="202"/><text x="44.4838%" y="303.50"></text></g><g><title>rust_dealloc (223 samples, 0.20%)</title><rect x="44.2185%" y="309" width="0.2001%" height="15" fill="rgb(253,85,4)" fg:x="49278" fg:w="223"/><text x="44.4685%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (856 samples, 0.77%)</title><rect x="43.6514%" y="389" width="0.7681%" height="15" fill="rgb(243,70,31)" fg:x="48646" fg:w="856"/><text x="43.9014%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (856 samples, 0.77%)</title><rect x="43.6514%" y="373" width="0.7681%" height="15" fill="rgb(253,195,26)" fg:x="48646" fg:w="856"/><text x="43.9014%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (842 samples, 0.76%)</title><rect x="43.6640%" y="357" width="0.7555%" height="15" fill="rgb(243,42,11)" fg:x="48660" fg:w="842"/><text x="43.9140%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (842 samples, 0.76%)</title><rect x="43.6640%" y="341" width="0.7555%" height="15" fill="rgb(239,66,17)" fg:x="48660" fg:w="842"/><text x="43.9140%" y="351.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (842 samples, 0.76%)</title><rect x="43.6640%" y="325" width="0.7555%" height="15" fill="rgb(217,132,21)" fg:x="48660" fg:w="842"/><text x="43.9140%" y="335.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (903 samples, 0.81%)</title><rect x="43.6254%" y="453" width="0.8103%" height="15" fill="rgb(252,202,21)" fg:x="48617" fg:w="903"/><text x="43.8754%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (897 samples, 0.80%)</title><rect x="43.6308%" y="437" width="0.8049%" height="15" fill="rgb(233,98,36)" fg:x="48623" fg:w="897"/><text x="43.8808%" y="447.50"></text></g><g><title>core::mem::drop (874 samples, 0.78%)</title><rect x="43.6514%" y="421" width="0.7843%" height="15" fill="rgb(216,153,54)" fg:x="48646" fg:w="874"/><text x="43.9014%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (874 samples, 0.78%)</title><rect x="43.6514%" y="405" width="0.7843%" height="15" fill="rgb(250,99,7)" fg:x="48646" fg:w="874"/><text x="43.9014%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (18 samples, 0.02%)</title><rect x="44.4195%" y="389" width="0.0162%" height="15" fill="rgb(207,56,50)" fg:x="49502" fg:w="18"/><text x="44.6695%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="44.4195%" y="373" width="0.0162%" height="15" fill="rgb(244,61,34)" fg:x="49502" fg:w="18"/><text x="44.6695%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="44.4195%" y="357" width="0.0162%" height="15" fill="rgb(241,50,38)" fg:x="49502" fg:w="18"/><text x="44.6695%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="44.4195%" y="341" width="0.0162%" height="15" fill="rgb(212,166,30)" fg:x="49502" fg:w="18"/><text x="44.6695%" y="351.50"></text></g><g><title>__rg_dealloc (18 samples, 0.02%)</title><rect x="44.4195%" y="325" width="0.0162%" height="15" fill="rgb(249,127,32)" fg:x="49502" fg:w="18"/><text x="44.6695%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.02%)</title><rect x="44.4195%" y="309" width="0.0162%" height="15" fill="rgb(209,103,0)" fg:x="49502" fg:w="18"/><text x="44.6695%" y="319.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="44.4841%" y="325" width="0.0162%" height="15" fill="rgb(238,209,51)" fg:x="49574" fg:w="18"/><text x="44.7341%" y="335.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="44.4841%" y="309" width="0.0162%" height="15" fill="rgb(237,56,23)" fg:x="49574" fg:w="18"/><text x="44.7341%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (56 samples, 0.05%)</title><rect x="44.4608%" y="357" width="0.0503%" height="15" fill="rgb(215,153,46)" fg:x="49548" fg:w="56"/><text x="44.7108%" y="367.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (46 samples, 0.04%)</title><rect x="44.4698%" y="341" width="0.0413%" height="15" fill="rgb(224,49,31)" fg:x="49558" fg:w="46"/><text x="44.7198%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (75 samples, 0.07%)</title><rect x="44.4536%" y="389" width="0.0673%" height="15" fill="rgb(250,18,42)" fg:x="49540" fg:w="75"/><text x="44.7036%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (75 samples, 0.07%)</title><rect x="44.4536%" y="373" width="0.0673%" height="15" fill="rgb(215,176,39)" fg:x="49540" fg:w="75"/><text x="44.7036%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (99 samples, 0.09%)</title><rect x="44.4420%" y="437" width="0.0888%" height="15" fill="rgb(223,77,29)" fg:x="49527" fg:w="99"/><text x="44.6920%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (86 samples, 0.08%)</title><rect x="44.4536%" y="421" width="0.0772%" height="15" fill="rgb(234,94,52)" fg:x="49540" fg:w="86"/><text x="44.7036%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (86 samples, 0.08%)</title><rect x="44.4536%" y="405" width="0.0772%" height="15" fill="rgb(220,154,50)" fg:x="49540" fg:w="86"/><text x="44.7036%" y="415.50"></text></g><g><title>rust_dealloc (107 samples, 0.10%)</title><rect x="44.4357%" y="453" width="0.0960%" height="15" fill="rgb(212,11,10)" fg:x="49520" fg:w="107"/><text x="44.6857%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,289 samples, 1.16%)</title><rect x="43.3759%" y="517" width="1.1567%" height="15" fill="rgb(205,166,19)" fg:x="48339" fg:w="1289"/><text x="43.6259%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,283 samples, 1.15%)</title><rect x="43.3813%" y="501" width="1.1513%" height="15" fill="rgb(244,198,16)" fg:x="48345" fg:w="1283"/><text x="43.6313%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (1,015 samples, 0.91%)</title><rect x="43.6218%" y="485" width="0.9108%" height="15" fill="rgb(219,69,12)" fg:x="48613" fg:w="1015"/><text x="43.8718%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (1,015 samples, 0.91%)</title><rect x="43.6218%" y="469" width="0.9108%" height="15" fill="rgb(245,30,7)" fg:x="48613" fg:w="1015"/><text x="43.8718%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (24 samples, 0.02%)</title><rect x="44.5326%" y="517" width="0.0215%" height="15" fill="rgb(218,221,48)" fg:x="49628" fg:w="24"/><text x="44.7826%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (24 samples, 0.02%)</title><rect x="44.5326%" y="501" width="0.0215%" height="15" fill="rgb(216,66,15)" fg:x="49628" fg:w="24"/><text x="44.7826%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (24 samples, 0.02%)</title><rect x="44.5326%" y="485" width="0.0215%" height="15" fill="rgb(226,122,50)" fg:x="49628" fg:w="24"/><text x="44.7826%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (23 samples, 0.02%)</title><rect x="44.5335%" y="469" width="0.0206%" height="15" fill="rgb(239,156,16)" fg:x="49629" fg:w="23"/><text x="44.7835%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (23 samples, 0.02%)</title><rect x="44.5335%" y="453" width="0.0206%" height="15" fill="rgb(224,27,38)" fg:x="49629" fg:w="23"/><text x="44.7835%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (14 samples, 0.01%)</title><rect x="44.5541%" y="517" width="0.0126%" height="15" fill="rgb(224,39,27)" fg:x="49652" fg:w="14"/><text x="44.8041%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (14 samples, 0.01%)</title><rect x="44.5541%" y="501" width="0.0126%" height="15" fill="rgb(215,92,29)" fg:x="49652" fg:w="14"/><text x="44.8041%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="44.5541%" y="485" width="0.0126%" height="15" fill="rgb(207,159,16)" fg:x="49652" fg:w="14"/><text x="44.8041%" y="495.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (14 samples, 0.01%)</title><rect x="44.5541%" y="469" width="0.0126%" height="15" fill="rgb(238,163,47)" fg:x="49652" fg:w="14"/><text x="44.8041%" y="479.50"></text></g><g><title>abi_stable::std_types::boxed::_::&lt;impl abi_stable::std_types::boxed::BoxVtable_Ref&lt;T&gt;&gt;::destructor (12 samples, 0.01%)</title><rect x="44.5559%" y="453" width="0.0108%" height="15" fill="rgb(219,91,49)" fg:x="49654" fg:w="12"/><text x="44.8059%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (194 samples, 0.17%)</title><rect x="44.5855%" y="485" width="0.1741%" height="15" fill="rgb(227,167,31)" fg:x="49687" fg:w="194"/><text x="44.8355%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (194 samples, 0.17%)</title><rect x="44.5855%" y="469" width="0.1741%" height="15" fill="rgb(234,80,54)" fg:x="49687" fg:w="194"/><text x="44.8355%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (194 samples, 0.17%)</title><rect x="44.5855%" y="453" width="0.1741%" height="15" fill="rgb(212,114,2)" fg:x="49687" fg:w="194"/><text x="44.8355%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value)&gt;&gt; (194 samples, 0.17%)</title><rect x="44.5855%" y="437" width="0.1741%" height="15" fill="rgb(234,50,24)" fg:x="49687" fg:w="194"/><text x="44.8355%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (194 samples, 0.17%)</title><rect x="44.5855%" y="421" width="0.1741%" height="15" fill="rgb(221,68,8)" fg:x="49687" fg:w="194"/><text x="44.8355%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (184 samples, 0.17%)</title><rect x="44.5945%" y="405" width="0.1651%" height="15" fill="rgb(254,180,31)" fg:x="49697" fg:w="184"/><text x="44.8445%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (224 samples, 0.20%)</title><rect x="44.5667%" y="501" width="0.2010%" height="15" fill="rgb(247,130,50)" fg:x="49666" fg:w="224"/><text x="44.8167%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (12 samples, 0.01%)</title><rect x="44.7901%" y="389" width="0.0108%" height="15" fill="rgb(211,109,4)" fg:x="49915" fg:w="12"/><text x="45.0401%" y="399.50"></text></g><g><title>abi_stable::std_types::arc::private::RArc&lt;T&gt;::data (387 samples, 0.35%)</title><rect x="44.8422%" y="341" width="0.3473%" height="15" fill="rgb(238,50,21)" fg:x="49973" fg:w="387"/><text x="45.0922%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="45.2110%" y="213" width="0.0170%" height="15" fill="rgb(225,57,45)" fg:x="50384" fg:w="19"/><text x="45.4610%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="45.2110%" y="197" width="0.0170%" height="15" fill="rgb(209,196,50)" fg:x="50384" fg:w="19"/><text x="45.4610%" y="207.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="45.2110%" y="181" width="0.0170%" height="15" fill="rgb(242,140,13)" fg:x="50384" fg:w="19"/><text x="45.4610%" y="191.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="45.2110%" y="165" width="0.0170%" height="15" fill="rgb(217,111,7)" fg:x="50384" fg:w="19"/><text x="45.4610%" y="175.50"></text></g><g><title>core::mem::drop (605 samples, 0.54%)</title><rect x="45.2110%" y="261" width="0.5429%" height="15" fill="rgb(253,193,51)" fg:x="50384" fg:w="605"/><text x="45.4610%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (605 samples, 0.54%)</title><rect x="45.2110%" y="245" width="0.5429%" height="15" fill="rgb(252,70,29)" fg:x="50384" fg:w="605"/><text x="45.4610%" y="255.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (605 samples, 0.54%)</title><rect x="45.2110%" y="229" width="0.5429%" height="15" fill="rgb(232,127,12)" fg:x="50384" fg:w="605"/><text x="45.4610%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (586 samples, 0.53%)</title><rect x="45.2280%" y="213" width="0.5258%" height="15" fill="rgb(211,180,21)" fg:x="50403" fg:w="586"/><text x="45.4780%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_sub (586 samples, 0.53%)</title><rect x="45.2280%" y="197" width="0.5258%" height="15" fill="rgb(229,72,13)" fg:x="50403" fg:w="586"/><text x="45.4780%" y="207.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="45.7969%" y="117" width="0.0126%" height="15" fill="rgb(240,211,49)" fg:x="51037" fg:w="14"/><text x="46.0469%" y="127.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (32 samples, 0.03%)</title><rect x="45.8606%" y="85" width="0.0287%" height="15" fill="rgb(219,149,40)" fg:x="51108" fg:w="32"/><text x="46.1106%" y="95.50"></text></g><g><title> (32 samples, 0.03%)</title><rect x="45.8606%" y="69" width="0.0287%" height="15" fill="rgb(210,127,46)" fg:x="51108" fg:w="32"/><text x="46.1106%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (101 samples, 0.09%)</title><rect x="45.8104%" y="117" width="0.0906%" height="15" fill="rgb(220,106,7)" fg:x="51052" fg:w="101"/><text x="46.0604%" y="127.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (95 samples, 0.09%)</title><rect x="45.8158%" y="101" width="0.0852%" height="15" fill="rgb(249,31,22)" fg:x="51058" fg:w="95"/><text x="46.0658%" y="111.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="45.8902%" y="85" width="0.0108%" height="15" fill="rgb(253,1,49)" fg:x="51141" fg:w="12"/><text x="46.1402%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (138 samples, 0.12%)</title><rect x="45.7969%" y="149" width="0.1238%" height="15" fill="rgb(227,144,33)" fg:x="51037" fg:w="138"/><text x="46.0469%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (138 samples, 0.12%)</title><rect x="45.7969%" y="133" width="0.1238%" height="15" fill="rgb(249,163,44)" fg:x="51037" fg:w="138"/><text x="46.0469%" y="143.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (22 samples, 0.02%)</title><rect x="45.9010%" y="117" width="0.0197%" height="15" fill="rgb(234,15,39)" fg:x="51153" fg:w="22"/><text x="46.1510%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (145 samples, 0.13%)</title><rect x="45.7969%" y="181" width="0.1301%" height="15" fill="rgb(207,66,16)" fg:x="51037" fg:w="145"/><text x="46.0469%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (145 samples, 0.13%)</title><rect x="45.7969%" y="165" width="0.1301%" height="15" fill="rgb(233,112,24)" fg:x="51037" fg:w="145"/><text x="46.0469%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (160 samples, 0.14%)</title><rect x="45.7942%" y="197" width="0.1436%" height="15" fill="rgb(230,90,22)" fg:x="51034" fg:w="160"/><text x="46.0442%" y="207.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="45.9270%" y="181" width="0.0108%" height="15" fill="rgb(229,61,13)" fg:x="51182" fg:w="12"/><text x="46.1770%" y="191.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="45.9270%" y="165" width="0.0108%" height="15" fill="rgb(225,57,24)" fg:x="51182" fg:w="12"/><text x="46.1770%" y="175.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="45.9270%" y="149" width="0.0108%" height="15" fill="rgb(208,169,48)" fg:x="51182" fg:w="12"/><text x="46.1770%" y="159.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="45.9270%" y="133" width="0.0108%" height="15" fill="rgb(244,218,51)" fg:x="51182" fg:w="12"/><text x="46.1770%" y="143.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (828 samples, 0.74%)</title><rect x="45.2038%" y="277" width="0.7430%" height="15" fill="rgb(214,148,10)" fg:x="50376" fg:w="828"/><text x="45.4538%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (215 samples, 0.19%)</title><rect x="45.7538%" y="261" width="0.1929%" height="15" fill="rgb(225,174,27)" fg:x="50989" fg:w="215"/><text x="46.0038%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (215 samples, 0.19%)</title><rect x="45.7538%" y="245" width="0.1929%" height="15" fill="rgb(230,96,26)" fg:x="50989" fg:w="215"/><text x="46.0038%" y="255.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (215 samples, 0.19%)</title><rect x="45.7538%" y="229" width="0.1929%" height="15" fill="rgb(232,10,30)" fg:x="50989" fg:w="215"/><text x="46.0038%" y="239.50"></text></g><g><title>rust_dealloc (181 samples, 0.16%)</title><rect x="45.7844%" y="213" width="0.1624%" height="15" fill="rgb(222,8,50)" fg:x="51023" fg:w="181"/><text x="46.0344%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (841 samples, 0.75%)</title><rect x="45.9468%" y="277" width="0.7547%" height="15" fill="rgb(213,81,27)" fg:x="51204" fg:w="841"/><text x="46.1968%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_sub (841 samples, 0.75%)</title><rect x="45.9468%" y="261" width="0.7547%" height="15" fill="rgb(245,50,10)" fg:x="51204" fg:w="841"/><text x="46.1968%" y="271.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="46.7041%" y="245" width="0.0117%" height="15" fill="rgb(216,100,18)" fg:x="52048" fg:w="13"/><text x="46.9541%" y="255.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (15 samples, 0.01%)</title><rect x="46.7624%" y="149" width="0.0135%" height="15" fill="rgb(236,147,54)" fg:x="52113" fg:w="15"/><text x="47.0124%" y="159.50"></text></g><g><title> (15 samples, 0.01%)</title><rect x="46.7624%" y="133" width="0.0135%" height="15" fill="rgb(205,143,26)" fg:x="52113" fg:w="15"/><text x="47.0124%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (51 samples, 0.05%)</title><rect x="46.7445%" y="181" width="0.0458%" height="15" fill="rgb(236,26,9)" fg:x="52093" fg:w="51"/><text x="46.9945%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (40 samples, 0.04%)</title><rect x="46.7544%" y="165" width="0.0359%" height="15" fill="rgb(221,165,53)" fg:x="52104" fg:w="40"/><text x="47.0044%" y="175.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (16 samples, 0.01%)</title><rect x="46.7759%" y="149" width="0.0144%" height="15" fill="rgb(214,110,17)" fg:x="52128" fg:w="16"/><text x="47.0259%" y="159.50"></text></g><g><title>rust_dealloc (102 samples, 0.09%)</title><rect x="46.7014%" y="277" width="0.0915%" height="15" fill="rgb(237,197,12)" fg:x="52045" fg:w="102"/><text x="46.9514%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (99 samples, 0.09%)</title><rect x="46.7041%" y="261" width="0.0888%" height="15" fill="rgb(205,84,17)" fg:x="52048" fg:w="99"/><text x="46.9541%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (75 samples, 0.07%)</title><rect x="46.7257%" y="245" width="0.0673%" height="15" fill="rgb(237,18,45)" fg:x="52072" fg:w="75"/><text x="46.9757%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (75 samples, 0.07%)</title><rect x="46.7257%" y="229" width="0.0673%" height="15" fill="rgb(221,87,14)" fg:x="52072" fg:w="75"/><text x="46.9757%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (75 samples, 0.07%)</title><rect x="46.7257%" y="213" width="0.0673%" height="15" fill="rgb(238,186,15)" fg:x="52072" fg:w="75"/><text x="46.9757%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (75 samples, 0.07%)</title><rect x="46.7257%" y="197" width="0.0673%" height="15" fill="rgb(208,115,11)" fg:x="52072" fg:w="75"/><text x="46.9757%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,246 samples, 2.02%)</title><rect x="44.7901%" y="405" width="2.0154%" height="15" fill="rgb(254,175,0)" fg:x="49915" fg:w="2246"/><text x="45.0401%" y="415.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (2,234 samples, 2.00%)</title><rect x="44.8009%" y="389" width="2.0046%" height="15" fill="rgb(227,24,42)" fg:x="49927" fg:w="2234"/><text x="45.0509%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (2,222 samples, 1.99%)</title><rect x="44.8117%" y="373" width="1.9939%" height="15" fill="rgb(223,211,37)" fg:x="49939" fg:w="2222"/><text x="45.0617%" y="383.50">c..</text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (2,222 samples, 1.99%)</title><rect x="44.8117%" y="357" width="1.9939%" height="15" fill="rgb(235,49,27)" fg:x="49939" fg:w="2222"/><text x="45.0617%" y="367.50">a..</text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (1,801 samples, 1.62%)</title><rect x="45.1894%" y="341" width="1.6161%" height="15" fill="rgb(254,97,51)" fg:x="50360" fg:w="1801"/><text x="45.4394%" y="351.50"></text></g><g><title>core::mem::drop (1,786 samples, 1.60%)</title><rect x="45.2029%" y="325" width="1.6026%" height="15" fill="rgb(249,51,40)" fg:x="50375" fg:w="1786"/><text x="45.4529%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,786 samples, 1.60%)</title><rect x="45.2029%" y="309" width="1.6026%" height="15" fill="rgb(210,128,45)" fg:x="50375" fg:w="1786"/><text x="45.4529%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,786 samples, 1.60%)</title><rect x="45.2029%" y="293" width="1.6026%" height="15" fill="rgb(224,137,50)" fg:x="50375" fg:w="1786"/><text x="45.4529%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (14 samples, 0.01%)</title><rect x="46.7930%" y="277" width="0.0126%" height="15" fill="rgb(242,15,9)" fg:x="52147" fg:w="14"/><text x="47.0430%" y="287.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (2,279 samples, 2.05%)</title><rect x="44.7677%" y="469" width="2.0450%" height="15" fill="rgb(233,187,41)" fg:x="49890" fg:w="2279"/><text x="45.0177%" y="479.50">a..</text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (2,270 samples, 2.04%)</title><rect x="44.7758%" y="453" width="2.0369%" height="15" fill="rgb(227,2,29)" fg:x="49899" fg:w="2270"/><text x="45.0258%" y="463.50">a..</text></g><g><title>core::mem::drop (2,254 samples, 2.02%)</title><rect x="44.7901%" y="437" width="2.0226%" height="15" fill="rgb(222,70,3)" fg:x="49915" fg:w="2254"/><text x="45.0401%" y="447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,254 samples, 2.02%)</title><rect x="44.7901%" y="421" width="2.0226%" height="15" fill="rgb(213,11,42)" fg:x="49915" fg:w="2254"/><text x="45.0401%" y="431.50">c..</text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="46.8127%" y="453" width="0.0108%" height="15" fill="rgb(225,150,9)" fg:x="52169" fg:w="12"/><text x="47.0627%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (46 samples, 0.04%)</title><rect x="46.8369%" y="373" width="0.0413%" height="15" fill="rgb(230,162,45)" fg:x="52196" fg:w="46"/><text x="47.0869%" y="383.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (34 samples, 0.03%)</title><rect x="46.8477%" y="357" width="0.0305%" height="15" fill="rgb(222,14,52)" fg:x="52208" fg:w="34"/><text x="47.0977%" y="367.50"></text></g><g><title>snmalloc::Remote::set_info (18 samples, 0.02%)</title><rect x="46.8620%" y="341" width="0.0162%" height="15" fill="rgb(254,198,14)" fg:x="52224" fg:w="18"/><text x="47.1120%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (57 samples, 0.05%)</title><rect x="46.8306%" y="437" width="0.0511%" height="15" fill="rgb(220,217,30)" fg:x="52189" fg:w="57"/><text x="47.0806%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (57 samples, 0.05%)</title><rect x="46.8306%" y="421" width="0.0511%" height="15" fill="rgb(215,146,41)" fg:x="52189" fg:w="57"/><text x="47.0806%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (57 samples, 0.05%)</title><rect x="46.8306%" y="405" width="0.0511%" height="15" fill="rgb(217,27,36)" fg:x="52189" fg:w="57"/><text x="47.0806%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (57 samples, 0.05%)</title><rect x="46.8306%" y="389" width="0.0511%" height="15" fill="rgb(219,218,39)" fg:x="52189" fg:w="57"/><text x="47.0806%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (77 samples, 0.07%)</title><rect x="46.8235%" y="453" width="0.0691%" height="15" fill="rgb(219,4,42)" fg:x="52181" fg:w="77"/><text x="47.0735%" y="463.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="46.8818%" y="437" width="0.0108%" height="15" fill="rgb(249,119,36)" fg:x="52246" fg:w="12"/><text x="47.1318%" y="447.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="46.8818%" y="421" width="0.0108%" height="15" fill="rgb(209,23,33)" fg:x="52246" fg:w="12"/><text x="47.1318%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="46.8818%" y="405" width="0.0108%" height="15" fill="rgb(211,10,0)" fg:x="52246" fg:w="12"/><text x="47.1318%" y="415.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="46.8818%" y="389" width="0.0108%" height="15" fill="rgb(208,99,37)" fg:x="52246" fg:w="12"/><text x="47.1318%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,375 samples, 2.13%)</title><rect x="44.7677%" y="501" width="2.1312%" height="15" fill="rgb(213,132,31)" fg:x="49890" fg:w="2375"/><text x="45.0177%" y="511.50">c..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (2,375 samples, 2.13%)</title><rect x="44.7677%" y="485" width="2.1312%" height="15" fill="rgb(243,129,40)" fg:x="49890" fg:w="2375"/><text x="45.0177%" y="495.50">a..</text></g><g><title>rust_dealloc (96 samples, 0.09%)</title><rect x="46.8127%" y="469" width="0.0861%" height="15" fill="rgb(210,66,33)" fg:x="52169" fg:w="96"/><text x="47.0627%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (48 samples, 0.04%)</title><rect x="46.8988%" y="485" width="0.0431%" height="15" fill="rgb(209,189,4)" fg:x="52265" fg:w="48"/><text x="47.1488%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::slices::private::RSlice&lt;u8&gt;,abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="46.9446%" y="469" width="0.0170%" height="15" fill="rgb(214,107,37)" fg:x="52316" fg:w="19"/><text x="47.1946%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (98 samples, 0.09%)</title><rect x="46.8988%" y="501" width="0.0879%" height="15" fill="rgb(245,88,54)" fg:x="52265" fg:w="98"/><text x="47.1488%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (50 samples, 0.04%)</title><rect x="46.9419%" y="485" width="0.0449%" height="15" fill="rgb(205,146,20)" fg:x="52313" fg:w="50"/><text x="47.1919%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (28 samples, 0.03%)</title><rect x="46.9616%" y="469" width="0.0251%" height="15" fill="rgb(220,161,25)" fg:x="52335" fg:w="28"/><text x="47.2116%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (28 samples, 0.03%)</title><rect x="46.9616%" y="453" width="0.0251%" height="15" fill="rgb(215,152,15)" fg:x="52335" fg:w="28"/><text x="47.2116%" y="463.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (28 samples, 0.03%)</title><rect x="46.9616%" y="437" width="0.0251%" height="15" fill="rgb(233,192,44)" fg:x="52335" fg:w="28"/><text x="47.2116%" y="447.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (13 samples, 0.01%)</title><rect x="47.0352%" y="373" width="0.0117%" height="15" fill="rgb(240,170,46)" fg:x="52417" fg:w="13"/><text x="47.2852%" y="383.50"></text></g><g><title> (13 samples, 0.01%)</title><rect x="47.0352%" y="357" width="0.0117%" height="15" fill="rgb(207,104,33)" fg:x="52417" fg:w="13"/><text x="47.2852%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (50 samples, 0.04%)</title><rect x="47.0119%" y="405" width="0.0449%" height="15" fill="rgb(219,21,39)" fg:x="52391" fg:w="50"/><text x="47.2619%" y="415.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (39 samples, 0.03%)</title><rect x="47.0218%" y="389" width="0.0350%" height="15" fill="rgb(214,133,29)" fg:x="52402" fg:w="39"/><text x="47.2718%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (67 samples, 0.06%)</title><rect x="47.0002%" y="437" width="0.0601%" height="15" fill="rgb(226,93,6)" fg:x="52378" fg:w="67"/><text x="47.2502%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (67 samples, 0.06%)</title><rect x="47.0002%" y="421" width="0.0601%" height="15" fill="rgb(252,222,34)" fg:x="52378" fg:w="67"/><text x="47.2502%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (79 samples, 0.07%)</title><rect x="47.0002%" y="469" width="0.0709%" height="15" fill="rgb(252,92,48)" fg:x="52378" fg:w="79"/><text x="47.2502%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (79 samples, 0.07%)</title><rect x="47.0002%" y="453" width="0.0709%" height="15" fill="rgb(245,223,24)" fg:x="52378" fg:w="79"/><text x="47.2502%" y="463.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="47.0604%" y="437" width="0.0108%" height="15" fill="rgb(205,176,3)" fg:x="52445" fg:w="12"/><text x="47.3104%" y="447.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="47.0604%" y="421" width="0.0108%" height="15" fill="rgb(235,151,15)" fg:x="52445" fg:w="12"/><text x="47.3104%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="47.0604%" y="405" width="0.0108%" height="15" fill="rgb(237,209,11)" fg:x="52445" fg:w="12"/><text x="47.3104%" y="415.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="47.0604%" y="389" width="0.0108%" height="15" fill="rgb(243,227,24)" fg:x="52445" fg:w="12"/><text x="47.3104%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (91 samples, 0.08%)</title><rect x="46.9948%" y="485" width="0.0817%" height="15" fill="rgb(239,193,16)" fg:x="52372" fg:w="91"/><text x="47.2448%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (4,138 samples, 3.71%)</title><rect x="43.3652%" y="533" width="3.7131%" height="15" fill="rgb(231,27,9)" fg:x="48327" fg:w="4138"/><text x="43.6152%" y="543.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (2,799 samples, 2.51%)</title><rect x="44.5667%" y="517" width="2.5116%" height="15" fill="rgb(219,169,10)" fg:x="49666" fg:w="2799"/><text x="44.8167%" y="527.50">co..</text></g><g><title>rust_dealloc (102 samples, 0.09%)</title><rect x="46.9868%" y="501" width="0.0915%" height="15" fill="rgb(244,229,43)" fg:x="52363" fg:w="102"/><text x="47.2368%" y="511.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (15 samples, 0.01%)</title><rect x="47.2443%" y="453" width="0.0135%" height="15" fill="rgb(254,38,20)" fg:x="52650" fg:w="15"/><text x="47.4943%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (14 samples, 0.01%)</title><rect x="47.2452%" y="437" width="0.0126%" height="15" fill="rgb(250,47,30)" fg:x="52651" fg:w="14"/><text x="47.4952%" y="447.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (52 samples, 0.05%)</title><rect x="47.2228%" y="485" width="0.0467%" height="15" fill="rgb(224,124,36)" fg:x="52626" fg:w="52"/><text x="47.4728%" y="495.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (49 samples, 0.04%)</title><rect x="47.2255%" y="469" width="0.0440%" height="15" fill="rgb(246,68,51)" fg:x="52629" fg:w="49"/><text x="47.4755%" y="479.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::sub_bucket_for (13 samples, 0.01%)</title><rect x="47.2578%" y="453" width="0.0117%" height="15" fill="rgb(253,43,49)" fg:x="52665" fg:w="13"/><text x="47.5078%" y="463.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (208 samples, 0.19%)</title><rect x="47.0945%" y="533" width="0.1866%" height="15" fill="rgb(219,54,36)" fg:x="52483" fg:w="208"/><text x="47.3445%" y="543.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (204 samples, 0.18%)</title><rect x="47.0980%" y="517" width="0.1831%" height="15" fill="rgb(227,133,34)" fg:x="52487" fg:w="204"/><text x="47.3480%" y="527.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (204 samples, 0.18%)</title><rect x="47.0980%" y="501" width="0.1831%" height="15" fill="rgb(247,227,15)" fg:x="52487" fg:w="204"/><text x="47.3480%" y="511.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::update_min_max (13 samples, 0.01%)</title><rect x="47.2694%" y="485" width="0.0117%" height="15" fill="rgb(229,96,14)" fg:x="52678" fg:w="13"/><text x="47.5194%" y="495.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (17 samples, 0.02%)</title><rect x="47.3412%" y="405" width="0.0153%" height="15" fill="rgb(220,79,17)" fg:x="52758" fg:w="17"/><text x="47.5912%" y="415.50"></text></g><g><title> (17 samples, 0.02%)</title><rect x="47.3412%" y="389" width="0.0153%" height="15" fill="rgb(205,131,53)" fg:x="52758" fg:w="17"/><text x="47.5912%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (70 samples, 0.06%)</title><rect x="47.3062%" y="437" width="0.0628%" height="15" fill="rgb(209,50,29)" fg:x="52719" fg:w="70"/><text x="47.5562%" y="447.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (60 samples, 0.05%)</title><rect x="47.3152%" y="421" width="0.0538%" height="15" fill="rgb(245,86,46)" fg:x="52729" fg:w="60"/><text x="47.5652%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (101 samples, 0.09%)</title><rect x="47.2990%" y="469" width="0.0906%" height="15" fill="rgb(235,66,46)" fg:x="52711" fg:w="101"/><text x="47.5490%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (101 samples, 0.09%)</title><rect x="47.2990%" y="453" width="0.0906%" height="15" fill="rgb(232,148,31)" fg:x="52711" fg:w="101"/><text x="47.5490%" y="463.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (23 samples, 0.02%)</title><rect x="47.3690%" y="437" width="0.0206%" height="15" fill="rgb(217,149,8)" fg:x="52789" fg:w="23"/><text x="47.6190%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (110 samples, 0.10%)</title><rect x="47.2990%" y="501" width="0.0987%" height="15" fill="rgb(209,183,11)" fg:x="52711" fg:w="110"/><text x="47.5490%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (110 samples, 0.10%)</title><rect x="47.2990%" y="485" width="0.0987%" height="15" fill="rgb(208,55,20)" fg:x="52711" fg:w="110"/><text x="47.5490%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (120 samples, 0.11%)</title><rect x="47.2919%" y="517" width="0.1077%" height="15" fill="rgb(218,39,14)" fg:x="52703" fg:w="120"/><text x="47.5419%" y="527.50"></text></g><g><title>rust_dealloc (133 samples, 0.12%)</title><rect x="47.2811%" y="533" width="0.1193%" height="15" fill="rgb(216,169,33)" fg:x="52691" fg:w="133"/><text x="47.5311%" y="543.50"></text></g><g><title>core::time::Duration::as_nanos (17 samples, 0.02%)</title><rect x="47.4256%" y="517" width="0.0153%" height="15" fill="rgb(233,80,24)" fg:x="52852" fg:w="17"/><text x="47.6756%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (64 samples, 0.06%)</title><rect x="47.5099%" y="469" width="0.0574%" height="15" fill="rgb(213,179,31)" fg:x="52946" fg:w="64"/><text x="47.7599%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::ge (64 samples, 0.06%)</title><rect x="47.5099%" y="453" width="0.0574%" height="15" fill="rgb(209,19,5)" fg:x="52946" fg:w="64"/><text x="47.7599%" y="463.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (62 samples, 0.06%)</title><rect x="47.5117%" y="437" width="0.0556%" height="15" fill="rgb(219,18,35)" fg:x="52948" fg:w="62"/><text x="47.7617%" y="447.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (62 samples, 0.06%)</title><rect x="47.5117%" y="421" width="0.0556%" height="15" fill="rgb(209,169,16)" fg:x="52948" fg:w="62"/><text x="47.7617%" y="431.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (62 samples, 0.06%)</title><rect x="47.5117%" y="405" width="0.0556%" height="15" fill="rgb(245,90,51)" fg:x="52948" fg:w="62"/><text x="47.7617%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (33 samples, 0.03%)</title><rect x="47.5377%" y="389" width="0.0296%" height="15" fill="rgb(220,99,45)" fg:x="52977" fg:w="33"/><text x="47.7877%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (164 samples, 0.15%)</title><rect x="47.4408%" y="501" width="0.1472%" height="15" fill="rgb(249,89,25)" fg:x="52869" fg:w="164"/><text x="47.6908%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (164 samples, 0.15%)</title><rect x="47.4408%" y="485" width="0.1472%" height="15" fill="rgb(239,193,0)" fg:x="52869" fg:w="164"/><text x="47.6908%" y="495.50"></text></g><g><title>core::time::Duration::new (23 samples, 0.02%)</title><rect x="47.5673%" y="469" width="0.0206%" height="15" fill="rgb(231,126,1)" fg:x="53010" fg:w="23"/><text x="47.8173%" y="479.50"></text></g><g><title>std::time::SystemTime::duration_since (181 samples, 0.16%)</title><rect x="47.4408%" y="517" width="0.1624%" height="15" fill="rgb(243,166,3)" fg:x="52869" fg:w="181"/><text x="47.6908%" y="527.50"></text></g><g><title>tremor_common::time::nanotime (17 samples, 0.02%)</title><rect x="47.5880%" y="501" width="0.0153%" height="15" fill="rgb(223,22,34)" fg:x="53033" fg:w="17"/><text x="47.8380%" y="511.50"></text></g><g><title>tremor_common::time::nanotime (890 samples, 0.80%)</title><rect x="47.4004%" y="533" width="0.7986%" height="15" fill="rgb(251,52,51)" fg:x="52824" fg:w="890"/><text x="47.6504%" y="543.50"></text></g><g><title>std::time::SystemTime::now (664 samples, 0.60%)</title><rect x="47.6032%" y="517" width="0.5958%" height="15" fill="rgb(221,165,28)" fg:x="53050" fg:w="664"/><text x="47.8532%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (664 samples, 0.60%)</title><rect x="47.6032%" y="501" width="0.5958%" height="15" fill="rgb(218,121,47)" fg:x="53050" fg:w="664"/><text x="47.8532%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::now (664 samples, 0.60%)</title><rect x="47.6032%" y="485" width="0.5958%" height="15" fill="rgb(209,120,9)" fg:x="53050" fg:w="664"/><text x="47.8532%" y="495.50"></text></g><g><title>__clock_gettime_2 (546 samples, 0.49%)</title><rect x="47.7091%" y="469" width="0.4899%" height="15" fill="rgb(236,68,12)" fg:x="53168" fg:w="546"/><text x="47.9591%" y="479.50"></text></g><g><title>__vdso_clock_gettime (532 samples, 0.48%)</title><rect x="47.7217%" y="453" width="0.4774%" height="15" fill="rgb(225,194,26)" fg:x="53182" fg:w="532"/><text x="47.9717%" y="463.50"></text></g><g><title>[[vdso]] (340 samples, 0.31%)</title><rect x="47.8940%" y="437" width="0.3051%" height="15" fill="rgb(231,84,39)" fg:x="53374" fg:w="340"/><text x="48.1440%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (206 samples, 0.18%)</title><rect x="48.2098%" y="517" width="0.1848%" height="15" fill="rgb(210,11,45)" fg:x="53726" fg:w="206"/><text x="48.4598%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (14 samples, 0.01%)</title><rect x="48.3821%" y="501" width="0.0126%" height="15" fill="rgb(224,54,52)" fg:x="53918" fg:w="14"/><text x="48.6321%" y="511.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (6,541 samples, 5.87%)</title><rect x="42.5603%" y="789" width="5.8694%" height="15" fill="rgb(238,102,14)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="799.50">tremor_..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,541 samples, 5.87%)</title><rect x="42.5603%" y="773" width="5.8694%" height="15" fill="rgb(243,160,52)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="783.50">&lt;async_..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,541 samples, 5.87%)</title><rect x="42.5603%" y="757" width="5.8694%" height="15" fill="rgb(216,114,19)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="767.50">&lt;async_..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (6,541 samples, 5.87%)</title><rect x="42.5603%" y="741" width="5.8694%" height="15" fill="rgb(244,166,37)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="751.50">&lt;core::..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,541 samples, 5.87%)</title><rect x="42.5603%" y="725" width="5.8694%" height="15" fill="rgb(246,29,44)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="735.50">&lt;async_..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (6,541 samples, 5.87%)</title><rect x="42.5603%" y="709" width="5.8694%" height="15" fill="rgb(215,56,53)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="719.50">async_f..</text></g><g><title>std::panic::catch_unwind (6,541 samples, 5.87%)</title><rect x="42.5603%" y="693" width="5.8694%" height="15" fill="rgb(217,60,2)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="703.50">std::pa..</text></g><g><title>std::panicking::try (6,541 samples, 5.87%)</title><rect x="42.5603%" y="677" width="5.8694%" height="15" fill="rgb(207,26,24)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="687.50">std::pa..</text></g><g><title>std::panicking::try::do_call (6,541 samples, 5.87%)</title><rect x="42.5603%" y="661" width="5.8694%" height="15" fill="rgb(252,210,15)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="671.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,541 samples, 5.87%)</title><rect x="42.5603%" y="645" width="5.8694%" height="15" fill="rgb(253,209,26)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="655.50">&lt;core::..</text></g><g><title>core::ops::function::FnOnce::call_once (6,541 samples, 5.87%)</title><rect x="42.5603%" y="629" width="5.8694%" height="15" fill="rgb(238,170,14)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="639.50">core::o..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (6,541 samples, 5.87%)</title><rect x="42.5603%" y="613" width="5.8694%" height="15" fill="rgb(216,178,15)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="623.50">async_f..</text></g><g><title>async_ffi::FfiContext::with_context (6,541 samples, 5.87%)</title><rect x="42.5603%" y="597" width="5.8694%" height="15" fill="rgb(250,197,2)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="607.50">async_f..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (6,541 samples, 5.87%)</title><rect x="42.5603%" y="581" width="5.8694%" height="15" fill="rgb(212,70,42)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="591.50">async_f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,541 samples, 5.87%)</title><rect x="42.5603%" y="565" width="5.8694%" height="15" fill="rgb(227,213,9)" fg:x="47430" fg:w="6541"/><text x="42.8103%" y="575.50">&lt;core::..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (6,483 samples, 5.82%)</title><rect x="42.6123%" y="549" width="5.8174%" height="15" fill="rgb(245,99,25)" fg:x="47488" fg:w="6483"/><text x="42.8623%" y="559.50">&lt;tremor..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (257 samples, 0.23%)</title><rect x="48.1991%" y="533" width="0.2306%" height="15" fill="rgb(250,82,29)" fg:x="53714" fg:w="257"/><text x="48.4491%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::_::&lt;impl tremor_runtime::connectors::sink::EventSerializerOpaque_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::serialize (39 samples, 0.03%)</title><rect x="48.3947%" y="517" width="0.0350%" height="15" fill="rgb(241,226,54)" fg:x="53932" fg:w="39"/><text x="48.6447%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (33 samples, 0.03%)</title><rect x="48.6235%" y="757" width="0.0296%" height="15" fill="rgb(221,99,41)" fg:x="54187" fg:w="33"/><text x="48.8735%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (33 samples, 0.03%)</title><rect x="48.6235%" y="741" width="0.0296%" height="15" fill="rgb(213,90,21)" fg:x="54187" fg:w="33"/><text x="48.8735%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (33 samples, 0.03%)</title><rect x="48.6235%" y="725" width="0.0296%" height="15" fill="rgb(205,208,24)" fg:x="54187" fg:w="33"/><text x="48.8735%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (14 samples, 0.01%)</title><rect x="48.6405%" y="709" width="0.0126%" height="15" fill="rgb(246,31,12)" fg:x="54206" fg:w="14"/><text x="48.8905%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (14 samples, 0.01%)</title><rect x="48.6405%" y="693" width="0.0126%" height="15" fill="rgb(213,154,6)" fg:x="54206" fg:w="14"/><text x="48.8905%" y="703.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="48.6405%" y="677" width="0.0126%" height="15" fill="rgb(222,163,29)" fg:x="54206" fg:w="14"/><text x="48.8905%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (14 samples, 0.01%)</title><rect x="48.6405%" y="661" width="0.0126%" height="15" fill="rgb(227,201,8)" fg:x="54206" fg:w="14"/><text x="48.8905%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (14 samples, 0.01%)</title><rect x="48.6405%" y="645" width="0.0126%" height="15" fill="rgb(233,9,32)" fg:x="54206" fg:w="14"/><text x="48.8905%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="48.6405%" y="629" width="0.0126%" height="15" fill="rgb(217,54,24)" fg:x="54206" fg:w="14"/><text x="48.8905%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="48.6405%" y="613" width="0.0126%" height="15" fill="rgb(235,192,0)" fg:x="54206" fg:w="14"/><text x="48.8905%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (19 samples, 0.02%)</title><rect x="48.6773%" y="677" width="0.0170%" height="15" fill="rgb(235,45,9)" fg:x="54247" fg:w="19"/><text x="48.9273%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (19 samples, 0.02%)</title><rect x="48.6773%" y="661" width="0.0170%" height="15" fill="rgb(246,42,40)" fg:x="54247" fg:w="19"/><text x="48.9273%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (19 samples, 0.02%)</title><rect x="48.6773%" y="645" width="0.0170%" height="15" fill="rgb(248,111,24)" fg:x="54247" fg:w="19"/><text x="48.9273%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (19 samples, 0.02%)</title><rect x="48.6773%" y="629" width="0.0170%" height="15" fill="rgb(249,65,22)" fg:x="54247" fg:w="19"/><text x="48.9273%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="48.6773%" y="613" width="0.0170%" height="15" fill="rgb(238,111,51)" fg:x="54247" fg:w="19"/><text x="48.9273%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (19 samples, 0.02%)</title><rect x="48.6773%" y="597" width="0.0170%" height="15" fill="rgb(250,118,22)" fg:x="54247" fg:w="19"/><text x="48.9273%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (48 samples, 0.04%)</title><rect x="48.6630%" y="693" width="0.0431%" height="15" fill="rgb(234,84,26)" fg:x="54231" fg:w="48"/><text x="48.9130%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="48.6944%" y="677" width="0.0117%" height="15" fill="rgb(243,172,12)" fg:x="54266" fg:w="13"/><text x="48.9444%" y="687.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="48.6944%" y="661" width="0.0117%" height="15" fill="rgb(236,150,49)" fg:x="54266" fg:w="13"/><text x="48.9444%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="48.6944%" y="645" width="0.0117%" height="15" fill="rgb(225,197,26)" fg:x="54266" fg:w="13"/><text x="48.9444%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="48.6944%" y="629" width="0.0117%" height="15" fill="rgb(214,17,42)" fg:x="54266" fg:w="13"/><text x="48.9444%" y="639.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="48.6944%" y="613" width="0.0117%" height="15" fill="rgb(224,165,40)" fg:x="54266" fg:w="13"/><text x="48.9444%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="48.6944%" y="597" width="0.0117%" height="15" fill="rgb(246,100,4)" fg:x="54266" fg:w="13"/><text x="48.9444%" y="607.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (42 samples, 0.04%)</title><rect x="48.7653%" y="549" width="0.0377%" height="15" fill="rgb(222,103,0)" fg:x="54345" fg:w="42"/><text x="49.0153%" y="559.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (40 samples, 0.04%)</title><rect x="48.7671%" y="533" width="0.0359%" height="15" fill="rgb(227,189,26)" fg:x="54347" fg:w="40"/><text x="49.0171%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (79 samples, 0.07%)</title><rect x="48.7437%" y="597" width="0.0709%" height="15" fill="rgb(214,202,17)" fg:x="54321" fg:w="79"/><text x="48.9937%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (79 samples, 0.07%)</title><rect x="48.7437%" y="581" width="0.0709%" height="15" fill="rgb(229,111,3)" fg:x="54321" fg:w="79"/><text x="48.9937%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (78 samples, 0.07%)</title><rect x="48.7446%" y="565" width="0.0700%" height="15" fill="rgb(229,172,15)" fg:x="54322" fg:w="78"/><text x="48.9946%" y="575.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="48.8030%" y="549" width="0.0117%" height="15" fill="rgb(230,224,35)" fg:x="54387" fg:w="13"/><text x="49.0530%" y="559.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="48.8030%" y="533" width="0.0117%" height="15" fill="rgb(251,141,6)" fg:x="54387" fg:w="13"/><text x="49.0530%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (106 samples, 0.10%)</title><rect x="48.7285%" y="629" width="0.0951%" height="15" fill="rgb(225,208,6)" fg:x="54304" fg:w="106"/><text x="48.9785%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (106 samples, 0.10%)</title><rect x="48.7285%" y="613" width="0.0951%" height="15" fill="rgb(246,181,16)" fg:x="54304" fg:w="106"/><text x="48.9785%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (115 samples, 0.10%)</title><rect x="48.7285%" y="661" width="0.1032%" height="15" fill="rgb(227,129,36)" fg:x="54304" fg:w="115"/><text x="48.9785%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (115 samples, 0.10%)</title><rect x="48.7285%" y="645" width="0.1032%" height="15" fill="rgb(248,117,24)" fg:x="54304" fg:w="115"/><text x="48.9785%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (133 samples, 0.12%)</title><rect x="48.7168%" y="677" width="0.1193%" height="15" fill="rgb(214,185,35)" fg:x="54291" fg:w="133"/><text x="48.9668%" y="687.50"></text></g><g><title>rust_dealloc (153 samples, 0.14%)</title><rect x="48.7061%" y="693" width="0.1373%" height="15" fill="rgb(236,150,34)" fg:x="54279" fg:w="153"/><text x="48.9561%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (7,016 samples, 6.30%)</title><rect x="42.5486%" y="821" width="6.2957%" height="15" fill="rgb(243,228,27)" fg:x="47417" fg:w="7016"/><text x="42.7986%" y="831.50">tremor_r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,016 samples, 6.30%)</title><rect x="42.5486%" y="805" width="6.2957%" height="15" fill="rgb(245,77,44)" fg:x="47417" fg:w="7016"/><text x="42.7986%" y="815.50">&lt;core::f..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (462 samples, 0.41%)</title><rect x="48.4297%" y="789" width="0.4146%" height="15" fill="rgb(235,214,42)" fg:x="53971" fg:w="462"/><text x="48.6797%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (246 samples, 0.22%)</title><rect x="48.6235%" y="773" width="0.2207%" height="15" fill="rgb(221,74,3)" fg:x="54187" fg:w="246"/><text x="48.8735%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (213 samples, 0.19%)</title><rect x="48.6531%" y="757" width="0.1911%" height="15" fill="rgb(206,121,29)" fg:x="54220" fg:w="213"/><text x="48.9031%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (213 samples, 0.19%)</title><rect x="48.6531%" y="741" width="0.1911%" height="15" fill="rgb(249,131,53)" fg:x="54220" fg:w="213"/><text x="48.9031%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (213 samples, 0.19%)</title><rect x="48.6531%" y="725" width="0.1911%" height="15" fill="rgb(236,170,29)" fg:x="54220" fg:w="213"/><text x="48.9031%" y="735.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (213 samples, 0.19%)</title><rect x="48.6531%" y="709" width="0.1911%" height="15" fill="rgb(247,96,15)" fg:x="54220" fg:w="213"/><text x="48.9031%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (55 samples, 0.05%)</title><rect x="50.4514%" y="213" width="0.0494%" height="15" fill="rgb(211,210,7)" fg:x="56224" fg:w="55"/><text x="50.7014%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (55 samples, 0.05%)</title><rect x="50.4514%" y="197" width="0.0494%" height="15" fill="rgb(240,88,50)" fg:x="56224" fg:w="55"/><text x="50.7014%" y="207.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (50 samples, 0.04%)</title><rect x="50.4558%" y="181" width="0.0449%" height="15" fill="rgb(209,229,26)" fg:x="56229" fg:w="50"/><text x="50.7058%" y="191.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (41 samples, 0.04%)</title><rect x="50.4639%" y="165" width="0.0368%" height="15" fill="rgb(210,68,23)" fg:x="56238" fg:w="41"/><text x="50.7139%" y="175.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (41 samples, 0.04%)</title><rect x="50.4639%" y="149" width="0.0368%" height="15" fill="rgb(229,180,13)" fg:x="56238" fg:w="41"/><text x="50.7139%" y="159.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (41 samples, 0.04%)</title><rect x="50.4639%" y="133" width="0.0368%" height="15" fill="rgb(236,53,44)" fg:x="56238" fg:w="41"/><text x="50.7139%" y="143.50"></text></g><g><title>snmalloc::FreeListIter::empty (68 samples, 0.06%)</title><rect x="50.5079%" y="213" width="0.0610%" height="15" fill="rgb(244,214,29)" fg:x="56287" fg:w="68"/><text x="50.7579%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (68 samples, 0.06%)</title><rect x="50.5079%" y="197" width="0.0610%" height="15" fill="rgb(220,75,29)" fg:x="56287" fg:w="68"/><text x="50.7579%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (776 samples, 0.70%)</title><rect x="50.4271%" y="261" width="0.6963%" height="15" fill="rgb(214,183,37)" fg:x="56197" fg:w="776"/><text x="50.6771%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (763 samples, 0.68%)</title><rect x="50.4388%" y="245" width="0.6847%" height="15" fill="rgb(239,117,29)" fg:x="56210" fg:w="763"/><text x="50.6888%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (753 samples, 0.68%)</title><rect x="50.4478%" y="229" width="0.6757%" height="15" fill="rgb(237,171,35)" fg:x="56220" fg:w="753"/><text x="50.6978%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::take (618 samples, 0.55%)</title><rect x="50.5689%" y="213" width="0.5545%" height="15" fill="rgb(229,178,53)" fg:x="56355" fg:w="618"/><text x="50.8189%" y="223.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (618 samples, 0.55%)</title><rect x="50.5689%" y="197" width="0.5545%" height="15" fill="rgb(210,102,19)" fg:x="56355" fg:w="618"/><text x="50.8189%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (832 samples, 0.75%)</title><rect x="50.3885%" y="405" width="0.7466%" height="15" fill="rgb(235,127,22)" fg:x="56154" fg:w="832"/><text x="50.6385%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (832 samples, 0.75%)</title><rect x="50.3885%" y="389" width="0.7466%" height="15" fill="rgb(244,31,31)" fg:x="56154" fg:w="832"/><text x="50.6385%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (828 samples, 0.74%)</title><rect x="50.3921%" y="373" width="0.7430%" height="15" fill="rgb(231,43,21)" fg:x="56158" fg:w="828"/><text x="50.6421%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (828 samples, 0.74%)</title><rect x="50.3921%" y="357" width="0.7430%" height="15" fill="rgb(217,131,35)" fg:x="56158" fg:w="828"/><text x="50.6421%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (828 samples, 0.74%)</title><rect x="50.3921%" y="341" width="0.7430%" height="15" fill="rgb(221,149,4)" fg:x="56158" fg:w="828"/><text x="50.6421%" y="351.50"></text></g><g><title>alloc::alloc::alloc (815 samples, 0.73%)</title><rect x="50.4038%" y="325" width="0.7313%" height="15" fill="rgb(232,170,28)" fg:x="56171" fg:w="815"/><text x="50.6538%" y="335.50"></text></g><g><title>__rg_alloc (815 samples, 0.73%)</title><rect x="50.4038%" y="309" width="0.7313%" height="15" fill="rgb(238,56,10)" fg:x="56171" fg:w="815"/><text x="50.6538%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (815 samples, 0.73%)</title><rect x="50.4038%" y="293" width="0.7313%" height="15" fill="rgb(235,196,14)" fg:x="56171" fg:w="815"/><text x="50.6538%" y="303.50"></text></g><g><title>rust_alloc (796 samples, 0.71%)</title><rect x="50.4208%" y="277" width="0.7143%" height="15" fill="rgb(216,45,48)" fg:x="56190" fg:w="796"/><text x="50.6708%" y="287.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="51.1235%" y="261" width="0.0117%" height="15" fill="rgb(238,213,17)" fg:x="56973" fg:w="13"/><text x="51.3735%" y="271.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (909 samples, 0.82%)</title><rect x="50.3598%" y="517" width="0.8157%" height="15" fill="rgb(212,13,2)" fg:x="56122" fg:w="909"/><text x="50.6098%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (896 samples, 0.80%)</title><rect x="50.3715%" y="501" width="0.8040%" height="15" fill="rgb(240,114,20)" fg:x="56135" fg:w="896"/><text x="50.6215%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (877 samples, 0.79%)</title><rect x="50.3885%" y="485" width="0.7870%" height="15" fill="rgb(228,41,40)" fg:x="56154" fg:w="877"/><text x="50.6385%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (877 samples, 0.79%)</title><rect x="50.3885%" y="469" width="0.7870%" height="15" fill="rgb(244,132,35)" fg:x="56154" fg:w="877"/><text x="50.6385%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (877 samples, 0.79%)</title><rect x="50.3885%" y="453" width="0.7870%" height="15" fill="rgb(253,189,4)" fg:x="56154" fg:w="877"/><text x="50.6385%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (877 samples, 0.79%)</title><rect x="50.3885%" y="437" width="0.7870%" height="15" fill="rgb(224,37,19)" fg:x="56154" fg:w="877"/><text x="50.6385%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (877 samples, 0.79%)</title><rect x="50.3885%" y="421" width="0.7870%" height="15" fill="rgb(235,223,18)" fg:x="56154" fg:w="877"/><text x="50.6385%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (45 samples, 0.04%)</title><rect x="51.1351%" y="405" width="0.0404%" height="15" fill="rgb(235,163,25)" fg:x="56986" fg:w="45"/><text x="51.3851%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (45 samples, 0.04%)</title><rect x="51.1351%" y="389" width="0.0404%" height="15" fill="rgb(217,145,28)" fg:x="56986" fg:w="45"/><text x="51.3851%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (41 samples, 0.04%)</title><rect x="51.1387%" y="373" width="0.0368%" height="15" fill="rgb(223,223,32)" fg:x="56990" fg:w="41"/><text x="51.3887%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (21 samples, 0.02%)</title><rect x="51.1872%" y="501" width="0.0188%" height="15" fill="rgb(227,189,39)" fg:x="57044" fg:w="21"/><text x="51.4372%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (21 samples, 0.02%)</title><rect x="51.1872%" y="485" width="0.0188%" height="15" fill="rgb(248,10,22)" fg:x="57044" fg:w="21"/><text x="51.4372%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.08%)</title><rect x="51.2383%" y="117" width="0.0799%" height="15" fill="rgb(248,46,39)" fg:x="57101" fg:w="89"/><text x="51.4883%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (89 samples, 0.08%)</title><rect x="51.2383%" y="101" width="0.0799%" height="15" fill="rgb(248,113,48)" fg:x="57101" fg:w="89"/><text x="51.4883%" y="111.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (78 samples, 0.07%)</title><rect x="51.2482%" y="85" width="0.0700%" height="15" fill="rgb(245,16,25)" fg:x="57112" fg:w="78"/><text x="51.4982%" y="95.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (67 samples, 0.06%)</title><rect x="51.2581%" y="69" width="0.0601%" height="15" fill="rgb(249,152,16)" fg:x="57123" fg:w="67"/><text x="51.5081%" y="79.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (67 samples, 0.06%)</title><rect x="51.2581%" y="53" width="0.0601%" height="15" fill="rgb(250,16,1)" fg:x="57123" fg:w="67"/><text x="51.5081%" y="63.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (67 samples, 0.06%)</title><rect x="51.2581%" y="37" width="0.0601%" height="15" fill="rgb(249,138,3)" fg:x="57123" fg:w="67"/><text x="51.5081%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (214 samples, 0.19%)</title><rect x="51.2266%" y="165" width="0.1920%" height="15" fill="rgb(227,71,41)" fg:x="57088" fg:w="214"/><text x="51.4766%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (209 samples, 0.19%)</title><rect x="51.2311%" y="149" width="0.1875%" height="15" fill="rgb(209,184,23)" fg:x="57093" fg:w="209"/><text x="51.4811%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (203 samples, 0.18%)</title><rect x="51.2365%" y="133" width="0.1822%" height="15" fill="rgb(223,215,31)" fg:x="57099" fg:w="203"/><text x="51.4865%" y="143.50"></text></g><g><title>snmalloc::FreeListIter::take (91 samples, 0.08%)</title><rect x="51.3370%" y="117" width="0.0817%" height="15" fill="rgb(210,146,28)" fg:x="57211" fg:w="91"/><text x="51.5870%" y="127.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (91 samples, 0.08%)</title><rect x="51.3370%" y="101" width="0.0817%" height="15" fill="rgb(209,183,41)" fg:x="57211" fg:w="91"/><text x="51.5870%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (233 samples, 0.21%)</title><rect x="51.2114%" y="309" width="0.2091%" height="15" fill="rgb(209,224,45)" fg:x="57071" fg:w="233"/><text x="51.4614%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (233 samples, 0.21%)</title><rect x="51.2114%" y="293" width="0.2091%" height="15" fill="rgb(224,209,51)" fg:x="57071" fg:w="233"/><text x="51.4614%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (229 samples, 0.21%)</title><rect x="51.2150%" y="277" width="0.2055%" height="15" fill="rgb(223,17,39)" fg:x="57075" fg:w="229"/><text x="51.4650%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (229 samples, 0.21%)</title><rect x="51.2150%" y="261" width="0.2055%" height="15" fill="rgb(234,204,37)" fg:x="57075" fg:w="229"/><text x="51.4650%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (229 samples, 0.21%)</title><rect x="51.2150%" y="245" width="0.2055%" height="15" fill="rgb(236,120,5)" fg:x="57075" fg:w="229"/><text x="51.4650%" y="255.50"></text></g><g><title>alloc::alloc::alloc (222 samples, 0.20%)</title><rect x="51.2213%" y="229" width="0.1992%" height="15" fill="rgb(248,97,27)" fg:x="57082" fg:w="222"/><text x="51.4713%" y="239.50"></text></g><g><title>__rg_alloc (222 samples, 0.20%)</title><rect x="51.2213%" y="213" width="0.1992%" height="15" fill="rgb(240,66,17)" fg:x="57082" fg:w="222"/><text x="51.4713%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (222 samples, 0.20%)</title><rect x="51.2213%" y="197" width="0.1992%" height="15" fill="rgb(210,79,3)" fg:x="57082" fg:w="222"/><text x="51.4713%" y="207.50"></text></g><g><title>rust_alloc (220 samples, 0.20%)</title><rect x="51.2231%" y="181" width="0.1974%" height="15" fill="rgb(214,176,27)" fg:x="57084" fg:w="220"/><text x="51.4731%" y="191.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (302 samples, 0.27%)</title><rect x="51.2060%" y="421" width="0.2710%" height="15" fill="rgb(235,185,3)" fg:x="57065" fg:w="302"/><text x="51.4560%" y="431.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (302 samples, 0.27%)</title><rect x="51.2060%" y="405" width="0.2710%" height="15" fill="rgb(227,24,12)" fg:x="57065" fg:w="302"/><text x="51.4560%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (296 samples, 0.27%)</title><rect x="51.2114%" y="389" width="0.2656%" height="15" fill="rgb(252,169,48)" fg:x="57071" fg:w="296"/><text x="51.4614%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (296 samples, 0.27%)</title><rect x="51.2114%" y="373" width="0.2656%" height="15" fill="rgb(212,65,1)" fg:x="57071" fg:w="296"/><text x="51.4614%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (296 samples, 0.27%)</title><rect x="51.2114%" y="357" width="0.2656%" height="15" fill="rgb(242,39,24)" fg:x="57071" fg:w="296"/><text x="51.4614%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (296 samples, 0.27%)</title><rect x="51.2114%" y="341" width="0.2656%" height="15" fill="rgb(249,32,23)" fg:x="57071" fg:w="296"/><text x="51.4614%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (296 samples, 0.27%)</title><rect x="51.2114%" y="325" width="0.2656%" height="15" fill="rgb(251,195,23)" fg:x="57071" fg:w="296"/><text x="51.4614%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (63 samples, 0.06%)</title><rect x="51.4205%" y="309" width="0.0565%" height="15" fill="rgb(236,174,8)" fg:x="57304" fg:w="63"/><text x="51.6705%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (63 samples, 0.06%)</title><rect x="51.4205%" y="293" width="0.0565%" height="15" fill="rgb(220,197,8)" fg:x="57304" fg:w="63"/><text x="51.6705%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned_erms (55 samples, 0.05%)</title><rect x="51.4276%" y="277" width="0.0494%" height="15" fill="rgb(240,108,37)" fg:x="57312" fg:w="55"/><text x="51.6776%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="51.4770%" y="421" width="0.0215%" height="15" fill="rgb(232,176,24)" fg:x="57367" fg:w="24"/><text x="51.7270%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="51.5237%" y="229" width="0.0341%" height="15" fill="rgb(243,35,29)" fg:x="57419" fg:w="38"/><text x="51.7737%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (38 samples, 0.03%)</title><rect x="51.5237%" y="213" width="0.0341%" height="15" fill="rgb(210,37,18)" fg:x="57419" fg:w="38"/><text x="51.7737%" y="223.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (31 samples, 0.03%)</title><rect x="51.5299%" y="197" width="0.0278%" height="15" fill="rgb(224,184,40)" fg:x="57426" fg:w="31"/><text x="51.7799%" y="207.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (25 samples, 0.02%)</title><rect x="51.5353%" y="181" width="0.0224%" height="15" fill="rgb(236,39,29)" fg:x="57432" fg:w="25"/><text x="51.7853%" y="191.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (25 samples, 0.02%)</title><rect x="51.5353%" y="165" width="0.0224%" height="15" fill="rgb(232,48,39)" fg:x="57432" fg:w="25"/><text x="51.7853%" y="175.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (25 samples, 0.02%)</title><rect x="51.5353%" y="149" width="0.0224%" height="15" fill="rgb(236,34,42)" fg:x="57432" fg:w="25"/><text x="51.7853%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (201 samples, 0.18%)</title><rect x="51.5138%" y="277" width="0.1804%" height="15" fill="rgb(243,106,37)" fg:x="57408" fg:w="201"/><text x="51.7638%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (193 samples, 0.17%)</title><rect x="51.5210%" y="261" width="0.1732%" height="15" fill="rgb(218,96,6)" fg:x="57416" fg:w="193"/><text x="51.7710%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (190 samples, 0.17%)</title><rect x="51.5237%" y="245" width="0.1705%" height="15" fill="rgb(235,130,12)" fg:x="57419" fg:w="190"/><text x="51.7737%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::take (144 samples, 0.13%)</title><rect x="51.5649%" y="229" width="0.1292%" height="15" fill="rgb(231,95,0)" fg:x="57465" fg:w="144"/><text x="51.8149%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (144 samples, 0.13%)</title><rect x="51.5649%" y="213" width="0.1292%" height="15" fill="rgb(228,12,23)" fg:x="57465" fg:w="144"/><text x="51.8149%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (227 samples, 0.20%)</title><rect x="51.5012%" y="373" width="0.2037%" height="15" fill="rgb(216,12,1)" fg:x="57394" fg:w="227"/><text x="51.7512%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (227 samples, 0.20%)</title><rect x="51.5012%" y="357" width="0.2037%" height="15" fill="rgb(219,59,3)" fg:x="57394" fg:w="227"/><text x="51.7512%" y="367.50"></text></g><g><title>alloc::alloc::alloc (219 samples, 0.20%)</title><rect x="51.5084%" y="341" width="0.1965%" height="15" fill="rgb(215,208,46)" fg:x="57402" fg:w="219"/><text x="51.7584%" y="351.50"></text></g><g><title>__rg_alloc (219 samples, 0.20%)</title><rect x="51.5084%" y="325" width="0.1965%" height="15" fill="rgb(254,224,29)" fg:x="57402" fg:w="219"/><text x="51.7584%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (219 samples, 0.20%)</title><rect x="51.5084%" y="309" width="0.1965%" height="15" fill="rgb(232,14,29)" fg:x="57402" fg:w="219"/><text x="51.7584%" y="319.50"></text></g><g><title>rust_alloc (213 samples, 0.19%)</title><rect x="51.5138%" y="293" width="0.1911%" height="15" fill="rgb(208,45,52)" fg:x="57408" fg:w="213"/><text x="51.7638%" y="303.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="51.6942%" y="277" width="0.0108%" height="15" fill="rgb(234,191,28)" fg:x="57609" fg:w="12"/><text x="51.9442%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (234 samples, 0.21%)</title><rect x="51.5012%" y="421" width="0.2100%" height="15" fill="rgb(244,67,43)" fg:x="57394" fg:w="234"/><text x="51.7512%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (234 samples, 0.21%)</title><rect x="51.5012%" y="405" width="0.2100%" height="15" fill="rgb(236,189,24)" fg:x="57394" fg:w="234"/><text x="51.7512%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (234 samples, 0.21%)</title><rect x="51.5012%" y="389" width="0.2100%" height="15" fill="rgb(239,214,33)" fg:x="57394" fg:w="234"/><text x="51.7512%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (569 samples, 0.51%)</title><rect x="51.2060%" y="437" width="0.5106%" height="15" fill="rgb(226,176,41)" fg:x="57065" fg:w="569"/><text x="51.4560%" y="447.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (2,161 samples, 1.94%)</title><rect x="49.7793%" y="533" width="1.9391%" height="15" fill="rgb(248,47,8)" fg:x="55475" fg:w="2161"/><text x="50.0293%" y="543.50">&lt;..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (605 samples, 0.54%)</title><rect x="51.1755%" y="517" width="0.5429%" height="15" fill="rgb(218,81,44)" fg:x="57031" fg:w="605"/><text x="51.4255%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (571 samples, 0.51%)</title><rect x="51.2060%" y="501" width="0.5124%" height="15" fill="rgb(213,98,6)" fg:x="57065" fg:w="571"/><text x="51.4560%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (571 samples, 0.51%)</title><rect x="51.2060%" y="485" width="0.5124%" height="15" fill="rgb(222,85,22)" fg:x="57065" fg:w="571"/><text x="51.4560%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (571 samples, 0.51%)</title><rect x="51.2060%" y="469" width="0.5124%" height="15" fill="rgb(239,46,39)" fg:x="57065" fg:w="571"/><text x="51.4560%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (571 samples, 0.51%)</title><rect x="51.2060%" y="453" width="0.5124%" height="15" fill="rgb(237,12,29)" fg:x="57065" fg:w="571"/><text x="51.4560%" y="463.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="51.9032%" y="277" width="0.0117%" height="15" fill="rgb(214,77,8)" fg:x="57842" fg:w="13"/><text x="52.1532%" y="287.50"></text></g><g><title>rust_alloc (42 samples, 0.04%)</title><rect x="51.9158%" y="245" width="0.0377%" height="15" fill="rgb(217,168,37)" fg:x="57856" fg:w="42"/><text x="52.1658%" y="255.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (22 samples, 0.02%)</title><rect x="51.9903%" y="117" width="0.0197%" height="15" fill="rgb(221,217,23)" fg:x="57939" fg:w="22"/><text x="52.2403%" y="127.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (22 samples, 0.02%)</title><rect x="51.9903%" y="101" width="0.0197%" height="15" fill="rgb(243,229,36)" fg:x="57939" fg:w="22"/><text x="52.2403%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (43 samples, 0.04%)</title><rect x="51.9759%" y="165" width="0.0386%" height="15" fill="rgb(251,163,40)" fg:x="57923" fg:w="43"/><text x="52.2259%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (43 samples, 0.04%)</title><rect x="51.9759%" y="149" width="0.0386%" height="15" fill="rgb(237,222,12)" fg:x="57923" fg:w="43"/><text x="52.2259%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (32 samples, 0.03%)</title><rect x="51.9858%" y="133" width="0.0287%" height="15" fill="rgb(248,132,6)" fg:x="57934" fg:w="32"/><text x="52.2358%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (56 samples, 0.05%)</title><rect x="51.9759%" y="181" width="0.0503%" height="15" fill="rgb(227,167,50)" fg:x="57923" fg:w="56"/><text x="52.2259%" y="191.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="52.0145%" y="165" width="0.0117%" height="15" fill="rgb(242,84,37)" fg:x="57966" fg:w="13"/><text x="52.2645%" y="175.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="52.0145%" y="149" width="0.0117%" height="15" fill="rgb(212,4,50)" fg:x="57966" fg:w="13"/><text x="52.2645%" y="159.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="52.0145%" y="133" width="0.0117%" height="15" fill="rgb(230,228,32)" fg:x="57966" fg:w="13"/><text x="52.2645%" y="143.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="52.0145%" y="117" width="0.0117%" height="15" fill="rgb(248,217,23)" fg:x="57966" fg:w="13"/><text x="52.2645%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (77 samples, 0.07%)</title><rect x="51.9669%" y="197" width="0.0691%" height="15" fill="rgb(238,197,32)" fg:x="57913" fg:w="77"/><text x="52.2169%" y="207.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (69 samples, 0.06%)</title><rect x="52.0630%" y="181" width="0.0619%" height="15" fill="rgb(236,106,1)" fg:x="58020" fg:w="69"/><text x="52.3130%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (543 samples, 0.49%)</title><rect x="51.9669%" y="229" width="0.4872%" height="15" fill="rgb(219,228,13)" fg:x="57913" fg:w="543"/><text x="52.2169%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (543 samples, 0.49%)</title><rect x="51.9669%" y="213" width="0.4872%" height="15" fill="rgb(238,30,35)" fg:x="57913" fg:w="543"/><text x="52.2169%" y="223.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (466 samples, 0.42%)</title><rect x="52.0360%" y="197" width="0.4182%" height="15" fill="rgb(236,70,23)" fg:x="57990" fg:w="466"/><text x="52.2860%" y="207.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (367 samples, 0.33%)</title><rect x="52.1249%" y="181" width="0.3293%" height="15" fill="rgb(249,104,48)" fg:x="58089" fg:w="367"/><text x="52.3749%" y="191.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (367 samples, 0.33%)</title><rect x="52.1249%" y="165" width="0.3293%" height="15" fill="rgb(254,117,50)" fg:x="58089" fg:w="367"/><text x="52.3749%" y="175.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (367 samples, 0.33%)</title><rect x="52.1249%" y="149" width="0.3293%" height="15" fill="rgb(223,152,4)" fg:x="58089" fg:w="367"/><text x="52.3749%" y="159.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (14 samples, 0.01%)</title><rect x="52.4605%" y="197" width="0.0126%" height="15" fill="rgb(245,6,2)" fg:x="58463" fg:w="14"/><text x="52.7105%" y="207.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (14 samples, 0.01%)</title><rect x="52.4605%" y="181" width="0.0126%" height="15" fill="rgb(249,150,24)" fg:x="58463" fg:w="14"/><text x="52.7105%" y="191.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="52.4605%" y="165" width="0.0126%" height="15" fill="rgb(228,185,42)" fg:x="58463" fg:w="14"/><text x="52.7105%" y="175.50"></text></g><g><title>snmalloc::FreeListIter::take (20 samples, 0.02%)</title><rect x="52.4730%" y="197" width="0.0179%" height="15" fill="rgb(226,39,33)" fg:x="58477" fg:w="20"/><text x="52.7230%" y="207.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (20 samples, 0.02%)</title><rect x="52.4730%" y="181" width="0.0179%" height="15" fill="rgb(221,166,19)" fg:x="58477" fg:w="20"/><text x="52.7230%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.04%)</title><rect x="52.4542%" y="229" width="0.0440%" height="15" fill="rgb(209,109,2)" fg:x="58456" fg:w="49"/><text x="52.7042%" y="239.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (43 samples, 0.04%)</title><rect x="52.4596%" y="213" width="0.0386%" height="15" fill="rgb(252,216,26)" fg:x="58462" fg:w="43"/><text x="52.7096%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (19 samples, 0.02%)</title><rect x="52.5044%" y="181" width="0.0170%" height="15" fill="rgb(227,173,36)" fg:x="58512" fg:w="19"/><text x="52.7544%" y="191.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (12 samples, 0.01%)</title><rect x="52.5107%" y="165" width="0.0108%" height="15" fill="rgb(209,90,7)" fg:x="58519" fg:w="12"/><text x="52.7607%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.03%)</title><rect x="52.4982%" y="229" width="0.0350%" height="15" fill="rgb(250,194,11)" fg:x="58505" fg:w="39"/><text x="52.7482%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="52.5000%" y="213" width="0.0332%" height="15" fill="rgb(220,72,50)" fg:x="58507" fg:w="37"/><text x="52.7500%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (33 samples, 0.03%)</title><rect x="52.5035%" y="197" width="0.0296%" height="15" fill="rgb(222,106,48)" fg:x="58511" fg:w="33"/><text x="52.7535%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="52.5215%" y="181" width="0.0117%" height="15" fill="rgb(216,220,45)" fg:x="58531" fg:w="13"/><text x="52.7715%" y="191.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (12 samples, 0.01%)</title><rect x="52.5224%" y="165" width="0.0108%" height="15" fill="rgb(234,112,18)" fg:x="58532" fg:w="12"/><text x="52.7724%" y="175.50"></text></g><g><title>snmalloc::FreeListIter::empty (33 samples, 0.03%)</title><rect x="52.5332%" y="229" width="0.0296%" height="15" fill="rgb(206,179,9)" fg:x="58544" fg:w="33"/><text x="52.7832%" y="239.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (33 samples, 0.03%)</title><rect x="52.5332%" y="213" width="0.0296%" height="15" fill="rgb(215,115,40)" fg:x="58544" fg:w="33"/><text x="52.7832%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (958 samples, 0.86%)</title><rect x="51.8853%" y="421" width="0.8596%" height="15" fill="rgb(222,69,34)" fg:x="57822" fg:w="958"/><text x="52.1353%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (958 samples, 0.86%)</title><rect x="51.8853%" y="405" width="0.8596%" height="15" fill="rgb(209,161,10)" fg:x="57822" fg:w="958"/><text x="52.1353%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (956 samples, 0.86%)</title><rect x="51.8871%" y="389" width="0.8578%" height="15" fill="rgb(217,6,38)" fg:x="57824" fg:w="956"/><text x="52.1371%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (956 samples, 0.86%)</title><rect x="51.8871%" y="373" width="0.8578%" height="15" fill="rgb(229,229,48)" fg:x="57824" fg:w="956"/><text x="52.1371%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (956 samples, 0.86%)</title><rect x="51.8871%" y="357" width="0.8578%" height="15" fill="rgb(225,21,28)" fg:x="57824" fg:w="956"/><text x="52.1371%" y="367.50"></text></g><g><title>alloc::alloc::alloc (956 samples, 0.86%)</title><rect x="51.8871%" y="341" width="0.8578%" height="15" fill="rgb(206,33,13)" fg:x="57824" fg:w="956"/><text x="52.1371%" y="351.50"></text></g><g><title>__rg_alloc (956 samples, 0.86%)</title><rect x="51.8871%" y="325" width="0.8578%" height="15" fill="rgb(242,178,17)" fg:x="57824" fg:w="956"/><text x="52.1371%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (956 samples, 0.86%)</title><rect x="51.8871%" y="309" width="0.8578%" height="15" fill="rgb(220,162,5)" fg:x="57824" fg:w="956"/><text x="52.1371%" y="319.50"></text></g><g><title>rust_alloc (938 samples, 0.84%)</title><rect x="51.9032%" y="293" width="0.8417%" height="15" fill="rgb(210,33,43)" fg:x="57842" fg:w="938"/><text x="52.1532%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (924 samples, 0.83%)</title><rect x="51.9158%" y="277" width="0.8291%" height="15" fill="rgb(216,116,54)" fg:x="57856" fg:w="924"/><text x="52.1658%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (924 samples, 0.83%)</title><rect x="51.9158%" y="261" width="0.8291%" height="15" fill="rgb(249,92,24)" fg:x="57856" fg:w="924"/><text x="52.1658%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (880 samples, 0.79%)</title><rect x="51.9553%" y="245" width="0.7896%" height="15" fill="rgb(231,189,14)" fg:x="57900" fg:w="880"/><text x="52.2053%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::take (203 samples, 0.18%)</title><rect x="52.5628%" y="229" width="0.1822%" height="15" fill="rgb(230,8,41)" fg:x="58577" fg:w="203"/><text x="52.8128%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (203 samples, 0.18%)</title><rect x="52.5628%" y="213" width="0.1822%" height="15" fill="rgb(249,7,27)" fg:x="58577" fg:w="203"/><text x="52.8128%" y="223.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (4,707 samples, 4.22%)</title><rect x="48.8442%" y="789" width="4.2237%" height="15" fill="rgb(232,86,5)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="799.50">tremo..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,707 samples, 4.22%)</title><rect x="48.8442%" y="773" width="4.2237%" height="15" fill="rgb(224,175,18)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="783.50">&lt;asyn..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,707 samples, 4.22%)</title><rect x="48.8442%" y="757" width="4.2237%" height="15" fill="rgb(220,129,12)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="767.50">&lt;asyn..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (4,707 samples, 4.22%)</title><rect x="48.8442%" y="741" width="4.2237%" height="15" fill="rgb(210,19,36)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="751.50">&lt;core..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,707 samples, 4.22%)</title><rect x="48.8442%" y="725" width="4.2237%" height="15" fill="rgb(219,96,14)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="735.50">&lt;asyn..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (4,707 samples, 4.22%)</title><rect x="48.8442%" y="709" width="4.2237%" height="15" fill="rgb(249,106,1)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="719.50">async..</text></g><g><title>std::panic::catch_unwind (4,707 samples, 4.22%)</title><rect x="48.8442%" y="693" width="4.2237%" height="15" fill="rgb(249,155,20)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="703.50">std::..</text></g><g><title>std::panicking::try (4,707 samples, 4.22%)</title><rect x="48.8442%" y="677" width="4.2237%" height="15" fill="rgb(244,168,9)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="687.50">std::..</text></g><g><title>std::panicking::try::do_call (4,707 samples, 4.22%)</title><rect x="48.8442%" y="661" width="4.2237%" height="15" fill="rgb(216,23,50)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="671.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,707 samples, 4.22%)</title><rect x="48.8442%" y="645" width="4.2237%" height="15" fill="rgb(224,219,20)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="655.50">&lt;core..</text></g><g><title>core::ops::function::FnOnce::call_once (4,707 samples, 4.22%)</title><rect x="48.8442%" y="629" width="4.2237%" height="15" fill="rgb(222,156,15)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="639.50">core:..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (4,707 samples, 4.22%)</title><rect x="48.8442%" y="613" width="4.2237%" height="15" fill="rgb(231,97,17)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="623.50">async..</text></g><g><title>async_ffi::FfiContext::with_context (4,707 samples, 4.22%)</title><rect x="48.8442%" y="597" width="4.2237%" height="15" fill="rgb(218,70,48)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="607.50">async..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (4,707 samples, 4.22%)</title><rect x="48.8442%" y="581" width="4.2237%" height="15" fill="rgb(212,196,52)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="591.50">async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,707 samples, 4.22%)</title><rect x="48.8442%" y="565" width="4.2237%" height="15" fill="rgb(243,203,18)" fg:x="54433" fg:w="4707"/><text x="49.0942%" y="575.50">&lt;core..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (4,637 samples, 4.16%)</title><rect x="48.9071%" y="549" width="4.1609%" height="15" fill="rgb(252,125,41)" fg:x="54503" fg:w="4637"/><text x="49.1571%" y="559.50">&lt;trem..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,504 samples, 1.35%)</title><rect x="51.7184%" y="533" width="1.3496%" height="15" fill="rgb(223,180,33)" fg:x="57636" fg:w="1504"/><text x="51.9684%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (1,366 samples, 1.23%)</title><rect x="51.8422%" y="517" width="1.2257%" height="15" fill="rgb(254,159,46)" fg:x="57774" fg:w="1366"/><text x="52.0922%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (1,318 samples, 1.18%)</title><rect x="51.8853%" y="501" width="1.1827%" height="15" fill="rgb(254,38,10)" fg:x="57822" fg:w="1318"/><text x="52.1353%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,318 samples, 1.18%)</title><rect x="51.8853%" y="485" width="1.1827%" height="15" fill="rgb(208,217,32)" fg:x="57822" fg:w="1318"/><text x="52.1353%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,318 samples, 1.18%)</title><rect x="51.8853%" y="469" width="1.1827%" height="15" fill="rgb(221,120,13)" fg:x="57822" fg:w="1318"/><text x="52.1353%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1,318 samples, 1.18%)</title><rect x="51.8853%" y="453" width="1.1827%" height="15" fill="rgb(246,54,52)" fg:x="57822" fg:w="1318"/><text x="52.1353%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,318 samples, 1.18%)</title><rect x="51.8853%" y="437" width="1.1827%" height="15" fill="rgb(242,34,25)" fg:x="57822" fg:w="1318"/><text x="52.1353%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (360 samples, 0.32%)</title><rect x="52.7449%" y="421" width="0.3230%" height="15" fill="rgb(247,209,9)" fg:x="58780" fg:w="360"/><text x="52.9949%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (360 samples, 0.32%)</title><rect x="52.7449%" y="405" width="0.3230%" height="15" fill="rgb(228,71,26)" fg:x="58780" fg:w="360"/><text x="52.9949%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (351 samples, 0.31%)</title><rect x="52.7530%" y="389" width="0.3150%" height="15" fill="rgb(222,145,49)" fg:x="58789" fg:w="351"/><text x="53.0030%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="53.0769%" y="757" width="0.0144%" height="15" fill="rgb(218,121,17)" fg:x="59150" fg:w="16"/><text x="53.3269%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (352 samples, 0.32%)</title><rect x="53.2752%" y="741" width="0.3159%" height="15" fill="rgb(244,50,7)" fg:x="59371" fg:w="352"/><text x="53.5252%" y="751.50"></text></g><g><title>core::ptr::read (327 samples, 0.29%)</title><rect x="53.2977%" y="725" width="0.2934%" height="15" fill="rgb(246,229,37)" fg:x="59396" fg:w="327"/><text x="53.5477%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (317 samples, 0.28%)</title><rect x="53.3067%" y="709" width="0.2845%" height="15" fill="rgb(225,18,5)" fg:x="59406" fg:w="317"/><text x="53.5567%" y="719.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="53.5911%" y="741" width="0.0117%" height="15" fill="rgb(213,204,8)" fg:x="59723" fg:w="13"/><text x="53.8411%" y="751.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (13 samples, 0.01%)</title><rect x="53.5911%" y="725" width="0.0117%" height="15" fill="rgb(238,103,6)" fg:x="59723" fg:w="13"/><text x="53.8411%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="53.6028%" y="741" width="0.0260%" height="15" fill="rgb(222,25,35)" fg:x="59736" fg:w="29"/><text x="53.8528%" y="751.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="53.6288%" y="741" width="0.0117%" height="15" fill="rgb(213,203,35)" fg:x="59765" fg:w="13"/><text x="53.8788%" y="751.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="53.6611%" y="437" width="0.0153%" height="15" fill="rgb(221,79,53)" fg:x="59801" fg:w="17"/><text x="53.9111%" y="447.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="53.6764%" y="437" width="0.0135%" height="15" fill="rgb(243,200,35)" fg:x="59818" fg:w="15"/><text x="53.9264%" y="447.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="53.6764%" y="421" width="0.0135%" height="15" fill="rgb(248,60,25)" fg:x="59818" fg:w="15"/><text x="53.9264%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="53.6952%" y="421" width="0.0162%" height="15" fill="rgb(227,53,46)" fg:x="59839" fg:w="18"/><text x="53.9452%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (18 samples, 0.02%)</title><rect x="53.6952%" y="405" width="0.0162%" height="15" fill="rgb(216,120,32)" fg:x="59839" fg:w="18"/><text x="53.9452%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (16 samples, 0.01%)</title><rect x="53.6970%" y="389" width="0.0144%" height="15" fill="rgb(220,134,1)" fg:x="59841" fg:w="16"/><text x="53.9470%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (12 samples, 0.01%)</title><rect x="53.7006%" y="373" width="0.0108%" height="15" fill="rgb(237,168,5)" fg:x="59845" fg:w="12"/><text x="53.9506%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="53.7006%" y="357" width="0.0108%" height="15" fill="rgb(231,100,33)" fg:x="59845" fg:w="12"/><text x="53.9506%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="53.7006%" y="341" width="0.0108%" height="15" fill="rgb(236,177,47)" fg:x="59845" fg:w="12"/><text x="53.9506%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (36 samples, 0.03%)</title><rect x="53.7158%" y="421" width="0.0323%" height="15" fill="rgb(235,7,49)" fg:x="59862" fg:w="36"/><text x="53.9658%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (36 samples, 0.03%)</title><rect x="53.7158%" y="405" width="0.0323%" height="15" fill="rgb(232,119,22)" fg:x="59862" fg:w="36"/><text x="53.9658%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (406 samples, 0.36%)</title><rect x="53.6611%" y="469" width="0.3643%" height="15" fill="rgb(254,73,53)" fg:x="59801" fg:w="406"/><text x="53.9111%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (406 samples, 0.36%)</title><rect x="53.6611%" y="453" width="0.3643%" height="15" fill="rgb(251,35,20)" fg:x="59801" fg:w="406"/><text x="53.9111%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (374 samples, 0.34%)</title><rect x="53.6898%" y="437" width="0.3356%" height="15" fill="rgb(241,119,20)" fg:x="59833" fg:w="374"/><text x="53.9398%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (309 samples, 0.28%)</title><rect x="53.7481%" y="421" width="0.2773%" height="15" fill="rgb(207,102,14)" fg:x="59898" fg:w="309"/><text x="53.9981%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (309 samples, 0.28%)</title><rect x="53.7481%" y="405" width="0.2773%" height="15" fill="rgb(248,201,50)" fg:x="59898" fg:w="309"/><text x="53.9981%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (437 samples, 0.39%)</title><rect x="53.6405%" y="613" width="0.3921%" height="15" fill="rgb(222,185,44)" fg:x="59778" fg:w="437"/><text x="53.8905%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (437 samples, 0.39%)</title><rect x="53.6405%" y="597" width="0.3921%" height="15" fill="rgb(218,107,18)" fg:x="59778" fg:w="437"/><text x="53.8905%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (431 samples, 0.39%)</title><rect x="53.6458%" y="581" width="0.3867%" height="15" fill="rgb(237,177,39)" fg:x="59784" fg:w="431"/><text x="53.8958%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (431 samples, 0.39%)</title><rect x="53.6458%" y="565" width="0.3867%" height="15" fill="rgb(246,69,6)" fg:x="59784" fg:w="431"/><text x="53.8958%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (431 samples, 0.39%)</title><rect x="53.6458%" y="549" width="0.3867%" height="15" fill="rgb(234,208,37)" fg:x="59784" fg:w="431"/><text x="53.8958%" y="559.50"></text></g><g><title>alloc::alloc::alloc (423 samples, 0.38%)</title><rect x="53.6530%" y="533" width="0.3796%" height="15" fill="rgb(225,4,6)" fg:x="59792" fg:w="423"/><text x="53.9030%" y="543.50"></text></g><g><title>__rg_alloc (423 samples, 0.38%)</title><rect x="53.6530%" y="517" width="0.3796%" height="15" fill="rgb(233,45,0)" fg:x="59792" fg:w="423"/><text x="53.9030%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (423 samples, 0.38%)</title><rect x="53.6530%" y="501" width="0.3796%" height="15" fill="rgb(226,136,5)" fg:x="59792" fg:w="423"/><text x="53.9030%" y="511.50"></text></g><g><title>rust_alloc (423 samples, 0.38%)</title><rect x="53.6530%" y="485" width="0.3796%" height="15" fill="rgb(211,91,47)" fg:x="59792" fg:w="423"/><text x="53.9030%" y="495.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (487 samples, 0.44%)</title><rect x="53.6405%" y="741" width="0.4370%" height="15" fill="rgb(242,88,51)" fg:x="59778" fg:w="487"/><text x="53.8905%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (487 samples, 0.44%)</title><rect x="53.6405%" y="725" width="0.4370%" height="15" fill="rgb(230,91,28)" fg:x="59778" fg:w="487"/><text x="53.8905%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (487 samples, 0.44%)</title><rect x="53.6405%" y="709" width="0.4370%" height="15" fill="rgb(254,186,29)" fg:x="59778" fg:w="487"/><text x="53.8905%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (487 samples, 0.44%)</title><rect x="53.6405%" y="693" width="0.4370%" height="15" fill="rgb(238,6,4)" fg:x="59778" fg:w="487"/><text x="53.8905%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (487 samples, 0.44%)</title><rect x="53.6405%" y="677" width="0.4370%" height="15" fill="rgb(221,151,16)" fg:x="59778" fg:w="487"/><text x="53.8905%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (487 samples, 0.44%)</title><rect x="53.6405%" y="661" width="0.4370%" height="15" fill="rgb(251,143,52)" fg:x="59778" fg:w="487"/><text x="53.8905%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (487 samples, 0.44%)</title><rect x="53.6405%" y="645" width="0.4370%" height="15" fill="rgb(206,90,15)" fg:x="59778" fg:w="487"/><text x="53.8905%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (487 samples, 0.44%)</title><rect x="53.6405%" y="629" width="0.4370%" height="15" fill="rgb(218,35,8)" fg:x="59778" fg:w="487"/><text x="53.8905%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (50 samples, 0.04%)</title><rect x="54.0326%" y="613" width="0.0449%" height="15" fill="rgb(239,215,6)" fg:x="60215" fg:w="50"/><text x="54.2826%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (50 samples, 0.04%)</title><rect x="54.0326%" y="597" width="0.0449%" height="15" fill="rgb(245,116,39)" fg:x="60215" fg:w="50"/><text x="54.2826%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (43 samples, 0.04%)</title><rect x="54.0389%" y="581" width="0.0386%" height="15" fill="rgb(242,65,28)" fg:x="60222" fg:w="43"/><text x="54.2889%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (682 samples, 0.61%)</title><rect x="54.0775%" y="741" width="0.6120%" height="15" fill="rgb(252,132,53)" fg:x="60265" fg:w="682"/><text x="54.3275%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (347 samples, 0.31%)</title><rect x="54.7065%" y="725" width="0.3114%" height="15" fill="rgb(224,159,50)" fg:x="60966" fg:w="347"/><text x="54.9565%" y="735.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="55.0232%" y="613" width="0.0117%" height="15" fill="rgb(224,93,4)" fg:x="61319" fg:w="13"/><text x="55.2732%" y="623.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="55.0367%" y="581" width="0.0108%" height="15" fill="rgb(208,81,34)" fg:x="61334" fg:w="12"/><text x="55.2867%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (28 samples, 0.03%)</title><rect x="55.0834%" y="453" width="0.0251%" height="15" fill="rgb(233,92,54)" fg:x="61386" fg:w="28"/><text x="55.3334%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (28 samples, 0.03%)</title><rect x="55.0834%" y="437" width="0.0251%" height="15" fill="rgb(237,21,14)" fg:x="61386" fg:w="28"/><text x="55.3334%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (58 samples, 0.05%)</title><rect x="55.0690%" y="501" width="0.0520%" height="15" fill="rgb(249,128,51)" fg:x="61370" fg:w="58"/><text x="55.3190%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (58 samples, 0.05%)</title><rect x="55.0690%" y="485" width="0.0520%" height="15" fill="rgb(223,129,24)" fg:x="61370" fg:w="58"/><text x="55.3190%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (49 samples, 0.04%)</title><rect x="55.0771%" y="469" width="0.0440%" height="15" fill="rgb(231,168,25)" fg:x="61379" fg:w="49"/><text x="55.3271%" y="479.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="55.1085%" y="453" width="0.0126%" height="15" fill="rgb(224,39,20)" fg:x="61414" fg:w="14"/><text x="55.3585%" y="463.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="55.1085%" y="437" width="0.0126%" height="15" fill="rgb(225,152,53)" fg:x="61414" fg:w="14"/><text x="55.3585%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (78 samples, 0.07%)</title><rect x="55.0690%" y="517" width="0.0700%" height="15" fill="rgb(252,17,24)" fg:x="61370" fg:w="78"/><text x="55.3190%" y="527.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (20 samples, 0.02%)</title><rect x="55.1210%" y="501" width="0.0179%" height="15" fill="rgb(250,114,30)" fg:x="61428" fg:w="20"/><text x="55.3710%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (20 samples, 0.02%)</title><rect x="55.1210%" y="485" width="0.0179%" height="15" fill="rgb(229,5,4)" fg:x="61428" fg:w="20"/><text x="55.3710%" y="495.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (20 samples, 0.02%)</title><rect x="55.1210%" y="469" width="0.0179%" height="15" fill="rgb(225,176,49)" fg:x="61428" fg:w="20"/><text x="55.3710%" y="479.50"></text></g><g><title>snmalloc::bits::align_down (20 samples, 0.02%)</title><rect x="55.1210%" y="453" width="0.0179%" height="15" fill="rgb(224,221,49)" fg:x="61428" fg:w="20"/><text x="55.3710%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (107 samples, 0.10%)</title><rect x="55.0609%" y="533" width="0.0960%" height="15" fill="rgb(253,169,27)" fg:x="61361" fg:w="107"/><text x="55.3109%" y="543.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (19 samples, 0.02%)</title><rect x="55.1399%" y="517" width="0.0170%" height="15" fill="rgb(211,206,16)" fg:x="61449" fg:w="19"/><text x="55.3899%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (19 samples, 0.02%)</title><rect x="55.1399%" y="501" width="0.0170%" height="15" fill="rgb(244,87,35)" fg:x="61449" fg:w="19"/><text x="55.3899%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (19 samples, 0.02%)</title><rect x="55.1399%" y="485" width="0.0170%" height="15" fill="rgb(246,28,10)" fg:x="61449" fg:w="19"/><text x="55.3899%" y="495.50"></text></g><g><title>snmalloc::bits::align_down (19 samples, 0.02%)</title><rect x="55.1399%" y="469" width="0.0170%" height="15" fill="rgb(229,12,44)" fg:x="61449" fg:w="19"/><text x="55.3899%" y="479.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (57 samples, 0.05%)</title><rect x="55.1866%" y="517" width="0.0511%" height="15" fill="rgb(210,145,37)" fg:x="61501" fg:w="57"/><text x="55.4366%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (657 samples, 0.59%)</title><rect x="55.0609%" y="565" width="0.5895%" height="15" fill="rgb(227,112,52)" fg:x="61361" fg:w="657"/><text x="55.3109%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (657 samples, 0.59%)</title><rect x="55.0609%" y="549" width="0.5895%" height="15" fill="rgb(238,155,34)" fg:x="61361" fg:w="657"/><text x="55.3109%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (550 samples, 0.49%)</title><rect x="55.1569%" y="533" width="0.4935%" height="15" fill="rgb(239,226,36)" fg:x="61468" fg:w="550"/><text x="55.4069%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (460 samples, 0.41%)</title><rect x="55.2377%" y="517" width="0.4128%" height="15" fill="rgb(230,16,23)" fg:x="61558" fg:w="460"/><text x="55.4877%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (460 samples, 0.41%)</title><rect x="55.2377%" y="501" width="0.4128%" height="15" fill="rgb(236,171,36)" fg:x="61558" fg:w="460"/><text x="55.4877%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (460 samples, 0.41%)</title><rect x="55.2377%" y="485" width="0.4128%" height="15" fill="rgb(221,22,14)" fg:x="61558" fg:w="460"/><text x="55.4877%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (12 samples, 0.01%)</title><rect x="55.6559%" y="533" width="0.0108%" height="15" fill="rgb(242,43,11)" fg:x="62024" fg:w="12"/><text x="55.9059%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::take (26 samples, 0.02%)</title><rect x="55.6666%" y="533" width="0.0233%" height="15" fill="rgb(232,69,23)" fg:x="62036" fg:w="26"/><text x="55.9166%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (26 samples, 0.02%)</title><rect x="55.6666%" y="517" width="0.0233%" height="15" fill="rgb(216,180,54)" fg:x="62036" fg:w="26"/><text x="55.9166%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.04%)</title><rect x="55.6505%" y="565" width="0.0449%" height="15" fill="rgb(216,5,24)" fg:x="62018" fg:w="50"/><text x="55.9005%" y="575.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (46 samples, 0.04%)</title><rect x="55.6541%" y="549" width="0.0413%" height="15" fill="rgb(225,89,9)" fg:x="62022" fg:w="46"/><text x="55.9041%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="55.6953%" y="565" width="0.0179%" height="15" fill="rgb(243,75,33)" fg:x="62068" fg:w="20"/><text x="55.9453%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="55.6962%" y="549" width="0.0170%" height="15" fill="rgb(247,141,45)" fg:x="62069" fg:w="19"/><text x="55.9462%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="55.6971%" y="533" width="0.0162%" height="15" fill="rgb(232,177,36)" fg:x="62070" fg:w="18"/><text x="55.9471%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (942 samples, 0.85%)</title><rect x="55.0358%" y="613" width="0.8453%" height="15" fill="rgb(219,125,36)" fg:x="61333" fg:w="942"/><text x="55.2858%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (941 samples, 0.84%)</title><rect x="55.0367%" y="597" width="0.8444%" height="15" fill="rgb(227,94,9)" fg:x="61334" fg:w="941"/><text x="55.2867%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (928 samples, 0.83%)</title><rect x="55.0484%" y="581" width="0.8327%" height="15" fill="rgb(240,34,52)" fg:x="61347" fg:w="928"/><text x="55.2984%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (182 samples, 0.16%)</title><rect x="55.7178%" y="565" width="0.1633%" height="15" fill="rgb(216,45,12)" fg:x="62093" fg:w="182"/><text x="55.9678%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (182 samples, 0.16%)</title><rect x="55.7178%" y="549" width="0.1633%" height="15" fill="rgb(246,21,19)" fg:x="62093" fg:w="182"/><text x="55.9678%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,337 samples, 1.20%)</title><rect x="54.6894%" y="741" width="1.1997%" height="15" fill="rgb(213,98,42)" fg:x="60947" fg:w="1337"/><text x="54.9394%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (971 samples, 0.87%)</title><rect x="55.0179%" y="725" width="0.8713%" height="15" fill="rgb(250,136,47)" fg:x="61313" fg:w="971"/><text x="55.2679%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (971 samples, 0.87%)</title><rect x="55.0179%" y="709" width="0.8713%" height="15" fill="rgb(251,124,27)" fg:x="61313" fg:w="971"/><text x="55.2679%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (971 samples, 0.87%)</title><rect x="55.0179%" y="693" width="0.8713%" height="15" fill="rgb(229,180,14)" fg:x="61313" fg:w="971"/><text x="55.2679%" y="703.50"></text></g><g><title>alloc::alloc::alloc (971 samples, 0.87%)</title><rect x="55.0179%" y="677" width="0.8713%" height="15" fill="rgb(245,216,25)" fg:x="61313" fg:w="971"/><text x="55.2679%" y="687.50"></text></g><g><title>__rg_alloc (971 samples, 0.87%)</title><rect x="55.0179%" y="661" width="0.8713%" height="15" fill="rgb(251,43,5)" fg:x="61313" fg:w="971"/><text x="55.2679%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (971 samples, 0.87%)</title><rect x="55.0179%" y="645" width="0.8713%" height="15" fill="rgb(250,128,24)" fg:x="61313" fg:w="971"/><text x="55.2679%" y="655.50"></text></g><g><title>rust_alloc (965 samples, 0.87%)</title><rect x="55.0232%" y="629" width="0.8659%" height="15" fill="rgb(217,117,27)" fg:x="61319" fg:w="965"/><text x="55.2732%" y="639.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="55.8963%" y="693" width="0.0162%" height="15" fill="rgb(245,147,4)" fg:x="62292" fg:w="18"/><text x="56.1463%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (17 samples, 0.02%)</title><rect x="55.8972%" y="677" width="0.0153%" height="15" fill="rgb(242,201,35)" fg:x="62293" fg:w="17"/><text x="56.1472%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="55.8972%" y="661" width="0.0153%" height="15" fill="rgb(218,181,1)" fg:x="62293" fg:w="17"/><text x="56.1472%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (19 samples, 0.02%)</title><rect x="55.8963%" y="709" width="0.0170%" height="15" fill="rgb(222,6,29)" fg:x="62292" fg:w="19"/><text x="56.1463%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="55.8892%" y="725" width="0.0377%" height="15" fill="rgb(208,186,3)" fg:x="62284" fg:w="42"/><text x="56.1392%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)]&gt; (15 samples, 0.01%)</title><rect x="55.9134%" y="709" width="0.0135%" height="15" fill="rgb(216,36,26)" fg:x="62311" fg:w="15"/><text x="56.1634%" y="719.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="55.9466%" y="629" width="0.0117%" height="15" fill="rgb(248,201,23)" fg:x="62348" fg:w="13"/><text x="56.1966%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (41 samples, 0.04%)</title><rect x="55.9636%" y="629" width="0.0368%" height="15" fill="rgb(251,170,31)" fg:x="62367" fg:w="41"/><text x="56.2136%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (41 samples, 0.04%)</title><rect x="55.9636%" y="613" width="0.0368%" height="15" fill="rgb(207,110,25)" fg:x="62367" fg:w="41"/><text x="56.2136%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (36 samples, 0.03%)</title><rect x="55.9681%" y="597" width="0.0323%" height="15" fill="rgb(250,54,15)" fg:x="62372" fg:w="36"/><text x="56.2181%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (78 samples, 0.07%)</title><rect x="55.9466%" y="661" width="0.0700%" height="15" fill="rgb(227,68,33)" fg:x="62348" fg:w="78"/><text x="56.1966%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (78 samples, 0.07%)</title><rect x="55.9466%" y="645" width="0.0700%" height="15" fill="rgb(238,34,41)" fg:x="62348" fg:w="78"/><text x="56.1966%" y="655.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (18 samples, 0.02%)</title><rect x="56.0004%" y="629" width="0.0162%" height="15" fill="rgb(220,11,15)" fg:x="62408" fg:w="18"/><text x="56.2504%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (82 samples, 0.07%)</title><rect x="55.9466%" y="693" width="0.0736%" height="15" fill="rgb(246,111,35)" fg:x="62348" fg:w="82"/><text x="56.1966%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (82 samples, 0.07%)</title><rect x="55.9466%" y="677" width="0.0736%" height="15" fill="rgb(209,88,53)" fg:x="62348" fg:w="82"/><text x="56.1966%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (99 samples, 0.09%)</title><rect x="55.9331%" y="709" width="0.0888%" height="15" fill="rgb(231,185,47)" fg:x="62333" fg:w="99"/><text x="56.1831%" y="719.50"></text></g><g><title>rust_dealloc (114 samples, 0.10%)</title><rect x="55.9268%" y="725" width="0.1023%" height="15" fill="rgb(233,154,1)" fg:x="62326" fg:w="114"/><text x="56.1768%" y="735.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (28 samples, 0.03%)</title><rect x="56.0309%" y="709" width="0.0251%" height="15" fill="rgb(225,15,46)" fg:x="62442" fg:w="28"/><text x="56.2809%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (193 samples, 0.17%)</title><rect x="55.8892%" y="741" width="0.1732%" height="15" fill="rgb(211,135,41)" fg:x="62284" fg:w="193"/><text x="56.1392%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (37 samples, 0.03%)</title><rect x="56.0291%" y="725" width="0.0332%" height="15" fill="rgb(208,54,0)" fg:x="62440" fg:w="37"/><text x="56.2791%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (19 samples, 0.02%)</title><rect x="56.0623%" y="741" width="0.0170%" height="15" fill="rgb(244,136,14)" fg:x="62477" fg:w="19"/><text x="56.3123%" y="751.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="56.0623%" y="725" width="0.0170%" height="15" fill="rgb(241,56,14)" fg:x="62477" fg:w="19"/><text x="56.3123%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="56.0794%" y="741" width="0.0117%" height="15" fill="rgb(205,80,24)" fg:x="62496" fg:w="13"/><text x="56.3294%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt; (13 samples, 0.01%)</title><rect x="56.0794%" y="725" width="0.0117%" height="15" fill="rgb(220,57,4)" fg:x="62496" fg:w="13"/><text x="56.3294%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (15 samples, 0.01%)</title><rect x="56.0911%" y="741" width="0.0135%" height="15" fill="rgb(226,193,50)" fg:x="62509" fg:w="15"/><text x="56.3411%" y="751.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (52 samples, 0.05%)</title><rect x="56.1045%" y="741" width="0.0467%" height="15" fill="rgb(231,168,22)" fg:x="62524" fg:w="52"/><text x="56.3545%" y="751.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (52 samples, 0.05%)</title><rect x="56.1045%" y="725" width="0.0467%" height="15" fill="rgb(254,215,14)" fg:x="62524" fg:w="52"/><text x="56.3545%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (51 samples, 0.05%)</title><rect x="56.1054%" y="709" width="0.0458%" height="15" fill="rgb(211,115,16)" fg:x="62525" fg:w="51"/><text x="56.3554%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (51 samples, 0.05%)</title><rect x="56.1054%" y="693" width="0.0458%" height="15" fill="rgb(236,210,16)" fg:x="62525" fg:w="51"/><text x="56.3554%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (26 samples, 0.02%)</title><rect x="56.1279%" y="677" width="0.0233%" height="15" fill="rgb(221,94,12)" fg:x="62550" fg:w="26"/><text x="56.3779%" y="687.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (26 samples, 0.02%)</title><rect x="56.1279%" y="661" width="0.0233%" height="15" fill="rgb(235,218,49)" fg:x="62550" fg:w="26"/><text x="56.3779%" y="671.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (26 samples, 0.02%)</title><rect x="56.1279%" y="645" width="0.0233%" height="15" fill="rgb(217,114,14)" fg:x="62550" fg:w="26"/><text x="56.3779%" y="655.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (26 samples, 0.02%)</title><rect x="56.1279%" y="629" width="0.0233%" height="15" fill="rgb(216,145,22)" fg:x="62550" fg:w="26"/><text x="56.3779%" y="639.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (21 samples, 0.02%)</title><rect x="56.1323%" y="613" width="0.0188%" height="15" fill="rgb(217,112,39)" fg:x="62555" fg:w="21"/><text x="56.3823%" y="623.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (8,193 samples, 7.35%)</title><rect x="48.8442%" y="821" width="7.3518%" height="15" fill="rgb(225,85,32)" fg:x="54433" fg:w="8193"/><text x="49.0942%" y="831.50">tremor_run..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,193 samples, 7.35%)</title><rect x="48.8442%" y="805" width="7.3518%" height="15" fill="rgb(245,209,47)" fg:x="54433" fg:w="8193"/><text x="49.0942%" y="815.50">&lt;core::fut..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,486 samples, 3.13%)</title><rect x="53.0680%" y="789" width="3.1281%" height="15" fill="rgb(218,220,15)" fg:x="59140" fg:w="3486"/><text x="53.3180%" y="799.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,486 samples, 3.13%)</title><rect x="53.0680%" y="773" width="3.1281%" height="15" fill="rgb(222,202,31)" fg:x="59140" fg:w="3486"/><text x="53.3180%" y="783.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,460 samples, 3.10%)</title><rect x="53.0913%" y="757" width="3.1048%" height="15" fill="rgb(243,203,4)" fg:x="59166" fg:w="3460"/><text x="53.3413%" y="767.50">tre..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (50 samples, 0.04%)</title><rect x="56.1512%" y="741" width="0.0449%" height="15" fill="rgb(237,92,17)" fg:x="62576" fg:w="50"/><text x="56.4012%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (50 samples, 0.04%)</title><rect x="56.1512%" y="725" width="0.0449%" height="15" fill="rgb(231,119,7)" fg:x="62576" fg:w="50"/><text x="56.4012%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (50 samples, 0.04%)</title><rect x="56.1512%" y="709" width="0.0449%" height="15" fill="rgb(237,82,41)" fg:x="62576" fg:w="50"/><text x="56.4012%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (35 samples, 0.03%)</title><rect x="56.1646%" y="693" width="0.0314%" height="15" fill="rgb(226,81,48)" fg:x="62591" fg:w="35"/><text x="56.4146%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (201 samples, 0.18%)</title><rect x="56.2346%" y="789" width="0.1804%" height="15" fill="rgb(234,70,51)" fg:x="62669" fg:w="201"/><text x="56.4846%" y="799.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (41 samples, 0.04%)</title><rect x="56.5622%" y="773" width="0.0368%" height="15" fill="rgb(251,86,4)" fg:x="63034" fg:w="41"/><text x="56.8122%" y="783.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (30 samples, 0.03%)</title><rect x="56.5989%" y="773" width="0.0269%" height="15" fill="rgb(244,144,28)" fg:x="63075" fg:w="30"/><text x="56.8489%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.04%)</title><rect x="56.6286%" y="757" width="0.0413%" height="15" fill="rgb(232,161,39)" fg:x="63108" fg:w="46"/><text x="56.8786%" y="767.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (263 samples, 0.24%)</title><rect x="56.6286%" y="773" width="0.2360%" height="15" fill="rgb(247,34,51)" fg:x="63108" fg:w="263"/><text x="56.8786%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (217 samples, 0.19%)</title><rect x="56.6698%" y="757" width="0.1947%" height="15" fill="rgb(225,132,2)" fg:x="63154" fg:w="217"/><text x="56.9198%" y="767.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (216 samples, 0.19%)</title><rect x="56.6707%" y="741" width="0.1938%" height="15" fill="rgb(209,159,44)" fg:x="63155" fg:w="216"/><text x="56.9207%" y="751.50"></text></g><g><title>core::ptr::read (216 samples, 0.19%)</title><rect x="56.6707%" y="725" width="0.1938%" height="15" fill="rgb(251,214,1)" fg:x="63155" fg:w="216"/><text x="56.9207%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (216 samples, 0.19%)</title><rect x="56.6707%" y="709" width="0.1938%" height="15" fill="rgb(247,84,47)" fg:x="63155" fg:w="216"/><text x="56.9207%" y="719.50"></text></g><g><title>rust_alloc (41 samples, 0.04%)</title><rect x="56.8996%" y="469" width="0.0368%" height="15" fill="rgb(240,111,43)" fg:x="63410" fg:w="41"/><text x="57.1496%" y="479.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="56.9363%" y="469" width="0.0117%" height="15" fill="rgb(215,214,35)" fg:x="63451" fg:w="13"/><text x="57.1863%" y="479.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="56.9372%" y="453" width="0.0108%" height="15" fill="rgb(248,207,23)" fg:x="63452" fg:w="12"/><text x="57.1872%" y="463.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="56.9651%" y="341" width="0.0126%" height="15" fill="rgb(214,186,4)" fg:x="63483" fg:w="14"/><text x="57.2151%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="56.9651%" y="325" width="0.0126%" height="15" fill="rgb(220,133,22)" fg:x="63483" fg:w="14"/><text x="57.2151%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (27 samples, 0.02%)</title><rect x="56.9579%" y="389" width="0.0242%" height="15" fill="rgb(239,134,19)" fg:x="63475" fg:w="27"/><text x="57.2079%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (27 samples, 0.02%)</title><rect x="56.9579%" y="373" width="0.0242%" height="15" fill="rgb(250,140,9)" fg:x="63475" fg:w="27"/><text x="57.2079%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (23 samples, 0.02%)</title><rect x="56.9615%" y="357" width="0.0206%" height="15" fill="rgb(225,59,14)" fg:x="63479" fg:w="23"/><text x="57.2115%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (31 samples, 0.03%)</title><rect x="56.9579%" y="405" width="0.0278%" height="15" fill="rgb(214,152,51)" fg:x="63475" fg:w="31"/><text x="57.2079%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (41 samples, 0.04%)</title><rect x="56.9534%" y="421" width="0.0368%" height="15" fill="rgb(251,227,43)" fg:x="63470" fg:w="41"/><text x="57.2034%" y="431.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (31 samples, 0.03%)</title><rect x="56.9992%" y="405" width="0.0278%" height="15" fill="rgb(241,96,17)" fg:x="63521" fg:w="31"/><text x="57.2492%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (282 samples, 0.25%)</title><rect x="56.9534%" y="453" width="0.2530%" height="15" fill="rgb(234,198,43)" fg:x="63470" fg:w="282"/><text x="57.2034%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (282 samples, 0.25%)</title><rect x="56.9534%" y="437" width="0.2530%" height="15" fill="rgb(220,108,29)" fg:x="63470" fg:w="282"/><text x="57.2034%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (241 samples, 0.22%)</title><rect x="56.9902%" y="421" width="0.2163%" height="15" fill="rgb(226,163,33)" fg:x="63511" fg:w="241"/><text x="57.2402%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (200 samples, 0.18%)</title><rect x="57.0270%" y="405" width="0.1795%" height="15" fill="rgb(205,194,45)" fg:x="63552" fg:w="200"/><text x="57.2770%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (200 samples, 0.18%)</title><rect x="57.0270%" y="389" width="0.1795%" height="15" fill="rgb(206,143,44)" fg:x="63552" fg:w="200"/><text x="57.2770%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (200 samples, 0.18%)</title><rect x="57.0270%" y="373" width="0.1795%" height="15" fill="rgb(236,136,36)" fg:x="63552" fg:w="200"/><text x="57.2770%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::empty (85 samples, 0.08%)</title><rect x="57.2100%" y="453" width="0.0763%" height="15" fill="rgb(249,172,42)" fg:x="63756" fg:w="85"/><text x="57.4600%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (85 samples, 0.08%)</title><rect x="57.2100%" y="437" width="0.0763%" height="15" fill="rgb(216,139,23)" fg:x="63756" fg:w="85"/><text x="57.4600%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (1,083 samples, 0.97%)</title><rect x="56.8987%" y="501" width="0.9718%" height="15" fill="rgb(207,166,20)" fg:x="63409" fg:w="1083"/><text x="57.1487%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (1,082 samples, 0.97%)</title><rect x="56.8996%" y="485" width="0.9709%" height="15" fill="rgb(210,209,22)" fg:x="63410" fg:w="1082"/><text x="57.1496%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (1,028 samples, 0.92%)</title><rect x="56.9480%" y="469" width="0.9225%" height="15" fill="rgb(232,118,20)" fg:x="63464" fg:w="1028"/><text x="57.1980%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (651 samples, 0.58%)</title><rect x="57.2863%" y="453" width="0.5842%" height="15" fill="rgb(238,113,42)" fg:x="63841" fg:w="651"/><text x="57.5363%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (651 samples, 0.58%)</title><rect x="57.2863%" y="437" width="0.5842%" height="15" fill="rgb(231,42,5)" fg:x="63841" fg:w="651"/><text x="57.5363%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,127 samples, 1.01%)</title><rect x="56.8699%" y="645" width="1.0113%" height="15" fill="rgb(243,166,24)" fg:x="63377" fg:w="1127"/><text x="57.1199%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,127 samples, 1.01%)</title><rect x="56.8699%" y="629" width="1.0113%" height="15" fill="rgb(237,226,12)" fg:x="63377" fg:w="1127"/><text x="57.1199%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,119 samples, 1.00%)</title><rect x="56.8771%" y="613" width="1.0041%" height="15" fill="rgb(229,133,24)" fg:x="63385" fg:w="1119"/><text x="57.1271%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,119 samples, 1.00%)</title><rect x="56.8771%" y="597" width="1.0041%" height="15" fill="rgb(238,33,43)" fg:x="63385" fg:w="1119"/><text x="57.1271%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,119 samples, 1.00%)</title><rect x="56.8771%" y="581" width="1.0041%" height="15" fill="rgb(227,59,38)" fg:x="63385" fg:w="1119"/><text x="57.1271%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1,109 samples, 1.00%)</title><rect x="56.8861%" y="565" width="0.9951%" height="15" fill="rgb(230,97,0)" fg:x="63395" fg:w="1109"/><text x="57.1361%" y="575.50"></text></g><g><title>__rg_alloc (1,109 samples, 1.00%)</title><rect x="56.8861%" y="549" width="0.9951%" height="15" fill="rgb(250,173,50)" fg:x="63395" fg:w="1109"/><text x="57.1361%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,109 samples, 1.00%)</title><rect x="56.8861%" y="533" width="0.9951%" height="15" fill="rgb(240,15,50)" fg:x="63395" fg:w="1109"/><text x="57.1361%" y="543.50"></text></g><g><title>rust_alloc (1,108 samples, 0.99%)</title><rect x="56.8870%" y="517" width="0.9942%" height="15" fill="rgb(221,93,22)" fg:x="63396" fg:w="1108"/><text x="57.1370%" y="527.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="57.8705%" y="501" width="0.0108%" height="15" fill="rgb(245,180,53)" fg:x="64492" fg:w="12"/><text x="58.1205%" y="511.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1,172 samples, 1.05%)</title><rect x="56.8699%" y="773" width="1.0517%" height="15" fill="rgb(231,88,51)" fg:x="63377" fg:w="1172"/><text x="57.1199%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,172 samples, 1.05%)</title><rect x="56.8699%" y="757" width="1.0517%" height="15" fill="rgb(240,58,21)" fg:x="63377" fg:w="1172"/><text x="57.1199%" y="767.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,172 samples, 1.05%)</title><rect x="56.8699%" y="741" width="1.0517%" height="15" fill="rgb(237,21,10)" fg:x="63377" fg:w="1172"/><text x="57.1199%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,172 samples, 1.05%)</title><rect x="56.8699%" y="725" width="1.0517%" height="15" fill="rgb(218,43,11)" fg:x="63377" fg:w="1172"/><text x="57.1199%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,172 samples, 1.05%)</title><rect x="56.8699%" y="709" width="1.0517%" height="15" fill="rgb(218,221,29)" fg:x="63377" fg:w="1172"/><text x="57.1199%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,172 samples, 1.05%)</title><rect x="56.8699%" y="693" width="1.0517%" height="15" fill="rgb(214,118,42)" fg:x="63377" fg:w="1172"/><text x="57.1199%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1,172 samples, 1.05%)</title><rect x="56.8699%" y="677" width="1.0517%" height="15" fill="rgb(251,200,26)" fg:x="63377" fg:w="1172"/><text x="57.1199%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,172 samples, 1.05%)</title><rect x="56.8699%" y="661" width="1.0517%" height="15" fill="rgb(237,101,39)" fg:x="63377" fg:w="1172"/><text x="57.1199%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (45 samples, 0.04%)</title><rect x="57.8812%" y="645" width="0.0404%" height="15" fill="rgb(251,117,11)" fg:x="64504" fg:w="45"/><text x="58.1312%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (45 samples, 0.04%)</title><rect x="57.8812%" y="629" width="0.0404%" height="15" fill="rgb(216,223,23)" fg:x="64504" fg:w="45"/><text x="58.1312%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (33 samples, 0.03%)</title><rect x="57.8920%" y="613" width="0.0296%" height="15" fill="rgb(251,54,12)" fg:x="64516" fg:w="33"/><text x="58.1420%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,018 samples, 0.91%)</title><rect x="57.9216%" y="773" width="0.9135%" height="15" fill="rgb(254,176,54)" fg:x="64549" fg:w="1018"/><text x="58.1716%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (16 samples, 0.01%)</title><rect x="58.8351%" y="773" width="0.0144%" height="15" fill="rgb(210,32,8)" fg:x="65567" fg:w="16"/><text x="59.0851%" y="783.50"></text></g><g><title>core::mem::replace (21 samples, 0.02%)</title><rect x="58.8629%" y="741" width="0.0188%" height="15" fill="rgb(235,52,38)" fg:x="65598" fg:w="21"/><text x="59.1129%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (48 samples, 0.04%)</title><rect x="58.8494%" y="773" width="0.0431%" height="15" fill="rgb(231,4,44)" fg:x="65583" fg:w="48"/><text x="59.0994%" y="783.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.04%)</title><rect x="58.8494%" y="757" width="0.0431%" height="15" fill="rgb(249,2,32)" fg:x="65583" fg:w="48"/><text x="59.0994%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (12 samples, 0.01%)</title><rect x="58.8818%" y="741" width="0.0108%" height="15" fill="rgb(224,65,26)" fg:x="65619" fg:w="12"/><text x="59.1318%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="58.8818%" y="725" width="0.0108%" height="15" fill="rgb(250,73,40)" fg:x="65619" fg:w="12"/><text x="59.1318%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (15 samples, 0.01%)</title><rect x="58.8925%" y="773" width="0.0135%" height="15" fill="rgb(253,177,16)" fg:x="65631" fg:w="15"/><text x="59.1425%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="58.8925%" y="757" width="0.0135%" height="15" fill="rgb(217,32,34)" fg:x="65631" fg:w="15"/><text x="59.1425%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (22 samples, 0.02%)</title><rect x="58.9158%" y="773" width="0.0197%" height="15" fill="rgb(212,7,10)" fg:x="65657" fg:w="22"/><text x="59.1658%" y="783.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (27 samples, 0.02%)</title><rect x="58.9589%" y="725" width="0.0242%" height="15" fill="rgb(245,89,8)" fg:x="65705" fg:w="27"/><text x="59.2089%" y="735.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (231 samples, 0.21%)</title><rect x="58.9589%" y="741" width="0.2073%" height="15" fill="rgb(237,16,53)" fg:x="65705" fg:w="231"/><text x="59.2089%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (204 samples, 0.18%)</title><rect x="58.9831%" y="725" width="0.1831%" height="15" fill="rgb(250,204,30)" fg:x="65732" fg:w="204"/><text x="59.2331%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (204 samples, 0.18%)</title><rect x="58.9831%" y="709" width="0.1831%" height="15" fill="rgb(208,77,27)" fg:x="65732" fg:w="204"/><text x="59.2331%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (204 samples, 0.18%)</title><rect x="58.9831%" y="693" width="0.1831%" height="15" fill="rgb(250,204,28)" fg:x="65732" fg:w="204"/><text x="59.2331%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (204 samples, 0.18%)</title><rect x="58.9831%" y="677" width="0.1831%" height="15" fill="rgb(244,63,21)" fg:x="65732" fg:w="204"/><text x="59.2331%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (204 samples, 0.18%)</title><rect x="58.9831%" y="661" width="0.1831%" height="15" fill="rgb(236,85,44)" fg:x="65732" fg:w="204"/><text x="59.2331%" y="671.50"></text></g><g><title>__memcmp_avx2_movbe (135 samples, 0.12%)</title><rect x="59.0451%" y="645" width="0.1211%" height="15" fill="rgb(215,98,4)" fg:x="65801" fg:w="135"/><text x="59.2951%" y="655.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (258 samples, 0.23%)</title><rect x="58.9356%" y="773" width="0.2315%" height="15" fill="rgb(235,38,11)" fg:x="65679" fg:w="258"/><text x="59.1856%" y="783.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (233 samples, 0.21%)</title><rect x="58.9580%" y="757" width="0.2091%" height="15" fill="rgb(254,186,25)" fg:x="65704" fg:w="233"/><text x="59.2080%" y="767.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18,576 samples, 16.67%)</title><rect x="42.5459%" y="1109" width="16.6688%" height="15" fill="rgb(225,55,31)" fg:x="47414" fg:w="18576"/><text x="42.7959%" y="1119.50">&lt;futures_lite::future::Or&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,573 samples, 16.67%)</title><rect x="42.5486%" y="1093" width="16.6661%" height="15" fill="rgb(211,15,21)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="1103.50">&lt;core::future::from_genera..</text></g><g><title>async_executor::Executor::run::{{closure}} (18,573 samples, 16.67%)</title><rect x="42.5486%" y="1077" width="16.6661%" height="15" fill="rgb(215,187,41)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="1087.50">async_executor::Executor::..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18,573 samples, 16.67%)</title><rect x="42.5486%" y="1061" width="16.6661%" height="15" fill="rgb(248,69,32)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="1071.50">&lt;futures_lite::future::Or&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,573 samples, 16.67%)</title><rect x="42.5486%" y="1045" width="16.6661%" height="15" fill="rgb(252,102,52)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="1055.50">&lt;core::future::from_genera..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (18,573 samples, 16.67%)</title><rect x="42.5486%" y="1029" width="16.6661%" height="15" fill="rgb(253,140,32)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="1039.50">async_executor::Executor::..</text></g><g><title>async_task::runnable::Runnable::run (18,573 samples, 16.67%)</title><rect x="42.5486%" y="1013" width="16.6661%" height="15" fill="rgb(216,56,42)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="1023.50">async_task::runnable::Runn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (18,573 samples, 16.67%)</title><rect x="42.5486%" y="997" width="16.6661%" height="15" fill="rgb(216,184,14)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="1007.50">async_task::raw::RawTask&lt;F..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (18,573 samples, 16.67%)</title><rect x="42.5486%" y="981" width="16.6661%" height="15" fill="rgb(237,187,27)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="991.50">&lt;core::pin::Pin&lt;P&gt; as core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,573 samples, 16.67%)</title><rect x="42.5486%" y="965" width="16.6661%" height="15" fill="rgb(219,65,3)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="975.50">&lt;core::future::from_genera..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (18,573 samples, 16.67%)</title><rect x="42.5486%" y="949" width="16.6661%" height="15" fill="rgb(245,83,25)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="959.50">async_executor::Executor::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (18,573 samples, 16.67%)</title><rect x="42.5486%" y="933" width="16.6661%" height="15" fill="rgb(214,205,45)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="943.50">&lt;async_std::task::builder:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (18,573 samples, 16.67%)</title><rect x="42.5486%" y="917" width="16.6661%" height="15" fill="rgb(241,20,18)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="927.50">async_std::task::task_loca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18,573 samples, 16.67%)</title><rect x="42.5486%" y="901" width="16.6661%" height="15" fill="rgb(232,163,23)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="911.50">std::thread::local::LocalK..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18,573 samples, 16.67%)</title><rect x="42.5486%" y="885" width="16.6661%" height="15" fill="rgb(214,5,46)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="895.50">std::thread::local::LocalK..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (18,573 samples, 16.67%)</title><rect x="42.5486%" y="869" width="16.6661%" height="15" fill="rgb(229,78,17)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="879.50">async_std::task::task_loca..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (18,573 samples, 16.67%)</title><rect x="42.5486%" y="853" width="16.6661%" height="15" fill="rgb(248,89,10)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="863.50">&lt;async_std::task::builder:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,573 samples, 16.67%)</title><rect x="42.5486%" y="837" width="16.6661%" height="15" fill="rgb(248,54,15)" fg:x="47417" fg:w="18573"/><text x="42.7986%" y="847.50">&lt;core::future::from_genera..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,364 samples, 3.02%)</title><rect x="56.1960%" y="821" width="3.0186%" height="15" fill="rgb(223,116,6)" fg:x="62626" fg:w="3364"/><text x="56.4460%" y="831.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,364 samples, 3.02%)</title><rect x="56.1960%" y="805" width="3.0186%" height="15" fill="rgb(205,125,38)" fg:x="62626" fg:w="3364"/><text x="56.4460%" y="815.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,120 samples, 2.80%)</title><rect x="56.4150%" y="789" width="2.7997%" height="15" fill="rgb(251,78,38)" fg:x="62870" fg:w="3120"/><text x="56.6650%" y="799.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (53 samples, 0.05%)</title><rect x="59.1671%" y="773" width="0.0476%" height="15" fill="rgb(253,78,28)" fg:x="65937" fg:w="53"/><text x="59.4171%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (53 samples, 0.05%)</title><rect x="59.1671%" y="757" width="0.0476%" height="15" fill="rgb(209,120,3)" fg:x="65937" fg:w="53"/><text x="59.4171%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (53 samples, 0.05%)</title><rect x="59.1671%" y="741" width="0.0476%" height="15" fill="rgb(238,229,9)" fg:x="65937" fg:w="53"/><text x="59.4171%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (42 samples, 0.04%)</title><rect x="59.1770%" y="725" width="0.0377%" height="15" fill="rgb(253,159,18)" fg:x="65948" fg:w="42"/><text x="59.4270%" y="735.50"></text></g><g><title>async_io::driver::block_on (18,581 samples, 16.67%)</title><rect x="42.5441%" y="1125" width="16.6732%" height="15" fill="rgb(244,42,34)" fg:x="47412" fg:w="18581"/><text x="42.7941%" y="1135.50">async_io::driver::block_on</text></g><g><title>__memcpy_avx_unaligned_erms (715 samples, 0.64%)</title><rect x="59.2972%" y="869" width="0.6416%" height="15" fill="rgb(224,8,7)" fg:x="66082" fg:w="715"/><text x="59.5472%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (748 samples, 0.67%)</title><rect x="59.2739%" y="885" width="0.6712%" height="15" fill="rgb(210,201,45)" fg:x="66056" fg:w="748"/><text x="59.5239%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,035 samples, 0.93%)</title><rect x="59.2254%" y="901" width="0.9287%" height="15" fill="rgb(252,185,21)" fg:x="66002" fg:w="1035"/><text x="59.4754%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (233 samples, 0.21%)</title><rect x="59.9451%" y="885" width="0.2091%" height="15" fill="rgb(223,131,1)" fg:x="66804" fg:w="233"/><text x="60.1951%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,044 samples, 0.94%)</title><rect x="59.2182%" y="933" width="0.9368%" height="15" fill="rgb(245,141,16)" fg:x="65994" fg:w="1044"/><text x="59.4682%" y="943.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,044 samples, 0.94%)</title><rect x="59.2182%" y="917" width="0.9368%" height="15" fill="rgb(229,55,45)" fg:x="65994" fg:w="1044"/><text x="59.4682%" y="927.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.02%)</title><rect x="60.1622%" y="597" width="0.0162%" height="15" fill="rgb(208,92,15)" fg:x="67046" fg:w="18"/><text x="60.4122%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::result::RResult&lt;T,E&gt; as core::convert::From&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::from (18 samples, 0.02%)</title><rect x="60.1622%" y="581" width="0.0162%" height="15" fill="rgb(234,185,47)" fg:x="67046" fg:w="18"/><text x="60.4122%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (15 samples, 0.01%)</title><rect x="60.1945%" y="565" width="0.0135%" height="15" fill="rgb(253,104,50)" fg:x="67082" fg:w="15"/><text x="60.4445%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (100 samples, 0.09%)</title><rect x="60.1847%" y="597" width="0.0897%" height="15" fill="rgb(205,70,7)" fg:x="67071" fg:w="100"/><text x="60.4347%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (89 samples, 0.08%)</title><rect x="60.1945%" y="581" width="0.0799%" height="15" fill="rgb(240,178,43)" fg:x="67082" fg:w="89"/><text x="60.4445%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (74 samples, 0.07%)</title><rect x="60.2080%" y="565" width="0.0664%" height="15" fill="rgb(214,112,2)" fg:x="67097" fg:w="74"/><text x="60.4580%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (74 samples, 0.07%)</title><rect x="60.2080%" y="549" width="0.0664%" height="15" fill="rgb(206,46,17)" fg:x="67097" fg:w="74"/><text x="60.4580%" y="559.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (74 samples, 0.07%)</title><rect x="60.2080%" y="533" width="0.0664%" height="15" fill="rgb(225,220,16)" fg:x="67097" fg:w="74"/><text x="60.4580%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (34 samples, 0.03%)</title><rect x="60.2439%" y="517" width="0.0305%" height="15" fill="rgb(238,65,40)" fg:x="67137" fg:w="34"/><text x="60.4939%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (34 samples, 0.03%)</title><rect x="60.2439%" y="501" width="0.0305%" height="15" fill="rgb(230,151,21)" fg:x="67137" fg:w="34"/><text x="60.4939%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (641 samples, 0.58%)</title><rect x="60.3175%" y="581" width="0.5752%" height="15" fill="rgb(218,58,49)" fg:x="67219" fg:w="641"/><text x="60.5675%" y="591.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (1,877 samples, 1.68%)</title><rect x="59.2182%" y="949" width="1.6843%" height="15" fill="rgb(219,179,14)" fg:x="65994" fg:w="1877"/><text x="59.4682%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (833 samples, 0.75%)</title><rect x="60.1551%" y="933" width="0.7475%" height="15" fill="rgb(223,72,1)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="943.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (833 samples, 0.75%)</title><rect x="60.1551%" y="917" width="0.7475%" height="15" fill="rgb(238,126,10)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="927.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (833 samples, 0.75%)</title><rect x="60.1551%" y="901" width="0.7475%" height="15" fill="rgb(224,206,38)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (833 samples, 0.75%)</title><rect x="60.1551%" y="885" width="0.7475%" height="15" fill="rgb(212,201,54)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="895.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (833 samples, 0.75%)</title><rect x="60.1551%" y="869" width="0.7475%" height="15" fill="rgb(218,154,48)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="879.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (833 samples, 0.75%)</title><rect x="60.1551%" y="853" width="0.7475%" height="15" fill="rgb(232,93,24)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="863.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (833 samples, 0.75%)</title><rect x="60.1551%" y="837" width="0.7475%" height="15" fill="rgb(245,30,21)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="847.50"></text></g><g><title>std::panic::catch_unwind (833 samples, 0.75%)</title><rect x="60.1551%" y="821" width="0.7475%" height="15" fill="rgb(242,148,29)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="831.50"></text></g><g><title>std::panicking::try (833 samples, 0.75%)</title><rect x="60.1551%" y="805" width="0.7475%" height="15" fill="rgb(244,153,54)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="815.50"></text></g><g><title>std::panicking::try::do_call (833 samples, 0.75%)</title><rect x="60.1551%" y="789" width="0.7475%" height="15" fill="rgb(252,87,22)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (833 samples, 0.75%)</title><rect x="60.1551%" y="773" width="0.7475%" height="15" fill="rgb(210,51,29)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (833 samples, 0.75%)</title><rect x="60.1551%" y="757" width="0.7475%" height="15" fill="rgb(242,136,47)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (833 samples, 0.75%)</title><rect x="60.1551%" y="741" width="0.7475%" height="15" fill="rgb(238,68,4)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="751.50"></text></g><g><title>async_ffi::FfiContext::with_context (833 samples, 0.75%)</title><rect x="60.1551%" y="725" width="0.7475%" height="15" fill="rgb(242,161,30)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="735.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (833 samples, 0.75%)</title><rect x="60.1551%" y="709" width="0.7475%" height="15" fill="rgb(218,58,44)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (833 samples, 0.75%)</title><rect x="60.1551%" y="693" width="0.7475%" height="15" fill="rgb(252,125,32)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="703.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (833 samples, 0.75%)</title><rect x="60.1551%" y="677" width="0.7475%" height="15" fill="rgb(219,178,0)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (833 samples, 0.75%)</title><rect x="60.1551%" y="661" width="0.7475%" height="15" fill="rgb(213,152,7)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="671.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (833 samples, 0.75%)</title><rect x="60.1551%" y="645" width="0.7475%" height="15" fill="rgb(249,109,34)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="655.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (833 samples, 0.75%)</title><rect x="60.1551%" y="629" width="0.7475%" height="15" fill="rgb(232,96,21)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (833 samples, 0.75%)</title><rect x="60.1551%" y="613" width="0.7475%" height="15" fill="rgb(228,27,39)" fg:x="67038" fg:w="833"/><text x="60.4051%" y="623.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (700 samples, 0.63%)</title><rect x="60.2744%" y="597" width="0.6281%" height="15" fill="rgb(211,182,52)" fg:x="67171" fg:w="700"/><text x="60.5244%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (96 samples, 0.09%)</title><rect x="60.9223%" y="853" width="0.0861%" height="15" fill="rgb(234,178,38)" fg:x="67893" fg:w="96"/><text x="61.1723%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="61.1107%" y="821" width="0.0126%" height="15" fill="rgb(221,111,3)" fg:x="68103" fg:w="14"/><text x="61.3607%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (402 samples, 0.36%)</title><rect x="61.2543%" y="773" width="0.3607%" height="15" fill="rgb(228,175,21)" fg:x="68263" fg:w="402"/><text x="61.5043%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (402 samples, 0.36%)</title><rect x="61.2543%" y="757" width="0.3607%" height="15" fill="rgb(228,174,43)" fg:x="68263" fg:w="402"/><text x="61.5043%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (368 samples, 0.33%)</title><rect x="61.6150%" y="773" width="0.3302%" height="15" fill="rgb(211,191,0)" fg:x="68665" fg:w="368"/><text x="61.8650%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (363 samples, 0.33%)</title><rect x="61.6195%" y="757" width="0.3257%" height="15" fill="rgb(253,117,3)" fg:x="68670" fg:w="363"/><text x="61.8695%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (915 samples, 0.82%)</title><rect x="61.1314%" y="805" width="0.8211%" height="15" fill="rgb(241,127,19)" fg:x="68126" fg:w="915"/><text x="61.3814%" y="815.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (867 samples, 0.78%)</title><rect x="61.1744%" y="789" width="0.7780%" height="15" fill="rgb(218,103,12)" fg:x="68174" fg:w="867"/><text x="61.4244%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (102 samples, 0.09%)</title><rect x="61.9695%" y="789" width="0.0915%" height="15" fill="rgb(236,214,43)" fg:x="69060" fg:w="102"/><text x="62.2195%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (93 samples, 0.08%)</title><rect x="61.9775%" y="773" width="0.0835%" height="15" fill="rgb(244,144,19)" fg:x="69069" fg:w="93"/><text x="62.2275%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.08%)</title><rect x="61.9775%" y="757" width="0.0835%" height="15" fill="rgb(246,188,10)" fg:x="69069" fg:w="93"/><text x="62.2275%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (93 samples, 0.08%)</title><rect x="61.9775%" y="741" width="0.0835%" height="15" fill="rgb(212,193,33)" fg:x="69069" fg:w="93"/><text x="62.2275%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (91 samples, 0.08%)</title><rect x="61.9793%" y="725" width="0.0817%" height="15" fill="rgb(241,51,29)" fg:x="69071" fg:w="91"/><text x="62.2293%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (91 samples, 0.08%)</title><rect x="61.9793%" y="709" width="0.0817%" height="15" fill="rgb(211,58,19)" fg:x="69071" fg:w="91"/><text x="62.2293%" y="719.50"></text></g><g><title>__GI___lll_lock_wake (12 samples, 0.01%)</title><rect x="62.0502%" y="693" width="0.0108%" height="15" fill="rgb(229,111,26)" fg:x="69150" fg:w="12"/><text x="62.3002%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (30 samples, 0.03%)</title><rect x="62.0610%" y="789" width="0.0269%" height="15" fill="rgb(213,115,40)" fg:x="69162" fg:w="30"/><text x="62.3110%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (30 samples, 0.03%)</title><rect x="62.0610%" y="773" width="0.0269%" height="15" fill="rgb(209,56,44)" fg:x="69162" fg:w="30"/><text x="62.3110%" y="783.50"></text></g><g><title>event_listener::Inner::lock (153 samples, 0.14%)</title><rect x="62.0897%" y="789" width="0.1373%" height="15" fill="rgb(230,108,32)" fg:x="69194" fg:w="153"/><text x="62.3397%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (151 samples, 0.14%)</title><rect x="62.0915%" y="773" width="0.1355%" height="15" fill="rgb(216,165,31)" fg:x="69196" fg:w="151"/><text x="62.3415%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (143 samples, 0.13%)</title><rect x="62.0987%" y="757" width="0.1283%" height="15" fill="rgb(218,122,21)" fg:x="69204" fg:w="143"/><text x="62.3487%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (141 samples, 0.13%)</title><rect x="62.1005%" y="741" width="0.1265%" height="15" fill="rgb(223,224,47)" fg:x="69206" fg:w="141"/><text x="62.3505%" y="751.50"></text></g><g><title>___pthread_mutex_lock (141 samples, 0.13%)</title><rect x="62.1005%" y="725" width="0.1265%" height="15" fill="rgb(238,102,44)" fg:x="69206" fg:w="141"/><text x="62.3505%" y="735.50"></text></g><g><title>__GI___lll_lock_wait (17 samples, 0.02%)</title><rect x="62.2117%" y="709" width="0.0153%" height="15" fill="rgb(236,46,40)" fg:x="69330" fg:w="17"/><text x="62.4617%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (56 samples, 0.05%)</title><rect x="62.2602%" y="693" width="0.0503%" height="15" fill="rgb(247,202,50)" fg:x="69384" fg:w="56"/><text x="62.5102%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="62.2602%" y="677" width="0.0503%" height="15" fill="rgb(209,99,20)" fg:x="69384" fg:w="56"/><text x="62.5102%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (56 samples, 0.05%)</title><rect x="62.2602%" y="661" width="0.0503%" height="15" fill="rgb(252,27,34)" fg:x="69384" fg:w="56"/><text x="62.5102%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (56 samples, 0.05%)</title><rect x="62.2602%" y="645" width="0.0503%" height="15" fill="rgb(215,206,23)" fg:x="69384" fg:w="56"/><text x="62.5102%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (56 samples, 0.05%)</title><rect x="62.2602%" y="629" width="0.0503%" height="15" fill="rgb(212,135,36)" fg:x="69384" fg:w="56"/><text x="62.5102%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (40 samples, 0.04%)</title><rect x="62.3104%" y="693" width="0.0359%" height="15" fill="rgb(240,189,1)" fg:x="69440" fg:w="40"/><text x="62.5604%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (40 samples, 0.04%)</title><rect x="62.3104%" y="677" width="0.0359%" height="15" fill="rgb(242,56,20)" fg:x="69440" fg:w="40"/><text x="62.5604%" y="687.50"></text></g><g><title>async_executor::State::notify (207 samples, 0.19%)</title><rect x="62.2485%" y="709" width="0.1857%" height="15" fill="rgb(247,132,33)" fg:x="69371" fg:w="207"/><text x="62.4985%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (98 samples, 0.09%)</title><rect x="62.3463%" y="693" width="0.0879%" height="15" fill="rgb(208,149,11)" fg:x="69480" fg:w="98"/><text x="62.5963%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (93 samples, 0.08%)</title><rect x="62.3508%" y="677" width="0.0835%" height="15" fill="rgb(211,33,11)" fg:x="69485" fg:w="93"/><text x="62.6008%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (88 samples, 0.08%)</title><rect x="62.3553%" y="661" width="0.0790%" height="15" fill="rgb(221,29,38)" fg:x="69490" fg:w="88"/><text x="62.6053%" y="671.50"></text></g><g><title>___pthread_mutex_lock (88 samples, 0.08%)</title><rect x="62.3553%" y="645" width="0.0790%" height="15" fill="rgb(206,182,49)" fg:x="69490" fg:w="88"/><text x="62.6053%" y="655.50"></text></g><g><title>__GI___lll_lock_wait (15 samples, 0.01%)</title><rect x="62.4208%" y="629" width="0.0135%" height="15" fill="rgb(216,140,1)" fg:x="69563" fg:w="15"/><text x="62.6708%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (73 samples, 0.07%)</title><rect x="62.4504%" y="677" width="0.0655%" height="15" fill="rgb(232,57,40)" fg:x="69596" fg:w="73"/><text x="62.7004%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (73 samples, 0.07%)</title><rect x="62.4504%" y="661" width="0.0655%" height="15" fill="rgb(224,186,18)" fg:x="69596" fg:w="73"/><text x="62.7004%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (25 samples, 0.02%)</title><rect x="62.5159%" y="677" width="0.0224%" height="15" fill="rgb(215,121,11)" fg:x="69669" fg:w="25"/><text x="62.7659%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_or (25 samples, 0.02%)</title><rect x="62.5159%" y="661" width="0.0224%" height="15" fill="rgb(245,147,10)" fg:x="69669" fg:w="25"/><text x="62.7659%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (117 samples, 0.10%)</title><rect x="62.4343%" y="709" width="0.1050%" height="15" fill="rgb(238,153,13)" fg:x="69578" fg:w="117"/><text x="62.6843%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (107 samples, 0.10%)</title><rect x="62.4432%" y="693" width="0.0960%" height="15" fill="rgb(233,108,0)" fg:x="69588" fg:w="107"/><text x="62.6932%" y="703.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (325 samples, 0.29%)</title><rect x="62.2485%" y="725" width="0.2916%" height="15" fill="rgb(212,157,17)" fg:x="69371" fg:w="325"/><text x="62.4985%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (79 samples, 0.07%)</title><rect x="62.5402%" y="725" width="0.0709%" height="15" fill="rgb(225,213,38)" fg:x="69696" fg:w="79"/><text x="62.7902%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (79 samples, 0.07%)</title><rect x="62.5402%" y="709" width="0.0709%" height="15" fill="rgb(248,16,11)" fg:x="69696" fg:w="79"/><text x="62.7902%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15 samples, 0.01%)</title><rect x="62.6110%" y="725" width="0.0135%" height="15" fill="rgb(241,33,4)" fg:x="69775" fg:w="15"/><text x="62.8610%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="62.6110%" y="709" width="0.0135%" height="15" fill="rgb(222,26,43)" fg:x="69775" fg:w="15"/><text x="62.8610%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (36 samples, 0.03%)</title><rect x="62.6478%" y="661" width="0.0323%" height="15" fill="rgb(243,29,36)" fg:x="69816" fg:w="36"/><text x="62.8978%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_swap (36 samples, 0.03%)</title><rect x="62.6478%" y="645" width="0.0323%" height="15" fill="rgb(241,9,27)" fg:x="69816" fg:w="36"/><text x="62.8978%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (33 samples, 0.03%)</title><rect x="62.6801%" y="661" width="0.0296%" height="15" fill="rgb(205,117,26)" fg:x="69852" fg:w="33"/><text x="62.9301%" y="671.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (33 samples, 0.03%)</title><rect x="62.6801%" y="645" width="0.0296%" height="15" fill="rgb(209,80,39)" fg:x="69852" fg:w="33"/><text x="62.9301%" y="655.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (33 samples, 0.03%)</title><rect x="62.6801%" y="629" width="0.0296%" height="15" fill="rgb(239,155,6)" fg:x="69852" fg:w="33"/><text x="62.9301%" y="639.50"></text></g><g><title>__GI___pthread_cond_signal (33 samples, 0.03%)</title><rect x="62.6801%" y="613" width="0.0296%" height="15" fill="rgb(212,104,12)" fg:x="69852" fg:w="33"/><text x="62.9301%" y="623.50"></text></g><g><title>parking::Inner::unpark (103 samples, 0.09%)</title><rect x="62.6389%" y="677" width="0.0924%" height="15" fill="rgb(234,204,3)" fg:x="69806" fg:w="103"/><text x="62.8889%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (24 samples, 0.02%)</title><rect x="62.7098%" y="661" width="0.0215%" height="15" fill="rgb(251,218,7)" fg:x="69885" fg:w="24"/><text x="62.9598%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (23 samples, 0.02%)</title><rect x="62.7106%" y="645" width="0.0206%" height="15" fill="rgb(221,81,32)" fg:x="69886" fg:w="23"/><text x="62.9606%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (23 samples, 0.02%)</title><rect x="62.7106%" y="629" width="0.0206%" height="15" fill="rgb(214,152,26)" fg:x="69886" fg:w="23"/><text x="62.9606%" y="639.50"></text></g><g><title>___pthread_mutex_lock (23 samples, 0.02%)</title><rect x="62.7106%" y="613" width="0.0206%" height="15" fill="rgb(223,22,3)" fg:x="69886" fg:w="23"/><text x="62.9606%" y="623.50"></text></g><g><title>parking::Unparker::unpark (115 samples, 0.10%)</title><rect x="62.6290%" y="693" width="0.1032%" height="15" fill="rgb(207,174,7)" fg:x="69795" fg:w="115"/><text x="62.8790%" y="703.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (124 samples, 0.11%)</title><rect x="62.6245%" y="709" width="0.1113%" height="15" fill="rgb(224,19,52)" fg:x="69790" fg:w="124"/><text x="62.8745%" y="719.50"></text></g><g><title>event_listener::List::notify (602 samples, 0.54%)</title><rect x="62.2270%" y="789" width="0.5402%" height="15" fill="rgb(228,24,14)" fg:x="69347" fg:w="602"/><text x="62.4770%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (593 samples, 0.53%)</title><rect x="62.2351%" y="773" width="0.5321%" height="15" fill="rgb(230,153,43)" fg:x="69356" fg:w="593"/><text x="62.4851%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (580 samples, 0.52%)</title><rect x="62.2467%" y="757" width="0.5205%" height="15" fill="rgb(231,106,12)" fg:x="69369" fg:w="580"/><text x="62.4967%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (579 samples, 0.52%)</title><rect x="62.2476%" y="741" width="0.5196%" height="15" fill="rgb(215,92,2)" fg:x="69370" fg:w="579"/><text x="62.4976%" y="751.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (159 samples, 0.14%)</title><rect x="62.6245%" y="725" width="0.1427%" height="15" fill="rgb(249,143,25)" fg:x="69790" fg:w="159"/><text x="62.8745%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (35 samples, 0.03%)</title><rect x="62.7358%" y="709" width="0.0314%" height="15" fill="rgb(252,7,35)" fg:x="69914" fg:w="35"/><text x="62.9858%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="62.7358%" y="693" width="0.0314%" height="15" fill="rgb(216,69,40)" fg:x="69914" fg:w="35"/><text x="62.9858%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (35 samples, 0.03%)</title><rect x="62.7358%" y="677" width="0.0314%" height="15" fill="rgb(240,36,33)" fg:x="69914" fg:w="35"/><text x="62.9858%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (35 samples, 0.03%)</title><rect x="62.7358%" y="661" width="0.0314%" height="15" fill="rgb(231,128,14)" fg:x="69914" fg:w="35"/><text x="62.9858%" y="671.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,579 samples, 2.31%)</title><rect x="61.1233%" y="821" width="2.3142%" height="15" fill="rgb(245,143,14)" fg:x="68117" fg:w="2579"/><text x="61.3733%" y="831.50">a..</text></g><g><title>event_listener::Event::notify (1,655 samples, 1.49%)</title><rect x="61.9524%" y="805" width="1.4851%" height="15" fill="rgb(222,130,28)" fg:x="69041" fg:w="1655"/><text x="62.2024%" y="815.50"></text></g><g><title>event_listener::full_fence (747 samples, 0.67%)</title><rect x="62.7672%" y="789" width="0.6703%" height="15" fill="rgb(212,10,48)" fg:x="69949" fg:w="747"/><text x="63.0172%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (736 samples, 0.66%)</title><rect x="62.7770%" y="773" width="0.6604%" height="15" fill="rgb(254,118,45)" fg:x="69960" fg:w="736"/><text x="63.0270%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (736 samples, 0.66%)</title><rect x="62.7770%" y="757" width="0.6604%" height="15" fill="rgb(228,6,45)" fg:x="69960" fg:w="736"/><text x="63.0270%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (16 samples, 0.01%)</title><rect x="63.4375%" y="821" width="0.0144%" height="15" fill="rgb(241,18,35)" fg:x="70696" fg:w="16"/><text x="63.6875%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (12 samples, 0.01%)</title><rect x="63.4518%" y="821" width="0.0108%" height="15" fill="rgb(227,214,53)" fg:x="70712" fg:w="12"/><text x="63.7018%" y="831.50"></text></g><g><title>core::mem::replace (12 samples, 0.01%)</title><rect x="63.4518%" y="805" width="0.0108%" height="15" fill="rgb(224,107,51)" fg:x="70712" fg:w="12"/><text x="63.7018%" y="815.50"></text></g><g><title>event_listener::Event::listen (20 samples, 0.02%)</title><rect x="63.4635%" y="821" width="0.0179%" height="15" fill="rgb(248,60,28)" fg:x="70725" fg:w="20"/><text x="63.7135%" y="831.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,869 samples, 2.57%)</title><rect x="61.0721%" y="837" width="2.5744%" height="15" fill="rgb(249,101,23)" fg:x="68060" fg:w="2869"/><text x="61.3221%" y="847.50">&lt;a..</text></g><g><title>event_listener::Event::notify (184 samples, 0.17%)</title><rect x="63.4815%" y="821" width="0.1651%" height="15" fill="rgb(228,51,19)" fg:x="70745" fg:w="184"/><text x="63.7315%" y="831.50"></text></g><g><title>event_listener::full_fence (164 samples, 0.15%)</title><rect x="63.4994%" y="805" width="0.1472%" height="15" fill="rgb(213,20,6)" fg:x="70765" fg:w="164"/><text x="63.7494%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (164 samples, 0.15%)</title><rect x="63.4994%" y="789" width="0.1472%" height="15" fill="rgb(212,124,10)" fg:x="70765" fg:w="164"/><text x="63.7494%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (164 samples, 0.15%)</title><rect x="63.4994%" y="773" width="0.1472%" height="15" fill="rgb(248,3,40)" fg:x="70765" fg:w="164"/><text x="63.7494%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,077 samples, 2.76%)</title><rect x="60.9025%" y="869" width="2.7611%" height="15" fill="rgb(223,178,23)" fg:x="67871" fg:w="3077"/><text x="61.1525%" y="879.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,959 samples, 2.66%)</title><rect x="61.0084%" y="853" width="2.6552%" height="15" fill="rgb(240,132,45)" fg:x="67989" fg:w="2959"/><text x="61.2584%" y="863.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="63.6466%" y="837" width="0.0170%" height="15" fill="rgb(245,164,36)" fg:x="70929" fg:w="19"/><text x="63.8966%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,094 samples, 2.78%)</title><rect x="60.9025%" y="901" width="2.7763%" height="15" fill="rgb(231,188,53)" fg:x="67871" fg:w="3094"/><text x="61.1525%" y="911.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,094 samples, 2.78%)</title><rect x="60.9025%" y="885" width="2.7763%" height="15" fill="rgb(237,198,39)" fg:x="67871" fg:w="3094"/><text x="61.1525%" y="895.50">tr..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (17 samples, 0.02%)</title><rect x="63.6636%" y="869" width="0.0153%" height="15" fill="rgb(223,120,35)" fg:x="70948" fg:w="17"/><text x="63.9136%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="64.4129%" y="885" width="0.0197%" height="15" fill="rgb(253,107,49)" fg:x="71783" fg:w="22"/><text x="64.6629%" y="895.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="64.4326%" y="885" width="0.0188%" height="15" fill="rgb(216,44,31)" fg:x="71805" fg:w="21"/><text x="64.6826%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="65.0069%" y="837" width="0.0135%" height="15" fill="rgb(253,87,21)" fg:x="72445" fg:w="15"/><text x="65.2569%" y="847.50"></text></g><g><title>aligned_size (18 samples, 0.02%)</title><rect x="65.0437%" y="613" width="0.0162%" height="15" fill="rgb(226,18,2)" fg:x="72486" fg:w="18"/><text x="65.2937%" y="623.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="65.0661%" y="581" width="0.0108%" height="15" fill="rgb(216,8,46)" fg:x="72511" fg:w="12"/><text x="65.3161%" y="591.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="65.0769%" y="581" width="0.0117%" height="15" fill="rgb(226,140,39)" fg:x="72523" fg:w="13"/><text x="65.3269%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (45 samples, 0.04%)</title><rect x="65.0931%" y="565" width="0.0404%" height="15" fill="rgb(221,194,54)" fg:x="72541" fg:w="45"/><text x="65.3431%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (45 samples, 0.04%)</title><rect x="65.0931%" y="549" width="0.0404%" height="15" fill="rgb(213,92,11)" fg:x="72541" fg:w="45"/><text x="65.3431%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (41 samples, 0.04%)</title><rect x="65.0966%" y="533" width="0.0368%" height="15" fill="rgb(229,162,46)" fg:x="72545" fg:w="41"/><text x="65.3466%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (33 samples, 0.03%)</title><rect x="65.1038%" y="517" width="0.0296%" height="15" fill="rgb(214,111,36)" fg:x="72553" fg:w="33"/><text x="65.3538%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (33 samples, 0.03%)</title><rect x="65.1038%" y="501" width="0.0296%" height="15" fill="rgb(207,6,21)" fg:x="72553" fg:w="33"/><text x="65.3538%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (33 samples, 0.03%)</title><rect x="65.1038%" y="485" width="0.0296%" height="15" fill="rgb(213,127,38)" fg:x="72553" fg:w="33"/><text x="65.3538%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (273 samples, 0.24%)</title><rect x="65.0652%" y="613" width="0.2450%" height="15" fill="rgb(238,118,32)" fg:x="72510" fg:w="273"/><text x="65.3152%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (272 samples, 0.24%)</title><rect x="65.0661%" y="597" width="0.2441%" height="15" fill="rgb(240,139,39)" fg:x="72511" fg:w="272"/><text x="65.3161%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (247 samples, 0.22%)</title><rect x="65.0886%" y="581" width="0.2216%" height="15" fill="rgb(235,10,37)" fg:x="72536" fg:w="247"/><text x="65.3386%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (185 samples, 0.17%)</title><rect x="65.1442%" y="565" width="0.1660%" height="15" fill="rgb(249,171,38)" fg:x="72598" fg:w="185"/><text x="65.3942%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (185 samples, 0.17%)</title><rect x="65.1442%" y="549" width="0.1660%" height="15" fill="rgb(242,144,32)" fg:x="72598" fg:w="185"/><text x="65.3942%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (324 samples, 0.29%)</title><rect x="65.0204%" y="725" width="0.2907%" height="15" fill="rgb(217,117,21)" fg:x="72460" fg:w="324"/><text x="65.2704%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (324 samples, 0.29%)</title><rect x="65.0204%" y="709" width="0.2907%" height="15" fill="rgb(249,87,1)" fg:x="72460" fg:w="324"/><text x="65.2704%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (324 samples, 0.29%)</title><rect x="65.0204%" y="693" width="0.2907%" height="15" fill="rgb(248,196,48)" fg:x="72460" fg:w="324"/><text x="65.2704%" y="703.50"></text></g><g><title>alloc::alloc::alloc (319 samples, 0.29%)</title><rect x="65.0249%" y="677" width="0.2862%" height="15" fill="rgb(251,206,33)" fg:x="72465" fg:w="319"/><text x="65.2749%" y="687.50"></text></g><g><title>__rg_alloc (319 samples, 0.29%)</title><rect x="65.0249%" y="661" width="0.2862%" height="15" fill="rgb(232,141,28)" fg:x="72465" fg:w="319"/><text x="65.2749%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (319 samples, 0.29%)</title><rect x="65.0249%" y="645" width="0.2862%" height="15" fill="rgb(209,167,14)" fg:x="72465" fg:w="319"/><text x="65.2749%" y="655.50"></text></g><g><title>rust_alloc (298 samples, 0.27%)</title><rect x="65.0437%" y="629" width="0.2674%" height="15" fill="rgb(225,11,50)" fg:x="72486" fg:w="298"/><text x="65.2937%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (325 samples, 0.29%)</title><rect x="65.0204%" y="757" width="0.2916%" height="15" fill="rgb(209,50,20)" fg:x="72460" fg:w="325"/><text x="65.2704%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (325 samples, 0.29%)</title><rect x="65.0204%" y="741" width="0.2916%" height="15" fill="rgb(212,17,46)" fg:x="72460" fg:w="325"/><text x="65.2704%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (419 samples, 0.38%)</title><rect x="65.0069%" y="853" width="0.3760%" height="15" fill="rgb(216,101,39)" fg:x="72445" fg:w="419"/><text x="65.2569%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (404 samples, 0.36%)</title><rect x="65.0204%" y="837" width="0.3625%" height="15" fill="rgb(212,228,48)" fg:x="72460" fg:w="404"/><text x="65.2704%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (404 samples, 0.36%)</title><rect x="65.0204%" y="821" width="0.3625%" height="15" fill="rgb(250,6,50)" fg:x="72460" fg:w="404"/><text x="65.2704%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (404 samples, 0.36%)</title><rect x="65.0204%" y="805" width="0.3625%" height="15" fill="rgb(250,160,48)" fg:x="72460" fg:w="404"/><text x="65.2704%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (404 samples, 0.36%)</title><rect x="65.0204%" y="789" width="0.3625%" height="15" fill="rgb(244,216,33)" fg:x="72460" fg:w="404"/><text x="65.2704%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (404 samples, 0.36%)</title><rect x="65.0204%" y="773" width="0.3625%" height="15" fill="rgb(207,157,5)" fg:x="72460" fg:w="404"/><text x="65.2704%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (79 samples, 0.07%)</title><rect x="65.3120%" y="757" width="0.0709%" height="15" fill="rgb(228,199,8)" fg:x="72785" fg:w="79"/><text x="65.5620%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (79 samples, 0.07%)</title><rect x="65.3120%" y="741" width="0.0709%" height="15" fill="rgb(227,80,20)" fg:x="72785" fg:w="79"/><text x="65.5620%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (61 samples, 0.05%)</title><rect x="65.3282%" y="725" width="0.0547%" height="15" fill="rgb(222,9,33)" fg:x="72803" fg:w="61"/><text x="65.5782%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (436 samples, 0.39%)</title><rect x="64.9988%" y="869" width="0.3912%" height="15" fill="rgb(239,44,28)" fg:x="72436" fg:w="436"/><text x="65.2488%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (24 samples, 0.02%)</title><rect x="65.4035%" y="853" width="0.0215%" height="15" fill="rgb(249,187,43)" fg:x="72887" fg:w="24"/><text x="65.6535%" y="863.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (24 samples, 0.02%)</title><rect x="65.4035%" y="837" width="0.0215%" height="15" fill="rgb(216,141,28)" fg:x="72887" fg:w="24"/><text x="65.6535%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (116 samples, 0.10%)</title><rect x="65.4529%" y="517" width="0.1041%" height="15" fill="rgb(230,154,53)" fg:x="72942" fg:w="116"/><text x="65.7029%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (112 samples, 0.10%)</title><rect x="65.4565%" y="501" width="0.1005%" height="15" fill="rgb(227,82,4)" fg:x="72946" fg:w="112"/><text x="65.7065%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (106 samples, 0.10%)</title><rect x="65.4619%" y="485" width="0.0951%" height="15" fill="rgb(220,107,16)" fg:x="72952" fg:w="106"/><text x="65.7119%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (94 samples, 0.08%)</title><rect x="65.4726%" y="469" width="0.0843%" height="15" fill="rgb(207,187,2)" fg:x="72964" fg:w="94"/><text x="65.7226%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (94 samples, 0.08%)</title><rect x="65.4726%" y="453" width="0.0843%" height="15" fill="rgb(210,162,52)" fg:x="72964" fg:w="94"/><text x="65.7226%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (142 samples, 0.13%)</title><rect x="65.4349%" y="661" width="0.1274%" height="15" fill="rgb(217,216,49)" fg:x="72922" fg:w="142"/><text x="65.6849%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (142 samples, 0.13%)</title><rect x="65.4349%" y="645" width="0.1274%" height="15" fill="rgb(218,146,49)" fg:x="72922" fg:w="142"/><text x="65.6849%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (142 samples, 0.13%)</title><rect x="65.4349%" y="629" width="0.1274%" height="15" fill="rgb(216,55,40)" fg:x="72922" fg:w="142"/><text x="65.6849%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (142 samples, 0.13%)</title><rect x="65.4349%" y="613" width="0.1274%" height="15" fill="rgb(208,196,21)" fg:x="72922" fg:w="142"/><text x="65.6849%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (142 samples, 0.13%)</title><rect x="65.4349%" y="597" width="0.1274%" height="15" fill="rgb(242,117,42)" fg:x="72922" fg:w="142"/><text x="65.6849%" y="607.50"></text></g><g><title>alloc::alloc::alloc (140 samples, 0.13%)</title><rect x="65.4367%" y="581" width="0.1256%" height="15" fill="rgb(210,11,23)" fg:x="72924" fg:w="140"/><text x="65.6867%" y="591.50"></text></g><g><title>__rg_alloc (140 samples, 0.13%)</title><rect x="65.4367%" y="565" width="0.1256%" height="15" fill="rgb(217,110,2)" fg:x="72924" fg:w="140"/><text x="65.6867%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (140 samples, 0.13%)</title><rect x="65.4367%" y="549" width="0.1256%" height="15" fill="rgb(229,77,54)" fg:x="72924" fg:w="140"/><text x="65.6867%" y="559.50"></text></g><g><title>rust_alloc (130 samples, 0.12%)</title><rect x="65.4457%" y="533" width="0.1167%" height="15" fill="rgb(218,53,16)" fg:x="72934" fg:w="130"/><text x="65.6957%" y="543.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (187 samples, 0.17%)</title><rect x="65.4251%" y="773" width="0.1678%" height="15" fill="rgb(215,38,13)" fg:x="72911" fg:w="187"/><text x="65.6751%" y="783.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (187 samples, 0.17%)</title><rect x="65.4251%" y="757" width="0.1678%" height="15" fill="rgb(235,42,18)" fg:x="72911" fg:w="187"/><text x="65.6751%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (176 samples, 0.16%)</title><rect x="65.4349%" y="741" width="0.1579%" height="15" fill="rgb(219,66,54)" fg:x="72922" fg:w="176"/><text x="65.6849%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (176 samples, 0.16%)</title><rect x="65.4349%" y="725" width="0.1579%" height="15" fill="rgb(222,205,4)" fg:x="72922" fg:w="176"/><text x="65.6849%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (176 samples, 0.16%)</title><rect x="65.4349%" y="709" width="0.1579%" height="15" fill="rgb(227,213,46)" fg:x="72922" fg:w="176"/><text x="65.6849%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (176 samples, 0.16%)</title><rect x="65.4349%" y="693" width="0.1579%" height="15" fill="rgb(250,145,42)" fg:x="72922" fg:w="176"/><text x="65.6849%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (176 samples, 0.16%)</title><rect x="65.4349%" y="677" width="0.1579%" height="15" fill="rgb(219,15,2)" fg:x="72922" fg:w="176"/><text x="65.6849%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (34 samples, 0.03%)</title><rect x="65.5624%" y="661" width="0.0305%" height="15" fill="rgb(231,181,52)" fg:x="73064" fg:w="34"/><text x="65.8124%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.03%)</title><rect x="65.5624%" y="645" width="0.0305%" height="15" fill="rgb(235,1,42)" fg:x="73064" fg:w="34"/><text x="65.8124%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (28 samples, 0.03%)</title><rect x="65.5677%" y="629" width="0.0251%" height="15" fill="rgb(249,88,27)" fg:x="73070" fg:w="28"/><text x="65.8177%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="65.5929%" y="773" width="0.0108%" height="15" fill="rgb(235,145,16)" fg:x="73098" fg:w="12"/><text x="65.8429%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (154 samples, 0.14%)</title><rect x="65.6261%" y="629" width="0.1382%" height="15" fill="rgb(237,114,19)" fg:x="73135" fg:w="154"/><text x="65.8761%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (154 samples, 0.14%)</title><rect x="65.6261%" y="613" width="0.1382%" height="15" fill="rgb(238,51,50)" fg:x="73135" fg:w="154"/><text x="65.8761%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (144 samples, 0.13%)</title><rect x="65.6350%" y="597" width="0.1292%" height="15" fill="rgb(205,194,25)" fg:x="73145" fg:w="144"/><text x="65.8850%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::take (139 samples, 0.12%)</title><rect x="65.6395%" y="581" width="0.1247%" height="15" fill="rgb(215,203,17)" fg:x="73150" fg:w="139"/><text x="65.8895%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (139 samples, 0.12%)</title><rect x="65.6395%" y="565" width="0.1247%" height="15" fill="rgb(233,112,49)" fg:x="73150" fg:w="139"/><text x="65.8895%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (180 samples, 0.16%)</title><rect x="65.6099%" y="725" width="0.1615%" height="15" fill="rgb(241,130,26)" fg:x="73117" fg:w="180"/><text x="65.8599%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (180 samples, 0.16%)</title><rect x="65.6099%" y="709" width="0.1615%" height="15" fill="rgb(252,223,19)" fg:x="73117" fg:w="180"/><text x="65.8599%" y="719.50"></text></g><g><title>alloc::alloc::alloc (174 samples, 0.16%)</title><rect x="65.6153%" y="693" width="0.1561%" height="15" fill="rgb(211,95,25)" fg:x="73123" fg:w="174"/><text x="65.8653%" y="703.50"></text></g><g><title>__rg_alloc (174 samples, 0.16%)</title><rect x="65.6153%" y="677" width="0.1561%" height="15" fill="rgb(251,182,27)" fg:x="73123" fg:w="174"/><text x="65.8653%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (174 samples, 0.16%)</title><rect x="65.6153%" y="661" width="0.1561%" height="15" fill="rgb(238,24,4)" fg:x="73123" fg:w="174"/><text x="65.8653%" y="671.50"></text></g><g><title>rust_alloc (169 samples, 0.15%)</title><rect x="65.6198%" y="645" width="0.1516%" height="15" fill="rgb(224,220,25)" fg:x="73128" fg:w="169"/><text x="65.8698%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (190 samples, 0.17%)</title><rect x="65.6081%" y="773" width="0.1705%" height="15" fill="rgb(239,133,26)" fg:x="73115" fg:w="190"/><text x="65.8581%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (190 samples, 0.17%)</title><rect x="65.6081%" y="757" width="0.1705%" height="15" fill="rgb(211,94,48)" fg:x="73115" fg:w="190"/><text x="65.8581%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (188 samples, 0.17%)</title><rect x="65.6099%" y="741" width="0.1687%" height="15" fill="rgb(239,87,6)" fg:x="73117" fg:w="188"/><text x="65.8599%" y="751.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,487 samples, 1.33%)</title><rect x="64.4515%" y="885" width="1.3343%" height="15" fill="rgb(227,62,0)" fg:x="71826" fg:w="1487"/><text x="64.7015%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (441 samples, 0.40%)</title><rect x="65.3901%" y="869" width="0.3957%" height="15" fill="rgb(211,226,4)" fg:x="72872" fg:w="441"/><text x="65.6401%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (402 samples, 0.36%)</title><rect x="65.4251%" y="853" width="0.3607%" height="15" fill="rgb(253,38,52)" fg:x="72911" fg:w="402"/><text x="65.6751%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (402 samples, 0.36%)</title><rect x="65.4251%" y="837" width="0.3607%" height="15" fill="rgb(229,126,40)" fg:x="72911" fg:w="402"/><text x="65.6751%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (402 samples, 0.36%)</title><rect x="65.4251%" y="821" width="0.3607%" height="15" fill="rgb(229,165,44)" fg:x="72911" fg:w="402"/><text x="65.6751%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (402 samples, 0.36%)</title><rect x="65.4251%" y="805" width="0.3607%" height="15" fill="rgb(247,95,47)" fg:x="72911" fg:w="402"/><text x="65.6751%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (402 samples, 0.36%)</title><rect x="65.4251%" y="789" width="0.3607%" height="15" fill="rgb(216,140,30)" fg:x="72911" fg:w="402"/><text x="65.6751%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (182 samples, 0.16%)</title><rect x="65.7858%" y="885" width="0.1633%" height="15" fill="rgb(246,214,8)" fg:x="73313" fg:w="182"/><text x="66.0358%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (388 samples, 0.35%)</title><rect x="65.9572%" y="885" width="0.3482%" height="15" fill="rgb(227,224,15)" fg:x="73504" fg:w="388"/><text x="66.2072%" y="895.50"></text></g><g><title>core::ptr::write (365 samples, 0.33%)</title><rect x="65.9778%" y="869" width="0.3275%" height="15" fill="rgb(233,175,4)" fg:x="73527" fg:w="365"/><text x="66.2278%" y="879.50"></text></g><g><title>__memcpy_avx_unaligned_erms (356 samples, 0.32%)</title><rect x="65.9859%" y="853" width="0.3194%" height="15" fill="rgb(221,66,45)" fg:x="73536" fg:w="356"/><text x="66.2359%" y="863.50"></text></g><g><title>aligned_size (18 samples, 0.02%)</title><rect x="66.3242%" y="725" width="0.0162%" height="15" fill="rgb(221,178,18)" fg:x="73913" fg:w="18"/><text x="66.5742%" y="735.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (23 samples, 0.02%)</title><rect x="66.3753%" y="565" width="0.0206%" height="15" fill="rgb(213,81,29)" fg:x="73970" fg:w="23"/><text x="66.6253%" y="575.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (23 samples, 0.02%)</title><rect x="66.3753%" y="549" width="0.0206%" height="15" fill="rgb(220,89,49)" fg:x="73970" fg:w="23"/><text x="66.6253%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (52 samples, 0.05%)</title><rect x="66.3628%" y="613" width="0.0467%" height="15" fill="rgb(227,60,33)" fg:x="73956" fg:w="52"/><text x="66.6128%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (52 samples, 0.05%)</title><rect x="66.3628%" y="597" width="0.0467%" height="15" fill="rgb(205,113,12)" fg:x="73956" fg:w="52"/><text x="66.6128%" y="607.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (50 samples, 0.04%)</title><rect x="66.3646%" y="581" width="0.0449%" height="15" fill="rgb(211,32,1)" fg:x="73958" fg:w="50"/><text x="66.6146%" y="591.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="66.3960%" y="565" width="0.0135%" height="15" fill="rgb(246,2,12)" fg:x="73993" fg:w="15"/><text x="66.6460%" y="575.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="66.3960%" y="549" width="0.0135%" height="15" fill="rgb(243,37,27)" fg:x="73993" fg:w="15"/><text x="66.6460%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (62 samples, 0.06%)</title><rect x="66.3628%" y="629" width="0.0556%" height="15" fill="rgb(248,211,31)" fg:x="73956" fg:w="62"/><text x="66.6128%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (86 samples, 0.08%)</title><rect x="66.3538%" y="645" width="0.0772%" height="15" fill="rgb(242,146,47)" fg:x="73946" fg:w="86"/><text x="66.6038%" y="655.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="66.4184%" y="629" width="0.0126%" height="15" fill="rgb(206,70,20)" fg:x="74018" fg:w="14"/><text x="66.6684%" y="639.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="66.4184%" y="613" width="0.0126%" height="15" fill="rgb(215,10,51)" fg:x="74018" fg:w="14"/><text x="66.6684%" y="623.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (14 samples, 0.01%)</title><rect x="66.4184%" y="597" width="0.0126%" height="15" fill="rgb(243,178,53)" fg:x="74018" fg:w="14"/><text x="66.6684%" y="607.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="66.4184%" y="581" width="0.0126%" height="15" fill="rgb(233,221,20)" fg:x="74018" fg:w="14"/><text x="66.6684%" y="591.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (66 samples, 0.06%)</title><rect x="66.4615%" y="629" width="0.0592%" height="15" fill="rgb(218,95,35)" fg:x="74066" fg:w="66"/><text x="66.7115%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (643 samples, 0.58%)</title><rect x="66.3538%" y="677" width="0.5770%" height="15" fill="rgb(229,13,5)" fg:x="73946" fg:w="643"/><text x="66.6038%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (643 samples, 0.58%)</title><rect x="66.3538%" y="661" width="0.5770%" height="15" fill="rgb(252,164,30)" fg:x="73946" fg:w="643"/><text x="66.6038%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (557 samples, 0.50%)</title><rect x="66.4310%" y="645" width="0.4998%" height="15" fill="rgb(232,68,36)" fg:x="74032" fg:w="557"/><text x="66.6810%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (457 samples, 0.41%)</title><rect x="66.5207%" y="629" width="0.4101%" height="15" fill="rgb(219,59,54)" fg:x="74132" fg:w="457"/><text x="66.7707%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (457 samples, 0.41%)</title><rect x="66.5207%" y="613" width="0.4101%" height="15" fill="rgb(250,92,33)" fg:x="74132" fg:w="457"/><text x="66.7707%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (457 samples, 0.41%)</title><rect x="66.5207%" y="597" width="0.4101%" height="15" fill="rgb(229,162,54)" fg:x="74132" fg:w="457"/><text x="66.7707%" y="607.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (12 samples, 0.01%)</title><rect x="66.9344%" y="645" width="0.0108%" height="15" fill="rgb(244,114,52)" fg:x="74593" fg:w="12"/><text x="67.1844%" y="655.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (12 samples, 0.01%)</title><rect x="66.9344%" y="629" width="0.0108%" height="15" fill="rgb(212,211,43)" fg:x="74593" fg:w="12"/><text x="67.1844%" y="639.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="66.9344%" y="613" width="0.0108%" height="15" fill="rgb(226,147,8)" fg:x="74593" fg:w="12"/><text x="67.1844%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::take (26 samples, 0.02%)</title><rect x="66.9451%" y="645" width="0.0233%" height="15" fill="rgb(226,23,13)" fg:x="74605" fg:w="26"/><text x="67.1951%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (26 samples, 0.02%)</title><rect x="66.9451%" y="629" width="0.0233%" height="15" fill="rgb(240,63,4)" fg:x="74605" fg:w="26"/><text x="67.1951%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.04%)</title><rect x="66.9308%" y="677" width="0.0440%" height="15" fill="rgb(221,1,32)" fg:x="74589" fg:w="49"/><text x="67.1808%" y="687.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (48 samples, 0.04%)</title><rect x="66.9317%" y="661" width="0.0431%" height="15" fill="rgb(242,117,10)" fg:x="74590" fg:w="48"/><text x="67.1817%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (835 samples, 0.75%)</title><rect x="66.3403%" y="725" width="0.7493%" height="15" fill="rgb(249,172,44)" fg:x="73931" fg:w="835"/><text x="66.5903%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (835 samples, 0.75%)</title><rect x="66.3403%" y="709" width="0.7493%" height="15" fill="rgb(244,46,45)" fg:x="73931" fg:w="835"/><text x="66.5903%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (825 samples, 0.74%)</title><rect x="66.3493%" y="693" width="0.7403%" height="15" fill="rgb(206,43,17)" fg:x="73941" fg:w="825"/><text x="66.5993%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (119 samples, 0.11%)</title><rect x="66.9828%" y="677" width="0.1068%" height="15" fill="rgb(239,218,39)" fg:x="74647" fg:w="119"/><text x="67.2328%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (119 samples, 0.11%)</title><rect x="66.9828%" y="661" width="0.1068%" height="15" fill="rgb(208,169,54)" fg:x="74647" fg:w="119"/><text x="67.2328%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (864 samples, 0.78%)</title><rect x="66.3152%" y="821" width="0.7753%" height="15" fill="rgb(247,25,42)" fg:x="73903" fg:w="864"/><text x="66.5652%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (864 samples, 0.78%)</title><rect x="66.3152%" y="805" width="0.7753%" height="15" fill="rgb(226,23,31)" fg:x="73903" fg:w="864"/><text x="66.5652%" y="815.50"></text></g><g><title>alloc::alloc::alloc (860 samples, 0.77%)</title><rect x="66.3188%" y="789" width="0.7717%" height="15" fill="rgb(247,16,28)" fg:x="73907" fg:w="860"/><text x="66.5688%" y="799.50"></text></g><g><title>__rg_alloc (860 samples, 0.77%)</title><rect x="66.3188%" y="773" width="0.7717%" height="15" fill="rgb(231,147,38)" fg:x="73907" fg:w="860"/><text x="66.5688%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (860 samples, 0.77%)</title><rect x="66.3188%" y="757" width="0.7717%" height="15" fill="rgb(253,81,48)" fg:x="73907" fg:w="860"/><text x="66.5688%" y="767.50"></text></g><g><title>rust_alloc (854 samples, 0.77%)</title><rect x="66.3242%" y="741" width="0.7663%" height="15" fill="rgb(249,222,43)" fg:x="73913" fg:w="854"/><text x="66.5742%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (885 samples, 0.79%)</title><rect x="66.3053%" y="885" width="0.7941%" height="15" fill="rgb(221,3,27)" fg:x="73892" fg:w="885"/><text x="66.5553%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (885 samples, 0.79%)</title><rect x="66.3053%" y="869" width="0.7941%" height="15" fill="rgb(228,180,5)" fg:x="73892" fg:w="885"/><text x="66.5553%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (874 samples, 0.78%)</title><rect x="66.3152%" y="853" width="0.7843%" height="15" fill="rgb(227,131,42)" fg:x="73903" fg:w="874"/><text x="66.5652%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (874 samples, 0.78%)</title><rect x="66.3152%" y="837" width="0.7843%" height="15" fill="rgb(212,3,39)" fg:x="73903" fg:w="874"/><text x="66.5652%" y="847.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="67.1058%" y="709" width="0.0108%" height="15" fill="rgb(226,45,5)" fg:x="74784" fg:w="12"/><text x="67.3558%" y="719.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="67.1533%" y="581" width="0.0188%" height="15" fill="rgb(215,167,45)" fg:x="74837" fg:w="21"/><text x="67.4033%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="67.1578%" y="565" width="0.0144%" height="15" fill="rgb(250,218,53)" fg:x="74842" fg:w="16"/><text x="67.4078%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (60 samples, 0.05%)</title><rect x="67.1273%" y="629" width="0.0538%" height="15" fill="rgb(207,140,0)" fg:x="74808" fg:w="60"/><text x="67.3773%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (60 samples, 0.05%)</title><rect x="67.1273%" y="613" width="0.0538%" height="15" fill="rgb(238,133,51)" fg:x="74808" fg:w="60"/><text x="67.3773%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (60 samples, 0.05%)</title><rect x="67.1273%" y="597" width="0.0538%" height="15" fill="rgb(218,203,53)" fg:x="74808" fg:w="60"/><text x="67.3773%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (76 samples, 0.07%)</title><rect x="67.1201%" y="661" width="0.0682%" height="15" fill="rgb(226,184,25)" fg:x="74800" fg:w="76"/><text x="67.3701%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (76 samples, 0.07%)</title><rect x="67.1201%" y="645" width="0.0682%" height="15" fill="rgb(231,121,21)" fg:x="74800" fg:w="76"/><text x="67.3701%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (79 samples, 0.07%)</title><rect x="67.1201%" y="693" width="0.0709%" height="15" fill="rgb(251,14,34)" fg:x="74800" fg:w="79"/><text x="67.3701%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (79 samples, 0.07%)</title><rect x="67.1201%" y="677" width="0.0709%" height="15" fill="rgb(249,193,11)" fg:x="74800" fg:w="79"/><text x="67.3701%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (89 samples, 0.08%)</title><rect x="67.1165%" y="709" width="0.0799%" height="15" fill="rgb(220,172,37)" fg:x="74796" fg:w="89"/><text x="67.3665%" y="719.50"></text></g><g><title>rust_dealloc (111 samples, 0.10%)</title><rect x="67.1058%" y="725" width="0.0996%" height="15" fill="rgb(231,229,43)" fg:x="74784" fg:w="111"/><text x="67.3558%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (117 samples, 0.10%)</title><rect x="67.1031%" y="789" width="0.1050%" height="15" fill="rgb(250,161,5)" fg:x="74781" fg:w="117"/><text x="67.3531%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (117 samples, 0.10%)</title><rect x="67.1031%" y="773" width="0.1050%" height="15" fill="rgb(218,225,18)" fg:x="74781" fg:w="117"/><text x="67.3531%" y="783.50"></text></g><g><title>__rg_dealloc (117 samples, 0.10%)</title><rect x="67.1031%" y="757" width="0.1050%" height="15" fill="rgb(245,45,42)" fg:x="74781" fg:w="117"/><text x="67.3531%" y="767.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (117 samples, 0.10%)</title><rect x="67.1031%" y="741" width="0.1050%" height="15" fill="rgb(211,115,1)" fg:x="74781" fg:w="117"/><text x="67.3531%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (126 samples, 0.11%)</title><rect x="67.1031%" y="853" width="0.1131%" height="15" fill="rgb(248,133,52)" fg:x="74781" fg:w="126"/><text x="67.3531%" y="863.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (126 samples, 0.11%)</title><rect x="67.1031%" y="837" width="0.1131%" height="15" fill="rgb(238,100,21)" fg:x="74781" fg:w="126"/><text x="67.3531%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (126 samples, 0.11%)</title><rect x="67.1031%" y="821" width="0.1131%" height="15" fill="rgb(247,144,11)" fg:x="74781" fg:w="126"/><text x="67.3531%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (126 samples, 0.11%)</title><rect x="67.1031%" y="805" width="0.1131%" height="15" fill="rgb(206,164,16)" fg:x="74781" fg:w="126"/><text x="67.3531%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (136 samples, 0.12%)</title><rect x="67.0995%" y="885" width="0.1220%" height="15" fill="rgb(222,34,3)" fg:x="74777" fg:w="136"/><text x="67.3495%" y="895.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (136 samples, 0.12%)</title><rect x="67.0995%" y="869" width="0.1220%" height="15" fill="rgb(248,82,4)" fg:x="74777" fg:w="136"/><text x="67.3495%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (19 samples, 0.02%)</title><rect x="67.2314%" y="821" width="0.0170%" height="15" fill="rgb(228,81,46)" fg:x="74924" fg:w="19"/><text x="67.4814%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (19 samples, 0.02%)</title><rect x="67.2314%" y="805" width="0.0170%" height="15" fill="rgb(227,67,47)" fg:x="74924" fg:w="19"/><text x="67.4814%" y="815.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="67.2368%" y="789" width="0.0117%" height="15" fill="rgb(215,93,53)" fg:x="74930" fg:w="13"/><text x="67.4868%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="67.2368%" y="773" width="0.0117%" height="15" fill="rgb(248,194,39)" fg:x="74930" fg:w="13"/><text x="67.4868%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="67.2368%" y="757" width="0.0117%" height="15" fill="rgb(215,5,19)" fg:x="74930" fg:w="13"/><text x="67.4868%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="67.2368%" y="741" width="0.0117%" height="15" fill="rgb(226,215,51)" fg:x="74930" fg:w="13"/><text x="67.4868%" y="751.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="67.2484%" y="805" width="0.0126%" height="15" fill="rgb(225,56,26)" fg:x="74943" fg:w="14"/><text x="67.4984%" y="815.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (28 samples, 0.03%)</title><rect x="67.3301%" y="677" width="0.0251%" height="15" fill="rgb(222,75,29)" fg:x="75034" fg:w="28"/><text x="67.5801%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (23 samples, 0.02%)</title><rect x="67.3346%" y="661" width="0.0206%" height="15" fill="rgb(236,139,6)" fg:x="75039" fg:w="23"/><text x="67.5846%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (74 samples, 0.07%)</title><rect x="67.3014%" y="725" width="0.0664%" height="15" fill="rgb(223,137,36)" fg:x="75002" fg:w="74"/><text x="67.5514%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (74 samples, 0.07%)</title><rect x="67.3014%" y="709" width="0.0664%" height="15" fill="rgb(226,99,2)" fg:x="75002" fg:w="74"/><text x="67.5514%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (71 samples, 0.06%)</title><rect x="67.3041%" y="693" width="0.0637%" height="15" fill="rgb(206,133,23)" fg:x="75005" fg:w="71"/><text x="67.5541%" y="703.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="67.3552%" y="677" width="0.0126%" height="15" fill="rgb(243,173,15)" fg:x="75062" fg:w="14"/><text x="67.6052%" y="687.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="67.3552%" y="661" width="0.0126%" height="15" fill="rgb(228,69,28)" fg:x="75062" fg:w="14"/><text x="67.6052%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (114 samples, 0.10%)</title><rect x="67.2807%" y="757" width="0.1023%" height="15" fill="rgb(212,51,22)" fg:x="74979" fg:w="114"/><text x="67.5307%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (114 samples, 0.10%)</title><rect x="67.2807%" y="741" width="0.1023%" height="15" fill="rgb(227,113,0)" fg:x="74979" fg:w="114"/><text x="67.5307%" y="751.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (17 samples, 0.02%)</title><rect x="67.3678%" y="725" width="0.0153%" height="15" fill="rgb(252,84,27)" fg:x="75076" fg:w="17"/><text x="67.6178%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (121 samples, 0.11%)</title><rect x="67.2807%" y="789" width="0.1086%" height="15" fill="rgb(223,145,39)" fg:x="74979" fg:w="121"/><text x="67.5307%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (121 samples, 0.11%)</title><rect x="67.2807%" y="773" width="0.1086%" height="15" fill="rgb(239,219,30)" fg:x="74979" fg:w="121"/><text x="67.5307%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (150 samples, 0.13%)</title><rect x="67.2655%" y="805" width="0.1346%" height="15" fill="rgb(224,196,39)" fg:x="74962" fg:w="150"/><text x="67.5155%" y="815.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="67.3893%" y="789" width="0.0108%" height="15" fill="rgb(205,35,43)" fg:x="75100" fg:w="12"/><text x="67.6393%" y="799.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="67.3893%" y="773" width="0.0108%" height="15" fill="rgb(228,201,21)" fg:x="75100" fg:w="12"/><text x="67.6393%" y="783.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="67.3893%" y="757" width="0.0108%" height="15" fill="rgb(237,118,16)" fg:x="75100" fg:w="12"/><text x="67.6393%" y="767.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="67.3893%" y="741" width="0.0108%" height="15" fill="rgb(241,17,19)" fg:x="75100" fg:w="12"/><text x="67.6393%" y="751.50"></text></g><g><title>rust_dealloc (178 samples, 0.16%)</title><rect x="67.2484%" y="821" width="0.1597%" height="15" fill="rgb(214,10,25)" fg:x="74943" fg:w="178"/><text x="67.4984%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (211 samples, 0.19%)</title><rect x="67.2215%" y="869" width="0.1893%" height="15" fill="rgb(238,37,29)" fg:x="74913" fg:w="211"/><text x="67.4715%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (211 samples, 0.19%)</title><rect x="67.2215%" y="853" width="0.1893%" height="15" fill="rgb(253,83,25)" fg:x="74913" fg:w="211"/><text x="67.4715%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (211 samples, 0.19%)</title><rect x="67.2215%" y="837" width="0.1893%" height="15" fill="rgb(234,192,12)" fg:x="74913" fg:w="211"/><text x="67.4715%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (25 samples, 0.02%)</title><rect x="67.4728%" y="693" width="0.0224%" height="15" fill="rgb(241,216,45)" fg:x="75193" fg:w="25"/><text x="67.7228%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (25 samples, 0.02%)</title><rect x="67.4728%" y="677" width="0.0224%" height="15" fill="rgb(242,22,33)" fg:x="75193" fg:w="25"/><text x="67.7228%" y="687.50"></text></g><g><title>core::mem::drop (15 samples, 0.01%)</title><rect x="67.4817%" y="661" width="0.0135%" height="15" fill="rgb(231,105,49)" fg:x="75203" fg:w="15"/><text x="67.7317%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="67.4817%" y="645" width="0.0135%" height="15" fill="rgb(218,204,15)" fg:x="75203" fg:w="15"/><text x="67.7317%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="67.4817%" y="629" width="0.0135%" height="15" fill="rgb(235,138,41)" fg:x="75203" fg:w="15"/><text x="67.7317%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="67.4817%" y="613" width="0.0135%" height="15" fill="rgb(246,0,9)" fg:x="75203" fg:w="15"/><text x="67.7317%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="67.4817%" y="597" width="0.0135%" height="15" fill="rgb(210,74,4)" fg:x="75203" fg:w="15"/><text x="67.7317%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="67.4817%" y="581" width="0.0135%" height="15" fill="rgb(250,60,41)" fg:x="75203" fg:w="15"/><text x="67.7317%" y="591.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="67.4817%" y="565" width="0.0135%" height="15" fill="rgb(220,115,12)" fg:x="75203" fg:w="15"/><text x="67.7317%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="67.4817%" y="549" width="0.0135%" height="15" fill="rgb(237,100,13)" fg:x="75203" fg:w="15"/><text x="67.7317%" y="559.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (28 samples, 0.03%)</title><rect x="67.5383%" y="549" width="0.0251%" height="15" fill="rgb(213,55,26)" fg:x="75266" fg:w="28"/><text x="67.7883%" y="559.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (27 samples, 0.02%)</title><rect x="67.5392%" y="533" width="0.0242%" height="15" fill="rgb(216,17,4)" fg:x="75267" fg:w="27"/><text x="67.7892%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (54 samples, 0.05%)</title><rect x="67.5194%" y="597" width="0.0485%" height="15" fill="rgb(220,153,47)" fg:x="75245" fg:w="54"/><text x="67.7694%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (54 samples, 0.05%)</title><rect x="67.5194%" y="581" width="0.0485%" height="15" fill="rgb(215,131,9)" fg:x="75245" fg:w="54"/><text x="67.7694%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (50 samples, 0.04%)</title><rect x="67.5230%" y="565" width="0.0449%" height="15" fill="rgb(233,46,42)" fg:x="75249" fg:w="50"/><text x="67.7730%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (69 samples, 0.06%)</title><rect x="67.5105%" y="629" width="0.0619%" height="15" fill="rgb(226,86,7)" fg:x="75235" fg:w="69"/><text x="67.7605%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (69 samples, 0.06%)</title><rect x="67.5105%" y="613" width="0.0619%" height="15" fill="rgb(239,226,21)" fg:x="75235" fg:w="69"/><text x="67.7605%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (70 samples, 0.06%)</title><rect x="67.5105%" y="661" width="0.0628%" height="15" fill="rgb(244,137,22)" fg:x="75235" fg:w="70"/><text x="67.7605%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (70 samples, 0.06%)</title><rect x="67.5105%" y="645" width="0.0628%" height="15" fill="rgb(211,139,35)" fg:x="75235" fg:w="70"/><text x="67.7605%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (82 samples, 0.07%)</title><rect x="67.5015%" y="677" width="0.0736%" height="15" fill="rgb(214,62,50)" fg:x="75225" fg:w="82"/><text x="67.7515%" y="687.50"></text></g><g><title>rust_dealloc (92 samples, 0.08%)</title><rect x="67.4952%" y="693" width="0.0826%" height="15" fill="rgb(212,113,44)" fg:x="75218" fg:w="92"/><text x="67.7452%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (138 samples, 0.12%)</title><rect x="67.4593%" y="709" width="0.1238%" height="15" fill="rgb(226,150,43)" fg:x="75178" fg:w="138"/><text x="67.7093%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (168 samples, 0.15%)</title><rect x="67.4351%" y="773" width="0.1508%" height="15" fill="rgb(250,71,37)" fg:x="75151" fg:w="168"/><text x="67.6851%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (164 samples, 0.15%)</title><rect x="67.4387%" y="757" width="0.1472%" height="15" fill="rgb(219,76,19)" fg:x="75155" fg:w="164"/><text x="67.6887%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (141 samples, 0.13%)</title><rect x="67.4593%" y="741" width="0.1265%" height="15" fill="rgb(250,39,11)" fg:x="75178" fg:w="141"/><text x="67.7093%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (141 samples, 0.13%)</title><rect x="67.4593%" y="725" width="0.1265%" height="15" fill="rgb(230,64,31)" fg:x="75178" fg:w="141"/><text x="67.7093%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (210 samples, 0.19%)</title><rect x="67.4162%" y="837" width="0.1884%" height="15" fill="rgb(208,222,23)" fg:x="75130" fg:w="210"/><text x="67.6662%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (204 samples, 0.18%)</title><rect x="67.4216%" y="821" width="0.1831%" height="15" fill="rgb(227,125,18)" fg:x="75136" fg:w="204"/><text x="67.6716%" y="831.50"></text></g><g><title>core::mem::drop (189 samples, 0.17%)</title><rect x="67.4351%" y="805" width="0.1696%" height="15" fill="rgb(234,210,9)" fg:x="75151" fg:w="189"/><text x="67.6851%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (189 samples, 0.17%)</title><rect x="67.4351%" y="789" width="0.1696%" height="15" fill="rgb(217,127,24)" fg:x="75151" fg:w="189"/><text x="67.6851%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (21 samples, 0.02%)</title><rect x="67.5858%" y="773" width="0.0188%" height="15" fill="rgb(239,141,48)" fg:x="75319" fg:w="21"/><text x="67.8358%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="67.5858%" y="757" width="0.0188%" height="15" fill="rgb(227,109,8)" fg:x="75319" fg:w="21"/><text x="67.8358%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.02%)</title><rect x="67.5858%" y="741" width="0.0188%" height="15" fill="rgb(235,184,23)" fg:x="75319" fg:w="21"/><text x="67.8358%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.02%)</title><rect x="67.5858%" y="725" width="0.0188%" height="15" fill="rgb(227,226,48)" fg:x="75319" fg:w="21"/><text x="67.8358%" y="735.50"></text></g><g><title>__rg_dealloc (21 samples, 0.02%)</title><rect x="67.5858%" y="709" width="0.0188%" height="15" fill="rgb(206,150,11)" fg:x="75319" fg:w="21"/><text x="67.8358%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (21 samples, 0.02%)</title><rect x="67.5858%" y="693" width="0.0188%" height="15" fill="rgb(254,2,33)" fg:x="75319" fg:w="21"/><text x="67.8358%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (37 samples, 0.03%)</title><rect x="67.6226%" y="741" width="0.0332%" height="15" fill="rgb(243,160,20)" fg:x="75360" fg:w="37"/><text x="67.8726%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (37 samples, 0.03%)</title><rect x="67.6226%" y="725" width="0.0332%" height="15" fill="rgb(218,208,30)" fg:x="75360" fg:w="37"/><text x="67.8726%" y="735.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (36 samples, 0.03%)</title><rect x="67.6235%" y="709" width="0.0323%" height="15" fill="rgb(224,120,49)" fg:x="75361" fg:w="36"/><text x="67.8735%" y="719.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="67.6442%" y="693" width="0.0117%" height="15" fill="rgb(246,12,2)" fg:x="75384" fg:w="13"/><text x="67.8942%" y="703.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="67.6442%" y="677" width="0.0117%" height="15" fill="rgb(236,117,3)" fg:x="75384" fg:w="13"/><text x="67.8942%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (54 samples, 0.05%)</title><rect x="67.6145%" y="773" width="0.0485%" height="15" fill="rgb(216,128,52)" fg:x="75351" fg:w="54"/><text x="67.8645%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (54 samples, 0.05%)</title><rect x="67.6145%" y="757" width="0.0485%" height="15" fill="rgb(246,145,19)" fg:x="75351" fg:w="54"/><text x="67.8645%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (67 samples, 0.06%)</title><rect x="67.6145%" y="805" width="0.0601%" height="15" fill="rgb(222,11,46)" fg:x="75351" fg:w="67"/><text x="67.8645%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (67 samples, 0.06%)</title><rect x="67.6145%" y="789" width="0.0601%" height="15" fill="rgb(245,82,36)" fg:x="75351" fg:w="67"/><text x="67.8645%" y="799.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="67.6630%" y="773" width="0.0117%" height="15" fill="rgb(250,73,51)" fg:x="75405" fg:w="13"/><text x="67.9130%" y="783.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="67.6630%" y="757" width="0.0117%" height="15" fill="rgb(221,189,23)" fg:x="75405" fg:w="13"/><text x="67.9130%" y="767.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="67.6630%" y="741" width="0.0117%" height="15" fill="rgb(210,33,7)" fg:x="75405" fg:w="13"/><text x="67.9130%" y="751.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="67.6630%" y="725" width="0.0117%" height="15" fill="rgb(210,107,22)" fg:x="75405" fg:w="13"/><text x="67.9130%" y="735.50"></text></g><g><title>rust_dealloc (80 samples, 0.07%)</title><rect x="67.6047%" y="837" width="0.0718%" height="15" fill="rgb(222,116,37)" fg:x="75340" fg:w="80"/><text x="67.8547%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (76 samples, 0.07%)</title><rect x="67.6083%" y="821" width="0.0682%" height="15" fill="rgb(254,17,48)" fg:x="75344" fg:w="76"/><text x="67.8583%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (297 samples, 0.27%)</title><rect x="67.4109%" y="853" width="0.2665%" height="15" fill="rgb(224,36,32)" fg:x="75124" fg:w="297"/><text x="67.6609%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (510 samples, 0.46%)</title><rect x="67.2215%" y="885" width="0.4576%" height="15" fill="rgb(232,90,46)" fg:x="74913" fg:w="510"/><text x="67.4715%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (299 samples, 0.27%)</title><rect x="67.4109%" y="869" width="0.2683%" height="15" fill="rgb(241,66,40)" fg:x="75124" fg:w="299"/><text x="67.6609%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (20 samples, 0.02%)</title><rect x="67.6792%" y="885" width="0.0179%" height="15" fill="rgb(249,184,29)" fg:x="75423" fg:w="20"/><text x="67.9292%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,583 samples, 6.80%)</title><rect x="60.9025%" y="949" width="6.8044%" height="15" fill="rgb(231,181,1)" fg:x="67871" fg:w="7583"/><text x="61.1525%" y="959.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,583 samples, 6.80%)</title><rect x="60.9025%" y="933" width="6.8044%" height="15" fill="rgb(224,94,2)" fg:x="67871" fg:w="7583"/><text x="61.1525%" y="943.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (7,583 samples, 6.80%)</title><rect x="60.9025%" y="917" width="6.8044%" height="15" fill="rgb(229,170,15)" fg:x="67871" fg:w="7583"/><text x="61.1525%" y="927.50">tremor_ru..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,489 samples, 4.03%)</title><rect x="63.6789%" y="901" width="4.0281%" height="15" fill="rgb(240,127,35)" fg:x="70965" fg:w="4489"/><text x="63.9289%" y="911.50">trem..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (37 samples, 0.03%)</title><rect x="67.8326%" y="885" width="0.0332%" height="15" fill="rgb(248,196,34)" fg:x="75594" fg:w="37"/><text x="68.0826%" y="895.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.01%)</title><rect x="67.8514%" y="869" width="0.0144%" height="15" fill="rgb(236,137,7)" fg:x="75615" fg:w="16"/><text x="68.1014%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,340 samples, 1.20%)</title><rect x="67.7366%" y="901" width="1.2024%" height="15" fill="rgb(235,127,16)" fg:x="75487" fg:w="1340"/><text x="67.9866%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,196 samples, 1.07%)</title><rect x="67.8658%" y="885" width="1.0732%" height="15" fill="rgb(250,192,54)" fg:x="75631" fg:w="1196"/><text x="68.1158%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,797 samples, 1.61%)</title><rect x="67.7070%" y="933" width="1.6125%" height="15" fill="rgb(218,98,20)" fg:x="75454" fg:w="1797"/><text x="67.9570%" y="943.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,797 samples, 1.61%)</title><rect x="67.7070%" y="917" width="1.6125%" height="15" fill="rgb(230,176,47)" fg:x="75454" fg:w="1797"/><text x="67.9570%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (424 samples, 0.38%)</title><rect x="68.9390%" y="901" width="0.3805%" height="15" fill="rgb(244,2,33)" fg:x="76827" fg:w="424"/><text x="69.1890%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (11,259 samples, 10.10%)</title><rect x="59.2182%" y="1125" width="10.1030%" height="15" fill="rgb(231,100,17)" fg:x="65994" fg:w="11259"/><text x="59.4682%" y="1135.50">async_task::raw..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11,259 samples, 10.10%)</title><rect x="59.2182%" y="1109" width="10.1030%" height="15" fill="rgb(245,23,12)" fg:x="65994" fg:w="11259"/><text x="59.4682%" y="1119.50">&lt;core::pin::Pin..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,259 samples, 10.10%)</title><rect x="59.2182%" y="1093" width="10.1030%" height="15" fill="rgb(249,55,22)" fg:x="65994" fg:w="11259"/><text x="59.4682%" y="1103.50">&lt;core::future::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (11,259 samples, 10.10%)</title><rect x="59.2182%" y="1077" width="10.1030%" height="15" fill="rgb(207,134,9)" fg:x="65994" fg:w="11259"/><text x="59.4682%" y="1087.50">async_executor:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (11,259 samples, 10.10%)</title><rect x="59.2182%" y="1061" width="10.1030%" height="15" fill="rgb(218,134,0)" fg:x="65994" fg:w="11259"/><text x="59.4682%" y="1071.50">&lt;async_std::tas..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (11,259 samples, 10.10%)</title><rect x="59.2182%" y="1045" width="10.1030%" height="15" fill="rgb(213,212,33)" fg:x="65994" fg:w="11259"/><text x="59.4682%" y="1055.50">async_std::task..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,259 samples, 10.10%)</title><rect x="59.2182%" y="1029" width="10.1030%" height="15" fill="rgb(252,106,18)" fg:x="65994" fg:w="11259"/><text x="59.4682%" y="1039.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,259 samples, 10.10%)</title><rect x="59.2182%" y="1013" width="10.1030%" height="15" fill="rgb(208,126,42)" fg:x="65994" fg:w="11259"/><text x="59.4682%" y="1023.50">std::thread::lo..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (11,259 samples, 10.10%)</title><rect x="59.2182%" y="997" width="10.1030%" height="15" fill="rgb(246,175,29)" fg:x="65994" fg:w="11259"/><text x="59.4682%" y="1007.50">async_std::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (11,259 samples, 10.10%)</title><rect x="59.2182%" y="981" width="10.1030%" height="15" fill="rgb(215,13,50)" fg:x="65994" fg:w="11259"/><text x="59.4682%" y="991.50">&lt;async_std::tas..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,259 samples, 10.10%)</title><rect x="59.2182%" y="965" width="10.1030%" height="15" fill="rgb(216,172,15)" fg:x="65994" fg:w="11259"/><text x="59.4682%" y="975.50">&lt;core::future::..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,799 samples, 1.61%)</title><rect x="67.7070%" y="949" width="1.6143%" height="15" fill="rgb(212,103,13)" fg:x="75454" fg:w="1799"/><text x="67.9570%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (19 samples, 0.02%)</title><rect x="69.3213%" y="1125" width="0.0170%" height="15" fill="rgb(231,171,36)" fg:x="77253" fg:w="19"/><text x="69.5713%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (62 samples, 0.06%)</title><rect x="69.3392%" y="1125" width="0.0556%" height="15" fill="rgb(250,123,20)" fg:x="77273" fg:w="62"/><text x="69.5892%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (12 samples, 0.01%)</title><rect x="69.3841%" y="1109" width="0.0108%" height="15" fill="rgb(212,53,50)" fg:x="77323" fg:w="12"/><text x="69.6341%" y="1119.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="69.3841%" y="1093" width="0.0108%" height="15" fill="rgb(243,54,12)" fg:x="77323" fg:w="12"/><text x="69.6341%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.01%)</title><rect x="69.3993%" y="1125" width="0.0117%" height="15" fill="rgb(234,101,34)" fg:x="77340" fg:w="13"/><text x="69.6493%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="69.4334%" y="1125" width="0.0197%" height="15" fill="rgb(254,67,22)" fg:x="77378" fg:w="22"/><text x="69.6834%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (25 samples, 0.02%)</title><rect x="69.4532%" y="1125" width="0.0224%" height="15" fill="rgb(250,35,47)" fg:x="77400" fg:w="25"/><text x="69.7032%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="69.4756%" y="1125" width="0.0144%" height="15" fill="rgb(226,126,38)" fg:x="77425" fg:w="16"/><text x="69.7256%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="69.4900%" y="1125" width="0.0153%" height="15" fill="rgb(216,138,53)" fg:x="77441" fg:w="17"/><text x="69.7400%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (35 samples, 0.03%)</title><rect x="69.5124%" y="1125" width="0.0314%" height="15" fill="rgb(246,199,43)" fg:x="77466" fg:w="35"/><text x="69.7624%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (26 samples, 0.02%)</title><rect x="69.5205%" y="1109" width="0.0233%" height="15" fill="rgb(232,125,11)" fg:x="77475" fg:w="26"/><text x="69.7705%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (26 samples, 0.02%)</title><rect x="69.5205%" y="1093" width="0.0233%" height="15" fill="rgb(218,219,45)" fg:x="77475" fg:w="26"/><text x="69.7705%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="69.5205%" y="1077" width="0.0233%" height="15" fill="rgb(216,102,54)" fg:x="77475" fg:w="26"/><text x="69.7705%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (26 samples, 0.02%)</title><rect x="69.5205%" y="1061" width="0.0233%" height="15" fill="rgb(250,228,7)" fg:x="77475" fg:w="26"/><text x="69.7705%" y="1071.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (14 samples, 0.01%)</title><rect x="69.5582%" y="1125" width="0.0126%" height="15" fill="rgb(226,125,25)" fg:x="77517" fg:w="14"/><text x="69.8082%" y="1135.50"></text></g><g><title>polling::epoll::Poller::wait (36 samples, 0.03%)</title><rect x="69.5815%" y="1125" width="0.0323%" height="15" fill="rgb(224,165,27)" fg:x="77543" fg:w="36"/><text x="69.8315%" y="1135.50"></text></g><g><title>rust_alloc (94 samples, 0.08%)</title><rect x="69.6138%" y="1125" width="0.0843%" height="15" fill="rgb(233,86,3)" fg:x="77579" fg:w="94"/><text x="69.8638%" y="1135.50"></text></g><g><title>rust_dealloc (20 samples, 0.02%)</title><rect x="69.6981%" y="1125" width="0.0179%" height="15" fill="rgb(228,116,20)" fg:x="77673" fg:w="20"/><text x="69.9481%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (19 samples, 0.02%)</title><rect x="69.6990%" y="1109" width="0.0170%" height="15" fill="rgb(209,192,17)" fg:x="77674" fg:w="19"/><text x="69.9490%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (19 samples, 0.02%)</title><rect x="69.6990%" y="1093" width="0.0170%" height="15" fill="rgb(224,88,34)" fg:x="77674" fg:w="19"/><text x="69.9490%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (19 samples, 0.02%)</title><rect x="69.6990%" y="1077" width="0.0170%" height="15" fill="rgb(233,38,6)" fg:x="77674" fg:w="19"/><text x="69.9490%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (19 samples, 0.02%)</title><rect x="69.6990%" y="1061" width="0.0170%" height="15" fill="rgb(212,59,30)" fg:x="77674" fg:w="19"/><text x="69.9490%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (19 samples, 0.02%)</title><rect x="69.6990%" y="1045" width="0.0170%" height="15" fill="rgb(213,80,3)" fg:x="77674" fg:w="19"/><text x="69.9490%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (19 samples, 0.02%)</title><rect x="69.6990%" y="1029" width="0.0170%" height="15" fill="rgb(251,178,7)" fg:x="77674" fg:w="19"/><text x="69.9490%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (19 samples, 0.02%)</title><rect x="69.6990%" y="1013" width="0.0170%" height="15" fill="rgb(213,154,26)" fg:x="77674" fg:w="19"/><text x="69.9490%" y="1023.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (19 samples, 0.02%)</title><rect x="69.6990%" y="997" width="0.0170%" height="15" fill="rgb(238,165,49)" fg:x="77674" fg:w="19"/><text x="69.9490%" y="1007.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="69.7215%" y="1125" width="0.0126%" height="15" fill="rgb(248,91,46)" fg:x="77699" fg:w="14"/><text x="69.9715%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (35 samples, 0.03%)</title><rect x="69.7556%" y="1125" width="0.0314%" height="15" fill="rgb(244,21,52)" fg:x="77737" fg:w="35"/><text x="70.0056%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (70 samples, 0.06%)</title><rect x="69.8525%" y="933" width="0.0628%" height="15" fill="rgb(247,122,20)" fg:x="77845" fg:w="70"/><text x="70.1025%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (70 samples, 0.06%)</title><rect x="69.8525%" y="917" width="0.0628%" height="15" fill="rgb(218,27,9)" fg:x="77845" fg:w="70"/><text x="70.1025%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (69 samples, 0.06%)</title><rect x="69.8534%" y="901" width="0.0619%" height="15" fill="rgb(246,7,6)" fg:x="77846" fg:w="69"/><text x="70.1034%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (49 samples, 0.04%)</title><rect x="69.8713%" y="885" width="0.0440%" height="15" fill="rgb(227,135,54)" fg:x="77866" fg:w="49"/><text x="70.1213%" y="895.50"></text></g><g><title>___pthread_mutex_lock (49 samples, 0.04%)</title><rect x="69.8713%" y="869" width="0.0440%" height="15" fill="rgb(247,14,11)" fg:x="77866" fg:w="49"/><text x="70.1213%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (109 samples, 0.10%)</title><rect x="69.8318%" y="949" width="0.0978%" height="15" fill="rgb(206,149,34)" fg:x="77822" fg:w="109"/><text x="70.0818%" y="959.50"></text></g><g><title>event_listener::List::remove (16 samples, 0.01%)</title><rect x="69.9153%" y="933" width="0.0144%" height="15" fill="rgb(227,228,4)" fg:x="77915" fg:w="16"/><text x="70.1653%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (12 samples, 0.01%)</title><rect x="69.9189%" y="917" width="0.0108%" height="15" fill="rgb(238,218,28)" fg:x="77919" fg:w="12"/><text x="70.1689%" y="927.50"></text></g><g><title>core::mem::replace (12 samples, 0.01%)</title><rect x="69.9189%" y="901" width="0.0108%" height="15" fill="rgb(252,86,40)" fg:x="77919" fg:w="12"/><text x="70.1689%" y="911.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="69.9189%" y="885" width="0.0108%" height="15" fill="rgb(251,225,11)" fg:x="77919" fg:w="12"/><text x="70.1689%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (745 samples, 0.67%)</title><rect x="69.9296%" y="949" width="0.6685%" height="15" fill="rgb(206,46,49)" fg:x="77931" fg:w="745"/><text x="70.1796%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (709 samples, 0.64%)</title><rect x="70.6439%" y="933" width="0.6362%" height="15" fill="rgb(245,128,24)" fg:x="78727" fg:w="709"/><text x="70.8939%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (96 samples, 0.09%)</title><rect x="71.2801%" y="933" width="0.0861%" height="15" fill="rgb(219,177,34)" fg:x="79436" fg:w="96"/><text x="71.5301%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (46 samples, 0.04%)</title><rect x="71.3815%" y="917" width="0.0413%" height="15" fill="rgb(218,60,48)" fg:x="79549" fg:w="46"/><text x="71.6315%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (43 samples, 0.04%)</title><rect x="71.3842%" y="901" width="0.0386%" height="15" fill="rgb(221,11,5)" fg:x="79552" fg:w="43"/><text x="71.6342%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="71.3842%" y="885" width="0.0386%" height="15" fill="rgb(220,148,13)" fg:x="79552" fg:w="43"/><text x="71.6342%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (42 samples, 0.04%)</title><rect x="71.3851%" y="869" width="0.0377%" height="15" fill="rgb(210,16,3)" fg:x="79553" fg:w="42"/><text x="71.6351%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (42 samples, 0.04%)</title><rect x="71.3851%" y="853" width="0.0377%" height="15" fill="rgb(236,80,2)" fg:x="79553" fg:w="42"/><text x="71.6351%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (42 samples, 0.04%)</title><rect x="71.3851%" y="837" width="0.0377%" height="15" fill="rgb(239,129,19)" fg:x="79553" fg:w="42"/><text x="71.6351%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.02%)</title><rect x="71.4228%" y="917" width="0.0162%" height="15" fill="rgb(220,106,35)" fg:x="79595" fg:w="18"/><text x="71.6728%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.02%)</title><rect x="71.4228%" y="901" width="0.0162%" height="15" fill="rgb(252,139,45)" fg:x="79595" fg:w="18"/><text x="71.6728%" y="911.50"></text></g><g><title>event_listener::Inner::lock (63 samples, 0.06%)</title><rect x="71.4425%" y="917" width="0.0565%" height="15" fill="rgb(229,8,36)" fg:x="79617" fg:w="63"/><text x="71.6925%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (63 samples, 0.06%)</title><rect x="71.4425%" y="901" width="0.0565%" height="15" fill="rgb(230,126,33)" fg:x="79617" fg:w="63"/><text x="71.6925%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (61 samples, 0.05%)</title><rect x="71.4443%" y="885" width="0.0547%" height="15" fill="rgb(239,140,21)" fg:x="79619" fg:w="61"/><text x="71.6943%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (60 samples, 0.05%)</title><rect x="71.4452%" y="869" width="0.0538%" height="15" fill="rgb(254,104,9)" fg:x="79620" fg:w="60"/><text x="71.6952%" y="879.50"></text></g><g><title>___pthread_mutex_lock (60 samples, 0.05%)</title><rect x="71.4452%" y="853" width="0.0538%" height="15" fill="rgb(239,52,14)" fg:x="79620" fg:w="60"/><text x="71.6952%" y="863.50"></text></g><g><title>async_executor::State::notify (46 samples, 0.04%)</title><rect x="71.5125%" y="837" width="0.0413%" height="15" fill="rgb(208,227,44)" fg:x="79695" fg:w="46"/><text x="71.7625%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.02%)</title><rect x="71.5350%" y="821" width="0.0188%" height="15" fill="rgb(246,18,19)" fg:x="79720" fg:w="21"/><text x="71.7850%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="71.5359%" y="805" width="0.0179%" height="15" fill="rgb(235,228,25)" fg:x="79721" fg:w="20"/><text x="71.7859%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (19 samples, 0.02%)</title><rect x="71.5368%" y="789" width="0.0170%" height="15" fill="rgb(240,156,20)" fg:x="79722" fg:w="19"/><text x="71.7868%" y="799.50"></text></g><g><title>___pthread_mutex_lock (19 samples, 0.02%)</title><rect x="71.5368%" y="773" width="0.0170%" height="15" fill="rgb(224,8,20)" fg:x="79722" fg:w="19"/><text x="71.7868%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (29 samples, 0.03%)</title><rect x="71.5646%" y="805" width="0.0260%" height="15" fill="rgb(214,12,52)" fg:x="79753" fg:w="29"/><text x="71.8146%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (29 samples, 0.03%)</title><rect x="71.5646%" y="789" width="0.0260%" height="15" fill="rgb(211,220,47)" fg:x="79753" fg:w="29"/><text x="71.8146%" y="799.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (101 samples, 0.09%)</title><rect x="71.5125%" y="853" width="0.0906%" height="15" fill="rgb(250,173,5)" fg:x="79695" fg:w="101"/><text x="71.7625%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (55 samples, 0.05%)</title><rect x="71.5538%" y="837" width="0.0494%" height="15" fill="rgb(250,125,52)" fg:x="79741" fg:w="55"/><text x="71.8038%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (46 samples, 0.04%)</title><rect x="71.5619%" y="821" width="0.0413%" height="15" fill="rgb(209,133,18)" fg:x="79750" fg:w="46"/><text x="71.8119%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (24 samples, 0.02%)</title><rect x="71.6032%" y="853" width="0.0215%" height="15" fill="rgb(216,173,22)" fg:x="79796" fg:w="24"/><text x="71.8532%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (24 samples, 0.02%)</title><rect x="71.6032%" y="837" width="0.0215%" height="15" fill="rgb(205,3,22)" fg:x="79796" fg:w="24"/><text x="71.8532%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (15 samples, 0.01%)</title><rect x="71.6516%" y="789" width="0.0135%" height="15" fill="rgb(248,22,20)" fg:x="79850" fg:w="15"/><text x="71.9016%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.01%)</title><rect x="71.6516%" y="773" width="0.0135%" height="15" fill="rgb(233,6,29)" fg:x="79850" fg:w="15"/><text x="71.9016%" y="783.50"></text></g><g><title>parking::Unparker::unpark (49 samples, 0.04%)</title><rect x="71.6355%" y="821" width="0.0440%" height="15" fill="rgb(240,22,54)" fg:x="79832" fg:w="49"/><text x="71.8855%" y="831.50"></text></g><g><title>parking::Inner::unpark (35 samples, 0.03%)</title><rect x="71.6480%" y="805" width="0.0314%" height="15" fill="rgb(231,133,32)" fg:x="79846" fg:w="35"/><text x="71.8980%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="71.6651%" y="789" width="0.0144%" height="15" fill="rgb(248,193,4)" fg:x="79865" fg:w="16"/><text x="71.9151%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (16 samples, 0.01%)</title><rect x="71.6651%" y="773" width="0.0144%" height="15" fill="rgb(211,178,46)" fg:x="79865" fg:w="16"/><text x="71.9151%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (16 samples, 0.01%)</title><rect x="71.6651%" y="757" width="0.0144%" height="15" fill="rgb(224,5,42)" fg:x="79865" fg:w="16"/><text x="71.9151%" y="767.50"></text></g><g><title>___pthread_mutex_lock (16 samples, 0.01%)</title><rect x="71.6651%" y="741" width="0.0144%" height="15" fill="rgb(239,176,25)" fg:x="79865" fg:w="16"/><text x="71.9151%" y="751.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (54 samples, 0.05%)</title><rect x="71.6328%" y="837" width="0.0485%" height="15" fill="rgb(245,187,50)" fg:x="79829" fg:w="54"/><text x="71.8828%" y="847.50"></text></g><g><title>event_listener::List::notify (220 samples, 0.20%)</title><rect x="71.4991%" y="917" width="0.1974%" height="15" fill="rgb(248,24,15)" fg:x="79680" fg:w="220"/><text x="71.7491%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (216 samples, 0.19%)</title><rect x="71.5027%" y="901" width="0.1938%" height="15" fill="rgb(205,166,13)" fg:x="79684" fg:w="216"/><text x="71.7527%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (208 samples, 0.19%)</title><rect x="71.5098%" y="885" width="0.1866%" height="15" fill="rgb(208,114,23)" fg:x="79692" fg:w="208"/><text x="71.7598%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (207 samples, 0.19%)</title><rect x="71.5107%" y="869" width="0.1857%" height="15" fill="rgb(239,127,18)" fg:x="79693" fg:w="207"/><text x="71.7607%" y="879.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (71 samples, 0.06%)</title><rect x="71.6328%" y="853" width="0.0637%" height="15" fill="rgb(219,154,28)" fg:x="79829" fg:w="71"/><text x="71.8828%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="71.6812%" y="837" width="0.0153%" height="15" fill="rgb(225,157,23)" fg:x="79883" fg:w="17"/><text x="71.9312%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="71.6812%" y="821" width="0.0153%" height="15" fill="rgb(219,8,6)" fg:x="79883" fg:w="17"/><text x="71.9312%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.01%)</title><rect x="71.6821%" y="805" width="0.0144%" height="15" fill="rgb(212,47,6)" fg:x="79884" fg:w="16"/><text x="71.9321%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.01%)</title><rect x="71.6821%" y="789" width="0.0144%" height="15" fill="rgb(224,190,4)" fg:x="79884" fg:w="16"/><text x="71.9321%" y="799.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,568 samples, 1.41%)</title><rect x="70.5982%" y="949" width="1.4070%" height="15" fill="rgb(239,183,29)" fg:x="78676" fg:w="1568"/><text x="70.8482%" y="959.50"></text></g><g><title>event_listener::Event::notify (712 samples, 0.64%)</title><rect x="71.3663%" y="933" width="0.6389%" height="15" fill="rgb(213,57,7)" fg:x="79532" fg:w="712"/><text x="71.6163%" y="943.50"></text></g><g><title>event_listener::full_fence (344 samples, 0.31%)</title><rect x="71.6965%" y="917" width="0.3087%" height="15" fill="rgb(216,148,1)" fg:x="79900" fg:w="344"/><text x="71.9465%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (335 samples, 0.30%)</title><rect x="71.7046%" y="901" width="0.3006%" height="15" fill="rgb(236,182,29)" fg:x="79909" fg:w="335"/><text x="71.9546%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (335 samples, 0.30%)</title><rect x="71.7046%" y="885" width="0.3006%" height="15" fill="rgb(244,120,48)" fg:x="79909" fg:w="335"/><text x="71.9546%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (29 samples, 0.03%)</title><rect x="72.0052%" y="949" width="0.0260%" height="15" fill="rgb(206,71,34)" fg:x="80244" fg:w="29"/><text x="72.2552%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (21 samples, 0.02%)</title><rect x="72.0312%" y="949" width="0.0188%" height="15" fill="rgb(242,32,6)" fg:x="80273" fg:w="21"/><text x="72.2812%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="72.0500%" y="933" width="0.0188%" height="15" fill="rgb(241,35,3)" fg:x="80294" fg:w="21"/><text x="72.3000%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (21 samples, 0.02%)</title><rect x="72.0500%" y="917" width="0.0188%" height="15" fill="rgb(222,62,19)" fg:x="80294" fg:w="21"/><text x="72.3000%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (21 samples, 0.02%)</title><rect x="72.0500%" y="901" width="0.0188%" height="15" fill="rgb(223,110,41)" fg:x="80294" fg:w="21"/><text x="72.3000%" y="911.50"></text></g><g><title>event_listener::Inner::lock (24 samples, 0.02%)</title><rect x="72.0725%" y="933" width="0.0215%" height="15" fill="rgb(208,224,4)" fg:x="80319" fg:w="24"/><text x="72.3225%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (24 samples, 0.02%)</title><rect x="72.0725%" y="917" width="0.0215%" height="15" fill="rgb(241,137,19)" fg:x="80319" fg:w="24"/><text x="72.3225%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (24 samples, 0.02%)</title><rect x="72.0725%" y="901" width="0.0215%" height="15" fill="rgb(244,24,17)" fg:x="80319" fg:w="24"/><text x="72.3225%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (24 samples, 0.02%)</title><rect x="72.0725%" y="885" width="0.0215%" height="15" fill="rgb(245,178,49)" fg:x="80319" fg:w="24"/><text x="72.3225%" y="895.50"></text></g><g><title>___pthread_mutex_lock (23 samples, 0.02%)</title><rect x="72.0734%" y="869" width="0.0206%" height="15" fill="rgb(219,160,38)" fg:x="80320" fg:w="23"/><text x="72.3234%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,577 samples, 2.31%)</title><rect x="69.7888%" y="1029" width="2.3124%" height="15" fill="rgb(228,137,14)" fg:x="77774" fg:w="2577"/><text x="70.0388%" y="1039.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,577 samples, 2.31%)</title><rect x="69.7888%" y="1013" width="2.3124%" height="15" fill="rgb(237,134,11)" fg:x="77774" fg:w="2577"/><text x="70.0388%" y="1023.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,577 samples, 2.31%)</title><rect x="69.7888%" y="997" width="2.3124%" height="15" fill="rgb(211,126,44)" fg:x="77774" fg:w="2577"/><text x="70.0388%" y="1007.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,577 samples, 2.31%)</title><rect x="69.7888%" y="981" width="2.3124%" height="15" fill="rgb(226,171,33)" fg:x="77774" fg:w="2577"/><text x="70.0388%" y="991.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,577 samples, 2.31%)</title><rect x="69.7888%" y="965" width="2.3124%" height="15" fill="rgb(253,99,13)" fg:x="77774" fg:w="2577"/><text x="70.0388%" y="975.50">&lt;..</text></g><g><title>event_listener::Event::listen (57 samples, 0.05%)</title><rect x="72.0500%" y="949" width="0.0511%" height="15" fill="rgb(244,48,7)" fg:x="80294" fg:w="57"/><text x="72.3000%" y="959.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="72.3004%" y="517" width="0.0135%" height="15" fill="rgb(244,217,54)" fg:x="80573" fg:w="15"/><text x="72.5504%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::empty (16 samples, 0.01%)</title><rect x="72.3273%" y="501" width="0.0144%" height="15" fill="rgb(224,15,18)" fg:x="80603" fg:w="16"/><text x="72.5773%" y="511.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (16 samples, 0.01%)</title><rect x="72.3273%" y="485" width="0.0144%" height="15" fill="rgb(244,99,12)" fg:x="80603" fg:w="16"/><text x="72.5773%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (258 samples, 0.23%)</title><rect x="72.2977%" y="549" width="0.2315%" height="15" fill="rgb(233,226,8)" fg:x="80570" fg:w="258"/><text x="72.5477%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (258 samples, 0.23%)</title><rect x="72.2977%" y="533" width="0.2315%" height="15" fill="rgb(229,211,3)" fg:x="80570" fg:w="258"/><text x="72.5477%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (240 samples, 0.22%)</title><rect x="72.3138%" y="517" width="0.2154%" height="15" fill="rgb(216,140,21)" fg:x="80588" fg:w="240"/><text x="72.5638%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (209 samples, 0.19%)</title><rect x="72.3417%" y="501" width="0.1875%" height="15" fill="rgb(234,122,30)" fg:x="80619" fg:w="209"/><text x="72.5917%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (209 samples, 0.19%)</title><rect x="72.3417%" y="485" width="0.1875%" height="15" fill="rgb(236,25,46)" fg:x="80619" fg:w="209"/><text x="72.5917%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (273 samples, 0.24%)</title><rect x="72.2905%" y="661" width="0.2450%" height="15" fill="rgb(217,52,54)" fg:x="80562" fg:w="273"/><text x="72.5405%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (273 samples, 0.24%)</title><rect x="72.2905%" y="645" width="0.2450%" height="15" fill="rgb(222,29,26)" fg:x="80562" fg:w="273"/><text x="72.5405%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (273 samples, 0.24%)</title><rect x="72.2905%" y="629" width="0.2450%" height="15" fill="rgb(216,177,29)" fg:x="80562" fg:w="273"/><text x="72.5405%" y="639.50"></text></g><g><title>alloc::alloc::alloc (272 samples, 0.24%)</title><rect x="72.2914%" y="613" width="0.2441%" height="15" fill="rgb(247,136,51)" fg:x="80563" fg:w="272"/><text x="72.5414%" y="623.50"></text></g><g><title>__rg_alloc (272 samples, 0.24%)</title><rect x="72.2914%" y="597" width="0.2441%" height="15" fill="rgb(231,47,47)" fg:x="80563" fg:w="272"/><text x="72.5414%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (272 samples, 0.24%)</title><rect x="72.2914%" y="581" width="0.2441%" height="15" fill="rgb(211,192,36)" fg:x="80563" fg:w="272"/><text x="72.5414%" y="591.50"></text></g><g><title>rust_alloc (272 samples, 0.24%)</title><rect x="72.2914%" y="565" width="0.2441%" height="15" fill="rgb(229,156,32)" fg:x="80563" fg:w="272"/><text x="72.5414%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (64 samples, 0.06%)</title><rect x="72.6270%" y="597" width="0.0574%" height="15" fill="rgb(248,213,20)" fg:x="80937" fg:w="64"/><text x="72.8770%" y="607.50"></text></g><g><title>core::cmp::PartialOrd::ge (64 samples, 0.06%)</title><rect x="72.6270%" y="581" width="0.0574%" height="15" fill="rgb(217,64,7)" fg:x="80937" fg:w="64"/><text x="72.8770%" y="591.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (62 samples, 0.06%)</title><rect x="72.6288%" y="565" width="0.0556%" height="15" fill="rgb(232,142,8)" fg:x="80939" fg:w="62"/><text x="72.8788%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (62 samples, 0.06%)</title><rect x="72.6288%" y="549" width="0.0556%" height="15" fill="rgb(224,92,44)" fg:x="80939" fg:w="62"/><text x="72.8788%" y="559.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (62 samples, 0.06%)</title><rect x="72.6288%" y="533" width="0.0556%" height="15" fill="rgb(214,169,17)" fg:x="80939" fg:w="62"/><text x="72.8788%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (37 samples, 0.03%)</title><rect x="72.6512%" y="517" width="0.0332%" height="15" fill="rgb(210,59,37)" fg:x="80964" fg:w="37"/><text x="72.9012%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (121 samples, 0.11%)</title><rect x="72.5965%" y="629" width="0.1086%" height="15" fill="rgb(214,116,48)" fg:x="80903" fg:w="121"/><text x="72.8465%" y="639.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (121 samples, 0.11%)</title><rect x="72.5965%" y="613" width="0.1086%" height="15" fill="rgb(244,191,6)" fg:x="80903" fg:w="121"/><text x="72.8465%" y="623.50"></text></g><g><title>core::time::Duration::new (23 samples, 0.02%)</title><rect x="72.6844%" y="597" width="0.0206%" height="15" fill="rgb(241,50,52)" fg:x="81001" fg:w="23"/><text x="72.9344%" y="607.50"></text></g><g><title>std::time::SystemTime::duration_since (135 samples, 0.12%)</title><rect x="72.5965%" y="645" width="0.1211%" height="15" fill="rgb(236,75,39)" fg:x="80903" fg:w="135"/><text x="72.8465%" y="655.50"></text></g><g><title>tremor_common::time::nanotime (14 samples, 0.01%)</title><rect x="72.7051%" y="629" width="0.0126%" height="15" fill="rgb(236,99,0)" fg:x="81024" fg:w="14"/><text x="72.9551%" y="639.50"></text></g><g><title>__clock_gettime_2 (473 samples, 0.42%)</title><rect x="72.8173%" y="597" width="0.4244%" height="15" fill="rgb(207,202,15)" fg:x="81149" fg:w="473"/><text x="73.0673%" y="607.50"></text></g><g><title>__vdso_clock_gettime (447 samples, 0.40%)</title><rect x="72.8406%" y="581" width="0.4011%" height="15" fill="rgb(233,207,14)" fg:x="81175" fg:w="447"/><text x="73.0906%" y="591.50"></text></g><g><title>[[vdso]] (298 samples, 0.27%)</title><rect x="72.9743%" y="565" width="0.2674%" height="15" fill="rgb(226,27,51)" fg:x="81324" fg:w="298"/><text x="73.2243%" y="575.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (3,849 samples, 3.45%)</title><rect x="69.7888%" y="1045" width="3.4538%" height="15" fill="rgb(206,104,42)" fg:x="77774" fg:w="3849"/><text x="70.0388%" y="1055.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,272 samples, 1.14%)</title><rect x="72.1012%" y="1029" width="1.1414%" height="15" fill="rgb(212,225,4)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,272 samples, 1.14%)</title><rect x="72.1012%" y="1013" width="1.1414%" height="15" fill="rgb(233,96,42)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="1023.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,272 samples, 1.14%)</title><rect x="72.1012%" y="997" width="1.1414%" height="15" fill="rgb(229,21,32)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="1007.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,272 samples, 1.14%)</title><rect x="72.1012%" y="981" width="1.1414%" height="15" fill="rgb(226,216,24)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="991.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,272 samples, 1.14%)</title><rect x="72.1012%" y="965" width="1.1414%" height="15" fill="rgb(221,163,17)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="975.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,272 samples, 1.14%)</title><rect x="72.1012%" y="949" width="1.1414%" height="15" fill="rgb(216,216,42)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="959.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,272 samples, 1.14%)</title><rect x="72.1012%" y="933" width="1.1414%" height="15" fill="rgb(240,118,7)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1,272 samples, 1.14%)</title><rect x="72.1012%" y="917" width="1.1414%" height="15" fill="rgb(221,67,37)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="927.50"></text></g><g><title>std::panicking::try (1,272 samples, 1.14%)</title><rect x="72.1012%" y="901" width="1.1414%" height="15" fill="rgb(241,32,44)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1,272 samples, 1.14%)</title><rect x="72.1012%" y="885" width="1.1414%" height="15" fill="rgb(235,204,43)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="895.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,272 samples, 1.14%)</title><rect x="72.1012%" y="869" width="1.1414%" height="15" fill="rgb(213,116,10)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,272 samples, 1.14%)</title><rect x="72.1012%" y="853" width="1.1414%" height="15" fill="rgb(239,15,48)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="863.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,272 samples, 1.14%)</title><rect x="72.1012%" y="837" width="1.1414%" height="15" fill="rgb(207,123,36)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="847.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,272 samples, 1.14%)</title><rect x="72.1012%" y="821" width="1.1414%" height="15" fill="rgb(209,103,30)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="831.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,272 samples, 1.14%)</title><rect x="72.1012%" y="805" width="1.1414%" height="15" fill="rgb(238,100,19)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,272 samples, 1.14%)</title><rect x="72.1012%" y="789" width="1.1414%" height="15" fill="rgb(244,30,14)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="799.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,272 samples, 1.14%)</title><rect x="72.1012%" y="773" width="1.1414%" height="15" fill="rgb(249,174,6)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="783.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,272 samples, 1.14%)</title><rect x="72.1012%" y="757" width="1.1414%" height="15" fill="rgb(235,213,41)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="767.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,272 samples, 1.14%)</title><rect x="72.1012%" y="741" width="1.1414%" height="15" fill="rgb(213,118,6)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="751.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,272 samples, 1.14%)</title><rect x="72.1012%" y="725" width="1.1414%" height="15" fill="rgb(235,44,51)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,272 samples, 1.14%)</title><rect x="72.1012%" y="709" width="1.1414%" height="15" fill="rgb(217,9,53)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="719.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,272 samples, 1.14%)</title><rect x="72.1012%" y="693" width="1.1414%" height="15" fill="rgb(237,172,34)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="703.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (1,272 samples, 1.14%)</title><rect x="72.1012%" y="677" width="1.1414%" height="15" fill="rgb(206,206,11)" fg:x="80351" fg:w="1272"/><text x="72.3512%" y="687.50"></text></g><g><title>tremor_common::time::nanotime (758 samples, 0.68%)</title><rect x="72.5624%" y="661" width="0.6802%" height="15" fill="rgb(214,149,29)" fg:x="80865" fg:w="758"/><text x="72.8124%" y="671.50"></text></g><g><title>std::time::SystemTime::now (585 samples, 0.52%)</title><rect x="72.7176%" y="645" width="0.5249%" height="15" fill="rgb(208,123,3)" fg:x="81038" fg:w="585"/><text x="72.9676%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (585 samples, 0.52%)</title><rect x="72.7176%" y="629" width="0.5249%" height="15" fill="rgb(229,126,4)" fg:x="81038" fg:w="585"/><text x="72.9676%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::now (585 samples, 0.52%)</title><rect x="72.7176%" y="613" width="0.5249%" height="15" fill="rgb(222,92,36)" fg:x="81038" fg:w="585"/><text x="72.9676%" y="623.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::default::Default&gt;::default (18 samples, 0.02%)</title><rect x="73.7926%" y="949" width="0.0162%" height="15" fill="rgb(216,39,41)" fg:x="82236" fg:w="18"/><text x="74.0426%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::default::Default for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::default (18 samples, 0.02%)</title><rect x="73.7926%" y="933" width="0.0162%" height="15" fill="rgb(253,127,28)" fg:x="82236" fg:w="18"/><text x="74.0426%" y="943.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="73.8249%" y="837" width="0.0108%" height="15" fill="rgb(249,152,51)" fg:x="82272" fg:w="12"/><text x="74.0749%" y="847.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (18 samples, 0.02%)</title><rect x="73.8249%" y="853" width="0.0162%" height="15" fill="rgb(209,123,42)" fg:x="82272" fg:w="18"/><text x="74.0749%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (25 samples, 0.02%)</title><rect x="73.8249%" y="917" width="0.0224%" height="15" fill="rgb(241,118,22)" fg:x="82272" fg:w="25"/><text x="74.0749%" y="927.50"></text></g><g><title>std::collections::hash::map::RandomState::new (25 samples, 0.02%)</title><rect x="73.8249%" y="901" width="0.0224%" height="15" fill="rgb(208,25,7)" fg:x="82272" fg:w="25"/><text x="74.0749%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (25 samples, 0.02%)</title><rect x="73.8249%" y="885" width="0.0224%" height="15" fill="rgb(243,144,39)" fg:x="82272" fg:w="25"/><text x="74.0749%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25 samples, 0.02%)</title><rect x="73.8249%" y="869" width="0.0224%" height="15" fill="rgb(250,50,5)" fg:x="82272" fg:w="25"/><text x="74.0749%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="73.8994%" y="645" width="0.0108%" height="15" fill="rgb(207,67,11)" fg:x="82355" fg:w="12"/><text x="74.1494%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="73.8994%" y="677" width="0.0682%" height="15" fill="rgb(245,204,40)" fg:x="82355" fg:w="76"/><text x="74.1494%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (76 samples, 0.07%)</title><rect x="73.8994%" y="661" width="0.0682%" height="15" fill="rgb(238,228,24)" fg:x="82355" fg:w="76"/><text x="74.1494%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (64 samples, 0.06%)</title><rect x="73.9102%" y="645" width="0.0574%" height="15" fill="rgb(217,116,22)" fg:x="82367" fg:w="64"/><text x="74.1602%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (51 samples, 0.05%)</title><rect x="73.9219%" y="629" width="0.0458%" height="15" fill="rgb(234,98,12)" fg:x="82380" fg:w="51"/><text x="74.1719%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (51 samples, 0.05%)</title><rect x="73.9219%" y="613" width="0.0458%" height="15" fill="rgb(242,170,50)" fg:x="82380" fg:w="51"/><text x="74.1719%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (51 samples, 0.05%)</title><rect x="73.9219%" y="597" width="0.0458%" height="15" fill="rgb(235,7,5)" fg:x="82380" fg:w="51"/><text x="74.1719%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="73.9721%" y="677" width="0.0251%" height="15" fill="rgb(241,114,28)" fg:x="82436" fg:w="28"/><text x="74.2221%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="73.9721%" y="661" width="0.0251%" height="15" fill="rgb(246,112,42)" fg:x="82436" fg:w="28"/><text x="74.2221%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="73.9721%" y="645" width="0.0251%" height="15" fill="rgb(248,228,14)" fg:x="82436" fg:w="28"/><text x="74.2221%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="73.9721%" y="629" width="0.0251%" height="15" fill="rgb(208,133,18)" fg:x="82436" fg:w="28"/><text x="74.2221%" y="639.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (28 samples, 0.03%)</title><rect x="73.9721%" y="613" width="0.0251%" height="15" fill="rgb(207,35,49)" fg:x="82436" fg:w="28"/><text x="74.2221%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (12 samples, 0.01%)</title><rect x="73.9865%" y="597" width="0.0108%" height="15" fill="rgb(205,68,36)" fg:x="82452" fg:w="12"/><text x="74.2365%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="73.9865%" y="581" width="0.0108%" height="15" fill="rgb(245,62,40)" fg:x="82452" fg:w="12"/><text x="74.2365%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (231 samples, 0.21%)</title><rect x="73.8474%" y="853" width="0.2073%" height="15" fill="rgb(228,27,24)" fg:x="82297" fg:w="231"/><text x="74.0974%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (223 samples, 0.20%)</title><rect x="73.8546%" y="837" width="0.2001%" height="15" fill="rgb(253,19,12)" fg:x="82305" fg:w="223"/><text x="74.1046%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (223 samples, 0.20%)</title><rect x="73.8546%" y="821" width="0.2001%" height="15" fill="rgb(232,28,20)" fg:x="82305" fg:w="223"/><text x="74.1046%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (223 samples, 0.20%)</title><rect x="73.8546%" y="805" width="0.2001%" height="15" fill="rgb(218,35,51)" fg:x="82305" fg:w="223"/><text x="74.1046%" y="815.50"></text></g><g><title>alloc::alloc::alloc (223 samples, 0.20%)</title><rect x="73.8546%" y="789" width="0.2001%" height="15" fill="rgb(212,90,40)" fg:x="82305" fg:w="223"/><text x="74.1046%" y="799.50"></text></g><g><title>__rg_alloc (223 samples, 0.20%)</title><rect x="73.8546%" y="773" width="0.2001%" height="15" fill="rgb(220,172,12)" fg:x="82305" fg:w="223"/><text x="74.1046%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (223 samples, 0.20%)</title><rect x="73.8546%" y="757" width="0.2001%" height="15" fill="rgb(226,159,20)" fg:x="82305" fg:w="223"/><text x="74.1046%" y="767.50"></text></g><g><title>rust_alloc (201 samples, 0.18%)</title><rect x="73.8743%" y="741" width="0.1804%" height="15" fill="rgb(234,205,16)" fg:x="82327" fg:w="201"/><text x="74.1243%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (192 samples, 0.17%)</title><rect x="73.8824%" y="725" width="0.1723%" height="15" fill="rgb(207,9,39)" fg:x="82336" fg:w="192"/><text x="74.1324%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (192 samples, 0.17%)</title><rect x="73.8824%" y="709" width="0.1723%" height="15" fill="rgb(249,143,15)" fg:x="82336" fg:w="192"/><text x="74.1324%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (186 samples, 0.17%)</title><rect x="73.8878%" y="693" width="0.1669%" height="15" fill="rgb(253,133,29)" fg:x="82342" fg:w="186"/><text x="74.1378%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (64 samples, 0.06%)</title><rect x="73.9972%" y="677" width="0.0574%" height="15" fill="rgb(221,187,0)" fg:x="82464" fg:w="64"/><text x="74.2472%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (64 samples, 0.06%)</title><rect x="73.9972%" y="661" width="0.0574%" height="15" fill="rgb(205,204,26)" fg:x="82464" fg:w="64"/><text x="74.2472%" y="671.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (288 samples, 0.26%)</title><rect x="73.8088%" y="949" width="0.2584%" height="15" fill="rgb(224,68,54)" fg:x="82254" fg:w="288"/><text x="74.0588%" y="959.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (270 samples, 0.24%)</title><rect x="73.8249%" y="933" width="0.2423%" height="15" fill="rgb(209,67,4)" fg:x="82272" fg:w="270"/><text x="74.0749%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (245 samples, 0.22%)</title><rect x="73.8474%" y="917" width="0.2198%" height="15" fill="rgb(228,229,18)" fg:x="82297" fg:w="245"/><text x="74.0974%" y="927.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (245 samples, 0.22%)</title><rect x="73.8474%" y="901" width="0.2198%" height="15" fill="rgb(231,89,13)" fg:x="82297" fg:w="245"/><text x="74.0974%" y="911.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (245 samples, 0.22%)</title><rect x="73.8474%" y="885" width="0.2198%" height="15" fill="rgb(210,182,18)" fg:x="82297" fg:w="245"/><text x="74.0974%" y="895.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (245 samples, 0.22%)</title><rect x="73.8474%" y="869" width="0.2198%" height="15" fill="rgb(240,105,2)" fg:x="82297" fg:w="245"/><text x="74.0974%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (14 samples, 0.01%)</title><rect x="74.0547%" y="853" width="0.0126%" height="15" fill="rgb(207,170,50)" fg:x="82528" fg:w="14"/><text x="74.3047%" y="863.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (13 samples, 0.01%)</title><rect x="74.3517%" y="789" width="0.0117%" height="15" fill="rgb(232,133,24)" fg:x="82859" fg:w="13"/><text x="74.6017%" y="799.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (16 samples, 0.01%)</title><rect x="74.3633%" y="773" width="0.0144%" height="15" fill="rgb(235,166,27)" fg:x="82872" fg:w="16"/><text x="74.6133%" y="783.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (35 samples, 0.03%)</title><rect x="74.3633%" y="789" width="0.0314%" height="15" fill="rgb(209,19,13)" fg:x="82872" fg:w="35"/><text x="74.6133%" y="799.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (19 samples, 0.02%)</title><rect x="74.3777%" y="773" width="0.0170%" height="15" fill="rgb(226,79,39)" fg:x="82888" fg:w="19"/><text x="74.6277%" y="783.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="74.3831%" y="757" width="0.0117%" height="15" fill="rgb(222,163,10)" fg:x="82894" fg:w="13"/><text x="74.6331%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (13 samples, 0.01%)</title><rect x="74.3831%" y="741" width="0.0117%" height="15" fill="rgb(214,44,19)" fg:x="82894" fg:w="13"/><text x="74.6331%" y="751.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (19 samples, 0.02%)</title><rect x="74.5177%" y="773" width="0.0170%" height="15" fill="rgb(210,217,13)" fg:x="83044" fg:w="19"/><text x="74.7677%" y="783.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (19 samples, 0.02%)</title><rect x="74.5177%" y="757" width="0.0170%" height="15" fill="rgb(237,61,54)" fg:x="83044" fg:w="19"/><text x="74.7677%" y="767.50"></text></g><g><title>core::mem::replace (19 samples, 0.02%)</title><rect x="74.5177%" y="741" width="0.0170%" height="15" fill="rgb(226,184,24)" fg:x="83044" fg:w="19"/><text x="74.7677%" y="751.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="74.5177%" y="725" width="0.0170%" height="15" fill="rgb(223,226,4)" fg:x="83044" fg:w="19"/><text x="74.7677%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (223 samples, 0.20%)</title><rect x="74.3517%" y="853" width="0.2001%" height="15" fill="rgb(210,26,41)" fg:x="82859" fg:w="223"/><text x="74.6017%" y="863.50"></text></g><g><title>std::collections::hash::map::RandomState::new (223 samples, 0.20%)</title><rect x="74.3517%" y="837" width="0.2001%" height="15" fill="rgb(220,221,6)" fg:x="82859" fg:w="223"/><text x="74.6017%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (223 samples, 0.20%)</title><rect x="74.3517%" y="821" width="0.2001%" height="15" fill="rgb(225,89,49)" fg:x="82859" fg:w="223"/><text x="74.6017%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (223 samples, 0.20%)</title><rect x="74.3517%" y="805" width="0.2001%" height="15" fill="rgb(218,70,45)" fg:x="82859" fg:w="223"/><text x="74.6017%" y="815.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (175 samples, 0.16%)</title><rect x="74.3948%" y="789" width="0.1570%" height="15" fill="rgb(238,166,21)" fg:x="82907" fg:w="175"/><text x="74.6448%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (19 samples, 0.02%)</title><rect x="74.5347%" y="773" width="0.0170%" height="15" fill="rgb(224,141,44)" fg:x="83063" fg:w="19"/><text x="74.7847%" y="783.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="74.6119%" y="629" width="0.0108%" height="15" fill="rgb(230,12,49)" fg:x="83149" fg:w="12"/><text x="74.8619%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (27 samples, 0.02%)</title><rect x="74.6370%" y="549" width="0.0242%" height="15" fill="rgb(212,174,12)" fg:x="83177" fg:w="27"/><text x="74.8870%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (27 samples, 0.02%)</title><rect x="74.6370%" y="533" width="0.0242%" height="15" fill="rgb(246,67,9)" fg:x="83177" fg:w="27"/><text x="74.8870%" y="543.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (25 samples, 0.02%)</title><rect x="74.6388%" y="517" width="0.0224%" height="15" fill="rgb(239,35,23)" fg:x="83179" fg:w="25"/><text x="74.8888%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (32 samples, 0.03%)</title><rect x="74.6370%" y="565" width="0.0287%" height="15" fill="rgb(211,167,0)" fg:x="83177" fg:w="32"/><text x="74.8870%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (51 samples, 0.05%)</title><rect x="74.6299%" y="581" width="0.0458%" height="15" fill="rgb(225,119,45)" fg:x="83169" fg:w="51"/><text x="74.8799%" y="591.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (27 samples, 0.02%)</title><rect x="74.6954%" y="565" width="0.0242%" height="15" fill="rgb(210,162,6)" fg:x="83242" fg:w="27"/><text x="74.9454%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (366 samples, 0.33%)</title><rect x="74.6299%" y="613" width="0.3284%" height="15" fill="rgb(208,118,35)" fg:x="83169" fg:w="366"/><text x="74.8799%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (366 samples, 0.33%)</title><rect x="74.6299%" y="597" width="0.3284%" height="15" fill="rgb(239,4,53)" fg:x="83169" fg:w="366"/><text x="74.8799%" y="607.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (315 samples, 0.28%)</title><rect x="74.6756%" y="581" width="0.2827%" height="15" fill="rgb(213,130,21)" fg:x="83220" fg:w="315"/><text x="74.9256%" y="591.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (266 samples, 0.24%)</title><rect x="74.7196%" y="565" width="0.2387%" height="15" fill="rgb(235,148,0)" fg:x="83269" fg:w="266"/><text x="74.9696%" y="575.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (266 samples, 0.24%)</title><rect x="74.7196%" y="549" width="0.2387%" height="15" fill="rgb(244,224,18)" fg:x="83269" fg:w="266"/><text x="74.9696%" y="559.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (266 samples, 0.24%)</title><rect x="74.7196%" y="533" width="0.2387%" height="15" fill="rgb(211,214,4)" fg:x="83269" fg:w="266"/><text x="74.9696%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="74.9583%" y="613" width="0.0215%" height="15" fill="rgb(206,119,25)" fg:x="83535" fg:w="24"/><text x="75.2083%" y="623.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (20 samples, 0.02%)</title><rect x="74.9619%" y="597" width="0.0179%" height="15" fill="rgb(243,93,47)" fg:x="83539" fg:w="20"/><text x="75.2119%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="74.9798%" y="613" width="0.0215%" height="15" fill="rgb(224,194,6)" fg:x="83559" fg:w="24"/><text x="75.2298%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="74.9798%" y="597" width="0.0215%" height="15" fill="rgb(243,229,6)" fg:x="83559" fg:w="24"/><text x="75.2298%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="74.9798%" y="581" width="0.0215%" height="15" fill="rgb(207,23,50)" fg:x="83559" fg:w="24"/><text x="75.2298%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="74.9807%" y="565" width="0.0206%" height="15" fill="rgb(253,192,32)" fg:x="83560" fg:w="23"/><text x="75.2307%" y="575.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (23 samples, 0.02%)</title><rect x="74.9807%" y="549" width="0.0206%" height="15" fill="rgb(213,21,6)" fg:x="83560" fg:w="23"/><text x="75.2307%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (686 samples, 0.62%)</title><rect x="74.6029%" y="661" width="0.6156%" height="15" fill="rgb(243,151,13)" fg:x="83139" fg:w="686"/><text x="74.8529%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (676 samples, 0.61%)</title><rect x="74.6119%" y="645" width="0.6066%" height="15" fill="rgb(233,165,41)" fg:x="83149" fg:w="676"/><text x="74.8619%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (664 samples, 0.60%)</title><rect x="74.6227%" y="629" width="0.5958%" height="15" fill="rgb(246,176,45)" fg:x="83161" fg:w="664"/><text x="74.8727%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::take (232 samples, 0.21%)</title><rect x="75.0103%" y="613" width="0.2082%" height="15" fill="rgb(217,170,52)" fg:x="83593" fg:w="232"/><text x="75.2603%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (232 samples, 0.21%)</title><rect x="75.0103%" y="597" width="0.2082%" height="15" fill="rgb(214,203,54)" fg:x="83593" fg:w="232"/><text x="75.2603%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (977 samples, 0.88%)</title><rect x="74.3517%" y="885" width="0.8767%" height="15" fill="rgb(248,215,49)" fg:x="82859" fg:w="977"/><text x="74.6017%" y="895.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (977 samples, 0.88%)</title><rect x="74.3517%" y="869" width="0.8767%" height="15" fill="rgb(208,46,10)" fg:x="82859" fg:w="977"/><text x="74.6017%" y="879.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (754 samples, 0.68%)</title><rect x="74.5518%" y="853" width="0.6766%" height="15" fill="rgb(254,5,31)" fg:x="83082" fg:w="754"/><text x="74.8018%" y="863.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (754 samples, 0.68%)</title><rect x="74.5518%" y="837" width="0.6766%" height="15" fill="rgb(222,104,33)" fg:x="83082" fg:w="754"/><text x="74.8018%" y="847.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (754 samples, 0.68%)</title><rect x="74.5518%" y="821" width="0.6766%" height="15" fill="rgb(248,49,16)" fg:x="83082" fg:w="754"/><text x="74.8018%" y="831.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (754 samples, 0.68%)</title><rect x="74.5518%" y="805" width="0.6766%" height="15" fill="rgb(232,198,41)" fg:x="83082" fg:w="754"/><text x="74.8018%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (749 samples, 0.67%)</title><rect x="74.5563%" y="789" width="0.6721%" height="15" fill="rgb(214,125,3)" fg:x="83087" fg:w="749"/><text x="74.8063%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (721 samples, 0.65%)</title><rect x="74.5814%" y="773" width="0.6470%" height="15" fill="rgb(229,220,28)" fg:x="83115" fg:w="721"/><text x="74.8314%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (721 samples, 0.65%)</title><rect x="74.5814%" y="757" width="0.6470%" height="15" fill="rgb(222,64,37)" fg:x="83115" fg:w="721"/><text x="74.8314%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (721 samples, 0.65%)</title><rect x="74.5814%" y="741" width="0.6470%" height="15" fill="rgb(249,184,13)" fg:x="83115" fg:w="721"/><text x="74.8314%" y="751.50"></text></g><g><title>alloc::alloc::alloc (714 samples, 0.64%)</title><rect x="74.5877%" y="725" width="0.6407%" height="15" fill="rgb(252,176,6)" fg:x="83122" fg:w="714"/><text x="74.8377%" y="735.50"></text></g><g><title>__rg_alloc (714 samples, 0.64%)</title><rect x="74.5877%" y="709" width="0.6407%" height="15" fill="rgb(228,153,7)" fg:x="83122" fg:w="714"/><text x="74.8377%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (714 samples, 0.64%)</title><rect x="74.5877%" y="693" width="0.6407%" height="15" fill="rgb(242,193,5)" fg:x="83122" fg:w="714"/><text x="74.8377%" y="703.50"></text></g><g><title>rust_alloc (707 samples, 0.63%)</title><rect x="74.5940%" y="677" width="0.6344%" height="15" fill="rgb(232,140,9)" fg:x="83129" fg:w="707"/><text x="74.8440%" y="687.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (1,058 samples, 0.95%)</title><rect x="74.2916%" y="933" width="0.9494%" height="15" fill="rgb(213,222,16)" fg:x="82792" fg:w="1058"/><text x="74.5416%" y="943.50"></text></g><g><title>value_trait::Builder::object (991 samples, 0.89%)</title><rect x="74.3517%" y="917" width="0.8893%" height="15" fill="rgb(222,75,50)" fg:x="82859" fg:w="991"/><text x="74.6017%" y="927.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (991 samples, 0.89%)</title><rect x="74.3517%" y="901" width="0.8893%" height="15" fill="rgb(205,180,2)" fg:x="82859" fg:w="991"/><text x="74.6017%" y="911.50"></text></g><g><title>tremor_value::value::Value::Object (14 samples, 0.01%)</title><rect x="75.2284%" y="885" width="0.0126%" height="15" fill="rgb(216,34,7)" fg:x="83836" fg:w="14"/><text x="75.4784%" y="895.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,694 samples, 1.52%)</title><rect x="73.7343%" y="965" width="1.5201%" height="15" fill="rgb(253,16,32)" fg:x="82171" fg:w="1694"/><text x="73.9843%" y="975.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (1,323 samples, 1.19%)</title><rect x="74.0672%" y="949" width="1.1872%" height="15" fill="rgb(208,97,28)" fg:x="82542" fg:w="1323"/><text x="74.3172%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::default::Default for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::default (15 samples, 0.01%)</title><rect x="75.2409%" y="933" width="0.0135%" height="15" fill="rgb(225,92,11)" fg:x="83850" fg:w="15"/><text x="75.4909%" y="943.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="75.2409%" y="917" width="0.0135%" height="15" fill="rgb(243,38,12)" fg:x="83850" fg:w="15"/><text x="75.4909%" y="927.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (15 samples, 0.01%)</title><rect x="75.2409%" y="901" width="0.0135%" height="15" fill="rgb(208,139,16)" fg:x="83850" fg:w="15"/><text x="75.4909%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (27 samples, 0.02%)</title><rect x="75.2616%" y="965" width="0.0242%" height="15" fill="rgb(227,24,9)" fg:x="83873" fg:w="27"/><text x="75.5116%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (27 samples, 0.02%)</title><rect x="75.2616%" y="949" width="0.0242%" height="15" fill="rgb(206,62,11)" fg:x="83873" fg:w="27"/><text x="75.5116%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (27 samples, 0.02%)</title><rect x="75.2616%" y="933" width="0.0242%" height="15" fill="rgb(228,134,27)" fg:x="83873" fg:w="27"/><text x="75.5116%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (13 samples, 0.01%)</title><rect x="75.2741%" y="917" width="0.0117%" height="15" fill="rgb(205,55,33)" fg:x="83887" fg:w="13"/><text x="75.5241%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (13 samples, 0.01%)</title><rect x="75.2741%" y="901" width="0.0117%" height="15" fill="rgb(243,75,43)" fg:x="83887" fg:w="13"/><text x="75.5241%" y="911.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="75.2750%" y="885" width="0.0108%" height="15" fill="rgb(223,27,42)" fg:x="83888" fg:w="12"/><text x="75.5250%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (12 samples, 0.01%)</title><rect x="75.2750%" y="869" width="0.0108%" height="15" fill="rgb(232,189,33)" fg:x="83888" fg:w="12"/><text x="75.5250%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (12 samples, 0.01%)</title><rect x="75.2750%" y="853" width="0.0108%" height="15" fill="rgb(210,9,39)" fg:x="83888" fg:w="12"/><text x="75.5250%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="75.2750%" y="837" width="0.0108%" height="15" fill="rgb(242,85,26)" fg:x="83888" fg:w="12"/><text x="75.5250%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.01%)</title><rect x="75.2750%" y="821" width="0.0108%" height="15" fill="rgb(248,44,4)" fg:x="83888" fg:w="12"/><text x="75.5250%" y="831.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (21 samples, 0.02%)</title><rect x="75.2957%" y="949" width="0.0188%" height="15" fill="rgb(250,96,46)" fg:x="83911" fg:w="21"/><text x="75.5457%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="75.3028%" y="933" width="0.0117%" height="15" fill="rgb(229,116,26)" fg:x="83919" fg:w="13"/><text x="75.5528%" y="943.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="75.3028%" y="917" width="0.0117%" height="15" fill="rgb(246,94,34)" fg:x="83919" fg:w="13"/><text x="75.5528%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="75.3028%" y="901" width="0.0117%" height="15" fill="rgb(251,73,21)" fg:x="83919" fg:w="13"/><text x="75.5528%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="75.3028%" y="885" width="0.0117%" height="15" fill="rgb(254,121,25)" fg:x="83919" fg:w="13"/><text x="75.5528%" y="895.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="75.3028%" y="869" width="0.0117%" height="15" fill="rgb(215,161,49)" fg:x="83919" fg:w="13"/><text x="75.5528%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="75.3028%" y="853" width="0.0117%" height="15" fill="rgb(221,43,13)" fg:x="83919" fg:w="13"/><text x="75.5528%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (39 samples, 0.03%)</title><rect x="75.3145%" y="949" width="0.0350%" height="15" fill="rgb(249,5,37)" fg:x="83932" fg:w="39"/><text x="75.5645%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (39 samples, 0.03%)</title><rect x="75.3145%" y="933" width="0.0350%" height="15" fill="rgb(226,25,44)" fg:x="83932" fg:w="39"/><text x="75.5645%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (24 samples, 0.02%)</title><rect x="75.3280%" y="917" width="0.0215%" height="15" fill="rgb(238,189,16)" fg:x="83947" fg:w="24"/><text x="75.5780%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (22 samples, 0.02%)</title><rect x="75.3298%" y="901" width="0.0197%" height="15" fill="rgb(251,186,8)" fg:x="83949" fg:w="22"/><text x="75.5798%" y="911.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="75.3378%" y="885" width="0.0117%" height="15" fill="rgb(254,34,31)" fg:x="83958" fg:w="13"/><text x="75.5878%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="75.3378%" y="869" width="0.0117%" height="15" fill="rgb(225,215,27)" fg:x="83958" fg:w="13"/><text x="75.5878%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (38 samples, 0.03%)</title><rect x="75.3504%" y="933" width="0.0341%" height="15" fill="rgb(221,192,48)" fg:x="83972" fg:w="38"/><text x="75.6004%" y="943.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (23 samples, 0.02%)</title><rect x="75.4195%" y="869" width="0.0206%" height="15" fill="rgb(219,137,20)" fg:x="84049" fg:w="23"/><text x="75.6695%" y="879.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="75.4482%" y="837" width="0.0108%" height="15" fill="rgb(219,84,11)" fg:x="84081" fg:w="12"/><text x="75.6982%" y="847.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="75.4949%" y="725" width="0.0162%" height="15" fill="rgb(224,10,23)" fg:x="84133" fg:w="18"/><text x="75.7449%" y="735.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="75.4949%" y="709" width="0.0162%" height="15" fill="rgb(248,22,39)" fg:x="84133" fg:w="18"/><text x="75.7449%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (36 samples, 0.03%)</title><rect x="75.4841%" y="773" width="0.0323%" height="15" fill="rgb(212,154,20)" fg:x="84121" fg:w="36"/><text x="75.7341%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (36 samples, 0.03%)</title><rect x="75.4841%" y="757" width="0.0323%" height="15" fill="rgb(236,199,50)" fg:x="84121" fg:w="36"/><text x="75.7341%" y="767.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (35 samples, 0.03%)</title><rect x="75.4850%" y="741" width="0.0314%" height="15" fill="rgb(211,9,17)" fg:x="84122" fg:w="35"/><text x="75.7350%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (67 samples, 0.06%)</title><rect x="75.4662%" y="805" width="0.0601%" height="15" fill="rgb(243,216,36)" fg:x="84101" fg:w="67"/><text x="75.7162%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (67 samples, 0.06%)</title><rect x="75.4662%" y="789" width="0.0601%" height="15" fill="rgb(250,2,10)" fg:x="84101" fg:w="67"/><text x="75.7162%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (88 samples, 0.08%)</title><rect x="75.4482%" y="853" width="0.0790%" height="15" fill="rgb(226,50,48)" fg:x="84081" fg:w="88"/><text x="75.6982%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (68 samples, 0.06%)</title><rect x="75.4662%" y="837" width="0.0610%" height="15" fill="rgb(243,81,16)" fg:x="84101" fg:w="68"/><text x="75.7162%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (68 samples, 0.06%)</title><rect x="75.4662%" y="821" width="0.0610%" height="15" fill="rgb(250,14,2)" fg:x="84101" fg:w="68"/><text x="75.7162%" y="831.50"></text></g><g><title>rust_dealloc (98 samples, 0.09%)</title><rect x="75.4401%" y="869" width="0.0879%" height="15" fill="rgb(233,135,29)" fg:x="84072" fg:w="98"/><text x="75.6901%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (205 samples, 0.18%)</title><rect x="75.3495%" y="949" width="0.1840%" height="15" fill="rgb(224,64,43)" fg:x="83971" fg:w="205"/><text x="75.5995%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (166 samples, 0.15%)</title><rect x="75.3845%" y="933" width="0.1490%" height="15" fill="rgb(238,84,13)" fg:x="84010" fg:w="166"/><text x="75.6345%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (149 samples, 0.13%)</title><rect x="75.3998%" y="917" width="0.1337%" height="15" fill="rgb(253,48,26)" fg:x="84027" fg:w="149"/><text x="75.6498%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (149 samples, 0.13%)</title><rect x="75.3998%" y="901" width="0.1337%" height="15" fill="rgb(205,223,31)" fg:x="84027" fg:w="149"/><text x="75.6498%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (149 samples, 0.13%)</title><rect x="75.3998%" y="885" width="0.1337%" height="15" fill="rgb(221,41,32)" fg:x="84027" fg:w="149"/><text x="75.6498%" y="895.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="75.5577%" y="805" width="0.0135%" height="15" fill="rgb(213,158,31)" fg:x="84203" fg:w="15"/><text x="75.8077%" y="815.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="75.5595%" y="789" width="0.0117%" height="15" fill="rgb(245,126,43)" fg:x="84205" fg:w="13"/><text x="75.8095%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (41 samples, 0.04%)</title><rect x="75.5424%" y="917" width="0.0368%" height="15" fill="rgb(227,7,22)" fg:x="84186" fg:w="41"/><text x="75.7924%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (41 samples, 0.04%)</title><rect x="75.5424%" y="901" width="0.0368%" height="15" fill="rgb(252,90,44)" fg:x="84186" fg:w="41"/><text x="75.7924%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (41 samples, 0.04%)</title><rect x="75.5424%" y="885" width="0.0368%" height="15" fill="rgb(253,91,0)" fg:x="84186" fg:w="41"/><text x="75.7924%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (41 samples, 0.04%)</title><rect x="75.5424%" y="869" width="0.0368%" height="15" fill="rgb(252,175,49)" fg:x="84186" fg:w="41"/><text x="75.7924%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (29 samples, 0.03%)</title><rect x="75.5532%" y="853" width="0.0260%" height="15" fill="rgb(246,150,1)" fg:x="84198" fg:w="29"/><text x="75.8032%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (29 samples, 0.03%)</title><rect x="75.5532%" y="837" width="0.0260%" height="15" fill="rgb(241,192,25)" fg:x="84198" fg:w="29"/><text x="75.8032%" y="847.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (27 samples, 0.02%)</title><rect x="75.5550%" y="821" width="0.0242%" height="15" fill="rgb(239,187,11)" fg:x="84200" fg:w="27"/><text x="75.8050%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (55 samples, 0.05%)</title><rect x="75.5379%" y="933" width="0.0494%" height="15" fill="rgb(218,202,51)" fg:x="84181" fg:w="55"/><text x="75.7879%" y="943.50"></text></g><g><title>rust_dealloc (73 samples, 0.07%)</title><rect x="75.5335%" y="949" width="0.0655%" height="15" fill="rgb(225,176,8)" fg:x="84176" fg:w="73"/><text x="75.7835%" y="959.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="75.5873%" y="933" width="0.0117%" height="15" fill="rgb(219,122,41)" fg:x="84236" fg:w="13"/><text x="75.8373%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (356 samples, 0.32%)</title><rect x="75.2858%" y="965" width="0.3194%" height="15" fill="rgb(248,140,20)" fg:x="83900" fg:w="356"/><text x="75.5358%" y="975.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (2,652 samples, 2.38%)</title><rect x="73.2426%" y="981" width="2.3797%" height="15" fill="rgb(245,41,37)" fg:x="81623" fg:w="2652"/><text x="73.4926%" y="991.50">tr..</text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (19 samples, 0.02%)</title><rect x="75.6052%" y="965" width="0.0170%" height="15" fill="rgb(235,82,39)" fg:x="84256" fg:w="19"/><text x="75.8552%" y="975.50"></text></g><g><title>tremor_pipeline::EventId::new (14 samples, 0.01%)</title><rect x="75.6097%" y="949" width="0.0126%" height="15" fill="rgb(230,108,42)" fg:x="84261" fg:w="14"/><text x="75.8597%" y="959.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="76.0153%" y="853" width="0.0108%" height="15" fill="rgb(215,150,50)" fg:x="84713" fg:w="12"/><text x="76.2653%" y="863.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="76.0279%" y="821" width="0.0126%" height="15" fill="rgb(233,212,5)" fg:x="84727" fg:w="14"/><text x="76.2779%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="76.0440%" y="805" width="0.0332%" height="15" fill="rgb(245,80,22)" fg:x="84745" fg:w="37"/><text x="76.2940%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (37 samples, 0.03%)</title><rect x="76.0440%" y="789" width="0.0332%" height="15" fill="rgb(238,129,16)" fg:x="84745" fg:w="37"/><text x="76.2940%" y="799.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (33 samples, 0.03%)</title><rect x="76.0476%" y="773" width="0.0296%" height="15" fill="rgb(240,19,0)" fg:x="84749" fg:w="33"/><text x="76.2976%" y="783.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (24 samples, 0.02%)</title><rect x="76.0557%" y="757" width="0.0215%" height="15" fill="rgb(232,42,35)" fg:x="84758" fg:w="24"/><text x="76.3057%" y="767.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (24 samples, 0.02%)</title><rect x="76.0557%" y="741" width="0.0215%" height="15" fill="rgb(223,130,24)" fg:x="84758" fg:w="24"/><text x="76.3057%" y="751.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (24 samples, 0.02%)</title><rect x="76.0557%" y="725" width="0.0215%" height="15" fill="rgb(237,16,22)" fg:x="84758" fg:w="24"/><text x="76.3057%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (239 samples, 0.21%)</title><rect x="76.0270%" y="853" width="0.2145%" height="15" fill="rgb(248,192,20)" fg:x="84726" fg:w="239"/><text x="76.2770%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (238 samples, 0.21%)</title><rect x="76.0279%" y="837" width="0.2136%" height="15" fill="rgb(233,167,2)" fg:x="84727" fg:w="238"/><text x="76.2779%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (222 samples, 0.20%)</title><rect x="76.0422%" y="821" width="0.1992%" height="15" fill="rgb(252,71,44)" fg:x="84743" fg:w="222"/><text x="76.2922%" y="831.50"></text></g><g><title>snmalloc::FreeListIter::take (166 samples, 0.15%)</title><rect x="76.0925%" y="805" width="0.1490%" height="15" fill="rgb(238,37,47)" fg:x="84799" fg:w="166"/><text x="76.3425%" y="815.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (166 samples, 0.15%)</title><rect x="76.0925%" y="789" width="0.1490%" height="15" fill="rgb(214,202,54)" fg:x="84799" fg:w="166"/><text x="76.3425%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (259 samples, 0.23%)</title><rect x="76.0117%" y="965" width="0.2324%" height="15" fill="rgb(254,165,40)" fg:x="84709" fg:w="259"/><text x="76.2617%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (259 samples, 0.23%)</title><rect x="76.0117%" y="949" width="0.2324%" height="15" fill="rgb(246,173,38)" fg:x="84709" fg:w="259"/><text x="76.2617%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (259 samples, 0.23%)</title><rect x="76.0117%" y="933" width="0.2324%" height="15" fill="rgb(215,3,27)" fg:x="84709" fg:w="259"/><text x="76.2617%" y="943.50"></text></g><g><title>alloc::alloc::alloc (259 samples, 0.23%)</title><rect x="76.0117%" y="917" width="0.2324%" height="15" fill="rgb(239,169,51)" fg:x="84709" fg:w="259"/><text x="76.2617%" y="927.50"></text></g><g><title>__rg_alloc (259 samples, 0.23%)</title><rect x="76.0117%" y="901" width="0.2324%" height="15" fill="rgb(212,5,25)" fg:x="84709" fg:w="259"/><text x="76.2617%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (259 samples, 0.23%)</title><rect x="76.0117%" y="885" width="0.2324%" height="15" fill="rgb(243,45,17)" fg:x="84709" fg:w="259"/><text x="76.2617%" y="895.50"></text></g><g><title>rust_alloc (255 samples, 0.23%)</title><rect x="76.0153%" y="869" width="0.2288%" height="15" fill="rgb(242,97,9)" fg:x="84713" fg:w="255"/><text x="76.2653%" y="879.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (734 samples, 0.66%)</title><rect x="75.6223%" y="981" width="0.6586%" height="15" fill="rgb(228,71,31)" fg:x="84275" fg:w="734"/><text x="75.8723%" y="991.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (13 samples, 0.01%)</title><rect x="76.2693%" y="965" width="0.0117%" height="15" fill="rgb(252,184,16)" fg:x="84996" fg:w="13"/><text x="76.5193%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (13 samples, 0.01%)</title><rect x="76.2693%" y="949" width="0.0117%" height="15" fill="rgb(236,169,46)" fg:x="84996" fg:w="13"/><text x="76.5193%" y="959.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="76.2693%" y="933" width="0.0117%" height="15" fill="rgb(207,17,47)" fg:x="84996" fg:w="13"/><text x="76.5193%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (13 samples, 0.01%)</title><rect x="76.2693%" y="917" width="0.0117%" height="15" fill="rgb(206,201,28)" fg:x="84996" fg:w="13"/><text x="76.5193%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.01%)</title><rect x="76.2693%" y="901" width="0.0117%" height="15" fill="rgb(224,184,23)" fg:x="84996" fg:w="13"/><text x="76.5193%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (66 samples, 0.06%)</title><rect x="76.2809%" y="773" width="0.0592%" height="15" fill="rgb(208,139,48)" fg:x="85009" fg:w="66"/><text x="76.5309%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (66 samples, 0.06%)</title><rect x="76.2809%" y="757" width="0.0592%" height="15" fill="rgb(208,130,10)" fg:x="85009" fg:w="66"/><text x="76.5309%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (55 samples, 0.05%)</title><rect x="76.2908%" y="741" width="0.0494%" height="15" fill="rgb(211,213,45)" fg:x="85020" fg:w="55"/><text x="76.5408%" y="751.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (44 samples, 0.04%)</title><rect x="76.3007%" y="725" width="0.0395%" height="15" fill="rgb(235,100,30)" fg:x="85031" fg:w="44"/><text x="76.5507%" y="735.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (44 samples, 0.04%)</title><rect x="76.3007%" y="709" width="0.0395%" height="15" fill="rgb(206,144,31)" fg:x="85031" fg:w="44"/><text x="76.5507%" y="719.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (44 samples, 0.04%)</title><rect x="76.3007%" y="693" width="0.0395%" height="15" fill="rgb(224,200,26)" fg:x="85031" fg:w="44"/><text x="76.5507%" y="703.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (72 samples, 0.06%)</title><rect x="76.2809%" y="965" width="0.0646%" height="15" fill="rgb(247,104,53)" fg:x="85009" fg:w="72"/><text x="76.5309%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (72 samples, 0.06%)</title><rect x="76.2809%" y="949" width="0.0646%" height="15" fill="rgb(220,14,17)" fg:x="85009" fg:w="72"/><text x="76.5309%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (72 samples, 0.06%)</title><rect x="76.2809%" y="933" width="0.0646%" height="15" fill="rgb(230,140,40)" fg:x="85009" fg:w="72"/><text x="76.5309%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (72 samples, 0.06%)</title><rect x="76.2809%" y="917" width="0.0646%" height="15" fill="rgb(229,2,41)" fg:x="85009" fg:w="72"/><text x="76.5309%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (72 samples, 0.06%)</title><rect x="76.2809%" y="901" width="0.0646%" height="15" fill="rgb(232,89,16)" fg:x="85009" fg:w="72"/><text x="76.5309%" y="911.50"></text></g><g><title>alloc::alloc::alloc (72 samples, 0.06%)</title><rect x="76.2809%" y="885" width="0.0646%" height="15" fill="rgb(247,59,52)" fg:x="85009" fg:w="72"/><text x="76.5309%" y="895.50"></text></g><g><title>__rg_alloc (72 samples, 0.06%)</title><rect x="76.2809%" y="869" width="0.0646%" height="15" fill="rgb(226,110,21)" fg:x="85009" fg:w="72"/><text x="76.5309%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (72 samples, 0.06%)</title><rect x="76.2809%" y="853" width="0.0646%" height="15" fill="rgb(224,176,43)" fg:x="85009" fg:w="72"/><text x="76.5309%" y="863.50"></text></g><g><title>rust_alloc (72 samples, 0.06%)</title><rect x="76.2809%" y="837" width="0.0646%" height="15" fill="rgb(221,73,6)" fg:x="85009" fg:w="72"/><text x="76.5309%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (72 samples, 0.06%)</title><rect x="76.2809%" y="821" width="0.0646%" height="15" fill="rgb(232,78,19)" fg:x="85009" fg:w="72"/><text x="76.5309%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (72 samples, 0.06%)</title><rect x="76.2809%" y="805" width="0.0646%" height="15" fill="rgb(233,112,48)" fg:x="85009" fg:w="72"/><text x="76.5309%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (72 samples, 0.06%)</title><rect x="76.2809%" y="789" width="0.0646%" height="15" fill="rgb(243,131,47)" fg:x="85009" fg:w="72"/><text x="76.5309%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="76.3455%" y="805" width="0.0224%" height="15" fill="rgb(226,51,1)" fg:x="85081" fg:w="25"/><text x="76.5955%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (25 samples, 0.02%)</title><rect x="76.3455%" y="789" width="0.0224%" height="15" fill="rgb(247,58,7)" fg:x="85081" fg:w="25"/><text x="76.5955%" y="799.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (21 samples, 0.02%)</title><rect x="76.3491%" y="773" width="0.0188%" height="15" fill="rgb(209,7,32)" fg:x="85085" fg:w="21"/><text x="76.5991%" y="783.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (18 samples, 0.02%)</title><rect x="76.3518%" y="757" width="0.0162%" height="15" fill="rgb(209,39,41)" fg:x="85088" fg:w="18"/><text x="76.6018%" y="767.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="76.3518%" y="741" width="0.0162%" height="15" fill="rgb(226,182,46)" fg:x="85088" fg:w="18"/><text x="76.6018%" y="751.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="76.3518%" y="725" width="0.0162%" height="15" fill="rgb(230,219,10)" fg:x="85088" fg:w="18"/><text x="76.6018%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (28 samples, 0.03%)</title><rect x="76.3455%" y="965" width="0.0251%" height="15" fill="rgb(227,175,30)" fg:x="85081" fg:w="28"/><text x="76.5955%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.03%)</title><rect x="76.3455%" y="949" width="0.0251%" height="15" fill="rgb(217,2,50)" fg:x="85081" fg:w="28"/><text x="76.5955%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.03%)</title><rect x="76.3455%" y="933" width="0.0251%" height="15" fill="rgb(229,160,0)" fg:x="85081" fg:w="28"/><text x="76.5955%" y="943.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.03%)</title><rect x="76.3455%" y="917" width="0.0251%" height="15" fill="rgb(207,78,37)" fg:x="85081" fg:w="28"/><text x="76.5955%" y="927.50"></text></g><g><title>__rg_alloc (28 samples, 0.03%)</title><rect x="76.3455%" y="901" width="0.0251%" height="15" fill="rgb(225,57,0)" fg:x="85081" fg:w="28"/><text x="76.5955%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (28 samples, 0.03%)</title><rect x="76.3455%" y="885" width="0.0251%" height="15" fill="rgb(232,154,2)" fg:x="85081" fg:w="28"/><text x="76.5955%" y="895.50"></text></g><g><title>rust_alloc (28 samples, 0.03%)</title><rect x="76.3455%" y="869" width="0.0251%" height="15" fill="rgb(241,212,25)" fg:x="85081" fg:w="28"/><text x="76.5955%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="76.3455%" y="853" width="0.0251%" height="15" fill="rgb(226,69,20)" fg:x="85081" fg:w="28"/><text x="76.5955%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="76.3455%" y="837" width="0.0251%" height="15" fill="rgb(247,184,54)" fg:x="85081" fg:w="28"/><text x="76.5955%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="76.3455%" y="821" width="0.0251%" height="15" fill="rgb(210,145,0)" fg:x="85081" fg:w="28"/><text x="76.5955%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.04%)</title><rect x="76.4093%" y="629" width="0.0449%" height="15" fill="rgb(253,82,12)" fg:x="85152" fg:w="50"/><text x="76.6593%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (50 samples, 0.04%)</title><rect x="76.4093%" y="613" width="0.0449%" height="15" fill="rgb(245,42,11)" fg:x="85152" fg:w="50"/><text x="76.6593%" y="623.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (41 samples, 0.04%)</title><rect x="76.4173%" y="597" width="0.0368%" height="15" fill="rgb(219,147,32)" fg:x="85161" fg:w="41"/><text x="76.6673%" y="607.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (38 samples, 0.03%)</title><rect x="76.4200%" y="581" width="0.0341%" height="15" fill="rgb(246,12,7)" fg:x="85164" fg:w="38"/><text x="76.6700%" y="591.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (38 samples, 0.03%)</title><rect x="76.4200%" y="565" width="0.0341%" height="15" fill="rgb(243,50,9)" fg:x="85164" fg:w="38"/><text x="76.6700%" y="575.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (38 samples, 0.03%)</title><rect x="76.4200%" y="549" width="0.0341%" height="15" fill="rgb(219,149,6)" fg:x="85164" fg:w="38"/><text x="76.6700%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="76.4577%" y="629" width="0.0126%" height="15" fill="rgb(241,51,42)" fg:x="85206" fg:w="14"/><text x="76.7077%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="76.4577%" y="613" width="0.0126%" height="15" fill="rgb(226,128,27)" fg:x="85206" fg:w="14"/><text x="76.7077%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="76.4577%" y="597" width="0.0126%" height="15" fill="rgb(244,144,4)" fg:x="85206" fg:w="14"/><text x="76.7077%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="76.4586%" y="581" width="0.0117%" height="15" fill="rgb(221,4,13)" fg:x="85207" fg:w="13"/><text x="76.7086%" y="591.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (13 samples, 0.01%)</title><rect x="76.4586%" y="565" width="0.0117%" height="15" fill="rgb(208,170,28)" fg:x="85207" fg:w="13"/><text x="76.7086%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (143 samples, 0.13%)</title><rect x="76.3994%" y="677" width="0.1283%" height="15" fill="rgb(226,131,13)" fg:x="85141" fg:w="143"/><text x="76.6494%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (143 samples, 0.13%)</title><rect x="76.3994%" y="661" width="0.1283%" height="15" fill="rgb(215,72,41)" fg:x="85141" fg:w="143"/><text x="76.6494%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (135 samples, 0.12%)</title><rect x="76.4066%" y="645" width="0.1211%" height="15" fill="rgb(243,108,20)" fg:x="85149" fg:w="135"/><text x="76.6566%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::take (61 samples, 0.05%)</title><rect x="76.4730%" y="629" width="0.0547%" height="15" fill="rgb(230,189,17)" fg:x="85223" fg:w="61"/><text x="76.7230%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (61 samples, 0.05%)</title><rect x="76.4730%" y="613" width="0.0547%" height="15" fill="rgb(220,50,17)" fg:x="85223" fg:w="61"/><text x="76.7230%" y="623.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (184 samples, 0.17%)</title><rect x="76.3716%" y="837" width="0.1651%" height="15" fill="rgb(248,152,48)" fg:x="85110" fg:w="184"/><text x="76.6216%" y="847.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (175 samples, 0.16%)</title><rect x="76.3796%" y="821" width="0.1570%" height="15" fill="rgb(244,91,11)" fg:x="85119" fg:w="175"/><text x="76.6296%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (175 samples, 0.16%)</title><rect x="76.3796%" y="805" width="0.1570%" height="15" fill="rgb(220,157,5)" fg:x="85119" fg:w="175"/><text x="76.6296%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (163 samples, 0.15%)</title><rect x="76.3904%" y="789" width="0.1463%" height="15" fill="rgb(253,137,8)" fg:x="85131" fg:w="163"/><text x="76.6404%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (160 samples, 0.14%)</title><rect x="76.3931%" y="773" width="0.1436%" height="15" fill="rgb(217,137,51)" fg:x="85134" fg:w="160"/><text x="76.6431%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (160 samples, 0.14%)</title><rect x="76.3931%" y="757" width="0.1436%" height="15" fill="rgb(218,209,53)" fg:x="85134" fg:w="160"/><text x="76.6431%" y="767.50"></text></g><g><title>alloc::alloc::alloc (160 samples, 0.14%)</title><rect x="76.3931%" y="741" width="0.1436%" height="15" fill="rgb(249,137,25)" fg:x="85134" fg:w="160"/><text x="76.6431%" y="751.50"></text></g><g><title>__rg_alloc (160 samples, 0.14%)</title><rect x="76.3931%" y="725" width="0.1436%" height="15" fill="rgb(239,155,26)" fg:x="85134" fg:w="160"/><text x="76.6431%" y="735.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (160 samples, 0.14%)</title><rect x="76.3931%" y="709" width="0.1436%" height="15" fill="rgb(227,85,46)" fg:x="85134" fg:w="160"/><text x="76.6431%" y="719.50"></text></g><g><title>rust_alloc (160 samples, 0.14%)</title><rect x="76.3931%" y="693" width="0.1436%" height="15" fill="rgb(251,107,43)" fg:x="85134" fg:w="160"/><text x="76.6431%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (206 samples, 0.18%)</title><rect x="76.3707%" y="917" width="0.1848%" height="15" fill="rgb(234,170,33)" fg:x="85109" fg:w="206"/><text x="76.6207%" y="927.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (206 samples, 0.18%)</title><rect x="76.3707%" y="901" width="0.1848%" height="15" fill="rgb(206,29,35)" fg:x="85109" fg:w="206"/><text x="76.6207%" y="911.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (205 samples, 0.18%)</title><rect x="76.3716%" y="885" width="0.1840%" height="15" fill="rgb(227,138,25)" fg:x="85110" fg:w="205"/><text x="76.6216%" y="895.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (205 samples, 0.18%)</title><rect x="76.3716%" y="869" width="0.1840%" height="15" fill="rgb(249,131,35)" fg:x="85110" fg:w="205"/><text x="76.6216%" y="879.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (205 samples, 0.18%)</title><rect x="76.3716%" y="853" width="0.1840%" height="15" fill="rgb(239,6,40)" fg:x="85110" fg:w="205"/><text x="76.6216%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (21 samples, 0.02%)</title><rect x="76.5367%" y="837" width="0.0188%" height="15" fill="rgb(246,136,47)" fg:x="85294" fg:w="21"/><text x="76.7867%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (21 samples, 0.02%)</title><rect x="76.5367%" y="821" width="0.0188%" height="15" fill="rgb(253,58,26)" fg:x="85294" fg:w="21"/><text x="76.7867%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (21 samples, 0.02%)</title><rect x="76.5367%" y="805" width="0.0188%" height="15" fill="rgb(237,141,10)" fg:x="85294" fg:w="21"/><text x="76.7867%" y="815.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (12 samples, 0.01%)</title><rect x="76.8310%" y="805" width="0.0108%" height="15" fill="rgb(234,156,12)" fg:x="85622" fg:w="12"/><text x="77.0810%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.01%)</title><rect x="76.8310%" y="789" width="0.0108%" height="15" fill="rgb(243,224,36)" fg:x="85622" fg:w="12"/><text x="77.0810%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (24 samples, 0.02%)</title><rect x="76.8310%" y="869" width="0.0215%" height="15" fill="rgb(205,229,51)" fg:x="85622" fg:w="24"/><text x="77.0810%" y="879.50"></text></g><g><title>std::collections::hash::map::RandomState::new (24 samples, 0.02%)</title><rect x="76.8310%" y="853" width="0.0215%" height="15" fill="rgb(223,189,4)" fg:x="85622" fg:w="24"/><text x="77.0810%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24 samples, 0.02%)</title><rect x="76.8310%" y="837" width="0.0215%" height="15" fill="rgb(249,167,54)" fg:x="85622" fg:w="24"/><text x="77.0810%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24 samples, 0.02%)</title><rect x="76.8310%" y="821" width="0.0215%" height="15" fill="rgb(218,34,28)" fg:x="85622" fg:w="24"/><text x="77.0810%" y="831.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (12 samples, 0.01%)</title><rect x="76.8418%" y="805" width="0.0108%" height="15" fill="rgb(232,109,42)" fg:x="85634" fg:w="12"/><text x="77.0918%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="76.8956%" y="629" width="0.0179%" height="15" fill="rgb(248,214,46)" fg:x="85694" fg:w="20"/><text x="77.1456%" y="639.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (19 samples, 0.02%)</title><rect x="76.8965%" y="613" width="0.0170%" height="15" fill="rgb(244,216,40)" fg:x="85695" fg:w="19"/><text x="77.1465%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.08%)</title><rect x="76.8857%" y="677" width="0.0843%" height="15" fill="rgb(231,226,31)" fg:x="85683" fg:w="94"/><text x="77.1357%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.08%)</title><rect x="76.8857%" y="661" width="0.0843%" height="15" fill="rgb(238,38,43)" fg:x="85683" fg:w="94"/><text x="77.1357%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (84 samples, 0.08%)</title><rect x="76.8947%" y="645" width="0.0754%" height="15" fill="rgb(208,88,43)" fg:x="85693" fg:w="84"/><text x="77.1447%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::take (60 samples, 0.05%)</title><rect x="76.9162%" y="629" width="0.0538%" height="15" fill="rgb(205,136,37)" fg:x="85717" fg:w="60"/><text x="77.1662%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (60 samples, 0.05%)</title><rect x="76.9162%" y="613" width="0.0538%" height="15" fill="rgb(237,34,14)" fg:x="85717" fg:w="60"/><text x="77.1662%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (135 samples, 0.12%)</title><rect x="76.8588%" y="805" width="0.1211%" height="15" fill="rgb(236,193,44)" fg:x="85653" fg:w="135"/><text x="77.1088%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (117 samples, 0.10%)</title><rect x="76.8750%" y="789" width="0.1050%" height="15" fill="rgb(231,48,10)" fg:x="85671" fg:w="117"/><text x="77.1250%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (112 samples, 0.10%)</title><rect x="76.8795%" y="773" width="0.1005%" height="15" fill="rgb(213,141,34)" fg:x="85676" fg:w="112"/><text x="77.1295%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (112 samples, 0.10%)</title><rect x="76.8795%" y="757" width="0.1005%" height="15" fill="rgb(249,130,34)" fg:x="85676" fg:w="112"/><text x="77.1295%" y="767.50"></text></g><g><title>alloc::alloc::alloc (112 samples, 0.10%)</title><rect x="76.8795%" y="741" width="0.1005%" height="15" fill="rgb(219,42,41)" fg:x="85676" fg:w="112"/><text x="77.1295%" y="751.50"></text></g><g><title>__rg_alloc (112 samples, 0.10%)</title><rect x="76.8795%" y="725" width="0.1005%" height="15" fill="rgb(224,100,54)" fg:x="85676" fg:w="112"/><text x="77.1295%" y="735.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (112 samples, 0.10%)</title><rect x="76.8795%" y="709" width="0.1005%" height="15" fill="rgb(229,200,27)" fg:x="85676" fg:w="112"/><text x="77.1295%" y="719.50"></text></g><g><title>rust_alloc (112 samples, 0.10%)</title><rect x="76.8795%" y="693" width="0.1005%" height="15" fill="rgb(217,118,10)" fg:x="85676" fg:w="112"/><text x="77.1295%" y="703.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (169 samples, 0.15%)</title><rect x="76.8310%" y="885" width="0.1516%" height="15" fill="rgb(206,22,3)" fg:x="85622" fg:w="169"/><text x="77.0810%" y="895.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (145 samples, 0.13%)</title><rect x="76.8525%" y="869" width="0.1301%" height="15" fill="rgb(232,163,46)" fg:x="85646" fg:w="145"/><text x="77.1025%" y="879.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (145 samples, 0.13%)</title><rect x="76.8525%" y="853" width="0.1301%" height="15" fill="rgb(206,95,13)" fg:x="85646" fg:w="145"/><text x="77.1025%" y="863.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (138 samples, 0.12%)</title><rect x="76.8588%" y="837" width="0.1238%" height="15" fill="rgb(253,154,18)" fg:x="85653" fg:w="138"/><text x="77.1088%" y="847.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (138 samples, 0.12%)</title><rect x="76.8588%" y="821" width="0.1238%" height="15" fill="rgb(219,32,23)" fg:x="85653" fg:w="138"/><text x="77.1088%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="77.0464%" y="805" width="0.0135%" height="15" fill="rgb(230,191,45)" fg:x="85862" fg:w="15"/><text x="77.2964%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="77.0464%" y="789" width="0.0135%" height="15" fill="rgb(229,64,36)" fg:x="85862" fg:w="15"/><text x="77.2964%" y="799.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="77.0464%" y="773" width="0.0135%" height="15" fill="rgb(205,129,25)" fg:x="85862" fg:w="15"/><text x="77.2964%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="77.0464%" y="757" width="0.0135%" height="15" fill="rgb(254,112,7)" fg:x="85862" fg:w="15"/><text x="77.2964%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="77.0464%" y="741" width="0.0135%" height="15" fill="rgb(226,53,48)" fg:x="85862" fg:w="15"/><text x="77.2964%" y="751.50"></text></g><g><title>abi_stable::erased_types::iterator::next (25 samples, 0.02%)</title><rect x="77.0401%" y="837" width="0.0224%" height="15" fill="rgb(214,153,38)" fg:x="85855" fg:w="25"/><text x="77.2901%" y="847.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (18 samples, 0.02%)</title><rect x="77.0464%" y="821" width="0.0162%" height="15" fill="rgb(243,101,7)" fg:x="85862" fg:w="18"/><text x="77.2964%" y="831.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (18 samples, 0.02%)</title><rect x="77.0625%" y="821" width="0.0162%" height="15" fill="rgb(240,140,22)" fg:x="85880" fg:w="18"/><text x="77.3125%" y="831.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (14 samples, 0.01%)</title><rect x="77.0661%" y="805" width="0.0126%" height="15" fill="rgb(235,114,2)" fg:x="85884" fg:w="14"/><text x="77.3161%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.08%)</title><rect x="77.0051%" y="869" width="0.0754%" height="15" fill="rgb(242,59,12)" fg:x="85816" fg:w="84"/><text x="77.2551%" y="879.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (84 samples, 0.08%)</title><rect x="77.0051%" y="853" width="0.0754%" height="15" fill="rgb(252,134,9)" fg:x="85816" fg:w="84"/><text x="77.2551%" y="863.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (20 samples, 0.02%)</title><rect x="77.0625%" y="837" width="0.0179%" height="15" fill="rgb(236,4,44)" fg:x="85880" fg:w="20"/><text x="77.3125%" y="847.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (35 samples, 0.03%)</title><rect x="77.0993%" y="837" width="0.0314%" height="15" fill="rgb(254,172,41)" fg:x="85921" fg:w="35"/><text x="77.3493%" y="847.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (14 samples, 0.01%)</title><rect x="77.1181%" y="821" width="0.0126%" height="15" fill="rgb(244,63,20)" fg:x="85942" fg:w="14"/><text x="77.3681%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.02%)</title><rect x="77.1307%" y="805" width="0.0162%" height="15" fill="rgb(250,73,31)" fg:x="85956" fg:w="18"/><text x="77.3807%" y="815.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (18 samples, 0.02%)</title><rect x="77.1307%" y="789" width="0.0162%" height="15" fill="rgb(241,38,36)" fg:x="85956" fg:w="18"/><text x="77.3807%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (87 samples, 0.08%)</title><rect x="77.0805%" y="869" width="0.0781%" height="15" fill="rgb(245,211,2)" fg:x="85900" fg:w="87"/><text x="77.3305%" y="879.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (87 samples, 0.08%)</title><rect x="77.0805%" y="853" width="0.0781%" height="15" fill="rgb(206,120,28)" fg:x="85900" fg:w="87"/><text x="77.3305%" y="863.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (31 samples, 0.03%)</title><rect x="77.1307%" y="837" width="0.0278%" height="15" fill="rgb(211,59,34)" fg:x="85956" fg:w="31"/><text x="77.3807%" y="847.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (31 samples, 0.03%)</title><rect x="77.1307%" y="821" width="0.0278%" height="15" fill="rgb(233,168,5)" fg:x="85956" fg:w="31"/><text x="77.3807%" y="831.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (13 samples, 0.01%)</title><rect x="77.1469%" y="805" width="0.0117%" height="15" fill="rgb(234,33,13)" fg:x="85974" fg:w="13"/><text x="77.3969%" y="815.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (16 samples, 0.01%)</title><rect x="77.1908%" y="757" width="0.0144%" height="15" fill="rgb(231,150,26)" fg:x="86023" fg:w="16"/><text x="77.4408%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="77.1935%" y="741" width="0.0117%" height="15" fill="rgb(217,191,4)" fg:x="86026" fg:w="13"/><text x="77.4435%" y="751.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="77.1935%" y="725" width="0.0117%" height="15" fill="rgb(246,198,38)" fg:x="86026" fg:w="13"/><text x="77.4435%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="77.1935%" y="709" width="0.0117%" height="15" fill="rgb(245,64,37)" fg:x="86026" fg:w="13"/><text x="77.4435%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="77.1935%" y="693" width="0.0117%" height="15" fill="rgb(250,30,36)" fg:x="86026" fg:w="13"/><text x="77.4435%" y="703.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="77.1935%" y="677" width="0.0117%" height="15" fill="rgb(217,86,53)" fg:x="86026" fg:w="13"/><text x="77.4435%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="77.1935%" y="661" width="0.0117%" height="15" fill="rgb(228,157,16)" fg:x="86026" fg:w="13"/><text x="77.4435%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="77.2527%" y="613" width="0.0170%" height="15" fill="rgb(217,59,31)" fg:x="86092" fg:w="19"/><text x="77.5027%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="77.2527%" y="597" width="0.0170%" height="15" fill="rgb(237,138,41)" fg:x="86092" fg:w="19"/><text x="77.5027%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (58 samples, 0.05%)</title><rect x="77.2249%" y="661" width="0.0520%" height="15" fill="rgb(227,91,49)" fg:x="86061" fg:w="58"/><text x="77.4749%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (58 samples, 0.05%)</title><rect x="77.2249%" y="645" width="0.0520%" height="15" fill="rgb(247,21,44)" fg:x="86061" fg:w="58"/><text x="77.4749%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (57 samples, 0.05%)</title><rect x="77.2258%" y="629" width="0.0511%" height="15" fill="rgb(219,210,51)" fg:x="86062" fg:w="57"/><text x="77.4758%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (82 samples, 0.07%)</title><rect x="77.2168%" y="693" width="0.0736%" height="15" fill="rgb(209,140,6)" fg:x="86052" fg:w="82"/><text x="77.4668%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (82 samples, 0.07%)</title><rect x="77.2168%" y="677" width="0.0736%" height="15" fill="rgb(221,188,24)" fg:x="86052" fg:w="82"/><text x="77.4668%" y="687.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (15 samples, 0.01%)</title><rect x="77.2770%" y="661" width="0.0135%" height="15" fill="rgb(232,154,20)" fg:x="86119" fg:w="15"/><text x="77.5270%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (87 samples, 0.08%)</title><rect x="77.2168%" y="725" width="0.0781%" height="15" fill="rgb(244,137,50)" fg:x="86052" fg:w="87"/><text x="77.4668%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (87 samples, 0.08%)</title><rect x="77.2168%" y="709" width="0.0781%" height="15" fill="rgb(225,185,43)" fg:x="86052" fg:w="87"/><text x="77.4668%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (92 samples, 0.08%)</title><rect x="77.2133%" y="741" width="0.0826%" height="15" fill="rgb(213,205,38)" fg:x="86048" fg:w="92"/><text x="77.4633%" y="751.50"></text></g><g><title>rust_dealloc (102 samples, 0.09%)</title><rect x="77.2052%" y="757" width="0.0915%" height="15" fill="rgb(236,73,12)" fg:x="86039" fg:w="102"/><text x="77.4552%" y="767.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (146 samples, 0.13%)</title><rect x="77.1684%" y="837" width="0.1310%" height="15" fill="rgb(235,219,13)" fg:x="85998" fg:w="146"/><text x="77.4184%" y="847.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (140 samples, 0.13%)</title><rect x="77.1738%" y="821" width="0.1256%" height="15" fill="rgb(218,59,36)" fg:x="86004" fg:w="140"/><text x="77.4238%" y="831.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (131 samples, 0.12%)</title><rect x="77.1819%" y="805" width="0.1175%" height="15" fill="rgb(205,110,39)" fg:x="86013" fg:w="131"/><text x="77.4319%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (131 samples, 0.12%)</title><rect x="77.1819%" y="789" width="0.1175%" height="15" fill="rgb(218,206,42)" fg:x="86013" fg:w="131"/><text x="77.4319%" y="799.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (131 samples, 0.12%)</title><rect x="77.1819%" y="773" width="0.1175%" height="15" fill="rgb(248,125,24)" fg:x="86013" fg:w="131"/><text x="77.4319%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (354 samples, 0.32%)</title><rect x="76.9826%" y="885" width="0.3177%" height="15" fill="rgb(242,28,27)" fg:x="85791" fg:w="354"/><text x="77.2326%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (147 samples, 0.13%)</title><rect x="77.1684%" y="869" width="0.1319%" height="15" fill="rgb(216,228,15)" fg:x="85998" fg:w="147"/><text x="77.4184%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (147 samples, 0.13%)</title><rect x="77.1684%" y="853" width="0.1319%" height="15" fill="rgb(235,116,46)" fg:x="85998" fg:w="147"/><text x="77.4184%" y="863.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (4,525 samples, 4.06%)</title><rect x="73.2426%" y="1045" width="4.0604%" height="15" fill="rgb(224,18,32)" fg:x="81623" fg:w="4525"/><text x="73.4926%" y="1055.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,525 samples, 4.06%)</title><rect x="73.2426%" y="1029" width="4.0604%" height="15" fill="rgb(252,5,12)" fg:x="81623" fg:w="4525"/><text x="73.4926%" y="1039.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (4,525 samples, 4.06%)</title><rect x="73.2426%" y="1013" width="4.0604%" height="15" fill="rgb(251,36,5)" fg:x="81623" fg:w="4525"/><text x="73.4926%" y="1023.50">trem..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,525 samples, 4.06%)</title><rect x="73.2426%" y="997" width="4.0604%" height="15" fill="rgb(217,53,14)" fg:x="81623" fg:w="4525"/><text x="73.4926%" y="1007.50">trem..</text></g><g><title>tremor_script::srs::EventPayload::try_new (1,139 samples, 1.02%)</title><rect x="76.2809%" y="981" width="1.0221%" height="15" fill="rgb(215,86,45)" fg:x="85009" fg:w="1139"/><text x="76.5309%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (1,039 samples, 0.93%)</title><rect x="76.3707%" y="965" width="0.9323%" height="15" fill="rgb(242,169,11)" fg:x="85109" fg:w="1039"/><text x="76.6207%" y="975.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (1,039 samples, 0.93%)</title><rect x="76.3707%" y="949" width="0.9323%" height="15" fill="rgb(211,213,45)" fg:x="85109" fg:w="1039"/><text x="76.6207%" y="959.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,039 samples, 0.93%)</title><rect x="76.3707%" y="933" width="0.9323%" height="15" fill="rgb(205,88,11)" fg:x="85109" fg:w="1039"/><text x="76.6207%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (833 samples, 0.75%)</title><rect x="76.5555%" y="917" width="0.7475%" height="15" fill="rgb(252,69,26)" fg:x="85315" fg:w="833"/><text x="76.8055%" y="927.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (526 samples, 0.47%)</title><rect x="76.8310%" y="901" width="0.4720%" height="15" fill="rgb(246,123,37)" fg:x="85622" fg:w="526"/><text x="77.0810%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (16 samples, 0.01%)</title><rect x="77.3030%" y="901" width="0.0144%" height="15" fill="rgb(212,205,5)" fg:x="86148" fg:w="16"/><text x="77.5530%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (16 samples, 0.01%)</title><rect x="77.3030%" y="885" width="0.0144%" height="15" fill="rgb(253,148,0)" fg:x="86148" fg:w="16"/><text x="77.5530%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="77.3030%" y="869" width="0.0144%" height="15" fill="rgb(239,22,4)" fg:x="86148" fg:w="16"/><text x="77.5530%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.01%)</title><rect x="77.3030%" y="853" width="0.0144%" height="15" fill="rgb(226,26,53)" fg:x="86148" fg:w="16"/><text x="77.5530%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (16 samples, 0.01%)</title><rect x="77.3030%" y="837" width="0.0144%" height="15" fill="rgb(225,229,45)" fg:x="86148" fg:w="16"/><text x="77.5530%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (16 samples, 0.01%)</title><rect x="77.3030%" y="821" width="0.0144%" height="15" fill="rgb(220,60,37)" fg:x="86148" fg:w="16"/><text x="77.5530%" y="831.50"></text></g><g><title>event_listener::Inner::lock (29 samples, 0.03%)</title><rect x="77.3173%" y="901" width="0.0260%" height="15" fill="rgb(217,180,35)" fg:x="86164" fg:w="29"/><text x="77.5673%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.03%)</title><rect x="77.3173%" y="885" width="0.0260%" height="15" fill="rgb(229,7,53)" fg:x="86164" fg:w="29"/><text x="77.5673%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (29 samples, 0.03%)</title><rect x="77.3173%" y="869" width="0.0260%" height="15" fill="rgb(254,137,3)" fg:x="86164" fg:w="29"/><text x="77.5673%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (29 samples, 0.03%)</title><rect x="77.3173%" y="853" width="0.0260%" height="15" fill="rgb(215,140,41)" fg:x="86164" fg:w="29"/><text x="77.5673%" y="863.50"></text></g><g><title>___pthread_mutex_lock (29 samples, 0.03%)</title><rect x="77.3173%" y="837" width="0.0260%" height="15" fill="rgb(250,80,15)" fg:x="86164" fg:w="29"/><text x="77.5673%" y="847.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,421 samples, 7.56%)</title><rect x="69.7888%" y="1093" width="7.5564%" height="15" fill="rgb(252,191,6)" fg:x="77774" fg:w="8421"/><text x="70.0388%" y="1103.50">async_std:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,421 samples, 7.56%)</title><rect x="69.7888%" y="1077" width="7.5564%" height="15" fill="rgb(246,217,18)" fg:x="77774" fg:w="8421"/><text x="70.0388%" y="1087.50">&lt;async_std..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,421 samples, 7.56%)</title><rect x="69.7888%" y="1061" width="7.5564%" height="15" fill="rgb(223,93,7)" fg:x="77774" fg:w="8421"/><text x="70.0388%" y="1071.50">&lt;core::fut..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (47 samples, 0.04%)</title><rect x="77.3030%" y="1045" width="0.0422%" height="15" fill="rgb(225,55,52)" fg:x="86148" fg:w="47"/><text x="77.5530%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.04%)</title><rect x="77.3030%" y="1029" width="0.0422%" height="15" fill="rgb(240,31,24)" fg:x="86148" fg:w="47"/><text x="77.5530%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (47 samples, 0.04%)</title><rect x="77.3030%" y="1013" width="0.0422%" height="15" fill="rgb(205,56,52)" fg:x="86148" fg:w="47"/><text x="77.5530%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.04%)</title><rect x="77.3030%" y="997" width="0.0422%" height="15" fill="rgb(246,146,12)" fg:x="86148" fg:w="47"/><text x="77.5530%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (47 samples, 0.04%)</title><rect x="77.3030%" y="981" width="0.0422%" height="15" fill="rgb(239,84,36)" fg:x="86148" fg:w="47"/><text x="77.5530%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (47 samples, 0.04%)</title><rect x="77.3030%" y="965" width="0.0422%" height="15" fill="rgb(207,41,40)" fg:x="86148" fg:w="47"/><text x="77.5530%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (47 samples, 0.04%)</title><rect x="77.3030%" y="949" width="0.0422%" height="15" fill="rgb(241,179,25)" fg:x="86148" fg:w="47"/><text x="77.5530%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (47 samples, 0.04%)</title><rect x="77.3030%" y="933" width="0.0422%" height="15" fill="rgb(210,0,34)" fg:x="86148" fg:w="47"/><text x="77.5530%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="77.3030%" y="917" width="0.0422%" height="15" fill="rgb(225,217,29)" fg:x="86148" fg:w="47"/><text x="77.5530%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,424 samples, 7.56%)</title><rect x="69.7870%" y="1125" width="7.5591%" height="15" fill="rgb(216,191,38)" fg:x="77772" fg:w="8424"/><text x="70.0370%" y="1135.50">std::threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,422 samples, 7.56%)</title><rect x="69.7888%" y="1109" width="7.5573%" height="15" fill="rgb(232,140,52)" fg:x="77774" fg:w="8422"/><text x="70.0388%" y="1119.50">std::threa..</text></g><g><title>tremor_common::time::nanotime (16 samples, 0.01%)</title><rect x="77.3470%" y="1125" width="0.0144%" height="15" fill="rgb(223,158,51)" fg:x="86197" fg:w="16"/><text x="77.5970%" y="1135.50"></text></g><g><title>std::time::SystemTime::now (15 samples, 0.01%)</title><rect x="77.3479%" y="1109" width="0.0135%" height="15" fill="rgb(235,29,51)" fg:x="86198" fg:w="15"/><text x="77.5979%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (15 samples, 0.01%)</title><rect x="77.3479%" y="1093" width="0.0135%" height="15" fill="rgb(215,181,18)" fg:x="86198" fg:w="15"/><text x="77.5979%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::now (15 samples, 0.01%)</title><rect x="77.3479%" y="1077" width="0.0135%" height="15" fill="rgb(227,125,34)" fg:x="86198" fg:w="15"/><text x="77.5979%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (28 samples, 0.03%)</title><rect x="77.3685%" y="1125" width="0.0251%" height="15" fill="rgb(230,197,49)" fg:x="86221" fg:w="28"/><text x="77.6185%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (399 samples, 0.36%)</title><rect x="77.5794%" y="981" width="0.3580%" height="15" fill="rgb(239,141,16)" fg:x="86456" fg:w="399"/><text x="77.8294%" y="991.50"></text></g><g><title>concurrent_queue::full_fence (17 samples, 0.02%)</title><rect x="77.9374%" y="981" width="0.0153%" height="15" fill="rgb(225,105,43)" fg:x="86855" fg:w="17"/><text x="78.1874%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (17 samples, 0.02%)</title><rect x="77.9374%" y="965" width="0.0153%" height="15" fill="rgb(214,131,14)" fg:x="86855" fg:w="17"/><text x="78.1874%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (17 samples, 0.02%)</title><rect x="77.9374%" y="949" width="0.0153%" height="15" fill="rgb(229,177,11)" fg:x="86855" fg:w="17"/><text x="78.1874%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.02%)</title><rect x="77.9374%" y="933" width="0.0153%" height="15" fill="rgb(231,180,14)" fg:x="86855" fg:w="17"/><text x="78.1874%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (493 samples, 0.44%)</title><rect x="77.9536%" y="981" width="0.4424%" height="15" fill="rgb(232,88,2)" fg:x="86873" fg:w="493"/><text x="78.2036%" y="991.50"></text></g><g><title>core::ptr::read (493 samples, 0.44%)</title><rect x="77.9536%" y="965" width="0.4424%" height="15" fill="rgb(205,220,8)" fg:x="86873" fg:w="493"/><text x="78.2036%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (493 samples, 0.44%)</title><rect x="77.9536%" y="949" width="0.4424%" height="15" fill="rgb(225,23,53)" fg:x="86873" fg:w="493"/><text x="78.2036%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (543 samples, 0.49%)</title><rect x="78.3959%" y="981" width="0.4872%" height="15" fill="rgb(213,62,29)" fg:x="87366" fg:w="543"/><text x="78.6459%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (543 samples, 0.49%)</title><rect x="78.3959%" y="965" width="0.4872%" height="15" fill="rgb(227,75,7)" fg:x="87366" fg:w="543"/><text x="78.6459%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (343 samples, 0.31%)</title><rect x="78.8832%" y="981" width="0.3078%" height="15" fill="rgb(207,105,14)" fg:x="87909" fg:w="343"/><text x="79.1332%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (343 samples, 0.31%)</title><rect x="78.8832%" y="965" width="0.3078%" height="15" fill="rgb(245,62,29)" fg:x="87909" fg:w="343"/><text x="79.1332%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,005 samples, 1.80%)</title><rect x="77.3936%" y="1013" width="1.7991%" height="15" fill="rgb(236,202,4)" fg:x="86249" fg:w="2005"/><text x="77.6436%" y="1023.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,005 samples, 1.80%)</title><rect x="77.3936%" y="997" width="1.7991%" height="15" fill="rgb(250,67,1)" fg:x="86249" fg:w="2005"/><text x="77.6436%" y="1007.50">c..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (2,041 samples, 1.83%)</title><rect x="77.3936%" y="1125" width="1.8314%" height="15" fill="rgb(253,115,44)" fg:x="86249" fg:w="2041"/><text x="77.6436%" y="1135.50">t..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,041 samples, 1.83%)</title><rect x="77.3936%" y="1109" width="1.8314%" height="15" fill="rgb(251,139,18)" fg:x="86249" fg:w="2041"/><text x="77.6436%" y="1119.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,041 samples, 1.83%)</title><rect x="77.3936%" y="1093" width="1.8314%" height="15" fill="rgb(218,22,32)" fg:x="86249" fg:w="2041"/><text x="77.6436%" y="1103.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,041 samples, 1.83%)</title><rect x="77.3936%" y="1077" width="1.8314%" height="15" fill="rgb(243,53,5)" fg:x="86249" fg:w="2041"/><text x="77.6436%" y="1087.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,041 samples, 1.83%)</title><rect x="77.3936%" y="1061" width="1.8314%" height="15" fill="rgb(227,56,16)" fg:x="86249" fg:w="2041"/><text x="77.6436%" y="1071.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,041 samples, 1.83%)</title><rect x="77.3936%" y="1045" width="1.8314%" height="15" fill="rgb(245,53,0)" fg:x="86249" fg:w="2041"/><text x="77.6436%" y="1055.50">&lt;..</text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,041 samples, 1.83%)</title><rect x="77.3936%" y="1029" width="1.8314%" height="15" fill="rgb(216,170,35)" fg:x="86249" fg:w="2041"/><text x="77.6436%" y="1039.50">a..</text></g><g><title>event_listener::Event::notify (36 samples, 0.03%)</title><rect x="79.1928%" y="1013" width="0.0323%" height="15" fill="rgb(211,200,8)" fg:x="88254" fg:w="36"/><text x="79.4428%" y="1023.50"></text></g><g><title>event_listener::List::notify (36 samples, 0.03%)</title><rect x="79.1928%" y="997" width="0.0323%" height="15" fill="rgb(228,204,44)" fg:x="88254" fg:w="36"/><text x="79.4428%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (36 samples, 0.03%)</title><rect x="79.1928%" y="981" width="0.0323%" height="15" fill="rgb(214,121,17)" fg:x="88254" fg:w="36"/><text x="79.4428%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (36 samples, 0.03%)</title><rect x="79.1928%" y="965" width="0.0323%" height="15" fill="rgb(233,64,38)" fg:x="88254" fg:w="36"/><text x="79.4428%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (36 samples, 0.03%)</title><rect x="79.1928%" y="949" width="0.0323%" height="15" fill="rgb(253,54,19)" fg:x="88254" fg:w="36"/><text x="79.4428%" y="959.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (36 samples, 0.03%)</title><rect x="79.1928%" y="933" width="0.0323%" height="15" fill="rgb(253,94,18)" fg:x="88254" fg:w="36"/><text x="79.4428%" y="943.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (36 samples, 0.03%)</title><rect x="79.1928%" y="917" width="0.0323%" height="15" fill="rgb(227,57,52)" fg:x="88254" fg:w="36"/><text x="79.4428%" y="927.50"></text></g><g><title>parking::Unparker::unpark (31 samples, 0.03%)</title><rect x="79.1973%" y="901" width="0.0278%" height="15" fill="rgb(230,228,50)" fg:x="88259" fg:w="31"/><text x="79.4473%" y="911.50"></text></g><g><title>parking::Inner::unpark (31 samples, 0.03%)</title><rect x="79.1973%" y="885" width="0.0278%" height="15" fill="rgb(217,205,27)" fg:x="88259" fg:w="31"/><text x="79.4473%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (31 samples, 0.03%)</title><rect x="79.1973%" y="869" width="0.0278%" height="15" fill="rgb(252,71,50)" fg:x="88259" fg:w="31"/><text x="79.4473%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (31 samples, 0.03%)</title><rect x="79.1973%" y="853" width="0.0278%" height="15" fill="rgb(209,86,4)" fg:x="88259" fg:w="31"/><text x="79.4473%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (31 samples, 0.03%)</title><rect x="79.1973%" y="837" width="0.0278%" height="15" fill="rgb(229,94,0)" fg:x="88259" fg:w="31"/><text x="79.4473%" y="847.50"></text></g><g><title>__GI___pthread_cond_signal (31 samples, 0.03%)</title><rect x="79.1973%" y="821" width="0.0278%" height="15" fill="rgb(252,223,21)" fg:x="88259" fg:w="31"/><text x="79.4473%" y="831.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (27 samples, 0.02%)</title><rect x="79.2251%" y="1125" width="0.0242%" height="15" fill="rgb(230,210,4)" fg:x="88290" fg:w="27"/><text x="79.4751%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (12 samples, 0.01%)</title><rect x="79.2385%" y="1109" width="0.0108%" height="15" fill="rgb(240,149,38)" fg:x="88305" fg:w="12"/><text x="79.4885%" y="1119.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (12 samples, 0.01%)</title><rect x="79.2385%" y="1093" width="0.0108%" height="15" fill="rgb(254,105,20)" fg:x="88305" fg:w="12"/><text x="79.4885%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (29 samples, 0.03%)</title><rect x="79.2493%" y="1125" width="0.0260%" height="15" fill="rgb(253,87,46)" fg:x="88317" fg:w="29"/><text x="79.4993%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.01%)</title><rect x="79.4781%" y="981" width="0.0135%" height="15" fill="rgb(253,116,33)" fg:x="88572" fg:w="15"/><text x="79.7281%" y="991.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="79.4916%" y="981" width="0.0188%" height="15" fill="rgb(229,198,5)" fg:x="88587" fg:w="21"/><text x="79.7416%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (21 samples, 0.02%)</title><rect x="79.4916%" y="965" width="0.0188%" height="15" fill="rgb(242,38,37)" fg:x="88587" fg:w="21"/><text x="79.7416%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (21 samples, 0.02%)</title><rect x="79.4916%" y="949" width="0.0188%" height="15" fill="rgb(242,69,53)" fg:x="88587" fg:w="21"/><text x="79.7416%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (21 samples, 0.02%)</title><rect x="79.4916%" y="933" width="0.0188%" height="15" fill="rgb(249,80,16)" fg:x="88587" fg:w="21"/><text x="79.7416%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (23 samples, 0.02%)</title><rect x="79.5203%" y="981" width="0.0206%" height="15" fill="rgb(206,128,11)" fg:x="88619" fg:w="23"/><text x="79.7703%" y="991.50"></text></g><g><title>core::mem::replace (23 samples, 0.02%)</title><rect x="79.5203%" y="965" width="0.0206%" height="15" fill="rgb(212,35,20)" fg:x="88619" fg:w="23"/><text x="79.7703%" y="975.50"></text></g><g><title>core::ptr::read (23 samples, 0.02%)</title><rect x="79.5203%" y="949" width="0.0206%" height="15" fill="rgb(236,79,13)" fg:x="88619" fg:w="23"/><text x="79.7703%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (200 samples, 0.18%)</title><rect x="79.6055%" y="965" width="0.1795%" height="15" fill="rgb(233,123,3)" fg:x="88714" fg:w="200"/><text x="79.8555%" y="975.50"></text></g><g><title>core::mem::replace (200 samples, 0.18%)</title><rect x="79.6055%" y="949" width="0.1795%" height="15" fill="rgb(214,93,52)" fg:x="88714" fg:w="200"/><text x="79.8555%" y="959.50"></text></g><g><title>core::ptr::read (200 samples, 0.18%)</title><rect x="79.6055%" y="933" width="0.1795%" height="15" fill="rgb(251,37,40)" fg:x="88714" fg:w="200"/><text x="79.8555%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (347 samples, 0.31%)</title><rect x="79.5409%" y="981" width="0.3114%" height="15" fill="rgb(227,80,54)" fg:x="88642" fg:w="347"/><text x="79.7909%" y="991.50"></text></g><g><title>core::mem::drop (75 samples, 0.07%)</title><rect x="79.7850%" y="965" width="0.0673%" height="15" fill="rgb(254,48,11)" fg:x="88914" fg:w="75"/><text x="80.0350%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (75 samples, 0.07%)</title><rect x="79.7850%" y="949" width="0.0673%" height="15" fill="rgb(235,193,26)" fg:x="88914" fg:w="75"/><text x="80.0350%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (40 samples, 0.04%)</title><rect x="79.8559%" y="885" width="0.0359%" height="15" fill="rgb(229,99,21)" fg:x="88993" fg:w="40"/><text x="80.1059%" y="895.50"></text></g><g><title>__GI___lll_lock_wake (15 samples, 0.01%)</title><rect x="79.8783%" y="869" width="0.0135%" height="15" fill="rgb(211,140,41)" fg:x="89018" fg:w="15"/><text x="80.1283%" y="879.50"></text></g><g><title>core::mem::drop (45 samples, 0.04%)</title><rect x="79.8523%" y="981" width="0.0404%" height="15" fill="rgb(240,227,30)" fg:x="88989" fg:w="45"/><text x="80.1023%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (45 samples, 0.04%)</title><rect x="79.8523%" y="965" width="0.0404%" height="15" fill="rgb(215,224,45)" fg:x="88989" fg:w="45"/><text x="80.1023%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (43 samples, 0.04%)</title><rect x="79.8541%" y="949" width="0.0386%" height="15" fill="rgb(206,123,31)" fg:x="88991" fg:w="43"/><text x="80.1041%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="79.8541%" y="933" width="0.0386%" height="15" fill="rgb(210,138,16)" fg:x="88991" fg:w="43"/><text x="80.1041%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (41 samples, 0.04%)</title><rect x="79.8559%" y="917" width="0.0368%" height="15" fill="rgb(228,57,28)" fg:x="88993" fg:w="41"/><text x="80.1059%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (41 samples, 0.04%)</title><rect x="79.8559%" y="901" width="0.0368%" height="15" fill="rgb(242,170,10)" fg:x="88993" fg:w="41"/><text x="80.1059%" y="911.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="79.8927%" y="965" width="0.0197%" height="15" fill="rgb(228,214,39)" fg:x="89034" fg:w="22"/><text x="80.1427%" y="975.50"></text></g><g><title>std::sync::poison::Flag::done (15 samples, 0.01%)</title><rect x="79.9196%" y="933" width="0.0135%" height="15" fill="rgb(218,179,33)" fg:x="89064" fg:w="15"/><text x="80.1696%" y="943.50"></text></g><g><title>std::thread::panicking (15 samples, 0.01%)</title><rect x="79.9196%" y="917" width="0.0135%" height="15" fill="rgb(235,193,39)" fg:x="89064" fg:w="15"/><text x="80.1696%" y="927.50"></text></g><g><title>std::panicking::panicking (15 samples, 0.01%)</title><rect x="79.9196%" y="901" width="0.0135%" height="15" fill="rgb(219,221,36)" fg:x="89064" fg:w="15"/><text x="80.1696%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (15 samples, 0.01%)</title><rect x="79.9196%" y="885" width="0.0135%" height="15" fill="rgb(248,218,19)" fg:x="89064" fg:w="15"/><text x="80.1696%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (326 samples, 0.29%)</title><rect x="79.9429%" y="901" width="0.2925%" height="15" fill="rgb(205,50,9)" fg:x="89090" fg:w="326"/><text x="80.1929%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (392 samples, 0.35%)</title><rect x="79.8927%" y="981" width="0.3518%" height="15" fill="rgb(238,81,28)" fg:x="89034" fg:w="392"/><text x="80.1427%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (370 samples, 0.33%)</title><rect x="79.9124%" y="965" width="0.3320%" height="15" fill="rgb(235,110,19)" fg:x="89056" fg:w="370"/><text x="80.1624%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (370 samples, 0.33%)</title><rect x="79.9124%" y="949" width="0.3320%" height="15" fill="rgb(214,7,14)" fg:x="89056" fg:w="370"/><text x="80.1624%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (347 samples, 0.31%)</title><rect x="79.9331%" y="933" width="0.3114%" height="15" fill="rgb(211,77,3)" fg:x="89079" fg:w="347"/><text x="80.1831%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (336 samples, 0.30%)</title><rect x="79.9429%" y="917" width="0.3015%" height="15" fill="rgb(229,5,9)" fg:x="89090" fg:w="336"/><text x="80.1929%" y="927.50"></text></g><g><title>core::task::wake::Waker::will_wake (59 samples, 0.05%)</title><rect x="80.2453%" y="981" width="0.0529%" height="15" fill="rgb(225,90,11)" fg:x="89427" fg:w="59"/><text x="80.4953%" y="991.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (59 samples, 0.05%)</title><rect x="80.2453%" y="965" width="0.0529%" height="15" fill="rgb(242,56,8)" fg:x="89427" fg:w="59"/><text x="80.4953%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (44 samples, 0.04%)</title><rect x="80.2588%" y="949" width="0.0395%" height="15" fill="rgb(249,212,39)" fg:x="89442" fg:w="44"/><text x="80.5088%" y="959.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (44 samples, 0.04%)</title><rect x="80.2588%" y="933" width="0.0395%" height="15" fill="rgb(236,90,9)" fg:x="89442" fg:w="44"/><text x="80.5088%" y="943.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (29 samples, 0.03%)</title><rect x="80.3135%" y="949" width="0.0260%" height="15" fill="rgb(206,88,35)" fg:x="89503" fg:w="29"/><text x="80.5635%" y="959.50"></text></g><g><title>std::sync::poison::Flag::borrow (29 samples, 0.03%)</title><rect x="80.3135%" y="933" width="0.0260%" height="15" fill="rgb(205,126,30)" fg:x="89503" fg:w="29"/><text x="80.5635%" y="943.50"></text></g><g><title>std::thread::panicking (18 samples, 0.02%)</title><rect x="80.3234%" y="917" width="0.0162%" height="15" fill="rgb(230,176,12)" fg:x="89514" fg:w="18"/><text x="80.5734%" y="927.50"></text></g><g><title>std::panicking::panicking (18 samples, 0.02%)</title><rect x="80.3234%" y="901" width="0.0162%" height="15" fill="rgb(243,19,9)" fg:x="89514" fg:w="18"/><text x="80.5734%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (18 samples, 0.02%)</title><rect x="80.3234%" y="885" width="0.0162%" height="15" fill="rgb(245,171,17)" fg:x="89514" fg:w="18"/><text x="80.5734%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.02%)</title><rect x="80.3234%" y="869" width="0.0162%" height="15" fill="rgb(227,52,21)" fg:x="89514" fg:w="18"/><text x="80.5734%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.02%)</title><rect x="80.3234%" y="853" width="0.0162%" height="15" fill="rgb(238,69,14)" fg:x="89514" fg:w="18"/><text x="80.5734%" y="863.50"></text></g><g><title>event_listener::Inner::lock (730 samples, 0.66%)</title><rect x="80.2983%" y="981" width="0.6550%" height="15" fill="rgb(241,156,39)" fg:x="89486" fg:w="730"/><text x="80.5483%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (713 samples, 0.64%)</title><rect x="80.3135%" y="965" width="0.6398%" height="15" fill="rgb(212,227,28)" fg:x="89503" fg:w="713"/><text x="80.5635%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (684 samples, 0.61%)</title><rect x="80.3395%" y="949" width="0.6138%" height="15" fill="rgb(209,118,27)" fg:x="89532" fg:w="684"/><text x="80.5895%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (666 samples, 0.60%)</title><rect x="80.3557%" y="933" width="0.5976%" height="15" fill="rgb(226,102,5)" fg:x="89550" fg:w="666"/><text x="80.6057%" y="943.50"></text></g><g><title>___pthread_mutex_lock (666 samples, 0.60%)</title><rect x="80.3557%" y="917" width="0.5976%" height="15" fill="rgb(223,34,3)" fg:x="89550" fg:w="666"/><text x="80.6057%" y="927.50"></text></g><g><title>__GI___lll_lock_wait (67 samples, 0.06%)</title><rect x="80.8932%" y="901" width="0.0601%" height="15" fill="rgb(221,81,38)" fg:x="90149" fg:w="67"/><text x="81.1432%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,760 samples, 1.58%)</title><rect x="79.4180%" y="997" width="1.5793%" height="15" fill="rgb(236,219,28)" fg:x="88505" fg:w="1760"/><text x="79.6680%" y="1007.50"></text></g><g><title>event_listener::List::remove (49 samples, 0.04%)</title><rect x="80.9533%" y="981" width="0.0440%" height="15" fill="rgb(213,200,14)" fg:x="90216" fg:w="49"/><text x="81.2033%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (39 samples, 0.03%)</title><rect x="80.9623%" y="965" width="0.0350%" height="15" fill="rgb(240,33,19)" fg:x="90226" fg:w="39"/><text x="81.2123%" y="975.50"></text></g><g><title>core::mem::replace (39 samples, 0.03%)</title><rect x="80.9623%" y="949" width="0.0350%" height="15" fill="rgb(233,113,27)" fg:x="90226" fg:w="39"/><text x="81.2123%" y="959.50"></text></g><g><title>core::ptr::read (39 samples, 0.03%)</title><rect x="80.9623%" y="933" width="0.0350%" height="15" fill="rgb(220,221,18)" fg:x="90226" fg:w="39"/><text x="81.2123%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (92 samples, 0.08%)</title><rect x="81.1741%" y="949" width="0.0826%" height="15" fill="rgb(238,92,8)" fg:x="90462" fg:w="92"/><text x="81.4241%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (90 samples, 0.08%)</title><rect x="81.1759%" y="933" width="0.0808%" height="15" fill="rgb(222,164,16)" fg:x="90464" fg:w="90"/><text x="81.4259%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (90 samples, 0.08%)</title><rect x="81.1759%" y="917" width="0.0808%" height="15" fill="rgb(241,119,3)" fg:x="90464" fg:w="90"/><text x="81.4259%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (90 samples, 0.08%)</title><rect x="81.1759%" y="901" width="0.0808%" height="15" fill="rgb(241,44,8)" fg:x="90464" fg:w="90"/><text x="81.4259%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (188 samples, 0.17%)</title><rect x="81.2647%" y="949" width="0.1687%" height="15" fill="rgb(230,36,40)" fg:x="90563" fg:w="188"/><text x="81.5147%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (188 samples, 0.17%)</title><rect x="81.2647%" y="933" width="0.1687%" height="15" fill="rgb(243,16,36)" fg:x="90563" fg:w="188"/><text x="81.5147%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (360 samples, 0.32%)</title><rect x="81.4334%" y="949" width="0.3230%" height="15" fill="rgb(231,4,26)" fg:x="90751" fg:w="360"/><text x="81.6834%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (355 samples, 0.32%)</title><rect x="81.4379%" y="933" width="0.3186%" height="15" fill="rgb(240,9,31)" fg:x="90756" fg:w="355"/><text x="81.6879%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (839 samples, 0.75%)</title><rect x="81.0099%" y="981" width="0.7529%" height="15" fill="rgb(207,173,15)" fg:x="90279" fg:w="839"/><text x="81.2599%" y="991.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (815 samples, 0.73%)</title><rect x="81.0314%" y="965" width="0.7313%" height="15" fill="rgb(224,192,53)" fg:x="90303" fg:w="815"/><text x="81.2814%" y="975.50"></text></g><g><title>async_executor::State::notify (14 samples, 0.01%)</title><rect x="81.8004%" y="885" width="0.0126%" height="15" fill="rgb(223,67,28)" fg:x="91160" fg:w="14"/><text x="82.0504%" y="895.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (30 samples, 0.03%)</title><rect x="81.8004%" y="901" width="0.0269%" height="15" fill="rgb(211,20,47)" fg:x="91160" fg:w="30"/><text x="82.0504%" y="911.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (16 samples, 0.01%)</title><rect x="81.8130%" y="885" width="0.0144%" height="15" fill="rgb(240,228,2)" fg:x="91174" fg:w="16"/><text x="82.0630%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (15 samples, 0.01%)</title><rect x="81.8139%" y="869" width="0.0135%" height="15" fill="rgb(248,151,12)" fg:x="91175" fg:w="15"/><text x="82.0639%" y="879.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (14 samples, 0.01%)</title><rect x="81.8506%" y="837" width="0.0126%" height="15" fill="rgb(244,8,39)" fg:x="91216" fg:w="14"/><text x="82.1006%" y="847.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (14 samples, 0.01%)</title><rect x="81.8506%" y="821" width="0.0126%" height="15" fill="rgb(222,26,8)" fg:x="91216" fg:w="14"/><text x="82.1006%" y="831.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (14 samples, 0.01%)</title><rect x="81.8506%" y="805" width="0.0126%" height="15" fill="rgb(213,106,44)" fg:x="91216" fg:w="14"/><text x="82.1006%" y="815.50"></text></g><g><title>__GI___pthread_cond_signal (14 samples, 0.01%)</title><rect x="81.8506%" y="789" width="0.0126%" height="15" fill="rgb(214,129,20)" fg:x="91216" fg:w="14"/><text x="82.1006%" y="799.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (31 samples, 0.03%)</title><rect x="81.8417%" y="885" width="0.0278%" height="15" fill="rgb(212,32,13)" fg:x="91206" fg:w="31"/><text x="82.0917%" y="895.50"></text></g><g><title>parking::Unparker::unpark (30 samples, 0.03%)</title><rect x="81.8426%" y="869" width="0.0269%" height="15" fill="rgb(208,168,33)" fg:x="91207" fg:w="30"/><text x="82.0926%" y="879.50"></text></g><g><title>parking::Inner::unpark (26 samples, 0.02%)</title><rect x="81.8462%" y="853" width="0.0233%" height="15" fill="rgb(231,207,8)" fg:x="91211" fg:w="26"/><text x="82.0962%" y="863.50"></text></g><g><title>event_listener::List::notify (87 samples, 0.08%)</title><rect x="81.7977%" y="965" width="0.0781%" height="15" fill="rgb(235,219,23)" fg:x="91157" fg:w="87"/><text x="82.0477%" y="975.50"></text></g><g><title>core::task::wake::Waker::wake (87 samples, 0.08%)</title><rect x="81.7977%" y="949" width="0.0781%" height="15" fill="rgb(226,216,26)" fg:x="91157" fg:w="87"/><text x="82.0477%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (84 samples, 0.08%)</title><rect x="81.8004%" y="933" width="0.0754%" height="15" fill="rgb(239,137,16)" fg:x="91160" fg:w="84"/><text x="82.0504%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (84 samples, 0.08%)</title><rect x="81.8004%" y="917" width="0.0754%" height="15" fill="rgb(207,12,36)" fg:x="91160" fg:w="84"/><text x="82.0504%" y="927.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (38 samples, 0.03%)</title><rect x="81.8417%" y="901" width="0.0341%" height="15" fill="rgb(210,214,24)" fg:x="91206" fg:w="38"/><text x="82.0917%" y="911.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,721 samples, 1.54%)</title><rect x="80.9973%" y="997" width="1.5443%" height="15" fill="rgb(206,56,30)" fg:x="90265" fg:w="1721"/><text x="81.2473%" y="1007.50"></text></g><g><title>event_listener::Event::notify (868 samples, 0.78%)</title><rect x="81.7627%" y="981" width="0.7789%" height="15" fill="rgb(228,143,26)" fg:x="91118" fg:w="868"/><text x="82.0127%" y="991.50"></text></g><g><title>event_listener::full_fence (742 samples, 0.67%)</title><rect x="81.8758%" y="965" width="0.6658%" height="15" fill="rgb(216,218,46)" fg:x="91244" fg:w="742"/><text x="82.1258%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (732 samples, 0.66%)</title><rect x="81.8847%" y="949" width="0.6568%" height="15" fill="rgb(206,6,19)" fg:x="91254" fg:w="732"/><text x="82.1347%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (732 samples, 0.66%)</title><rect x="81.8847%" y="933" width="0.6568%" height="15" fill="rgb(239,177,51)" fg:x="91254" fg:w="732"/><text x="82.1347%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (24 samples, 0.02%)</title><rect x="82.5416%" y="997" width="0.0215%" height="15" fill="rgb(216,55,25)" fg:x="91986" fg:w="24"/><text x="82.7916%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (43 samples, 0.04%)</title><rect x="82.5802%" y="869" width="0.0386%" height="15" fill="rgb(231,163,29)" fg:x="92029" fg:w="43"/><text x="82.8302%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (46 samples, 0.04%)</title><rect x="82.5784%" y="949" width="0.0413%" height="15" fill="rgb(232,149,50)" fg:x="92027" fg:w="46"/><text x="82.8284%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (46 samples, 0.04%)</title><rect x="82.5784%" y="933" width="0.0413%" height="15" fill="rgb(223,142,48)" fg:x="92027" fg:w="46"/><text x="82.8284%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="82.5784%" y="917" width="0.0413%" height="15" fill="rgb(245,83,23)" fg:x="92027" fg:w="46"/><text x="82.8284%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (46 samples, 0.04%)</title><rect x="82.5784%" y="901" width="0.0413%" height="15" fill="rgb(224,63,2)" fg:x="92027" fg:w="46"/><text x="82.8284%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (44 samples, 0.04%)</title><rect x="82.5802%" y="885" width="0.0395%" height="15" fill="rgb(218,65,53)" fg:x="92029" fg:w="44"/><text x="82.8302%" y="895.50"></text></g><g><title>event_listener::Inner::lock (73 samples, 0.07%)</title><rect x="82.6206%" y="949" width="0.0655%" height="15" fill="rgb(221,84,29)" fg:x="92074" fg:w="73"/><text x="82.8706%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (73 samples, 0.07%)</title><rect x="82.6206%" y="933" width="0.0655%" height="15" fill="rgb(234,0,32)" fg:x="92074" fg:w="73"/><text x="82.8706%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (67 samples, 0.06%)</title><rect x="82.6259%" y="917" width="0.0601%" height="15" fill="rgb(206,20,16)" fg:x="92080" fg:w="67"/><text x="82.8759%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (60 samples, 0.05%)</title><rect x="82.6322%" y="901" width="0.0538%" height="15" fill="rgb(244,172,18)" fg:x="92087" fg:w="60"/><text x="82.8822%" y="911.50"></text></g><g><title>___pthread_mutex_lock (60 samples, 0.05%)</title><rect x="82.6322%" y="885" width="0.0538%" height="15" fill="rgb(254,133,1)" fg:x="92087" fg:w="60"/><text x="82.8822%" y="895.50"></text></g><g><title>__GI___lll_lock_wait (14 samples, 0.01%)</title><rect x="82.6735%" y="869" width="0.0126%" height="15" fill="rgb(222,206,41)" fg:x="92133" fg:w="14"/><text x="82.9235%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (132 samples, 0.12%)</title><rect x="82.5757%" y="965" width="0.1184%" height="15" fill="rgb(212,3,42)" fg:x="92024" fg:w="132"/><text x="82.8257%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (193 samples, 0.17%)</title><rect x="82.5631%" y="997" width="0.1732%" height="15" fill="rgb(241,11,4)" fg:x="92010" fg:w="193"/><text x="82.8131%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (179 samples, 0.16%)</title><rect x="82.5757%" y="981" width="0.1606%" height="15" fill="rgb(205,19,26)" fg:x="92024" fg:w="179"/><text x="82.8257%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (47 samples, 0.04%)</title><rect x="82.6941%" y="965" width="0.0422%" height="15" fill="rgb(210,179,32)" fg:x="92156" fg:w="47"/><text x="82.9441%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="82.6941%" y="949" width="0.0422%" height="15" fill="rgb(227,116,49)" fg:x="92156" fg:w="47"/><text x="82.9441%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (44 samples, 0.04%)</title><rect x="82.6968%" y="933" width="0.0395%" height="15" fill="rgb(211,146,6)" fg:x="92159" fg:w="44"/><text x="82.9468%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (44 samples, 0.04%)</title><rect x="82.6968%" y="917" width="0.0395%" height="15" fill="rgb(219,44,39)" fg:x="92159" fg:w="44"/><text x="82.9468%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (37 samples, 0.03%)</title><rect x="82.7372%" y="981" width="0.0332%" height="15" fill="rgb(234,128,11)" fg:x="92204" fg:w="37"/><text x="82.9872%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (37 samples, 0.03%)</title><rect x="82.7372%" y="965" width="0.0332%" height="15" fill="rgb(220,183,53)" fg:x="92204" fg:w="37"/><text x="82.9872%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (37 samples, 0.03%)</title><rect x="82.7372%" y="949" width="0.0332%" height="15" fill="rgb(213,219,32)" fg:x="92204" fg:w="37"/><text x="82.9872%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (56 samples, 0.05%)</title><rect x="82.7704%" y="981" width="0.0503%" height="15" fill="rgb(232,156,16)" fg:x="92241" fg:w="56"/><text x="83.0204%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (56 samples, 0.05%)</title><rect x="82.7704%" y="965" width="0.0503%" height="15" fill="rgb(246,135,34)" fg:x="92241" fg:w="56"/><text x="83.0204%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="82.7704%" y="949" width="0.0503%" height="15" fill="rgb(241,99,0)" fg:x="92241" fg:w="56"/><text x="83.0204%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (54 samples, 0.05%)</title><rect x="82.7722%" y="933" width="0.0485%" height="15" fill="rgb(222,103,45)" fg:x="92243" fg:w="54"/><text x="83.0222%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (53 samples, 0.05%)</title><rect x="82.7731%" y="917" width="0.0476%" height="15" fill="rgb(212,57,4)" fg:x="92244" fg:w="53"/><text x="83.0231%" y="927.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (53 samples, 0.05%)</title><rect x="82.7731%" y="901" width="0.0476%" height="15" fill="rgb(215,68,47)" fg:x="92244" fg:w="53"/><text x="83.0231%" y="911.50"></text></g><g><title>event_listener::Inner::lock (57 samples, 0.05%)</title><rect x="82.8234%" y="981" width="0.0511%" height="15" fill="rgb(230,84,2)" fg:x="92300" fg:w="57"/><text x="83.0734%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (57 samples, 0.05%)</title><rect x="82.8234%" y="965" width="0.0511%" height="15" fill="rgb(220,102,14)" fg:x="92300" fg:w="57"/><text x="83.0734%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (54 samples, 0.05%)</title><rect x="82.8260%" y="949" width="0.0485%" height="15" fill="rgb(240,10,32)" fg:x="92303" fg:w="54"/><text x="83.0760%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (54 samples, 0.05%)</title><rect x="82.8260%" y="933" width="0.0485%" height="15" fill="rgb(215,47,27)" fg:x="92303" fg:w="54"/><text x="83.0760%" y="943.50"></text></g><g><title>___pthread_mutex_lock (52 samples, 0.05%)</title><rect x="82.8278%" y="917" width="0.0467%" height="15" fill="rgb(233,188,43)" fg:x="92305" fg:w="52"/><text x="83.0778%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3,969 samples, 3.56%)</title><rect x="79.3507%" y="1013" width="3.5615%" height="15" fill="rgb(253,190,1)" fg:x="88430" fg:w="3969"/><text x="79.6007%" y="1023.50">&lt;asy..</text></g><g><title>event_listener::Event::listen (196 samples, 0.18%)</title><rect x="82.7363%" y="997" width="0.1759%" height="15" fill="rgb(206,114,52)" fg:x="92203" fg:w="196"/><text x="82.9863%" y="1007.50"></text></g><g><title>event_listener::full_fence (39 samples, 0.03%)</title><rect x="82.8772%" y="981" width="0.0350%" height="15" fill="rgb(233,120,37)" fg:x="92360" fg:w="39"/><text x="83.1272%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (38 samples, 0.03%)</title><rect x="82.8781%" y="965" width="0.0341%" height="15" fill="rgb(214,52,39)" fg:x="92361" fg:w="38"/><text x="83.1281%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (38 samples, 0.03%)</title><rect x="82.8781%" y="949" width="0.0341%" height="15" fill="rgb(223,80,29)" fg:x="92361" fg:w="38"/><text x="83.1281%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (331 samples, 0.30%)</title><rect x="82.9400%" y="997" width="0.2970%" height="15" fill="rgb(230,101,40)" fg:x="92430" fg:w="331"/><text x="83.1900%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,130 samples, 1.01%)</title><rect x="83.2370%" y="965" width="1.0140%" height="15" fill="rgb(219,211,8)" fg:x="92761" fg:w="1130"/><text x="83.4870%" y="975.50"></text></g><g><title>rust_dealloc (17 samples, 0.02%)</title><rect x="84.2752%" y="789" width="0.0153%" height="15" fill="rgb(252,126,28)" fg:x="93918" fg:w="17"/><text x="84.5252%" y="799.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (13 samples, 0.01%)</title><rect x="84.3353%" y="757" width="0.0117%" height="15" fill="rgb(215,56,38)" fg:x="93985" fg:w="13"/><text x="84.5853%" y="767.50"></text></g><g><title> (13 samples, 0.01%)</title><rect x="84.3353%" y="741" width="0.0117%" height="15" fill="rgb(249,55,44)" fg:x="93985" fg:w="13"/><text x="84.5853%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (72 samples, 0.06%)</title><rect x="84.2986%" y="789" width="0.0646%" height="15" fill="rgb(220,221,32)" fg:x="93944" fg:w="72"/><text x="84.5486%" y="799.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (58 samples, 0.05%)</title><rect x="84.3111%" y="773" width="0.0520%" height="15" fill="rgb(212,216,41)" fg:x="93958" fg:w="58"/><text x="84.5611%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (110 samples, 0.10%)</title><rect x="84.2734%" y="821" width="0.0987%" height="15" fill="rgb(228,213,43)" fg:x="93916" fg:w="110"/><text x="84.5234%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (110 samples, 0.10%)</title><rect x="84.2734%" y="805" width="0.0987%" height="15" fill="rgb(211,31,26)" fg:x="93916" fg:w="110"/><text x="84.5234%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (116 samples, 0.10%)</title><rect x="84.2734%" y="853" width="0.1041%" height="15" fill="rgb(229,202,19)" fg:x="93916" fg:w="116"/><text x="84.5234%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (116 samples, 0.10%)</title><rect x="84.2734%" y="837" width="0.1041%" height="15" fill="rgb(229,105,46)" fg:x="93916" fg:w="116"/><text x="84.5234%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (131 samples, 0.12%)</title><rect x="84.2627%" y="869" width="0.1175%" height="15" fill="rgb(235,108,1)" fg:x="93904" fg:w="131"/><text x="84.5127%" y="879.50"></text></g><g><title>rust_dealloc (150 samples, 0.13%)</title><rect x="84.2555%" y="885" width="0.1346%" height="15" fill="rgb(245,111,35)" fg:x="93896" fg:w="150"/><text x="84.5055%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,700 samples, 5.11%)</title><rect x="79.2771%" y="1109" width="5.1148%" height="15" fill="rgb(219,185,31)" fg:x="88348" fg:w="5700"/><text x="79.5271%" y="1119.50">&lt;async..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (5,700 samples, 5.11%)</title><rect x="79.2771%" y="1093" width="5.1148%" height="15" fill="rgb(214,4,43)" fg:x="88348" fg:w="5700"/><text x="79.5271%" y="1103.50">&lt;tremo..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,700 samples, 5.11%)</title><rect x="79.2771%" y="1077" width="5.1148%" height="15" fill="rgb(235,227,40)" fg:x="88348" fg:w="5700"/><text x="79.5271%" y="1087.50">&lt;async..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (5,700 samples, 5.11%)</title><rect x="79.2771%" y="1061" width="5.1148%" height="15" fill="rgb(230,88,30)" fg:x="88348" fg:w="5700"/><text x="79.5271%" y="1071.50">&lt;tremo..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,666 samples, 5.08%)</title><rect x="79.3076%" y="1045" width="5.0843%" height="15" fill="rgb(216,217,1)" fg:x="88382" fg:w="5666"/><text x="79.5576%" y="1055.50">&lt;async..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,640 samples, 5.06%)</title><rect x="79.3310%" y="1029" width="5.0609%" height="15" fill="rgb(248,139,50)" fg:x="88408" fg:w="5640"/><text x="79.5810%" y="1039.50">&lt;async..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,649 samples, 1.48%)</title><rect x="82.9122%" y="1013" width="1.4797%" height="15" fill="rgb(233,1,21)" fg:x="92399" fg:w="1649"/><text x="83.1622%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,287 samples, 1.15%)</title><rect x="83.2370%" y="997" width="1.1549%" height="15" fill="rgb(215,183,12)" fg:x="92761" fg:w="1287"/><text x="83.4870%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (1,287 samples, 1.15%)</title><rect x="83.2370%" y="981" width="1.1549%" height="15" fill="rgb(229,104,42)" fg:x="92761" fg:w="1287"/><text x="83.4870%" y="991.50"></text></g><g><title>alloc::alloc::box_free (157 samples, 0.14%)</title><rect x="84.2510%" y="965" width="0.1409%" height="15" fill="rgb(243,34,48)" fg:x="93891" fg:w="157"/><text x="84.5010%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (157 samples, 0.14%)</title><rect x="84.2510%" y="949" width="0.1409%" height="15" fill="rgb(239,11,44)" fg:x="93891" fg:w="157"/><text x="84.5010%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (157 samples, 0.14%)</title><rect x="84.2510%" y="933" width="0.1409%" height="15" fill="rgb(231,98,35)" fg:x="93891" fg:w="157"/><text x="84.5010%" y="943.50"></text></g><g><title>__rg_dealloc (157 samples, 0.14%)</title><rect x="84.2510%" y="917" width="0.1409%" height="15" fill="rgb(233,28,25)" fg:x="93891" fg:w="157"/><text x="84.5010%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (157 samples, 0.14%)</title><rect x="84.2510%" y="901" width="0.1409%" height="15" fill="rgb(234,123,11)" fg:x="93891" fg:w="157"/><text x="84.5010%" y="911.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.03%)</title><rect x="84.5130%" y="1029" width="0.0269%" height="15" fill="rgb(220,69,3)" fg:x="94183" fg:w="30"/><text x="84.7630%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.01%)</title><rect x="84.5462%" y="981" width="0.0144%" height="15" fill="rgb(214,64,36)" fg:x="94220" fg:w="16"/><text x="84.7962%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_add (16 samples, 0.01%)</title><rect x="84.5462%" y="965" width="0.0144%" height="15" fill="rgb(211,138,32)" fg:x="94220" fg:w="16"/><text x="84.7962%" y="975.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="84.5462%" y="1013" width="0.0162%" height="15" fill="rgb(213,118,47)" fg:x="94220" fg:w="18"/><text x="84.7962%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (18 samples, 0.02%)</title><rect x="84.5462%" y="997" width="0.0162%" height="15" fill="rgb(243,124,49)" fg:x="94220" fg:w="18"/><text x="84.7962%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (13 samples, 0.01%)</title><rect x="84.5660%" y="1013" width="0.0117%" height="15" fill="rgb(221,30,28)" fg:x="94242" fg:w="13"/><text x="84.8160%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (13 samples, 0.01%)</title><rect x="84.5660%" y="997" width="0.0117%" height="15" fill="rgb(246,37,13)" fg:x="94242" fg:w="13"/><text x="84.8160%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="84.5660%" y="981" width="0.0117%" height="15" fill="rgb(249,66,14)" fg:x="94242" fg:w="13"/><text x="84.8160%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="84.5660%" y="965" width="0.0117%" height="15" fill="rgb(213,166,5)" fg:x="94242" fg:w="13"/><text x="84.8160%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.01%)</title><rect x="84.5669%" y="949" width="0.0108%" height="15" fill="rgb(221,66,24)" fg:x="94243" fg:w="12"/><text x="84.8169%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="84.5669%" y="933" width="0.0108%" height="15" fill="rgb(210,132,17)" fg:x="94243" fg:w="12"/><text x="84.8169%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (62 samples, 0.06%)</title><rect x="84.5399%" y="1029" width="0.0556%" height="15" fill="rgb(243,202,5)" fg:x="94213" fg:w="62"/><text x="84.7899%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (18 samples, 0.02%)</title><rect x="84.5794%" y="1013" width="0.0162%" height="15" fill="rgb(233,70,48)" fg:x="94257" fg:w="18"/><text x="84.8294%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="84.5812%" y="997" width="0.0144%" height="15" fill="rgb(238,41,26)" fg:x="94259" fg:w="16"/><text x="84.8312%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (16 samples, 0.01%)</title><rect x="84.5812%" y="981" width="0.0144%" height="15" fill="rgb(241,19,31)" fg:x="94259" fg:w="16"/><text x="84.8312%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (16 samples, 0.01%)</title><rect x="84.5812%" y="965" width="0.0144%" height="15" fill="rgb(214,76,10)" fg:x="94259" fg:w="16"/><text x="84.8312%" y="975.50"></text></g><g><title>___pthread_mutex_lock (16 samples, 0.01%)</title><rect x="84.5812%" y="949" width="0.0144%" height="15" fill="rgb(254,202,22)" fg:x="94259" fg:w="16"/><text x="84.8312%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (30 samples, 0.03%)</title><rect x="84.5956%" y="1029" width="0.0269%" height="15" fill="rgb(214,72,24)" fg:x="94275" fg:w="30"/><text x="84.8456%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (37 samples, 0.03%)</title><rect x="84.6431%" y="1013" width="0.0332%" height="15" fill="rgb(221,92,46)" fg:x="94328" fg:w="37"/><text x="84.8931%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (314 samples, 0.28%)</title><rect x="84.8944%" y="997" width="0.2818%" height="15" fill="rgb(246,13,50)" fg:x="94608" fg:w="314"/><text x="85.1444%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17 samples, 0.02%)</title><rect x="85.2740%" y="981" width="0.0153%" height="15" fill="rgb(240,165,38)" fg:x="95031" fg:w="17"/><text x="85.5240%" y="991.50"></text></g><g><title>concurrent_queue::full_fence (40 samples, 0.04%)</title><rect x="85.2892%" y="981" width="0.0359%" height="15" fill="rgb(241,24,51)" fg:x="95048" fg:w="40"/><text x="85.5392%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (35 samples, 0.03%)</title><rect x="85.2937%" y="965" width="0.0314%" height="15" fill="rgb(227,51,44)" fg:x="95053" fg:w="35"/><text x="85.5437%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (35 samples, 0.03%)</title><rect x="85.2937%" y="949" width="0.0314%" height="15" fill="rgb(231,121,3)" fg:x="95053" fg:w="35"/><text x="85.5437%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.03%)</title><rect x="85.2937%" y="933" width="0.0314%" height="15" fill="rgb(245,3,41)" fg:x="95053" fg:w="35"/><text x="85.5437%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (220 samples, 0.20%)</title><rect x="85.3341%" y="981" width="0.1974%" height="15" fill="rgb(214,13,26)" fg:x="95098" fg:w="220"/><text x="85.5841%" y="991.50"></text></g><g><title>core::ptr::write (220 samples, 0.20%)</title><rect x="85.3341%" y="965" width="0.1974%" height="15" fill="rgb(252,75,11)" fg:x="95098" fg:w="220"/><text x="85.5841%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (210 samples, 0.19%)</title><rect x="85.3430%" y="949" width="0.1884%" height="15" fill="rgb(218,226,17)" fg:x="95108" fg:w="210"/><text x="85.5930%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (327 samples, 0.29%)</title><rect x="85.5315%" y="981" width="0.2934%" height="15" fill="rgb(248,89,38)" fg:x="95318" fg:w="327"/><text x="85.7815%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (327 samples, 0.29%)</title><rect x="85.5315%" y="965" width="0.2934%" height="15" fill="rgb(237,73,46)" fg:x="95318" fg:w="327"/><text x="85.7815%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (268 samples, 0.24%)</title><rect x="85.8249%" y="981" width="0.2405%" height="15" fill="rgb(242,78,33)" fg:x="95645" fg:w="268"/><text x="86.0749%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (263 samples, 0.24%)</title><rect x="85.8294%" y="965" width="0.2360%" height="15" fill="rgb(235,60,3)" fg:x="95650" fg:w="263"/><text x="86.0794%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,558 samples, 1.40%)</title><rect x="84.6763%" y="1013" width="1.3980%" height="15" fill="rgb(216,172,19)" fg:x="94365" fg:w="1558"/><text x="84.9263%" y="1023.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,001 samples, 0.90%)</title><rect x="85.1761%" y="997" width="0.8982%" height="15" fill="rgb(227,6,42)" fg:x="94922" fg:w="1001"/><text x="85.4261%" y="1007.50"></text></g><g><title>event_listener::Inner::lock (28 samples, 0.03%)</title><rect x="86.1174%" y="997" width="0.0251%" height="15" fill="rgb(223,207,42)" fg:x="95971" fg:w="28"/><text x="86.3674%" y="1007.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (28 samples, 0.03%)</title><rect x="86.1174%" y="981" width="0.0251%" height="15" fill="rgb(246,138,30)" fg:x="95971" fg:w="28"/><text x="86.3674%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (28 samples, 0.03%)</title><rect x="86.1174%" y="965" width="0.0251%" height="15" fill="rgb(251,199,47)" fg:x="95971" fg:w="28"/><text x="86.3674%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (28 samples, 0.03%)</title><rect x="86.1174%" y="949" width="0.0251%" height="15" fill="rgb(228,218,44)" fg:x="95971" fg:w="28"/><text x="86.3674%" y="959.50"></text></g><g><title>___pthread_mutex_lock (28 samples, 0.03%)</title><rect x="86.1174%" y="933" width="0.0251%" height="15" fill="rgb(220,68,6)" fg:x="95971" fg:w="28"/><text x="86.3674%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (16 samples, 0.01%)</title><rect x="86.1560%" y="901" width="0.0144%" height="15" fill="rgb(240,60,26)" fg:x="96014" fg:w="16"/><text x="86.4060%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="86.1560%" y="885" width="0.0144%" height="15" fill="rgb(211,200,19)" fg:x="96014" fg:w="16"/><text x="86.4060%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="86.1569%" y="869" width="0.0135%" height="15" fill="rgb(242,145,30)" fg:x="96015" fg:w="15"/><text x="86.4069%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="86.1569%" y="853" width="0.0135%" height="15" fill="rgb(225,64,13)" fg:x="96015" fg:w="15"/><text x="86.4069%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (15 samples, 0.01%)</title><rect x="86.1569%" y="837" width="0.0135%" height="15" fill="rgb(218,103,35)" fg:x="96015" fg:w="15"/><text x="86.4069%" y="847.50"></text></g><g><title>async_executor::State::notify (48 samples, 0.04%)</title><rect x="86.1497%" y="917" width="0.0431%" height="15" fill="rgb(216,93,46)" fg:x="96007" fg:w="48"/><text x="86.3997%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="86.1776%" y="901" width="0.0153%" height="15" fill="rgb(225,159,27)" fg:x="96038" fg:w="17"/><text x="86.4276%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="86.1776%" y="885" width="0.0153%" height="15" fill="rgb(225,204,11)" fg:x="96038" fg:w="17"/><text x="86.4276%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="86.1803%" y="869" width="0.0126%" height="15" fill="rgb(205,56,4)" fg:x="96041" fg:w="14"/><text x="86.4303%" y="879.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="86.1803%" y="853" width="0.0126%" height="15" fill="rgb(206,6,35)" fg:x="96041" fg:w="14"/><text x="86.4303%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (17 samples, 0.02%)</title><rect x="86.2009%" y="885" width="0.0153%" height="15" fill="rgb(247,73,52)" fg:x="96064" fg:w="17"/><text x="86.4509%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (17 samples, 0.02%)</title><rect x="86.2009%" y="869" width="0.0153%" height="15" fill="rgb(246,97,4)" fg:x="96064" fg:w="17"/><text x="86.4509%" y="879.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (85 samples, 0.08%)</title><rect x="86.1497%" y="933" width="0.0763%" height="15" fill="rgb(212,37,15)" fg:x="96007" fg:w="85"/><text x="86.3997%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (37 samples, 0.03%)</title><rect x="86.1928%" y="917" width="0.0332%" height="15" fill="rgb(208,130,40)" fg:x="96055" fg:w="37"/><text x="86.4428%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (35 samples, 0.03%)</title><rect x="86.1946%" y="901" width="0.0314%" height="15" fill="rgb(236,55,29)" fg:x="96057" fg:w="35"/><text x="86.4446%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (25 samples, 0.02%)</title><rect x="86.2260%" y="933" width="0.0224%" height="15" fill="rgb(209,156,45)" fg:x="96092" fg:w="25"/><text x="86.4760%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (25 samples, 0.02%)</title><rect x="86.2260%" y="917" width="0.0224%" height="15" fill="rgb(249,107,4)" fg:x="96092" fg:w="25"/><text x="86.4760%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (13 samples, 0.01%)</title><rect x="86.2664%" y="869" width="0.0117%" height="15" fill="rgb(227,7,13)" fg:x="96137" fg:w="13"/><text x="86.5164%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_swap (13 samples, 0.01%)</title><rect x="86.2664%" y="853" width="0.0117%" height="15" fill="rgb(250,129,14)" fg:x="96137" fg:w="13"/><text x="86.5164%" y="863.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (21 samples, 0.02%)</title><rect x="86.2781%" y="869" width="0.0188%" height="15" fill="rgb(229,92,13)" fg:x="96150" fg:w="21"/><text x="86.5281%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (21 samples, 0.02%)</title><rect x="86.2781%" y="853" width="0.0188%" height="15" fill="rgb(245,98,39)" fg:x="96150" fg:w="21"/><text x="86.5281%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (21 samples, 0.02%)</title><rect x="86.2781%" y="837" width="0.0188%" height="15" fill="rgb(234,135,48)" fg:x="96150" fg:w="21"/><text x="86.5281%" y="847.50"></text></g><g><title>__GI___pthread_cond_signal (21 samples, 0.02%)</title><rect x="86.2781%" y="821" width="0.0188%" height="15" fill="rgb(230,98,28)" fg:x="96150" fg:w="21"/><text x="86.5281%" y="831.50"></text></g><g><title>parking::Unparker::unpark (55 samples, 0.05%)</title><rect x="86.2628%" y="901" width="0.0494%" height="15" fill="rgb(223,121,0)" fg:x="96133" fg:w="55"/><text x="86.5128%" y="911.50"></text></g><g><title>parking::Inner::unpark (53 samples, 0.05%)</title><rect x="86.2646%" y="885" width="0.0476%" height="15" fill="rgb(234,173,33)" fg:x="96135" fg:w="53"/><text x="86.5146%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="86.2969%" y="869" width="0.0153%" height="15" fill="rgb(245,47,8)" fg:x="96171" fg:w="17"/><text x="86.5469%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="86.2969%" y="853" width="0.0153%" height="15" fill="rgb(205,17,20)" fg:x="96171" fg:w="17"/><text x="86.5469%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (17 samples, 0.02%)</title><rect x="86.2969%" y="837" width="0.0153%" height="15" fill="rgb(232,151,16)" fg:x="96171" fg:w="17"/><text x="86.5469%" y="847.50"></text></g><g><title>___pthread_mutex_lock (17 samples, 0.02%)</title><rect x="86.2969%" y="821" width="0.0153%" height="15" fill="rgb(208,30,32)" fg:x="96171" fg:w="17"/><text x="86.5469%" y="831.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (66 samples, 0.06%)</title><rect x="86.2547%" y="917" width="0.0592%" height="15" fill="rgb(254,26,3)" fg:x="96124" fg:w="66"/><text x="86.5047%" y="927.50"></text></g><g><title>event_listener::List::notify (199 samples, 0.18%)</title><rect x="86.1426%" y="997" width="0.1786%" height="15" fill="rgb(240,177,30)" fg:x="95999" fg:w="199"/><text x="86.3926%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (198 samples, 0.18%)</title><rect x="86.1435%" y="981" width="0.1777%" height="15" fill="rgb(248,76,44)" fg:x="96000" fg:w="198"/><text x="86.3935%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (191 samples, 0.17%)</title><rect x="86.1497%" y="965" width="0.1714%" height="15" fill="rgb(241,186,54)" fg:x="96007" fg:w="191"/><text x="86.3997%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (191 samples, 0.17%)</title><rect x="86.1497%" y="949" width="0.1714%" height="15" fill="rgb(249,171,29)" fg:x="96007" fg:w="191"/><text x="86.3997%" y="959.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (74 samples, 0.07%)</title><rect x="86.2547%" y="933" width="0.0664%" height="15" fill="rgb(237,151,44)" fg:x="96124" fg:w="74"/><text x="86.5047%" y="943.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (3,080 samples, 2.76%)</title><rect x="84.6225%" y="1029" width="2.7638%" height="15" fill="rgb(228,174,30)" fg:x="94305" fg:w="3080"/><text x="84.8725%" y="1039.50">as..</text></g><g><title>event_listener::Event::notify (1,462 samples, 1.31%)</title><rect x="86.0744%" y="1013" width="1.3119%" height="15" fill="rgb(252,14,37)" fg:x="95923" fg:w="1462"/><text x="86.3244%" y="1023.50"></text></g><g><title>event_listener::full_fence (1,187 samples, 1.07%)</title><rect x="86.3211%" y="997" width="1.0651%" height="15" fill="rgb(207,111,40)" fg:x="96198" fg:w="1187"/><text x="86.5711%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,183 samples, 1.06%)</title><rect x="86.3247%" y="981" width="1.0615%" height="15" fill="rgb(248,171,54)" fg:x="96202" fg:w="1183"/><text x="86.5747%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,183 samples, 1.06%)</title><rect x="86.3247%" y="965" width="1.0615%" height="15" fill="rgb(211,127,2)" fg:x="96202" fg:w="1183"/><text x="86.5747%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (13 samples, 0.01%)</title><rect x="87.3863%" y="1029" width="0.0117%" height="15" fill="rgb(236,87,47)" fg:x="97385" fg:w="13"/><text x="87.6363%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (441 samples, 0.40%)</title><rect x="87.3979%" y="1029" width="0.3957%" height="15" fill="rgb(223,190,45)" fg:x="97398" fg:w="441"/><text x="87.6479%" y="1039.50"></text></g><g><title>core::mem::replace (441 samples, 0.40%)</title><rect x="87.3979%" y="1013" width="0.3957%" height="15" fill="rgb(215,5,16)" fg:x="97398" fg:w="441"/><text x="87.6479%" y="1023.50"></text></g><g><title>core::ptr::read (434 samples, 0.39%)</title><rect x="87.4042%" y="997" width="0.3894%" height="15" fill="rgb(252,82,33)" fg:x="97405" fg:w="434"/><text x="87.6542%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (415 samples, 0.37%)</title><rect x="87.4213%" y="981" width="0.3724%" height="15" fill="rgb(247,213,44)" fg:x="97424" fg:w="415"/><text x="87.6713%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (337 samples, 0.30%)</title><rect x="87.7937%" y="1029" width="0.3024%" height="15" fill="rgb(205,196,44)" fg:x="97839" fg:w="337"/><text x="88.0437%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (307 samples, 0.28%)</title><rect x="87.8206%" y="1013" width="0.2755%" height="15" fill="rgb(237,96,54)" fg:x="97869" fg:w="307"/><text x="88.0706%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="88.0978%" y="1013" width="0.0269%" height="15" fill="rgb(230,113,34)" fg:x="98178" fg:w="30"/><text x="88.3478%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (30 samples, 0.03%)</title><rect x="88.0978%" y="997" width="0.0269%" height="15" fill="rgb(221,224,12)" fg:x="98178" fg:w="30"/><text x="88.3478%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (30 samples, 0.03%)</title><rect x="88.0978%" y="981" width="0.0269%" height="15" fill="rgb(219,112,44)" fg:x="98178" fg:w="30"/><text x="88.3478%" y="991.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (21 samples, 0.02%)</title><rect x="88.1248%" y="933" width="0.0188%" height="15" fill="rgb(210,31,13)" fg:x="98208" fg:w="21"/><text x="88.3748%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (24 samples, 0.02%)</title><rect x="88.1248%" y="1013" width="0.0215%" height="15" fill="rgb(230,25,16)" fg:x="98208" fg:w="24"/><text x="88.3748%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (24 samples, 0.02%)</title><rect x="88.1248%" y="997" width="0.0215%" height="15" fill="rgb(246,108,53)" fg:x="98208" fg:w="24"/><text x="88.3748%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="88.1248%" y="981" width="0.0215%" height="15" fill="rgb(241,172,50)" fg:x="98208" fg:w="24"/><text x="88.3748%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (24 samples, 0.02%)</title><rect x="88.1248%" y="965" width="0.0215%" height="15" fill="rgb(235,141,10)" fg:x="98208" fg:w="24"/><text x="88.3748%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (24 samples, 0.02%)</title><rect x="88.1248%" y="949" width="0.0215%" height="15" fill="rgb(220,174,43)" fg:x="98208" fg:w="24"/><text x="88.3748%" y="959.50"></text></g><g><title>event_listener::Inner::lock (14 samples, 0.01%)</title><rect x="88.1463%" y="1013" width="0.0126%" height="15" fill="rgb(215,181,40)" fg:x="98232" fg:w="14"/><text x="88.3963%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="88.1463%" y="997" width="0.0126%" height="15" fill="rgb(230,97,2)" fg:x="98232" fg:w="14"/><text x="88.3963%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="88.1472%" y="981" width="0.0117%" height="15" fill="rgb(211,25,27)" fg:x="98233" fg:w="13"/><text x="88.3972%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="88.1472%" y="965" width="0.0117%" height="15" fill="rgb(230,87,26)" fg:x="98233" fg:w="13"/><text x="88.3972%" y="975.50"></text></g><g><title>___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="88.1481%" y="949" width="0.0108%" height="15" fill="rgb(227,160,17)" fg:x="98234" fg:w="12"/><text x="88.3981%" y="959.50"></text></g><g><title>event_listener::Event::listen (81 samples, 0.07%)</title><rect x="88.0978%" y="1029" width="0.0727%" height="15" fill="rgb(244,85,34)" fg:x="98178" fg:w="81"/><text x="88.3478%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (25 samples, 0.02%)</title><rect x="88.1831%" y="933" width="0.0224%" height="15" fill="rgb(207,70,0)" fg:x="98273" fg:w="25"/><text x="88.4331%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (29 samples, 0.03%)</title><rect x="88.1804%" y="1013" width="0.0260%" height="15" fill="rgb(223,129,7)" fg:x="98270" fg:w="29"/><text x="88.4304%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (27 samples, 0.02%)</title><rect x="88.1822%" y="997" width="0.0242%" height="15" fill="rgb(246,105,7)" fg:x="98272" fg:w="27"/><text x="88.4322%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="88.1822%" y="981" width="0.0242%" height="15" fill="rgb(215,154,42)" fg:x="98272" fg:w="27"/><text x="88.4322%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (26 samples, 0.02%)</title><rect x="88.1831%" y="965" width="0.0233%" height="15" fill="rgb(220,215,30)" fg:x="98273" fg:w="26"/><text x="88.4331%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (26 samples, 0.02%)</title><rect x="88.1831%" y="949" width="0.0233%" height="15" fill="rgb(228,81,51)" fg:x="98273" fg:w="26"/><text x="88.4331%" y="959.50"></text></g><g><title>event_listener::Inner::lock (66 samples, 0.06%)</title><rect x="88.2109%" y="1013" width="0.0592%" height="15" fill="rgb(247,71,54)" fg:x="98304" fg:w="66"/><text x="88.4609%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (65 samples, 0.06%)</title><rect x="88.2118%" y="997" width="0.0583%" height="15" fill="rgb(234,176,34)" fg:x="98305" fg:w="65"/><text x="88.4618%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (59 samples, 0.05%)</title><rect x="88.2172%" y="981" width="0.0529%" height="15" fill="rgb(241,103,54)" fg:x="98311" fg:w="59"/><text x="88.4672%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (59 samples, 0.05%)</title><rect x="88.2172%" y="965" width="0.0529%" height="15" fill="rgb(228,22,34)" fg:x="98311" fg:w="59"/><text x="88.4672%" y="975.50"></text></g><g><title>___pthread_mutex_lock (59 samples, 0.05%)</title><rect x="88.2172%" y="949" width="0.0529%" height="15" fill="rgb(241,179,48)" fg:x="98311" fg:w="59"/><text x="88.4672%" y="959.50"></text></g><g><title>__GI___lll_lock_wait (40 samples, 0.04%)</title><rect x="88.2342%" y="933" width="0.0359%" height="15" fill="rgb(235,167,37)" fg:x="98330" fg:w="40"/><text x="88.4842%" y="943.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (10,291 samples, 9.23%)</title><rect x="79.2771%" y="1125" width="9.2344%" height="15" fill="rgb(213,109,30)" fg:x="88348" fg:w="10291"/><text x="79.5271%" y="1135.50">tremor_runtim..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,591 samples, 4.12%)</title><rect x="84.3919%" y="1109" width="4.1196%" height="15" fill="rgb(222,172,16)" fg:x="94048" fg:w="4591"/><text x="84.6419%" y="1119.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (4,591 samples, 4.12%)</title><rect x="84.3919%" y="1093" width="4.1196%" height="15" fill="rgb(233,192,5)" fg:x="94048" fg:w="4591"/><text x="84.6419%" y="1103.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,591 samples, 4.12%)</title><rect x="84.3919%" y="1077" width="4.1196%" height="15" fill="rgb(247,189,41)" fg:x="94048" fg:w="4591"/><text x="84.6419%" y="1087.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (4,591 samples, 4.12%)</title><rect x="84.3919%" y="1061" width="4.1196%" height="15" fill="rgb(218,134,47)" fg:x="94048" fg:w="4591"/><text x="84.6419%" y="1071.50">trem..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (4,591 samples, 4.12%)</title><rect x="84.3919%" y="1045" width="4.1196%" height="15" fill="rgb(216,29,3)" fg:x="94048" fg:w="4591"/><text x="84.6419%" y="1055.50">&lt;asy..</text></g><g><title>event_listener::Event::notify (380 samples, 0.34%)</title><rect x="88.1705%" y="1029" width="0.3410%" height="15" fill="rgb(246,140,12)" fg:x="98259" fg:w="380"/><text x="88.4205%" y="1039.50"></text></g><g><title>event_listener::full_fence (267 samples, 0.24%)</title><rect x="88.2719%" y="1013" width="0.2396%" height="15" fill="rgb(230,136,11)" fg:x="98372" fg:w="267"/><text x="88.5219%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (258 samples, 0.23%)</title><rect x="88.2800%" y="997" width="0.2315%" height="15" fill="rgb(247,22,47)" fg:x="98381" fg:w="258"/><text x="88.5300%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (258 samples, 0.23%)</title><rect x="88.2800%" y="981" width="0.2315%" height="15" fill="rgb(218,84,22)" fg:x="98381" fg:w="258"/><text x="88.5300%" y="991.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (67 samples, 0.06%)</title><rect x="88.5115%" y="1125" width="0.0601%" height="15" fill="rgb(216,87,39)" fg:x="98639" fg:w="67"/><text x="88.7615%" y="1135.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (57 samples, 0.05%)</title><rect x="88.5716%" y="1125" width="0.0511%" height="15" fill="rgb(221,178,8)" fg:x="98706" fg:w="57"/><text x="88.8216%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="88.6120%" y="1109" width="0.0108%" height="15" fill="rgb(230,42,11)" fg:x="98751" fg:w="12"/><text x="88.8620%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="88.6120%" y="1093" width="0.0108%" height="15" fill="rgb(237,229,4)" fg:x="98751" fg:w="12"/><text x="88.8620%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="88.6120%" y="1077" width="0.0108%" height="15" fill="rgb(222,31,33)" fg:x="98751" fg:w="12"/><text x="88.8620%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="88.6120%" y="1061" width="0.0108%" height="15" fill="rgb(210,17,39)" fg:x="98751" fg:w="12"/><text x="88.8620%" y="1071.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="88.6120%" y="1045" width="0.0108%" height="15" fill="rgb(244,93,20)" fg:x="98751" fg:w="12"/><text x="88.8620%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="88.6120%" y="1029" width="0.0108%" height="15" fill="rgb(210,40,47)" fg:x="98751" fg:w="12"/><text x="88.8620%" y="1039.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (21 samples, 0.02%)</title><rect x="88.6237%" y="1125" width="0.0188%" height="15" fill="rgb(239,211,47)" fg:x="98764" fg:w="21"/><text x="88.8737%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (12 samples, 0.01%)</title><rect x="88.6587%" y="1077" width="0.0108%" height="15" fill="rgb(251,223,49)" fg:x="98803" fg:w="12"/><text x="88.9087%" y="1087.50"></text></g><g><title>value_trait::Builder::object (35 samples, 0.03%)</title><rect x="88.6425%" y="1125" width="0.0314%" height="15" fill="rgb(221,149,5)" fg:x="98785" fg:w="35"/><text x="88.8925%" y="1135.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (17 samples, 0.02%)</title><rect x="88.6587%" y="1109" width="0.0153%" height="15" fill="rgb(219,224,51)" fg:x="98803" fg:w="17"/><text x="88.9087%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (17 samples, 0.02%)</title><rect x="88.6587%" y="1093" width="0.0153%" height="15" fill="rgb(223,7,8)" fg:x="98803" fg:w="17"/><text x="88.9087%" y="1103.50"></text></g><g><title>[unknown] (93,110 samples, 83.55%)</title><rect x="5.1273%" y="1141" width="83.5502%" height="15" fill="rgb(241,217,22)" fg:x="5714" fg:w="93110"/><text x="5.3773%" y="1151.50">[unknown]</text></g><g><title>snmalloc::AllocPool&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt;::acquire (17 samples, 0.02%)</title><rect x="88.6820%" y="677" width="0.0153%" height="15" fill="rgb(248,209,0)" fg:x="98829" fg:w="17"/><text x="88.9320%" y="687.50"></text></g><g><title>snmalloc::Pool&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt; &gt;::acquire&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (17 samples, 0.02%)</title><rect x="88.6820%" y="661" width="0.0153%" height="15" fill="rgb(217,205,4)" fg:x="98829" fg:w="17"/><text x="88.9320%" y="671.50"></text></g><g><title>snmalloc::Pool&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt; &gt;::acquire&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (17 samples, 0.02%)</title><rect x="88.6820%" y="645" width="0.0153%" height="15" fill="rgb(228,124,39)" fg:x="98829" fg:w="17"/><text x="88.9320%" y="655.50"></text></g><g><title>snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;::alloc_chunk&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, 4096ul, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (17 samples, 0.02%)</title><rect x="88.6820%" y="629" width="0.0153%" height="15" fill="rgb(250,116,42)" fg:x="98829" fg:w="17"/><text x="88.9320%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::Allocator (17 samples, 0.02%)</title><rect x="88.6820%" y="613" width="0.0153%" height="15" fill="rgb(223,202,9)" fg:x="98829" fg:w="17"/><text x="88.9320%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="88.6820%" y="709" width="0.0215%" height="15" fill="rgb(242,222,40)" fg:x="98829" fg:w="24"/><text x="88.9320%" y="719.50"></text></g><g><title>snmalloc::init_thread_allocator (24 samples, 0.02%)</title><rect x="88.6820%" y="693" width="0.0215%" height="15" fill="rgb(229,99,46)" fg:x="98829" fg:w="24"/><text x="88.9320%" y="703.50"></text></g><g><title>async_channel::bounded (25 samples, 0.02%)</title><rect x="88.6820%" y="901" width="0.0224%" height="15" fill="rgb(225,56,46)" fg:x="98829" fg:w="25"/><text x="88.9320%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (25 samples, 0.02%)</title><rect x="88.6820%" y="885" width="0.0224%" height="15" fill="rgb(227,94,5)" fg:x="98829" fg:w="25"/><text x="88.9320%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (25 samples, 0.02%)</title><rect x="88.6820%" y="869" width="0.0224%" height="15" fill="rgb(205,112,38)" fg:x="98829" fg:w="25"/><text x="88.9320%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.02%)</title><rect x="88.6820%" y="853" width="0.0224%" height="15" fill="rgb(231,133,46)" fg:x="98829" fg:w="25"/><text x="88.9320%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.02%)</title><rect x="88.6820%" y="837" width="0.0224%" height="15" fill="rgb(217,16,9)" fg:x="98829" fg:w="25"/><text x="88.9320%" y="847.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.02%)</title><rect x="88.6820%" y="821" width="0.0224%" height="15" fill="rgb(249,173,9)" fg:x="98829" fg:w="25"/><text x="88.9320%" y="831.50"></text></g><g><title>__rg_alloc (25 samples, 0.02%)</title><rect x="88.6820%" y="805" width="0.0224%" height="15" fill="rgb(205,163,53)" fg:x="98829" fg:w="25"/><text x="88.9320%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (25 samples, 0.02%)</title><rect x="88.6820%" y="789" width="0.0224%" height="15" fill="rgb(217,54,41)" fg:x="98829" fg:w="25"/><text x="88.9320%" y="799.50"></text></g><g><title>rust_alloc (25 samples, 0.02%)</title><rect x="88.6820%" y="773" width="0.0224%" height="15" fill="rgb(228,216,12)" fg:x="98829" fg:w="25"/><text x="88.9320%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="88.6820%" y="757" width="0.0224%" height="15" fill="rgb(244,228,15)" fg:x="98829" fg:w="25"/><text x="88.9320%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="88.6820%" y="741" width="0.0224%" height="15" fill="rgb(221,176,53)" fg:x="98829" fg:w="25"/><text x="88.9320%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="88.6820%" y="725" width="0.0224%" height="15" fill="rgb(205,94,34)" fg:x="98829" fg:w="25"/><text x="88.9320%" y="735.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="88.7969%" y="549" width="0.0135%" height="15" fill="rgb(213,110,48)" fg:x="98957" fg:w="15"/><text x="89.0469%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (27 samples, 0.02%)</title><rect x="88.9548%" y="533" width="0.0242%" height="15" fill="rgb(236,142,28)" fg:x="99133" fg:w="27"/><text x="89.2048%" y="543.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="89.0544%" y="453" width="0.0126%" height="15" fill="rgb(225,135,29)" fg:x="99244" fg:w="14"/><text x="89.3044%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (40 samples, 0.04%)</title><rect x="89.0732%" y="437" width="0.0359%" height="15" fill="rgb(252,45,31)" fg:x="99265" fg:w="40"/><text x="89.3232%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (39 samples, 0.03%)</title><rect x="89.0741%" y="421" width="0.0350%" height="15" fill="rgb(211,187,50)" fg:x="99266" fg:w="39"/><text x="89.3241%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (23 samples, 0.02%)</title><rect x="89.0885%" y="405" width="0.0206%" height="15" fill="rgb(229,109,7)" fg:x="99282" fg:w="23"/><text x="89.3385%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="89.1091%" y="437" width="0.0188%" height="15" fill="rgb(251,131,51)" fg:x="99305" fg:w="21"/><text x="89.3591%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (41 samples, 0.04%)</title><rect x="89.1280%" y="437" width="0.0368%" height="15" fill="rgb(251,180,35)" fg:x="99326" fg:w="41"/><text x="89.3780%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (216 samples, 0.19%)</title><rect x="89.0347%" y="469" width="0.1938%" height="15" fill="rgb(211,46,32)" fg:x="99222" fg:w="216"/><text x="89.2847%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (180 samples, 0.16%)</title><rect x="89.0670%" y="453" width="0.1615%" height="15" fill="rgb(248,123,17)" fg:x="99258" fg:w="180"/><text x="89.3170%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (71 samples, 0.06%)</title><rect x="89.1648%" y="437" width="0.0637%" height="15" fill="rgb(227,141,18)" fg:x="99367" fg:w="71"/><text x="89.4148%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (71 samples, 0.06%)</title><rect x="89.1648%" y="421" width="0.0637%" height="15" fill="rgb(216,102,9)" fg:x="99367" fg:w="71"/><text x="89.4148%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (36 samples, 0.03%)</title><rect x="89.1962%" y="405" width="0.0323%" height="15" fill="rgb(253,47,13)" fg:x="99402" fg:w="36"/><text x="89.4462%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (36 samples, 0.03%)</title><rect x="89.1962%" y="389" width="0.0323%" height="15" fill="rgb(226,93,23)" fg:x="99402" fg:w="36"/><text x="89.4462%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (255 samples, 0.23%)</title><rect x="89.0015%" y="485" width="0.2288%" height="15" fill="rgb(247,104,17)" fg:x="99185" fg:w="255"/><text x="89.2515%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (287 samples, 0.26%)</title><rect x="88.9790%" y="533" width="0.2575%" height="15" fill="rgb(233,203,26)" fg:x="99160" fg:w="287"/><text x="89.2290%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (287 samples, 0.26%)</title><rect x="88.9790%" y="517" width="0.2575%" height="15" fill="rgb(244,98,49)" fg:x="99160" fg:w="287"/><text x="89.2290%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (287 samples, 0.26%)</title><rect x="88.9790%" y="501" width="0.2575%" height="15" fill="rgb(235,134,22)" fg:x="99160" fg:w="287"/><text x="89.2290%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (544 samples, 0.49%)</title><rect x="89.4501%" y="501" width="0.4881%" height="15" fill="rgb(221,70,32)" fg:x="99685" fg:w="544"/><text x="89.7001%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (365 samples, 0.33%)</title><rect x="89.6107%" y="485" width="0.3275%" height="15" fill="rgb(238,15,50)" fg:x="99864" fg:w="365"/><text x="89.8607%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (365 samples, 0.33%)</title><rect x="89.6107%" y="469" width="0.3275%" height="15" fill="rgb(215,221,48)" fg:x="99864" fg:w="365"/><text x="89.8607%" y="479.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (749 samples, 0.67%)</title><rect x="89.2796%" y="517" width="0.6721%" height="15" fill="rgb(236,73,3)" fg:x="99495" fg:w="749"/><text x="89.5296%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (15 samples, 0.01%)</title><rect x="89.9383%" y="501" width="0.0135%" height="15" fill="rgb(250,107,11)" fg:x="100229" fg:w="15"/><text x="90.1883%" y="511.50"></text></g><g><title>async_executor::steal (797 samples, 0.72%)</title><rect x="89.2375%" y="533" width="0.7152%" height="15" fill="rgb(242,39,14)" fg:x="99448" fg:w="797"/><text x="89.4875%" y="543.50"></text></g><g><title>concurrent_queue::full_fence (962 samples, 0.86%)</title><rect x="90.4273%" y="501" width="0.8632%" height="15" fill="rgb(248,164,37)" fg:x="100774" fg:w="962"/><text x="90.6773%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (962 samples, 0.86%)</title><rect x="90.4273%" y="485" width="0.8632%" height="15" fill="rgb(217,60,12)" fg:x="100774" fg:w="962"/><text x="90.6773%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (962 samples, 0.86%)</title><rect x="90.4273%" y="469" width="0.8632%" height="15" fill="rgb(240,125,29)" fg:x="100774" fg:w="962"/><text x="90.6773%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (962 samples, 0.86%)</title><rect x="90.4273%" y="453" width="0.8632%" height="15" fill="rgb(208,207,28)" fg:x="100774" fg:w="962"/><text x="90.6773%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,413 samples, 1.27%)</title><rect x="90.1061%" y="517" width="1.2679%" height="15" fill="rgb(209,159,27)" fg:x="100416" fg:w="1413"/><text x="90.3561%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (93 samples, 0.08%)</title><rect x="91.2905%" y="501" width="0.0835%" height="15" fill="rgb(251,176,53)" fg:x="101736" fg:w="93"/><text x="91.5405%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (71 samples, 0.06%)</title><rect x="91.3103%" y="485" width="0.0637%" height="15" fill="rgb(211,85,7)" fg:x="101758" fg:w="71"/><text x="91.5603%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (307 samples, 0.28%)</title><rect x="91.4144%" y="501" width="0.2755%" height="15" fill="rgb(216,64,54)" fg:x="101874" fg:w="307"/><text x="91.6644%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (302 samples, 0.27%)</title><rect x="91.4189%" y="485" width="0.2710%" height="15" fill="rgb(217,54,24)" fg:x="101879" fg:w="302"/><text x="91.6689%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (302 samples, 0.27%)</title><rect x="91.4189%" y="469" width="0.2710%" height="15" fill="rgb(208,206,53)" fg:x="101879" fg:w="302"/><text x="91.6689%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (302 samples, 0.27%)</title><rect x="91.4189%" y="453" width="0.2710%" height="15" fill="rgb(251,74,39)" fg:x="101879" fg:w="302"/><text x="91.6689%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (36 samples, 0.03%)</title><rect x="91.6943%" y="485" width="0.0323%" height="15" fill="rgb(226,47,5)" fg:x="102186" fg:w="36"/><text x="91.9443%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (36 samples, 0.03%)</title><rect x="91.6943%" y="469" width="0.0323%" height="15" fill="rgb(234,111,33)" fg:x="102186" fg:w="36"/><text x="91.9443%" y="479.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (38 samples, 0.03%)</title><rect x="91.6934%" y="501" width="0.0341%" height="15" fill="rgb(251,14,10)" fg:x="102185" fg:w="38"/><text x="91.9434%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (15 samples, 0.01%)</title><rect x="91.7302%" y="501" width="0.0135%" height="15" fill="rgb(232,43,0)" fg:x="102226" fg:w="15"/><text x="91.9802%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="91.7302%" y="485" width="0.0135%" height="15" fill="rgb(222,68,43)" fg:x="102226" fg:w="15"/><text x="91.9802%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (69 samples, 0.06%)</title><rect x="91.7437%" y="501" width="0.0619%" height="15" fill="rgb(217,24,23)" fg:x="102241" fg:w="69"/><text x="91.9937%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (69 samples, 0.06%)</title><rect x="91.7437%" y="485" width="0.0619%" height="15" fill="rgb(229,209,14)" fg:x="102241" fg:w="69"/><text x="91.9937%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (98 samples, 0.09%)</title><rect x="91.8056%" y="501" width="0.0879%" height="15" fill="rgb(250,149,48)" fg:x="102310" fg:w="98"/><text x="92.0556%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_or (98 samples, 0.09%)</title><rect x="91.8056%" y="485" width="0.0879%" height="15" fill="rgb(210,120,37)" fg:x="102310" fg:w="98"/><text x="92.0556%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,388 samples, 2.14%)</title><rect x="89.9526%" y="533" width="2.1428%" height="15" fill="rgb(210,21,8)" fg:x="100245" fg:w="2388"/><text x="90.2026%" y="543.50">c..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (804 samples, 0.72%)</title><rect x="91.3740%" y="517" width="0.7215%" height="15" fill="rgb(243,145,7)" fg:x="101829" fg:w="804"/><text x="91.6240%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (225 samples, 0.20%)</title><rect x="91.8935%" y="501" width="0.2019%" height="15" fill="rgb(238,178,32)" fg:x="102408" fg:w="225"/><text x="92.1435%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (225 samples, 0.20%)</title><rect x="91.8935%" y="485" width="0.2019%" height="15" fill="rgb(222,4,10)" fg:x="102408" fg:w="225"/><text x="92.1435%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (231 samples, 0.21%)</title><rect x="92.1197%" y="469" width="0.2073%" height="15" fill="rgb(239,7,37)" fg:x="102660" fg:w="231"/><text x="92.3697%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (231 samples, 0.21%)</title><rect x="92.1197%" y="453" width="0.2073%" height="15" fill="rgb(215,31,37)" fg:x="102660" fg:w="231"/><text x="92.3697%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (493 samples, 0.44%)</title><rect x="92.0954%" y="533" width="0.4424%" height="15" fill="rgb(224,83,33)" fg:x="102633" fg:w="493"/><text x="92.3454%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (493 samples, 0.44%)</title><rect x="92.0954%" y="517" width="0.4424%" height="15" fill="rgb(239,55,3)" fg:x="102633" fg:w="493"/><text x="92.3454%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (493 samples, 0.44%)</title><rect x="92.0954%" y="501" width="0.4424%" height="15" fill="rgb(247,92,11)" fg:x="102633" fg:w="493"/><text x="92.3454%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (472 samples, 0.42%)</title><rect x="92.1143%" y="485" width="0.4235%" height="15" fill="rgb(239,200,7)" fg:x="102654" fg:w="472"/><text x="92.3643%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (235 samples, 0.21%)</title><rect x="92.3270%" y="469" width="0.2109%" height="15" fill="rgb(227,115,8)" fg:x="102891" fg:w="235"/><text x="92.5770%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (235 samples, 0.21%)</title><rect x="92.3270%" y="453" width="0.2109%" height="15" fill="rgb(215,189,27)" fg:x="102891" fg:w="235"/><text x="92.5770%" y="463.50"></text></g><g><title>fastrand::Rng::usize (17 samples, 0.02%)</title><rect x="92.5531%" y="469" width="0.0153%" height="15" fill="rgb(251,216,39)" fg:x="103143" fg:w="17"/><text x="92.8031%" y="479.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (14 samples, 0.01%)</title><rect x="92.5558%" y="453" width="0.0126%" height="15" fill="rgb(207,29,47)" fg:x="103146" fg:w="14"/><text x="92.8058%" y="463.50"></text></g><g><title>fastrand::usize (38 samples, 0.03%)</title><rect x="92.5378%" y="533" width="0.0341%" height="15" fill="rgb(210,71,34)" fg:x="103126" fg:w="38"/><text x="92.7878%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.03%)</title><rect x="92.5423%" y="517" width="0.0296%" height="15" fill="rgb(253,217,51)" fg:x="103131" fg:w="33"/><text x="92.7923%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 0.03%)</title><rect x="92.5441%" y="501" width="0.0278%" height="15" fill="rgb(222,117,46)" fg:x="103133" fg:w="31"/><text x="92.7941%" y="511.50"></text></g><g><title>fastrand::usize::{{closure}} (21 samples, 0.02%)</title><rect x="92.5531%" y="485" width="0.0188%" height="15" fill="rgb(226,132,6)" fg:x="103143" fg:w="21"/><text x="92.8031%" y="495.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="92.5719%" y="517" width="0.0126%" height="15" fill="rgb(254,145,51)" fg:x="103164" fg:w="14"/><text x="92.8219%" y="527.50"></text></g><g><title>std::sync::poison::Flag::borrow (14 samples, 0.01%)</title><rect x="92.5719%" y="501" width="0.0126%" height="15" fill="rgb(231,199,27)" fg:x="103164" fg:w="14"/><text x="92.8219%" y="511.50"></text></g><g><title>___pthread_rwlock_rdlock (230 samples, 0.21%)</title><rect x="92.6015%" y="485" width="0.2064%" height="15" fill="rgb(245,158,14)" fg:x="103197" fg:w="230"/><text x="92.8515%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (4,586 samples, 4.12%)</title><rect x="88.8103%" y="549" width="4.1151%" height="15" fill="rgb(240,113,14)" fg:x="98972" fg:w="4586"/><text x="89.0603%" y="559.50">asyn..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (394 samples, 0.35%)</title><rect x="92.5719%" y="533" width="0.3535%" height="15" fill="rgb(210,20,13)" fg:x="103164" fg:w="394"/><text x="92.8219%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (380 samples, 0.34%)</title><rect x="92.5845%" y="517" width="0.3410%" height="15" fill="rgb(241,144,13)" fg:x="103178" fg:w="380"/><text x="92.8345%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (372 samples, 0.33%)</title><rect x="92.5917%" y="501" width="0.3338%" height="15" fill="rgb(235,43,34)" fg:x="103186" fg:w="372"/><text x="92.8417%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (131 samples, 0.12%)</title><rect x="92.8079%" y="485" width="0.1175%" height="15" fill="rgb(208,36,20)" fg:x="103427" fg:w="131"/><text x="93.0579%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (131 samples, 0.12%)</title><rect x="92.8079%" y="469" width="0.1175%" height="15" fill="rgb(239,204,10)" fg:x="103427" fg:w="131"/><text x="93.0579%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (29 samples, 0.03%)</title><rect x="92.9326%" y="469" width="0.0260%" height="15" fill="rgb(217,84,43)" fg:x="103566" fg:w="29"/><text x="93.1826%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (33 samples, 0.03%)</title><rect x="92.9300%" y="533" width="0.0296%" height="15" fill="rgb(241,170,50)" fg:x="103563" fg:w="33"/><text x="93.1800%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="92.9300%" y="517" width="0.0296%" height="15" fill="rgb(226,205,29)" fg:x="103563" fg:w="33"/><text x="93.1800%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (30 samples, 0.03%)</title><rect x="92.9326%" y="501" width="0.0269%" height="15" fill="rgb(233,113,1)" fg:x="103566" fg:w="30"/><text x="93.1826%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (30 samples, 0.03%)</title><rect x="92.9326%" y="485" width="0.0269%" height="15" fill="rgb(253,98,13)" fg:x="103566" fg:w="30"/><text x="93.1826%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (48 samples, 0.04%)</title><rect x="92.9596%" y="533" width="0.0431%" height="15" fill="rgb(211,115,12)" fg:x="103596" fg:w="48"/><text x="93.2096%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (48 samples, 0.04%)</title><rect x="92.9596%" y="517" width="0.0431%" height="15" fill="rgb(208,12,16)" fg:x="103596" fg:w="48"/><text x="93.2096%" y="527.50"></text></g><g><title>async_executor::State::notify (119 samples, 0.11%)</title><rect x="92.9255%" y="549" width="0.1068%" height="15" fill="rgb(237,193,54)" fg:x="103558" fg:w="119"/><text x="93.1755%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (33 samples, 0.03%)</title><rect x="93.0026%" y="533" width="0.0296%" height="15" fill="rgb(243,22,42)" fg:x="103644" fg:w="33"/><text x="93.2526%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (30 samples, 0.03%)</title><rect x="93.0053%" y="517" width="0.0269%" height="15" fill="rgb(233,151,36)" fg:x="103647" fg:w="30"/><text x="93.2553%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.02%)</title><rect x="93.0080%" y="501" width="0.0242%" height="15" fill="rgb(237,57,45)" fg:x="103650" fg:w="27"/><text x="93.2580%" y="511.50"></text></g><g><title>___pthread_mutex_lock (27 samples, 0.02%)</title><rect x="93.0080%" y="485" width="0.0242%" height="15" fill="rgb(221,88,17)" fg:x="103650" fg:w="27"/><text x="93.2580%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (104 samples, 0.09%)</title><rect x="93.0457%" y="517" width="0.0933%" height="15" fill="rgb(230,79,15)" fg:x="103692" fg:w="104"/><text x="93.2957%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (103 samples, 0.09%)</title><rect x="93.0466%" y="501" width="0.0924%" height="15" fill="rgb(213,57,13)" fg:x="103693" fg:w="103"/><text x="93.2966%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (103 samples, 0.09%)</title><rect x="93.0466%" y="485" width="0.0924%" height="15" fill="rgb(222,116,39)" fg:x="103693" fg:w="103"/><text x="93.2966%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (103 samples, 0.09%)</title><rect x="93.0466%" y="469" width="0.0924%" height="15" fill="rgb(245,107,2)" fg:x="103693" fg:w="103"/><text x="93.2966%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (103 samples, 0.09%)</title><rect x="93.0466%" y="453" width="0.0924%" height="15" fill="rgb(238,1,10)" fg:x="103693" fg:w="103"/><text x="93.2966%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (103 samples, 0.09%)</title><rect x="93.0466%" y="437" width="0.0924%" height="15" fill="rgb(249,4,48)" fg:x="103693" fg:w="103"/><text x="93.2966%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (28 samples, 0.03%)</title><rect x="93.1390%" y="517" width="0.0251%" height="15" fill="rgb(223,151,18)" fg:x="103796" fg:w="28"/><text x="93.3890%" y="527.50"></text></g><g><title>async_executor::Sleepers::insert (140 samples, 0.13%)</title><rect x="93.0430%" y="533" width="0.1256%" height="15" fill="rgb(227,65,43)" fg:x="103689" fg:w="140"/><text x="93.2930%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (47 samples, 0.04%)</title><rect x="93.2198%" y="517" width="0.0422%" height="15" fill="rgb(218,40,45)" fg:x="103886" fg:w="47"/><text x="93.4698%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (45 samples, 0.04%)</title><rect x="93.2216%" y="501" width="0.0404%" height="15" fill="rgb(252,121,31)" fg:x="103888" fg:w="45"/><text x="93.4716%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="93.2234%" y="485" width="0.0386%" height="15" fill="rgb(219,158,43)" fg:x="103890" fg:w="43"/><text x="93.4734%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="93.2234%" y="469" width="0.0386%" height="15" fill="rgb(231,162,42)" fg:x="103890" fg:w="43"/><text x="93.4734%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (43 samples, 0.04%)</title><rect x="93.2234%" y="453" width="0.0386%" height="15" fill="rgb(217,179,25)" fg:x="103890" fg:w="43"/><text x="93.4734%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (43 samples, 0.04%)</title><rect x="93.2234%" y="437" width="0.0386%" height="15" fill="rgb(206,212,31)" fg:x="103890" fg:w="43"/><text x="93.4734%" y="447.50"></text></g><g><title>async_executor::Sleepers::update (127 samples, 0.11%)</title><rect x="93.1749%" y="533" width="0.1140%" height="15" fill="rgb(235,144,12)" fg:x="103836" fg:w="127"/><text x="93.4249%" y="543.50"></text></g><g><title>core::task::wake::Waker::will_wake (19 samples, 0.02%)</title><rect x="93.2718%" y="517" width="0.0170%" height="15" fill="rgb(213,51,10)" fg:x="103944" fg:w="19"/><text x="93.5218%" y="527.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (19 samples, 0.02%)</title><rect x="93.2718%" y="501" width="0.0170%" height="15" fill="rgb(231,145,14)" fg:x="103944" fg:w="19"/><text x="93.5218%" y="511.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (219 samples, 0.20%)</title><rect x="93.2979%" y="469" width="0.1965%" height="15" fill="rgb(235,15,28)" fg:x="103973" fg:w="219"/><text x="93.5479%" y="479.50"></text></g><g><title>__GI___lll_lock_wake (16 samples, 0.01%)</title><rect x="93.4800%" y="453" width="0.0144%" height="15" fill="rgb(237,206,10)" fg:x="104176" fg:w="16"/><text x="93.7300%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (233 samples, 0.21%)</title><rect x="93.2889%" y="533" width="0.2091%" height="15" fill="rgb(236,227,27)" fg:x="103963" fg:w="233"/><text x="93.5389%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (233 samples, 0.21%)</title><rect x="93.2889%" y="517" width="0.2091%" height="15" fill="rgb(246,83,35)" fg:x="103963" fg:w="233"/><text x="93.5389%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (227 samples, 0.20%)</title><rect x="93.2943%" y="501" width="0.2037%" height="15" fill="rgb(220,136,24)" fg:x="103969" fg:w="227"/><text x="93.5443%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (223 samples, 0.20%)</title><rect x="93.2979%" y="485" width="0.2001%" height="15" fill="rgb(217,3,25)" fg:x="103973" fg:w="223"/><text x="93.5479%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (174 samples, 0.16%)</title><rect x="93.4980%" y="533" width="0.1561%" height="15" fill="rgb(239,24,14)" fg:x="104196" fg:w="174"/><text x="93.7480%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (174 samples, 0.16%)</title><rect x="93.4980%" y="517" width="0.1561%" height="15" fill="rgb(244,16,53)" fg:x="104196" fg:w="174"/><text x="93.7480%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (87 samples, 0.08%)</title><rect x="93.6541%" y="533" width="0.0781%" height="15" fill="rgb(208,175,44)" fg:x="104370" fg:w="87"/><text x="93.9041%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_store (87 samples, 0.08%)</title><rect x="93.6541%" y="517" width="0.0781%" height="15" fill="rgb(252,18,48)" fg:x="104370" fg:w="87"/><text x="93.9041%" y="527.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="93.7322%" y="517" width="0.0135%" height="15" fill="rgb(234,199,32)" fg:x="104457" fg:w="15"/><text x="93.9822%" y="527.50"></text></g><g><title>std::sync::poison::Flag::borrow (15 samples, 0.01%)</title><rect x="93.7322%" y="501" width="0.0135%" height="15" fill="rgb(225,77,54)" fg:x="104457" fg:w="15"/><text x="93.9822%" y="511.50"></text></g><g><title>async_executor::Ticker::sleep (1,217 samples, 1.09%)</title><rect x="93.0322%" y="549" width="1.0920%" height="15" fill="rgb(225,42,25)" fg:x="103677" fg:w="1217"/><text x="93.2822%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (437 samples, 0.39%)</title><rect x="93.7322%" y="533" width="0.3921%" height="15" fill="rgb(242,227,46)" fg:x="104457" fg:w="437"/><text x="93.9822%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (422 samples, 0.38%)</title><rect x="93.7456%" y="517" width="0.3787%" height="15" fill="rgb(246,197,35)" fg:x="104472" fg:w="422"/><text x="93.9956%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (398 samples, 0.36%)</title><rect x="93.7672%" y="501" width="0.3571%" height="15" fill="rgb(215,159,26)" fg:x="104496" fg:w="398"/><text x="94.0172%" y="511.50"></text></g><g><title>___pthread_mutex_lock (398 samples, 0.36%)</title><rect x="93.7672%" y="485" width="0.3571%" height="15" fill="rgb(212,194,50)" fg:x="104496" fg:w="398"/><text x="94.0172%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (49 samples, 0.04%)</title><rect x="94.0803%" y="469" width="0.0440%" height="15" fill="rgb(246,132,1)" fg:x="104845" fg:w="49"/><text x="94.3303%" y="479.50"></text></g><g><title>async_executor::Sleepers::remove (54 samples, 0.05%)</title><rect x="94.1360%" y="533" width="0.0485%" height="15" fill="rgb(217,71,7)" fg:x="104907" fg:w="54"/><text x="94.3860%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (29 samples, 0.03%)</title><rect x="94.1584%" y="517" width="0.0260%" height="15" fill="rgb(252,59,32)" fg:x="104932" fg:w="29"/><text x="94.4084%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (29 samples, 0.03%)</title><rect x="94.1584%" y="501" width="0.0260%" height="15" fill="rgb(253,204,25)" fg:x="104932" fg:w="29"/><text x="94.4084%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="94.1584%" y="485" width="0.0260%" height="15" fill="rgb(232,21,16)" fg:x="104932" fg:w="29"/><text x="94.4084%" y="495.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (29 samples, 0.03%)</title><rect x="94.1584%" y="469" width="0.0260%" height="15" fill="rgb(248,90,29)" fg:x="104932" fg:w="29"/><text x="94.4084%" y="479.50"></text></g><g><title>core::mem::drop (29 samples, 0.03%)</title><rect x="94.1584%" y="453" width="0.0260%" height="15" fill="rgb(249,223,7)" fg:x="104932" fg:w="29"/><text x="94.4084%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (29 samples, 0.03%)</title><rect x="94.1584%" y="437" width="0.0260%" height="15" fill="rgb(231,119,42)" fg:x="104932" fg:w="29"/><text x="94.4084%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="94.1584%" y="421" width="0.0260%" height="15" fill="rgb(215,41,35)" fg:x="104932" fg:w="29"/><text x="94.4084%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (29 samples, 0.03%)</title><rect x="94.1584%" y="405" width="0.0260%" height="15" fill="rgb(220,44,45)" fg:x="104932" fg:w="29"/><text x="94.4084%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (29 samples, 0.03%)</title><rect x="94.1584%" y="389" width="0.0260%" height="15" fill="rgb(253,197,36)" fg:x="104932" fg:w="29"/><text x="94.4084%" y="399.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (55 samples, 0.05%)</title><rect x="94.1862%" y="469" width="0.0494%" height="15" fill="rgb(245,225,54)" fg:x="104963" fg:w="55"/><text x="94.4362%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (58 samples, 0.05%)</title><rect x="94.1844%" y="533" width="0.0520%" height="15" fill="rgb(239,94,37)" fg:x="104961" fg:w="58"/><text x="94.4344%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.05%)</title><rect x="94.1844%" y="517" width="0.0520%" height="15" fill="rgb(242,217,10)" fg:x="104961" fg:w="58"/><text x="94.4344%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (56 samples, 0.05%)</title><rect x="94.1862%" y="501" width="0.0503%" height="15" fill="rgb(250,193,7)" fg:x="104963" fg:w="56"/><text x="94.4362%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (56 samples, 0.05%)</title><rect x="94.1862%" y="485" width="0.0503%" height="15" fill="rgb(230,104,19)" fg:x="104963" fg:w="56"/><text x="94.4362%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (78 samples, 0.07%)</title><rect x="94.2365%" y="533" width="0.0700%" height="15" fill="rgb(230,181,4)" fg:x="105019" fg:w="78"/><text x="94.4865%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (78 samples, 0.07%)</title><rect x="94.2365%" y="517" width="0.0700%" height="15" fill="rgb(216,219,49)" fg:x="105019" fg:w="78"/><text x="94.4865%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (70 samples, 0.06%)</title><rect x="94.3065%" y="533" width="0.0628%" height="15" fill="rgb(254,144,0)" fg:x="105097" fg:w="70"/><text x="94.5565%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (70 samples, 0.06%)</title><rect x="94.3065%" y="517" width="0.0628%" height="15" fill="rgb(205,209,38)" fg:x="105097" fg:w="70"/><text x="94.5565%" y="527.50"></text></g><g><title>async_executor::Ticker::wake (472 samples, 0.42%)</title><rect x="94.1243%" y="549" width="0.4235%" height="15" fill="rgb(240,21,42)" fg:x="104894" fg:w="472"/><text x="94.3743%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (199 samples, 0.18%)</title><rect x="94.3693%" y="533" width="0.1786%" height="15" fill="rgb(241,132,3)" fg:x="105167" fg:w="199"/><text x="94.6193%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (190 samples, 0.17%)</title><rect x="94.3773%" y="517" width="0.1705%" height="15" fill="rgb(225,14,2)" fg:x="105176" fg:w="190"/><text x="94.6273%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (168 samples, 0.15%)</title><rect x="94.3971%" y="501" width="0.1508%" height="15" fill="rgb(210,141,35)" fg:x="105198" fg:w="168"/><text x="94.6471%" y="511.50"></text></g><g><title>___pthread_mutex_lock (168 samples, 0.15%)</title><rect x="94.3971%" y="485" width="0.1508%" height="15" fill="rgb(251,14,44)" fg:x="105198" fg:w="168"/><text x="94.6471%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (18 samples, 0.02%)</title><rect x="94.5317%" y="469" width="0.0162%" height="15" fill="rgb(247,48,18)" fg:x="105348" fg:w="18"/><text x="94.7817%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::notify (15 samples, 0.01%)</title><rect x="94.5550%" y="517" width="0.0135%" height="15" fill="rgb(225,0,40)" fg:x="105374" fg:w="15"/><text x="94.8050%" y="527.50"></text></g><g><title>polling::Poller::notify (15 samples, 0.01%)</title><rect x="94.5550%" y="501" width="0.0135%" height="15" fill="rgb(221,31,33)" fg:x="105374" fg:w="15"/><text x="94.8050%" y="511.50"></text></g><g><title>polling::epoll::Poller::notify (12 samples, 0.01%)</title><rect x="94.5577%" y="485" width="0.0108%" height="15" fill="rgb(237,42,40)" fg:x="105377" fg:w="12"/><text x="94.8077%" y="495.50"></text></g><g><title>core::mem::drop (18 samples, 0.02%)</title><rect x="94.5927%" y="485" width="0.0162%" height="15" fill="rgb(233,51,29)" fg:x="105416" fg:w="18"/><text x="94.8427%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (18 samples, 0.02%)</title><rect x="94.5927%" y="469" width="0.0162%" height="15" fill="rgb(226,58,20)" fg:x="105416" fg:w="18"/><text x="94.8427%" y="479.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="94.5927%" y="453" width="0.0162%" height="15" fill="rgb(208,98,7)" fg:x="105416" fg:w="18"/><text x="94.8427%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (18 samples, 0.02%)</title><rect x="94.5927%" y="437" width="0.0162%" height="15" fill="rgb(228,143,44)" fg:x="105416" fg:w="18"/><text x="94.8427%" y="447.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (16 samples, 0.01%)</title><rect x="94.5945%" y="421" width="0.0144%" height="15" fill="rgb(246,55,38)" fg:x="105418" fg:w="16"/><text x="94.8445%" y="431.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (16 samples, 0.01%)</title><rect x="94.5945%" y="405" width="0.0144%" height="15" fill="rgb(247,87,16)" fg:x="105418" fg:w="16"/><text x="94.8445%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (67 samples, 0.06%)</title><rect x="94.6089%" y="485" width="0.0601%" height="15" fill="rgb(234,129,42)" fg:x="105434" fg:w="67"/><text x="94.8589%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (67 samples, 0.06%)</title><rect x="94.6089%" y="469" width="0.0601%" height="15" fill="rgb(220,82,16)" fg:x="105434" fg:w="67"/><text x="94.8589%" y="479.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (115 samples, 0.10%)</title><rect x="94.6690%" y="485" width="0.1032%" height="15" fill="rgb(211,88,4)" fg:x="105501" fg:w="115"/><text x="94.9190%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (115 samples, 0.10%)</title><rect x="94.6690%" y="469" width="0.1032%" height="15" fill="rgb(248,151,21)" fg:x="105501" fg:w="115"/><text x="94.9190%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (115 samples, 0.10%)</title><rect x="94.6690%" y="453" width="0.1032%" height="15" fill="rgb(238,163,6)" fg:x="105501" fg:w="115"/><text x="94.9190%" y="463.50"></text></g><g><title>__GI___pthread_cond_signal (115 samples, 0.10%)</title><rect x="94.6690%" y="437" width="0.1032%" height="15" fill="rgb(209,183,11)" fg:x="105501" fg:w="115"/><text x="94.9190%" y="447.50"></text></g><g><title>parking::Inner::unpark (300 samples, 0.27%)</title><rect x="94.5900%" y="501" width="0.2692%" height="15" fill="rgb(219,37,20)" fg:x="105413" fg:w="300"/><text x="94.8400%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (97 samples, 0.09%)</title><rect x="94.7722%" y="485" width="0.0870%" height="15" fill="rgb(210,158,4)" fg:x="105616" fg:w="97"/><text x="95.0222%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (96 samples, 0.09%)</title><rect x="94.7731%" y="469" width="0.0861%" height="15" fill="rgb(221,167,53)" fg:x="105617" fg:w="96"/><text x="95.0231%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (96 samples, 0.09%)</title><rect x="94.7731%" y="453" width="0.0861%" height="15" fill="rgb(237,151,45)" fg:x="105617" fg:w="96"/><text x="95.0231%" y="463.50"></text></g><g><title>___pthread_mutex_lock (96 samples, 0.09%)</title><rect x="94.7731%" y="437" width="0.0861%" height="15" fill="rgb(231,39,3)" fg:x="105617" fg:w="96"/><text x="95.0231%" y="447.50"></text></g><g><title>parking::Unparker::unpark (318 samples, 0.29%)</title><rect x="94.5748%" y="517" width="0.2854%" height="15" fill="rgb(212,167,28)" fg:x="105396" fg:w="318"/><text x="94.8248%" y="527.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (14 samples, 0.01%)</title><rect x="94.8601%" y="485" width="0.0126%" height="15" fill="rgb(232,178,8)" fg:x="105714" fg:w="14"/><text x="95.1101%" y="495.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (14 samples, 0.01%)</title><rect x="94.8601%" y="469" width="0.0126%" height="15" fill="rgb(225,151,20)" fg:x="105714" fg:w="14"/><text x="95.1101%" y="479.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="94.8610%" y="453" width="0.0117%" height="15" fill="rgb(238,3,37)" fg:x="105715" fg:w="13"/><text x="95.1110%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (13 samples, 0.01%)</title><rect x="94.8610%" y="437" width="0.0117%" height="15" fill="rgb(251,147,42)" fg:x="105715" fg:w="13"/><text x="95.1110%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (360 samples, 0.32%)</title><rect x="94.5514%" y="533" width="0.3230%" height="15" fill="rgb(208,173,10)" fg:x="105370" fg:w="360"/><text x="94.8014%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.01%)</title><rect x="94.8601%" y="517" width="0.0144%" height="15" fill="rgb(246,225,4)" fg:x="105714" fg:w="16"/><text x="95.1101%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.01%)</title><rect x="94.8601%" y="501" width="0.0144%" height="15" fill="rgb(248,102,6)" fg:x="105714" fg:w="16"/><text x="95.1101%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,866 samples, 6.16%)</title><rect x="88.7717%" y="613" width="6.1611%" height="15" fill="rgb(232,6,21)" fg:x="98929" fg:w="6866"/><text x="89.0217%" y="623.50">&lt;core::f..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (6,863 samples, 6.16%)</title><rect x="88.7744%" y="597" width="6.1584%" height="15" fill="rgb(221,179,22)" fg:x="98932" fg:w="6863"/><text x="89.0244%" y="607.50">async_ex..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (6,854 samples, 6.15%)</title><rect x="88.7825%" y="581" width="6.1503%" height="15" fill="rgb(252,50,20)" fg:x="98941" fg:w="6854"/><text x="89.0325%" y="591.50">&lt;futures..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (6,845 samples, 6.14%)</title><rect x="88.7906%" y="565" width="6.1422%" height="15" fill="rgb(222,56,38)" fg:x="98950" fg:w="6845"/><text x="89.0406%" y="575.50">async_ex..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (425 samples, 0.38%)</title><rect x="94.5514%" y="549" width="0.3814%" height="15" fill="rgb(206,193,29)" fg:x="105370" fg:w="425"/><text x="94.8014%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (65 samples, 0.06%)</title><rect x="94.8745%" y="533" width="0.0583%" height="15" fill="rgb(239,192,45)" fg:x="105730" fg:w="65"/><text x="95.1245%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.06%)</title><rect x="94.8745%" y="517" width="0.0583%" height="15" fill="rgb(254,18,36)" fg:x="105730" fg:w="65"/><text x="95.1245%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (62 samples, 0.06%)</title><rect x="94.8772%" y="501" width="0.0556%" height="15" fill="rgb(221,127,11)" fg:x="105733" fg:w="62"/><text x="95.1272%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (62 samples, 0.06%)</title><rect x="94.8772%" y="485" width="0.0556%" height="15" fill="rgb(234,146,35)" fg:x="105733" fg:w="62"/><text x="95.1272%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,945 samples, 6.23%)</title><rect x="88.7538%" y="645" width="6.2319%" height="15" fill="rgb(254,201,37)" fg:x="98909" fg:w="6945"/><text x="89.0038%" y="655.50">&lt;core::f..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (6,942 samples, 6.23%)</title><rect x="88.7565%" y="629" width="6.2292%" height="15" fill="rgb(211,202,23)" fg:x="98912" fg:w="6942"/><text x="89.0065%" y="639.50">async_ex..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (58 samples, 0.05%)</title><rect x="94.9337%" y="613" width="0.0520%" height="15" fill="rgb(237,91,2)" fg:x="105796" fg:w="58"/><text x="95.1837%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (58 samples, 0.05%)</title><rect x="94.9337%" y="597" width="0.0520%" height="15" fill="rgb(226,228,36)" fg:x="105796" fg:w="58"/><text x="95.1837%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (73 samples, 0.07%)</title><rect x="95.0880%" y="517" width="0.0655%" height="15" fill="rgb(213,63,50)" fg:x="105968" fg:w="73"/><text x="95.3380%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (70 samples, 0.06%)</title><rect x="95.0907%" y="501" width="0.0628%" height="15" fill="rgb(235,194,19)" fg:x="105971" fg:w="70"/><text x="95.3407%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (52 samples, 0.05%)</title><rect x="95.1562%" y="501" width="0.0467%" height="15" fill="rgb(207,204,18)" fg:x="106044" fg:w="52"/><text x="95.4062%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (216 samples, 0.19%)</title><rect x="95.0288%" y="597" width="0.1938%" height="15" fill="rgb(248,8,7)" fg:x="105902" fg:w="216"/><text x="95.2788%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (209 samples, 0.19%)</title><rect x="95.0351%" y="581" width="0.1875%" height="15" fill="rgb(223,145,47)" fg:x="105909" fg:w="209"/><text x="95.2851%" y="591.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (154 samples, 0.14%)</title><rect x="95.0844%" y="565" width="0.1382%" height="15" fill="rgb(228,84,11)" fg:x="105964" fg:w="154"/><text x="95.3344%" y="575.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (154 samples, 0.14%)</title><rect x="95.0844%" y="549" width="0.1382%" height="15" fill="rgb(218,76,45)" fg:x="105964" fg:w="154"/><text x="95.3344%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (152 samples, 0.14%)</title><rect x="95.0862%" y="533" width="0.1364%" height="15" fill="rgb(223,80,15)" fg:x="105966" fg:w="152"/><text x="95.3362%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (77 samples, 0.07%)</title><rect x="95.1535%" y="517" width="0.0691%" height="15" fill="rgb(219,218,33)" fg:x="106041" fg:w="77"/><text x="95.4035%" y="527.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (12 samples, 0.01%)</title><rect x="95.2119%" y="501" width="0.0108%" height="15" fill="rgb(208,51,11)" fg:x="106106" fg:w="12"/><text x="95.4619%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (218 samples, 0.20%)</title><rect x="95.0288%" y="613" width="0.1956%" height="15" fill="rgb(229,165,39)" fg:x="105902" fg:w="218"/><text x="95.2788%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (36 samples, 0.03%)</title><rect x="95.2244%" y="613" width="0.0323%" height="15" fill="rgb(241,100,24)" fg:x="106120" fg:w="36"/><text x="95.4744%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (35 samples, 0.03%)</title><rect x="95.2253%" y="597" width="0.0314%" height="15" fill="rgb(228,14,23)" fg:x="106121" fg:w="35"/><text x="95.4753%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (35 samples, 0.03%)</title><rect x="95.2253%" y="581" width="0.0314%" height="15" fill="rgb(247,116,52)" fg:x="106121" fg:w="35"/><text x="95.4753%" y="591.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (24 samples, 0.02%)</title><rect x="95.2567%" y="597" width="0.0215%" height="15" fill="rgb(216,149,33)" fg:x="106156" fg:w="24"/><text x="95.5067%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (17 samples, 0.02%)</title><rect x="95.2630%" y="581" width="0.0153%" height="15" fill="rgb(238,142,29)" fg:x="106163" fg:w="17"/><text x="95.5130%" y="591.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (13 samples, 0.01%)</title><rect x="95.2666%" y="565" width="0.0117%" height="15" fill="rgb(224,83,40)" fg:x="106167" fg:w="13"/><text x="95.5166%" y="575.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (19 samples, 0.02%)</title><rect x="95.2801%" y="581" width="0.0170%" height="15" fill="rgb(234,165,11)" fg:x="106182" fg:w="19"/><text x="95.5301%" y="591.50"></text></g><g><title>parking::Unparker::unpark (14 samples, 0.01%)</title><rect x="95.2845%" y="565" width="0.0126%" height="15" fill="rgb(215,96,23)" fg:x="106187" fg:w="14"/><text x="95.5345%" y="575.50"></text></g><g><title>parking::Inner::unpark (13 samples, 0.01%)</title><rect x="95.2854%" y="549" width="0.0117%" height="15" fill="rgb(233,179,26)" fg:x="106188" fg:w="13"/><text x="95.5354%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (48 samples, 0.04%)</title><rect x="95.2567%" y="613" width="0.0431%" height="15" fill="rgb(225,129,33)" fg:x="106156" fg:w="48"/><text x="95.5067%" y="623.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (22 samples, 0.02%)</title><rect x="95.2801%" y="597" width="0.0197%" height="15" fill="rgb(237,49,13)" fg:x="106182" fg:w="22"/><text x="95.5301%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (193 samples, 0.17%)</title><rect x="95.2998%" y="613" width="0.1732%" height="15" fill="rgb(211,3,31)" fg:x="106204" fg:w="193"/><text x="95.5498%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (193 samples, 0.17%)</title><rect x="95.2998%" y="597" width="0.1732%" height="15" fill="rgb(216,152,19)" fg:x="106204" fg:w="193"/><text x="95.5498%" y="607.50"></text></g><g><title>async_task::runnable::Runnable::run (545 samples, 0.49%)</title><rect x="94.9857%" y="645" width="0.4890%" height="15" fill="rgb(251,121,35)" fg:x="105854" fg:w="545"/><text x="95.2357%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (533 samples, 0.48%)</title><rect x="94.9965%" y="629" width="0.4783%" height="15" fill="rgb(210,217,47)" fg:x="105866" fg:w="533"/><text x="95.2465%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (7,511 samples, 6.74%)</title><rect x="88.7394%" y="709" width="6.7398%" height="15" fill="rgb(244,116,22)" fg:x="98893" fg:w="7511"/><text x="88.9894%" y="719.50">async_exe..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (7,506 samples, 6.74%)</title><rect x="88.7439%" y="693" width="6.7353%" height="15" fill="rgb(228,17,21)" fg:x="98898" fg:w="7506"/><text x="88.9939%" y="703.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,506 samples, 6.74%)</title><rect x="88.7439%" y="677" width="6.7353%" height="15" fill="rgb(240,149,34)" fg:x="98898" fg:w="7506"/><text x="88.9939%" y="687.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (7,505 samples, 6.73%)</title><rect x="88.7448%" y="661" width="6.7344%" height="15" fill="rgb(208,125,47)" fg:x="98899" fg:w="7505"/><text x="88.9948%" y="671.50">async_exe..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.02%)</title><rect x="95.5699%" y="453" width="0.0197%" height="15" fill="rgb(249,186,39)" fg:x="106505" fg:w="22"/><text x="95.8199%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.02%)</title><rect x="95.5699%" y="437" width="0.0197%" height="15" fill="rgb(240,220,33)" fg:x="106505" fg:w="22"/><text x="95.8199%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.02%)</title><rect x="95.5699%" y="421" width="0.0197%" height="15" fill="rgb(243,110,23)" fg:x="106505" fg:w="22"/><text x="95.8199%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.02%)</title><rect x="95.5744%" y="405" width="0.0153%" height="15" fill="rgb(219,163,46)" fg:x="106510" fg:w="17"/><text x="95.8244%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (17 samples, 0.02%)</title><rect x="95.5744%" y="389" width="0.0153%" height="15" fill="rgb(216,126,30)" fg:x="106510" fg:w="17"/><text x="95.8244%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (12 samples, 0.01%)</title><rect x="95.5789%" y="373" width="0.0108%" height="15" fill="rgb(208,139,11)" fg:x="106515" fg:w="12"/><text x="95.8289%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.01%)</title><rect x="95.5789%" y="357" width="0.0108%" height="15" fill="rgb(213,118,36)" fg:x="106515" fg:w="12"/><text x="95.8289%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="95.5699%" y="501" width="0.0251%" height="15" fill="rgb(226,43,17)" fg:x="106505" fg:w="28"/><text x="95.8199%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (28 samples, 0.03%)</title><rect x="95.5699%" y="485" width="0.0251%" height="15" fill="rgb(254,217,4)" fg:x="106505" fg:w="28"/><text x="95.8199%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (28 samples, 0.03%)</title><rect x="95.5699%" y="469" width="0.0251%" height="15" fill="rgb(210,134,47)" fg:x="106505" fg:w="28"/><text x="95.8199%" y="479.50"></text></g><g><title>concurrent_queue::full_fence (40 samples, 0.04%)</title><rect x="95.6560%" y="469" width="0.0359%" height="15" fill="rgb(237,24,49)" fg:x="106601" fg:w="40"/><text x="95.9060%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (40 samples, 0.04%)</title><rect x="95.6560%" y="453" width="0.0359%" height="15" fill="rgb(251,39,46)" fg:x="106601" fg:w="40"/><text x="95.9060%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (40 samples, 0.04%)</title><rect x="95.6560%" y="437" width="0.0359%" height="15" fill="rgb(251,220,3)" fg:x="106601" fg:w="40"/><text x="95.9060%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (40 samples, 0.04%)</title><rect x="95.6560%" y="421" width="0.0359%" height="15" fill="rgb(228,105,12)" fg:x="106601" fg:w="40"/><text x="95.9060%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (203 samples, 0.18%)</title><rect x="95.6255%" y="485" width="0.1822%" height="15" fill="rgb(215,196,1)" fg:x="106567" fg:w="203"/><text x="95.8755%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (129 samples, 0.12%)</title><rect x="95.6919%" y="469" width="0.1158%" height="15" fill="rgb(214,33,39)" fg:x="106641" fg:w="129"/><text x="95.9419%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (129 samples, 0.12%)</title><rect x="95.6919%" y="453" width="0.1158%" height="15" fill="rgb(220,19,52)" fg:x="106641" fg:w="129"/><text x="95.9419%" y="463.50"></text></g><g><title>concurrent_queue::full_fence (53 samples, 0.05%)</title><rect x="95.8193%" y="469" width="0.0476%" height="15" fill="rgb(221,78,38)" fg:x="106783" fg:w="53"/><text x="96.0693%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (52 samples, 0.05%)</title><rect x="95.8202%" y="453" width="0.0467%" height="15" fill="rgb(253,30,16)" fg:x="106784" fg:w="52"/><text x="96.0702%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (52 samples, 0.05%)</title><rect x="95.8202%" y="437" width="0.0467%" height="15" fill="rgb(242,65,0)" fg:x="106784" fg:w="52"/><text x="96.0702%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (52 samples, 0.05%)</title><rect x="95.8202%" y="421" width="0.0467%" height="15" fill="rgb(235,201,12)" fg:x="106784" fg:w="52"/><text x="96.0702%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (317 samples, 0.28%)</title><rect x="95.5950%" y="501" width="0.2845%" height="15" fill="rgb(233,161,9)" fg:x="106533" fg:w="317"/><text x="95.8450%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (80 samples, 0.07%)</title><rect x="95.8077%" y="485" width="0.0718%" height="15" fill="rgb(241,207,41)" fg:x="106770" fg:w="80"/><text x="96.0577%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="95.8687%" y="469" width="0.0108%" height="15" fill="rgb(212,69,46)" fg:x="106838" fg:w="12"/><text x="96.1187%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="95.8687%" y="453" width="0.0108%" height="15" fill="rgb(239,69,45)" fg:x="106838" fg:w="12"/><text x="96.1187%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (27 samples, 0.02%)</title><rect x="95.8813%" y="437" width="0.0242%" height="15" fill="rgb(242,117,48)" fg:x="106852" fg:w="27"/><text x="96.1313%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (27 samples, 0.02%)</title><rect x="95.8813%" y="421" width="0.0242%" height="15" fill="rgb(228,41,36)" fg:x="106852" fg:w="27"/><text x="96.1313%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (86 samples, 0.08%)</title><rect x="95.8795%" y="501" width="0.0772%" height="15" fill="rgb(212,3,32)" fg:x="106850" fg:w="86"/><text x="96.1295%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.08%)</title><rect x="95.8795%" y="485" width="0.0772%" height="15" fill="rgb(233,41,49)" fg:x="106850" fg:w="86"/><text x="96.1295%" y="495.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (86 samples, 0.08%)</title><rect x="95.8795%" y="469" width="0.0772%" height="15" fill="rgb(252,170,49)" fg:x="106850" fg:w="86"/><text x="96.1295%" y="479.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (85 samples, 0.08%)</title><rect x="95.8804%" y="453" width="0.0763%" height="15" fill="rgb(229,53,26)" fg:x="106851" fg:w="85"/><text x="96.1304%" y="463.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (57 samples, 0.05%)</title><rect x="95.9055%" y="437" width="0.0511%" height="15" fill="rgb(217,157,12)" fg:x="106879" fg:w="57"/><text x="96.1555%" y="447.50"></text></g><g><title>___pthread_rwlock_unlock (57 samples, 0.05%)</title><rect x="95.9055%" y="421" width="0.0511%" height="15" fill="rgb(227,17,9)" fg:x="106879" fg:w="57"/><text x="96.1555%" y="431.50"></text></g><g><title>fastrand::usize (19 samples, 0.02%)</title><rect x="95.9566%" y="501" width="0.0170%" height="15" fill="rgb(218,84,12)" fg:x="106936" fg:w="19"/><text x="96.2066%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18 samples, 0.02%)</title><rect x="95.9575%" y="485" width="0.0162%" height="15" fill="rgb(212,79,24)" fg:x="106937" fg:w="18"/><text x="96.2075%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.02%)</title><rect x="95.9575%" y="469" width="0.0162%" height="15" fill="rgb(217,222,37)" fg:x="106937" fg:w="18"/><text x="96.2075%" y="479.50"></text></g><g><title>___pthread_rwlock_rdlock (47 samples, 0.04%)</title><rect x="95.9809%" y="453" width="0.0422%" height="15" fill="rgb(246,208,8)" fg:x="106963" fg:w="47"/><text x="96.2309%" y="463.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (557 samples, 0.50%)</title><rect x="95.5618%" y="517" width="0.4998%" height="15" fill="rgb(244,133,10)" fg:x="106496" fg:w="557"/><text x="95.8118%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (98 samples, 0.09%)</title><rect x="95.9737%" y="501" width="0.0879%" height="15" fill="rgb(209,219,41)" fg:x="106955" fg:w="98"/><text x="96.2237%" y="511.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (96 samples, 0.09%)</title><rect x="95.9755%" y="485" width="0.0861%" height="15" fill="rgb(253,175,45)" fg:x="106957" fg:w="96"/><text x="96.2255%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (96 samples, 0.09%)</title><rect x="95.9755%" y="469" width="0.0861%" height="15" fill="rgb(235,100,37)" fg:x="106957" fg:w="96"/><text x="96.2255%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (43 samples, 0.04%)</title><rect x="96.0230%" y="453" width="0.0386%" height="15" fill="rgb(225,87,19)" fg:x="107010" fg:w="43"/><text x="96.2730%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (43 samples, 0.04%)</title><rect x="96.0230%" y="437" width="0.0386%" height="15" fill="rgb(217,152,17)" fg:x="107010" fg:w="43"/><text x="96.2730%" y="447.50"></text></g><g><title>async_executor::Sleepers::update (12 samples, 0.01%)</title><rect x="96.0661%" y="501" width="0.0108%" height="15" fill="rgb(235,72,13)" fg:x="107058" fg:w="12"/><text x="96.3161%" y="511.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (49 samples, 0.04%)</title><rect x="96.0850%" y="437" width="0.0440%" height="15" fill="rgb(233,140,18)" fg:x="107079" fg:w="49"/><text x="96.3350%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (61 samples, 0.05%)</title><rect x="96.0769%" y="501" width="0.0547%" height="15" fill="rgb(207,212,28)" fg:x="107070" fg:w="61"/><text x="96.3269%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.05%)</title><rect x="96.0769%" y="485" width="0.0547%" height="15" fill="rgb(220,130,25)" fg:x="107070" fg:w="61"/><text x="96.3269%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (57 samples, 0.05%)</title><rect x="96.0805%" y="469" width="0.0511%" height="15" fill="rgb(205,55,34)" fg:x="107074" fg:w="57"/><text x="96.3305%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (52 samples, 0.05%)</title><rect x="96.0850%" y="453" width="0.0467%" height="15" fill="rgb(237,54,35)" fg:x="107079" fg:w="52"/><text x="96.3350%" y="463.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (731 samples, 0.66%)</title><rect x="95.5322%" y="629" width="0.6559%" height="15" fill="rgb(208,67,23)" fg:x="106463" fg:w="731"/><text x="95.7822%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (724 samples, 0.65%)</title><rect x="95.5385%" y="613" width="0.6497%" height="15" fill="rgb(206,207,50)" fg:x="106470" fg:w="724"/><text x="95.7885%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (723 samples, 0.65%)</title><rect x="95.5394%" y="597" width="0.6488%" height="15" fill="rgb(213,211,42)" fg:x="106471" fg:w="723"/><text x="95.7894%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (718 samples, 0.64%)</title><rect x="95.5439%" y="581" width="0.6443%" height="15" fill="rgb(252,197,50)" fg:x="106476" fg:w="718"/><text x="95.7939%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (716 samples, 0.64%)</title><rect x="95.5457%" y="565" width="0.6425%" height="15" fill="rgb(251,211,41)" fg:x="106478" fg:w="716"/><text x="95.7957%" y="575.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (712 samples, 0.64%)</title><rect x="95.5493%" y="549" width="0.6389%" height="15" fill="rgb(229,211,5)" fg:x="106482" fg:w="712"/><text x="95.7993%" y="559.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (704 samples, 0.63%)</title><rect x="95.5564%" y="533" width="0.6317%" height="15" fill="rgb(239,36,31)" fg:x="106490" fg:w="704"/><text x="95.8064%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (141 samples, 0.13%)</title><rect x="96.0616%" y="517" width="0.1265%" height="15" fill="rgb(248,67,31)" fg:x="107053" fg:w="141"/><text x="96.3116%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (63 samples, 0.06%)</title><rect x="96.1316%" y="501" width="0.0565%" height="15" fill="rgb(249,55,44)" fg:x="107131" fg:w="63"/><text x="96.3816%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (60 samples, 0.05%)</title><rect x="96.1343%" y="485" width="0.0538%" height="15" fill="rgb(216,82,12)" fg:x="107134" fg:w="60"/><text x="96.3843%" y="495.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (59 samples, 0.05%)</title><rect x="96.1352%" y="469" width="0.0529%" height="15" fill="rgb(242,174,1)" fg:x="107135" fg:w="59"/><text x="96.3852%" y="479.50"></text></g><g><title>___pthread_mutex_lock (59 samples, 0.05%)</title><rect x="96.1352%" y="453" width="0.0529%" height="15" fill="rgb(208,120,29)" fg:x="107135" fg:w="59"/><text x="96.3852%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (31 samples, 0.03%)</title><rect x="96.2555%" y="565" width="0.0278%" height="15" fill="rgb(221,105,43)" fg:x="107269" fg:w="31"/><text x="96.5055%" y="575.50"></text></g><g><title>core::mem::replace (31 samples, 0.03%)</title><rect x="96.2555%" y="549" width="0.0278%" height="15" fill="rgb(234,124,22)" fg:x="107269" fg:w="31"/><text x="96.5055%" y="559.50"></text></g><g><title>core::ptr::read (31 samples, 0.03%)</title><rect x="96.2555%" y="533" width="0.0278%" height="15" fill="rgb(212,23,30)" fg:x="107269" fg:w="31"/><text x="96.5055%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (48 samples, 0.04%)</title><rect x="96.2483%" y="581" width="0.0431%" height="15" fill="rgb(219,122,53)" fg:x="107261" fg:w="48"/><text x="96.4983%" y="591.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (49 samples, 0.04%)</title><rect x="96.2994%" y="501" width="0.0440%" height="15" fill="rgb(248,84,24)" fg:x="107318" fg:w="49"/><text x="96.5494%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (60 samples, 0.05%)</title><rect x="96.2913%" y="581" width="0.0538%" height="15" fill="rgb(245,115,18)" fg:x="107309" fg:w="60"/><text x="96.5413%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (57 samples, 0.05%)</title><rect x="96.2940%" y="565" width="0.0511%" height="15" fill="rgb(227,176,51)" fg:x="107312" fg:w="57"/><text x="96.5440%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.05%)</title><rect x="96.2940%" y="549" width="0.0511%" height="15" fill="rgb(229,63,42)" fg:x="107312" fg:w="57"/><text x="96.5440%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (52 samples, 0.05%)</title><rect x="96.2985%" y="533" width="0.0467%" height="15" fill="rgb(247,202,24)" fg:x="107317" fg:w="52"/><text x="96.5485%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (51 samples, 0.05%)</title><rect x="96.2994%" y="517" width="0.0458%" height="15" fill="rgb(244,173,20)" fg:x="107318" fg:w="51"/><text x="96.5494%" y="527.50"></text></g><g><title>core::task::wake::Waker::will_wake (12 samples, 0.01%)</title><rect x="96.3461%" y="581" width="0.0108%" height="15" fill="rgb(242,81,47)" fg:x="107370" fg:w="12"/><text x="96.5961%" y="591.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (12 samples, 0.01%)</title><rect x="96.3461%" y="565" width="0.0108%" height="15" fill="rgb(231,185,54)" fg:x="107370" fg:w="12"/><text x="96.5961%" y="575.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (291 samples, 0.26%)</title><rect x="96.2321%" y="597" width="0.2611%" height="15" fill="rgb(243,55,32)" fg:x="107243" fg:w="291"/><text x="96.4821%" y="607.50"></text></g><g><title>event_listener::Inner::lock (152 samples, 0.14%)</title><rect x="96.3568%" y="581" width="0.1364%" height="15" fill="rgb(208,167,19)" fg:x="107382" fg:w="152"/><text x="96.6068%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (150 samples, 0.13%)</title><rect x="96.3586%" y="565" width="0.1346%" height="15" fill="rgb(231,72,35)" fg:x="107384" fg:w="150"/><text x="96.6086%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (150 samples, 0.13%)</title><rect x="96.3586%" y="549" width="0.1346%" height="15" fill="rgb(250,173,51)" fg:x="107384" fg:w="150"/><text x="96.6086%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (141 samples, 0.13%)</title><rect x="96.3667%" y="533" width="0.1265%" height="15" fill="rgb(209,5,22)" fg:x="107393" fg:w="141"/><text x="96.6167%" y="543.50"></text></g><g><title>___pthread_mutex_lock (141 samples, 0.13%)</title><rect x="96.3667%" y="517" width="0.1265%" height="15" fill="rgb(250,174,19)" fg:x="107393" fg:w="141"/><text x="96.6167%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,192 samples, 1.07%)</title><rect x="95.5304%" y="645" width="1.0696%" height="15" fill="rgb(217,3,49)" fg:x="106461" fg:w="1192"/><text x="95.7804%" y="655.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (459 samples, 0.41%)</title><rect x="96.1882%" y="629" width="0.4119%" height="15" fill="rgb(218,225,5)" fg:x="107194" fg:w="459"/><text x="96.4382%" y="639.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (429 samples, 0.38%)</title><rect x="96.2151%" y="613" width="0.3850%" height="15" fill="rgb(236,89,11)" fg:x="107224" fg:w="429"/><text x="96.4651%" y="623.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (119 samples, 0.11%)</title><rect x="96.4932%" y="597" width="0.1068%" height="15" fill="rgb(206,33,28)" fg:x="107534" fg:w="119"/><text x="96.7432%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (119 samples, 0.11%)</title><rect x="96.4932%" y="581" width="0.1068%" height="15" fill="rgb(241,56,42)" fg:x="107534" fg:w="119"/><text x="96.7432%" y="591.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (75 samples, 0.07%)</title><rect x="96.5327%" y="565" width="0.0673%" height="15" fill="rgb(222,44,11)" fg:x="107578" fg:w="75"/><text x="96.7827%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (75 samples, 0.07%)</title><rect x="96.5327%" y="549" width="0.0673%" height="15" fill="rgb(234,111,20)" fg:x="107578" fg:w="75"/><text x="96.7827%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (75 samples, 0.07%)</title><rect x="96.5327%" y="533" width="0.0673%" height="15" fill="rgb(237,77,6)" fg:x="107578" fg:w="75"/><text x="96.7827%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (75 samples, 0.07%)</title><rect x="96.5327%" y="517" width="0.0673%" height="15" fill="rgb(235,111,23)" fg:x="107578" fg:w="75"/><text x="96.7827%" y="527.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,196 samples, 1.07%)</title><rect x="95.5286%" y="661" width="1.0732%" height="15" fill="rgb(251,135,29)" fg:x="106459" fg:w="1196"/><text x="95.7786%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,772 samples, 7.87%)</title><rect x="88.7323%" y="725" width="7.8714%" height="15" fill="rgb(217,57,1)" fg:x="98885" fg:w="8772"/><text x="88.9823%" y="735.50">&lt;core::futu..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,253 samples, 1.12%)</title><rect x="95.4793%" y="709" width="1.1244%" height="15" fill="rgb(249,119,31)" fg:x="106404" fg:w="1253"/><text x="95.7293%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,199 samples, 1.08%)</title><rect x="95.5277%" y="693" width="1.0759%" height="15" fill="rgb(233,164,33)" fg:x="106458" fg:w="1199"/><text x="95.7777%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,198 samples, 1.07%)</title><rect x="95.5286%" y="677" width="1.0750%" height="15" fill="rgb(250,217,43)" fg:x="106459" fg:w="1198"/><text x="95.7786%" y="687.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,778 samples, 7.88%)</title><rect x="88.7278%" y="741" width="7.8767%" height="15" fill="rgb(232,154,50)" fg:x="98880" fg:w="8778"/><text x="88.9778%" y="751.50">&lt;futures_li..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (15 samples, 0.01%)</title><rect x="96.6090%" y="661" width="0.0135%" height="15" fill="rgb(227,190,8)" fg:x="107663" fg:w="15"/><text x="96.8590%" y="671.50"></text></g><g><title>once_cell::imp::initialize_inner (15 samples, 0.01%)</title><rect x="96.6090%" y="645" width="0.0135%" height="15" fill="rgb(209,217,32)" fg:x="107663" fg:w="15"/><text x="96.8590%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::get (26 samples, 0.02%)</title><rect x="96.6090%" y="741" width="0.0233%" height="15" fill="rgb(243,203,50)" fg:x="107663" fg:w="26"/><text x="96.8590%" y="751.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (26 samples, 0.02%)</title><rect x="96.6090%" y="725" width="0.0233%" height="15" fill="rgb(232,152,27)" fg:x="107663" fg:w="26"/><text x="96.8590%" y="735.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (26 samples, 0.02%)</title><rect x="96.6090%" y="709" width="0.0233%" height="15" fill="rgb(240,34,29)" fg:x="107663" fg:w="26"/><text x="96.8590%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (26 samples, 0.02%)</title><rect x="96.6090%" y="693" width="0.0233%" height="15" fill="rgb(215,185,52)" fg:x="107663" fg:w="26"/><text x="96.8590%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (26 samples, 0.02%)</title><rect x="96.6090%" y="677" width="0.0233%" height="15" fill="rgb(240,89,49)" fg:x="107663" fg:w="26"/><text x="96.8590%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (202 samples, 0.18%)</title><rect x="96.6323%" y="741" width="0.1813%" height="15" fill="rgb(225,12,52)" fg:x="107689" fg:w="202"/><text x="96.8823%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (200 samples, 0.18%)</title><rect x="96.6341%" y="725" width="0.1795%" height="15" fill="rgb(239,128,45)" fg:x="107691" fg:w="200"/><text x="96.8841%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (195 samples, 0.17%)</title><rect x="96.6386%" y="709" width="0.1750%" height="15" fill="rgb(211,78,47)" fg:x="107696" fg:w="195"/><text x="96.8886%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (190 samples, 0.17%)</title><rect x="96.6431%" y="693" width="0.1705%" height="15" fill="rgb(232,31,21)" fg:x="107701" fg:w="190"/><text x="96.8931%" y="703.50"></text></g><g><title>__GI___pthread_mutex_trylock (190 samples, 0.17%)</title><rect x="96.6431%" y="677" width="0.1705%" height="15" fill="rgb(222,168,14)" fg:x="107701" fg:w="190"/><text x="96.8931%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (32 samples, 0.03%)</title><rect x="96.8603%" y="549" width="0.0287%" height="15" fill="rgb(209,128,24)" fg:x="107943" fg:w="32"/><text x="97.1103%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (30 samples, 0.03%)</title><rect x="96.8620%" y="533" width="0.0269%" height="15" fill="rgb(249,35,13)" fg:x="107945" fg:w="30"/><text x="97.1120%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (30 samples, 0.03%)</title><rect x="96.8620%" y="517" width="0.0269%" height="15" fill="rgb(218,7,2)" fg:x="107945" fg:w="30"/><text x="97.1120%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (30 samples, 0.03%)</title><rect x="96.8620%" y="501" width="0.0269%" height="15" fill="rgb(238,107,27)" fg:x="107945" fg:w="30"/><text x="97.1120%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (30 samples, 0.03%)</title><rect x="96.8620%" y="485" width="0.0269%" height="15" fill="rgb(217,88,38)" fg:x="107945" fg:w="30"/><text x="97.1120%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="96.8764%" y="469" width="0.0126%" height="15" fill="rgb(230,207,0)" fg:x="107961" fg:w="14"/><text x="97.1264%" y="479.50"></text></g><g><title>rust_dealloc (35 samples, 0.03%)</title><rect x="96.8594%" y="565" width="0.0314%" height="15" fill="rgb(249,64,54)" fg:x="107942" fg:w="35"/><text x="97.1094%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (40 samples, 0.04%)</title><rect x="96.8567%" y="661" width="0.0359%" height="15" fill="rgb(231,7,11)" fg:x="107939" fg:w="40"/><text x="97.1067%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (39 samples, 0.03%)</title><rect x="96.8576%" y="645" width="0.0350%" height="15" fill="rgb(205,149,21)" fg:x="107940" fg:w="39"/><text x="97.1076%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (39 samples, 0.03%)</title><rect x="96.8576%" y="629" width="0.0350%" height="15" fill="rgb(215,126,34)" fg:x="107940" fg:w="39"/><text x="97.1076%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (39 samples, 0.03%)</title><rect x="96.8576%" y="613" width="0.0350%" height="15" fill="rgb(241,132,45)" fg:x="107940" fg:w="39"/><text x="97.1076%" y="623.50"></text></g><g><title>__rg_dealloc (39 samples, 0.03%)</title><rect x="96.8576%" y="597" width="0.0350%" height="15" fill="rgb(252,69,32)" fg:x="107940" fg:w="39"/><text x="97.1076%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (38 samples, 0.03%)</title><rect x="96.8585%" y="581" width="0.0341%" height="15" fill="rgb(232,204,19)" fg:x="107941" fg:w="38"/><text x="97.1085%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.04%)</title><rect x="96.8531%" y="709" width="0.0431%" height="15" fill="rgb(249,15,47)" fg:x="107935" fg:w="48"/><text x="97.1031%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (47 samples, 0.04%)</title><rect x="96.8540%" y="693" width="0.0422%" height="15" fill="rgb(209,227,23)" fg:x="107936" fg:w="47"/><text x="97.1040%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (44 samples, 0.04%)</title><rect x="96.8567%" y="677" width="0.0395%" height="15" fill="rgb(248,92,24)" fg:x="107939" fg:w="44"/><text x="97.1067%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="96.8961%" y="709" width="0.0153%" height="15" fill="rgb(247,59,2)" fg:x="107983" fg:w="17"/><text x="97.1461%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="96.8961%" y="693" width="0.0153%" height="15" fill="rgb(221,30,5)" fg:x="107983" fg:w="17"/><text x="97.1461%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (17 samples, 0.02%)</title><rect x="96.8961%" y="677" width="0.0153%" height="15" fill="rgb(208,108,53)" fg:x="107983" fg:w="17"/><text x="97.1461%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (16 samples, 0.01%)</title><rect x="96.9302%" y="677" width="0.0144%" height="15" fill="rgb(211,183,26)" fg:x="108021" fg:w="16"/><text x="97.1802%" y="687.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (14 samples, 0.01%)</title><rect x="96.9320%" y="661" width="0.0126%" height="15" fill="rgb(232,132,4)" fg:x="108023" fg:w="14"/><text x="97.1820%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="96.9320%" y="645" width="0.0126%" height="15" fill="rgb(253,128,37)" fg:x="108023" fg:w="14"/><text x="97.1820%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="96.9338%" y="629" width="0.0108%" height="15" fill="rgb(221,58,24)" fg:x="108025" fg:w="12"/><text x="97.1838%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (14 samples, 0.01%)</title><rect x="96.9491%" y="645" width="0.0126%" height="15" fill="rgb(230,54,45)" fg:x="108042" fg:w="14"/><text x="97.1991%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (25 samples, 0.02%)</title><rect x="96.9464%" y="661" width="0.0224%" height="15" fill="rgb(254,21,18)" fg:x="108039" fg:w="25"/><text x="97.1964%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (26 samples, 0.02%)</title><rect x="96.9464%" y="677" width="0.0233%" height="15" fill="rgb(221,108,0)" fg:x="108039" fg:w="26"/><text x="97.1964%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (25 samples, 0.02%)</title><rect x="96.9814%" y="357" width="0.0224%" height="15" fill="rgb(206,95,1)" fg:x="108078" fg:w="25"/><text x="97.2314%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (25 samples, 0.02%)</title><rect x="96.9814%" y="341" width="0.0224%" height="15" fill="rgb(237,52,5)" fg:x="108078" fg:w="25"/><text x="97.2314%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (24 samples, 0.02%)</title><rect x="96.9823%" y="325" width="0.0215%" height="15" fill="rgb(218,150,34)" fg:x="108079" fg:w="24"/><text x="97.2323%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (31 samples, 0.03%)</title><rect x="96.9814%" y="373" width="0.0278%" height="15" fill="rgb(235,194,28)" fg:x="108078" fg:w="31"/><text x="97.2314%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (41 samples, 0.04%)</title><rect x="96.9787%" y="389" width="0.0368%" height="15" fill="rgb(245,92,18)" fg:x="108075" fg:w="41"/><text x="97.2287%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (27 samples, 0.02%)</title><rect x="97.0298%" y="373" width="0.0242%" height="15" fill="rgb(253,203,53)" fg:x="108132" fg:w="27"/><text x="97.2798%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (272 samples, 0.24%)</title><rect x="96.9787%" y="421" width="0.2441%" height="15" fill="rgb(249,185,47)" fg:x="108075" fg:w="272"/><text x="97.2287%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (272 samples, 0.24%)</title><rect x="96.9787%" y="405" width="0.2441%" height="15" fill="rgb(252,194,52)" fg:x="108075" fg:w="272"/><text x="97.2287%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (231 samples, 0.21%)</title><rect x="97.0155%" y="389" width="0.2073%" height="15" fill="rgb(210,53,36)" fg:x="108116" fg:w="231"/><text x="97.2655%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (188 samples, 0.17%)</title><rect x="97.0541%" y="373" width="0.1687%" height="15" fill="rgb(237,37,25)" fg:x="108159" fg:w="188"/><text x="97.3041%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (188 samples, 0.17%)</title><rect x="97.0541%" y="357" width="0.1687%" height="15" fill="rgb(242,116,27)" fg:x="108159" fg:w="188"/><text x="97.3041%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (188 samples, 0.17%)</title><rect x="97.0541%" y="341" width="0.1687%" height="15" fill="rgb(213,185,26)" fg:x="108159" fg:w="188"/><text x="97.3041%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (18 samples, 0.02%)</title><rect x="97.2308%" y="421" width="0.0162%" height="15" fill="rgb(225,204,8)" fg:x="108356" fg:w="18"/><text x="97.4808%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (18 samples, 0.02%)</title><rect x="97.2308%" y="405" width="0.0162%" height="15" fill="rgb(254,111,37)" fg:x="108356" fg:w="18"/><text x="97.4808%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (390 samples, 0.35%)</title><rect x="96.9706%" y="469" width="0.3500%" height="15" fill="rgb(242,35,9)" fg:x="108066" fg:w="390"/><text x="97.2206%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (390 samples, 0.35%)</title><rect x="96.9706%" y="453" width="0.3500%" height="15" fill="rgb(232,138,49)" fg:x="108066" fg:w="390"/><text x="97.2206%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (388 samples, 0.35%)</title><rect x="96.9724%" y="437" width="0.3482%" height="15" fill="rgb(247,56,4)" fg:x="108068" fg:w="388"/><text x="97.2224%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (82 samples, 0.07%)</title><rect x="97.2470%" y="421" width="0.0736%" height="15" fill="rgb(226,179,17)" fg:x="108374" fg:w="82"/><text x="97.4970%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (82 samples, 0.07%)</title><rect x="97.2470%" y="405" width="0.0736%" height="15" fill="rgb(216,163,45)" fg:x="108374" fg:w="82"/><text x="97.4970%" y="415.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (396 samples, 0.36%)</title><rect x="96.9697%" y="629" width="0.3553%" height="15" fill="rgb(211,157,3)" fg:x="108065" fg:w="396"/><text x="97.2197%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (396 samples, 0.36%)</title><rect x="96.9697%" y="613" width="0.3553%" height="15" fill="rgb(234,44,20)" fg:x="108065" fg:w="396"/><text x="97.2197%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (396 samples, 0.36%)</title><rect x="96.9697%" y="597" width="0.3553%" height="15" fill="rgb(254,138,23)" fg:x="108065" fg:w="396"/><text x="97.2197%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (396 samples, 0.36%)</title><rect x="96.9697%" y="581" width="0.3553%" height="15" fill="rgb(206,119,39)" fg:x="108065" fg:w="396"/><text x="97.2197%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (396 samples, 0.36%)</title><rect x="96.9697%" y="565" width="0.3553%" height="15" fill="rgb(231,105,52)" fg:x="108065" fg:w="396"/><text x="97.2197%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (396 samples, 0.36%)</title><rect x="96.9697%" y="549" width="0.3553%" height="15" fill="rgb(250,20,5)" fg:x="108065" fg:w="396"/><text x="97.2197%" y="559.50"></text></g><g><title>alloc::alloc::alloc (396 samples, 0.36%)</title><rect x="96.9697%" y="533" width="0.3553%" height="15" fill="rgb(215,198,30)" fg:x="108065" fg:w="396"/><text x="97.2197%" y="543.50"></text></g><g><title>__rg_alloc (396 samples, 0.36%)</title><rect x="96.9697%" y="517" width="0.3553%" height="15" fill="rgb(246,142,8)" fg:x="108065" fg:w="396"/><text x="97.2197%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (396 samples, 0.36%)</title><rect x="96.9697%" y="501" width="0.3553%" height="15" fill="rgb(243,26,38)" fg:x="108065" fg:w="396"/><text x="97.2197%" y="511.50"></text></g><g><title>rust_alloc (396 samples, 0.36%)</title><rect x="96.9697%" y="485" width="0.3553%" height="15" fill="rgb(205,133,28)" fg:x="108065" fg:w="396"/><text x="97.2197%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (398 samples, 0.36%)</title><rect x="96.9697%" y="661" width="0.3571%" height="15" fill="rgb(212,34,0)" fg:x="108065" fg:w="398"/><text x="97.2197%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (398 samples, 0.36%)</title><rect x="96.9697%" y="645" width="0.3571%" height="15" fill="rgb(251,226,22)" fg:x="108065" fg:w="398"/><text x="97.2197%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (462 samples, 0.41%)</title><rect x="96.9132%" y="709" width="0.4146%" height="15" fill="rgb(252,119,9)" fg:x="108002" fg:w="462"/><text x="97.1632%" y="719.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (451 samples, 0.40%)</title><rect x="96.9231%" y="693" width="0.4047%" height="15" fill="rgb(213,150,50)" fg:x="108013" fg:w="451"/><text x="97.1731%" y="703.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (399 samples, 0.36%)</title><rect x="96.9697%" y="677" width="0.3580%" height="15" fill="rgb(212,24,39)" fg:x="108065" fg:w="399"/><text x="97.2197%" y="687.50"></text></g><g><title>concurrent_queue::full_fence (36 samples, 0.03%)</title><rect x="97.3466%" y="661" width="0.0323%" height="15" fill="rgb(213,46,39)" fg:x="108485" fg:w="36"/><text x="97.5966%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (36 samples, 0.03%)</title><rect x="97.3466%" y="645" width="0.0323%" height="15" fill="rgb(239,106,12)" fg:x="108485" fg:w="36"/><text x="97.5966%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (36 samples, 0.03%)</title><rect x="97.3466%" y="629" width="0.0323%" height="15" fill="rgb(249,229,21)" fg:x="108485" fg:w="36"/><text x="97.5966%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (36 samples, 0.03%)</title><rect x="97.3466%" y="613" width="0.0323%" height="15" fill="rgb(212,158,3)" fg:x="108485" fg:w="36"/><text x="97.5966%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (60 samples, 0.05%)</title><rect x="97.3349%" y="693" width="0.0538%" height="15" fill="rgb(253,26,48)" fg:x="108472" fg:w="60"/><text x="97.5849%" y="703.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (57 samples, 0.05%)</title><rect x="97.3376%" y="677" width="0.0511%" height="15" fill="rgb(238,178,20)" fg:x="108475" fg:w="57"/><text x="97.5876%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (69 samples, 0.06%)</title><rect x="97.3278%" y="709" width="0.0619%" height="15" fill="rgb(208,86,15)" fg:x="108464" fg:w="69"/><text x="97.5778%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (87 samples, 0.08%)</title><rect x="97.3933%" y="629" width="0.0781%" height="15" fill="rgb(239,42,53)" fg:x="108537" fg:w="87"/><text x="97.6433%" y="639.50"></text></g><g><title>core::mem::drop (93 samples, 0.08%)</title><rect x="97.3897%" y="709" width="0.0835%" height="15" fill="rgb(245,226,8)" fg:x="108533" fg:w="93"/><text x="97.6397%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (93 samples, 0.08%)</title><rect x="97.3897%" y="693" width="0.0835%" height="15" fill="rgb(216,176,32)" fg:x="108533" fg:w="93"/><text x="97.6397%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.08%)</title><rect x="97.3897%" y="677" width="0.0835%" height="15" fill="rgb(231,186,21)" fg:x="108533" fg:w="93"/><text x="97.6397%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (90 samples, 0.08%)</title><rect x="97.3924%" y="661" width="0.0808%" height="15" fill="rgb(205,95,49)" fg:x="108536" fg:w="90"/><text x="97.6424%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (89 samples, 0.08%)</title><rect x="97.3933%" y="645" width="0.0799%" height="15" fill="rgb(217,145,8)" fg:x="108537" fg:w="89"/><text x="97.6433%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.02%)</title><rect x="97.4794%" y="709" width="0.0179%" height="15" fill="rgb(239,144,48)" fg:x="108633" fg:w="20"/><text x="97.7294%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::process_timers::{{closure}} (18 samples, 0.02%)</title><rect x="97.4812%" y="693" width="0.0162%" height="15" fill="rgb(214,189,23)" fg:x="108635" fg:w="18"/><text x="97.7312%" y="703.50"></text></g><g><title>std::time::Instant::saturating_duration_since (18 samples, 0.02%)</title><rect x="97.4812%" y="677" width="0.0162%" height="15" fill="rgb(229,157,17)" fg:x="108635" fg:w="18"/><text x="97.7312%" y="687.50"></text></g><g><title>std::time::Instant::checked_duration_since (18 samples, 0.02%)</title><rect x="97.4812%" y="661" width="0.0162%" height="15" fill="rgb(230,5,48)" fg:x="108635" fg:w="18"/><text x="97.7312%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (18 samples, 0.02%)</title><rect x="97.4812%" y="645" width="0.0162%" height="15" fill="rgb(224,156,48)" fg:x="108635" fg:w="18"/><text x="97.7312%" y="655.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (15 samples, 0.01%)</title><rect x="97.4839%" y="629" width="0.0135%" height="15" fill="rgb(223,14,29)" fg:x="108638" fg:w="15"/><text x="97.7339%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (47 samples, 0.04%)</title><rect x="97.4983%" y="709" width="0.0422%" height="15" fill="rgb(229,96,36)" fg:x="108654" fg:w="47"/><text x="97.7483%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (45 samples, 0.04%)</title><rect x="97.5000%" y="693" width="0.0404%" height="15" fill="rgb(231,102,53)" fg:x="108656" fg:w="45"/><text x="97.7500%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (45 samples, 0.04%)</title><rect x="97.5000%" y="677" width="0.0404%" height="15" fill="rgb(210,77,38)" fg:x="108656" fg:w="45"/><text x="97.7500%" y="687.50"></text></g><g><title>___pthread_mutex_lock (45 samples, 0.04%)</title><rect x="97.5000%" y="661" width="0.0404%" height="15" fill="rgb(235,131,6)" fg:x="108656" fg:w="45"/><text x="97.7500%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (860 samples, 0.77%)</title><rect x="96.8396%" y="725" width="0.7717%" height="15" fill="rgb(252,55,38)" fg:x="107920" fg:w="860"/><text x="97.0896%" y="735.50"></text></g><g><title>std::time::Instant::now (79 samples, 0.07%)</title><rect x="97.5404%" y="709" width="0.0709%" height="15" fill="rgb(246,38,14)" fg:x="108701" fg:w="79"/><text x="97.7904%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (79 samples, 0.07%)</title><rect x="97.5404%" y="693" width="0.0709%" height="15" fill="rgb(242,27,5)" fg:x="108701" fg:w="79"/><text x="97.7904%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::now (79 samples, 0.07%)</title><rect x="97.5404%" y="677" width="0.0709%" height="15" fill="rgb(228,65,35)" fg:x="108701" fg:w="79"/><text x="97.7904%" y="687.50"></text></g><g><title>__clock_gettime_2 (74 samples, 0.07%)</title><rect x="97.5449%" y="661" width="0.0664%" height="15" fill="rgb(245,93,11)" fg:x="108706" fg:w="74"/><text x="97.7949%" y="671.50"></text></g><g><title>__vdso_clock_gettime (68 samples, 0.06%)</title><rect x="97.5503%" y="645" width="0.0610%" height="15" fill="rgb(213,1,31)" fg:x="108712" fg:w="68"/><text x="97.8003%" y="655.50"></text></g><g><title>[[vdso]] (45 samples, 0.04%)</title><rect x="97.5709%" y="629" width="0.0404%" height="15" fill="rgb(237,205,14)" fg:x="108735" fg:w="45"/><text x="97.8209%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (36 samples, 0.03%)</title><rect x="97.6140%" y="725" width="0.0323%" height="15" fill="rgb(232,118,45)" fg:x="108783" fg:w="36"/><text x="97.8640%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (36 samples, 0.03%)</title><rect x="97.6140%" y="709" width="0.0323%" height="15" fill="rgb(218,5,6)" fg:x="108783" fg:w="36"/><text x="97.8640%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (70 samples, 0.06%)</title><rect x="97.6580%" y="645" width="0.0628%" height="15" fill="rgb(251,87,51)" fg:x="108832" fg:w="70"/><text x="97.9080%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (73 samples, 0.07%)</title><rect x="97.6562%" y="709" width="0.0655%" height="15" fill="rgb(207,225,20)" fg:x="108830" fg:w="73"/><text x="97.9062%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.07%)</title><rect x="97.6562%" y="693" width="0.0655%" height="15" fill="rgb(222,78,54)" fg:x="108830" fg:w="73"/><text x="97.9062%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (71 samples, 0.06%)</title><rect x="97.6580%" y="677" width="0.0637%" height="15" fill="rgb(232,85,16)" fg:x="108832" fg:w="71"/><text x="97.9080%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (71 samples, 0.06%)</title><rect x="97.6580%" y="661" width="0.0637%" height="15" fill="rgb(244,25,33)" fg:x="108832" fg:w="71"/><text x="97.9080%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (59 samples, 0.05%)</title><rect x="97.7217%" y="709" width="0.0529%" height="15" fill="rgb(233,24,36)" fg:x="108903" fg:w="59"/><text x="97.9717%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (59 samples, 0.05%)</title><rect x="97.7217%" y="693" width="0.0529%" height="15" fill="rgb(253,49,54)" fg:x="108903" fg:w="59"/><text x="97.9717%" y="703.50"></text></g><g><title>__libc_read (61 samples, 0.05%)</title><rect x="97.8168%" y="693" width="0.0547%" height="15" fill="rgb(245,12,22)" fg:x="109009" fg:w="61"/><text x="98.0668%" y="703.50"></text></g><g><title>__GI___pthread_disable_asynccancel (16 samples, 0.01%)</title><rect x="97.9451%" y="677" width="0.0144%" height="15" fill="rgb(253,141,28)" fg:x="109152" fg:w="16"/><text x="98.1951%" y="687.50"></text></g><g><title>epoll_wait (119 samples, 0.11%)</title><rect x="97.8715%" y="693" width="0.1068%" height="15" fill="rgb(225,207,27)" fg:x="109070" fg:w="119"/><text x="98.1215%" y="703.50"></text></g><g><title>__GI___pthread_enable_asynccancel (21 samples, 0.02%)</title><rect x="97.9595%" y="677" width="0.0188%" height="15" fill="rgb(220,84,2)" fg:x="109168" fg:w="21"/><text x="98.2095%" y="687.50"></text></g><g><title>__GI_epoll_ctl (51 samples, 0.05%)</title><rect x="98.0017%" y="661" width="0.0458%" height="15" fill="rgb(224,37,37)" fg:x="109215" fg:w="51"/><text x="98.2517%" y="671.50"></text></g><g><title>polling::epoll::Poller::ctl (69 samples, 0.06%)</title><rect x="97.9945%" y="677" width="0.0619%" height="15" fill="rgb(220,143,18)" fg:x="109207" fg:w="69"/><text x="98.2445%" y="687.50"></text></g><g><title>polling::epoll::Poller::modify (85 samples, 0.08%)</title><rect x="97.9810%" y="693" width="0.0763%" height="15" fill="rgb(210,88,33)" fg:x="109192" fg:w="85"/><text x="98.2310%" y="703.50"></text></g><g><title>polling::epoll::Poller::wait (330 samples, 0.30%)</title><rect x="97.7809%" y="709" width="0.2961%" height="15" fill="rgb(219,87,51)" fg:x="108969" fg:w="330"/><text x="98.0309%" y="719.50"></text></g><g><title>syscall (20 samples, 0.02%)</title><rect x="98.0591%" y="693" width="0.0179%" height="15" fill="rgb(211,7,35)" fg:x="109279" fg:w="20"/><text x="98.3091%" y="703.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,466 samples, 1.32%)</title><rect x="96.8136%" y="741" width="1.3155%" height="15" fill="rgb(232,77,2)" fg:x="107891" fg:w="1466"/><text x="97.0636%" y="751.50"></text></g><g><title>polling::Poller::wait (538 samples, 0.48%)</title><rect x="97.6463%" y="725" width="0.4828%" height="15" fill="rgb(249,94,25)" fg:x="108819" fg:w="538"/><text x="97.8963%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (58 samples, 0.05%)</title><rect x="98.0770%" y="709" width="0.0520%" height="15" fill="rgb(215,112,2)" fg:x="109299" fg:w="58"/><text x="98.3270%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (54 samples, 0.05%)</title><rect x="98.0806%" y="693" width="0.0485%" height="15" fill="rgb(226,115,48)" fg:x="109303" fg:w="54"/><text x="98.3306%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (51 samples, 0.05%)</title><rect x="98.0833%" y="677" width="0.0458%" height="15" fill="rgb(249,196,10)" fg:x="109306" fg:w="51"/><text x="98.3333%" y="687.50"></text></g><g><title>__GI___pthread_mutex_trylock (51 samples, 0.05%)</title><rect x="98.0833%" y="661" width="0.0458%" height="15" fill="rgb(237,109,14)" fg:x="109306" fg:w="51"/><text x="98.3333%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (24 samples, 0.02%)</title><rect x="98.1300%" y="693" width="0.0215%" height="15" fill="rgb(217,103,53)" fg:x="109358" fg:w="24"/><text x="98.3800%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_store (24 samples, 0.02%)</title><rect x="98.1300%" y="677" width="0.0215%" height="15" fill="rgb(244,137,9)" fg:x="109358" fg:w="24"/><text x="98.3800%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (29 samples, 0.03%)</title><rect x="98.1291%" y="741" width="0.0260%" height="15" fill="rgb(227,201,3)" fg:x="109357" fg:w="29"/><text x="98.3791%" y="751.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="98.1291%" y="725" width="0.0260%" height="15" fill="rgb(243,94,6)" fg:x="109357" fg:w="29"/><text x="98.3791%" y="735.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (29 samples, 0.03%)</title><rect x="98.1291%" y="709" width="0.0260%" height="15" fill="rgb(235,118,5)" fg:x="109357" fg:w="29"/><text x="98.3791%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::reactor::ReactorLock&gt; (20 samples, 0.02%)</title><rect x="98.1551%" y="741" width="0.0179%" height="15" fill="rgb(247,10,30)" fg:x="109386" fg:w="20"/><text x="98.4051%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;polling::Event&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="98.1551%" y="725" width="0.0179%" height="15" fill="rgb(205,26,28)" fg:x="109386" fg:w="20"/><text x="98.4051%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="98.1551%" y="709" width="0.0179%" height="15" fill="rgb(206,99,35)" fg:x="109386" fg:w="20"/><text x="98.4051%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (17 samples, 0.02%)</title><rect x="98.1578%" y="693" width="0.0153%" height="15" fill="rgb(238,130,40)" fg:x="109389" fg:w="17"/><text x="98.4078%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (16 samples, 0.01%)</title><rect x="98.1587%" y="677" width="0.0144%" height="15" fill="rgb(224,126,31)" fg:x="109390" fg:w="16"/><text x="98.4087%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (15 samples, 0.01%)</title><rect x="98.1596%" y="661" width="0.0135%" height="15" fill="rgb(254,105,17)" fg:x="109391" fg:w="15"/><text x="98.4096%" y="671.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (70 samples, 0.06%)</title><rect x="98.2062%" y="709" width="0.0628%" height="15" fill="rgb(216,87,36)" fg:x="109443" fg:w="70"/><text x="98.4562%" y="719.50"></text></g><g><title>__GI___lll_lock_wake (45 samples, 0.04%)</title><rect x="98.2287%" y="693" width="0.0404%" height="15" fill="rgb(240,21,12)" fg:x="109468" fg:w="45"/><text x="98.4787%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (124 samples, 0.11%)</title><rect x="98.2735%" y="709" width="0.1113%" height="15" fill="rgb(245,192,34)" fg:x="109518" fg:w="124"/><text x="98.5235%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (124 samples, 0.11%)</title><rect x="98.2735%" y="693" width="0.1113%" height="15" fill="rgb(226,100,49)" fg:x="109518" fg:w="124"/><text x="98.5235%" y="703.50"></text></g><g><title>std::sync::poison::Flag::get (28 samples, 0.03%)</title><rect x="98.3848%" y="693" width="0.0251%" height="15" fill="rgb(245,188,27)" fg:x="109642" fg:w="28"/><text x="98.6348%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (28 samples, 0.03%)</title><rect x="98.3848%" y="677" width="0.0251%" height="15" fill="rgb(212,170,8)" fg:x="109642" fg:w="28"/><text x="98.6348%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (27 samples, 0.02%)</title><rect x="98.3857%" y="661" width="0.0242%" height="15" fill="rgb(217,113,29)" fg:x="109643" fg:w="27"/><text x="98.6357%" y="671.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (19 samples, 0.02%)</title><rect x="98.5320%" y="645" width="0.0170%" height="15" fill="rgb(237,30,3)" fg:x="109806" fg:w="19"/><text x="98.7820%" y="655.50"></text></g><g><title>__condvar_confirm_wakeup (19 samples, 0.02%)</title><rect x="98.5490%" y="645" width="0.0170%" height="15" fill="rgb(227,19,28)" fg:x="109825" fg:w="19"/><text x="98.7990%" y="655.50"></text></g><g><title>__condvar_dec_grefs (149 samples, 0.13%)</title><rect x="98.5661%" y="645" width="0.1337%" height="15" fill="rgb(239,172,45)" fg:x="109844" fg:w="149"/><text x="98.8161%" y="655.50"></text></g><g><title>__GI___pthread_disable_asynccancel (19 samples, 0.02%)</title><rect x="98.8398%" y="629" width="0.0170%" height="15" fill="rgb(254,55,39)" fg:x="110149" fg:w="19"/><text x="99.0898%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common (187 samples, 0.17%)</title><rect x="98.6998%" y="645" width="0.1678%" height="15" fill="rgb(249,208,12)" fg:x="109993" fg:w="187"/><text x="98.9498%" y="655.50"></text></g><g><title>__GI___pthread_enable_asynccancel (12 samples, 0.01%)</title><rect x="98.8568%" y="629" width="0.0108%" height="15" fill="rgb(240,52,13)" fg:x="110168" fg:w="12"/><text x="99.1068%" y="639.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (552 samples, 0.50%)</title><rect x="98.4099%" y="677" width="0.4953%" height="15" fill="rgb(252,149,13)" fg:x="109670" fg:w="552"/><text x="98.6599%" y="687.50"></text></g><g><title>__GI___pthread_cond_wait (552 samples, 0.50%)</title><rect x="98.4099%" y="661" width="0.4953%" height="15" fill="rgb(232,81,48)" fg:x="109670" fg:w="552"/><text x="98.6599%" y="671.50"></text></g><g><title>__pthread_mutex_cond_lock (37 samples, 0.03%)</title><rect x="98.8721%" y="645" width="0.0332%" height="15" fill="rgb(222,144,2)" fg:x="110185" fg:w="37"/><text x="99.1221%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (24 samples, 0.02%)</title><rect x="98.9053%" y="661" width="0.0215%" height="15" fill="rgb(216,81,32)" fg:x="110222" fg:w="24"/><text x="99.1553%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.02%)</title><rect x="98.9053%" y="645" width="0.0215%" height="15" fill="rgb(244,78,51)" fg:x="110222" fg:w="24"/><text x="99.1553%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::wait (606 samples, 0.54%)</title><rect x="98.3848%" y="709" width="0.5438%" height="15" fill="rgb(217,66,21)" fg:x="109642" fg:w="606"/><text x="98.6348%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (578 samples, 0.52%)</title><rect x="98.4099%" y="693" width="0.5187%" height="15" fill="rgb(247,101,42)" fg:x="109670" fg:w="578"/><text x="98.6599%" y="703.50"></text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (26 samples, 0.02%)</title><rect x="98.9053%" y="677" width="0.0233%" height="15" fill="rgb(227,81,39)" fg:x="110222" fg:w="26"/><text x="99.1553%" y="687.50"></text></g><g><title>parking::Parker::park (860 samples, 0.77%)</title><rect x="98.1910%" y="741" width="0.7717%" height="15" fill="rgb(220,223,44)" fg:x="109426" fg:w="860"/><text x="98.4410%" y="751.50"></text></g><g><title>parking::Inner::park (859 samples, 0.77%)</title><rect x="98.1919%" y="725" width="0.7708%" height="15" fill="rgb(205,218,2)" fg:x="109427" fg:w="859"/><text x="98.4419%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (38 samples, 0.03%)</title><rect x="98.9286%" y="709" width="0.0341%" height="15" fill="rgb(212,207,28)" fg:x="110248" fg:w="38"/><text x="99.1786%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (37 samples, 0.03%)</title><rect x="98.9295%" y="693" width="0.0332%" height="15" fill="rgb(224,12,41)" fg:x="110249" fg:w="37"/><text x="99.1795%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (35 samples, 0.03%)</title><rect x="98.9313%" y="677" width="0.0314%" height="15" fill="rgb(216,118,12)" fg:x="110251" fg:w="35"/><text x="99.1813%" y="687.50"></text></g><g><title>___pthread_mutex_lock (35 samples, 0.03%)</title><rect x="98.9313%" y="661" width="0.0314%" height="15" fill="rgb(252,97,46)" fg:x="110251" fg:w="35"/><text x="99.1813%" y="671.50"></text></g><g><title>parking::Parker::park_timeout (218 samples, 0.20%)</title><rect x="98.9627%" y="741" width="0.1956%" height="15" fill="rgb(244,206,19)" fg:x="110286" fg:w="218"/><text x="99.2127%" y="751.50"></text></g><g><title>parking::Inner::park (209 samples, 0.19%)</title><rect x="98.9708%" y="725" width="0.1875%" height="15" fill="rgb(231,84,31)" fg:x="110295" fg:w="209"/><text x="99.2208%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (195 samples, 0.17%)</title><rect x="98.9833%" y="709" width="0.1750%" height="15" fill="rgb(244,133,0)" fg:x="110309" fg:w="195"/><text x="99.2333%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (195 samples, 0.17%)</title><rect x="98.9833%" y="693" width="0.1750%" height="15" fill="rgb(223,15,50)" fg:x="110309" fg:w="195"/><text x="99.2333%" y="703.50"></text></g><g><title>std::panic::catch_unwind (11,717 samples, 10.51%)</title><rect x="88.6820%" y="1029" width="10.5140%" height="15" fill="rgb(250,118,49)" fg:x="98829" fg:w="11717"/><text x="88.9320%" y="1039.50">std::panic::cat..</text></g><g><title>std::panicking::try (11,717 samples, 10.51%)</title><rect x="88.6820%" y="1013" width="10.5140%" height="15" fill="rgb(248,25,38)" fg:x="98829" fg:w="11717"/><text x="88.9320%" y="1023.50">std::panicking:..</text></g><g><title>std::panicking::try::do_call (11,717 samples, 10.51%)</title><rect x="88.6820%" y="997" width="10.5140%" height="15" fill="rgb(215,70,14)" fg:x="98829" fg:w="11717"/><text x="88.9320%" y="1007.50">std::panicking:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11,717 samples, 10.51%)</title><rect x="88.6820%" y="981" width="10.5140%" height="15" fill="rgb(215,28,15)" fg:x="98829" fg:w="11717"/><text x="88.9320%" y="991.50">&lt;core::panic::u..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (11,717 samples, 10.51%)</title><rect x="88.6820%" y="965" width="10.5140%" height="15" fill="rgb(243,6,28)" fg:x="98829" fg:w="11717"/><text x="88.9320%" y="975.50">std::thread::Bu..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11,717 samples, 10.51%)</title><rect x="88.6820%" y="949" width="10.5140%" height="15" fill="rgb(222,130,1)" fg:x="98829" fg:w="11717"/><text x="88.9320%" y="959.50">std::sys_common..</text></g><g><title>core::ops::function::FnOnce::call_once (11,717 samples, 10.51%)</title><rect x="88.6820%" y="933" width="10.5140%" height="15" fill="rgb(236,166,44)" fg:x="98829" fg:w="11717"/><text x="88.9320%" y="943.50">core::ops::func..</text></g><g><title>async_global_executor::threading::thread_main_loop (11,717 samples, 10.51%)</title><rect x="88.6820%" y="917" width="10.5140%" height="15" fill="rgb(221,108,14)" fg:x="98829" fg:w="11717"/><text x="88.9320%" y="927.50">async_global_ex..</text></g><g><title>std::panic::catch_unwind (11,692 samples, 10.49%)</title><rect x="88.7044%" y="901" width="10.4916%" height="15" fill="rgb(252,3,45)" fg:x="98854" fg:w="11692"/><text x="88.9544%" y="911.50">std::panic::cat..</text></g><g><title>std::panicking::try (11,692 samples, 10.49%)</title><rect x="88.7044%" y="885" width="10.4916%" height="15" fill="rgb(237,68,30)" fg:x="98854" fg:w="11692"/><text x="88.9544%" y="895.50">std::panicking:..</text></g><g><title>std::panicking::try::do_call (11,692 samples, 10.49%)</title><rect x="88.7044%" y="869" width="10.4916%" height="15" fill="rgb(211,79,22)" fg:x="98854" fg:w="11692"/><text x="88.9544%" y="879.50">std::panicking:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (11,692 samples, 10.49%)</title><rect x="88.7044%" y="853" width="10.4916%" height="15" fill="rgb(252,185,21)" fg:x="98854" fg:w="11692"/><text x="88.9544%" y="863.50">async_global_ex..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,692 samples, 10.49%)</title><rect x="88.7044%" y="837" width="10.4916%" height="15" fill="rgb(225,189,26)" fg:x="98854" fg:w="11692"/><text x="88.9544%" y="847.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,692 samples, 10.49%)</title><rect x="88.7044%" y="821" width="10.4916%" height="15" fill="rgb(241,30,40)" fg:x="98854" fg:w="11692"/><text x="88.9544%" y="831.50">std::thread::lo..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (11,692 samples, 10.49%)</title><rect x="88.7044%" y="805" width="10.4916%" height="15" fill="rgb(235,215,44)" fg:x="98854" fg:w="11692"/><text x="88.9544%" y="815.50">async_global_ex..</text></g><g><title>async_global_executor::reactor::block_on (11,692 samples, 10.49%)</title><rect x="88.7044%" y="789" width="10.4916%" height="15" fill="rgb(205,8,29)" fg:x="98854" fg:w="11692"/><text x="88.9544%" y="799.50">async_global_ex..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (11,692 samples, 10.49%)</title><rect x="88.7044%" y="773" width="10.4916%" height="15" fill="rgb(241,137,42)" fg:x="98854" fg:w="11692"/><text x="88.9544%" y="783.50">async_global_ex..</text></g><g><title>async_io::driver::block_on (11,692 samples, 10.49%)</title><rect x="88.7044%" y="757" width="10.4916%" height="15" fill="rgb(237,155,2)" fg:x="98854" fg:w="11692"/><text x="88.9544%" y="767.50">async_io::drive..</text></g><g><title>std::time::Instant::now (35 samples, 0.03%)</title><rect x="99.1646%" y="741" width="0.0314%" height="15" fill="rgb(245,29,42)" fg:x="110511" fg:w="35"/><text x="99.4146%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (35 samples, 0.03%)</title><rect x="99.1646%" y="725" width="0.0314%" height="15" fill="rgb(234,101,35)" fg:x="110511" fg:w="35"/><text x="99.4146%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (35 samples, 0.03%)</title><rect x="99.1646%" y="709" width="0.0314%" height="15" fill="rgb(228,64,37)" fg:x="110511" fg:w="35"/><text x="99.4146%" y="719.50"></text></g><g><title>__clock_gettime_2 (28 samples, 0.03%)</title><rect x="99.1709%" y="693" width="0.0251%" height="15" fill="rgb(217,214,36)" fg:x="110518" fg:w="28"/><text x="99.4209%" y="703.50"></text></g><g><title>__vdso_clock_gettime (24 samples, 0.02%)</title><rect x="99.1745%" y="677" width="0.0215%" height="15" fill="rgb(243,70,3)" fg:x="110522" fg:w="24"/><text x="99.4245%" y="687.50"></text></g><g><title>[[vdso]] (13 samples, 0.01%)</title><rect x="99.1843%" y="661" width="0.0117%" height="15" fill="rgb(253,158,52)" fg:x="110533" fg:w="13"/><text x="99.4343%" y="671.50"></text></g><g><title>__GI___clone (11,728 samples, 10.52%)</title><rect x="88.6775%" y="1141" width="10.5239%" height="15" fill="rgb(234,111,54)" fg:x="98824" fg:w="11728"/><text x="88.9275%" y="1151.50">__GI___clone</text></g><g><title>start_thread (11,723 samples, 10.52%)</title><rect x="88.6820%" y="1125" width="10.5194%" height="15" fill="rgb(217,70,32)" fg:x="98829" fg:w="11723"/><text x="88.9320%" y="1135.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (11,723 samples, 10.52%)</title><rect x="88.6820%" y="1109" width="10.5194%" height="15" fill="rgb(234,18,33)" fg:x="98829" fg:w="11723"/><text x="88.9320%" y="1119.50">std::sys::unix:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11,723 samples, 10.52%)</title><rect x="88.6820%" y="1093" width="10.5194%" height="15" fill="rgb(234,12,49)" fg:x="98829" fg:w="11723"/><text x="88.9320%" y="1103.50">&lt;alloc::boxed::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11,723 samples, 10.52%)</title><rect x="88.6820%" y="1077" width="10.5194%" height="15" fill="rgb(236,10,21)" fg:x="98829" fg:w="11723"/><text x="88.9320%" y="1087.50">&lt;alloc::boxed::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (11,723 samples, 10.52%)</title><rect x="88.6820%" y="1061" width="10.5194%" height="15" fill="rgb(248,182,45)" fg:x="98829" fg:w="11723"/><text x="88.9320%" y="1071.50">core::ops::func..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (11,723 samples, 10.52%)</title><rect x="88.6820%" y="1045" width="10.5194%" height="15" fill="rgb(217,95,36)" fg:x="98829" fg:w="11723"/><text x="88.9320%" y="1055.50">std::thread::Bu..</text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (19 samples, 0.02%)</title><rect x="99.2247%" y="1141" width="0.0170%" height="15" fill="rgb(212,110,31)" fg:x="110578" fg:w="19"/><text x="99.4747%" y="1151.50"></text></g><g><title>abi_stable::globals::GLOBALS (13 samples, 0.01%)</title><rect x="99.2427%" y="1141" width="0.0117%" height="15" fill="rgb(206,32,53)" fg:x="110598" fg:w="13"/><text x="99.4927%" y="1151.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (24 samples, 0.02%)</title><rect x="99.2543%" y="1141" width="0.0215%" height="15" fill="rgb(246,141,37)" fg:x="110611" fg:w="24"/><text x="99.5043%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="99.2651%" y="1125" width="0.0108%" height="15" fill="rgb(219,16,7)" fg:x="110623" fg:w="12"/><text x="99.5151%" y="1135.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="99.2651%" y="1109" width="0.0108%" height="15" fill="rgb(230,205,45)" fg:x="110623" fg:w="12"/><text x="99.5151%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="99.2651%" y="1093" width="0.0108%" height="15" fill="rgb(231,43,49)" fg:x="110623" fg:w="12"/><text x="99.5151%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="99.2651%" y="1077" width="0.0108%" height="15" fill="rgb(212,106,34)" fg:x="110623" fg:w="12"/><text x="99.5151%" y="1087.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="99.2651%" y="1061" width="0.0108%" height="15" fill="rgb(206,83,17)" fg:x="110623" fg:w="12"/><text x="99.5151%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="99.2651%" y="1045" width="0.0108%" height="15" fill="rgb(244,154,49)" fg:x="110623" fg:w="12"/><text x="99.5151%" y="1055.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (13 samples, 0.01%)</title><rect x="99.2759%" y="1141" width="0.0117%" height="15" fill="rgb(244,149,49)" fg:x="110635" fg:w="13"/><text x="99.5259%" y="1151.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (23 samples, 0.02%)</title><rect x="99.2884%" y="1125" width="0.0206%" height="15" fill="rgb(227,134,18)" fg:x="110649" fg:w="23"/><text x="99.5384%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (12 samples, 0.01%)</title><rect x="99.2983%" y="1109" width="0.0108%" height="15" fill="rgb(237,116,36)" fg:x="110660" fg:w="12"/><text x="99.5483%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.01%)</title><rect x="99.2983%" y="1093" width="0.0108%" height="15" fill="rgb(205,129,40)" fg:x="110660" fg:w="12"/><text x="99.5483%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="99.2983%" y="1077" width="0.0108%" height="15" fill="rgb(236,178,4)" fg:x="110660" fg:w="12"/><text x="99.5483%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="99.2983%" y="1061" width="0.0108%" height="15" fill="rgb(251,76,53)" fg:x="110660" fg:w="12"/><text x="99.5483%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="99.2983%" y="1045" width="0.0108%" height="15" fill="rgb(242,92,40)" fg:x="110660" fg:w="12"/><text x="99.5483%" y="1055.50"></text></g><g><title>anon.15bd0fe339b87353facb7fa6054e91c4.35.llvm.17255142514906886635 (27 samples, 0.02%)</title><rect x="99.2875%" y="1141" width="0.0242%" height="15" fill="rgb(209,45,30)" fg:x="110648" fg:w="27"/><text x="99.5375%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="99.3117%" y="1125" width="0.0117%" height="15" fill="rgb(218,157,36)" fg:x="110675" fg:w="13"/><text x="99.5617%" y="1135.50"></text></g><g><title>anon.15bd0fe339b87353facb7fa6054e91c4.39.llvm.17255142514906886635 (31 samples, 0.03%)</title><rect x="99.3117%" y="1141" width="0.0278%" height="15" fill="rgb(222,186,16)" fg:x="110675" fg:w="31"/><text x="99.5617%" y="1151.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="99.3270%" y="1125" width="0.0126%" height="15" fill="rgb(254,72,35)" fg:x="110692" fg:w="14"/><text x="99.5770%" y="1135.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (27 samples, 0.02%)</title><rect x="99.3396%" y="1125" width="0.0242%" height="15" fill="rgb(224,25,35)" fg:x="110706" fg:w="27"/><text x="99.5896%" y="1135.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="99.3638%" y="1125" width="0.0179%" height="15" fill="rgb(206,135,52)" fg:x="110733" fg:w="20"/><text x="99.6138%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (21 samples, 0.02%)</title><rect x="99.3817%" y="1125" width="0.0188%" height="15" fill="rgb(229,174,47)" fg:x="110753" fg:w="21"/><text x="99.6317%" y="1135.50"></text></g><g><title>anon.3e072c7a2ec79f78eaac3a2352ad9487.30.llvm.7980048246584792993 (73 samples, 0.07%)</title><rect x="99.3396%" y="1141" width="0.0655%" height="15" fill="rgb(242,184,21)" fg:x="110706" fg:w="73"/><text x="99.5896%" y="1151.50"></text></g><g><title>anon.443be95476efe27dbcc9706629bb0f90.154.llvm.3148280617290107537 (14 samples, 0.01%)</title><rect x="99.4149%" y="1141" width="0.0126%" height="15" fill="rgb(213,22,45)" fg:x="110790" fg:w="14"/><text x="99.6649%" y="1151.50"></text></g><g><title>anon.8926769c9851f61b338eb8ee10f4c056.174.llvm.16287282925537378343 (13 samples, 0.01%)</title><rect x="99.4293%" y="1141" width="0.0117%" height="15" fill="rgb(237,81,54)" fg:x="110806" fg:w="13"/><text x="99.6793%" y="1151.50"></text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (13 samples, 0.01%)</title><rect x="99.4293%" y="1125" width="0.0117%" height="15" fill="rgb(248,177,18)" fg:x="110806" fg:w="13"/><text x="99.6793%" y="1135.50"></text></g><g><title>anon.e3014b8b5d1afa4bb4931e3c4a33ddab.328.llvm.16598046268827245174 (27 samples, 0.02%)</title><rect x="99.4661%" y="1141" width="0.0242%" height="15" fill="rgb(254,31,16)" fg:x="110847" fg:w="27"/><text x="99.7161%" y="1151.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (15 samples, 0.01%)</title><rect x="99.4769%" y="1125" width="0.0135%" height="15" fill="rgb(235,20,31)" fg:x="110859" fg:w="15"/><text x="99.7269%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (14 samples, 0.01%)</title><rect x="99.4948%" y="1141" width="0.0126%" height="15" fill="rgb(240,56,43)" fg:x="110879" fg:w="14"/><text x="99.7448%" y="1151.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (39 samples, 0.03%)</title><rect x="99.5074%" y="1141" width="0.0350%" height="15" fill="rgb(237,197,51)" fg:x="110893" fg:w="39"/><text x="99.7574%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="99.5468%" y="1141" width="0.0153%" height="15" fill="rgb(241,162,44)" fg:x="110937" fg:w="17"/><text x="99.7968%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (17 samples, 0.02%)</title><rect x="99.5468%" y="1125" width="0.0153%" height="15" fill="rgb(224,23,20)" fg:x="110937" fg:w="17"/><text x="99.7968%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (20 samples, 0.02%)</title><rect x="99.5684%" y="1093" width="0.0179%" height="15" fill="rgb(250,109,34)" fg:x="110961" fg:w="20"/><text x="99.8184%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (20 samples, 0.02%)</title><rect x="99.5684%" y="1077" width="0.0179%" height="15" fill="rgb(214,175,50)" fg:x="110961" fg:w="20"/><text x="99.8184%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (20 samples, 0.02%)</title><rect x="99.5684%" y="1061" width="0.0179%" height="15" fill="rgb(213,182,5)" fg:x="110961" fg:w="20"/><text x="99.8184%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (27 samples, 0.02%)</title><rect x="99.5684%" y="1125" width="0.0242%" height="15" fill="rgb(209,199,19)" fg:x="110961" fg:w="27"/><text x="99.8184%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (27 samples, 0.02%)</title><rect x="99.5684%" y="1109" width="0.0242%" height="15" fill="rgb(236,224,42)" fg:x="110961" fg:w="27"/><text x="99.8184%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (29 samples, 0.03%)</title><rect x="99.5926%" y="1125" width="0.0260%" height="15" fill="rgb(246,226,29)" fg:x="110988" fg:w="29"/><text x="99.8426%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (29 samples, 0.03%)</title><rect x="99.5926%" y="1109" width="0.0260%" height="15" fill="rgb(227,223,11)" fg:x="110988" fg:w="29"/><text x="99.8426%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (29 samples, 0.03%)</title><rect x="99.5926%" y="1093" width="0.0260%" height="15" fill="rgb(219,7,51)" fg:x="110988" fg:w="29"/><text x="99.8426%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (115 samples, 0.10%)</title><rect x="99.5621%" y="1141" width="0.1032%" height="15" fill="rgb(245,167,10)" fg:x="110954" fg:w="115"/><text x="99.8121%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (52 samples, 0.05%)</title><rect x="99.6186%" y="1125" width="0.0467%" height="15" fill="rgb(237,224,16)" fg:x="111017" fg:w="52"/><text x="99.8686%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (44 samples, 0.04%)</title><rect x="99.6258%" y="1109" width="0.0395%" height="15" fill="rgb(226,132,13)" fg:x="111025" fg:w="44"/><text x="99.8758%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (44 samples, 0.04%)</title><rect x="99.6258%" y="1093" width="0.0395%" height="15" fill="rgb(214,140,3)" fg:x="111025" fg:w="44"/><text x="99.8758%" y="1103.50"></text></g><g><title>rust_alloc (24 samples, 0.02%)</title><rect x="99.6743%" y="1141" width="0.0215%" height="15" fill="rgb(221,177,4)" fg:x="111079" fg:w="24"/><text x="99.9243%" y="1151.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (12 samples, 0.01%)</title><rect x="99.6994%" y="1141" width="0.0108%" height="15" fill="rgb(238,139,3)" fg:x="111107" fg:w="12"/><text x="99.9494%" y="1151.50"></text></g><g><title>async-std/runti (111,061 samples, 99.66%)</title><rect x="0.0673%" y="1157" width="99.6581%" height="15" fill="rgb(216,17,39)" fg:x="75" fg:w="111061"/><text x="0.3173%" y="1167.50">async-std/runti</text></g><g><title>blocking-1 (12 samples, 0.01%)</title><rect x="99.7254%" y="1157" width="0.0108%" height="15" fill="rgb(238,120,9)" fg:x="111136" fg:w="12"/><text x="99.9754%" y="1167.50"></text></g><g><title>blocking-3 (16 samples, 0.01%)</title><rect x="99.7452%" y="1157" width="0.0144%" height="15" fill="rgb(244,92,53)" fg:x="111158" fg:w="16"/><text x="99.9952%" y="1167.50"></text></g><g><title>__GI___clone (15 samples, 0.01%)</title><rect x="99.7461%" y="1141" width="0.0135%" height="15" fill="rgb(224,148,33)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="1151.50"></text></g><g><title>start_thread (15 samples, 0.01%)</title><rect x="99.7461%" y="1125" width="0.0135%" height="15" fill="rgb(243,6,36)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15 samples, 0.01%)</title><rect x="99.7461%" y="1109" width="0.0135%" height="15" fill="rgb(230,102,11)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 0.01%)</title><rect x="99.7461%" y="1093" width="0.0135%" height="15" fill="rgb(234,148,36)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 0.01%)</title><rect x="99.7461%" y="1077" width="0.0135%" height="15" fill="rgb(251,153,25)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (15 samples, 0.01%)</title><rect x="99.7461%" y="1061" width="0.0135%" height="15" fill="rgb(215,129,8)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (15 samples, 0.01%)</title><rect x="99.7461%" y="1045" width="0.0135%" height="15" fill="rgb(224,128,35)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.01%)</title><rect x="99.7461%" y="1029" width="0.0135%" height="15" fill="rgb(237,56,52)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="1039.50"></text></g><g><title>std::panicking::try (15 samples, 0.01%)</title><rect x="99.7461%" y="1013" width="0.0135%" height="15" fill="rgb(234,213,19)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.01%)</title><rect x="99.7461%" y="997" width="0.0135%" height="15" fill="rgb(252,82,23)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15 samples, 0.01%)</title><rect x="99.7461%" y="981" width="0.0135%" height="15" fill="rgb(254,201,21)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (15 samples, 0.01%)</title><rect x="99.7461%" y="965" width="0.0135%" height="15" fill="rgb(250,186,11)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15 samples, 0.01%)</title><rect x="99.7461%" y="949" width="0.0135%" height="15" fill="rgb(211,174,5)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="959.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (15 samples, 0.01%)</title><rect x="99.7461%" y="933" width="0.0135%" height="15" fill="rgb(214,121,10)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="943.50"></text></g><g><title>blocking::Executor::main_loop (15 samples, 0.01%)</title><rect x="99.7461%" y="917" width="0.0135%" height="15" fill="rgb(241,66,2)" fg:x="111159" fg:w="15"/><text x="99.9961%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (13 samples, 0.01%)</title><rect x="99.7479%" y="901" width="0.0117%" height="15" fill="rgb(220,167,19)" fg:x="111161" fg:w="13"/><text x="99.9979%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (13 samples, 0.01%)</title><rect x="99.7479%" y="885" width="0.0117%" height="15" fill="rgb(231,54,50)" fg:x="111161" fg:w="13"/><text x="99.9979%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (13 samples, 0.01%)</title><rect x="99.7479%" y="869" width="0.0117%" height="15" fill="rgb(239,217,53)" fg:x="111161" fg:w="13"/><text x="99.9979%" y="879.50"></text></g><g><title>___pthread_cond_timedwait (13 samples, 0.01%)</title><rect x="99.7479%" y="853" width="0.0117%" height="15" fill="rgb(248,8,0)" fg:x="111161" fg:w="13"/><text x="99.9979%" y="863.50"></text></g><g><title>__futex_abstimed_wait_common (12 samples, 0.01%)</title><rect x="99.7487%" y="837" width="0.0108%" height="15" fill="rgb(229,118,37)" fg:x="111162" fg:w="12"/><text x="99.9987%" y="847.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (55 samples, 0.05%)</title><rect x="99.7622%" y="901" width="0.0494%" height="15" fill="rgb(253,223,43)" fg:x="111177" fg:w="55"/><text x="100.0122%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (55 samples, 0.05%)</title><rect x="99.7622%" y="885" width="0.0494%" height="15" fill="rgb(211,77,36)" fg:x="111177" fg:w="55"/><text x="100.0122%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (55 samples, 0.05%)</title><rect x="99.7622%" y="869" width="0.0494%" height="15" fill="rgb(219,3,53)" fg:x="111177" fg:w="55"/><text x="100.0122%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (55 samples, 0.05%)</title><rect x="99.7622%" y="853" width="0.0494%" height="15" fill="rgb(244,45,42)" fg:x="111177" fg:w="55"/><text x="100.0122%" y="863.50"></text></g><g><title>___pthread_mutex_lock (55 samples, 0.05%)</title><rect x="99.7622%" y="837" width="0.0494%" height="15" fill="rgb(225,95,27)" fg:x="111177" fg:w="55"/><text x="100.0122%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (55 samples, 0.05%)</title><rect x="99.7622%" y="821" width="0.0494%" height="15" fill="rgb(207,74,8)" fg:x="111177" fg:w="55"/><text x="100.0122%" y="831.50"></text></g><g><title>tokio-runtime-w (58 samples, 0.05%)</title><rect x="99.7604%" y="1157" width="0.0520%" height="15" fill="rgb(243,63,36)" fg:x="111175" fg:w="58"/><text x="100.0104%" y="1167.50"></text></g><g><title>__GI___clone (56 samples, 0.05%)</title><rect x="99.7622%" y="1141" width="0.0503%" height="15" fill="rgb(211,180,12)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="1151.50"></text></g><g><title>start_thread (56 samples, 0.05%)</title><rect x="99.7622%" y="1125" width="0.0503%" height="15" fill="rgb(254,166,49)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (56 samples, 0.05%)</title><rect x="99.7622%" y="1109" width="0.0503%" height="15" fill="rgb(205,19,0)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (56 samples, 0.05%)</title><rect x="99.7622%" y="1093" width="0.0503%" height="15" fill="rgb(224,172,32)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (56 samples, 0.05%)</title><rect x="99.7622%" y="1077" width="0.0503%" height="15" fill="rgb(254,136,30)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (56 samples, 0.05%)</title><rect x="99.7622%" y="1061" width="0.0503%" height="15" fill="rgb(246,19,35)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (56 samples, 0.05%)</title><rect x="99.7622%" y="1045" width="0.0503%" height="15" fill="rgb(219,24,36)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (56 samples, 0.05%)</title><rect x="99.7622%" y="1029" width="0.0503%" height="15" fill="rgb(251,55,1)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="1039.50"></text></g><g><title>std::panicking::try (56 samples, 0.05%)</title><rect x="99.7622%" y="1013" width="0.0503%" height="15" fill="rgb(218,117,39)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (56 samples, 0.05%)</title><rect x="99.7622%" y="997" width="0.0503%" height="15" fill="rgb(248,169,11)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (56 samples, 0.05%)</title><rect x="99.7622%" y="981" width="0.0503%" height="15" fill="rgb(244,40,44)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (56 samples, 0.05%)</title><rect x="99.7622%" y="965" width="0.0503%" height="15" fill="rgb(234,62,37)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (56 samples, 0.05%)</title><rect x="99.7622%" y="949" width="0.0503%" height="15" fill="rgb(207,117,42)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="959.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (56 samples, 0.05%)</title><rect x="99.7622%" y="933" width="0.0503%" height="15" fill="rgb(213,43,2)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="943.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (56 samples, 0.05%)</title><rect x="99.7622%" y="917" width="0.0503%" height="15" fill="rgb(244,202,51)" fg:x="111177" fg:w="56"/><text x="100.0122%" y="927.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="99.8152%" y="1141" width="0.0153%" height="15" fill="rgb(253,174,46)" fg:x="111236" fg:w="17"/><text x="100.0652%" y="1151.50"></text></g><g><title>__GI___clone (177 samples, 0.16%)</title><rect x="99.8304%" y="1141" width="0.1588%" height="15" fill="rgb(251,23,1)" fg:x="111253" fg:w="177"/><text x="100.0804%" y="1151.50"></text></g><g><title>start_thread (19 samples, 0.02%)</title><rect x="99.9722%" y="1125" width="0.0170%" height="15" fill="rgb(253,26,1)" fg:x="111411" fg:w="19"/><text x="100.2222%" y="1135.50"></text></g><g><title>all (111,442 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(216,89,31)" fg:x="0" fg:w="111442"/><text x="0.2500%" y="1183.50"></text></g><g><title>tremor-pdk-hash (209 samples, 0.19%)</title><rect x="99.8125%" y="1157" width="0.1875%" height="15" fill="rgb(209,109,5)" fg:x="111233" fg:w="209"/><text x="100.0625%" y="1167.50"></text></g><g><title>_start (12 samples, 0.01%)</title><rect x="99.9892%" y="1141" width="0.0108%" height="15" fill="rgb(229,63,13)" fg:x="111430" fg:w="12"/><text x="100.2392%" y="1151.50"></text></g></svg></svg>