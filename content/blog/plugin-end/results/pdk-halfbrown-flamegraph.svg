<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="113566"><g><title>__futex_abstimed_wait_common (26 samples, 0.02%)</title><rect x="0.0220%" y="805" width="0.0229%" height="15" fill="rgb(227,0,7)" fg:x="25" fg:w="26"/><text x="0.2720%" y="815.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (30 samples, 0.03%)</title><rect x="0.0203%" y="837" width="0.0264%" height="15" fill="rgb(217,0,24)" fg:x="23" fg:w="30"/><text x="0.2703%" y="847.50"></text></g><g><title>___pthread_cond_timedwait (30 samples, 0.03%)</title><rect x="0.0203%" y="821" width="0.0264%" height="15" fill="rgb(221,193,54)" fg:x="23" fg:w="30"/><text x="0.2703%" y="831.50"></text></g><g><title>std::panic::catch_unwind (44 samples, 0.04%)</title><rect x="0.0088%" y="1029" width="0.0387%" height="15" fill="rgb(248,212,6)" fg:x="10" fg:w="44"/><text x="0.2588%" y="1039.50"></text></g><g><title>std::panicking::try (44 samples, 0.04%)</title><rect x="0.0088%" y="1013" width="0.0387%" height="15" fill="rgb(208,68,35)" fg:x="10" fg:w="44"/><text x="0.2588%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (44 samples, 0.04%)</title><rect x="0.0088%" y="997" width="0.0387%" height="15" fill="rgb(232,128,0)" fg:x="10" fg:w="44"/><text x="0.2588%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (44 samples, 0.04%)</title><rect x="0.0088%" y="981" width="0.0387%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="44"/><text x="0.2588%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (44 samples, 0.04%)</title><rect x="0.0088%" y="965" width="0.0387%" height="15" fill="rgb(228,23,34)" fg:x="10" fg:w="44"/><text x="0.2588%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (44 samples, 0.04%)</title><rect x="0.0088%" y="949" width="0.0387%" height="15" fill="rgb(218,30,26)" fg:x="10" fg:w="44"/><text x="0.2588%" y="959.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (44 samples, 0.04%)</title><rect x="0.0088%" y="933" width="0.0387%" height="15" fill="rgb(220,122,19)" fg:x="10" fg:w="44"/><text x="0.2588%" y="943.50"></text></g><g><title>async_io::driver::main_loop (44 samples, 0.04%)</title><rect x="0.0088%" y="917" width="0.0387%" height="15" fill="rgb(250,228,42)" fg:x="10" fg:w="44"/><text x="0.2588%" y="927.50"></text></g><g><title>parking::Parker::park_timeout (33 samples, 0.03%)</title><rect x="0.0185%" y="901" width="0.0291%" height="15" fill="rgb(240,193,28)" fg:x="21" fg:w="33"/><text x="0.2685%" y="911.50"></text></g><g><title>parking::Inner::park (33 samples, 0.03%)</title><rect x="0.0185%" y="885" width="0.0291%" height="15" fill="rgb(216,20,37)" fg:x="21" fg:w="33"/><text x="0.2685%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (32 samples, 0.03%)</title><rect x="0.0194%" y="869" width="0.0282%" height="15" fill="rgb(206,188,39)" fg:x="22" fg:w="32"/><text x="0.2694%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (31 samples, 0.03%)</title><rect x="0.0203%" y="853" width="0.0273%" height="15" fill="rgb(217,207,13)" fg:x="23" fg:w="31"/><text x="0.2703%" y="863.50"></text></g><g><title>__GI___clone (49 samples, 0.04%)</title><rect x="0.0088%" y="1141" width="0.0431%" height="15" fill="rgb(231,73,38)" fg:x="10" fg:w="49"/><text x="0.2588%" y="1151.50"></text></g><g><title>start_thread (49 samples, 0.04%)</title><rect x="0.0088%" y="1125" width="0.0431%" height="15" fill="rgb(225,20,46)" fg:x="10" fg:w="49"/><text x="0.2588%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (49 samples, 0.04%)</title><rect x="0.0088%" y="1109" width="0.0431%" height="15" fill="rgb(210,31,41)" fg:x="10" fg:w="49"/><text x="0.2588%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (49 samples, 0.04%)</title><rect x="0.0088%" y="1093" width="0.0431%" height="15" fill="rgb(221,200,47)" fg:x="10" fg:w="49"/><text x="0.2588%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (49 samples, 0.04%)</title><rect x="0.0088%" y="1077" width="0.0431%" height="15" fill="rgb(226,26,5)" fg:x="10" fg:w="49"/><text x="0.2588%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (49 samples, 0.04%)</title><rect x="0.0088%" y="1061" width="0.0431%" height="15" fill="rgb(249,33,26)" fg:x="10" fg:w="49"/><text x="0.2588%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (49 samples, 0.04%)</title><rect x="0.0088%" y="1045" width="0.0431%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="49"/><text x="0.2588%" y="1055.50"></text></g><g><title>async-io (57 samples, 0.05%)</title><rect x="0.0026%" y="1157" width="0.0502%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="57"/><text x="0.2526%" y="1167.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.01%)</title><rect x="0.4764%" y="1141" width="0.0123%" height="15" fill="rgb(247,18,42)" fg:x="541" fg:w="14"/><text x="0.7264%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="0.4887%" y="1141" width="0.0132%" height="15" fill="rgb(241,131,45)" fg:x="555" fg:w="15"/><text x="0.7387%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (13 samples, 0.01%)</title><rect x="0.4905%" y="1125" width="0.0114%" height="15" fill="rgb(249,31,29)" fg:x="557" fg:w="13"/><text x="0.7405%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="0.4905%" y="1109" width="0.0114%" height="15" fill="rgb(225,111,53)" fg:x="557" fg:w="13"/><text x="0.7405%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="0.5283%" y="1125" width="0.0229%" height="15" fill="rgb(238,160,17)" fg:x="600" fg:w="26"/><text x="0.7783%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="0.5512%" y="1125" width="0.0229%" height="15" fill="rgb(214,148,48)" fg:x="626" fg:w="26"/><text x="0.8012%" y="1135.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (88 samples, 0.08%)</title><rect x="0.5741%" y="1125" width="0.0775%" height="15" fill="rgb(232,36,49)" fg:x="652" fg:w="88"/><text x="0.8241%" y="1135.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (21 samples, 0.02%)</title><rect x="0.7097%" y="1093" width="0.0185%" height="15" fill="rgb(209,103,24)" fg:x="806" fg:w="21"/><text x="0.9597%" y="1103.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (30 samples, 0.03%)</title><rect x="0.7097%" y="1109" width="0.0264%" height="15" fill="rgb(229,88,8)" fg:x="806" fg:w="30"/><text x="0.9597%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (41 samples, 0.04%)</title><rect x="0.7361%" y="1109" width="0.0361%" height="15" fill="rgb(213,181,19)" fg:x="836" fg:w="41"/><text x="0.9861%" y="1119.50"></text></g><g><title>core::mem::replace (41 samples, 0.04%)</title><rect x="0.7361%" y="1093" width="0.0361%" height="15" fill="rgb(254,191,54)" fg:x="836" fg:w="41"/><text x="0.9861%" y="1103.50"></text></g><g><title>core::ptr::read (41 samples, 0.04%)</title><rect x="0.7361%" y="1077" width="0.0361%" height="15" fill="rgb(241,83,37)" fg:x="836" fg:w="41"/><text x="0.9861%" y="1087.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (130 samples, 0.11%)</title><rect x="0.6586%" y="1125" width="0.1145%" height="15" fill="rgb(233,36,39)" fg:x="748" fg:w="130"/><text x="0.9086%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (27 samples, 0.02%)</title><rect x="1.0954%" y="1093" width="0.0238%" height="15" fill="rgb(226,3,54)" fg:x="1244" fg:w="27"/><text x="1.3454%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (27 samples, 0.02%)</title><rect x="1.0954%" y="1077" width="0.0238%" height="15" fill="rgb(245,192,40)" fg:x="1244" fg:w="27"/><text x="1.3454%" y="1087.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (73 samples, 0.06%)</title><rect x="1.0628%" y="1109" width="0.0643%" height="15" fill="rgb(238,167,29)" fg:x="1207" fg:w="73"/><text x="1.3128%" y="1119.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="1.1271%" y="1093" width="0.0361%" height="15" fill="rgb(232,182,51)" fg:x="1280" fg:w="41"/><text x="1.3771%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="1.1350%" y="1077" width="0.0282%" height="15" fill="rgb(231,60,39)" fg:x="1289" fg:w="32"/><text x="1.3850%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (32 samples, 0.03%)</title><rect x="1.1350%" y="1061" width="0.0282%" height="15" fill="rgb(208,69,12)" fg:x="1289" fg:w="32"/><text x="1.3850%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (32 samples, 0.03%)</title><rect x="1.1350%" y="1045" width="0.0282%" height="15" fill="rgb(235,93,37)" fg:x="1289" fg:w="32"/><text x="1.3850%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (32 samples, 0.03%)</title><rect x="1.1350%" y="1029" width="0.0282%" height="15" fill="rgb(213,116,39)" fg:x="1289" fg:w="32"/><text x="1.3850%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.03%)</title><rect x="1.1350%" y="1013" width="0.0282%" height="15" fill="rgb(222,207,29)" fg:x="1289" fg:w="32"/><text x="1.3850%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.03%)</title><rect x="1.1350%" y="997" width="0.0282%" height="15" fill="rgb(206,96,30)" fg:x="1289" fg:w="32"/><text x="1.3850%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.03%)</title><rect x="1.1350%" y="981" width="0.0282%" height="15" fill="rgb(218,138,4)" fg:x="1289" fg:w="32"/><text x="1.3850%" y="991.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (21 samples, 0.02%)</title><rect x="1.1447%" y="965" width="0.0185%" height="15" fill="rgb(250,191,14)" fg:x="1300" fg:w="21"/><text x="1.3947%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.02%)</title><rect x="1.1447%" y="949" width="0.0185%" height="15" fill="rgb(239,60,40)" fg:x="1300" fg:w="21"/><text x="1.3947%" y="959.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (55 samples, 0.05%)</title><rect x="1.1271%" y="1109" width="0.0484%" height="15" fill="rgb(206,27,48)" fg:x="1280" fg:w="55"/><text x="1.3771%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (14 samples, 0.01%)</title><rect x="1.1632%" y="1093" width="0.0123%" height="15" fill="rgb(225,35,8)" fg:x="1321" fg:w="14"/><text x="1.4132%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (14 samples, 0.01%)</title><rect x="1.1632%" y="1077" width="0.0123%" height="15" fill="rgb(250,213,24)" fg:x="1321" fg:w="14"/><text x="1.4132%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (14 samples, 0.01%)</title><rect x="1.1632%" y="1061" width="0.0123%" height="15" fill="rgb(247,123,22)" fg:x="1321" fg:w="14"/><text x="1.4132%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 0.01%)</title><rect x="1.1632%" y="1045" width="0.0123%" height="15" fill="rgb(231,138,38)" fg:x="1321" fg:w="14"/><text x="1.4132%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.01%)</title><rect x="1.1632%" y="1029" width="0.0123%" height="15" fill="rgb(231,145,46)" fg:x="1321" fg:w="14"/><text x="1.4132%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.01%)</title><rect x="1.1632%" y="1013" width="0.0123%" height="15" fill="rgb(251,118,11)" fg:x="1321" fg:w="14"/><text x="1.4132%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.01%)</title><rect x="1.1632%" y="997" width="0.0123%" height="15" fill="rgb(217,147,25)" fg:x="1321" fg:w="14"/><text x="1.4132%" y="1007.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="1.1755%" y="1109" width="0.0167%" height="15" fill="rgb(247,81,37)" fg:x="1335" fg:w="19"/><text x="1.4255%" y="1119.50"></text></g><g><title>async_task::runnable::Runnable::run (18 samples, 0.02%)</title><rect x="1.1764%" y="1093" width="0.0158%" height="15" fill="rgb(209,12,38)" fg:x="1336" fg:w="18"/><text x="1.4264%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="1.2372%" y="1093" width="0.0167%" height="15" fill="rgb(227,1,9)" fg:x="1405" fg:w="19"/><text x="1.4872%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (60 samples, 0.05%)</title><rect x="1.2037%" y="1109" width="0.0528%" height="15" fill="rgb(248,47,43)" fg:x="1367" fg:w="60"/><text x="1.4537%" y="1119.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (35 samples, 0.03%)</title><rect x="1.2618%" y="1109" width="0.0308%" height="15" fill="rgb(221,10,30)" fg:x="1433" fg:w="35"/><text x="1.5118%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="1.3261%" y="1093" width="0.0132%" height="15" fill="rgb(210,229,1)" fg:x="1506" fg:w="15"/><text x="1.5761%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.01%)</title><rect x="1.3261%" y="1077" width="0.0132%" height="15" fill="rgb(222,148,37)" fg:x="1506" fg:w="15"/><text x="1.5761%" y="1087.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (15 samples, 0.01%)</title><rect x="1.3261%" y="1061" width="0.0132%" height="15" fill="rgb(234,67,33)" fg:x="1506" fg:w="15"/><text x="1.5761%" y="1071.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="1.3261%" y="1045" width="0.0132%" height="15" fill="rgb(247,98,35)" fg:x="1506" fg:w="15"/><text x="1.5761%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (659 samples, 0.58%)</title><rect x="0.7731%" y="1125" width="0.5803%" height="15" fill="rgb(247,138,52)" fg:x="878" fg:w="659"/><text x="1.0231%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (69 samples, 0.06%)</title><rect x="1.2926%" y="1109" width="0.0608%" height="15" fill="rgb(213,79,30)" fg:x="1468" fg:w="69"/><text x="1.5426%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (29 samples, 0.03%)</title><rect x="1.4194%" y="1109" width="0.0255%" height="15" fill="rgb(246,177,23)" fg:x="1612" fg:w="29"/><text x="1.6694%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (29 samples, 0.03%)</title><rect x="1.4194%" y="1093" width="0.0255%" height="15" fill="rgb(230,62,27)" fg:x="1612" fg:w="29"/><text x="1.6694%" y="1103.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="1.4194%" y="1077" width="0.0255%" height="15" fill="rgb(216,154,8)" fg:x="1612" fg:w="29"/><text x="1.6694%" y="1087.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (29 samples, 0.03%)</title><rect x="1.4194%" y="1061" width="0.0255%" height="15" fill="rgb(244,35,45)" fg:x="1612" fg:w="29"/><text x="1.6694%" y="1071.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (29 samples, 0.03%)</title><rect x="1.4194%" y="1045" width="0.0255%" height="15" fill="rgb(251,115,12)" fg:x="1612" fg:w="29"/><text x="1.6694%" y="1055.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (135 samples, 0.12%)</title><rect x="1.3534%" y="1125" width="0.1189%" height="15" fill="rgb(240,54,50)" fg:x="1537" fg:w="135"/><text x="1.6034%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (31 samples, 0.03%)</title><rect x="1.4450%" y="1109" width="0.0273%" height="15" fill="rgb(233,84,52)" fg:x="1641" fg:w="31"/><text x="1.6950%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 0.03%)</title><rect x="1.4450%" y="1093" width="0.0273%" height="15" fill="rgb(207,117,47)" fg:x="1641" fg:w="31"/><text x="1.6950%" y="1103.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (31 samples, 0.03%)</title><rect x="1.4450%" y="1077" width="0.0273%" height="15" fill="rgb(249,43,39)" fg:x="1641" fg:w="31"/><text x="1.6950%" y="1087.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (31 samples, 0.03%)</title><rect x="1.4450%" y="1061" width="0.0273%" height="15" fill="rgb(209,38,44)" fg:x="1641" fg:w="31"/><text x="1.6950%" y="1071.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="1.4723%" y="1125" width="0.0167%" height="15" fill="rgb(236,212,23)" fg:x="1672" fg:w="19"/><text x="1.7223%" y="1135.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (60 samples, 0.05%)</title><rect x="1.4890%" y="1125" width="0.0528%" height="15" fill="rgb(242,79,21)" fg:x="1691" fg:w="60"/><text x="1.7390%" y="1135.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (30 samples, 0.03%)</title><rect x="1.5154%" y="1109" width="0.0264%" height="15" fill="rgb(211,96,35)" fg:x="1721" fg:w="30"/><text x="1.7654%" y="1119.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="1.5251%" y="1093" width="0.0167%" height="15" fill="rgb(253,215,40)" fg:x="1732" fg:w="19"/><text x="1.7751%" y="1103.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (27 samples, 0.02%)</title><rect x="1.5427%" y="1125" width="0.0238%" height="15" fill="rgb(211,81,21)" fg:x="1752" fg:w="27"/><text x="1.7927%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (12 samples, 0.01%)</title><rect x="1.5665%" y="1125" width="0.0106%" height="15" fill="rgb(208,190,38)" fg:x="1779" fg:w="12"/><text x="1.8165%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (199 samples, 0.18%)</title><rect x="1.5771%" y="1125" width="0.1752%" height="15" fill="rgb(235,213,38)" fg:x="1791" fg:w="199"/><text x="1.8271%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (91 samples, 0.08%)</title><rect x="1.6722%" y="1109" width="0.0801%" height="15" fill="rgb(237,122,38)" fg:x="1899" fg:w="91"/><text x="1.9222%" y="1119.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (70 samples, 0.06%)</title><rect x="1.6906%" y="1093" width="0.0616%" height="15" fill="rgb(244,218,35)" fg:x="1920" fg:w="70"/><text x="1.9406%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (31 samples, 0.03%)</title><rect x="1.7250%" y="1077" width="0.0273%" height="15" fill="rgb(240,68,47)" fg:x="1959" fg:w="31"/><text x="1.9750%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (28 samples, 0.02%)</title><rect x="1.7276%" y="1061" width="0.0247%" height="15" fill="rgb(210,16,53)" fg:x="1962" fg:w="28"/><text x="1.9776%" y="1071.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (28 samples, 0.02%)</title><rect x="1.7276%" y="1045" width="0.0247%" height="15" fill="rgb(235,124,12)" fg:x="1962" fg:w="28"/><text x="1.9776%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (28 samples, 0.02%)</title><rect x="1.7276%" y="1029" width="0.0247%" height="15" fill="rgb(224,169,11)" fg:x="1962" fg:w="28"/><text x="1.9776%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.02%)</title><rect x="1.7276%" y="1013" width="0.0247%" height="15" fill="rgb(250,166,2)" fg:x="1962" fg:w="28"/><text x="1.9776%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.02%)</title><rect x="1.7276%" y="997" width="0.0247%" height="15" fill="rgb(242,216,29)" fg:x="1962" fg:w="28"/><text x="1.9776%" y="1007.50"></text></g><g><title>__rg_dealloc (28 samples, 0.02%)</title><rect x="1.7276%" y="981" width="0.0247%" height="15" fill="rgb(230,116,27)" fg:x="1962" fg:w="28"/><text x="1.9776%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (28 samples, 0.02%)</title><rect x="1.7276%" y="965" width="0.0247%" height="15" fill="rgb(228,99,48)" fg:x="1962" fg:w="28"/><text x="1.9776%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (15 samples, 0.01%)</title><rect x="1.7690%" y="1061" width="0.0132%" height="15" fill="rgb(253,11,6)" fg:x="2009" fg:w="15"/><text x="2.0190%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (15 samples, 0.01%)</title><rect x="1.7690%" y="1045" width="0.0132%" height="15" fill="rgb(247,143,39)" fg:x="2009" fg:w="15"/><text x="2.0190%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (15 samples, 0.01%)</title><rect x="1.7690%" y="1029" width="0.0132%" height="15" fill="rgb(236,97,10)" fg:x="2009" fg:w="15"/><text x="2.0190%" y="1039.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (15 samples, 0.01%)</title><rect x="1.7690%" y="1013" width="0.0132%" height="15" fill="rgb(233,208,19)" fg:x="2009" fg:w="15"/><text x="2.0190%" y="1023.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="1.7690%" y="997" width="0.0132%" height="15" fill="rgb(216,164,2)" fg:x="2009" fg:w="15"/><text x="2.0190%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="1.7690%" y="981" width="0.0132%" height="15" fill="rgb(220,129,5)" fg:x="2009" fg:w="15"/><text x="2.0190%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.01%)</title><rect x="1.7690%" y="965" width="0.0132%" height="15" fill="rgb(242,17,10)" fg:x="2009" fg:w="15"/><text x="2.0190%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="1.7690%" y="949" width="0.0132%" height="15" fill="rgb(242,107,0)" fg:x="2009" fg:w="15"/><text x="2.0190%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="1.7690%" y="933" width="0.0132%" height="15" fill="rgb(251,28,31)" fg:x="2009" fg:w="15"/><text x="2.0190%" y="943.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="1.7690%" y="917" width="0.0132%" height="15" fill="rgb(233,223,10)" fg:x="2009" fg:w="15"/><text x="2.0190%" y="927.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="1.7690%" y="901" width="0.0132%" height="15" fill="rgb(215,21,27)" fg:x="2009" fg:w="15"/><text x="2.0190%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="1.7690%" y="885" width="0.0132%" height="15" fill="rgb(232,23,21)" fg:x="2009" fg:w="15"/><text x="2.0190%" y="895.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (39 samples, 0.03%)</title><rect x="1.7523%" y="1125" width="0.0343%" height="15" fill="rgb(244,5,23)" fg:x="1990" fg:w="39"/><text x="2.0023%" y="1135.50"></text></g><g><title>value_trait::Builder::object (20 samples, 0.02%)</title><rect x="1.7690%" y="1109" width="0.0176%" height="15" fill="rgb(226,81,46)" fg:x="2009" fg:w="20"/><text x="2.0190%" y="1119.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (20 samples, 0.02%)</title><rect x="1.7690%" y="1093" width="0.0176%" height="15" fill="rgb(247,70,30)" fg:x="2009" fg:w="20"/><text x="2.0190%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (20 samples, 0.02%)</title><rect x="1.7690%" y="1077" width="0.0176%" height="15" fill="rgb(212,68,19)" fg:x="2009" fg:w="20"/><text x="2.0190%" y="1087.50"></text></g><g><title>___pthread_mutex_lock (45 samples, 0.04%)</title><rect x="1.8218%" y="1125" width="0.0396%" height="15" fill="rgb(240,187,13)" fg:x="2069" fg:w="45"/><text x="2.0718%" y="1135.50"></text></g><g><title>___pthread_rwlock_unlock (21 samples, 0.02%)</title><rect x="1.8659%" y="1125" width="0.0185%" height="15" fill="rgb(223,113,26)" fg:x="2119" fg:w="21"/><text x="2.1159%" y="1135.50"></text></g><g><title>__clock_gettime_2 (65 samples, 0.06%)</title><rect x="1.8844%" y="1125" width="0.0572%" height="15" fill="rgb(206,192,2)" fg:x="2140" fg:w="65"/><text x="2.1344%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (45 samples, 0.04%)</title><rect x="1.9504%" y="1125" width="0.0396%" height="15" fill="rgb(241,108,4)" fg:x="2215" fg:w="45"/><text x="2.2004%" y="1135.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (73 samples, 0.06%)</title><rect x="2.0138%" y="1125" width="0.0643%" height="15" fill="rgb(247,173,49)" fg:x="2287" fg:w="73"/><text x="2.2638%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (21 samples, 0.02%)</title><rect x="2.0781%" y="1125" width="0.0185%" height="15" fill="rgb(224,114,35)" fg:x="2360" fg:w="21"/><text x="2.3281%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (13 samples, 0.01%)</title><rect x="2.0975%" y="1125" width="0.0114%" height="15" fill="rgb(245,159,27)" fg:x="2382" fg:w="13"/><text x="2.3475%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (51 samples, 0.04%)</title><rect x="2.1133%" y="1125" width="0.0449%" height="15" fill="rgb(245,172,44)" fg:x="2400" fg:w="51"/><text x="2.3633%" y="1135.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (37 samples, 0.03%)</title><rect x="2.1256%" y="1109" width="0.0326%" height="15" fill="rgb(236,23,11)" fg:x="2414" fg:w="37"/><text x="2.3756%" y="1119.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (37 samples, 0.03%)</title><rect x="2.1256%" y="1093" width="0.0326%" height="15" fill="rgb(205,117,38)" fg:x="2414" fg:w="37"/><text x="2.3756%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (15 samples, 0.01%)</title><rect x="2.1582%" y="1125" width="0.0132%" height="15" fill="rgb(237,72,25)" fg:x="2451" fg:w="15"/><text x="2.4082%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 0.09%)</title><rect x="2.2674%" y="1061" width="0.0863%" height="15" fill="rgb(244,70,9)" fg:x="2575" fg:w="98"/><text x="2.5174%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (98 samples, 0.09%)</title><rect x="2.2674%" y="1045" width="0.0863%" height="15" fill="rgb(217,125,39)" fg:x="2575" fg:w="98"/><text x="2.5174%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (98 samples, 0.09%)</title><rect x="2.2674%" y="1029" width="0.0863%" height="15" fill="rgb(235,36,10)" fg:x="2575" fg:w="98"/><text x="2.5174%" y="1039.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (98 samples, 0.09%)</title><rect x="2.2674%" y="1013" width="0.0863%" height="15" fill="rgb(251,123,47)" fg:x="2575" fg:w="98"/><text x="2.5174%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (109 samples, 0.10%)</title><rect x="2.2674%" y="1077" width="0.0960%" height="15" fill="rgb(221,13,13)" fg:x="2575" fg:w="109"/><text x="2.5174%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.06%)</title><rect x="2.3634%" y="1061" width="0.0572%" height="15" fill="rgb(238,131,9)" fg:x="2684" fg:w="65"/><text x="2.6134%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (65 samples, 0.06%)</title><rect x="2.3634%" y="1045" width="0.0572%" height="15" fill="rgb(211,50,8)" fg:x="2684" fg:w="65"/><text x="2.6134%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (65 samples, 0.06%)</title><rect x="2.3634%" y="1029" width="0.0572%" height="15" fill="rgb(245,182,24)" fg:x="2684" fg:w="65"/><text x="2.6134%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (65 samples, 0.06%)</title><rect x="2.3634%" y="1013" width="0.0572%" height="15" fill="rgb(242,14,37)" fg:x="2684" fg:w="65"/><text x="2.6134%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (65 samples, 0.06%)</title><rect x="2.3634%" y="997" width="0.0572%" height="15" fill="rgb(246,228,12)" fg:x="2684" fg:w="65"/><text x="2.6134%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (70 samples, 0.06%)</title><rect x="2.3634%" y="1077" width="0.0616%" height="15" fill="rgb(213,55,15)" fg:x="2684" fg:w="70"/><text x="2.6134%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (298 samples, 0.26%)</title><rect x="2.1714%" y="1125" width="0.2624%" height="15" fill="rgb(209,9,3)" fg:x="2466" fg:w="298"/><text x="2.4214%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (189 samples, 0.17%)</title><rect x="2.2674%" y="1109" width="0.1664%" height="15" fill="rgb(230,59,30)" fg:x="2575" fg:w="189"/><text x="2.5174%" y="1119.50"></text></g><g><title>core::mem::drop (189 samples, 0.17%)</title><rect x="2.2674%" y="1093" width="0.1664%" height="15" fill="rgb(209,121,21)" fg:x="2575" fg:w="189"/><text x="2.5174%" y="1103.50"></text></g><g><title>async_executor::Ticker::sleep (44 samples, 0.04%)</title><rect x="2.4541%" y="1125" width="0.0387%" height="15" fill="rgb(220,109,13)" fg:x="2787" fg:w="44"/><text x="2.7041%" y="1135.50"></text></g><g><title>async_executor::Ticker::wake (21 samples, 0.02%)</title><rect x="2.4928%" y="1125" width="0.0185%" height="15" fill="rgb(232,18,1)" fg:x="2831" fg:w="21"/><text x="2.7428%" y="1135.50"></text></g><g><title>async_executor::steal (158 samples, 0.14%)</title><rect x="2.5113%" y="1125" width="0.1391%" height="15" fill="rgb(215,41,42)" fg:x="2852" fg:w="158"/><text x="2.7613%" y="1135.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="2.6504%" y="1125" width="0.0106%" height="15" fill="rgb(224,123,36)" fg:x="3010" fg:w="12"/><text x="2.9004%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (28 samples, 0.02%)</title><rect x="2.6610%" y="1125" width="0.0247%" height="15" fill="rgb(240,125,3)" fg:x="3022" fg:w="28"/><text x="2.9110%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (19 samples, 0.02%)</title><rect x="2.6857%" y="1125" width="0.0167%" height="15" fill="rgb(205,98,50)" fg:x="3050" fg:w="19"/><text x="2.9357%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (35 samples, 0.03%)</title><rect x="2.7165%" y="1125" width="0.0308%" height="15" fill="rgb(205,185,37)" fg:x="3085" fg:w="35"/><text x="2.9665%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (122 samples, 0.11%)</title><rect x="2.7508%" y="1125" width="0.1074%" height="15" fill="rgb(238,207,15)" fg:x="3124" fg:w="122"/><text x="3.0008%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (108 samples, 0.10%)</title><rect x="2.8582%" y="1125" width="0.0951%" height="15" fill="rgb(213,199,42)" fg:x="3246" fg:w="108"/><text x="3.1082%" y="1135.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (37 samples, 0.03%)</title><rect x="2.9533%" y="1125" width="0.0326%" height="15" fill="rgb(235,201,11)" fg:x="3354" fg:w="37"/><text x="3.2033%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (62 samples, 0.05%)</title><rect x="2.9886%" y="1125" width="0.0546%" height="15" fill="rgb(207,46,11)" fg:x="3394" fg:w="62"/><text x="3.2386%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (27 samples, 0.02%)</title><rect x="3.0194%" y="1109" width="0.0238%" height="15" fill="rgb(241,35,35)" fg:x="3429" fg:w="27"/><text x="3.2694%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (23 samples, 0.02%)</title><rect x="3.0229%" y="1093" width="0.0203%" height="15" fill="rgb(243,32,47)" fg:x="3433" fg:w="23"/><text x="3.2729%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (14 samples, 0.01%)</title><rect x="3.0432%" y="1125" width="0.0123%" height="15" fill="rgb(247,202,23)" fg:x="3456" fg:w="14"/><text x="3.2932%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (36 samples, 0.03%)</title><rect x="3.0555%" y="1125" width="0.0317%" height="15" fill="rgb(219,102,11)" fg:x="3470" fg:w="36"/><text x="3.3055%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt; (36 samples, 0.03%)</title><rect x="3.0555%" y="1109" width="0.0317%" height="15" fill="rgb(243,110,44)" fg:x="3470" fg:w="36"/><text x="3.3055%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="3.0872%" y="1125" width="0.0141%" height="15" fill="rgb(222,74,54)" fg:x="3506" fg:w="16"/><text x="3.3372%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (24 samples, 0.02%)</title><rect x="3.1013%" y="1125" width="0.0211%" height="15" fill="rgb(216,99,12)" fg:x="3522" fg:w="24"/><text x="3.3513%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (39 samples, 0.03%)</title><rect x="3.1224%" y="1125" width="0.0343%" height="15" fill="rgb(226,22,26)" fg:x="3546" fg:w="39"/><text x="3.3724%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (22 samples, 0.02%)</title><rect x="3.1374%" y="1109" width="0.0194%" height="15" fill="rgb(217,163,10)" fg:x="3563" fg:w="22"/><text x="3.3874%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (36 samples, 0.03%)</title><rect x="3.1568%" y="1125" width="0.0317%" height="15" fill="rgb(213,25,53)" fg:x="3585" fg:w="36"/><text x="3.4068%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (14 samples, 0.01%)</title><rect x="3.2034%" y="1125" width="0.0123%" height="15" fill="rgb(252,105,26)" fg:x="3638" fg:w="14"/><text x="3.4534%" y="1135.50"></text></g><g><title>event_listener::List::notify (34 samples, 0.03%)</title><rect x="3.2158%" y="1125" width="0.0299%" height="15" fill="rgb(220,39,43)" fg:x="3652" fg:w="34"/><text x="3.4658%" y="1135.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (70 samples, 0.06%)</title><rect x="3.2457%" y="1125" width="0.0616%" height="15" fill="rgb(229,68,48)" fg:x="3686" fg:w="70"/><text x="3.4957%" y="1135.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (14 samples, 0.01%)</title><rect x="3.2950%" y="1109" width="0.0123%" height="15" fill="rgb(252,8,32)" fg:x="3742" fg:w="14"/><text x="3.5450%" y="1119.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (14 samples, 0.01%)</title><rect x="3.2950%" y="1093" width="0.0123%" height="15" fill="rgb(223,20,43)" fg:x="3742" fg:w="14"/><text x="3.5450%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.01%)</title><rect x="3.2950%" y="1077" width="0.0123%" height="15" fill="rgb(229,81,49)" fg:x="3742" fg:w="14"/><text x="3.5450%" y="1087.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (14 samples, 0.01%)</title><rect x="3.2950%" y="1061" width="0.0123%" height="15" fill="rgb(236,28,36)" fg:x="3742" fg:w="14"/><text x="3.5450%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.01%)</title><rect x="3.2950%" y="1045" width="0.0123%" height="15" fill="rgb(249,185,26)" fg:x="3742" fg:w="14"/><text x="3.5450%" y="1055.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (14 samples, 0.01%)</title><rect x="3.2950%" y="1029" width="0.0123%" height="15" fill="rgb(249,174,33)" fg:x="3742" fg:w="14"/><text x="3.5450%" y="1039.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (14 samples, 0.01%)</title><rect x="3.2950%" y="1013" width="0.0123%" height="15" fill="rgb(233,201,37)" fg:x="3742" fg:w="14"/><text x="3.5450%" y="1023.50"></text></g><g><title>hashbrown::raw::inner::RawIter&lt;T&gt;::drop_elements (13 samples, 0.01%)</title><rect x="3.3073%" y="1125" width="0.0114%" height="15" fill="rgb(221,78,26)" fg:x="3756" fg:w="13"/><text x="3.5573%" y="1135.50"></text></g><g><title>parking::Inner::park (38 samples, 0.03%)</title><rect x="3.3188%" y="1125" width="0.0335%" height="15" fill="rgb(250,127,30)" fg:x="3769" fg:w="38"/><text x="3.5688%" y="1135.50"></text></g><g><title>parking::Unparker::unpark (13 samples, 0.01%)</title><rect x="3.3522%" y="1125" width="0.0114%" height="15" fill="rgb(230,49,44)" fg:x="3807" fg:w="13"/><text x="3.6022%" y="1135.50"></text></g><g><title>rust_alloc (53 samples, 0.05%)</title><rect x="3.3813%" y="1125" width="0.0467%" height="15" fill="rgb(229,67,23)" fg:x="3840" fg:w="53"/><text x="3.6313%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (39 samples, 0.03%)</title><rect x="3.4517%" y="1125" width="0.0343%" height="15" fill="rgb(249,83,47)" fg:x="3920" fg:w="39"/><text x="3.7017%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (60 samples, 0.05%)</title><rect x="3.4870%" y="1125" width="0.0528%" height="15" fill="rgb(215,43,3)" fg:x="3960" fg:w="60"/><text x="3.7370%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (88 samples, 0.08%)</title><rect x="3.5398%" y="1125" width="0.0775%" height="15" fill="rgb(238,154,13)" fg:x="4020" fg:w="88"/><text x="3.7898%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (61 samples, 0.05%)</title><rect x="3.5636%" y="1109" width="0.0537%" height="15" fill="rgb(219,56,2)" fg:x="4047" fg:w="61"/><text x="3.8136%" y="1119.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (40 samples, 0.04%)</title><rect x="3.5821%" y="1093" width="0.0352%" height="15" fill="rgb(233,0,4)" fg:x="4068" fg:w="40"/><text x="3.8321%" y="1103.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (40 samples, 0.04%)</title><rect x="3.5821%" y="1077" width="0.0352%" height="15" fill="rgb(235,30,7)" fg:x="4068" fg:w="40"/><text x="3.8321%" y="1087.50"></text></g><g><title>anon.d22d9956963e8ad988d59723773a7312.1.llvm.10361100436754576773 (40 samples, 0.04%)</title><rect x="3.5821%" y="1061" width="0.0352%" height="15" fill="rgb(250,79,13)" fg:x="4068" fg:w="40"/><text x="3.8321%" y="1071.50"></text></g><g><title>value_trait::Builder::object (13 samples, 0.01%)</title><rect x="3.6058%" y="1045" width="0.0114%" height="15" fill="rgb(211,146,34)" fg:x="4095" fg:w="13"/><text x="3.8558%" y="1055.50"></text></g><g><title>tremor_common::time::nanotime (56 samples, 0.05%)</title><rect x="3.6173%" y="1125" width="0.0493%" height="15" fill="rgb(228,22,38)" fg:x="4108" fg:w="56"/><text x="3.8673%" y="1135.50"></text></g><g><title>std::time::SystemTime::now (55 samples, 0.05%)</title><rect x="3.6182%" y="1109" width="0.0484%" height="15" fill="rgb(235,168,5)" fg:x="4109" fg:w="55"/><text x="3.8682%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (55 samples, 0.05%)</title><rect x="3.6182%" y="1093" width="0.0484%" height="15" fill="rgb(221,155,16)" fg:x="4109" fg:w="55"/><text x="3.8682%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::now (55 samples, 0.05%)</title><rect x="3.6182%" y="1077" width="0.0484%" height="15" fill="rgb(215,215,53)" fg:x="4109" fg:w="55"/><text x="3.8682%" y="1087.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.01%)</title><rect x="3.7397%" y="1109" width="0.0150%" height="15" fill="rgb(223,4,10)" fg:x="4247" fg:w="17"/><text x="3.9897%" y="1119.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="3.7635%" y="1077" width="0.0106%" height="15" fill="rgb(234,103,6)" fg:x="4274" fg:w="12"/><text x="4.0135%" y="1087.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="3.7635%" y="1061" width="0.0106%" height="15" fill="rgb(227,97,0)" fg:x="4274" fg:w="12"/><text x="4.0135%" y="1071.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (12 samples, 0.01%)</title><rect x="3.7635%" y="1045" width="0.0106%" height="15" fill="rgb(234,150,53)" fg:x="4274" fg:w="12"/><text x="4.0135%" y="1055.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (12 samples, 0.01%)</title><rect x="3.7635%" y="1029" width="0.0106%" height="15" fill="rgb(228,201,54)" fg:x="4274" fg:w="12"/><text x="4.0135%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (52 samples, 0.05%)</title><rect x="3.7546%" y="1109" width="0.0458%" height="15" fill="rgb(222,22,37)" fg:x="4264" fg:w="52"/><text x="4.0046%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (52 samples, 0.05%)</title><rect x="3.7546%" y="1093" width="0.0458%" height="15" fill="rgb(237,53,32)" fg:x="4264" fg:w="52"/><text x="4.0046%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (20 samples, 0.02%)</title><rect x="3.7828%" y="1077" width="0.0176%" height="15" fill="rgb(233,25,53)" fg:x="4296" fg:w="20"/><text x="4.0328%" y="1087.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (13 samples, 0.01%)</title><rect x="3.8004%" y="1109" width="0.0114%" height="15" fill="rgb(210,40,34)" fg:x="4316" fg:w="13"/><text x="4.0504%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (14 samples, 0.01%)</title><rect x="3.8119%" y="1109" width="0.0123%" height="15" fill="rgb(241,220,44)" fg:x="4329" fg:w="14"/><text x="4.0619%" y="1119.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="3.8119%" y="1093" width="0.0123%" height="15" fill="rgb(235,28,35)" fg:x="4329" fg:w="14"/><text x="4.0619%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (14 samples, 0.01%)</title><rect x="3.8119%" y="1077" width="0.0123%" height="15" fill="rgb(210,56,17)" fg:x="4329" fg:w="14"/><text x="4.0619%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="3.8119%" y="1061" width="0.0123%" height="15" fill="rgb(224,130,29)" fg:x="4329" fg:w="14"/><text x="4.0619%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="3.8119%" y="1045" width="0.0123%" height="15" fill="rgb(235,212,8)" fg:x="4329" fg:w="14"/><text x="4.0619%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="3.8119%" y="1029" width="0.0123%" height="15" fill="rgb(223,33,50)" fg:x="4329" fg:w="14"/><text x="4.0619%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="3.8119%" y="1013" width="0.0123%" height="15" fill="rgb(219,149,13)" fg:x="4329" fg:w="14"/><text x="4.0619%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="3.8119%" y="997" width="0.0123%" height="15" fill="rgb(250,156,29)" fg:x="4329" fg:w="14"/><text x="4.0619%" y="1007.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="3.8119%" y="981" width="0.0123%" height="15" fill="rgb(216,193,19)" fg:x="4329" fg:w="14"/><text x="4.0619%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="3.8119%" y="965" width="0.0123%" height="15" fill="rgb(216,135,14)" fg:x="4329" fg:w="14"/><text x="4.0619%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (23 samples, 0.02%)</title><rect x="3.8242%" y="1093" width="0.0203%" height="15" fill="rgb(241,47,5)" fg:x="4343" fg:w="23"/><text x="4.0742%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (208 samples, 0.18%)</title><rect x="3.6692%" y="1125" width="0.1832%" height="15" fill="rgb(233,42,35)" fg:x="4167" fg:w="208"/><text x="3.9192%" y="1135.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (32 samples, 0.03%)</title><rect x="3.8242%" y="1109" width="0.0282%" height="15" fill="rgb(231,13,6)" fg:x="4343" fg:w="32"/><text x="4.0742%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (18 samples, 0.02%)</title><rect x="3.8524%" y="1125" width="0.0158%" height="15" fill="rgb(207,181,40)" fg:x="4375" fg:w="18"/><text x="4.1024%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="3.9378%" y="981" width="0.0132%" height="15" fill="rgb(254,173,49)" fg:x="4472" fg:w="15"/><text x="4.1878%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="3.9378%" y="965" width="0.0132%" height="15" fill="rgb(221,1,38)" fg:x="4472" fg:w="15"/><text x="4.1878%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.01%)</title><rect x="3.9378%" y="949" width="0.0132%" height="15" fill="rgb(206,124,46)" fg:x="4472" fg:w="15"/><text x="4.1878%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="3.9378%" y="933" width="0.0132%" height="15" fill="rgb(249,21,11)" fg:x="4472" fg:w="15"/><text x="4.1878%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="3.9378%" y="917" width="0.0132%" height="15" fill="rgb(222,201,40)" fg:x="4472" fg:w="15"/><text x="4.1878%" y="927.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="3.9378%" y="901" width="0.0132%" height="15" fill="rgb(235,61,29)" fg:x="4472" fg:w="15"/><text x="4.1878%" y="911.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="3.9378%" y="885" width="0.0132%" height="15" fill="rgb(219,207,3)" fg:x="4472" fg:w="15"/><text x="4.1878%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="3.9378%" y="869" width="0.0132%" height="15" fill="rgb(222,56,46)" fg:x="4472" fg:w="15"/><text x="4.1878%" y="879.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="3.9378%" y="1109" width="0.0203%" height="15" fill="rgb(239,76,54)" fg:x="4472" fg:w="23"/><text x="4.1878%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="3.9378%" y="1093" width="0.0203%" height="15" fill="rgb(231,124,27)" fg:x="4472" fg:w="23"/><text x="4.1878%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (23 samples, 0.02%)</title><rect x="3.9378%" y="1077" width="0.0203%" height="15" fill="rgb(249,195,6)" fg:x="4472" fg:w="23"/><text x="4.1878%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (23 samples, 0.02%)</title><rect x="3.9378%" y="1061" width="0.0203%" height="15" fill="rgb(237,174,47)" fg:x="4472" fg:w="23"/><text x="4.1878%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (23 samples, 0.02%)</title><rect x="3.9378%" y="1045" width="0.0203%" height="15" fill="rgb(206,201,31)" fg:x="4472" fg:w="23"/><text x="4.1878%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.02%)</title><rect x="3.9378%" y="1029" width="0.0203%" height="15" fill="rgb(231,57,52)" fg:x="4472" fg:w="23"/><text x="4.1878%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.02%)</title><rect x="3.9378%" y="1013" width="0.0203%" height="15" fill="rgb(248,177,22)" fg:x="4472" fg:w="23"/><text x="4.1878%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.02%)</title><rect x="3.9378%" y="997" width="0.0203%" height="15" fill="rgb(215,211,37)" fg:x="4472" fg:w="23"/><text x="4.1878%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (13 samples, 0.01%)</title><rect x="3.9774%" y="1093" width="0.0114%" height="15" fill="rgb(241,128,51)" fg:x="4517" fg:w="13"/><text x="4.2274%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="3.9774%" y="1077" width="0.0114%" height="15" fill="rgb(227,165,31)" fg:x="4517" fg:w="13"/><text x="4.2274%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (13 samples, 0.01%)</title><rect x="3.9774%" y="1061" width="0.0114%" height="15" fill="rgb(228,167,24)" fg:x="4517" fg:w="13"/><text x="4.2274%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (145 samples, 0.13%)</title><rect x="3.8682%" y="1125" width="0.1277%" height="15" fill="rgb(228,143,12)" fg:x="4393" fg:w="145"/><text x="4.1182%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (21 samples, 0.02%)</title><rect x="3.9774%" y="1109" width="0.0185%" height="15" fill="rgb(249,149,8)" fg:x="4517" fg:w="21"/><text x="4.2274%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (15 samples, 0.01%)</title><rect x="3.9959%" y="1125" width="0.0132%" height="15" fill="rgb(243,35,44)" fg:x="4538" fg:w="15"/><text x="4.2459%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (19 samples, 0.02%)</title><rect x="4.0091%" y="1125" width="0.0167%" height="15" fill="rgb(246,89,9)" fg:x="4553" fg:w="19"/><text x="4.2591%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="4.0954%" y="1109" width="0.0203%" height="15" fill="rgb(233,213,13)" fg:x="4651" fg:w="23"/><text x="4.3454%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.02%)</title><rect x="4.1430%" y="1077" width="0.0158%" height="15" fill="rgb(233,141,41)" fg:x="4705" fg:w="18"/><text x="4.3930%" y="1087.50"></text></g><g><title>core::ptr::write (18 samples, 0.02%)</title><rect x="4.1430%" y="1061" width="0.0158%" height="15" fill="rgb(239,167,4)" fg:x="4705" fg:w="18"/><text x="4.3930%" y="1071.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (155 samples, 0.14%)</title><rect x="4.0259%" y="1125" width="0.1365%" height="15" fill="rgb(209,217,16)" fg:x="4572" fg:w="155"/><text x="4.2759%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.05%)</title><rect x="4.1157%" y="1109" width="0.0467%" height="15" fill="rgb(219,88,35)" fg:x="4674" fg:w="53"/><text x="4.3657%" y="1119.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (53 samples, 0.05%)</title><rect x="4.1157%" y="1093" width="0.0467%" height="15" fill="rgb(220,193,23)" fg:x="4674" fg:w="53"/><text x="4.3657%" y="1103.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (52 samples, 0.05%)</title><rect x="4.1623%" y="1125" width="0.0458%" height="15" fill="rgb(230,90,52)" fg:x="4727" fg:w="52"/><text x="4.4123%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (30 samples, 0.03%)</title><rect x="4.1817%" y="1109" width="0.0264%" height="15" fill="rgb(252,106,19)" fg:x="4749" fg:w="30"/><text x="4.4317%" y="1119.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="4.1976%" y="1093" width="0.0106%" height="15" fill="rgb(206,74,20)" fg:x="4767" fg:w="12"/><text x="4.4476%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="4.1976%" y="1077" width="0.0106%" height="15" fill="rgb(230,138,44)" fg:x="4767" fg:w="12"/><text x="4.4476%" y="1087.50"></text></g><g><title>[anon] (4,198 samples, 3.70%)</title><rect x="0.5213%" y="1141" width="3.6965%" height="15" fill="rgb(235,182,43)" fg:x="592" fg:w="4198"/><text x="0.7713%" y="1151.50">[ano..</text></g><g><title>[libc.so.6] (26 samples, 0.02%)</title><rect x="4.2178%" y="1141" width="0.0229%" height="15" fill="rgb(242,16,51)" fg:x="4790" fg:w="26"/><text x="4.4678%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (135 samples, 0.12%)</title><rect x="4.2407%" y="1125" width="0.1189%" height="15" fill="rgb(248,9,4)" fg:x="4816" fg:w="135"/><text x="4.4907%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (25 samples, 0.02%)</title><rect x="4.3376%" y="1109" width="0.0220%" height="15" fill="rgb(210,31,22)" fg:x="4926" fg:w="25"/><text x="4.5876%" y="1119.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (98 samples, 0.09%)</title><rect x="4.3613%" y="1125" width="0.0863%" height="15" fill="rgb(239,54,39)" fg:x="4953" fg:w="98"/><text x="4.6113%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (98 samples, 0.09%)</title><rect x="4.3613%" y="1109" width="0.0863%" height="15" fill="rgb(230,99,41)" fg:x="4953" fg:w="98"/><text x="4.6113%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;halfbrown::iter::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt; (98 samples, 0.09%)</title><rect x="4.3613%" y="1093" width="0.0863%" height="15" fill="rgb(253,106,12)" fg:x="4953" fg:w="98"/><text x="4.6113%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (98 samples, 0.09%)</title><rect x="4.3613%" y="1077" width="0.0863%" height="15" fill="rgb(213,46,41)" fg:x="4953" fg:w="98"/><text x="4.6113%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (18 samples, 0.02%)</title><rect x="4.4556%" y="1125" width="0.0158%" height="15" fill="rgb(215,133,35)" fg:x="5060" fg:w="18"/><text x="4.7056%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (21 samples, 0.02%)</title><rect x="4.4714%" y="1125" width="0.0185%" height="15" fill="rgb(213,28,5)" fg:x="5078" fg:w="21"/><text x="4.7214%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (15 samples, 0.01%)</title><rect x="4.4899%" y="1125" width="0.0132%" height="15" fill="rgb(215,77,49)" fg:x="5099" fg:w="15"/><text x="4.7399%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (34 samples, 0.03%)</title><rect x="4.5031%" y="1125" width="0.0299%" height="15" fill="rgb(248,100,22)" fg:x="5114" fg:w="34"/><text x="4.7531%" y="1135.50"></text></g><g><title>hashbrown::raw::inner::RawIter&lt;T&gt;::drop_elements (23 samples, 0.02%)</title><rect x="4.5339%" y="1125" width="0.0203%" height="15" fill="rgb(208,67,9)" fg:x="5149" fg:w="23"/><text x="4.7839%" y="1135.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (13 samples, 0.01%)</title><rect x="4.5542%" y="1125" width="0.0114%" height="15" fill="rgb(219,133,21)" fg:x="5172" fg:w="13"/><text x="4.8042%" y="1135.50"></text></g><g><title>[tremor-pdk-halfbrown] (422 samples, 0.37%)</title><rect x="4.2407%" y="1141" width="0.3716%" height="15" fill="rgb(246,46,29)" fg:x="4816" fg:w="422"/><text x="4.4907%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (38 samples, 0.03%)</title><rect x="4.5788%" y="1125" width="0.0335%" height="15" fill="rgb(246,185,52)" fg:x="5200" fg:w="38"/><text x="4.8288%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (27 samples, 0.02%)</title><rect x="4.5885%" y="1109" width="0.0238%" height="15" fill="rgb(252,136,11)" fg:x="5211" fg:w="27"/><text x="4.8385%" y="1119.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (27 samples, 0.02%)</title><rect x="4.5885%" y="1093" width="0.0238%" height="15" fill="rgb(219,138,53)" fg:x="5211" fg:w="27"/><text x="4.8385%" y="1103.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (27 samples, 0.02%)</title><rect x="4.5885%" y="1077" width="0.0238%" height="15" fill="rgb(211,51,23)" fg:x="5211" fg:w="27"/><text x="4.8385%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (27 samples, 0.02%)</title><rect x="4.5885%" y="1061" width="0.0238%" height="15" fill="rgb(247,221,28)" fg:x="5211" fg:w="27"/><text x="4.8385%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (27 samples, 0.02%)</title><rect x="4.5885%" y="1045" width="0.0238%" height="15" fill="rgb(251,222,45)" fg:x="5211" fg:w="27"/><text x="4.8385%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="4.6017%" y="1029" width="0.0106%" height="15" fill="rgb(217,162,53)" fg:x="5226" fg:w="12"/><text x="4.8517%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="4.6017%" y="1013" width="0.0106%" height="15" fill="rgb(229,93,14)" fg:x="5226" fg:w="12"/><text x="4.8517%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="4.6017%" y="997" width="0.0106%" height="15" fill="rgb(209,67,49)" fg:x="5226" fg:w="12"/><text x="4.8517%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="4.6017%" y="981" width="0.0106%" height="15" fill="rgb(213,87,29)" fg:x="5226" fg:w="12"/><text x="4.8517%" y="991.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="4.6017%" y="965" width="0.0106%" height="15" fill="rgb(205,151,52)" fg:x="5226" fg:w="12"/><text x="4.8517%" y="975.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="4.6017%" y="949" width="0.0106%" height="15" fill="rgb(253,215,39)" fg:x="5226" fg:w="12"/><text x="4.8517%" y="959.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (39 samples, 0.03%)</title><rect x="4.7092%" y="1109" width="0.0343%" height="15" fill="rgb(221,220,41)" fg:x="5348" fg:w="39"/><text x="4.9592%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (25 samples, 0.02%)</title><rect x="4.7435%" y="1077" width="0.0220%" height="15" fill="rgb(218,133,21)" fg:x="5387" fg:w="25"/><text x="4.9935%" y="1087.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (25 samples, 0.02%)</title><rect x="4.7435%" y="1061" width="0.0220%" height="15" fill="rgb(221,193,43)" fg:x="5387" fg:w="25"/><text x="4.9935%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (25 samples, 0.02%)</title><rect x="4.7435%" y="1045" width="0.0220%" height="15" fill="rgb(240,128,52)" fg:x="5387" fg:w="25"/><text x="4.9935%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (25 samples, 0.02%)</title><rect x="4.7435%" y="1029" width="0.0220%" height="15" fill="rgb(253,114,12)" fg:x="5387" fg:w="25"/><text x="4.9935%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (25 samples, 0.02%)</title><rect x="4.7435%" y="1013" width="0.0220%" height="15" fill="rgb(215,223,47)" fg:x="5387" fg:w="25"/><text x="4.9935%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (25 samples, 0.02%)</title><rect x="4.7435%" y="997" width="0.0220%" height="15" fill="rgb(248,225,23)" fg:x="5387" fg:w="25"/><text x="4.9935%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (25 samples, 0.02%)</title><rect x="4.7435%" y="981" width="0.0220%" height="15" fill="rgb(250,108,0)" fg:x="5387" fg:w="25"/><text x="4.9935%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.02%)</title><rect x="4.7435%" y="965" width="0.0220%" height="15" fill="rgb(228,208,7)" fg:x="5387" fg:w="25"/><text x="4.9935%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.02%)</title><rect x="4.7435%" y="949" width="0.0220%" height="15" fill="rgb(244,45,10)" fg:x="5387" fg:w="25"/><text x="4.9935%" y="959.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.02%)</title><rect x="4.7435%" y="933" width="0.0220%" height="15" fill="rgb(207,125,25)" fg:x="5387" fg:w="25"/><text x="4.9935%" y="943.50"></text></g><g><title>__rg_alloc (25 samples, 0.02%)</title><rect x="4.7435%" y="917" width="0.0220%" height="15" fill="rgb(210,195,18)" fg:x="5387" fg:w="25"/><text x="4.9935%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (25 samples, 0.02%)</title><rect x="4.7435%" y="901" width="0.0220%" height="15" fill="rgb(249,80,12)" fg:x="5387" fg:w="25"/><text x="4.9935%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (17 samples, 0.01%)</title><rect x="4.7664%" y="1061" width="0.0150%" height="15" fill="rgb(221,65,9)" fg:x="5413" fg:w="17"/><text x="5.0164%" y="1071.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (17 samples, 0.01%)</title><rect x="4.7664%" y="1045" width="0.0150%" height="15" fill="rgb(235,49,36)" fg:x="5413" fg:w="17"/><text x="5.0164%" y="1055.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (213 samples, 0.19%)</title><rect x="4.6123%" y="1125" width="0.1876%" height="15" fill="rgb(225,32,20)" fg:x="5238" fg:w="213"/><text x="4.8623%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (64 samples, 0.06%)</title><rect x="4.7435%" y="1109" width="0.0564%" height="15" fill="rgb(215,141,46)" fg:x="5387" fg:w="64"/><text x="4.9935%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (64 samples, 0.06%)</title><rect x="4.7435%" y="1093" width="0.0564%" height="15" fill="rgb(250,160,47)" fg:x="5387" fg:w="64"/><text x="4.9935%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (39 samples, 0.03%)</title><rect x="4.7655%" y="1077" width="0.0343%" height="15" fill="rgb(216,222,40)" fg:x="5412" fg:w="39"/><text x="5.0155%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="4.7814%" y="1061" width="0.0185%" height="15" fill="rgb(234,217,39)" fg:x="5430" fg:w="21"/><text x="5.0314%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="4.7814%" y="1045" width="0.0185%" height="15" fill="rgb(207,178,40)" fg:x="5430" fg:w="21"/><text x="5.0314%" y="1055.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="4.7814%" y="1029" width="0.0185%" height="15" fill="rgb(221,136,13)" fg:x="5430" fg:w="21"/><text x="5.0314%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (43 samples, 0.04%)</title><rect x="4.8201%" y="1109" width="0.0379%" height="15" fill="rgb(249,199,10)" fg:x="5474" fg:w="43"/><text x="5.0701%" y="1119.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (43 samples, 0.04%)</title><rect x="4.8201%" y="1093" width="0.0379%" height="15" fill="rgb(249,222,13)" fg:x="5474" fg:w="43"/><text x="5.0701%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (43 samples, 0.04%)</title><rect x="4.8201%" y="1077" width="0.0379%" height="15" fill="rgb(244,185,38)" fg:x="5474" fg:w="43"/><text x="5.0701%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (43 samples, 0.04%)</title><rect x="4.8201%" y="1061" width="0.0379%" height="15" fill="rgb(236,202,9)" fg:x="5474" fg:w="43"/><text x="5.0701%" y="1071.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (77 samples, 0.07%)</title><rect x="4.7999%" y="1125" width="0.0678%" height="15" fill="rgb(250,229,37)" fg:x="5451" fg:w="77"/><text x="5.0499%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="4.8747%" y="1125" width="0.0106%" height="15" fill="rgb(206,174,23)" fg:x="5536" fg:w="12"/><text x="5.1247%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (12 samples, 0.01%)</title><rect x="4.8747%" y="1109" width="0.0106%" height="15" fill="rgb(211,33,43)" fg:x="5536" fg:w="12"/><text x="5.1247%" y="1119.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="4.8747%" y="1093" width="0.0106%" height="15" fill="rgb(245,58,50)" fg:x="5536" fg:w="12"/><text x="5.1247%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (12 samples, 0.01%)</title><rect x="4.8747%" y="1077" width="0.0106%" height="15" fill="rgb(244,68,36)" fg:x="5536" fg:w="12"/><text x="5.1247%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="4.8747%" y="1061" width="0.0106%" height="15" fill="rgb(232,229,15)" fg:x="5536" fg:w="12"/><text x="5.1247%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="4.8747%" y="1045" width="0.0106%" height="15" fill="rgb(254,30,23)" fg:x="5536" fg:w="12"/><text x="5.1247%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="4.8747%" y="1029" width="0.0106%" height="15" fill="rgb(235,160,14)" fg:x="5536" fg:w="12"/><text x="5.1247%" y="1039.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="4.8747%" y="1013" width="0.0106%" height="15" fill="rgb(212,155,44)" fg:x="5536" fg:w="12"/><text x="5.1247%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="4.8747%" y="997" width="0.0106%" height="15" fill="rgb(226,2,50)" fg:x="5536" fg:w="12"/><text x="5.1247%" y="1007.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (23 samples, 0.02%)</title><rect x="4.9839%" y="1109" width="0.0203%" height="15" fill="rgb(234,177,6)" fg:x="5660" fg:w="23"/><text x="5.2339%" y="1119.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (138 samples, 0.12%)</title><rect x="4.8853%" y="1125" width="0.1215%" height="15" fill="rgb(217,24,9)" fg:x="5548" fg:w="138"/><text x="5.1353%" y="1135.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="5.0068%" y="1125" width="0.0132%" height="15" fill="rgb(220,13,46)" fg:x="5686" fg:w="15"/><text x="5.2568%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (18 samples, 0.02%)</title><rect x="5.2392%" y="469" width="0.0158%" height="15" fill="rgb(239,221,27)" fg:x="5950" fg:w="18"/><text x="5.4892%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="5.2595%" y="421" width="0.0150%" height="15" fill="rgb(222,198,25)" fg:x="5973" fg:w="17"/><text x="5.5095%" y="431.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="5.2745%" y="405" width="0.0114%" height="15" fill="rgb(211,99,13)" fg:x="5990" fg:w="13"/><text x="5.5245%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (22 samples, 0.02%)</title><rect x="5.2745%" y="421" width="0.0194%" height="15" fill="rgb(232,111,31)" fg:x="5990" fg:w="22"/><text x="5.5245%" y="431.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (23 samples, 0.02%)</title><rect x="5.2938%" y="389" width="0.0203%" height="15" fill="rgb(245,82,37)" fg:x="6012" fg:w="23"/><text x="5.5438%" y="399.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (23 samples, 0.02%)</title><rect x="5.2938%" y="373" width="0.0203%" height="15" fill="rgb(227,149,46)" fg:x="6012" fg:w="23"/><text x="5.5438%" y="383.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (23 samples, 0.02%)</title><rect x="5.2938%" y="357" width="0.0203%" height="15" fill="rgb(218,36,50)" fg:x="6012" fg:w="23"/><text x="5.5438%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (23 samples, 0.02%)</title><rect x="5.2938%" y="341" width="0.0203%" height="15" fill="rgb(226,80,48)" fg:x="6012" fg:w="23"/><text x="5.5438%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (23 samples, 0.02%)</title><rect x="5.2938%" y="325" width="0.0203%" height="15" fill="rgb(238,224,15)" fg:x="6012" fg:w="23"/><text x="5.5438%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (36 samples, 0.03%)</title><rect x="5.3599%" y="165" width="0.0317%" height="15" fill="rgb(241,136,10)" fg:x="6087" fg:w="36"/><text x="5.6099%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (36 samples, 0.03%)</title><rect x="5.3599%" y="149" width="0.0317%" height="15" fill="rgb(208,32,45)" fg:x="6087" fg:w="36"/><text x="5.6099%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (36 samples, 0.03%)</title><rect x="5.3599%" y="133" width="0.0317%" height="15" fill="rgb(207,135,9)" fg:x="6087" fg:w="36"/><text x="5.6099%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (53 samples, 0.05%)</title><rect x="5.3537%" y="197" width="0.0467%" height="15" fill="rgb(206,86,44)" fg:x="6080" fg:w="53"/><text x="5.6037%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (53 samples, 0.05%)</title><rect x="5.3537%" y="181" width="0.0467%" height="15" fill="rgb(245,177,15)" fg:x="6080" fg:w="53"/><text x="5.6037%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (77 samples, 0.07%)</title><rect x="5.3440%" y="245" width="0.0678%" height="15" fill="rgb(206,64,50)" fg:x="6069" fg:w="77"/><text x="5.5940%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (66 samples, 0.06%)</title><rect x="5.3537%" y="229" width="0.0581%" height="15" fill="rgb(234,36,40)" fg:x="6080" fg:w="66"/><text x="5.6037%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (66 samples, 0.06%)</title><rect x="5.3537%" y="213" width="0.0581%" height="15" fill="rgb(213,64,8)" fg:x="6080" fg:w="66"/><text x="5.6037%" y="223.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="5.4004%" y="197" width="0.0114%" height="15" fill="rgb(210,75,36)" fg:x="6133" fg:w="13"/><text x="5.6504%" y="207.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="5.4004%" y="181" width="0.0114%" height="15" fill="rgb(229,88,21)" fg:x="6133" fg:w="13"/><text x="5.6504%" y="191.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="5.4004%" y="165" width="0.0114%" height="15" fill="rgb(252,204,47)" fg:x="6133" fg:w="13"/><text x="5.6504%" y="175.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="5.4004%" y="149" width="0.0114%" height="15" fill="rgb(208,77,27)" fg:x="6133" fg:w="13"/><text x="5.6504%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (112 samples, 0.10%)</title><rect x="5.3141%" y="325" width="0.0986%" height="15" fill="rgb(221,76,26)" fg:x="6035" fg:w="112"/><text x="5.5641%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (103 samples, 0.09%)</title><rect x="5.3220%" y="309" width="0.0907%" height="15" fill="rgb(225,139,18)" fg:x="6044" fg:w="103"/><text x="5.5720%" y="319.50"></text></g><g><title>__rg_dealloc (103 samples, 0.09%)</title><rect x="5.3220%" y="293" width="0.0907%" height="15" fill="rgb(230,137,11)" fg:x="6044" fg:w="103"/><text x="5.5720%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (103 samples, 0.09%)</title><rect x="5.3220%" y="277" width="0.0907%" height="15" fill="rgb(212,28,1)" fg:x="6044" fg:w="103"/><text x="5.5720%" y="287.50"></text></g><g><title>rust_dealloc (87 samples, 0.08%)</title><rect x="5.3361%" y="261" width="0.0766%" height="15" fill="rgb(248,164,17)" fg:x="6060" fg:w="87"/><text x="5.5861%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (206 samples, 0.18%)</title><rect x="5.2392%" y="485" width="0.1814%" height="15" fill="rgb(222,171,42)" fg:x="5950" fg:w="206"/><text x="5.4892%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (188 samples, 0.17%)</title><rect x="5.2551%" y="469" width="0.1655%" height="15" fill="rgb(243,84,45)" fg:x="5968" fg:w="188"/><text x="5.5051%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (188 samples, 0.17%)</title><rect x="5.2551%" y="453" width="0.1655%" height="15" fill="rgb(252,49,23)" fg:x="5968" fg:w="188"/><text x="5.5051%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (188 samples, 0.17%)</title><rect x="5.2551%" y="437" width="0.1655%" height="15" fill="rgb(215,19,7)" fg:x="5968" fg:w="188"/><text x="5.5051%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (144 samples, 0.13%)</title><rect x="5.2938%" y="421" width="0.1268%" height="15" fill="rgb(238,81,41)" fg:x="6012" fg:w="144"/><text x="5.5438%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (144 samples, 0.13%)</title><rect x="5.2938%" y="405" width="0.1268%" height="15" fill="rgb(210,199,37)" fg:x="6012" fg:w="144"/><text x="5.5438%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (121 samples, 0.11%)</title><rect x="5.3141%" y="389" width="0.1065%" height="15" fill="rgb(244,192,49)" fg:x="6035" fg:w="121"/><text x="5.5641%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 samples, 0.11%)</title><rect x="5.3141%" y="373" width="0.1065%" height="15" fill="rgb(226,211,11)" fg:x="6035" fg:w="121"/><text x="5.5641%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (121 samples, 0.11%)</title><rect x="5.3141%" y="357" width="0.1065%" height="15" fill="rgb(236,162,54)" fg:x="6035" fg:w="121"/><text x="5.5641%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 samples, 0.11%)</title><rect x="5.3141%" y="341" width="0.1065%" height="15" fill="rgb(220,229,9)" fg:x="6035" fg:w="121"/><text x="5.5641%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (95 samples, 0.08%)</title><rect x="5.4206%" y="485" width="0.0837%" height="15" fill="rgb(250,87,22)" fg:x="6156" fg:w="95"/><text x="5.6706%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (54 samples, 0.05%)</title><rect x="5.4567%" y="469" width="0.0475%" height="15" fill="rgb(239,43,17)" fg:x="6197" fg:w="54"/><text x="5.7067%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (54 samples, 0.05%)</title><rect x="5.4567%" y="453" width="0.0475%" height="15" fill="rgb(231,177,25)" fg:x="6197" fg:w="54"/><text x="5.7067%" y="463.50"></text></g><g><title>rust_alloc (25 samples, 0.02%)</title><rect x="5.5201%" y="293" width="0.0220%" height="15" fill="rgb(219,179,1)" fg:x="6269" fg:w="25"/><text x="5.7701%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::empty (39 samples, 0.03%)</title><rect x="5.5606%" y="277" width="0.0343%" height="15" fill="rgb(238,219,53)" fg:x="6315" fg:w="39"/><text x="5.8106%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (39 samples, 0.03%)</title><rect x="5.5606%" y="261" width="0.0343%" height="15" fill="rgb(232,167,36)" fg:x="6315" fg:w="39"/><text x="5.8106%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (438 samples, 0.39%)</title><rect x="5.5043%" y="421" width="0.3857%" height="15" fill="rgb(244,19,51)" fg:x="6251" fg:w="438"/><text x="5.7543%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (438 samples, 0.39%)</title><rect x="5.5043%" y="405" width="0.3857%" height="15" fill="rgb(224,6,22)" fg:x="6251" fg:w="438"/><text x="5.7543%" y="415.50"></text></g><g><title>alloc::alloc::alloc (433 samples, 0.38%)</title><rect x="5.5087%" y="389" width="0.3813%" height="15" fill="rgb(224,145,5)" fg:x="6256" fg:w="433"/><text x="5.7587%" y="399.50"></text></g><g><title>__rg_alloc (433 samples, 0.38%)</title><rect x="5.5087%" y="373" width="0.3813%" height="15" fill="rgb(234,130,49)" fg:x="6256" fg:w="433"/><text x="5.7587%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (433 samples, 0.38%)</title><rect x="5.5087%" y="357" width="0.3813%" height="15" fill="rgb(254,6,2)" fg:x="6256" fg:w="433"/><text x="5.7587%" y="367.50"></text></g><g><title>rust_alloc (426 samples, 0.38%)</title><rect x="5.5149%" y="341" width="0.3751%" height="15" fill="rgb(208,96,46)" fg:x="6263" fg:w="426"/><text x="5.7649%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (420 samples, 0.37%)</title><rect x="5.5201%" y="325" width="0.3698%" height="15" fill="rgb(239,3,39)" fg:x="6269" fg:w="420"/><text x="5.7701%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (420 samples, 0.37%)</title><rect x="5.5201%" y="309" width="0.3698%" height="15" fill="rgb(233,210,1)" fg:x="6269" fg:w="420"/><text x="5.7701%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (389 samples, 0.34%)</title><rect x="5.5474%" y="293" width="0.3425%" height="15" fill="rgb(244,137,37)" fg:x="6300" fg:w="389"/><text x="5.7974%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (335 samples, 0.29%)</title><rect x="5.5950%" y="277" width="0.2950%" height="15" fill="rgb(240,136,2)" fg:x="6354" fg:w="335"/><text x="5.8450%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (335 samples, 0.29%)</title><rect x="5.5950%" y="261" width="0.2950%" height="15" fill="rgb(239,18,37)" fg:x="6354" fg:w="335"/><text x="5.8450%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (454 samples, 0.40%)</title><rect x="5.5043%" y="437" width="0.3998%" height="15" fill="rgb(218,185,22)" fg:x="6251" fg:w="454"/><text x="5.7543%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (16 samples, 0.01%)</title><rect x="5.8900%" y="421" width="0.0141%" height="15" fill="rgb(225,218,4)" fg:x="6689" fg:w="16"/><text x="6.1400%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (16 samples, 0.01%)</title><rect x="5.8900%" y="405" width="0.0141%" height="15" fill="rgb(230,182,32)" fg:x="6689" fg:w="16"/><text x="6.1400%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (16 samples, 0.01%)</title><rect x="5.8900%" y="389" width="0.0141%" height="15" fill="rgb(242,56,43)" fg:x="6689" fg:w="16"/><text x="6.1400%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (464 samples, 0.41%)</title><rect x="5.5043%" y="485" width="0.4086%" height="15" fill="rgb(233,99,24)" fg:x="6251" fg:w="464"/><text x="5.7543%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (464 samples, 0.41%)</title><rect x="5.5043%" y="469" width="0.4086%" height="15" fill="rgb(234,209,42)" fg:x="6251" fg:w="464"/><text x="5.7543%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (464 samples, 0.41%)</title><rect x="5.5043%" y="453" width="0.4086%" height="15" fill="rgb(227,7,12)" fg:x="6251" fg:w="464"/><text x="5.7543%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (897 samples, 0.79%)</title><rect x="5.1292%" y="629" width="0.7898%" height="15" fill="rgb(245,203,43)" fg:x="5825" fg:w="897"/><text x="5.3792%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (897 samples, 0.79%)</title><rect x="5.1292%" y="613" width="0.7898%" height="15" fill="rgb(238,205,33)" fg:x="5825" fg:w="897"/><text x="5.3792%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (897 samples, 0.79%)</title><rect x="5.1292%" y="597" width="0.7898%" height="15" fill="rgb(231,56,7)" fg:x="5825" fg:w="897"/><text x="5.3792%" y="607.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (897 samples, 0.79%)</title><rect x="5.1292%" y="581" width="0.7898%" height="15" fill="rgb(244,186,29)" fg:x="5825" fg:w="897"/><text x="5.3792%" y="591.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (897 samples, 0.79%)</title><rect x="5.1292%" y="565" width="0.7898%" height="15" fill="rgb(234,111,31)" fg:x="5825" fg:w="897"/><text x="5.3792%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (897 samples, 0.79%)</title><rect x="5.1292%" y="549" width="0.7898%" height="15" fill="rgb(241,149,10)" fg:x="5825" fg:w="897"/><text x="5.3792%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (897 samples, 0.79%)</title><rect x="5.1292%" y="533" width="0.7898%" height="15" fill="rgb(249,206,44)" fg:x="5825" fg:w="897"/><text x="5.3792%" y="543.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (897 samples, 0.79%)</title><rect x="5.1292%" y="517" width="0.7898%" height="15" fill="rgb(251,153,30)" fg:x="5825" fg:w="897"/><text x="5.3792%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (774 samples, 0.68%)</title><rect x="5.2375%" y="501" width="0.6815%" height="15" fill="rgb(239,152,38)" fg:x="5948" fg:w="774"/><text x="5.4875%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,034 samples, 0.91%)</title><rect x="5.9437%" y="597" width="0.9105%" height="15" fill="rgb(249,139,47)" fg:x="6750" fg:w="1034"/><text x="6.1937%" y="607.50"></text></g><g><title>rust_alloc (28 samples, 0.02%)</title><rect x="6.8550%" y="549" width="0.0247%" height="15" fill="rgb(244,64,35)" fg:x="7785" fg:w="28"/><text x="7.1050%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (18 samples, 0.02%)</title><rect x="6.8867%" y="533" width="0.0158%" height="15" fill="rgb(216,46,15)" fg:x="7821" fg:w="18"/><text x="7.1367%" y="543.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (18 samples, 0.02%)</title><rect x="6.8867%" y="517" width="0.0158%" height="15" fill="rgb(250,74,19)" fg:x="7821" fg:w="18"/><text x="7.1367%" y="527.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (18 samples, 0.02%)</title><rect x="6.8867%" y="501" width="0.0158%" height="15" fill="rgb(249,42,33)" fg:x="7821" fg:w="18"/><text x="7.1367%" y="511.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="6.8867%" y="485" width="0.0158%" height="15" fill="rgb(242,149,17)" fg:x="7821" fg:w="18"/><text x="7.1367%" y="495.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="6.8867%" y="469" width="0.0158%" height="15" fill="rgb(244,29,21)" fg:x="7821" fg:w="18"/><text x="7.1367%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="6.9035%" y="485" width="0.0106%" height="15" fill="rgb(220,130,37)" fg:x="7840" fg:w="12"/><text x="7.1535%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (18 samples, 0.02%)</title><rect x="6.9026%" y="501" width="0.0158%" height="15" fill="rgb(211,67,2)" fg:x="7839" fg:w="18"/><text x="7.1526%" y="511.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="6.9246%" y="485" width="0.0106%" height="15" fill="rgb(235,68,52)" fg:x="7864" fg:w="12"/><text x="7.1746%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (98 samples, 0.09%)</title><rect x="6.9026%" y="533" width="0.0863%" height="15" fill="rgb(246,142,3)" fg:x="7839" fg:w="98"/><text x="7.1526%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (98 samples, 0.09%)</title><rect x="6.9026%" y="517" width="0.0863%" height="15" fill="rgb(241,25,7)" fg:x="7839" fg:w="98"/><text x="7.1526%" y="527.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (80 samples, 0.07%)</title><rect x="6.9184%" y="501" width="0.0704%" height="15" fill="rgb(242,119,39)" fg:x="7857" fg:w="80"/><text x="7.1684%" y="511.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (61 samples, 0.05%)</title><rect x="6.9352%" y="485" width="0.0537%" height="15" fill="rgb(241,98,45)" fg:x="7876" fg:w="61"/><text x="7.1852%" y="495.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (61 samples, 0.05%)</title><rect x="6.9352%" y="469" width="0.0537%" height="15" fill="rgb(254,28,30)" fg:x="7876" fg:w="61"/><text x="7.1852%" y="479.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (61 samples, 0.05%)</title><rect x="6.9352%" y="453" width="0.0537%" height="15" fill="rgb(241,142,54)" fg:x="7876" fg:w="61"/><text x="7.1852%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (32 samples, 0.03%)</title><rect x="6.9889%" y="533" width="0.0282%" height="15" fill="rgb(222,85,15)" fg:x="7937" fg:w="32"/><text x="7.2389%" y="543.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (28 samples, 0.02%)</title><rect x="6.9924%" y="517" width="0.0247%" height="15" fill="rgb(210,85,47)" fg:x="7941" fg:w="28"/><text x="7.2424%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (23 samples, 0.02%)</title><rect x="7.0268%" y="485" width="0.0203%" height="15" fill="rgb(224,206,25)" fg:x="7980" fg:w="23"/><text x="7.2768%" y="495.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (17 samples, 0.01%)</title><rect x="7.0320%" y="469" width="0.0150%" height="15" fill="rgb(243,201,19)" fg:x="7986" fg:w="17"/><text x="7.2820%" y="479.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (13 samples, 0.01%)</title><rect x="7.0356%" y="453" width="0.0114%" height="15" fill="rgb(236,59,4)" fg:x="7990" fg:w="13"/><text x="7.2856%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.02%)</title><rect x="7.0470%" y="485" width="0.0229%" height="15" fill="rgb(254,179,45)" fg:x="8003" fg:w="26"/><text x="7.2970%" y="495.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (23 samples, 0.02%)</title><rect x="7.0496%" y="469" width="0.0203%" height="15" fill="rgb(226,14,10)" fg:x="8006" fg:w="23"/><text x="7.2996%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (56 samples, 0.05%)</title><rect x="7.0223%" y="501" width="0.0493%" height="15" fill="rgb(244,27,41)" fg:x="7975" fg:w="56"/><text x="7.2723%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (63 samples, 0.06%)</title><rect x="7.0171%" y="533" width="0.0555%" height="15" fill="rgb(235,35,32)" fg:x="7969" fg:w="63"/><text x="7.2671%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="7.0215%" y="517" width="0.0511%" height="15" fill="rgb(218,68,31)" fg:x="7974" fg:w="58"/><text x="7.2715%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::empty (26 samples, 0.02%)</title><rect x="7.0725%" y="533" width="0.0229%" height="15" fill="rgb(207,120,37)" fg:x="8032" fg:w="26"/><text x="7.3225%" y="543.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (26 samples, 0.02%)</title><rect x="7.0725%" y="517" width="0.0229%" height="15" fill="rgb(227,98,0)" fg:x="8032" fg:w="26"/><text x="7.3225%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (531 samples, 0.47%)</title><rect x="6.8550%" y="581" width="0.4676%" height="15" fill="rgb(207,7,3)" fg:x="7785" fg:w="531"/><text x="7.1050%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (531 samples, 0.47%)</title><rect x="6.8550%" y="565" width="0.4676%" height="15" fill="rgb(206,98,19)" fg:x="7785" fg:w="531"/><text x="7.1050%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (503 samples, 0.44%)</title><rect x="6.8797%" y="549" width="0.4429%" height="15" fill="rgb(217,5,26)" fg:x="7813" fg:w="503"/><text x="7.1297%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::take (258 samples, 0.23%)</title><rect x="7.0954%" y="533" width="0.2272%" height="15" fill="rgb(235,190,38)" fg:x="8058" fg:w="258"/><text x="7.3454%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (258 samples, 0.23%)</title><rect x="7.0954%" y="517" width="0.2272%" height="15" fill="rgb(247,86,24)" fg:x="8058" fg:w="258"/><text x="7.3454%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (2,494 samples, 2.20%)</title><rect x="5.1292%" y="981" width="2.1961%" height="15" fill="rgb(205,101,16)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="991.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,494 samples, 2.20%)</title><rect x="5.1292%" y="965" width="2.1961%" height="15" fill="rgb(246,168,33)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="975.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (2,494 samples, 2.20%)</title><rect x="5.1292%" y="949" width="2.1961%" height="15" fill="rgb(231,114,1)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="959.50">t..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,494 samples, 2.20%)</title><rect x="5.1292%" y="933" width="2.1961%" height="15" fill="rgb(207,184,53)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="943.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,494 samples, 2.20%)</title><rect x="5.1292%" y="917" width="2.1961%" height="15" fill="rgb(224,95,51)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="927.50">&lt;..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (2,494 samples, 2.20%)</title><rect x="5.1292%" y="901" width="2.1961%" height="15" fill="rgb(212,188,45)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="911.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,494 samples, 2.20%)</title><rect x="5.1292%" y="885" width="2.1961%" height="15" fill="rgb(223,154,38)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="895.50">&lt;..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (2,494 samples, 2.20%)</title><rect x="5.1292%" y="869" width="2.1961%" height="15" fill="rgb(251,22,52)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="879.50">a..</text></g><g><title>std::panic::catch_unwind (2,494 samples, 2.20%)</title><rect x="5.1292%" y="853" width="2.1961%" height="15" fill="rgb(229,209,22)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="863.50">s..</text></g><g><title>std::panicking::try (2,494 samples, 2.20%)</title><rect x="5.1292%" y="837" width="2.1961%" height="15" fill="rgb(234,138,34)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="847.50">s..</text></g><g><title>std::panicking::try::do_call (2,494 samples, 2.20%)</title><rect x="5.1292%" y="821" width="2.1961%" height="15" fill="rgb(212,95,11)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="831.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,494 samples, 2.20%)</title><rect x="5.1292%" y="805" width="2.1961%" height="15" fill="rgb(240,179,47)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="815.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once (2,494 samples, 2.20%)</title><rect x="5.1292%" y="789" width="2.1961%" height="15" fill="rgb(240,163,11)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="799.50">c..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (2,494 samples, 2.20%)</title><rect x="5.1292%" y="773" width="2.1961%" height="15" fill="rgb(236,37,12)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="783.50">a..</text></g><g><title>async_ffi::FfiContext::with_context (2,494 samples, 2.20%)</title><rect x="5.1292%" y="757" width="2.1961%" height="15" fill="rgb(232,164,16)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="767.50">a..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (2,494 samples, 2.20%)</title><rect x="5.1292%" y="741" width="2.1961%" height="15" fill="rgb(244,205,15)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="751.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,494 samples, 2.20%)</title><rect x="5.1292%" y="725" width="2.1961%" height="15" fill="rgb(223,117,47)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="735.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (2,494 samples, 2.20%)</title><rect x="5.1292%" y="709" width="2.1961%" height="15" fill="rgb(244,107,35)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="719.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (2,494 samples, 2.20%)</title><rect x="5.1292%" y="693" width="2.1961%" height="15" fill="rgb(205,140,8)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="703.50">t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (2,494 samples, 2.20%)</title><rect x="5.1292%" y="677" width="2.1961%" height="15" fill="rgb(228,84,46)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="687.50">t..</text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (2,494 samples, 2.20%)</title><rect x="5.1292%" y="661" width="2.1961%" height="15" fill="rgb(254,188,9)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="671.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (2,494 samples, 2.20%)</title><rect x="5.1292%" y="645" width="2.1961%" height="15" fill="rgb(206,112,54)" fg:x="5825" fg:w="2494"/><text x="5.3792%" y="655.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,597 samples, 1.41%)</title><rect x="5.9190%" y="629" width="1.4062%" height="15" fill="rgb(216,84,49)" fg:x="6722" fg:w="1597"/><text x="6.1690%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (1,597 samples, 1.41%)</title><rect x="5.9190%" y="613" width="1.4062%" height="15" fill="rgb(214,194,35)" fg:x="6722" fg:w="1597"/><text x="6.1690%" y="623.50"></text></g><g><title>rust_alloc (535 samples, 0.47%)</title><rect x="6.8542%" y="597" width="0.4711%" height="15" fill="rgb(249,28,3)" fg:x="7784" fg:w="535"/><text x="7.1042%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (50 samples, 0.04%)</title><rect x="7.3314%" y="805" width="0.0440%" height="15" fill="rgb(222,56,52)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="815.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (50 samples, 0.04%)</title><rect x="7.3314%" y="789" width="0.0440%" height="15" fill="rgb(245,217,50)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (50 samples, 0.04%)</title><rect x="7.3314%" y="773" width="0.0440%" height="15" fill="rgb(213,201,24)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (50 samples, 0.04%)</title><rect x="7.3314%" y="757" width="0.0440%" height="15" fill="rgb(248,116,28)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (50 samples, 0.04%)</title><rect x="7.3314%" y="741" width="0.0440%" height="15" fill="rgb(219,72,43)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (50 samples, 0.04%)</title><rect x="7.3314%" y="725" width="0.0440%" height="15" fill="rgb(209,138,14)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (50 samples, 0.04%)</title><rect x="7.3314%" y="709" width="0.0440%" height="15" fill="rgb(222,18,33)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (50 samples, 0.04%)</title><rect x="7.3314%" y="693" width="0.0440%" height="15" fill="rgb(213,199,7)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (50 samples, 0.04%)</title><rect x="7.3314%" y="677" width="0.0440%" height="15" fill="rgb(250,110,10)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (50 samples, 0.04%)</title><rect x="7.3314%" y="661" width="0.0440%" height="15" fill="rgb(248,123,6)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (50 samples, 0.04%)</title><rect x="7.3314%" y="645" width="0.0440%" height="15" fill="rgb(206,91,31)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (50 samples, 0.04%)</title><rect x="7.3314%" y="629" width="0.0440%" height="15" fill="rgb(211,154,13)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="639.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.04%)</title><rect x="7.3314%" y="613" width="0.0440%" height="15" fill="rgb(225,148,7)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="623.50"></text></g><g><title>__rg_alloc (50 samples, 0.04%)</title><rect x="7.3314%" y="597" width="0.0440%" height="15" fill="rgb(220,160,43)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (50 samples, 0.04%)</title><rect x="7.3314%" y="581" width="0.0440%" height="15" fill="rgb(213,52,39)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="591.50"></text></g><g><title>rust_alloc (50 samples, 0.04%)</title><rect x="7.3314%" y="565" width="0.0440%" height="15" fill="rgb(243,137,7)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.04%)</title><rect x="7.3314%" y="549" width="0.0440%" height="15" fill="rgb(230,79,13)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.04%)</title><rect x="7.3314%" y="533" width="0.0440%" height="15" fill="rgb(247,105,23)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.04%)</title><rect x="7.3314%" y="517" width="0.0440%" height="15" fill="rgb(223,179,41)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.04%)</title><rect x="7.3314%" y="501" width="0.0440%" height="15" fill="rgb(218,9,34)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (50 samples, 0.04%)</title><rect x="7.3314%" y="485" width="0.0440%" height="15" fill="rgb(222,106,8)" fg:x="8326" fg:w="50"/><text x="7.5814%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (43 samples, 0.04%)</title><rect x="7.3376%" y="469" width="0.0379%" height="15" fill="rgb(211,220,0)" fg:x="8333" fg:w="43"/><text x="7.5876%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (32 samples, 0.03%)</title><rect x="7.3473%" y="453" width="0.0282%" height="15" fill="rgb(229,52,16)" fg:x="8344" fg:w="32"/><text x="7.5973%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (32 samples, 0.03%)</title><rect x="7.3473%" y="437" width="0.0282%" height="15" fill="rgb(212,155,18)" fg:x="8344" fg:w="32"/><text x="7.5973%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (32 samples, 0.03%)</title><rect x="7.3473%" y="421" width="0.0282%" height="15" fill="rgb(242,21,14)" fg:x="8344" fg:w="32"/><text x="7.5973%" y="431.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (89 samples, 0.08%)</title><rect x="7.3305%" y="917" width="0.0784%" height="15" fill="rgb(222,19,48)" fg:x="8325" fg:w="89"/><text x="7.5805%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (88 samples, 0.08%)</title><rect x="7.3314%" y="901" width="0.0775%" height="15" fill="rgb(232,45,27)" fg:x="8326" fg:w="88"/><text x="7.5814%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (88 samples, 0.08%)</title><rect x="7.3314%" y="885" width="0.0775%" height="15" fill="rgb(249,103,42)" fg:x="8326" fg:w="88"/><text x="7.5814%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (88 samples, 0.08%)</title><rect x="7.3314%" y="869" width="0.0775%" height="15" fill="rgb(246,81,33)" fg:x="8326" fg:w="88"/><text x="7.5814%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (88 samples, 0.08%)</title><rect x="7.3314%" y="853" width="0.0775%" height="15" fill="rgb(252,33,42)" fg:x="8326" fg:w="88"/><text x="7.5814%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (88 samples, 0.08%)</title><rect x="7.3314%" y="837" width="0.0775%" height="15" fill="rgb(209,212,41)" fg:x="8326" fg:w="88"/><text x="7.5814%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (88 samples, 0.08%)</title><rect x="7.3314%" y="821" width="0.0775%" height="15" fill="rgb(207,154,6)" fg:x="8326" fg:w="88"/><text x="7.5814%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (38 samples, 0.03%)</title><rect x="7.3754%" y="805" width="0.0335%" height="15" fill="rgb(223,64,47)" fg:x="8376" fg:w="38"/><text x="7.6254%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (38 samples, 0.03%)</title><rect x="7.3754%" y="789" width="0.0335%" height="15" fill="rgb(211,161,38)" fg:x="8376" fg:w="38"/><text x="7.6254%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (38 samples, 0.03%)</title><rect x="7.3754%" y="773" width="0.0335%" height="15" fill="rgb(219,138,40)" fg:x="8376" fg:w="38"/><text x="7.6254%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.03%)</title><rect x="7.3754%" y="757" width="0.0335%" height="15" fill="rgb(241,228,46)" fg:x="8376" fg:w="38"/><text x="7.6254%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (38 samples, 0.03%)</title><rect x="7.3754%" y="741" width="0.0335%" height="15" fill="rgb(223,209,38)" fg:x="8376" fg:w="38"/><text x="7.6254%" y="751.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.03%)</title><rect x="7.3754%" y="725" width="0.0335%" height="15" fill="rgb(236,164,45)" fg:x="8376" fg:w="38"/><text x="7.6254%" y="735.50"></text></g><g><title>__rg_alloc (38 samples, 0.03%)</title><rect x="7.3754%" y="709" width="0.0335%" height="15" fill="rgb(231,15,5)" fg:x="8376" fg:w="38"/><text x="7.6254%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (38 samples, 0.03%)</title><rect x="7.3754%" y="693" width="0.0335%" height="15" fill="rgb(252,35,15)" fg:x="8376" fg:w="38"/><text x="7.6254%" y="703.50"></text></g><g><title>rust_alloc (38 samples, 0.03%)</title><rect x="7.3754%" y="677" width="0.0335%" height="15" fill="rgb(248,181,18)" fg:x="8376" fg:w="38"/><text x="7.6254%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="7.3754%" y="661" width="0.0335%" height="15" fill="rgb(233,39,42)" fg:x="8376" fg:w="38"/><text x="7.6254%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="7.3754%" y="645" width="0.0335%" height="15" fill="rgb(238,110,33)" fg:x="8376" fg:w="38"/><text x="7.6254%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="7.3754%" y="629" width="0.0335%" height="15" fill="rgb(233,195,10)" fg:x="8376" fg:w="38"/><text x="7.6254%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="7.3754%" y="613" width="0.0335%" height="15" fill="rgb(254,105,3)" fg:x="8376" fg:w="38"/><text x="7.6254%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (38 samples, 0.03%)</title><rect x="7.3754%" y="597" width="0.0335%" height="15" fill="rgb(221,225,9)" fg:x="8376" fg:w="38"/><text x="7.6254%" y="607.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (30 samples, 0.03%)</title><rect x="7.3825%" y="581" width="0.0264%" height="15" fill="rgb(224,227,45)" fg:x="8384" fg:w="30"/><text x="7.6325%" y="591.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (23 samples, 0.02%)</title><rect x="7.3887%" y="565" width="0.0203%" height="15" fill="rgb(229,198,43)" fg:x="8391" fg:w="23"/><text x="7.6387%" y="575.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (23 samples, 0.02%)</title><rect x="7.3887%" y="549" width="0.0203%" height="15" fill="rgb(206,209,35)" fg:x="8391" fg:w="23"/><text x="7.6387%" y="559.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (23 samples, 0.02%)</title><rect x="7.3887%" y="533" width="0.0203%" height="15" fill="rgb(245,195,53)" fg:x="8391" fg:w="23"/><text x="7.6387%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (235 samples, 0.21%)</title><rect x="7.6238%" y="901" width="0.2069%" height="15" fill="rgb(240,92,26)" fg:x="8658" fg:w="235"/><text x="7.8738%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="7.8545%" y="757" width="0.0387%" height="15" fill="rgb(207,40,23)" fg:x="8920" fg:w="44"/><text x="8.1045%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (33 samples, 0.03%)</title><rect x="7.8641%" y="741" width="0.0291%" height="15" fill="rgb(223,111,35)" fg:x="8931" fg:w="33"/><text x="8.1141%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="7.8659%" y="725" width="0.0273%" height="15" fill="rgb(229,147,28)" fg:x="8933" fg:w="31"/><text x="8.1159%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::take (23 samples, 0.02%)</title><rect x="7.8730%" y="709" width="0.0203%" height="15" fill="rgb(211,29,28)" fg:x="8941" fg:w="23"/><text x="8.1230%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (23 samples, 0.02%)</title><rect x="7.8730%" y="693" width="0.0203%" height="15" fill="rgb(228,72,33)" fg:x="8941" fg:w="23"/><text x="8.1230%" y="703.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (82 samples, 0.07%)</title><rect x="7.8307%" y="901" width="0.0722%" height="15" fill="rgb(205,214,31)" fg:x="8893" fg:w="82"/><text x="8.0807%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (82 samples, 0.07%)</title><rect x="7.8307%" y="885" width="0.0722%" height="15" fill="rgb(224,111,15)" fg:x="8893" fg:w="82"/><text x="8.0807%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (68 samples, 0.06%)</title><rect x="7.8430%" y="869" width="0.0599%" height="15" fill="rgb(253,21,26)" fg:x="8907" fg:w="68"/><text x="8.0930%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (68 samples, 0.06%)</title><rect x="7.8430%" y="853" width="0.0599%" height="15" fill="rgb(245,139,43)" fg:x="8907" fg:w="68"/><text x="8.0930%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (68 samples, 0.06%)</title><rect x="7.8430%" y="837" width="0.0599%" height="15" fill="rgb(252,170,7)" fg:x="8907" fg:w="68"/><text x="8.0930%" y="847.50"></text></g><g><title>alloc::alloc::alloc (68 samples, 0.06%)</title><rect x="7.8430%" y="821" width="0.0599%" height="15" fill="rgb(231,118,14)" fg:x="8907" fg:w="68"/><text x="8.0930%" y="831.50"></text></g><g><title>__rg_alloc (68 samples, 0.06%)</title><rect x="7.8430%" y="805" width="0.0599%" height="15" fill="rgb(238,83,0)" fg:x="8907" fg:w="68"/><text x="8.0930%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (68 samples, 0.06%)</title><rect x="7.8430%" y="789" width="0.0599%" height="15" fill="rgb(221,39,39)" fg:x="8907" fg:w="68"/><text x="8.0930%" y="799.50"></text></g><g><title>rust_alloc (58 samples, 0.05%)</title><rect x="7.8518%" y="773" width="0.0511%" height="15" fill="rgb(222,119,46)" fg:x="8917" fg:w="58"/><text x="8.1018%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (98 samples, 0.09%)</title><rect x="7.9029%" y="901" width="0.0863%" height="15" fill="rgb(222,165,49)" fg:x="8975" fg:w="98"/><text x="8.1529%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (98 samples, 0.09%)</title><rect x="7.9029%" y="885" width="0.0863%" height="15" fill="rgb(219,113,52)" fg:x="8975" fg:w="98"/><text x="8.1529%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (98 samples, 0.09%)</title><rect x="7.9029%" y="869" width="0.0863%" height="15" fill="rgb(214,7,15)" fg:x="8975" fg:w="98"/><text x="8.1529%" y="879.50"></text></g><g><title>alloc::alloc::alloc (98 samples, 0.09%)</title><rect x="7.9029%" y="853" width="0.0863%" height="15" fill="rgb(235,32,4)" fg:x="8975" fg:w="98"/><text x="8.1529%" y="863.50"></text></g><g><title>__rg_alloc (98 samples, 0.09%)</title><rect x="7.9029%" y="837" width="0.0863%" height="15" fill="rgb(238,90,54)" fg:x="8975" fg:w="98"/><text x="8.1529%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (98 samples, 0.09%)</title><rect x="7.9029%" y="821" width="0.0863%" height="15" fill="rgb(213,208,19)" fg:x="8975" fg:w="98"/><text x="8.1529%" y="831.50"></text></g><g><title>rust_alloc (89 samples, 0.08%)</title><rect x="7.9108%" y="805" width="0.0784%" height="15" fill="rgb(233,156,4)" fg:x="8984" fg:w="89"/><text x="8.1608%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.07%)</title><rect x="7.9179%" y="789" width="0.0713%" height="15" fill="rgb(207,194,5)" fg:x="8992" fg:w="81"/><text x="8.1679%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.07%)</title><rect x="7.9179%" y="773" width="0.0713%" height="15" fill="rgb(206,111,30)" fg:x="8992" fg:w="81"/><text x="8.1679%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (75 samples, 0.07%)</title><rect x="7.9231%" y="757" width="0.0660%" height="15" fill="rgb(243,70,54)" fg:x="8998" fg:w="75"/><text x="8.1731%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (63 samples, 0.06%)</title><rect x="7.9337%" y="741" width="0.0555%" height="15" fill="rgb(242,28,8)" fg:x="9010" fg:w="63"/><text x="8.1837%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (63 samples, 0.06%)</title><rect x="7.9337%" y="725" width="0.0555%" height="15" fill="rgb(219,106,18)" fg:x="9010" fg:w="63"/><text x="8.1837%" y="735.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (20 samples, 0.02%)</title><rect x="8.2428%" y="885" width="0.0176%" height="15" fill="rgb(244,222,10)" fg:x="9361" fg:w="20"/><text x="8.4928%" y="895.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="8.2921%" y="869" width="0.0114%" height="15" fill="rgb(236,179,52)" fg:x="9417" fg:w="13"/><text x="8.5421%" y="879.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (13 samples, 0.01%)</title><rect x="8.2921%" y="853" width="0.0114%" height="15" fill="rgb(213,23,39)" fg:x="9417" fg:w="13"/><text x="8.5421%" y="863.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (59 samples, 0.05%)</title><rect x="8.2604%" y="885" width="0.0520%" height="15" fill="rgb(238,48,10)" fg:x="9381" fg:w="59"/><text x="8.5104%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (1,149 samples, 1.01%)</title><rect x="7.3253%" y="981" width="1.0117%" height="15" fill="rgb(251,196,23)" fg:x="8319" fg:w="1149"/><text x="7.5753%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,149 samples, 1.01%)</title><rect x="7.3253%" y="965" width="1.0117%" height="15" fill="rgb(250,152,24)" fg:x="8319" fg:w="1149"/><text x="7.5753%" y="975.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (1,149 samples, 1.01%)</title><rect x="7.3253%" y="949" width="1.0117%" height="15" fill="rgb(209,150,17)" fg:x="8319" fg:w="1149"/><text x="7.5753%" y="959.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (1,143 samples, 1.01%)</title><rect x="7.3305%" y="933" width="1.0065%" height="15" fill="rgb(234,202,34)" fg:x="8325" fg:w="1143"/><text x="7.5805%" y="943.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (1,048 samples, 0.92%)</title><rect x="7.4142%" y="917" width="0.9228%" height="15" fill="rgb(253,148,53)" fg:x="8420" fg:w="1048"/><text x="7.6642%" y="927.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (395 samples, 0.35%)</title><rect x="7.9892%" y="901" width="0.3478%" height="15" fill="rgb(218,129,16)" fg:x="9073" fg:w="395"/><text x="8.2392%" y="911.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (21 samples, 0.02%)</title><rect x="8.3185%" y="885" width="0.0185%" height="15" fill="rgb(216,85,19)" fg:x="9447" fg:w="21"/><text x="8.5685%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="8.4612%" y="869" width="0.0114%" height="15" fill="rgb(235,228,7)" fg:x="9609" fg:w="13"/><text x="8.7112%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (12 samples, 0.01%)</title><rect x="8.4814%" y="869" width="0.0106%" height="15" fill="rgb(245,175,0)" fg:x="9632" fg:w="12"/><text x="8.7314%" y="879.50"></text></g><g><title>core::mem::replace (12 samples, 0.01%)</title><rect x="8.4814%" y="853" width="0.0106%" height="15" fill="rgb(208,168,36)" fg:x="9632" fg:w="12"/><text x="8.7314%" y="863.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (228 samples, 0.20%)</title><rect x="8.5307%" y="853" width="0.2008%" height="15" fill="rgb(246,171,24)" fg:x="9688" fg:w="228"/><text x="8.7807%" y="863.50"></text></g><g><title>core::mem::replace (228 samples, 0.20%)</title><rect x="8.5307%" y="837" width="0.2008%" height="15" fill="rgb(215,142,24)" fg:x="9688" fg:w="228"/><text x="8.7807%" y="847.50"></text></g><g><title>core::ptr::read (228 samples, 0.20%)</title><rect x="8.5307%" y="821" width="0.2008%" height="15" fill="rgb(250,187,7)" fg:x="9688" fg:w="228"/><text x="8.7807%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (338 samples, 0.30%)</title><rect x="8.4920%" y="869" width="0.2976%" height="15" fill="rgb(228,66,33)" fg:x="9644" fg:w="338"/><text x="8.7420%" y="879.50"></text></g><g><title>core::mem::drop (66 samples, 0.06%)</title><rect x="8.7315%" y="853" width="0.0581%" height="15" fill="rgb(234,215,21)" fg:x="9916" fg:w="66"/><text x="8.9815%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (66 samples, 0.06%)</title><rect x="8.7315%" y="837" width="0.0581%" height="15" fill="rgb(222,191,20)" fg:x="9916" fg:w="66"/><text x="8.9815%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (308 samples, 0.27%)</title><rect x="8.8319%" y="789" width="0.2712%" height="15" fill="rgb(245,79,54)" fg:x="10030" fg:w="308"/><text x="9.0819%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (376 samples, 0.33%)</title><rect x="8.7896%" y="869" width="0.3311%" height="15" fill="rgb(240,10,37)" fg:x="9982" fg:w="376"/><text x="9.0396%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (366 samples, 0.32%)</title><rect x="8.7984%" y="853" width="0.3223%" height="15" fill="rgb(214,192,32)" fg:x="9992" fg:w="366"/><text x="9.0484%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (366 samples, 0.32%)</title><rect x="8.7984%" y="837" width="0.3223%" height="15" fill="rgb(209,36,54)" fg:x="9992" fg:w="366"/><text x="9.0484%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (338 samples, 0.30%)</title><rect x="8.8231%" y="821" width="0.2976%" height="15" fill="rgb(220,10,11)" fg:x="10020" fg:w="338"/><text x="9.0731%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (328 samples, 0.29%)</title><rect x="8.8319%" y="805" width="0.2888%" height="15" fill="rgb(221,106,17)" fg:x="10030" fg:w="328"/><text x="9.0819%" y="815.50"></text></g><g><title>___pthread_mutex_unlock (20 samples, 0.02%)</title><rect x="9.1031%" y="789" width="0.0176%" height="15" fill="rgb(251,142,44)" fg:x="10338" fg:w="20"/><text x="9.3531%" y="799.50"></text></g><g><title>core::task::wake::Waker::will_wake (57 samples, 0.05%)</title><rect x="9.1216%" y="869" width="0.0502%" height="15" fill="rgb(238,13,15)" fg:x="10359" fg:w="57"/><text x="9.3716%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (57 samples, 0.05%)</title><rect x="9.1216%" y="853" width="0.0502%" height="15" fill="rgb(208,107,27)" fg:x="10359" fg:w="57"/><text x="9.3716%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (45 samples, 0.04%)</title><rect x="9.1321%" y="837" width="0.0396%" height="15" fill="rgb(205,136,37)" fg:x="10371" fg:w="45"/><text x="9.3821%" y="847.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (45 samples, 0.04%)</title><rect x="9.1321%" y="821" width="0.0396%" height="15" fill="rgb(250,205,27)" fg:x="10371" fg:w="45"/><text x="9.3821%" y="831.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="9.1823%" y="837" width="0.0123%" height="15" fill="rgb(210,80,43)" fg:x="10428" fg:w="14"/><text x="9.4323%" y="847.50"></text></g><g><title>std::sync::poison::Flag::borrow (14 samples, 0.01%)</title><rect x="9.1823%" y="821" width="0.0123%" height="15" fill="rgb(247,160,36)" fg:x="10428" fg:w="14"/><text x="9.4323%" y="831.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="9.1832%" y="805" width="0.0114%" height="15" fill="rgb(234,13,49)" fg:x="10429" fg:w="13"/><text x="9.4332%" y="815.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="9.1832%" y="789" width="0.0114%" height="15" fill="rgb(234,122,0)" fg:x="10429" fg:w="13"/><text x="9.4332%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="9.1832%" y="773" width="0.0114%" height="15" fill="rgb(207,146,38)" fg:x="10429" fg:w="13"/><text x="9.4332%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="9.1832%" y="757" width="0.0114%" height="15" fill="rgb(207,177,25)" fg:x="10429" fg:w="13"/><text x="9.4332%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="9.1832%" y="741" width="0.0114%" height="15" fill="rgb(211,178,42)" fg:x="10429" fg:w="13"/><text x="9.4332%" y="751.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,937 samples, 1.71%)</title><rect x="8.3863%" y="885" width="1.7056%" height="15" fill="rgb(230,69,54)" fg:x="9524" fg:w="1937"/><text x="8.6363%" y="895.50"></text></g><g><title>event_listener::Inner::lock (1,045 samples, 0.92%)</title><rect x="9.1718%" y="869" width="0.9202%" height="15" fill="rgb(214,135,41)" fg:x="10416" fg:w="1045"/><text x="9.4218%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,033 samples, 0.91%)</title><rect x="9.1823%" y="853" width="0.9096%" height="15" fill="rgb(237,67,25)" fg:x="10428" fg:w="1033"/><text x="9.4323%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,019 samples, 0.90%)</title><rect x="9.1947%" y="837" width="0.8973%" height="15" fill="rgb(222,189,50)" fg:x="10442" fg:w="1019"/><text x="9.4447%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (954 samples, 0.84%)</title><rect x="9.2519%" y="821" width="0.8400%" height="15" fill="rgb(245,148,34)" fg:x="10507" fg:w="954"/><text x="9.5019%" y="831.50"></text></g><g><title>___pthread_mutex_lock (954 samples, 0.84%)</title><rect x="9.2519%" y="805" width="0.8400%" height="15" fill="rgb(222,29,6)" fg:x="10507" fg:w="954"/><text x="9.5019%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,010 samples, 1.77%)</title><rect x="8.3370%" y="965" width="1.7699%" height="15" fill="rgb(221,189,43)" fg:x="9468" fg:w="2010"/><text x="8.5870%" y="975.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,010 samples, 1.77%)</title><rect x="8.3370%" y="949" width="1.7699%" height="15" fill="rgb(207,36,27)" fg:x="9468" fg:w="2010"/><text x="8.5870%" y="959.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,010 samples, 1.77%)</title><rect x="8.3370%" y="933" width="1.7699%" height="15" fill="rgb(217,90,24)" fg:x="9468" fg:w="2010"/><text x="8.5870%" y="943.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,010 samples, 1.77%)</title><rect x="8.3370%" y="917" width="1.7699%" height="15" fill="rgb(224,66,35)" fg:x="9468" fg:w="2010"/><text x="8.5870%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,010 samples, 1.77%)</title><rect x="8.3370%" y="901" width="1.7699%" height="15" fill="rgb(221,13,50)" fg:x="9468" fg:w="2010"/><text x="8.5870%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (17 samples, 0.01%)</title><rect x="10.0919%" y="885" width="0.0150%" height="15" fill="rgb(236,68,49)" fg:x="11461" fg:w="17"/><text x="10.3419%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="10.1210%" y="917" width="0.0132%" height="15" fill="rgb(229,146,28)" fg:x="11494" fg:w="15"/><text x="10.3710%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (214 samples, 0.19%)</title><rect x="10.1342%" y="917" width="0.1884%" height="15" fill="rgb(225,31,38)" fg:x="11509" fg:w="214"/><text x="10.3842%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.01%)</title><rect x="10.4600%" y="901" width="0.0132%" height="15" fill="rgb(250,208,3)" fg:x="11879" fg:w="15"/><text x="10.7100%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (671 samples, 0.59%)</title><rect x="10.4732%" y="901" width="0.5908%" height="15" fill="rgb(246,54,23)" fg:x="11894" fg:w="671"/><text x="10.7232%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (17 samples, 0.01%)</title><rect x="11.0667%" y="885" width="0.0150%" height="15" fill="rgb(243,76,11)" fg:x="12568" fg:w="17"/><text x="11.3167%" y="895.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (6,765 samples, 5.96%)</title><rect x="5.1292%" y="1109" width="5.9569%" height="15" fill="rgb(245,21,50)" fg:x="5825" fg:w="6765"/><text x="5.3792%" y="1119.50">async_ex..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (6,765 samples, 5.96%)</title><rect x="5.1292%" y="1093" width="5.9569%" height="15" fill="rgb(228,9,43)" fg:x="5825" fg:w="6765"/><text x="5.3792%" y="1103.50">&lt;async_s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (6,765 samples, 5.96%)</title><rect x="5.1292%" y="1077" width="5.9569%" height="15" fill="rgb(208,100,47)" fg:x="5825" fg:w="6765"/><text x="5.3792%" y="1087.50">async_st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,765 samples, 5.96%)</title><rect x="5.1292%" y="1061" width="5.9569%" height="15" fill="rgb(232,26,8)" fg:x="5825" fg:w="6765"/><text x="5.3792%" y="1071.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,765 samples, 5.96%)</title><rect x="5.1292%" y="1045" width="5.9569%" height="15" fill="rgb(216,166,38)" fg:x="5825" fg:w="6765"/><text x="5.3792%" y="1055.50">std::thr..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,765 samples, 5.96%)</title><rect x="5.1292%" y="1029" width="5.9569%" height="15" fill="rgb(251,202,51)" fg:x="5825" fg:w="6765"/><text x="5.3792%" y="1039.50">async_st..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,765 samples, 5.96%)</title><rect x="5.1292%" y="1013" width="5.9569%" height="15" fill="rgb(254,216,34)" fg:x="5825" fg:w="6765"/><text x="5.3792%" y="1023.50">&lt;async_s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,765 samples, 5.96%)</title><rect x="5.1292%" y="997" width="5.9569%" height="15" fill="rgb(251,32,27)" fg:x="5825" fg:w="6765"/><text x="5.3792%" y="1007.50">&lt;core::f..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,122 samples, 2.75%)</title><rect x="8.3370%" y="981" width="2.7491%" height="15" fill="rgb(208,127,28)" fg:x="9468" fg:w="3122"/><text x="8.5870%" y="991.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,112 samples, 0.98%)</title><rect x="10.1069%" y="965" width="0.9792%" height="15" fill="rgb(224,137,22)" fg:x="11478" fg:w="1112"/><text x="10.3569%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,112 samples, 0.98%)</title><rect x="10.1069%" y="949" width="0.9792%" height="15" fill="rgb(254,70,32)" fg:x="11478" fg:w="1112"/><text x="10.3569%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,112 samples, 0.98%)</title><rect x="10.1069%" y="933" width="0.9792%" height="15" fill="rgb(229,75,37)" fg:x="11478" fg:w="1112"/><text x="10.3569%" y="943.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (867 samples, 0.76%)</title><rect x="10.3226%" y="917" width="0.7634%" height="15" fill="rgb(252,64,23)" fg:x="11723" fg:w="867"/><text x="10.5726%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (25 samples, 0.02%)</title><rect x="11.0641%" y="901" width="0.0220%" height="15" fill="rgb(232,162,48)" fg:x="12565" fg:w="25"/><text x="11.3141%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (99 samples, 0.09%)</title><rect x="11.0861%" y="1077" width="0.0872%" height="15" fill="rgb(246,160,12)" fg:x="12590" fg:w="99"/><text x="11.3361%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (99 samples, 0.09%)</title><rect x="11.0861%" y="1061" width="0.0872%" height="15" fill="rgb(247,166,0)" fg:x="12590" fg:w="99"/><text x="11.3361%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (99 samples, 0.09%)</title><rect x="11.0861%" y="1045" width="0.0872%" height="15" fill="rgb(249,219,21)" fg:x="12590" fg:w="99"/><text x="11.3361%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (104 samples, 0.09%)</title><rect x="11.0861%" y="1109" width="0.0916%" height="15" fill="rgb(205,209,3)" fg:x="12590" fg:w="104"/><text x="11.3361%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (104 samples, 0.09%)</title><rect x="11.0861%" y="1093" width="0.0916%" height="15" fill="rgb(243,44,1)" fg:x="12590" fg:w="104"/><text x="11.3361%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,991 samples, 6.16%)</title><rect x="5.0226%" y="1125" width="6.1559%" height="15" fill="rgb(206,159,16)" fg:x="5704" fg:w="6991"/><text x="5.2726%" y="1135.50">&lt;core::f..</text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="11.1785%" y="1125" width="0.0291%" height="15" fill="rgb(244,77,30)" fg:x="12695" fg:w="33"/><text x="11.4285%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (37 samples, 0.03%)</title><rect x="11.2111%" y="1125" width="0.0326%" height="15" fill="rgb(218,69,12)" fg:x="12732" fg:w="37"/><text x="11.4611%" y="1135.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (23 samples, 0.02%)</title><rect x="11.2490%" y="1125" width="0.0203%" height="15" fill="rgb(212,87,7)" fg:x="12775" fg:w="23"/><text x="11.4990%" y="1135.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="11.2727%" y="1125" width="0.0123%" height="15" fill="rgb(245,114,25)" fg:x="12802" fg:w="14"/><text x="11.5227%" y="1135.50"></text></g><g><title>__clock_gettime_2 (42 samples, 0.04%)</title><rect x="11.2851%" y="1125" width="0.0370%" height="15" fill="rgb(210,61,42)" fg:x="12816" fg:w="42"/><text x="11.5351%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (101 samples, 0.09%)</title><rect x="11.3256%" y="1125" width="0.0889%" height="15" fill="rgb(211,52,33)" fg:x="12862" fg:w="101"/><text x="11.5756%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (36 samples, 0.03%)</title><rect x="11.4171%" y="1125" width="0.0317%" height="15" fill="rgb(234,58,33)" fg:x="12966" fg:w="36"/><text x="11.6671%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (14 samples, 0.01%)</title><rect x="11.4488%" y="1125" width="0.0123%" height="15" fill="rgb(220,115,36)" fg:x="13002" fg:w="14"/><text x="11.6988%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt;&gt;&gt; (31 samples, 0.03%)</title><rect x="11.4753%" y="1109" width="0.0273%" height="15" fill="rgb(243,153,54)" fg:x="13032" fg:w="31"/><text x="11.7253%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (31 samples, 0.03%)</title><rect x="11.4753%" y="1093" width="0.0273%" height="15" fill="rgb(251,47,18)" fg:x="13032" fg:w="31"/><text x="11.7253%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (31 samples, 0.03%)</title><rect x="11.4753%" y="1077" width="0.0273%" height="15" fill="rgb(242,102,42)" fg:x="13032" fg:w="31"/><text x="11.7253%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (31 samples, 0.03%)</title><rect x="11.4753%" y="1061" width="0.0273%" height="15" fill="rgb(234,31,38)" fg:x="13032" fg:w="31"/><text x="11.7253%" y="1071.50"></text></g><g><title>__rg_dealloc (31 samples, 0.03%)</title><rect x="11.4753%" y="1045" width="0.0273%" height="15" fill="rgb(221,117,51)" fg:x="13032" fg:w="31"/><text x="11.7253%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (31 samples, 0.03%)</title><rect x="11.4753%" y="1029" width="0.0273%" height="15" fill="rgb(212,20,18)" fg:x="13032" fg:w="31"/><text x="11.7253%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (68 samples, 0.06%)</title><rect x="11.4638%" y="1125" width="0.0599%" height="15" fill="rgb(245,133,36)" fg:x="13019" fg:w="68"/><text x="11.7138%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;halfbrown::iter::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="11.5114%" y="1109" width="0.0123%" height="15" fill="rgb(212,6,19)" fg:x="13073" fg:w="14"/><text x="11.7614%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::iter::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (14 samples, 0.01%)</title><rect x="11.5114%" y="1093" width="0.0123%" height="15" fill="rgb(218,1,36)" fg:x="13073" fg:w="14"/><text x="11.7614%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::iter::IntoIterInt&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (14 samples, 0.01%)</title><rect x="11.5114%" y="1077" width="0.0123%" height="15" fill="rgb(246,84,54)" fg:x="13073" fg:w="14"/><text x="11.7614%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (14 samples, 0.01%)</title><rect x="11.5114%" y="1061" width="0.0123%" height="15" fill="rgb(242,110,6)" fg:x="13073" fg:w="14"/><text x="11.7614%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::inner::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (14 samples, 0.01%)</title><rect x="11.5114%" y="1045" width="0.0123%" height="15" fill="rgb(214,47,5)" fg:x="13073" fg:w="14"/><text x="11.7614%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="11.5114%" y="1029" width="0.0123%" height="15" fill="rgb(218,159,25)" fg:x="13073" fg:w="14"/><text x="11.7614%" y="1039.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (104 samples, 0.09%)</title><rect x="11.5237%" y="1125" width="0.0916%" height="15" fill="rgb(215,211,28)" fg:x="13087" fg:w="104"/><text x="11.7737%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (13 samples, 0.01%)</title><rect x="11.6038%" y="1109" width="0.0114%" height="15" fill="rgb(238,59,32)" fg:x="13178" fg:w="13"/><text x="11.8538%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (13 samples, 0.01%)</title><rect x="11.6038%" y="1093" width="0.0114%" height="15" fill="rgb(226,82,3)" fg:x="13178" fg:w="13"/><text x="11.8538%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (13 samples, 0.01%)</title><rect x="11.6038%" y="1077" width="0.0114%" height="15" fill="rgb(240,164,32)" fg:x="13178" fg:w="13"/><text x="11.8538%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (13 samples, 0.01%)</title><rect x="11.6038%" y="1061" width="0.0114%" height="15" fill="rgb(232,46,7)" fg:x="13178" fg:w="13"/><text x="11.8538%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="11.6038%" y="1045" width="0.0114%" height="15" fill="rgb(229,129,53)" fg:x="13178" fg:w="13"/><text x="11.8538%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="11.6038%" y="1029" width="0.0114%" height="15" fill="rgb(234,188,29)" fg:x="13178" fg:w="13"/><text x="11.8538%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="11.6038%" y="1013" width="0.0114%" height="15" fill="rgb(246,141,4)" fg:x="13178" fg:w="13"/><text x="11.8538%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="11.6038%" y="997" width="0.0114%" height="15" fill="rgb(229,23,39)" fg:x="13178" fg:w="13"/><text x="11.8538%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="11.6038%" y="981" width="0.0114%" height="15" fill="rgb(206,12,3)" fg:x="13178" fg:w="13"/><text x="11.8538%" y="991.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="11.6038%" y="965" width="0.0114%" height="15" fill="rgb(252,226,20)" fg:x="13178" fg:w="13"/><text x="11.8538%" y="975.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="11.6038%" y="949" width="0.0114%" height="15" fill="rgb(216,123,35)" fg:x="13178" fg:w="13"/><text x="11.8538%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="11.6038%" y="933" width="0.0114%" height="15" fill="rgb(212,68,40)" fg:x="13178" fg:w="13"/><text x="11.8538%" y="943.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (72 samples, 0.06%)</title><rect x="11.6153%" y="1125" width="0.0634%" height="15" fill="rgb(254,125,32)" fg:x="13191" fg:w="72"/><text x="11.8653%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (16 samples, 0.01%)</title><rect x="11.6646%" y="1109" width="0.0141%" height="15" fill="rgb(253,97,22)" fg:x="13247" fg:w="16"/><text x="11.9146%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (16 samples, 0.01%)</title><rect x="11.6646%" y="1093" width="0.0141%" height="15" fill="rgb(241,101,14)" fg:x="13247" fg:w="16"/><text x="11.9146%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (16 samples, 0.01%)</title><rect x="11.6646%" y="1077" width="0.0141%" height="15" fill="rgb(238,103,29)" fg:x="13247" fg:w="16"/><text x="11.9146%" y="1087.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (13 samples, 0.01%)</title><rect x="11.6672%" y="1061" width="0.0114%" height="15" fill="rgb(233,195,47)" fg:x="13250" fg:w="13"/><text x="11.9172%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.01%)</title><rect x="11.6672%" y="1045" width="0.0114%" height="15" fill="rgb(246,218,30)" fg:x="13250" fg:w="13"/><text x="11.9172%" y="1055.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (13 samples, 0.01%)</title><rect x="11.6672%" y="1029" width="0.0114%" height="15" fill="rgb(219,145,47)" fg:x="13250" fg:w="13"/><text x="11.9172%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (13 samples, 0.01%)</title><rect x="11.6672%" y="1013" width="0.0114%" height="15" fill="rgb(243,12,26)" fg:x="13250" fg:w="13"/><text x="11.9172%" y="1023.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (33 samples, 0.03%)</title><rect x="11.6787%" y="1125" width="0.0291%" height="15" fill="rgb(214,87,16)" fg:x="13263" fg:w="33"/><text x="11.9287%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (73 samples, 0.06%)</title><rect x="11.7095%" y="1125" width="0.0643%" height="15" fill="rgb(208,99,42)" fg:x="13298" fg:w="73"/><text x="11.9595%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (14 samples, 0.01%)</title><rect x="11.7931%" y="1077" width="0.0123%" height="15" fill="rgb(253,99,2)" fg:x="13393" fg:w="14"/><text x="12.0431%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (14 samples, 0.01%)</title><rect x="11.7931%" y="1061" width="0.0123%" height="15" fill="rgb(220,168,23)" fg:x="13393" fg:w="14"/><text x="12.0431%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="11.7931%" y="1045" width="0.0123%" height="15" fill="rgb(242,38,24)" fg:x="13393" fg:w="14"/><text x="12.0431%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="11.7931%" y="1029" width="0.0123%" height="15" fill="rgb(225,182,9)" fg:x="13393" fg:w="14"/><text x="12.0431%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="11.7931%" y="1013" width="0.0123%" height="15" fill="rgb(243,178,37)" fg:x="13393" fg:w="14"/><text x="12.0431%" y="1023.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="11.7931%" y="997" width="0.0123%" height="15" fill="rgb(232,139,19)" fg:x="13393" fg:w="14"/><text x="12.0431%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="11.7931%" y="981" width="0.0123%" height="15" fill="rgb(225,201,24)" fg:x="13393" fg:w="14"/><text x="12.0431%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (43 samples, 0.04%)</title><rect x="11.7738%" y="1125" width="0.0379%" height="15" fill="rgb(221,47,46)" fg:x="13371" fg:w="43"/><text x="12.0238%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (21 samples, 0.02%)</title><rect x="11.7931%" y="1109" width="0.0185%" height="15" fill="rgb(249,23,13)" fg:x="13393" fg:w="21"/><text x="12.0431%" y="1119.50"></text></g><g><title>core::mem::drop (21 samples, 0.02%)</title><rect x="11.7931%" y="1093" width="0.0185%" height="15" fill="rgb(219,9,5)" fg:x="13393" fg:w="21"/><text x="12.0431%" y="1103.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (101 samples, 0.09%)</title><rect x="11.8152%" y="1125" width="0.0889%" height="15" fill="rgb(254,171,16)" fg:x="13418" fg:w="101"/><text x="12.0652%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (43 samples, 0.04%)</title><rect x="11.8662%" y="1109" width="0.0379%" height="15" fill="rgb(230,171,20)" fg:x="13476" fg:w="43"/><text x="12.1162%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (43 samples, 0.04%)</title><rect x="11.8662%" y="1093" width="0.0379%" height="15" fill="rgb(210,71,41)" fg:x="13476" fg:w="43"/><text x="12.1162%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (43 samples, 0.04%)</title><rect x="11.8662%" y="1077" width="0.0379%" height="15" fill="rgb(206,173,20)" fg:x="13476" fg:w="43"/><text x="12.1162%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.01%)</title><rect x="11.9446%" y="1093" width="0.0106%" height="15" fill="rgb(233,88,34)" fg:x="13565" fg:w="12"/><text x="12.1946%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.01%)</title><rect x="11.9446%" y="1077" width="0.0106%" height="15" fill="rgb(223,209,46)" fg:x="13565" fg:w="12"/><text x="12.1946%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.01%)</title><rect x="11.9446%" y="1061" width="0.0106%" height="15" fill="rgb(250,43,18)" fg:x="13565" fg:w="12"/><text x="12.1946%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.01%)</title><rect x="11.9446%" y="1045" width="0.0106%" height="15" fill="rgb(208,13,10)" fg:x="13565" fg:w="12"/><text x="12.1946%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="11.9446%" y="1029" width="0.0106%" height="15" fill="rgb(212,200,36)" fg:x="13565" fg:w="12"/><text x="12.1946%" y="1039.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="11.9446%" y="1013" width="0.0106%" height="15" fill="rgb(225,90,30)" fg:x="13565" fg:w="12"/><text x="12.1946%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (12 samples, 0.01%)</title><rect x="11.9446%" y="997" width="0.0106%" height="15" fill="rgb(236,182,39)" fg:x="13565" fg:w="12"/><text x="12.1946%" y="1007.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="11.9446%" y="981" width="0.0106%" height="15" fill="rgb(212,144,35)" fg:x="13565" fg:w="12"/><text x="12.1946%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="11.9446%" y="965" width="0.0106%" height="15" fill="rgb(228,63,44)" fg:x="13565" fg:w="12"/><text x="12.1946%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="11.9446%" y="949" width="0.0106%" height="15" fill="rgb(228,109,6)" fg:x="13565" fg:w="12"/><text x="12.1946%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="11.9446%" y="933" width="0.0106%" height="15" fill="rgb(238,117,24)" fg:x="13565" fg:w="12"/><text x="12.1946%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="11.9446%" y="917" width="0.0106%" height="15" fill="rgb(242,26,26)" fg:x="13565" fg:w="12"/><text x="12.1946%" y="927.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="11.9446%" y="901" width="0.0106%" height="15" fill="rgb(221,92,48)" fg:x="13565" fg:w="12"/><text x="12.1946%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="11.9446%" y="885" width="0.0106%" height="15" fill="rgb(209,209,32)" fg:x="13565" fg:w="12"/><text x="12.1946%" y="895.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (69 samples, 0.06%)</title><rect x="11.9041%" y="1125" width="0.0608%" height="15" fill="rgb(221,70,22)" fg:x="13519" fg:w="69"/><text x="12.1541%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (23 samples, 0.02%)</title><rect x="11.9446%" y="1109" width="0.0203%" height="15" fill="rgb(248,145,5)" fg:x="13565" fg:w="23"/><text x="12.1946%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (12 samples, 0.01%)</title><rect x="11.9930%" y="1125" width="0.0106%" height="15" fill="rgb(226,116,26)" fg:x="13620" fg:w="12"/><text x="12.2430%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="12.0036%" y="789" width="0.0185%" height="15" fill="rgb(244,5,17)" fg:x="13632" fg:w="21"/><text x="12.2536%" y="799.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (72 samples, 0.06%)</title><rect x="12.0221%" y="789" width="0.0634%" height="15" fill="rgb(252,159,33)" fg:x="13653" fg:w="72"/><text x="12.2721%" y="799.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (1,027 samples, 0.90%)</title><rect x="12.4034%" y="773" width="0.9043%" height="15" fill="rgb(206,71,0)" fg:x="14086" fg:w="1027"/><text x="12.6534%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (919 samples, 0.81%)</title><rect x="12.4985%" y="757" width="0.8092%" height="15" fill="rgb(233,118,54)" fg:x="14194" fg:w="919"/><text x="12.7485%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.01%)</title><rect x="13.3112%" y="773" width="0.0132%" height="15" fill="rgb(234,83,48)" fg:x="15117" fg:w="15"/><text x="13.5612%" y="783.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (720 samples, 0.63%)</title><rect x="14.0218%" y="741" width="0.6340%" height="15" fill="rgb(228,3,54)" fg:x="15924" fg:w="720"/><text x="14.2718%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (100 samples, 0.09%)</title><rect x="14.6558%" y="741" width="0.0881%" height="15" fill="rgb(226,155,13)" fg:x="16644" fg:w="100"/><text x="14.9058%" y="751.50"></text></g><g><title>abi_stable::std_types::result::&lt;impl core::convert::From&lt;abi_stable::std_types::result::RResult&lt;T,E&gt;&gt; for core::result::Result&lt;T,E&gt;&gt;::from (28 samples, 0.02%)</title><rect x="14.7192%" y="725" width="0.0247%" height="15" fill="rgb(241,28,37)" fg:x="16716" fg:w="28"/><text x="14.9692%" y="735.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (199 samples, 0.18%)</title><rect x="14.7438%" y="709" width="0.1752%" height="15" fill="rgb(233,93,10)" fg:x="16744" fg:w="199"/><text x="14.9938%" y="719.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (180 samples, 0.16%)</title><rect x="14.7606%" y="693" width="0.1585%" height="15" fill="rgb(225,113,19)" fg:x="16763" fg:w="180"/><text x="15.0106%" y="703.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (180 samples, 0.16%)</title><rect x="14.7606%" y="677" width="0.1585%" height="15" fill="rgb(241,2,18)" fg:x="16763" fg:w="180"/><text x="15.0106%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (52 samples, 0.05%)</title><rect x="14.9596%" y="661" width="0.0458%" height="15" fill="rgb(228,207,21)" fg:x="16989" fg:w="52"/><text x="15.2096%" y="671.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (52 samples, 0.05%)</title><rect x="14.9596%" y="645" width="0.0458%" height="15" fill="rgb(213,211,35)" fg:x="16989" fg:w="52"/><text x="15.2096%" y="655.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (52 samples, 0.05%)</title><rect x="14.9596%" y="629" width="0.0458%" height="15" fill="rgb(209,83,10)" fg:x="16989" fg:w="52"/><text x="15.2096%" y="639.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,761 samples, 1.55%)</title><rect x="14.9191%" y="709" width="1.5506%" height="15" fill="rgb(209,164,1)" fg:x="16943" fg:w="1761"/><text x="15.1691%" y="719.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,744 samples, 1.54%)</title><rect x="14.9340%" y="693" width="1.5357%" height="15" fill="rgb(213,184,43)" fg:x="16960" fg:w="1744"/><text x="15.1840%" y="703.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,732 samples, 1.53%)</title><rect x="14.9446%" y="677" width="1.5251%" height="15" fill="rgb(231,61,34)" fg:x="16972" fg:w="1732"/><text x="15.1946%" y="687.50"></text></g><g><title>std::panic::catch_unwind (1,663 samples, 1.46%)</title><rect x="15.0054%" y="661" width="1.4643%" height="15" fill="rgb(235,75,3)" fg:x="17041" fg:w="1663"/><text x="15.2554%" y="671.50"></text></g><g><title>std::panicking::try (1,663 samples, 1.46%)</title><rect x="15.0054%" y="645" width="1.4643%" height="15" fill="rgb(220,106,47)" fg:x="17041" fg:w="1663"/><text x="15.2554%" y="655.50"></text></g><g><title>std::panicking::try::do_call (1,663 samples, 1.46%)</title><rect x="15.0054%" y="629" width="1.4643%" height="15" fill="rgb(210,196,33)" fg:x="17041" fg:w="1663"/><text x="15.2554%" y="639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20 samples, 0.02%)</title><rect x="16.4521%" y="613" width="0.0176%" height="15" fill="rgb(229,154,42)" fg:x="18684" fg:w="20"/><text x="16.7021%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (20 samples, 0.02%)</title><rect x="16.4521%" y="597" width="0.0176%" height="15" fill="rgb(228,114,26)" fg:x="18684" fg:w="20"/><text x="16.7021%" y="607.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (20 samples, 0.02%)</title><rect x="16.4521%" y="581" width="0.0176%" height="15" fill="rgb(208,144,1)" fg:x="18684" fg:w="20"/><text x="16.7021%" y="591.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,149 samples, 1.89%)</title><rect x="14.7438%" y="741" width="1.8923%" height="15" fill="rgb(239,112,37)" fg:x="16744" fg:w="2149"/><text x="14.9938%" y="751.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,149 samples, 1.89%)</title><rect x="14.7438%" y="725" width="1.8923%" height="15" fill="rgb(210,96,50)" fg:x="16744" fg:w="2149"/><text x="14.9938%" y="735.50">&lt;..</text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (189 samples, 0.17%)</title><rect x="16.4697%" y="709" width="0.1664%" height="15" fill="rgb(222,178,2)" fg:x="18704" fg:w="189"/><text x="16.7197%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (558 samples, 0.49%)</title><rect x="16.6361%" y="741" width="0.4913%" height="15" fill="rgb(226,74,18)" fg:x="18893" fg:w="558"/><text x="16.8861%" y="751.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (59 samples, 0.05%)</title><rect x="17.1275%" y="741" width="0.0520%" height="15" fill="rgb(225,67,54)" fg:x="19451" fg:w="59"/><text x="17.3775%" y="751.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (26 samples, 0.02%)</title><rect x="17.1794%" y="693" width="0.0229%" height="15" fill="rgb(251,92,32)" fg:x="19510" fg:w="26"/><text x="17.4294%" y="703.50"></text></g><g><title>async_ffi::DropBomb::with (26 samples, 0.02%)</title><rect x="17.1794%" y="677" width="0.0229%" height="15" fill="rgb(228,149,22)" fg:x="19510" fg:w="26"/><text x="17.4294%" y="687.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (14 samples, 0.01%)</title><rect x="17.1900%" y="661" width="0.0123%" height="15" fill="rgb(243,54,13)" fg:x="19522" fg:w="14"/><text x="17.4400%" y="671.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="17.1900%" y="645" width="0.0123%" height="15" fill="rgb(243,180,28)" fg:x="19522" fg:w="14"/><text x="17.4400%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}}&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="17.1900%" y="629" width="0.0123%" height="15" fill="rgb(208,167,24)" fg:x="19522" fg:w="14"/><text x="17.4400%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="17.2235%" y="549" width="0.0167%" height="15" fill="rgb(245,73,45)" fg:x="19560" fg:w="19"/><text x="17.4735%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="17.2147%" y="597" width="0.0352%" height="15" fill="rgb(237,203,48)" fg:x="19550" fg:w="40"/><text x="17.4647%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="17.2147%" y="581" width="0.0352%" height="15" fill="rgb(211,197,16)" fg:x="19550" fg:w="40"/><text x="17.4647%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (39 samples, 0.03%)</title><rect x="17.2155%" y="565" width="0.0343%" height="15" fill="rgb(243,99,51)" fg:x="19551" fg:w="39"/><text x="17.4655%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (45 samples, 0.04%)</title><rect x="17.2129%" y="629" width="0.0396%" height="15" fill="rgb(215,123,29)" fg:x="19548" fg:w="45"/><text x="17.4629%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (45 samples, 0.04%)</title><rect x="17.2129%" y="613" width="0.0396%" height="15" fill="rgb(239,186,37)" fg:x="19548" fg:w="45"/><text x="17.4629%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (52 samples, 0.05%)</title><rect x="17.2129%" y="661" width="0.0458%" height="15" fill="rgb(252,136,39)" fg:x="19548" fg:w="52"/><text x="17.4629%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (52 samples, 0.05%)</title><rect x="17.2129%" y="645" width="0.0458%" height="15" fill="rgb(223,213,32)" fg:x="19548" fg:w="52"/><text x="17.4629%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (58 samples, 0.05%)</title><rect x="17.2129%" y="677" width="0.0511%" height="15" fill="rgb(233,115,5)" fg:x="19548" fg:w="58"/><text x="17.4629%" y="687.50"></text></g><g><title>rust_dealloc (76 samples, 0.07%)</title><rect x="17.2023%" y="693" width="0.0669%" height="15" fill="rgb(207,226,44)" fg:x="19536" fg:w="76"/><text x="17.4523%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (120 samples, 0.11%)</title><rect x="17.1794%" y="741" width="0.1057%" height="15" fill="rgb(208,126,0)" fg:x="19510" fg:w="120"/><text x="17.4294%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (120 samples, 0.11%)</title><rect x="17.1794%" y="725" width="0.1057%" height="15" fill="rgb(244,66,21)" fg:x="19510" fg:w="120"/><text x="17.4294%" y="735.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (120 samples, 0.11%)</title><rect x="17.1794%" y="709" width="0.1057%" height="15" fill="rgb(222,97,12)" fg:x="19510" fg:w="120"/><text x="17.4294%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (18 samples, 0.02%)</title><rect x="17.2693%" y="693" width="0.0158%" height="15" fill="rgb(219,213,19)" fg:x="19612" fg:w="18"/><text x="17.5193%" y="703.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (13 samples, 0.01%)</title><rect x="17.2737%" y="677" width="0.0114%" height="15" fill="rgb(252,169,30)" fg:x="19617" fg:w="13"/><text x="17.5237%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned_erms (168 samples, 0.15%)</title><rect x="17.7958%" y="725" width="0.1479%" height="15" fill="rgb(206,32,51)" fg:x="20210" fg:w="168"/><text x="18.0458%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (199 samples, 0.18%)</title><rect x="17.9834%" y="629" width="0.1752%" height="15" fill="rgb(250,172,42)" fg:x="20423" fg:w="199"/><text x="18.2334%" y="639.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="18.1683%" y="485" width="0.0114%" height="15" fill="rgb(209,34,43)" fg:x="20633" fg:w="13"/><text x="18.4183%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (13 samples, 0.01%)</title><rect x="18.2026%" y="469" width="0.0114%" height="15" fill="rgb(223,11,35)" fg:x="20672" fg:w="13"/><text x="18.4526%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (13 samples, 0.01%)</title><rect x="18.2026%" y="453" width="0.0114%" height="15" fill="rgb(251,219,26)" fg:x="20672" fg:w="13"/><text x="18.4526%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (13 samples, 0.01%)</title><rect x="18.2026%" y="437" width="0.0114%" height="15" fill="rgb(231,119,3)" fg:x="20672" fg:w="13"/><text x="18.4526%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (13 samples, 0.01%)</title><rect x="18.2026%" y="421" width="0.0114%" height="15" fill="rgb(216,97,11)" fg:x="20672" fg:w="13"/><text x="18.4526%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (13 samples, 0.01%)</title><rect x="18.2026%" y="405" width="0.0114%" height="15" fill="rgb(223,59,9)" fg:x="20672" fg:w="13"/><text x="18.4526%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (16 samples, 0.01%)</title><rect x="18.2202%" y="421" width="0.0141%" height="15" fill="rgb(233,93,31)" fg:x="20692" fg:w="16"/><text x="18.4702%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (31 samples, 0.03%)</title><rect x="18.2141%" y="437" width="0.0273%" height="15" fill="rgb(239,81,33)" fg:x="20685" fg:w="31"/><text x="18.4641%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (163 samples, 0.14%)</title><rect x="18.2141%" y="469" width="0.1435%" height="15" fill="rgb(213,120,34)" fg:x="20685" fg:w="163"/><text x="18.4641%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (163 samples, 0.14%)</title><rect x="18.2141%" y="453" width="0.1435%" height="15" fill="rgb(243,49,53)" fg:x="20685" fg:w="163"/><text x="18.4641%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (132 samples, 0.12%)</title><rect x="18.2414%" y="437" width="0.1162%" height="15" fill="rgb(247,216,33)" fg:x="20716" fg:w="132"/><text x="18.4914%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (114 samples, 0.10%)</title><rect x="18.2572%" y="421" width="0.1004%" height="15" fill="rgb(226,26,14)" fg:x="20734" fg:w="114"/><text x="18.5072%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (114 samples, 0.10%)</title><rect x="18.2572%" y="405" width="0.1004%" height="15" fill="rgb(215,49,53)" fg:x="20734" fg:w="114"/><text x="18.5072%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (114 samples, 0.10%)</title><rect x="18.2572%" y="389" width="0.1004%" height="15" fill="rgb(245,162,40)" fg:x="20734" fg:w="114"/><text x="18.5072%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (26 samples, 0.02%)</title><rect x="18.3664%" y="437" width="0.0229%" height="15" fill="rgb(229,68,17)" fg:x="20858" fg:w="26"/><text x="18.6164%" y="447.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (26 samples, 0.02%)</title><rect x="18.3664%" y="421" width="0.0229%" height="15" fill="rgb(213,182,10)" fg:x="20858" fg:w="26"/><text x="18.6164%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (26 samples, 0.02%)</title><rect x="18.3664%" y="405" width="0.0229%" height="15" fill="rgb(245,125,30)" fg:x="20858" fg:w="26"/><text x="18.6164%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (38 samples, 0.03%)</title><rect x="18.3893%" y="437" width="0.0335%" height="15" fill="rgb(232,202,2)" fg:x="20884" fg:w="38"/><text x="18.6393%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (38 samples, 0.03%)</title><rect x="18.3893%" y="421" width="0.0335%" height="15" fill="rgb(237,140,51)" fg:x="20884" fg:w="38"/><text x="18.6393%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (79 samples, 0.07%)</title><rect x="18.3576%" y="469" width="0.0696%" height="15" fill="rgb(236,157,25)" fg:x="20848" fg:w="79"/><text x="18.6076%" y="479.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (70 samples, 0.06%)</title><rect x="18.3655%" y="453" width="0.0616%" height="15" fill="rgb(219,209,0)" fg:x="20857" fg:w="70"/><text x="18.6155%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="18.4272%" y="469" width="0.0114%" height="15" fill="rgb(240,116,54)" fg:x="20927" fg:w="13"/><text x="18.6772%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="18.4272%" y="453" width="0.0114%" height="15" fill="rgb(216,10,36)" fg:x="20927" fg:w="13"/><text x="18.6772%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="18.4281%" y="437" width="0.0106%" height="15" fill="rgb(222,72,44)" fg:x="20928" fg:w="12"/><text x="18.6781%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::empty (58 samples, 0.05%)</title><rect x="18.4386%" y="469" width="0.0511%" height="15" fill="rgb(232,159,9)" fg:x="20940" fg:w="58"/><text x="18.6886%" y="479.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (58 samples, 0.05%)</title><rect x="18.4386%" y="453" width="0.0511%" height="15" fill="rgb(210,39,32)" fg:x="20940" fg:w="58"/><text x="18.6886%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (880 samples, 0.77%)</title><rect x="18.1683%" y="517" width="0.7749%" height="15" fill="rgb(216,194,45)" fg:x="20633" fg:w="880"/><text x="18.4183%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (880 samples, 0.77%)</title><rect x="18.1683%" y="501" width="0.7749%" height="15" fill="rgb(218,18,35)" fg:x="20633" fg:w="880"/><text x="18.4183%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (860 samples, 0.76%)</title><rect x="18.1859%" y="485" width="0.7573%" height="15" fill="rgb(207,83,51)" fg:x="20653" fg:w="860"/><text x="18.4359%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (515 samples, 0.45%)</title><rect x="18.4897%" y="469" width="0.4535%" height="15" fill="rgb(225,63,43)" fg:x="20998" fg:w="515"/><text x="18.7397%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (515 samples, 0.45%)</title><rect x="18.4897%" y="453" width="0.4535%" height="15" fill="rgb(207,57,36)" fg:x="20998" fg:w="515"/><text x="18.7397%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,130 samples, 1.00%)</title><rect x="17.9605%" y="645" width="0.9950%" height="15" fill="rgb(216,99,33)" fg:x="20397" fg:w="1130"/><text x="18.2105%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (905 samples, 0.80%)</title><rect x="18.1586%" y="629" width="0.7969%" height="15" fill="rgb(225,42,16)" fg:x="20622" fg:w="905"/><text x="18.4086%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (905 samples, 0.80%)</title><rect x="18.1586%" y="613" width="0.7969%" height="15" fill="rgb(220,201,45)" fg:x="20622" fg:w="905"/><text x="18.4086%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (905 samples, 0.80%)</title><rect x="18.1586%" y="597" width="0.7969%" height="15" fill="rgb(225,33,4)" fg:x="20622" fg:w="905"/><text x="18.4086%" y="607.50"></text></g><g><title>alloc::alloc::alloc (903 samples, 0.80%)</title><rect x="18.1604%" y="581" width="0.7951%" height="15" fill="rgb(224,33,50)" fg:x="20624" fg:w="903"/><text x="18.4104%" y="591.50"></text></g><g><title>__rg_alloc (903 samples, 0.80%)</title><rect x="18.1604%" y="565" width="0.7951%" height="15" fill="rgb(246,198,51)" fg:x="20624" fg:w="903"/><text x="18.4104%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (903 samples, 0.80%)</title><rect x="18.1604%" y="549" width="0.7951%" height="15" fill="rgb(205,22,4)" fg:x="20624" fg:w="903"/><text x="18.4104%" y="559.50"></text></g><g><title>rust_alloc (901 samples, 0.79%)</title><rect x="18.1621%" y="533" width="0.7934%" height="15" fill="rgb(206,3,8)" fg:x="20626" fg:w="901"/><text x="18.4121%" y="543.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="18.9432%" y="517" width="0.0123%" height="15" fill="rgb(251,23,15)" fg:x="21513" fg:w="14"/><text x="19.1932%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (1,161 samples, 1.02%)</title><rect x="17.9446%" y="725" width="1.0223%" height="15" fill="rgb(252,88,28)" fg:x="20379" fg:w="1161"/><text x="18.1946%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (1,143 samples, 1.01%)</title><rect x="17.9605%" y="709" width="1.0065%" height="15" fill="rgb(212,127,14)" fg:x="20397" fg:w="1143"/><text x="18.2105%" y="719.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (1,143 samples, 1.01%)</title><rect x="17.9605%" y="693" width="1.0065%" height="15" fill="rgb(247,145,37)" fg:x="20397" fg:w="1143"/><text x="18.2105%" y="703.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (1,143 samples, 1.01%)</title><rect x="17.9605%" y="677" width="1.0065%" height="15" fill="rgb(209,117,53)" fg:x="20397" fg:w="1143"/><text x="18.2105%" y="687.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (1,143 samples, 1.01%)</title><rect x="17.9605%" y="661" width="1.0065%" height="15" fill="rgb(212,90,42)" fg:x="20397" fg:w="1143"/><text x="18.2105%" y="671.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (13 samples, 0.01%)</title><rect x="18.9555%" y="645" width="0.0114%" height="15" fill="rgb(218,164,37)" fg:x="21527" fg:w="13"/><text x="19.2055%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::_::&lt;impl tremor_runtime::connectors::sink::RawSink_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::on_event (35 samples, 0.03%)</title><rect x="18.9678%" y="725" width="0.0308%" height="15" fill="rgb(246,65,34)" fg:x="21541" fg:w="35"/><text x="19.2178%" y="735.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (1,947 samples, 1.71%)</title><rect x="17.2851%" y="741" width="1.7144%" height="15" fill="rgb(231,100,33)" fg:x="19630" fg:w="1947"/><text x="17.5351%" y="751.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (6,049 samples, 5.33%)</title><rect x="13.6749%" y="757" width="5.3264%" height="15" fill="rgb(228,126,14)" fg:x="15530" fg:w="6049"/><text x="13.9249%" y="767.50">tremor_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,444 samples, 5.67%)</title><rect x="13.3332%" y="773" width="5.6742%" height="15" fill="rgb(215,173,21)" fg:x="15142" fg:w="6444"/><text x="13.5832%" y="783.50">&lt;core::..</text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (23 samples, 0.02%)</title><rect x="19.0585%" y="645" width="0.0203%" height="15" fill="rgb(210,6,40)" fg:x="21644" fg:w="23"/><text x="19.3085%" y="655.50"></text></g><g><title>rust_alloc (16 samples, 0.01%)</title><rect x="19.1254%" y="469" width="0.0141%" height="15" fill="rgb(212,48,18)" fg:x="21720" fg:w="16"/><text x="19.3754%" y="479.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (281 samples, 0.25%)</title><rect x="19.0585%" y="661" width="0.2474%" height="15" fill="rgb(230,214,11)" fg:x="21644" fg:w="281"/><text x="19.3085%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (258 samples, 0.23%)</title><rect x="19.0788%" y="645" width="0.2272%" height="15" fill="rgb(254,105,39)" fg:x="21667" fg:w="258"/><text x="19.3288%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (258 samples, 0.23%)</title><rect x="19.0788%" y="629" width="0.2272%" height="15" fill="rgb(245,158,5)" fg:x="21667" fg:w="258"/><text x="19.3288%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (231 samples, 0.20%)</title><rect x="19.1025%" y="613" width="0.2034%" height="15" fill="rgb(249,208,11)" fg:x="21694" fg:w="231"/><text x="19.3525%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (231 samples, 0.20%)</title><rect x="19.1025%" y="597" width="0.2034%" height="15" fill="rgb(210,39,28)" fg:x="21694" fg:w="231"/><text x="19.3525%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (231 samples, 0.20%)</title><rect x="19.1025%" y="581" width="0.2034%" height="15" fill="rgb(211,56,53)" fg:x="21694" fg:w="231"/><text x="19.3525%" y="591.50"></text></g><g><title>alloc::alloc::alloc (231 samples, 0.20%)</title><rect x="19.1025%" y="565" width="0.2034%" height="15" fill="rgb(226,201,30)" fg:x="21694" fg:w="231"/><text x="19.3525%" y="575.50"></text></g><g><title>__rg_alloc (231 samples, 0.20%)</title><rect x="19.1025%" y="549" width="0.2034%" height="15" fill="rgb(239,101,34)" fg:x="21694" fg:w="231"/><text x="19.3525%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (231 samples, 0.20%)</title><rect x="19.1025%" y="533" width="0.2034%" height="15" fill="rgb(226,209,5)" fg:x="21694" fg:w="231"/><text x="19.3525%" y="543.50"></text></g><g><title>rust_alloc (221 samples, 0.19%)</title><rect x="19.1114%" y="517" width="0.1946%" height="15" fill="rgb(250,105,47)" fg:x="21704" fg:w="221"/><text x="19.3614%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (206 samples, 0.18%)</title><rect x="19.1246%" y="501" width="0.1814%" height="15" fill="rgb(230,72,3)" fg:x="21719" fg:w="206"/><text x="19.3746%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (205 samples, 0.18%)</title><rect x="19.1254%" y="485" width="0.1805%" height="15" fill="rgb(232,218,39)" fg:x="21720" fg:w="205"/><text x="19.3754%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (189 samples, 0.17%)</title><rect x="19.1395%" y="469" width="0.1664%" height="15" fill="rgb(248,166,6)" fg:x="21736" fg:w="189"/><text x="19.3895%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (169 samples, 0.15%)</title><rect x="19.1571%" y="453" width="0.1488%" height="15" fill="rgb(247,89,20)" fg:x="21756" fg:w="169"/><text x="19.4071%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (169 samples, 0.15%)</title><rect x="19.1571%" y="437" width="0.1488%" height="15" fill="rgb(248,130,54)" fg:x="21756" fg:w="169"/><text x="19.4071%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (16 samples, 0.01%)</title><rect x="19.3200%" y="597" width="0.0141%" height="15" fill="rgb(234,196,4)" fg:x="21941" fg:w="16"/><text x="19.5700%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (16 samples, 0.01%)</title><rect x="19.3200%" y="581" width="0.0141%" height="15" fill="rgb(250,143,31)" fg:x="21941" fg:w="16"/><text x="19.5700%" y="591.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (352 samples, 0.31%)</title><rect x="19.0418%" y="741" width="0.3100%" height="15" fill="rgb(211,110,34)" fg:x="21625" fg:w="352"/><text x="19.2918%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (340 samples, 0.30%)</title><rect x="19.0524%" y="725" width="0.2994%" height="15" fill="rgb(215,124,48)" fg:x="21637" fg:w="340"/><text x="19.3024%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (334 samples, 0.29%)</title><rect x="19.0576%" y="709" width="0.2941%" height="15" fill="rgb(216,46,13)" fg:x="21643" fg:w="334"/><text x="19.3076%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (333 samples, 0.29%)</title><rect x="19.0585%" y="693" width="0.2932%" height="15" fill="rgb(205,184,25)" fg:x="21644" fg:w="333"/><text x="19.3085%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (333 samples, 0.29%)</title><rect x="19.0585%" y="677" width="0.2932%" height="15" fill="rgb(228,1,10)" fg:x="21644" fg:w="333"/><text x="19.3085%" y="687.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::iter (52 samples, 0.05%)</title><rect x="19.3060%" y="661" width="0.0458%" height="15" fill="rgb(213,116,27)" fg:x="21925" fg:w="52"/><text x="19.5560%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (37 samples, 0.03%)</title><rect x="19.3192%" y="645" width="0.0326%" height="15" fill="rgb(241,95,50)" fg:x="21940" fg:w="37"/><text x="19.5692%" y="655.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter (37 samples, 0.03%)</title><rect x="19.3192%" y="629" width="0.0326%" height="15" fill="rgb(238,48,32)" fg:x="21940" fg:w="37"/><text x="19.5692%" y="639.50"></text></g><g><title>hashbrown::raw::inner::RawIterRange&lt;T&gt;::new (36 samples, 0.03%)</title><rect x="19.3200%" y="613" width="0.0317%" height="15" fill="rgb(235,113,49)" fg:x="21941" fg:w="36"/><text x="19.5700%" y="623.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="19.3517%" y="709" width="0.0132%" height="15" fill="rgb(205,127,43)" fg:x="21977" fg:w="15"/><text x="19.6017%" y="719.50"></text></g><g><title>aligned_size (16 samples, 0.01%)</title><rect x="19.4046%" y="501" width="0.0141%" height="15" fill="rgb(250,162,2)" fg:x="22037" fg:w="16"/><text x="19.6546%" y="511.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="19.4187%" y="469" width="0.0106%" height="15" fill="rgb(220,13,41)" fg:x="22053" fg:w="12"/><text x="19.6687%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="19.4389%" y="453" width="0.0167%" height="15" fill="rgb(249,221,25)" fg:x="22076" fg:w="19"/><text x="19.6889%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (19 samples, 0.02%)</title><rect x="19.4389%" y="437" width="0.0167%" height="15" fill="rgb(215,208,19)" fg:x="22076" fg:w="19"/><text x="19.6889%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (17 samples, 0.01%)</title><rect x="19.4407%" y="421" width="0.0150%" height="15" fill="rgb(236,175,2)" fg:x="22078" fg:w="17"/><text x="19.6907%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="19.4433%" y="405" width="0.0123%" height="15" fill="rgb(241,52,2)" fg:x="22081" fg:w="14"/><text x="19.6933%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="19.4433%" y="389" width="0.0123%" height="15" fill="rgb(248,140,14)" fg:x="22081" fg:w="14"/><text x="19.6933%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="19.4433%" y="373" width="0.0123%" height="15" fill="rgb(253,22,42)" fg:x="22081" fg:w="14"/><text x="19.6933%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (201 samples, 0.18%)</title><rect x="19.4187%" y="501" width="0.1770%" height="15" fill="rgb(234,61,47)" fg:x="22053" fg:w="201"/><text x="19.6687%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (201 samples, 0.18%)</title><rect x="19.4187%" y="485" width="0.1770%" height="15" fill="rgb(208,226,15)" fg:x="22053" fg:w="201"/><text x="19.6687%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (189 samples, 0.17%)</title><rect x="19.4292%" y="469" width="0.1664%" height="15" fill="rgb(217,221,4)" fg:x="22065" fg:w="189"/><text x="19.6792%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (149 samples, 0.13%)</title><rect x="19.4645%" y="453" width="0.1312%" height="15" fill="rgb(212,174,34)" fg:x="22105" fg:w="149"/><text x="19.7145%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (149 samples, 0.13%)</title><rect x="19.4645%" y="437" width="0.1312%" height="15" fill="rgb(253,83,4)" fg:x="22105" fg:w="149"/><text x="19.7145%" y="447.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (263 samples, 0.23%)</title><rect x="19.3650%" y="709" width="0.2316%" height="15" fill="rgb(250,195,49)" fg:x="21992" fg:w="263"/><text x="19.6150%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (263 samples, 0.23%)</title><rect x="19.3650%" y="693" width="0.2316%" height="15" fill="rgb(241,192,25)" fg:x="21992" fg:w="263"/><text x="19.6150%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (263 samples, 0.23%)</title><rect x="19.3650%" y="677" width="0.2316%" height="15" fill="rgb(208,124,10)" fg:x="21992" fg:w="263"/><text x="19.6150%" y="687.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (253 samples, 0.22%)</title><rect x="19.3738%" y="661" width="0.2228%" height="15" fill="rgb(222,33,0)" fg:x="22002" fg:w="253"/><text x="19.6238%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (253 samples, 0.22%)</title><rect x="19.3738%" y="645" width="0.2228%" height="15" fill="rgb(234,209,28)" fg:x="22002" fg:w="253"/><text x="19.6238%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (248 samples, 0.22%)</title><rect x="19.3782%" y="629" width="0.2184%" height="15" fill="rgb(224,11,23)" fg:x="22007" fg:w="248"/><text x="19.6282%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (219 samples, 0.19%)</title><rect x="19.4037%" y="613" width="0.1928%" height="15" fill="rgb(232,99,1)" fg:x="22036" fg:w="219"/><text x="19.6537%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (219 samples, 0.19%)</title><rect x="19.4037%" y="597" width="0.1928%" height="15" fill="rgb(237,95,45)" fg:x="22036" fg:w="219"/><text x="19.6537%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (219 samples, 0.19%)</title><rect x="19.4037%" y="581" width="0.1928%" height="15" fill="rgb(208,109,11)" fg:x="22036" fg:w="219"/><text x="19.6537%" y="591.50"></text></g><g><title>alloc::alloc::alloc (219 samples, 0.19%)</title><rect x="19.4037%" y="565" width="0.1928%" height="15" fill="rgb(216,190,48)" fg:x="22036" fg:w="219"/><text x="19.6537%" y="575.50"></text></g><g><title>__rg_alloc (219 samples, 0.19%)</title><rect x="19.4037%" y="549" width="0.1928%" height="15" fill="rgb(251,171,36)" fg:x="22036" fg:w="219"/><text x="19.6537%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (219 samples, 0.19%)</title><rect x="19.4037%" y="533" width="0.1928%" height="15" fill="rgb(230,62,22)" fg:x="22036" fg:w="219"/><text x="19.6537%" y="543.50"></text></g><g><title>rust_alloc (218 samples, 0.19%)</title><rect x="19.4046%" y="517" width="0.1920%" height="15" fill="rgb(225,114,35)" fg:x="22037" fg:w="218"/><text x="19.6546%" y="527.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (13 samples, 0.01%)</title><rect x="19.7832%" y="661" width="0.0114%" height="15" fill="rgb(215,118,42)" fg:x="22467" fg:w="13"/><text x="20.0332%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="19.7832%" y="645" width="0.0114%" height="15" fill="rgb(243,119,21)" fg:x="22467" fg:w="13"/><text x="20.0332%" y="655.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (13 samples, 0.01%)</title><rect x="19.7832%" y="629" width="0.0114%" height="15" fill="rgb(252,177,53)" fg:x="22467" fg:w="13"/><text x="20.0332%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="19.8167%" y="629" width="0.0282%" height="15" fill="rgb(237,209,29)" fg:x="22505" fg:w="32"/><text x="20.0667%" y="639.50"></text></g><g><title>&lt;halfbrown::iter::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="19.8167%" y="613" width="0.0282%" height="15" fill="rgb(212,65,23)" fg:x="22505" fg:w="32"/><text x="20.0667%" y="623.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="19.8281%" y="597" width="0.0167%" height="15" fill="rgb(230,222,46)" fg:x="22518" fg:w="19"/><text x="20.0781%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="19.8281%" y="581" width="0.0167%" height="15" fill="rgb(215,135,32)" fg:x="22518" fg:w="19"/><text x="20.0781%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="19.8281%" y="565" width="0.0167%" height="15" fill="rgb(246,101,22)" fg:x="22518" fg:w="19"/><text x="20.0781%" y="575.50"></text></g><g><title>abi_stable::erased_types::iterator::next (55 samples, 0.05%)</title><rect x="19.7973%" y="661" width="0.0484%" height="15" fill="rgb(206,107,13)" fg:x="22483" fg:w="55"/><text x="20.0473%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (33 samples, 0.03%)</title><rect x="19.8167%" y="645" width="0.0291%" height="15" fill="rgb(250,100,44)" fg:x="22505" fg:w="33"/><text x="20.0667%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.08%)</title><rect x="19.7753%" y="693" width="0.0837%" height="15" fill="rgb(231,147,38)" fg:x="22458" fg:w="95"/><text x="20.0253%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (95 samples, 0.08%)</title><rect x="19.7753%" y="677" width="0.0837%" height="15" fill="rgb(229,8,40)" fg:x="22458" fg:w="95"/><text x="20.0253%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (15 samples, 0.01%)</title><rect x="19.8457%" y="661" width="0.0132%" height="15" fill="rgb(221,135,30)" fg:x="22538" fg:w="15"/><text x="20.0957%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (14 samples, 0.01%)</title><rect x="19.8466%" y="645" width="0.0123%" height="15" fill="rgb(249,193,18)" fg:x="22539" fg:w="14"/><text x="20.0966%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="19.8466%" y="629" width="0.0123%" height="15" fill="rgb(209,133,39)" fg:x="22539" fg:w="14"/><text x="20.0966%" y="639.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (14 samples, 0.01%)</title><rect x="19.8466%" y="613" width="0.0123%" height="15" fill="rgb(232,100,14)" fg:x="22539" fg:w="14"/><text x="20.0966%" y="623.50"></text></g><g><title>&lt;abi_stable::std_types::tuple::Tuple2&lt;A,B&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (25 samples, 0.02%)</title><rect x="19.8589%" y="661" width="0.0220%" height="15" fill="rgb(224,185,1)" fg:x="22553" fg:w="25"/><text x="20.1089%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (65 samples, 0.06%)</title><rect x="19.8880%" y="661" width="0.0572%" height="15" fill="rgb(223,139,8)" fg:x="22586" fg:w="65"/><text x="20.1380%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (64 samples, 0.06%)</title><rect x="19.8889%" y="645" width="0.0564%" height="15" fill="rgb(232,213,38)" fg:x="22587" fg:w="64"/><text x="20.1389%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (48 samples, 0.04%)</title><rect x="19.9030%" y="629" width="0.0423%" height="15" fill="rgb(207,94,22)" fg:x="22603" fg:w="48"/><text x="20.1530%" y="639.50"></text></g><g><title>&lt;halfbrown::iter::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (48 samples, 0.04%)</title><rect x="19.9030%" y="613" width="0.0423%" height="15" fill="rgb(219,183,54)" fg:x="22603" fg:w="48"/><text x="20.1530%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (109 samples, 0.10%)</title><rect x="19.8589%" y="693" width="0.0960%" height="15" fill="rgb(216,185,54)" fg:x="22553" fg:w="109"/><text x="20.1089%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (109 samples, 0.10%)</title><rect x="19.8589%" y="677" width="0.0960%" height="15" fill="rgb(254,217,39)" fg:x="22553" fg:w="109"/><text x="20.1089%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (34 samples, 0.03%)</title><rect x="19.9549%" y="693" width="0.0299%" height="15" fill="rgb(240,178,23)" fg:x="22662" fg:w="34"/><text x="20.2049%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (34 samples, 0.03%)</title><rect x="19.9549%" y="677" width="0.0299%" height="15" fill="rgb(218,11,47)" fg:x="22662" fg:w="34"/><text x="20.2049%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (34 samples, 0.03%)</title><rect x="19.9549%" y="661" width="0.0299%" height="15" fill="rgb(218,51,51)" fg:x="22662" fg:w="34"/><text x="20.2049%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (31 samples, 0.03%)</title><rect x="19.9576%" y="645" width="0.0273%" height="15" fill="rgb(238,126,27)" fg:x="22665" fg:w="31"/><text x="20.2076%" y="655.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (31 samples, 0.03%)</title><rect x="19.9576%" y="629" width="0.0273%" height="15" fill="rgb(249,202,22)" fg:x="22665" fg:w="31"/><text x="20.2076%" y="639.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::reserve (29 samples, 0.03%)</title><rect x="19.9593%" y="613" width="0.0255%" height="15" fill="rgb(254,195,49)" fg:x="22667" fg:w="29"/><text x="20.2093%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (18 samples, 0.02%)</title><rect x="19.9690%" y="597" width="0.0158%" height="15" fill="rgb(208,123,14)" fg:x="22678" fg:w="18"/><text x="20.2190%" y="607.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="19.9690%" y="581" width="0.0158%" height="15" fill="rgb(224,200,8)" fg:x="22678" fg:w="18"/><text x="20.2190%" y="591.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="20.0289%" y="485" width="0.0114%" height="15" fill="rgb(217,61,36)" fg:x="22746" fg:w="13"/><text x="20.2789%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (20 samples, 0.02%)</title><rect x="20.0544%" y="437" width="0.0176%" height="15" fill="rgb(206,35,45)" fg:x="22775" fg:w="20"/><text x="20.3044%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (47 samples, 0.04%)</title><rect x="20.0403%" y="485" width="0.0414%" height="15" fill="rgb(217,65,33)" fg:x="22759" fg:w="47"/><text x="20.2903%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (47 samples, 0.04%)</title><rect x="20.0403%" y="469" width="0.0414%" height="15" fill="rgb(222,158,48)" fg:x="22759" fg:w="47"/><text x="20.2903%" y="479.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (47 samples, 0.04%)</title><rect x="20.0403%" y="453" width="0.0414%" height="15" fill="rgb(254,2,54)" fg:x="22759" fg:w="47"/><text x="20.2903%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (63 samples, 0.06%)</title><rect x="20.0289%" y="517" width="0.0555%" height="15" fill="rgb(250,143,38)" fg:x="22746" fg:w="63"/><text x="20.2789%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (63 samples, 0.06%)</title><rect x="20.0289%" y="501" width="0.0555%" height="15" fill="rgb(248,25,0)" fg:x="22746" fg:w="63"/><text x="20.2789%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (73 samples, 0.06%)</title><rect x="20.0289%" y="549" width="0.0643%" height="15" fill="rgb(206,152,27)" fg:x="22746" fg:w="73"/><text x="20.2789%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (73 samples, 0.06%)</title><rect x="20.0289%" y="533" width="0.0643%" height="15" fill="rgb(240,77,30)" fg:x="22746" fg:w="73"/><text x="20.2789%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (84 samples, 0.07%)</title><rect x="20.0280%" y="565" width="0.0740%" height="15" fill="rgb(231,5,3)" fg:x="22745" fg:w="84"/><text x="20.2780%" y="575.50"></text></g><g><title>rust_dealloc (103 samples, 0.09%)</title><rect x="20.0236%" y="581" width="0.0907%" height="15" fill="rgb(207,226,32)" fg:x="22740" fg:w="103"/><text x="20.2736%" y="591.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="20.1020%" y="565" width="0.0123%" height="15" fill="rgb(222,207,47)" fg:x="22829" fg:w="14"/><text x="20.3520%" y="575.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,261 samples, 1.11%)</title><rect x="19.0074%" y="773" width="1.1104%" height="15" fill="rgb(229,115,45)" fg:x="21586" fg:w="1261"/><text x="19.2574%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,232 samples, 1.08%)</title><rect x="19.0330%" y="757" width="1.0848%" height="15" fill="rgb(224,191,6)" fg:x="21615" fg:w="1232"/><text x="19.2830%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (870 samples, 0.77%)</title><rect x="19.3517%" y="741" width="0.7661%" height="15" fill="rgb(230,227,24)" fg:x="21977" fg:w="870"/><text x="19.6017%" y="751.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (870 samples, 0.77%)</title><rect x="19.3517%" y="725" width="0.7661%" height="15" fill="rgb(228,80,19)" fg:x="21977" fg:w="870"/><text x="19.6017%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (592 samples, 0.52%)</title><rect x="19.5965%" y="709" width="0.5213%" height="15" fill="rgb(247,229,0)" fg:x="22255" fg:w="592"/><text x="19.8465%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (151 samples, 0.13%)</title><rect x="19.9849%" y="693" width="0.1330%" height="15" fill="rgb(237,194,15)" fg:x="22696" fg:w="151"/><text x="20.2349%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (151 samples, 0.13%)</title><rect x="19.9849%" y="677" width="0.1330%" height="15" fill="rgb(219,203,20)" fg:x="22696" fg:w="151"/><text x="20.2349%" y="687.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (151 samples, 0.13%)</title><rect x="19.9849%" y="661" width="0.1330%" height="15" fill="rgb(234,128,8)" fg:x="22696" fg:w="151"/><text x="20.2349%" y="671.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (137 samples, 0.12%)</title><rect x="19.9972%" y="645" width="0.1206%" height="15" fill="rgb(248,202,8)" fg:x="22710" fg:w="137"/><text x="20.2472%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (129 samples, 0.11%)</title><rect x="20.0042%" y="629" width="0.1136%" height="15" fill="rgb(206,104,37)" fg:x="22718" fg:w="129"/><text x="20.2542%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;halfbrown::iter::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt; (129 samples, 0.11%)</title><rect x="20.0042%" y="613" width="0.1136%" height="15" fill="rgb(223,8,27)" fg:x="22718" fg:w="129"/><text x="20.2542%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (129 samples, 0.11%)</title><rect x="20.0042%" y="597" width="0.1136%" height="15" fill="rgb(216,217,28)" fg:x="22718" fg:w="129"/><text x="20.2542%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (17 samples, 0.01%)</title><rect x="20.1742%" y="725" width="0.0150%" height="15" fill="rgb(249,199,1)" fg:x="22911" fg:w="17"/><text x="20.4242%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (17 samples, 0.01%)</title><rect x="20.1742%" y="709" width="0.0150%" height="15" fill="rgb(240,85,17)" fg:x="22911" fg:w="17"/><text x="20.4242%" y="719.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (94 samples, 0.08%)</title><rect x="20.1310%" y="757" width="0.0828%" height="15" fill="rgb(206,108,45)" fg:x="22862" fg:w="94"/><text x="20.3810%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (67 samples, 0.06%)</title><rect x="20.1548%" y="741" width="0.0590%" height="15" fill="rgb(245,210,41)" fg:x="22889" fg:w="67"/><text x="20.4048%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (28 samples, 0.02%)</title><rect x="20.1891%" y="725" width="0.0247%" height="15" fill="rgb(206,13,37)" fg:x="22928" fg:w="28"/><text x="20.4391%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (28 samples, 0.02%)</title><rect x="20.1891%" y="709" width="0.0247%" height="15" fill="rgb(250,61,18)" fg:x="22928" fg:w="28"/><text x="20.4391%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.02%)</title><rect x="20.1891%" y="693" width="0.0247%" height="15" fill="rgb(235,172,48)" fg:x="22928" fg:w="28"/><text x="20.4391%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.02%)</title><rect x="20.1891%" y="677" width="0.0247%" height="15" fill="rgb(249,201,17)" fg:x="22928" fg:w="28"/><text x="20.4391%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.02%)</title><rect x="20.1891%" y="661" width="0.0247%" height="15" fill="rgb(219,208,6)" fg:x="22928" fg:w="28"/><text x="20.4391%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="20.1962%" y="645" width="0.0176%" height="15" fill="rgb(248,31,23)" fg:x="22936" fg:w="20"/><text x="20.4462%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="20.1962%" y="629" width="0.0176%" height="15" fill="rgb(245,15,42)" fg:x="22936" fg:w="20"/><text x="20.4462%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.02%)</title><rect x="20.1962%" y="613" width="0.0176%" height="15" fill="rgb(222,217,39)" fg:x="22936" fg:w="20"/><text x="20.4462%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::array (20 samples, 0.02%)</title><rect x="20.1962%" y="597" width="0.0176%" height="15" fill="rgb(210,219,27)" fg:x="22936" fg:w="20"/><text x="20.4462%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (20 samples, 0.02%)</title><rect x="20.1962%" y="581" width="0.0176%" height="15" fill="rgb(252,166,36)" fg:x="22936" fg:w="20"/><text x="20.4462%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (20 samples, 0.02%)</title><rect x="20.1962%" y="565" width="0.0176%" height="15" fill="rgb(245,132,34)" fg:x="22936" fg:w="20"/><text x="20.4462%" y="575.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (16 samples, 0.01%)</title><rect x="20.2657%" y="629" width="0.0141%" height="15" fill="rgb(236,54,3)" fg:x="23015" fg:w="16"/><text x="20.5157%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="20.3300%" y="437" width="0.0158%" height="15" fill="rgb(241,173,43)" fg:x="23088" fg:w="18"/><text x="20.5800%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (18 samples, 0.02%)</title><rect x="20.3300%" y="421" width="0.0158%" height="15" fill="rgb(215,190,9)" fg:x="23088" fg:w="18"/><text x="20.5800%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (12 samples, 0.01%)</title><rect x="20.3353%" y="405" width="0.0106%" height="15" fill="rgb(242,101,16)" fg:x="23094" fg:w="12"/><text x="20.5853%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (16 samples, 0.01%)</title><rect x="20.3503%" y="437" width="0.0141%" height="15" fill="rgb(223,190,21)" fg:x="23111" fg:w="16"/><text x="20.6003%" y="447.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (16 samples, 0.01%)</title><rect x="20.3503%" y="421" width="0.0141%" height="15" fill="rgb(215,228,25)" fg:x="23111" fg:w="16"/><text x="20.6003%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (250 samples, 0.22%)</title><rect x="20.3177%" y="485" width="0.2201%" height="15" fill="rgb(225,36,22)" fg:x="23074" fg:w="250"/><text x="20.5677%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (248 samples, 0.22%)</title><rect x="20.3195%" y="469" width="0.2184%" height="15" fill="rgb(251,106,46)" fg:x="23076" fg:w="248"/><text x="20.5695%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (240 samples, 0.21%)</title><rect x="20.3265%" y="453" width="0.2113%" height="15" fill="rgb(208,90,1)" fg:x="23084" fg:w="240"/><text x="20.5765%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (197 samples, 0.17%)</title><rect x="20.3644%" y="437" width="0.1735%" height="15" fill="rgb(243,10,4)" fg:x="23127" fg:w="197"/><text x="20.6144%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (197 samples, 0.17%)</title><rect x="20.3644%" y="421" width="0.1735%" height="15" fill="rgb(212,137,27)" fg:x="23127" fg:w="197"/><text x="20.6144%" y="431.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (313 samples, 0.28%)</title><rect x="20.2657%" y="645" width="0.2756%" height="15" fill="rgb(231,220,49)" fg:x="23015" fg:w="313"/><text x="20.5157%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (297 samples, 0.26%)</title><rect x="20.2798%" y="629" width="0.2615%" height="15" fill="rgb(237,96,20)" fg:x="23031" fg:w="297"/><text x="20.5298%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (297 samples, 0.26%)</title><rect x="20.2798%" y="613" width="0.2615%" height="15" fill="rgb(239,229,30)" fg:x="23031" fg:w="297"/><text x="20.5298%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (270 samples, 0.24%)</title><rect x="20.3036%" y="597" width="0.2377%" height="15" fill="rgb(219,65,33)" fg:x="23058" fg:w="270"/><text x="20.5536%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (270 samples, 0.24%)</title><rect x="20.3036%" y="581" width="0.2377%" height="15" fill="rgb(243,134,7)" fg:x="23058" fg:w="270"/><text x="20.5536%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (270 samples, 0.24%)</title><rect x="20.3036%" y="565" width="0.2377%" height="15" fill="rgb(216,177,54)" fg:x="23058" fg:w="270"/><text x="20.5536%" y="575.50"></text></g><g><title>alloc::alloc::alloc (270 samples, 0.24%)</title><rect x="20.3036%" y="549" width="0.2377%" height="15" fill="rgb(211,160,20)" fg:x="23058" fg:w="270"/><text x="20.5536%" y="559.50"></text></g><g><title>__rg_alloc (270 samples, 0.24%)</title><rect x="20.3036%" y="533" width="0.2377%" height="15" fill="rgb(239,85,39)" fg:x="23058" fg:w="270"/><text x="20.5536%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (270 samples, 0.24%)</title><rect x="20.3036%" y="517" width="0.2377%" height="15" fill="rgb(232,125,22)" fg:x="23058" fg:w="270"/><text x="20.5536%" y="527.50"></text></g><g><title>rust_alloc (260 samples, 0.23%)</title><rect x="20.3124%" y="501" width="0.2289%" height="15" fill="rgb(244,57,34)" fg:x="23068" fg:w="260"/><text x="20.5624%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (30 samples, 0.03%)</title><rect x="20.7236%" y="581" width="0.0264%" height="15" fill="rgb(214,203,32)" fg:x="23535" fg:w="30"/><text x="20.9736%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (30 samples, 0.03%)</title><rect x="20.7236%" y="565" width="0.0264%" height="15" fill="rgb(207,58,43)" fg:x="23535" fg:w="30"/><text x="20.9736%" y="575.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load_aligned (84 samples, 0.07%)</title><rect x="20.7500%" y="581" width="0.0740%" height="15" fill="rgb(215,193,15)" fg:x="23565" fg:w="84"/><text x="21.0000%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (84 samples, 0.07%)</title><rect x="20.7500%" y="565" width="0.0740%" height="15" fill="rgb(232,15,44)" fg:x="23565" fg:w="84"/><text x="21.0000%" y="575.50"></text></g><g><title>hashbrown::raw::inner::RawIterRange&lt;T&gt;::new (136 samples, 0.12%)</title><rect x="20.7236%" y="597" width="0.1198%" height="15" fill="rgb(212,3,48)" fg:x="23535" fg:w="136"/><text x="20.9736%" y="607.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_full (22 samples, 0.02%)</title><rect x="20.8240%" y="581" width="0.0194%" height="15" fill="rgb(218,128,7)" fg:x="23649" fg:w="22"/><text x="21.0740%" y="591.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (18 samples, 0.02%)</title><rect x="20.8275%" y="565" width="0.0158%" height="15" fill="rgb(226,216,39)" fg:x="23653" fg:w="18"/><text x="21.0775%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (18 samples, 0.02%)</title><rect x="20.8275%" y="549" width="0.0158%" height="15" fill="rgb(243,47,51)" fg:x="23653" fg:w="18"/><text x="21.0775%" y="559.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (692 samples, 0.61%)</title><rect x="20.2534%" y="725" width="0.6093%" height="15" fill="rgb(241,183,40)" fg:x="23001" fg:w="692"/><text x="20.5034%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (683 samples, 0.60%)</title><rect x="20.2613%" y="709" width="0.6014%" height="15" fill="rgb(231,217,32)" fg:x="23010" fg:w="683"/><text x="20.5113%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (682 samples, 0.60%)</title><rect x="20.2622%" y="693" width="0.6005%" height="15" fill="rgb(229,61,38)" fg:x="23011" fg:w="682"/><text x="20.5122%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (678 samples, 0.60%)</title><rect x="20.2657%" y="677" width="0.5970%" height="15" fill="rgb(225,210,5)" fg:x="23015" fg:w="678"/><text x="20.5157%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (678 samples, 0.60%)</title><rect x="20.2657%" y="661" width="0.5970%" height="15" fill="rgb(231,79,45)" fg:x="23015" fg:w="678"/><text x="20.5157%" y="671.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::iter (365 samples, 0.32%)</title><rect x="20.5414%" y="645" width="0.3214%" height="15" fill="rgb(224,100,7)" fg:x="23328" fg:w="365"/><text x="20.7914%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (189 samples, 0.17%)</title><rect x="20.6963%" y="629" width="0.1664%" height="15" fill="rgb(241,198,18)" fg:x="23504" fg:w="189"/><text x="20.9463%" y="639.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter (189 samples, 0.17%)</title><rect x="20.6963%" y="613" width="0.1664%" height="15" fill="rgb(252,97,53)" fg:x="23504" fg:w="189"/><text x="20.9463%" y="623.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::buckets (22 samples, 0.02%)</title><rect x="20.8434%" y="597" width="0.0194%" height="15" fill="rgb(220,88,7)" fg:x="23671" fg:w="22"/><text x="21.0934%" y="607.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="20.9103%" y="453" width="0.0106%" height="15" fill="rgb(213,176,14)" fg:x="23747" fg:w="12"/><text x="21.1603%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.01%)</title><rect x="20.9306%" y="437" width="0.0150%" height="15" fill="rgb(246,73,7)" fg:x="23770" fg:w="17"/><text x="21.1806%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (17 samples, 0.01%)</title><rect x="20.9306%" y="421" width="0.0150%" height="15" fill="rgb(245,64,36)" fg:x="23770" fg:w="17"/><text x="21.1806%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (12 samples, 0.01%)</title><rect x="20.9350%" y="405" width="0.0106%" height="15" fill="rgb(245,80,10)" fg:x="23775" fg:w="12"/><text x="21.1850%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (103 samples, 0.09%)</title><rect x="20.9085%" y="485" width="0.0907%" height="15" fill="rgb(232,107,50)" fg:x="23745" fg:w="103"/><text x="21.1585%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (102 samples, 0.09%)</title><rect x="20.9094%" y="469" width="0.0898%" height="15" fill="rgb(253,3,0)" fg:x="23746" fg:w="102"/><text x="21.1594%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.08%)</title><rect x="20.9209%" y="453" width="0.0784%" height="15" fill="rgb(212,99,53)" fg:x="23759" fg:w="89"/><text x="21.1709%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (55 samples, 0.05%)</title><rect x="20.9508%" y="437" width="0.0484%" height="15" fill="rgb(249,111,54)" fg:x="23793" fg:w="55"/><text x="21.2008%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (55 samples, 0.05%)</title><rect x="20.9508%" y="421" width="0.0484%" height="15" fill="rgb(249,55,30)" fg:x="23793" fg:w="55"/><text x="21.2008%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (149 samples, 0.13%)</title><rect x="20.8698%" y="693" width="0.1312%" height="15" fill="rgb(237,47,42)" fg:x="23701" fg:w="149"/><text x="21.1198%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (149 samples, 0.13%)</title><rect x="20.8698%" y="677" width="0.1312%" height="15" fill="rgb(211,20,18)" fg:x="23701" fg:w="149"/><text x="21.1198%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (149 samples, 0.13%)</title><rect x="20.8698%" y="661" width="0.1312%" height="15" fill="rgb(231,203,46)" fg:x="23701" fg:w="149"/><text x="21.1198%" y="671.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (139 samples, 0.12%)</title><rect x="20.8786%" y="645" width="0.1224%" height="15" fill="rgb(237,142,3)" fg:x="23711" fg:w="139"/><text x="21.1286%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (139 samples, 0.12%)</title><rect x="20.8786%" y="629" width="0.1224%" height="15" fill="rgb(241,107,1)" fg:x="23711" fg:w="139"/><text x="21.1286%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (136 samples, 0.12%)</title><rect x="20.8812%" y="613" width="0.1198%" height="15" fill="rgb(229,83,13)" fg:x="23714" fg:w="136"/><text x="21.1312%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (117 samples, 0.10%)</title><rect x="20.8980%" y="597" width="0.1030%" height="15" fill="rgb(241,91,40)" fg:x="23733" fg:w="117"/><text x="21.1480%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (117 samples, 0.10%)</title><rect x="20.8980%" y="581" width="0.1030%" height="15" fill="rgb(225,3,45)" fg:x="23733" fg:w="117"/><text x="21.1480%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (117 samples, 0.10%)</title><rect x="20.8980%" y="565" width="0.1030%" height="15" fill="rgb(244,223,14)" fg:x="23733" fg:w="117"/><text x="21.1480%" y="575.50"></text></g><g><title>alloc::alloc::alloc (117 samples, 0.10%)</title><rect x="20.8980%" y="549" width="0.1030%" height="15" fill="rgb(224,124,37)" fg:x="23733" fg:w="117"/><text x="21.1480%" y="559.50"></text></g><g><title>__rg_alloc (117 samples, 0.10%)</title><rect x="20.8980%" y="533" width="0.1030%" height="15" fill="rgb(251,171,30)" fg:x="23733" fg:w="117"/><text x="21.1480%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (117 samples, 0.10%)</title><rect x="20.8980%" y="517" width="0.1030%" height="15" fill="rgb(236,46,54)" fg:x="23733" fg:w="117"/><text x="21.1480%" y="527.50"></text></g><g><title>rust_alloc (116 samples, 0.10%)</title><rect x="20.8989%" y="501" width="0.1021%" height="15" fill="rgb(245,213,5)" fg:x="23734" fg:w="116"/><text x="21.1489%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.02%)</title><rect x="21.2854%" y="613" width="0.0238%" height="15" fill="rgb(230,144,27)" fg:x="24173" fg:w="27"/><text x="21.5354%" y="623.50"></text></g><g><title>&lt;halfbrown::iter::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.02%)</title><rect x="21.2854%" y="597" width="0.0238%" height="15" fill="rgb(220,86,6)" fg:x="24173" fg:w="27"/><text x="21.5354%" y="607.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="21.2925%" y="581" width="0.0167%" height="15" fill="rgb(240,20,13)" fg:x="24181" fg:w="19"/><text x="21.5425%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="21.2925%" y="565" width="0.0167%" height="15" fill="rgb(217,89,34)" fg:x="24181" fg:w="19"/><text x="21.5425%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="21.2925%" y="549" width="0.0167%" height="15" fill="rgb(229,13,5)" fg:x="24181" fg:w="19"/><text x="21.5425%" y="559.50"></text></g><g><title>abi_stable::erased_types::iterator::next (50 samples, 0.04%)</title><rect x="21.2669%" y="645" width="0.0440%" height="15" fill="rgb(244,67,35)" fg:x="24152" fg:w="50"/><text x="21.5169%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (29 samples, 0.03%)</title><rect x="21.2854%" y="629" width="0.0255%" height="15" fill="rgb(221,40,2)" fg:x="24173" fg:w="29"/><text x="21.5354%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 0.07%)</title><rect x="21.2476%" y="677" width="0.0704%" height="15" fill="rgb(237,157,21)" fg:x="24130" fg:w="80"/><text x="21.4976%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (80 samples, 0.07%)</title><rect x="21.2476%" y="661" width="0.0704%" height="15" fill="rgb(222,94,11)" fg:x="24130" fg:w="80"/><text x="21.4976%" y="671.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_ref (12 samples, 0.01%)</title><rect x="21.3268%" y="645" width="0.0106%" height="15" fill="rgb(249,113,6)" fg:x="24220" fg:w="12"/><text x="21.5768%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (83 samples, 0.07%)</title><rect x="21.3374%" y="645" width="0.0731%" height="15" fill="rgb(238,137,36)" fg:x="24232" fg:w="83"/><text x="21.5874%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (82 samples, 0.07%)</title><rect x="21.3383%" y="629" width="0.0722%" height="15" fill="rgb(210,102,26)" fg:x="24233" fg:w="82"/><text x="21.5883%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (69 samples, 0.06%)</title><rect x="21.3497%" y="613" width="0.0608%" height="15" fill="rgb(218,30,30)" fg:x="24246" fg:w="69"/><text x="21.5997%" y="623.50"></text></g><g><title>&lt;halfbrown::iter::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (69 samples, 0.06%)</title><rect x="21.3497%" y="597" width="0.0608%" height="15" fill="rgb(214,67,26)" fg:x="24246" fg:w="69"/><text x="21.5997%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="21.4105%" y="613" width="0.0123%" height="15" fill="rgb(251,9,53)" fg:x="24315" fg:w="14"/><text x="21.6605%" y="623.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (14 samples, 0.01%)</title><rect x="21.4105%" y="597" width="0.0123%" height="15" fill="rgb(228,204,25)" fg:x="24315" fg:w="14"/><text x="21.6605%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (136 samples, 0.12%)</title><rect x="21.3180%" y="677" width="0.1198%" height="15" fill="rgb(207,153,8)" fg:x="24210" fg:w="136"/><text x="21.5680%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (136 samples, 0.12%)</title><rect x="21.3180%" y="661" width="0.1198%" height="15" fill="rgb(242,9,16)" fg:x="24210" fg:w="136"/><text x="21.5680%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (31 samples, 0.03%)</title><rect x="21.4105%" y="645" width="0.0273%" height="15" fill="rgb(217,211,10)" fg:x="24315" fg:w="31"/><text x="21.6605%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (31 samples, 0.03%)</title><rect x="21.4105%" y="629" width="0.0273%" height="15" fill="rgb(219,228,52)" fg:x="24315" fg:w="31"/><text x="21.6605%" y="639.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (17 samples, 0.01%)</title><rect x="21.4228%" y="613" width="0.0150%" height="15" fill="rgb(231,92,29)" fg:x="24329" fg:w="17"/><text x="21.6728%" y="623.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (31 samples, 0.03%)</title><rect x="21.4378%" y="677" width="0.0273%" height="15" fill="rgb(232,8,23)" fg:x="24346" fg:w="31"/><text x="21.6878%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (31 samples, 0.03%)</title><rect x="21.4378%" y="661" width="0.0273%" height="15" fill="rgb(216,211,34)" fg:x="24346" fg:w="31"/><text x="21.6878%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (31 samples, 0.03%)</title><rect x="21.4378%" y="645" width="0.0273%" height="15" fill="rgb(236,151,0)" fg:x="24346" fg:w="31"/><text x="21.6878%" y="655.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (23 samples, 0.02%)</title><rect x="21.4448%" y="629" width="0.0203%" height="15" fill="rgb(209,168,3)" fg:x="24354" fg:w="23"/><text x="21.6948%" y="639.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (23 samples, 0.02%)</title><rect x="21.4448%" y="613" width="0.0203%" height="15" fill="rgb(208,129,28)" fg:x="24354" fg:w="23"/><text x="21.6948%" y="623.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::reserve (18 samples, 0.02%)</title><rect x="21.4492%" y="597" width="0.0158%" height="15" fill="rgb(229,78,22)" fg:x="24359" fg:w="18"/><text x="21.6992%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (15 samples, 0.01%)</title><rect x="21.4879%" y="565" width="0.0132%" height="15" fill="rgb(228,187,13)" fg:x="24403" fg:w="15"/><text x="21.7379%" y="575.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="21.5012%" y="549" width="0.0132%" height="15" fill="rgb(240,119,24)" fg:x="24418" fg:w="15"/><text x="21.7512%" y="559.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="21.5152%" y="469" width="0.0106%" height="15" fill="rgb(209,194,42)" fg:x="24434" fg:w="12"/><text x="21.7652%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (43 samples, 0.04%)</title><rect x="21.5637%" y="421" width="0.0379%" height="15" fill="rgb(247,200,46)" fg:x="24489" fg:w="43"/><text x="21.8137%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (39 samples, 0.03%)</title><rect x="21.5672%" y="405" width="0.0343%" height="15" fill="rgb(218,76,16)" fg:x="24493" fg:w="39"/><text x="21.8172%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (89 samples, 0.08%)</title><rect x="21.5311%" y="469" width="0.0784%" height="15" fill="rgb(225,21,48)" fg:x="24452" fg:w="89"/><text x="21.7811%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (89 samples, 0.08%)</title><rect x="21.5311%" y="453" width="0.0784%" height="15" fill="rgb(239,223,50)" fg:x="24452" fg:w="89"/><text x="21.7811%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (89 samples, 0.08%)</title><rect x="21.5311%" y="437" width="0.0784%" height="15" fill="rgb(244,45,21)" fg:x="24452" fg:w="89"/><text x="21.7811%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (118 samples, 0.10%)</title><rect x="21.5152%" y="501" width="0.1039%" height="15" fill="rgb(232,33,43)" fg:x="24434" fg:w="118"/><text x="21.7652%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (118 samples, 0.10%)</title><rect x="21.5152%" y="485" width="0.1039%" height="15" fill="rgb(209,8,3)" fg:x="24434" fg:w="118"/><text x="21.7652%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (127 samples, 0.11%)</title><rect x="21.5152%" y="533" width="0.1118%" height="15" fill="rgb(214,25,53)" fg:x="24434" fg:w="127"/><text x="21.7652%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (127 samples, 0.11%)</title><rect x="21.5152%" y="517" width="0.1118%" height="15" fill="rgb(254,186,54)" fg:x="24434" fg:w="127"/><text x="21.7652%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (137 samples, 0.12%)</title><rect x="21.5144%" y="549" width="0.1206%" height="15" fill="rgb(208,174,49)" fg:x="24433" fg:w="137"/><text x="21.7644%" y="559.50"></text></g><g><title>rust_dealloc (169 samples, 0.15%)</title><rect x="21.5012%" y="565" width="0.1488%" height="15" fill="rgb(233,191,51)" fg:x="24418" fg:w="169"/><text x="21.7512%" y="575.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (17 samples, 0.01%)</title><rect x="21.6350%" y="549" width="0.0150%" height="15" fill="rgb(222,134,10)" fg:x="24570" fg:w="17"/><text x="21.8850%" y="559.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,633 samples, 1.44%)</title><rect x="20.2138%" y="757" width="1.4379%" height="15" fill="rgb(230,226,20)" fg:x="22956" fg:w="1633"/><text x="20.4638%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,591 samples, 1.40%)</title><rect x="20.2508%" y="741" width="1.4009%" height="15" fill="rgb(251,111,25)" fg:x="22998" fg:w="1591"/><text x="20.5008%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (896 samples, 0.79%)</title><rect x="20.8628%" y="725" width="0.7890%" height="15" fill="rgb(224,40,46)" fg:x="23693" fg:w="896"/><text x="21.1128%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (896 samples, 0.79%)</title><rect x="20.8628%" y="709" width="0.7890%" height="15" fill="rgb(236,108,47)" fg:x="23693" fg:w="896"/><text x="21.1128%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (739 samples, 0.65%)</title><rect x="21.0010%" y="693" width="0.6507%" height="15" fill="rgb(234,93,0)" fg:x="23850" fg:w="739"/><text x="21.2510%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (212 samples, 0.19%)</title><rect x="21.4651%" y="677" width="0.1867%" height="15" fill="rgb(224,213,32)" fg:x="24377" fg:w="212"/><text x="21.7151%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (212 samples, 0.19%)</title><rect x="21.4651%" y="661" width="0.1867%" height="15" fill="rgb(251,11,48)" fg:x="24377" fg:w="212"/><text x="21.7151%" y="671.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (212 samples, 0.19%)</title><rect x="21.4651%" y="645" width="0.1867%" height="15" fill="rgb(236,173,5)" fg:x="24377" fg:w="212"/><text x="21.7151%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (202 samples, 0.18%)</title><rect x="21.4739%" y="629" width="0.1779%" height="15" fill="rgb(230,95,12)" fg:x="24387" fg:w="202"/><text x="21.7239%" y="639.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (191 samples, 0.17%)</title><rect x="21.4835%" y="613" width="0.1682%" height="15" fill="rgb(232,209,1)" fg:x="24398" fg:w="191"/><text x="21.7335%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;halfbrown::iter::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt; (191 samples, 0.17%)</title><rect x="21.4835%" y="597" width="0.1682%" height="15" fill="rgb(232,6,1)" fg:x="24398" fg:w="191"/><text x="21.7335%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (191 samples, 0.17%)</title><rect x="21.4835%" y="581" width="0.1682%" height="15" fill="rgb(210,224,50)" fg:x="24398" fg:w="191"/><text x="21.7335%" y="591.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (1,760 samples, 1.55%)</title><rect x="20.1178%" y="773" width="1.5498%" height="15" fill="rgb(228,127,35)" fg:x="22847" fg:w="1760"/><text x="20.3678%" y="783.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (18 samples, 0.02%)</title><rect x="21.6517%" y="757" width="0.0158%" height="15" fill="rgb(245,102,45)" fg:x="24589" fg:w="18"/><text x="21.9017%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,636 samples, 1.44%)</title><rect x="21.6676%" y="773" width="1.4406%" height="15" fill="rgb(214,1,49)" fg:x="24607" fg:w="1636"/><text x="21.9176%" y="783.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (59 samples, 0.05%)</title><rect x="23.2570%" y="485" width="0.0520%" height="15" fill="rgb(226,163,40)" fg:x="26412" fg:w="59"/><text x="23.5070%" y="495.50"></text></g><g><title> (59 samples, 0.05%)</title><rect x="23.2570%" y="469" width="0.0520%" height="15" fill="rgb(239,212,28)" fg:x="26412" fg:w="59"/><text x="23.5070%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (204 samples, 0.18%)</title><rect x="23.1478%" y="517" width="0.1796%" height="15" fill="rgb(220,20,13)" fg:x="26288" fg:w="204"/><text x="23.3978%" y="527.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (188 samples, 0.17%)</title><rect x="23.1619%" y="501" width="0.1655%" height="15" fill="rgb(210,164,35)" fg:x="26304" fg:w="188"/><text x="23.4119%" y="511.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (16 samples, 0.01%)</title><rect x="23.3133%" y="485" width="0.0141%" height="15" fill="rgb(248,109,41)" fg:x="26476" fg:w="16"/><text x="23.5633%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (266 samples, 0.23%)</title><rect x="23.1381%" y="549" width="0.2342%" height="15" fill="rgb(238,23,50)" fg:x="26277" fg:w="266"/><text x="23.3881%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (266 samples, 0.23%)</title><rect x="23.1381%" y="533" width="0.2342%" height="15" fill="rgb(211,48,49)" fg:x="26277" fg:w="266"/><text x="23.3881%" y="543.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (50 samples, 0.04%)</title><rect x="23.3283%" y="517" width="0.0440%" height="15" fill="rgb(223,36,21)" fg:x="26493" fg:w="50"/><text x="23.5783%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (279 samples, 0.25%)</title><rect x="23.1381%" y="581" width="0.2457%" height="15" fill="rgb(207,123,46)" fg:x="26277" fg:w="279"/><text x="23.3881%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (279 samples, 0.25%)</title><rect x="23.1381%" y="565" width="0.2457%" height="15" fill="rgb(240,218,32)" fg:x="26277" fg:w="279"/><text x="23.3881%" y="575.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="23.3723%" y="549" width="0.0114%" height="15" fill="rgb(252,5,43)" fg:x="26543" fg:w="13"/><text x="23.6223%" y="559.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="23.3723%" y="533" width="0.0114%" height="15" fill="rgb(252,84,19)" fg:x="26543" fg:w="13"/><text x="23.6223%" y="543.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="23.3723%" y="517" width="0.0114%" height="15" fill="rgb(243,152,39)" fg:x="26543" fg:w="13"/><text x="23.6223%" y="527.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="23.3723%" y="501" width="0.0114%" height="15" fill="rgb(234,160,15)" fg:x="26543" fg:w="13"/><text x="23.6223%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (300 samples, 0.26%)</title><rect x="23.1240%" y="597" width="0.2642%" height="15" fill="rgb(237,34,20)" fg:x="26261" fg:w="300"/><text x="23.3740%" y="607.50"></text></g><g><title>rust_dealloc (312 samples, 0.27%)</title><rect x="23.1187%" y="613" width="0.2747%" height="15" fill="rgb(229,97,13)" fg:x="26255" fg:w="312"/><text x="23.3687%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (326 samples, 0.29%)</title><rect x="23.1081%" y="773" width="0.2871%" height="15" fill="rgb(234,71,50)" fg:x="26243" fg:w="326"/><text x="23.3581%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (326 samples, 0.29%)</title><rect x="23.1081%" y="757" width="0.2871%" height="15" fill="rgb(253,155,4)" fg:x="26243" fg:w="326"/><text x="23.3581%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (314 samples, 0.28%)</title><rect x="23.1187%" y="741" width="0.2765%" height="15" fill="rgb(222,185,37)" fg:x="26255" fg:w="314"/><text x="23.3687%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (314 samples, 0.28%)</title><rect x="23.1187%" y="725" width="0.2765%" height="15" fill="rgb(251,177,13)" fg:x="26255" fg:w="314"/><text x="23.3687%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (314 samples, 0.28%)</title><rect x="23.1187%" y="709" width="0.2765%" height="15" fill="rgb(250,179,40)" fg:x="26255" fg:w="314"/><text x="23.3687%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (314 samples, 0.28%)</title><rect x="23.1187%" y="693" width="0.2765%" height="15" fill="rgb(242,44,2)" fg:x="26255" fg:w="314"/><text x="23.3687%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (314 samples, 0.28%)</title><rect x="23.1187%" y="677" width="0.2765%" height="15" fill="rgb(216,177,13)" fg:x="26255" fg:w="314"/><text x="23.3687%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (314 samples, 0.28%)</title><rect x="23.1187%" y="661" width="0.2765%" height="15" fill="rgb(216,106,43)" fg:x="26255" fg:w="314"/><text x="23.3687%" y="671.50"></text></g><g><title>__rg_dealloc (314 samples, 0.28%)</title><rect x="23.1187%" y="645" width="0.2765%" height="15" fill="rgb(216,183,2)" fg:x="26255" fg:w="314"/><text x="23.3687%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (314 samples, 0.28%)</title><rect x="23.1187%" y="629" width="0.2765%" height="15" fill="rgb(249,75,3)" fg:x="26255" fg:w="314"/><text x="23.3687%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (80 samples, 0.07%)</title><rect x="23.3952%" y="757" width="0.0704%" height="15" fill="rgb(219,67,39)" fg:x="26569" fg:w="80"/><text x="23.6452%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (94 samples, 0.08%)</title><rect x="23.3952%" y="773" width="0.0828%" height="15" fill="rgb(253,228,2)" fg:x="26569" fg:w="94"/><text x="23.6452%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="23.4656%" y="757" width="0.0123%" height="15" fill="rgb(235,138,27)" fg:x="26649" fg:w="14"/><text x="23.7156%" y="767.50"></text></g><g><title>core::time::Duration::as_nanos (21 samples, 0.02%)</title><rect x="23.5290%" y="757" width="0.0185%" height="15" fill="rgb(236,97,51)" fg:x="26721" fg:w="21"/><text x="23.7790%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (128 samples, 0.11%)</title><rect x="23.6638%" y="709" width="0.1127%" height="15" fill="rgb(240,80,30)" fg:x="26874" fg:w="128"/><text x="23.9138%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::ge (128 samples, 0.11%)</title><rect x="23.6638%" y="693" width="0.1127%" height="15" fill="rgb(230,178,19)" fg:x="26874" fg:w="128"/><text x="23.9138%" y="703.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (126 samples, 0.11%)</title><rect x="23.6655%" y="677" width="0.1109%" height="15" fill="rgb(210,190,27)" fg:x="26876" fg:w="126"/><text x="23.9155%" y="687.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (126 samples, 0.11%)</title><rect x="23.6655%" y="661" width="0.1109%" height="15" fill="rgb(222,107,31)" fg:x="26876" fg:w="126"/><text x="23.9155%" y="671.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (126 samples, 0.11%)</title><rect x="23.6655%" y="645" width="0.1109%" height="15" fill="rgb(216,127,34)" fg:x="26876" fg:w="126"/><text x="23.9155%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (61 samples, 0.05%)</title><rect x="23.7228%" y="629" width="0.0537%" height="15" fill="rgb(234,116,52)" fg:x="26941" fg:w="61"/><text x="23.9728%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (301 samples, 0.27%)</title><rect x="23.5475%" y="741" width="0.2650%" height="15" fill="rgb(222,124,15)" fg:x="26742" fg:w="301"/><text x="23.7975%" y="751.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (301 samples, 0.27%)</title><rect x="23.5475%" y="725" width="0.2650%" height="15" fill="rgb(231,179,28)" fg:x="26742" fg:w="301"/><text x="23.7975%" y="735.50"></text></g><g><title>core::time::Duration::new (41 samples, 0.04%)</title><rect x="23.7765%" y="709" width="0.0361%" height="15" fill="rgb(226,93,45)" fg:x="27002" fg:w="41"/><text x="24.0265%" y="719.50"></text></g><g><title>std::time::SystemTime::duration_since (321 samples, 0.28%)</title><rect x="23.5475%" y="757" width="0.2827%" height="15" fill="rgb(215,8,51)" fg:x="26742" fg:w="321"/><text x="23.7975%" y="767.50"></text></g><g><title>tremor_common::time::nanotime (20 samples, 0.02%)</title><rect x="23.8126%" y="741" width="0.0176%" height="15" fill="rgb(223,106,5)" fg:x="27043" fg:w="20"/><text x="24.0626%" y="751.50"></text></g><g><title>__clock_gettime_2 (1,293 samples, 1.14%)</title><rect x="24.1217%" y="709" width="1.1385%" height="15" fill="rgb(250,191,5)" fg:x="27394" fg:w="1293"/><text x="24.3717%" y="719.50"></text></g><g><title>__vdso_clock_gettime (1,229 samples, 1.08%)</title><rect x="24.1780%" y="693" width="1.0822%" height="15" fill="rgb(242,132,44)" fg:x="27458" fg:w="1229"/><text x="24.4280%" y="703.50"></text></g><g><title>[[vdso]] (820 samples, 0.72%)</title><rect x="24.5382%" y="677" width="0.7220%" height="15" fill="rgb(251,152,29)" fg:x="27867" fg:w="820"/><text x="24.7882%" y="687.50"></text></g><g><title>tremor_common::time::nanotime (2,025 samples, 1.78%)</title><rect x="23.4780%" y="773" width="1.7831%" height="15" fill="rgb(218,179,5)" fg:x="26663" fg:w="2025"/><text x="23.7280%" y="783.50">t..</text></g><g><title>std::time::SystemTime::now (1,625 samples, 1.43%)</title><rect x="23.8302%" y="757" width="1.4309%" height="15" fill="rgb(227,67,19)" fg:x="27063" fg:w="1625"/><text x="24.0802%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,625 samples, 1.43%)</title><rect x="23.8302%" y="741" width="1.4309%" height="15" fill="rgb(233,119,31)" fg:x="27063" fg:w="1625"/><text x="24.0802%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::now (1,625 samples, 1.43%)</title><rect x="23.8302%" y="725" width="1.4309%" height="15" fill="rgb(241,120,22)" fg:x="27063" fg:w="1625"/><text x="24.0802%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.04%)</title><rect x="25.3139%" y="629" width="0.0361%" height="15" fill="rgb(224,102,30)" fg:x="28748" fg:w="41"/><text x="25.5639%" y="639.50"></text></g><g><title>&lt;halfbrown::iter::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.04%)</title><rect x="25.3139%" y="613" width="0.0361%" height="15" fill="rgb(210,164,37)" fg:x="28748" fg:w="41"/><text x="25.5639%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.02%)</title><rect x="25.3254%" y="597" width="0.0247%" height="15" fill="rgb(226,191,16)" fg:x="28761" fg:w="28"/><text x="25.5754%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.02%)</title><rect x="25.3254%" y="581" width="0.0247%" height="15" fill="rgb(214,40,45)" fg:x="28761" fg:w="28"/><text x="25.5754%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.02%)</title><rect x="25.3254%" y="565" width="0.0247%" height="15" fill="rgb(244,29,26)" fg:x="28761" fg:w="28"/><text x="25.5754%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.02%)</title><rect x="25.3254%" y="549" width="0.0247%" height="15" fill="rgb(216,16,5)" fg:x="28761" fg:w="28"/><text x="25.5754%" y="559.50"></text></g><g><title>abi_stable::erased_types::iterator::next (63 samples, 0.06%)</title><rect x="25.3042%" y="661" width="0.0555%" height="15" fill="rgb(249,76,35)" fg:x="28737" fg:w="63"/><text x="25.5542%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (52 samples, 0.05%)</title><rect x="25.3139%" y="645" width="0.0458%" height="15" fill="rgb(207,11,44)" fg:x="28748" fg:w="52"/><text x="25.5639%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 0.09%)</title><rect x="25.2840%" y="725" width="0.0863%" height="15" fill="rgb(228,190,49)" fg:x="28714" fg:w="98"/><text x="25.5340%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 0.09%)</title><rect x="25.2840%" y="709" width="0.0863%" height="15" fill="rgb(214,173,12)" fg:x="28714" fg:w="98"/><text x="25.5340%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 0.09%)</title><rect x="25.2840%" y="693" width="0.0863%" height="15" fill="rgb(218,26,35)" fg:x="28714" fg:w="98"/><text x="25.5340%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (98 samples, 0.09%)</title><rect x="25.2840%" y="677" width="0.0863%" height="15" fill="rgb(220,200,19)" fg:x="28714" fg:w="98"/><text x="25.5340%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (12 samples, 0.01%)</title><rect x="25.3597%" y="661" width="0.0106%" height="15" fill="rgb(239,95,49)" fg:x="28800" fg:w="12"/><text x="25.6097%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (12 samples, 0.01%)</title><rect x="25.3597%" y="645" width="0.0106%" height="15" fill="rgb(235,85,53)" fg:x="28800" fg:w="12"/><text x="25.6097%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="25.3597%" y="629" width="0.0106%" height="15" fill="rgb(233,133,31)" fg:x="28800" fg:w="12"/><text x="25.6097%" y="639.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (12 samples, 0.01%)</title><rect x="25.3597%" y="613" width="0.0106%" height="15" fill="rgb(218,25,20)" fg:x="28800" fg:w="12"/><text x="25.6097%" y="623.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (54 samples, 0.05%)</title><rect x="25.3808%" y="661" width="0.0475%" height="15" fill="rgb(252,210,38)" fg:x="28824" fg:w="54"/><text x="25.6308%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (47 samples, 0.04%)</title><rect x="25.3870%" y="645" width="0.0414%" height="15" fill="rgb(242,134,21)" fg:x="28831" fg:w="47"/><text x="25.6370%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (28 samples, 0.02%)</title><rect x="25.4037%" y="629" width="0.0247%" height="15" fill="rgb(213,28,48)" fg:x="28850" fg:w="28"/><text x="25.6537%" y="639.50"></text></g><g><title>&lt;halfbrown::iter::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (28 samples, 0.02%)</title><rect x="25.4037%" y="613" width="0.0247%" height="15" fill="rgb(250,196,2)" fg:x="28850" fg:w="28"/><text x="25.6537%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (90 samples, 0.08%)</title><rect x="25.3703%" y="725" width="0.0792%" height="15" fill="rgb(227,5,17)" fg:x="28812" fg:w="90"/><text x="25.6203%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (90 samples, 0.08%)</title><rect x="25.3703%" y="709" width="0.0792%" height="15" fill="rgb(221,226,24)" fg:x="28812" fg:w="90"/><text x="25.6203%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (90 samples, 0.08%)</title><rect x="25.3703%" y="693" width="0.0792%" height="15" fill="rgb(211,5,48)" fg:x="28812" fg:w="90"/><text x="25.6203%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (90 samples, 0.08%)</title><rect x="25.3703%" y="677" width="0.0792%" height="15" fill="rgb(219,150,6)" fg:x="28812" fg:w="90"/><text x="25.6203%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (24 samples, 0.02%)</title><rect x="25.4284%" y="661" width="0.0211%" height="15" fill="rgb(251,46,16)" fg:x="28878" fg:w="24"/><text x="25.6784%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (24 samples, 0.02%)</title><rect x="25.4284%" y="645" width="0.0211%" height="15" fill="rgb(220,204,40)" fg:x="28878" fg:w="24"/><text x="25.6784%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (15 samples, 0.01%)</title><rect x="25.4363%" y="629" width="0.0132%" height="15" fill="rgb(211,85,2)" fg:x="28887" fg:w="15"/><text x="25.6863%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;abi_stable::std_types::tuple::Tuple2&lt;K,V&gt;&gt;&gt;::extend (448 samples, 0.39%)</title><rect x="25.2611%" y="757" width="0.3945%" height="15" fill="rgb(229,17,7)" fg:x="28688" fg:w="448"/><text x="25.5111%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (448 samples, 0.39%)</title><rect x="25.2611%" y="741" width="0.3945%" height="15" fill="rgb(239,72,28)" fg:x="28688" fg:w="448"/><text x="25.5111%" y="751.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (234 samples, 0.21%)</title><rect x="25.4495%" y="725" width="0.2060%" height="15" fill="rgb(230,47,54)" fg:x="28902" fg:w="234"/><text x="25.6995%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (142 samples, 0.13%)</title><rect x="25.5305%" y="709" width="0.1250%" height="15" fill="rgb(214,50,8)" fg:x="28994" fg:w="142"/><text x="25.7805%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (125 samples, 0.11%)</title><rect x="25.5455%" y="693" width="0.1101%" height="15" fill="rgb(216,198,43)" fg:x="29011" fg:w="125"/><text x="25.7955%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (125 samples, 0.11%)</title><rect x="25.5455%" y="677" width="0.1101%" height="15" fill="rgb(234,20,35)" fg:x="29011" fg:w="125"/><text x="25.7955%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (125 samples, 0.11%)</title><rect x="25.5455%" y="661" width="0.1101%" height="15" fill="rgb(254,45,19)" fg:x="29011" fg:w="125"/><text x="25.7955%" y="671.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::reserve (125 samples, 0.11%)</title><rect x="25.5455%" y="645" width="0.1101%" height="15" fill="rgb(219,14,44)" fg:x="29011" fg:w="125"/><text x="25.7955%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (33 samples, 0.03%)</title><rect x="25.6265%" y="629" width="0.0291%" height="15" fill="rgb(217,220,26)" fg:x="29103" fg:w="33"/><text x="25.8765%" y="639.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (33 samples, 0.03%)</title><rect x="25.6265%" y="613" width="0.0291%" height="15" fill="rgb(213,158,28)" fg:x="29103" fg:w="33"/><text x="25.8765%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="25.7322%" y="469" width="0.0123%" height="15" fill="rgb(252,51,52)" fg:x="29223" fg:w="14"/><text x="25.9822%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (14 samples, 0.01%)</title><rect x="25.7322%" y="453" width="0.0123%" height="15" fill="rgb(246,89,16)" fg:x="29223" fg:w="14"/><text x="25.9822%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (13 samples, 0.01%)</title><rect x="25.7331%" y="437" width="0.0114%" height="15" fill="rgb(216,158,49)" fg:x="29224" fg:w="13"/><text x="25.9831%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::empty (25 samples, 0.02%)</title><rect x="25.7507%" y="469" width="0.0220%" height="15" fill="rgb(236,107,19)" fg:x="29244" fg:w="25"/><text x="26.0007%" y="479.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (25 samples, 0.02%)</title><rect x="25.7507%" y="453" width="0.0220%" height="15" fill="rgb(228,185,30)" fg:x="29244" fg:w="25"/><text x="26.0007%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (108 samples, 0.10%)</title><rect x="25.7234%" y="517" width="0.0951%" height="15" fill="rgb(246,134,8)" fg:x="29213" fg:w="108"/><text x="25.9734%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (105 samples, 0.09%)</title><rect x="25.7260%" y="501" width="0.0925%" height="15" fill="rgb(214,143,50)" fg:x="29216" fg:w="105"/><text x="25.9760%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (100 samples, 0.09%)</title><rect x="25.7304%" y="485" width="0.0881%" height="15" fill="rgb(228,75,8)" fg:x="29221" fg:w="100"/><text x="25.9804%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (52 samples, 0.05%)</title><rect x="25.7727%" y="469" width="0.0458%" height="15" fill="rgb(207,175,4)" fg:x="29269" fg:w="52"/><text x="26.0227%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (52 samples, 0.05%)</title><rect x="25.7727%" y="453" width="0.0458%" height="15" fill="rgb(205,108,24)" fg:x="29269" fg:w="52"/><text x="26.0227%" y="463.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (183 samples, 0.16%)</title><rect x="25.6785%" y="677" width="0.1611%" height="15" fill="rgb(244,120,49)" fg:x="29162" fg:w="183"/><text x="25.9285%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (183 samples, 0.16%)</title><rect x="25.6785%" y="661" width="0.1611%" height="15" fill="rgb(223,47,38)" fg:x="29162" fg:w="183"/><text x="25.9285%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (183 samples, 0.16%)</title><rect x="25.6785%" y="645" width="0.1611%" height="15" fill="rgb(229,179,11)" fg:x="29162" fg:w="183"/><text x="25.9285%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (144 samples, 0.13%)</title><rect x="25.7128%" y="629" width="0.1268%" height="15" fill="rgb(231,122,1)" fg:x="29201" fg:w="144"/><text x="25.9628%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (144 samples, 0.13%)</title><rect x="25.7128%" y="613" width="0.1268%" height="15" fill="rgb(245,119,9)" fg:x="29201" fg:w="144"/><text x="25.9628%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (144 samples, 0.13%)</title><rect x="25.7128%" y="597" width="0.1268%" height="15" fill="rgb(241,163,25)" fg:x="29201" fg:w="144"/><text x="25.9628%" y="607.50"></text></g><g><title>alloc::alloc::alloc (144 samples, 0.13%)</title><rect x="25.7128%" y="581" width="0.1268%" height="15" fill="rgb(217,214,3)" fg:x="29201" fg:w="144"/><text x="25.9628%" y="591.50"></text></g><g><title>__rg_alloc (144 samples, 0.13%)</title><rect x="25.7128%" y="565" width="0.1268%" height="15" fill="rgb(240,86,28)" fg:x="29201" fg:w="144"/><text x="25.9628%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (144 samples, 0.13%)</title><rect x="25.7128%" y="549" width="0.1268%" height="15" fill="rgb(215,47,9)" fg:x="29201" fg:w="144"/><text x="25.9628%" y="559.50"></text></g><g><title>rust_alloc (133 samples, 0.12%)</title><rect x="25.7225%" y="533" width="0.1171%" height="15" fill="rgb(252,25,45)" fg:x="29212" fg:w="133"/><text x="25.9725%" y="543.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (24 samples, 0.02%)</title><rect x="25.8185%" y="517" width="0.0211%" height="15" fill="rgb(251,164,9)" fg:x="29321" fg:w="24"/><text x="26.0685%" y="527.50"></text></g><g><title>abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt;::new (23 samples, 0.02%)</title><rect x="25.8396%" y="677" width="0.0203%" height="15" fill="rgb(233,194,0)" fg:x="29345" fg:w="23"/><text x="26.0896%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (33 samples, 0.03%)</title><rect x="25.8660%" y="613" width="0.0291%" height="15" fill="rgb(249,111,24)" fg:x="29375" fg:w="33"/><text x="26.1160%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="25.8827%" y="597" width="0.0123%" height="15" fill="rgb(250,223,3)" fg:x="29394" fg:w="14"/><text x="26.1327%" y="607.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="25.8827%" y="581" width="0.0123%" height="15" fill="rgb(236,178,37)" fg:x="29394" fg:w="14"/><text x="26.1327%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="25.8827%" y="565" width="0.0123%" height="15" fill="rgb(241,158,50)" fg:x="29394" fg:w="14"/><text x="26.1327%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="25.8827%" y="549" width="0.0123%" height="15" fill="rgb(213,121,41)" fg:x="29394" fg:w="14"/><text x="26.1327%" y="559.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="25.8827%" y="533" width="0.0123%" height="15" fill="rgb(240,92,3)" fg:x="29394" fg:w="14"/><text x="26.1327%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="25.8827%" y="517" width="0.0123%" height="15" fill="rgb(205,123,3)" fg:x="29394" fg:w="14"/><text x="26.1327%" y="527.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="25.9030%" y="517" width="0.0132%" height="15" fill="rgb(205,97,47)" fg:x="29417" fg:w="15"/><text x="26.1530%" y="527.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (27 samples, 0.02%)</title><rect x="25.9303%" y="469" width="0.0238%" height="15" fill="rgb(247,152,14)" fg:x="29448" fg:w="27"/><text x="26.1803%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="25.9373%" y="453" width="0.0167%" height="15" fill="rgb(248,195,53)" fg:x="29456" fg:w="19"/><text x="26.1873%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (52 samples, 0.05%)</title><rect x="25.9171%" y="517" width="0.0458%" height="15" fill="rgb(226,201,16)" fg:x="29433" fg:w="52"/><text x="26.1671%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (52 samples, 0.05%)</title><rect x="25.9171%" y="501" width="0.0458%" height="15" fill="rgb(205,98,0)" fg:x="29433" fg:w="52"/><text x="26.1671%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (52 samples, 0.05%)</title><rect x="25.9171%" y="485" width="0.0458%" height="15" fill="rgb(214,191,48)" fg:x="29433" fg:w="52"/><text x="26.1671%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (72 samples, 0.06%)</title><rect x="25.9030%" y="549" width="0.0634%" height="15" fill="rgb(237,112,39)" fg:x="29417" fg:w="72"/><text x="26.1530%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (72 samples, 0.06%)</title><rect x="25.9030%" y="533" width="0.0634%" height="15" fill="rgb(247,203,27)" fg:x="29417" fg:w="72"/><text x="26.1530%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (78 samples, 0.07%)</title><rect x="25.9030%" y="581" width="0.0687%" height="15" fill="rgb(235,124,28)" fg:x="29417" fg:w="78"/><text x="26.1530%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (78 samples, 0.07%)</title><rect x="25.9030%" y="565" width="0.0687%" height="15" fill="rgb(208,207,46)" fg:x="29417" fg:w="78"/><text x="26.1530%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (89 samples, 0.08%)</title><rect x="25.8995%" y="597" width="0.0784%" height="15" fill="rgb(234,176,4)" fg:x="29413" fg:w="89"/><text x="26.1495%" y="607.50"></text></g><g><title>rust_dealloc (106 samples, 0.09%)</title><rect x="25.8951%" y="613" width="0.0933%" height="15" fill="rgb(230,133,28)" fg:x="29408" fg:w="106"/><text x="26.1451%" y="623.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="25.9778%" y="597" width="0.0106%" height="15" fill="rgb(211,137,40)" fg:x="29502" fg:w="12"/><text x="26.2278%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (149 samples, 0.13%)</title><rect x="25.8599%" y="629" width="0.1312%" height="15" fill="rgb(254,35,13)" fg:x="29368" fg:w="149"/><text x="26.1099%" y="639.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (200 samples, 0.18%)</title><rect x="25.8599%" y="677" width="0.1761%" height="15" fill="rgb(225,49,51)" fg:x="29368" fg:w="200"/><text x="26.1099%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (200 samples, 0.18%)</title><rect x="25.8599%" y="661" width="0.1761%" height="15" fill="rgb(251,10,15)" fg:x="29368" fg:w="200"/><text x="26.1099%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (200 samples, 0.18%)</title><rect x="25.8599%" y="645" width="0.1761%" height="15" fill="rgb(228,207,15)" fg:x="29368" fg:w="200"/><text x="26.1099%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (51 samples, 0.04%)</title><rect x="25.9911%" y="629" width="0.0449%" height="15" fill="rgb(241,99,19)" fg:x="29517" fg:w="51"/><text x="26.2411%" y="639.50"></text></g><g><title>core::ptr::read (51 samples, 0.04%)</title><rect x="25.9911%" y="613" width="0.0449%" height="15" fill="rgb(207,104,49)" fg:x="29517" fg:w="51"/><text x="26.2411%" y="623.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::into_iter_from (12 samples, 0.01%)</title><rect x="26.0395%" y="629" width="0.0106%" height="15" fill="rgb(234,99,18)" fg:x="29572" fg:w="12"/><text x="26.2895%" y="639.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::into_allocation (12 samples, 0.01%)</title><rect x="26.0395%" y="613" width="0.0106%" height="15" fill="rgb(213,191,49)" fg:x="29572" fg:w="12"/><text x="26.2895%" y="623.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::invert (15 samples, 0.01%)</title><rect x="26.0571%" y="581" width="0.0132%" height="15" fill="rgb(210,226,19)" fg:x="29592" fg:w="15"/><text x="26.3071%" y="591.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (472 samples, 0.42%)</title><rect x="25.6556%" y="757" width="0.4156%" height="15" fill="rgb(229,97,18)" fg:x="29136" fg:w="472"/><text x="25.9056%" y="767.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (472 samples, 0.42%)</title><rect x="25.6556%" y="741" width="0.4156%" height="15" fill="rgb(211,167,15)" fg:x="29136" fg:w="472"/><text x="25.9056%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (464 samples, 0.41%)</title><rect x="25.6626%" y="725" width="0.4086%" height="15" fill="rgb(210,169,34)" fg:x="29144" fg:w="464"/><text x="25.9126%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (460 samples, 0.41%)</title><rect x="25.6661%" y="709" width="0.4051%" height="15" fill="rgb(241,121,31)" fg:x="29148" fg:w="460"/><text x="25.9161%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (460 samples, 0.41%)</title><rect x="25.6661%" y="693" width="0.4051%" height="15" fill="rgb(232,40,11)" fg:x="29148" fg:w="460"/><text x="25.9161%" y="703.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::IntoIterator for halfbrown::HashMap&lt;K,V,S&gt;&gt;::into_iter (40 samples, 0.04%)</title><rect x="26.0360%" y="677" width="0.0352%" height="15" fill="rgb(205,86,26)" fg:x="29568" fg:w="40"/><text x="26.2860%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (36 samples, 0.03%)</title><rect x="26.0395%" y="661" width="0.0317%" height="15" fill="rgb(231,126,28)" fg:x="29572" fg:w="36"/><text x="26.2895%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (36 samples, 0.03%)</title><rect x="26.0395%" y="645" width="0.0317%" height="15" fill="rgb(219,221,18)" fg:x="29572" fg:w="36"/><text x="26.2895%" y="655.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter (24 samples, 0.02%)</title><rect x="26.0501%" y="629" width="0.0211%" height="15" fill="rgb(211,40,0)" fg:x="29584" fg:w="24"/><text x="26.3001%" y="639.50"></text></g><g><title>hashbrown::raw::inner::RawIterRange&lt;T&gt;::new (24 samples, 0.02%)</title><rect x="26.0501%" y="613" width="0.0211%" height="15" fill="rgb(239,85,43)" fg:x="29584" fg:w="24"/><text x="26.3001%" y="623.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_full (16 samples, 0.01%)</title><rect x="26.0571%" y="597" width="0.0141%" height="15" fill="rgb(231,55,21)" fg:x="29592" fg:w="16"/><text x="26.3071%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;halfbrown::iter::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="26.0976%" y="629" width="0.0194%" height="15" fill="rgb(225,184,43)" fg:x="29638" fg:w="22"/><text x="26.3476%" y="639.50"></text></g><g><title>alloc::alloc::box_free (22 samples, 0.02%)</title><rect x="26.0976%" y="613" width="0.0194%" height="15" fill="rgb(251,158,41)" fg:x="29638" fg:w="22"/><text x="26.3476%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="26.0976%" y="597" width="0.0194%" height="15" fill="rgb(234,159,37)" fg:x="29638" fg:w="22"/><text x="26.3476%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="26.0976%" y="581" width="0.0194%" height="15" fill="rgb(216,204,22)" fg:x="29638" fg:w="22"/><text x="26.3476%" y="591.50"></text></g><g><title>__rg_dealloc (22 samples, 0.02%)</title><rect x="26.0976%" y="565" width="0.0194%" height="15" fill="rgb(214,17,3)" fg:x="29638" fg:w="22"/><text x="26.3476%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (22 samples, 0.02%)</title><rect x="26.0976%" y="549" width="0.0194%" height="15" fill="rgb(212,111,17)" fg:x="29638" fg:w="22"/><text x="26.3476%" y="559.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (58 samples, 0.05%)</title><rect x="26.0914%" y="645" width="0.0511%" height="15" fill="rgb(221,157,24)" fg:x="29631" fg:w="58"/><text x="26.3414%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;halfbrown::iter::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (29 samples, 0.03%)</title><rect x="26.1170%" y="629" width="0.0255%" height="15" fill="rgb(252,16,13)" fg:x="29660" fg:w="29"/><text x="26.3670%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::iter::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (29 samples, 0.03%)</title><rect x="26.1170%" y="613" width="0.0255%" height="15" fill="rgb(221,62,2)" fg:x="29660" fg:w="29"/><text x="26.3670%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::iter::IntoIterInt&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (29 samples, 0.03%)</title><rect x="26.1170%" y="597" width="0.0255%" height="15" fill="rgb(247,87,22)" fg:x="29660" fg:w="29"/><text x="26.3670%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (18 samples, 0.02%)</title><rect x="26.1267%" y="581" width="0.0158%" height="15" fill="rgb(215,73,9)" fg:x="29671" fg:w="18"/><text x="26.3767%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::inner::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (18 samples, 0.02%)</title><rect x="26.1267%" y="565" width="0.0158%" height="15" fill="rgb(207,175,33)" fg:x="29671" fg:w="18"/><text x="26.3767%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="26.1267%" y="549" width="0.0158%" height="15" fill="rgb(243,129,54)" fg:x="29671" fg:w="18"/><text x="26.3767%" y="559.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (28 samples, 0.02%)</title><rect x="26.2147%" y="501" width="0.0247%" height="15" fill="rgb(227,119,45)" fg:x="29771" fg:w="28"/><text x="26.4647%" y="511.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (25 samples, 0.02%)</title><rect x="26.2174%" y="485" width="0.0220%" height="15" fill="rgb(205,109,36)" fg:x="29774" fg:w="25"/><text x="26.4674%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (75 samples, 0.07%)</title><rect x="26.1848%" y="549" width="0.0660%" height="15" fill="rgb(205,6,39)" fg:x="29737" fg:w="75"/><text x="26.4348%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (75 samples, 0.07%)</title><rect x="26.1848%" y="533" width="0.0660%" height="15" fill="rgb(221,32,16)" fg:x="29737" fg:w="75"/><text x="26.4348%" y="543.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (75 samples, 0.07%)</title><rect x="26.1848%" y="517" width="0.0660%" height="15" fill="rgb(228,144,50)" fg:x="29737" fg:w="75"/><text x="26.4348%" y="527.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="26.2394%" y="501" width="0.0114%" height="15" fill="rgb(229,201,53)" fg:x="29799" fg:w="13"/><text x="26.4894%" y="511.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="26.2394%" y="485" width="0.0114%" height="15" fill="rgb(249,153,27)" fg:x="29799" fg:w="13"/><text x="26.4894%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (113 samples, 0.10%)</title><rect x="26.1680%" y="581" width="0.0995%" height="15" fill="rgb(227,106,25)" fg:x="29718" fg:w="113"/><text x="26.4180%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (113 samples, 0.10%)</title><rect x="26.1680%" y="565" width="0.0995%" height="15" fill="rgb(230,65,29)" fg:x="29718" fg:w="113"/><text x="26.4180%" y="575.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (19 samples, 0.02%)</title><rect x="26.2508%" y="549" width="0.0167%" height="15" fill="rgb(221,57,46)" fg:x="29812" fg:w="19"/><text x="26.5008%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (123 samples, 0.11%)</title><rect x="26.1680%" y="613" width="0.1083%" height="15" fill="rgb(229,161,17)" fg:x="29718" fg:w="123"/><text x="26.4180%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (123 samples, 0.11%)</title><rect x="26.1680%" y="597" width="0.1083%" height="15" fill="rgb(222,213,11)" fg:x="29718" fg:w="123"/><text x="26.4180%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (147 samples, 0.13%)</title><rect x="26.1487%" y="629" width="0.1294%" height="15" fill="rgb(235,35,13)" fg:x="29696" fg:w="147"/><text x="26.3987%" y="639.50"></text></g><g><title>rust_dealloc (159 samples, 0.14%)</title><rect x="26.1425%" y="645" width="0.1400%" height="15" fill="rgb(233,158,34)" fg:x="29689" fg:w="159"/><text x="26.3925%" y="655.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (1,164 samples, 1.02%)</title><rect x="25.2611%" y="773" width="1.0250%" height="15" fill="rgb(215,151,48)" fg:x="28688" fg:w="1164"/><text x="25.5111%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (244 samples, 0.21%)</title><rect x="26.0712%" y="757" width="0.2149%" height="15" fill="rgb(229,84,14)" fg:x="29608" fg:w="244"/><text x="26.3212%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (244 samples, 0.21%)</title><rect x="26.0712%" y="741" width="0.2149%" height="15" fill="rgb(229,68,14)" fg:x="29608" fg:w="244"/><text x="26.3212%" y="751.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (244 samples, 0.21%)</title><rect x="26.0712%" y="725" width="0.2149%" height="15" fill="rgb(243,106,26)" fg:x="29608" fg:w="244"/><text x="26.3212%" y="735.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (243 samples, 0.21%)</title><rect x="26.0721%" y="709" width="0.2140%" height="15" fill="rgb(206,45,38)" fg:x="29609" fg:w="243"/><text x="26.3221%" y="719.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (230 samples, 0.20%)</title><rect x="26.0835%" y="693" width="0.2025%" height="15" fill="rgb(226,6,15)" fg:x="29622" fg:w="230"/><text x="26.3335%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;halfbrown::iter::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt; (230 samples, 0.20%)</title><rect x="26.0835%" y="677" width="0.2025%" height="15" fill="rgb(232,22,54)" fg:x="29622" fg:w="230"/><text x="26.3335%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (230 samples, 0.20%)</title><rect x="26.0835%" y="661" width="0.2025%" height="15" fill="rgb(229,222,32)" fg:x="29622" fg:w="230"/><text x="26.3335%" y="671.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies (43 samples, 0.04%)</title><rect x="26.2922%" y="773" width="0.0379%" height="15" fill="rgb(228,62,29)" fg:x="29859" fg:w="43"/><text x="26.5422%" y="783.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (16,187 samples, 14.25%)</title><rect x="12.0855%" y="789" width="14.2534%" height="15" fill="rgb(251,103,34)" fg:x="13725" fg:w="16187"/><text x="12.3355%" y="799.50">tremor_runtime::connec..</text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (901 samples, 0.79%)</title><rect x="26.5625%" y="773" width="0.7934%" height="15" fill="rgb(233,12,30)" fg:x="30166" fg:w="901"/><text x="26.8125%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (675 samples, 0.59%)</title><rect x="26.7615%" y="757" width="0.5944%" height="15" fill="rgb(238,52,0)" fg:x="30392" fg:w="675"/><text x="27.0115%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (44 samples, 0.04%)</title><rect x="27.5725%" y="757" width="0.0387%" height="15" fill="rgb(223,98,5)" fg:x="31313" fg:w="44"/><text x="27.8225%" y="767.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (55 samples, 0.05%)</title><rect x="27.8402%" y="741" width="0.0484%" height="15" fill="rgb(228,75,37)" fg:x="31617" fg:w="55"/><text x="28.0902%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (157 samples, 0.14%)</title><rect x="28.1220%" y="725" width="0.1382%" height="15" fill="rgb(205,115,49)" fg:x="31937" fg:w="157"/><text x="28.3720%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (428 samples, 0.38%)</title><rect x="27.8886%" y="741" width="0.3769%" height="15" fill="rgb(250,154,43)" fg:x="31672" fg:w="428"/><text x="28.1386%" y="751.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (494 samples, 0.43%)</title><rect x="28.2655%" y="709" width="0.4350%" height="15" fill="rgb(226,43,29)" fg:x="32100" fg:w="494"/><text x="28.5155%" y="719.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (489 samples, 0.43%)</title><rect x="28.2699%" y="693" width="0.4306%" height="15" fill="rgb(249,228,39)" fg:x="32105" fg:w="489"/><text x="28.5199%" y="703.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (489 samples, 0.43%)</title><rect x="28.2699%" y="677" width="0.4306%" height="15" fill="rgb(216,79,43)" fg:x="32105" fg:w="489"/><text x="28.5199%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (292 samples, 0.26%)</title><rect x="28.7586%" y="661" width="0.2571%" height="15" fill="rgb(228,95,12)" fg:x="32660" fg:w="292"/><text x="29.0086%" y="671.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (292 samples, 0.26%)</title><rect x="28.7586%" y="645" width="0.2571%" height="15" fill="rgb(249,221,15)" fg:x="32660" fg:w="292"/><text x="29.0086%" y="655.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (292 samples, 0.26%)</title><rect x="28.7586%" y="629" width="0.2571%" height="15" fill="rgb(233,34,13)" fg:x="32660" fg:w="292"/><text x="29.0086%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (260 samples, 0.23%)</title><rect x="28.7868%" y="613" width="0.2289%" height="15" fill="rgb(214,103,39)" fg:x="32692" fg:w="260"/><text x="29.0368%" y="623.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.02%)</title><rect x="29.2737%" y="613" width="0.0194%" height="15" fill="rgb(251,126,39)" fg:x="33245" fg:w="22"/><text x="29.5237%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (22 samples, 0.02%)</title><rect x="29.2737%" y="597" width="0.0194%" height="15" fill="rgb(214,216,36)" fg:x="33245" fg:w="22"/><text x="29.5237%" y="607.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (22 samples, 0.02%)</title><rect x="29.2737%" y="581" width="0.0194%" height="15" fill="rgb(220,221,8)" fg:x="33245" fg:w="22"/><text x="29.5237%" y="591.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (811 samples, 0.71%)</title><rect x="28.7005%" y="709" width="0.7141%" height="15" fill="rgb(240,216,3)" fg:x="32594" fg:w="811"/><text x="28.9505%" y="719.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (801 samples, 0.71%)</title><rect x="28.7093%" y="693" width="0.7053%" height="15" fill="rgb(232,218,17)" fg:x="32604" fg:w="801"/><text x="28.9593%" y="703.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (775 samples, 0.68%)</title><rect x="28.7322%" y="677" width="0.6824%" height="15" fill="rgb(229,163,45)" fg:x="32630" fg:w="775"/><text x="28.9822%" y="687.50"></text></g><g><title>std::panic::catch_unwind (453 samples, 0.40%)</title><rect x="29.0157%" y="661" width="0.3989%" height="15" fill="rgb(231,110,42)" fg:x="32952" fg:w="453"/><text x="29.2657%" y="671.50"></text></g><g><title>std::panicking::try (453 samples, 0.40%)</title><rect x="29.0157%" y="645" width="0.3989%" height="15" fill="rgb(208,170,48)" fg:x="32952" fg:w="453"/><text x="29.2657%" y="655.50"></text></g><g><title>std::panicking::try::do_call (453 samples, 0.40%)</title><rect x="29.0157%" y="629" width="0.3989%" height="15" fill="rgb(239,116,25)" fg:x="32952" fg:w="453"/><text x="29.2657%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (138 samples, 0.12%)</title><rect x="29.2931%" y="613" width="0.1215%" height="15" fill="rgb(219,200,50)" fg:x="33267" fg:w="138"/><text x="29.5431%" y="623.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,554 samples, 1.37%)</title><rect x="28.2655%" y="741" width="1.3684%" height="15" fill="rgb(245,200,0)" fg:x="32100" fg:w="1554"/><text x="28.5155%" y="751.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,554 samples, 1.37%)</title><rect x="28.2655%" y="725" width="1.3684%" height="15" fill="rgb(245,119,33)" fg:x="32100" fg:w="1554"/><text x="28.5155%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (249 samples, 0.22%)</title><rect x="29.4146%" y="709" width="0.2193%" height="15" fill="rgb(231,125,12)" fg:x="33405" fg:w="249"/><text x="29.6646%" y="719.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (83 samples, 0.07%)</title><rect x="29.6339%" y="741" width="0.0731%" height="15" fill="rgb(216,96,41)" fg:x="33654" fg:w="83"/><text x="29.8839%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (22 samples, 0.02%)</title><rect x="29.7422%" y="597" width="0.0194%" height="15" fill="rgb(248,43,45)" fg:x="33777" fg:w="22"/><text x="29.9922%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (22 samples, 0.02%)</title><rect x="29.7422%" y="581" width="0.0194%" height="15" fill="rgb(217,222,7)" fg:x="33777" fg:w="22"/><text x="29.9922%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (22 samples, 0.02%)</title><rect x="29.7422%" y="565" width="0.0194%" height="15" fill="rgb(233,28,6)" fg:x="33777" fg:w="22"/><text x="29.9922%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (29 samples, 0.03%)</title><rect x="29.7378%" y="629" width="0.0255%" height="15" fill="rgb(231,218,15)" fg:x="33772" fg:w="29"/><text x="29.9878%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (29 samples, 0.03%)</title><rect x="29.7378%" y="613" width="0.0255%" height="15" fill="rgb(226,171,48)" fg:x="33772" fg:w="29"/><text x="29.9878%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (33 samples, 0.03%)</title><rect x="29.7378%" y="661" width="0.0291%" height="15" fill="rgb(235,201,9)" fg:x="33772" fg:w="33"/><text x="29.9878%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (33 samples, 0.03%)</title><rect x="29.7378%" y="645" width="0.0291%" height="15" fill="rgb(217,80,15)" fg:x="33772" fg:w="33"/><text x="29.9878%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (38 samples, 0.03%)</title><rect x="29.7378%" y="677" width="0.0335%" height="15" fill="rgb(219,152,8)" fg:x="33772" fg:w="38"/><text x="29.9878%" y="687.50"></text></g><g><title>rust_dealloc (56 samples, 0.05%)</title><rect x="29.7298%" y="693" width="0.0493%" height="15" fill="rgb(243,107,38)" fg:x="33763" fg:w="56"/><text x="29.9798%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (91 samples, 0.08%)</title><rect x="29.7070%" y="741" width="0.0801%" height="15" fill="rgb(231,17,5)" fg:x="33737" fg:w="91"/><text x="29.9570%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (91 samples, 0.08%)</title><rect x="29.7070%" y="725" width="0.0801%" height="15" fill="rgb(209,25,54)" fg:x="33737" fg:w="91"/><text x="29.9570%" y="735.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 0.08%)</title><rect x="29.7070%" y="709" width="0.0801%" height="15" fill="rgb(219,0,2)" fg:x="33737" fg:w="91"/><text x="29.9570%" y="719.50"></text></g><g><title>abi_stable::sabi_trait::robject::RObject&lt;P,I,V&gt;::sabi_as_rmut (12 samples, 0.01%)</title><rect x="29.8003%" y="725" width="0.0106%" height="15" fill="rgb(246,9,5)" fg:x="33843" fg:w="12"/><text x="30.0503%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (93 samples, 0.08%)</title><rect x="30.2547%" y="469" width="0.0819%" height="15" fill="rgb(226,159,4)" fg:x="34359" fg:w="93"/><text x="30.5047%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (93 samples, 0.08%)</title><rect x="30.2547%" y="453" width="0.0819%" height="15" fill="rgb(219,175,34)" fg:x="34359" fg:w="93"/><text x="30.5047%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (82 samples, 0.07%)</title><rect x="30.2643%" y="437" width="0.0722%" height="15" fill="rgb(236,10,46)" fg:x="34370" fg:w="82"/><text x="30.5143%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (67 samples, 0.06%)</title><rect x="30.2775%" y="421" width="0.0590%" height="15" fill="rgb(240,211,16)" fg:x="34385" fg:w="67"/><text x="30.5275%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (67 samples, 0.06%)</title><rect x="30.2775%" y="405" width="0.0590%" height="15" fill="rgb(205,3,43)" fg:x="34385" fg:w="67"/><text x="30.5275%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (67 samples, 0.06%)</title><rect x="30.2775%" y="389" width="0.0590%" height="15" fill="rgb(245,7,22)" fg:x="34385" fg:w="67"/><text x="30.5275%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="30.3383%" y="469" width="0.0255%" height="15" fill="rgb(239,132,32)" fg:x="34454" fg:w="29"/><text x="30.5883%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="30.3383%" y="453" width="0.0255%" height="15" fill="rgb(228,202,34)" fg:x="34454" fg:w="29"/><text x="30.5883%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="30.3383%" y="437" width="0.0255%" height="15" fill="rgb(254,200,22)" fg:x="34454" fg:w="29"/><text x="30.5883%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="30.3445%" y="421" width="0.0194%" height="15" fill="rgb(219,10,39)" fg:x="34461" fg:w="22"/><text x="30.5945%" y="431.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (22 samples, 0.02%)</title><rect x="30.3445%" y="405" width="0.0194%" height="15" fill="rgb(226,210,39)" fg:x="34461" fg:w="22"/><text x="30.5945%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (192 samples, 0.17%)</title><rect x="30.2370%" y="517" width="0.1691%" height="15" fill="rgb(208,219,16)" fg:x="34339" fg:w="192"/><text x="30.4870%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (192 samples, 0.17%)</title><rect x="30.2370%" y="501" width="0.1691%" height="15" fill="rgb(216,158,51)" fg:x="34339" fg:w="192"/><text x="30.4870%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (179 samples, 0.16%)</title><rect x="30.2485%" y="485" width="0.1576%" height="15" fill="rgb(233,14,44)" fg:x="34352" fg:w="179"/><text x="30.4985%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (40 samples, 0.04%)</title><rect x="30.3709%" y="469" width="0.0352%" height="15" fill="rgb(237,97,39)" fg:x="34491" fg:w="40"/><text x="30.6209%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (40 samples, 0.04%)</title><rect x="30.3709%" y="453" width="0.0352%" height="15" fill="rgb(218,198,43)" fg:x="34491" fg:w="40"/><text x="30.6209%" y="463.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (678 samples, 0.60%)</title><rect x="29.8109%" y="725" width="0.5970%" height="15" fill="rgb(231,104,20)" fg:x="33855" fg:w="678"/><text x="30.0609%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (380 samples, 0.33%)</title><rect x="30.0733%" y="709" width="0.3346%" height="15" fill="rgb(254,36,13)" fg:x="34153" fg:w="380"/><text x="30.3233%" y="719.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (380 samples, 0.33%)</title><rect x="30.0733%" y="693" width="0.3346%" height="15" fill="rgb(248,14,50)" fg:x="34153" fg:w="380"/><text x="30.3233%" y="703.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (365 samples, 0.32%)</title><rect x="30.0865%" y="677" width="0.3214%" height="15" fill="rgb(217,107,29)" fg:x="34168" fg:w="365"/><text x="30.3365%" y="687.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (340 samples, 0.30%)</title><rect x="30.1085%" y="661" width="0.2994%" height="15" fill="rgb(251,169,33)" fg:x="34193" fg:w="340"/><text x="30.3585%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (340 samples, 0.30%)</title><rect x="30.1085%" y="645" width="0.2994%" height="15" fill="rgb(217,108,32)" fg:x="34193" fg:w="340"/><text x="30.3585%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (205 samples, 0.18%)</title><rect x="30.2274%" y="629" width="0.1805%" height="15" fill="rgb(219,66,42)" fg:x="34328" fg:w="205"/><text x="30.4774%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (205 samples, 0.18%)</title><rect x="30.2274%" y="613" width="0.1805%" height="15" fill="rgb(206,180,7)" fg:x="34328" fg:w="205"/><text x="30.4774%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (205 samples, 0.18%)</title><rect x="30.2274%" y="597" width="0.1805%" height="15" fill="rgb(208,226,31)" fg:x="34328" fg:w="205"/><text x="30.4774%" y="607.50"></text></g><g><title>alloc::alloc::alloc (205 samples, 0.18%)</title><rect x="30.2274%" y="581" width="0.1805%" height="15" fill="rgb(218,26,49)" fg:x="34328" fg:w="205"/><text x="30.4774%" y="591.50"></text></g><g><title>__rg_alloc (205 samples, 0.18%)</title><rect x="30.2274%" y="565" width="0.1805%" height="15" fill="rgb(233,197,48)" fg:x="34328" fg:w="205"/><text x="30.4774%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (205 samples, 0.18%)</title><rect x="30.2274%" y="549" width="0.1805%" height="15" fill="rgb(252,181,51)" fg:x="34328" fg:w="205"/><text x="30.4774%" y="559.50"></text></g><g><title>rust_alloc (204 samples, 0.18%)</title><rect x="30.2282%" y="533" width="0.1796%" height="15" fill="rgb(253,90,19)" fg:x="34329" fg:w="204"/><text x="30.4782%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (3,206 samples, 2.82%)</title><rect x="27.6113%" y="757" width="2.8230%" height="15" fill="rgb(215,171,30)" fg:x="31357" fg:w="3206"/><text x="27.8613%" y="767.50">tr..</text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_TO&lt;_ErasedPtr&gt;::pull_data (735 samples, 0.65%)</title><rect x="29.7871%" y="741" width="0.6472%" height="15" fill="rgb(214,222,9)" fg:x="33828" fg:w="735"/><text x="30.0371%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::_::&lt;impl tremor_runtime::connectors::source::RawSource_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::pull_data (23 samples, 0.02%)</title><rect x="30.4140%" y="725" width="0.0203%" height="15" fill="rgb(223,3,22)" fg:x="34540" fg:w="23"/><text x="30.6640%" y="735.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::control_plane::{{closure}} (339 samples, 0.30%)</title><rect x="30.4343%" y="757" width="0.2985%" height="15" fill="rgb(225,196,46)" fg:x="34563" fg:w="339"/><text x="30.6843%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::needs_control_plane_msg (282 samples, 0.25%)</title><rect x="30.4845%" y="741" width="0.2483%" height="15" fill="rgb(209,110,37)" fg:x="34620" fg:w="282"/><text x="30.7345%" y="751.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (253 samples, 0.22%)</title><rect x="30.5100%" y="725" width="0.2228%" height="15" fill="rgb(249,89,12)" fg:x="34649" fg:w="253"/><text x="30.7600%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (253 samples, 0.22%)</title><rect x="30.5100%" y="709" width="0.2228%" height="15" fill="rgb(226,27,33)" fg:x="34649" fg:w="253"/><text x="30.7600%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (143 samples, 0.13%)</title><rect x="30.6069%" y="693" width="0.1259%" height="15" fill="rgb(213,82,22)" fg:x="34759" fg:w="143"/><text x="30.8569%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (125 samples, 0.11%)</title><rect x="30.6227%" y="677" width="0.1101%" height="15" fill="rgb(248,140,0)" fg:x="34777" fg:w="125"/><text x="30.8727%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (125 samples, 0.11%)</title><rect x="30.6227%" y="661" width="0.1101%" height="15" fill="rgb(228,106,3)" fg:x="34777" fg:w="125"/><text x="30.8727%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::utypeid::UTypeId as core::cmp::PartialEq&gt;::eq (221 samples, 0.19%)</title><rect x="31.7304%" y="677" width="0.1946%" height="15" fill="rgb(209,23,37)" fg:x="36035" fg:w="221"/><text x="31.9804%" y="687.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (201 samples, 0.18%)</title><rect x="31.7481%" y="661" width="0.1770%" height="15" fill="rgb(241,93,50)" fg:x="36055" fg:w="201"/><text x="31.9981%" y="671.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (201 samples, 0.18%)</title><rect x="31.7481%" y="645" width="0.1770%" height="15" fill="rgb(253,46,43)" fg:x="36055" fg:w="201"/><text x="31.9981%" y="655.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (243 samples, 0.21%)</title><rect x="31.7304%" y="693" width="0.2140%" height="15" fill="rgb(226,206,43)" fg:x="36035" fg:w="243"/><text x="31.9804%" y="703.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (22 samples, 0.02%)</title><rect x="31.9250%" y="677" width="0.0194%" height="15" fill="rgb(217,54,7)" fg:x="36256" fg:w="22"/><text x="32.1750%" y="687.50"></text></g><g><title>abi_stable::std_types::utypeid::new_utypeid (12 samples, 0.01%)</title><rect x="31.9339%" y="661" width="0.0106%" height="15" fill="rgb(223,5,52)" fg:x="36266" fg:w="12"/><text x="32.1839%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (599 samples, 0.53%)</title><rect x="31.4284%" y="741" width="0.5274%" height="15" fill="rgb(206,52,46)" fg:x="35692" fg:w="599"/><text x="31.6784%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::convert::From&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (331 samples, 0.29%)</title><rect x="31.6644%" y="725" width="0.2915%" height="15" fill="rgb(253,136,11)" fg:x="35960" fg:w="331"/><text x="31.9144%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (305 samples, 0.27%)</title><rect x="31.6873%" y="709" width="0.2686%" height="15" fill="rgb(208,106,33)" fg:x="35986" fg:w="305"/><text x="31.9373%" y="719.50"></text></g><g><title>core::ptr::eq (13 samples, 0.01%)</title><rect x="31.9444%" y="693" width="0.0114%" height="15" fill="rgb(206,54,4)" fg:x="36278" fg:w="13"/><text x="32.1944%" y="703.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::ops::deref::Deref&gt;::deref (19 samples, 0.02%)</title><rect x="31.9559%" y="741" width="0.0167%" height="15" fill="rgb(213,3,15)" fg:x="36291" fg:w="19"/><text x="32.2059%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (19 samples, 0.02%)</title><rect x="31.9559%" y="725" width="0.0167%" height="15" fill="rgb(252,211,39)" fg:x="36291" fg:w="19"/><text x="32.2059%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.04%)</title><rect x="31.9726%" y="741" width="0.0370%" height="15" fill="rgb(223,6,36)" fg:x="36310" fg:w="42"/><text x="32.2226%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (699 samples, 0.62%)</title><rect x="32.0105%" y="741" width="0.6155%" height="15" fill="rgb(252,169,45)" fg:x="36353" fg:w="699"/><text x="32.2605%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="32.6718%" y="357" width="0.0106%" height="15" fill="rgb(212,48,26)" fg:x="37104" fg:w="12"/><text x="32.9218%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (19 samples, 0.02%)</title><rect x="32.6682%" y="373" width="0.0167%" height="15" fill="rgb(251,102,48)" fg:x="37100" fg:w="19"/><text x="32.9182%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (28 samples, 0.02%)</title><rect x="32.6964%" y="357" width="0.0247%" height="15" fill="rgb(243,208,16)" fg:x="37132" fg:w="28"/><text x="32.9464%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (178 samples, 0.16%)</title><rect x="32.6682%" y="405" width="0.1567%" height="15" fill="rgb(219,96,24)" fg:x="37100" fg:w="178"/><text x="32.9182%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (178 samples, 0.16%)</title><rect x="32.6682%" y="389" width="0.1567%" height="15" fill="rgb(219,33,29)" fg:x="37100" fg:w="178"/><text x="32.9182%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (159 samples, 0.14%)</title><rect x="32.6850%" y="373" width="0.1400%" height="15" fill="rgb(223,176,5)" fg:x="37119" fg:w="159"/><text x="32.9350%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (118 samples, 0.10%)</title><rect x="32.7211%" y="357" width="0.1039%" height="15" fill="rgb(228,140,14)" fg:x="37160" fg:w="118"/><text x="32.9711%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (118 samples, 0.10%)</title><rect x="32.7211%" y="341" width="0.1039%" height="15" fill="rgb(217,179,31)" fg:x="37160" fg:w="118"/><text x="32.9711%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (118 samples, 0.10%)</title><rect x="32.7211%" y="325" width="0.1039%" height="15" fill="rgb(230,9,30)" fg:x="37160" fg:w="118"/><text x="32.9711%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::empty (19 samples, 0.02%)</title><rect x="32.8347%" y="405" width="0.0167%" height="15" fill="rgb(230,136,20)" fg:x="37289" fg:w="19"/><text x="33.0847%" y="415.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (19 samples, 0.02%)</title><rect x="32.8347%" y="389" width="0.0167%" height="15" fill="rgb(215,210,22)" fg:x="37289" fg:w="19"/><text x="33.0847%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (368 samples, 0.32%)</title><rect x="32.6541%" y="453" width="0.3240%" height="15" fill="rgb(218,43,5)" fg:x="37084" fg:w="368"/><text x="32.9041%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (356 samples, 0.31%)</title><rect x="32.6647%" y="437" width="0.3135%" height="15" fill="rgb(216,11,5)" fg:x="37096" fg:w="356"/><text x="32.9147%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (354 samples, 0.31%)</title><rect x="32.6665%" y="421" width="0.3117%" height="15" fill="rgb(209,82,29)" fg:x="37098" fg:w="354"/><text x="32.9165%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (144 samples, 0.13%)</title><rect x="32.8514%" y="405" width="0.1268%" height="15" fill="rgb(244,115,12)" fg:x="37308" fg:w="144"/><text x="33.1014%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (144 samples, 0.13%)</title><rect x="32.8514%" y="389" width="0.1268%" height="15" fill="rgb(222,82,18)" fg:x="37308" fg:w="144"/><text x="33.1014%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (396 samples, 0.35%)</title><rect x="32.6392%" y="581" width="0.3487%" height="15" fill="rgb(249,227,8)" fg:x="37067" fg:w="396"/><text x="32.8892%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (390 samples, 0.34%)</title><rect x="32.6445%" y="565" width="0.3434%" height="15" fill="rgb(253,141,45)" fg:x="37073" fg:w="390"/><text x="32.8945%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (390 samples, 0.34%)</title><rect x="32.6445%" y="549" width="0.3434%" height="15" fill="rgb(234,184,4)" fg:x="37073" fg:w="390"/><text x="32.8945%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (390 samples, 0.34%)</title><rect x="32.6445%" y="533" width="0.3434%" height="15" fill="rgb(218,194,23)" fg:x="37073" fg:w="390"/><text x="32.8945%" y="543.50"></text></g><g><title>alloc::alloc::alloc (390 samples, 0.34%)</title><rect x="32.6445%" y="517" width="0.3434%" height="15" fill="rgb(235,66,41)" fg:x="37073" fg:w="390"/><text x="32.8945%" y="527.50"></text></g><g><title>__rg_alloc (390 samples, 0.34%)</title><rect x="32.6445%" y="501" width="0.3434%" height="15" fill="rgb(245,217,1)" fg:x="37073" fg:w="390"/><text x="32.8945%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (390 samples, 0.34%)</title><rect x="32.6445%" y="485" width="0.3434%" height="15" fill="rgb(229,91,1)" fg:x="37073" fg:w="390"/><text x="32.8945%" y="495.50"></text></g><g><title>rust_alloc (380 samples, 0.33%)</title><rect x="32.6533%" y="469" width="0.3346%" height="15" fill="rgb(207,101,30)" fg:x="37083" fg:w="380"/><text x="32.9033%" y="479.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (398 samples, 0.35%)</title><rect x="32.6392%" y="661" width="0.3505%" height="15" fill="rgb(223,82,49)" fg:x="37067" fg:w="398"/><text x="32.8892%" y="671.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (398 samples, 0.35%)</title><rect x="32.6392%" y="645" width="0.3505%" height="15" fill="rgb(218,167,17)" fg:x="37067" fg:w="398"/><text x="32.8892%" y="655.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (398 samples, 0.35%)</title><rect x="32.6392%" y="629" width="0.3505%" height="15" fill="rgb(208,103,14)" fg:x="37067" fg:w="398"/><text x="32.8892%" y="639.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (398 samples, 0.35%)</title><rect x="32.6392%" y="613" width="0.3505%" height="15" fill="rgb(238,20,8)" fg:x="37067" fg:w="398"/><text x="32.8892%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (398 samples, 0.35%)</title><rect x="32.6392%" y="597" width="0.3505%" height="15" fill="rgb(218,80,54)" fg:x="37067" fg:w="398"/><text x="32.8892%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (434 samples, 0.38%)</title><rect x="32.6392%" y="677" width="0.3822%" height="15" fill="rgb(240,144,17)" fg:x="37067" fg:w="434"/><text x="32.8892%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (36 samples, 0.03%)</title><rect x="32.9896%" y="661" width="0.0317%" height="15" fill="rgb(245,27,50)" fg:x="37465" fg:w="36"/><text x="33.2396%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (30 samples, 0.03%)</title><rect x="32.9949%" y="645" width="0.0264%" height="15" fill="rgb(251,51,7)" fg:x="37471" fg:w="30"/><text x="33.2449%" y="655.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (25 samples, 0.02%)</title><rect x="32.9993%" y="629" width="0.0220%" height="15" fill="rgb(245,217,29)" fg:x="37476" fg:w="25"/><text x="33.2493%" y="639.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (19 samples, 0.02%)</title><rect x="33.0046%" y="613" width="0.0167%" height="15" fill="rgb(221,176,29)" fg:x="37482" fg:w="19"/><text x="33.2546%" y="623.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (19 samples, 0.02%)</title><rect x="33.0046%" y="597" width="0.0167%" height="15" fill="rgb(212,180,24)" fg:x="37482" fg:w="19"/><text x="33.2546%" y="607.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::reserve (19 samples, 0.02%)</title><rect x="33.0046%" y="581" width="0.0167%" height="15" fill="rgb(254,24,2)" fg:x="37482" fg:w="19"/><text x="33.2546%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (19 samples, 0.02%)</title><rect x="33.0046%" y="565" width="0.0167%" height="15" fill="rgb(230,100,2)" fg:x="37482" fg:w="19"/><text x="33.2546%" y="575.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="33.0046%" y="549" width="0.0167%" height="15" fill="rgb(219,142,25)" fg:x="37482" fg:w="19"/><text x="33.2546%" y="559.50"></text></g><g><title>abi_stable::std_types::option::ROption&lt;T&gt;::unwrap_or_else (458 samples, 0.40%)</title><rect x="32.6260%" y="741" width="0.4033%" height="15" fill="rgb(240,73,43)" fg:x="37052" fg:w="458"/><text x="32.8760%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (456 samples, 0.40%)</title><rect x="32.6277%" y="725" width="0.4015%" height="15" fill="rgb(214,114,15)" fg:x="37054" fg:w="456"/><text x="32.8777%" y="735.50"></text></g><g><title>value_trait::Builder::object (444 samples, 0.39%)</title><rect x="32.6383%" y="709" width="0.3910%" height="15" fill="rgb(207,130,4)" fg:x="37066" fg:w="444"/><text x="32.8883%" y="719.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (443 samples, 0.39%)</title><rect x="32.6392%" y="693" width="0.3901%" height="15" fill="rgb(221,25,40)" fg:x="37067" fg:w="443"/><text x="32.8892%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="33.0345%" y="741" width="0.0176%" height="15" fill="rgb(241,184,7)" fg:x="37516" fg:w="20"/><text x="33.2845%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt; (15 samples, 0.01%)</title><rect x="33.0389%" y="725" width="0.0132%" height="15" fill="rgb(235,159,4)" fg:x="37521" fg:w="15"/><text x="33.2889%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="33.0953%" y="661" width="0.0167%" height="15" fill="rgb(214,87,48)" fg:x="37585" fg:w="19"/><text x="33.3453%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (19 samples, 0.02%)</title><rect x="33.0953%" y="645" width="0.0167%" height="15" fill="rgb(246,198,24)" fg:x="37585" fg:w="19"/><text x="33.3453%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (19 samples, 0.02%)</title><rect x="33.0953%" y="629" width="0.0167%" height="15" fill="rgb(209,66,40)" fg:x="37585" fg:w="19"/><text x="33.3453%" y="639.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (36 samples, 0.03%)</title><rect x="33.0847%" y="677" width="0.0317%" height="15" fill="rgb(233,147,39)" fg:x="37573" fg:w="36"/><text x="33.3347%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="33.1578%" y="533" width="0.0167%" height="15" fill="rgb(231,145,52)" fg:x="37656" fg:w="19"/><text x="33.4078%" y="543.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.01%)</title><rect x="33.1596%" y="517" width="0.0150%" height="15" fill="rgb(206,20,26)" fg:x="37658" fg:w="17"/><text x="33.4096%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="33.1499%" y="581" width="0.0352%" height="15" fill="rgb(238,220,4)" fg:x="37647" fg:w="40"/><text x="33.3999%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="33.1499%" y="565" width="0.0352%" height="15" fill="rgb(252,195,42)" fg:x="37647" fg:w="40"/><text x="33.3999%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (39 samples, 0.03%)</title><rect x="33.1508%" y="549" width="0.0343%" height="15" fill="rgb(209,10,6)" fg:x="37648" fg:w="39"/><text x="33.4008%" y="559.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="33.1745%" y="533" width="0.0106%" height="15" fill="rgb(229,3,52)" fg:x="37675" fg:w="12"/><text x="33.4245%" y="543.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="33.1745%" y="517" width="0.0106%" height="15" fill="rgb(253,49,37)" fg:x="37675" fg:w="12"/><text x="33.4245%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (65 samples, 0.06%)</title><rect x="33.1314%" y="613" width="0.0572%" height="15" fill="rgb(240,103,49)" fg:x="37626" fg:w="65"/><text x="33.3814%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (65 samples, 0.06%)</title><rect x="33.1314%" y="597" width="0.0572%" height="15" fill="rgb(250,182,30)" fg:x="37626" fg:w="65"/><text x="33.3814%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (79 samples, 0.07%)</title><rect x="33.1199%" y="661" width="0.0696%" height="15" fill="rgb(248,8,30)" fg:x="37613" fg:w="79"/><text x="33.3699%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (66 samples, 0.06%)</title><rect x="33.1314%" y="645" width="0.0581%" height="15" fill="rgb(237,120,30)" fg:x="37626" fg:w="66"/><text x="33.3814%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (66 samples, 0.06%)</title><rect x="33.1314%" y="629" width="0.0581%" height="15" fill="rgb(221,146,34)" fg:x="37626" fg:w="66"/><text x="33.3814%" y="639.50"></text></g><g><title>rust_dealloc (84 samples, 0.07%)</title><rect x="33.1164%" y="677" width="0.0740%" height="15" fill="rgb(242,55,13)" fg:x="37609" fg:w="84"/><text x="33.3664%" y="687.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (15 samples, 0.01%)</title><rect x="33.1904%" y="661" width="0.0132%" height="15" fill="rgb(242,112,31)" fg:x="37693" fg:w="15"/><text x="33.4404%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (162 samples, 0.14%)</title><rect x="33.0618%" y="741" width="0.1426%" height="15" fill="rgb(249,192,27)" fg:x="37547" fg:w="162"/><text x="33.3118%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (157 samples, 0.14%)</title><rect x="33.0662%" y="725" width="0.1382%" height="15" fill="rgb(208,204,44)" fg:x="37552" fg:w="157"/><text x="33.3162%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt;&gt; (157 samples, 0.14%)</title><rect x="33.0662%" y="709" width="0.1382%" height="15" fill="rgb(208,93,54)" fg:x="37552" fg:w="157"/><text x="33.3162%" y="719.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (157 samples, 0.14%)</title><rect x="33.0662%" y="693" width="0.1382%" height="15" fill="rgb(242,1,31)" fg:x="37552" fg:w="157"/><text x="33.3162%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (16 samples, 0.01%)</title><rect x="33.1904%" y="677" width="0.0141%" height="15" fill="rgb(241,83,25)" fg:x="37693" fg:w="16"/><text x="33.4404%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (85 samples, 0.07%)</title><rect x="33.2732%" y="677" width="0.0748%" height="15" fill="rgb(205,169,50)" fg:x="37787" fg:w="85"/><text x="33.5232%" y="687.50"></text></g><g><title>core::cmp::PartialOrd::ge (85 samples, 0.07%)</title><rect x="33.2732%" y="661" width="0.0748%" height="15" fill="rgb(239,186,37)" fg:x="37787" fg:w="85"/><text x="33.5232%" y="671.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (84 samples, 0.07%)</title><rect x="33.2740%" y="645" width="0.0740%" height="15" fill="rgb(205,221,10)" fg:x="37788" fg:w="84"/><text x="33.5240%" y="655.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (84 samples, 0.07%)</title><rect x="33.2740%" y="629" width="0.0740%" height="15" fill="rgb(218,196,15)" fg:x="37788" fg:w="84"/><text x="33.5240%" y="639.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (84 samples, 0.07%)</title><rect x="33.2740%" y="613" width="0.0740%" height="15" fill="rgb(218,196,35)" fg:x="37788" fg:w="84"/><text x="33.5240%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (50 samples, 0.04%)</title><rect x="33.3040%" y="597" width="0.0440%" height="15" fill="rgb(233,63,24)" fg:x="37822" fg:w="50"/><text x="33.5540%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (140 samples, 0.12%)</title><rect x="33.2388%" y="709" width="0.1233%" height="15" fill="rgb(225,8,4)" fg:x="37748" fg:w="140"/><text x="33.4888%" y="719.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (140 samples, 0.12%)</title><rect x="33.2388%" y="693" width="0.1233%" height="15" fill="rgb(234,105,35)" fg:x="37748" fg:w="140"/><text x="33.4888%" y="703.50"></text></g><g><title>core::time::Duration::new (16 samples, 0.01%)</title><rect x="33.3480%" y="677" width="0.0141%" height="15" fill="rgb(236,21,32)" fg:x="37872" fg:w="16"/><text x="33.5980%" y="687.50"></text></g><g><title>std::time::SystemTime::duration_since (152 samples, 0.13%)</title><rect x="33.2388%" y="725" width="0.1338%" height="15" fill="rgb(228,109,6)" fg:x="37748" fg:w="152"/><text x="33.4888%" y="735.50"></text></g><g><title>tremor_common::time::nanotime (12 samples, 0.01%)</title><rect x="33.3621%" y="709" width="0.0106%" height="15" fill="rgb(229,215,31)" fg:x="37888" fg:w="12"/><text x="33.6121%" y="719.50"></text></g><g><title>tremor_common::time::nanotime (759 samples, 0.67%)</title><rect x="33.2045%" y="741" width="0.6683%" height="15" fill="rgb(221,52,54)" fg:x="37709" fg:w="759"/><text x="33.4545%" y="751.50"></text></g><g><title>std::time::SystemTime::now (568 samples, 0.50%)</title><rect x="33.3727%" y="725" width="0.5001%" height="15" fill="rgb(252,129,43)" fg:x="37900" fg:w="568"/><text x="33.6227%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (568 samples, 0.50%)</title><rect x="33.3727%" y="709" width="0.5001%" height="15" fill="rgb(248,183,27)" fg:x="37900" fg:w="568"/><text x="33.6227%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::now (568 samples, 0.50%)</title><rect x="33.3727%" y="693" width="0.5001%" height="15" fill="rgb(250,0,22)" fg:x="37900" fg:w="568"/><text x="33.6227%" y="703.50"></text></g><g><title>__clock_gettime_2 (470 samples, 0.41%)</title><rect x="33.4590%" y="677" width="0.4139%" height="15" fill="rgb(213,166,10)" fg:x="37998" fg:w="470"/><text x="33.7090%" y="687.50"></text></g><g><title>__vdso_clock_gettime (436 samples, 0.38%)</title><rect x="33.4889%" y="661" width="0.3839%" height="15" fill="rgb(207,163,36)" fg:x="38032" fg:w="436"/><text x="33.7389%" y="671.50"></text></g><g><title>[[vdso]] (288 samples, 0.25%)</title><rect x="33.6192%" y="645" width="0.2536%" height="15" fill="rgb(208,122,22)" fg:x="38180" fg:w="288"/><text x="33.8692%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (18 samples, 0.02%)</title><rect x="33.9248%" y="661" width="0.0158%" height="15" fill="rgb(207,104,49)" fg:x="38527" fg:w="18"/><text x="34.1748%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,500 samples, 6.60%)</title><rect x="27.3559%" y="773" width="6.6041%" height="15" fill="rgb(248,211,50)" fg:x="31067" fg:w="7500"/><text x="27.6059%" y="783.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,665 samples, 3.23%)</title><rect x="30.7328%" y="757" width="3.2272%" height="15" fill="rgb(217,13,45)" fg:x="34902" fg:w="3665"/><text x="30.9828%" y="767.50">tre..</text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (99 samples, 0.09%)</title><rect x="33.8728%" y="741" width="0.0872%" height="15" fill="rgb(211,216,49)" fg:x="38468" fg:w="99"/><text x="34.1228%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (78 samples, 0.07%)</title><rect x="33.8913%" y="725" width="0.0687%" height="15" fill="rgb(221,58,53)" fg:x="38489" fg:w="78"/><text x="34.1413%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (67 samples, 0.06%)</title><rect x="33.9010%" y="709" width="0.0590%" height="15" fill="rgb(220,112,41)" fg:x="38500" fg:w="67"/><text x="34.1510%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (67 samples, 0.06%)</title><rect x="33.9010%" y="693" width="0.0590%" height="15" fill="rgb(236,38,28)" fg:x="38500" fg:w="67"/><text x="34.1510%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (67 samples, 0.06%)</title><rect x="33.9010%" y="677" width="0.0590%" height="15" fill="rgb(227,195,22)" fg:x="38500" fg:w="67"/><text x="34.1510%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (22 samples, 0.02%)</title><rect x="33.9406%" y="661" width="0.0194%" height="15" fill="rgb(214,55,33)" fg:x="38545" fg:w="22"/><text x="34.1906%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (41 samples, 0.04%)</title><rect x="33.9679%" y="757" width="0.0361%" height="15" fill="rgb(248,80,13)" fg:x="38576" fg:w="41"/><text x="34.2179%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (46 samples, 0.04%)</title><rect x="33.9679%" y="773" width="0.0405%" height="15" fill="rgb(238,52,6)" fg:x="38576" fg:w="46"/><text x="34.2179%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (8,743 samples, 7.70%)</title><rect x="26.3389%" y="789" width="7.6986%" height="15" fill="rgb(224,198,47)" fg:x="29912" fg:w="8743"/><text x="26.5889%" y="799.50">tremor_runt..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::should_pull_data (33 samples, 0.03%)</title><rect x="34.0084%" y="773" width="0.0291%" height="15" fill="rgb(233,171,20)" fg:x="38622" fg:w="33"/><text x="34.2584%" y="783.50"></text></g><g><title>size_to_sizeclass (16 samples, 0.01%)</title><rect x="34.1379%" y="741" width="0.0141%" height="15" fill="rgb(241,30,25)" fg:x="38769" fg:w="16"/><text x="34.3879%" y="751.50"></text></g><g><title>rust_dealloc (27 samples, 0.02%)</title><rect x="34.1519%" y="677" width="0.0238%" height="15" fill="rgb(207,171,38)" fg:x="38785" fg:w="27"/><text x="34.4019%" y="687.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (24 samples, 0.02%)</title><rect x="34.2356%" y="645" width="0.0211%" height="15" fill="rgb(234,70,1)" fg:x="38880" fg:w="24"/><text x="34.4856%" y="655.50"></text></g><g><title> (24 samples, 0.02%)</title><rect x="34.2356%" y="629" width="0.0211%" height="15" fill="rgb(232,178,18)" fg:x="38880" fg:w="24"/><text x="34.4856%" y="639.50"></text></g><g><title>snmalloc::Remote::set_info (15 samples, 0.01%)</title><rect x="34.2567%" y="645" width="0.0132%" height="15" fill="rgb(241,78,40)" fg:x="38904" fg:w="15"/><text x="34.5067%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (106 samples, 0.09%)</title><rect x="34.1792%" y="677" width="0.0933%" height="15" fill="rgb(222,35,25)" fg:x="38816" fg:w="106"/><text x="34.4292%" y="687.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (93 samples, 0.08%)</title><rect x="34.1907%" y="661" width="0.0819%" height="15" fill="rgb(207,92,16)" fg:x="38829" fg:w="93"/><text x="34.4407%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (181 samples, 0.16%)</title><rect x="34.1519%" y="741" width="0.1594%" height="15" fill="rgb(216,59,51)" fg:x="38785" fg:w="181"/><text x="34.4019%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (181 samples, 0.16%)</title><rect x="34.1519%" y="725" width="0.1594%" height="15" fill="rgb(213,80,28)" fg:x="38785" fg:w="181"/><text x="34.4019%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (181 samples, 0.16%)</title><rect x="34.1519%" y="709" width="0.1594%" height="15" fill="rgb(220,93,7)" fg:x="38785" fg:w="181"/><text x="34.4019%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (181 samples, 0.16%)</title><rect x="34.1519%" y="693" width="0.1594%" height="15" fill="rgb(225,24,44)" fg:x="38785" fg:w="181"/><text x="34.4019%" y="703.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (39 samples, 0.03%)</title><rect x="34.2770%" y="677" width="0.0343%" height="15" fill="rgb(243,74,40)" fg:x="38927" fg:w="39"/><text x="34.5270%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (212 samples, 0.19%)</title><rect x="34.1379%" y="757" width="0.1867%" height="15" fill="rgb(228,39,7)" fg:x="38769" fg:w="212"/><text x="34.3879%" y="767.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="34.3113%" y="741" width="0.0132%" height="15" fill="rgb(227,79,8)" fg:x="38966" fg:w="15"/><text x="34.5613%" y="751.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="34.3113%" y="725" width="0.0132%" height="15" fill="rgb(236,58,11)" fg:x="38966" fg:w="15"/><text x="34.5613%" y="735.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (15 samples, 0.01%)</title><rect x="34.3113%" y="709" width="0.0132%" height="15" fill="rgb(249,63,35)" fg:x="38966" fg:w="15"/><text x="34.5613%" y="719.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="34.3113%" y="693" width="0.0132%" height="15" fill="rgb(252,114,16)" fg:x="38966" fg:w="15"/><text x="34.5613%" y="703.50"></text></g><g><title>rust_dealloc (258 samples, 0.23%)</title><rect x="34.1255%" y="773" width="0.2272%" height="15" fill="rgb(254,151,24)" fg:x="38755" fg:w="258"/><text x="34.3755%" y="783.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (32 samples, 0.03%)</title><rect x="34.3245%" y="757" width="0.0282%" height="15" fill="rgb(253,54,39)" fg:x="38981" fg:w="32"/><text x="34.5745%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (26 samples, 0.02%)</title><rect x="34.3571%" y="725" width="0.0229%" height="15" fill="rgb(243,25,45)" fg:x="39018" fg:w="26"/><text x="34.6071%" y="735.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (18 samples, 0.02%)</title><rect x="34.3642%" y="709" width="0.0158%" height="15" fill="rgb(234,134,9)" fg:x="39026" fg:w="18"/><text x="34.6142%" y="719.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="34.3642%" y="693" width="0.0158%" height="15" fill="rgb(227,166,31)" fg:x="39026" fg:w="18"/><text x="34.6142%" y="703.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="34.3642%" y="677" width="0.0158%" height="15" fill="rgb(245,143,41)" fg:x="39026" fg:w="18"/><text x="34.6142%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (33 samples, 0.03%)</title><rect x="34.3527%" y="741" width="0.0291%" height="15" fill="rgb(238,181,32)" fg:x="39013" fg:w="33"/><text x="34.6027%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (34 samples, 0.03%)</title><rect x="34.3527%" y="757" width="0.0299%" height="15" fill="rgb(224,113,18)" fg:x="39013" fg:w="34"/><text x="34.6027%" y="767.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (397 samples, 0.35%)</title><rect x="34.0375%" y="789" width="0.3496%" height="15" fill="rgb(240,229,28)" fg:x="38655" fg:w="397"/><text x="34.2875%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (39 samples, 0.03%)</title><rect x="34.3527%" y="773" width="0.0343%" height="15" fill="rgb(250,185,3)" fg:x="39013" fg:w="39"/><text x="34.6027%" y="783.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (43 samples, 0.04%)</title><rect x="35.4904%" y="773" width="0.0379%" height="15" fill="rgb(212,59,25)" fg:x="40305" fg:w="43"/><text x="35.7404%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="35.5282%" y="773" width="0.0106%" height="15" fill="rgb(221,87,20)" fg:x="40348" fg:w="12"/><text x="35.7782%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.01%)</title><rect x="35.5388%" y="773" width="0.0106%" height="15" fill="rgb(213,74,28)" fg:x="40360" fg:w="12"/><text x="35.7888%" y="783.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (12 samples, 0.01%)</title><rect x="35.5388%" y="757" width="0.0106%" height="15" fill="rgb(224,132,34)" fg:x="40360" fg:w="12"/><text x="35.7888%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (494 samples, 0.43%)</title><rect x="35.9210%" y="741" width="0.4350%" height="15" fill="rgb(222,101,24)" fg:x="40794" fg:w="494"/><text x="36.1710%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (419 samples, 0.37%)</title><rect x="36.3560%" y="741" width="0.3689%" height="15" fill="rgb(254,142,4)" fg:x="41288" fg:w="419"/><text x="36.6060%" y="751.50"></text></g><g><title>core::ptr::write (398 samples, 0.35%)</title><rect x="36.3744%" y="725" width="0.3505%" height="15" fill="rgb(230,229,49)" fg:x="41309" fg:w="398"/><text x="36.6244%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (396 samples, 0.35%)</title><rect x="36.3762%" y="709" width="0.3487%" height="15" fill="rgb(238,70,47)" fg:x="41311" fg:w="396"/><text x="36.6262%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (32 samples, 0.03%)</title><rect x="36.7249%" y="741" width="0.0282%" height="15" fill="rgb(231,160,17)" fg:x="41707" fg:w="32"/><text x="36.9749%" y="751.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (19 samples, 0.02%)</title><rect x="36.7654%" y="709" width="0.0167%" height="15" fill="rgb(218,68,53)" fg:x="41753" fg:w="19"/><text x="37.0154%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (19 samples, 0.02%)</title><rect x="36.7654%" y="693" width="0.0167%" height="15" fill="rgb(236,111,10)" fg:x="41753" fg:w="19"/><text x="37.0154%" y="703.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (27 samples, 0.02%)</title><rect x="36.7821%" y="709" width="0.0238%" height="15" fill="rgb(224,34,41)" fg:x="41772" fg:w="27"/><text x="37.0321%" y="719.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (27 samples, 0.02%)</title><rect x="36.7821%" y="693" width="0.0238%" height="15" fill="rgb(241,118,19)" fg:x="41772" fg:w="27"/><text x="37.0321%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (917 samples, 0.81%)</title><rect x="36.8059%" y="645" width="0.8075%" height="15" fill="rgb(238,129,25)" fg:x="41799" fg:w="917"/><text x="37.0559%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (785 samples, 0.69%)</title><rect x="36.9221%" y="629" width="0.6912%" height="15" fill="rgb(238,22,31)" fg:x="41931" fg:w="785"/><text x="37.1721%" y="639.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (965 samples, 0.85%)</title><rect x="36.7654%" y="725" width="0.8497%" height="15" fill="rgb(222,174,48)" fg:x="41753" fg:w="965"/><text x="37.0154%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (919 samples, 0.81%)</title><rect x="36.8059%" y="709" width="0.8092%" height="15" fill="rgb(206,152,40)" fg:x="41799" fg:w="919"/><text x="37.0559%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (919 samples, 0.81%)</title><rect x="36.8059%" y="693" width="0.8092%" height="15" fill="rgb(218,99,54)" fg:x="41799" fg:w="919"/><text x="37.0559%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (919 samples, 0.81%)</title><rect x="36.8059%" y="677" width="0.8092%" height="15" fill="rgb(220,174,26)" fg:x="41799" fg:w="919"/><text x="37.0559%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (919 samples, 0.81%)</title><rect x="36.8059%" y="661" width="0.8092%" height="15" fill="rgb(245,116,9)" fg:x="41799" fg:w="919"/><text x="37.0559%" y="671.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (991 samples, 0.87%)</title><rect x="36.7531%" y="741" width="0.8726%" height="15" fill="rgb(209,72,35)" fg:x="41739" fg:w="991"/><text x="37.0031%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (12 samples, 0.01%)</title><rect x="37.6151%" y="725" width="0.0106%" height="15" fill="rgb(226,126,21)" fg:x="42718" fg:w="12"/><text x="37.8651%" y="735.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="38.3143%" y="709" width="0.0220%" height="15" fill="rgb(227,192,1)" fg:x="43512" fg:w="25"/><text x="38.5643%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (16 samples, 0.01%)</title><rect x="38.3451%" y="709" width="0.0141%" height="15" fill="rgb(237,180,29)" fg:x="43547" fg:w="16"/><text x="38.5951%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (510 samples, 0.45%)</title><rect x="38.3592%" y="709" width="0.4491%" height="15" fill="rgb(230,197,35)" fg:x="43563" fg:w="510"/><text x="38.6092%" y="719.50"></text></g><g><title>core::ptr::write (505 samples, 0.44%)</title><rect x="38.3636%" y="693" width="0.4447%" height="15" fill="rgb(246,193,31)" fg:x="43568" fg:w="505"/><text x="38.6136%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (492 samples, 0.43%)</title><rect x="38.3750%" y="677" width="0.4332%" height="15" fill="rgb(241,36,4)" fg:x="43581" fg:w="492"/><text x="38.6250%" y="687.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,335 samples, 1.18%)</title><rect x="37.6415%" y="725" width="1.1755%" height="15" fill="rgb(241,130,17)" fg:x="42748" fg:w="1335"/><text x="37.8915%" y="735.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,371 samples, 1.21%)</title><rect x="37.6257%" y="741" width="1.2072%" height="15" fill="rgb(206,137,32)" fg:x="42730" fg:w="1371"/><text x="37.8757%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (18 samples, 0.02%)</title><rect x="38.8171%" y="725" width="0.0158%" height="15" fill="rgb(237,228,51)" fg:x="44083" fg:w="18"/><text x="39.0671%" y="735.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,555 samples, 3.13%)</title><rect x="35.7140%" y="757" width="3.1303%" height="15" fill="rgb(243,6,42)" fg:x="40559" fg:w="3555"/><text x="35.9640%" y="767.50">tre..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (13 samples, 0.01%)</title><rect x="38.8329%" y="741" width="0.0114%" height="15" fill="rgb(251,74,28)" fg:x="44101" fg:w="13"/><text x="39.0829%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (32 samples, 0.03%)</title><rect x="38.8444%" y="757" width="0.0282%" height="15" fill="rgb(218,20,49)" fg:x="44114" fg:w="32"/><text x="39.0944%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,815 samples, 3.36%)</title><rect x="35.5494%" y="773" width="3.3593%" height="15" fill="rgb(238,28,14)" fg:x="40372" fg:w="3815"/><text x="35.7994%" y="783.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (41 samples, 0.04%)</title><rect x="38.8725%" y="757" width="0.0361%" height="15" fill="rgb(229,40,46)" fg:x="44146" fg:w="41"/><text x="39.1225%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,646 samples, 1.45%)</title><rect x="38.9087%" y="773" width="1.4494%" height="15" fill="rgb(244,195,20)" fg:x="44187" fg:w="1646"/><text x="39.1587%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (14 samples, 0.01%)</title><rect x="40.3580%" y="773" width="0.0123%" height="15" fill="rgb(253,56,35)" fg:x="45833" fg:w="14"/><text x="40.6080%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="40.3580%" y="757" width="0.0123%" height="15" fill="rgb(210,149,44)" fg:x="45833" fg:w="14"/><text x="40.6080%" y="767.50"></text></g><g><title>async_global_executor::reactor::block_on (32,260 samples, 28.41%)</title><rect x="12.0036%" y="1125" width="28.4064%" height="15" fill="rgb(240,135,12)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="1135.50">async_global_executor::reactor::block_on</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (32,260 samples, 28.41%)</title><rect x="12.0036%" y="1109" width="28.4064%" height="15" fill="rgb(251,24,50)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="1119.50">async_global_executor::reactor::block_on::{{cl..</text></g><g><title>async_io::driver::block_on (32,260 samples, 28.41%)</title><rect x="12.0036%" y="1093" width="28.4064%" height="15" fill="rgb(243,200,47)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="1103.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (32,260 samples, 28.41%)</title><rect x="12.0036%" y="1077" width="28.4064%" height="15" fill="rgb(224,166,26)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="1087.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,260 samples, 28.41%)</title><rect x="12.0036%" y="1061" width="28.4064%" height="15" fill="rgb(233,0,47)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="1071.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as..</text></g><g><title>async_executor::Executor::run::{{closure}} (32,260 samples, 28.41%)</title><rect x="12.0036%" y="1045" width="28.4064%" height="15" fill="rgb(253,80,5)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="1055.50">async_executor::Executor::run::{{closure}}</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (32,260 samples, 28.41%)</title><rect x="12.0036%" y="1029" width="28.4064%" height="15" fill="rgb(214,133,25)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="1039.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,260 samples, 28.41%)</title><rect x="12.0036%" y="1013" width="28.4064%" height="15" fill="rgb(209,27,14)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="1023.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (32,260 samples, 28.41%)</title><rect x="12.0036%" y="997" width="28.4064%" height="15" fill="rgb(219,102,51)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="1007.50">async_executor::Executor::run::{{closure}}::{{..</text></g><g><title>async_task::runnable::Runnable::run (32,260 samples, 28.41%)</title><rect x="12.0036%" y="981" width="28.4064%" height="15" fill="rgb(237,18,16)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="991.50">async_task::runnable::Runnable::run</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (32,260 samples, 28.41%)</title><rect x="12.0036%" y="965" width="28.4064%" height="15" fill="rgb(241,85,17)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="975.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (32,260 samples, 28.41%)</title><rect x="12.0036%" y="949" width="28.4064%" height="15" fill="rgb(236,90,42)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="959.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,260 samples, 28.41%)</title><rect x="12.0036%" y="933" width="28.4064%" height="15" fill="rgb(249,57,21)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="943.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (32,260 samples, 28.41%)</title><rect x="12.0036%" y="917" width="28.4064%" height="15" fill="rgb(243,12,36)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="927.50">async_executor::Executor::spawn::{{closure}}</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (32,260 samples, 28.41%)</title><rect x="12.0036%" y="901" width="28.4064%" height="15" fill="rgb(253,128,47)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="911.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (32,260 samples, 28.41%)</title><rect x="12.0036%" y="885" width="28.4064%" height="15" fill="rgb(207,33,20)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="895.50">async_std::task::task_locals_wrapper::TaskLoca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32,260 samples, 28.41%)</title><rect x="12.0036%" y="869" width="28.4064%" height="15" fill="rgb(233,215,35)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="879.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (32,260 samples, 28.41%)</title><rect x="12.0036%" y="853" width="28.4064%" height="15" fill="rgb(249,188,52)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="863.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (32,260 samples, 28.41%)</title><rect x="12.0036%" y="837" width="28.4064%" height="15" fill="rgb(225,12,32)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="847.50">async_std::task::task_locals_wrapper::TaskLoca..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (32,260 samples, 28.41%)</title><rect x="12.0036%" y="821" width="28.4064%" height="15" fill="rgb(247,98,14)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="831.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,260 samples, 28.41%)</title><rect x="12.0036%" y="805" width="28.4064%" height="15" fill="rgb(247,219,48)" fg:x="13632" fg:w="32260"/><text x="12.2536%" y="815.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,840 samples, 6.02%)</title><rect x="34.3871%" y="789" width="6.0229%" height="15" fill="rgb(253,60,48)" fg:x="39052" fg:w="6840"/><text x="34.6371%" y="799.50">tremor_r..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (18 samples, 0.02%)</title><rect x="40.3941%" y="773" width="0.0158%" height="15" fill="rgb(245,15,52)" fg:x="45874" fg:w="18"/><text x="40.6441%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.04%)</title><rect x="40.4434%" y="549" width="0.0449%" height="15" fill="rgb(220,133,28)" fg:x="45930" fg:w="51"/><text x="40.6934%" y="559.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="40.7534%" y="533" width="0.0370%" height="15" fill="rgb(217,180,4)" fg:x="46282" fg:w="42"/><text x="41.0034%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (40 samples, 0.04%)</title><rect x="40.8071%" y="517" width="0.0352%" height="15" fill="rgb(251,24,1)" fg:x="46343" fg:w="40"/><text x="41.0571%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (40 samples, 0.04%)</title><rect x="40.8071%" y="501" width="0.0352%" height="15" fill="rgb(212,185,49)" fg:x="46343" fg:w="40"/><text x="41.0571%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (40 samples, 0.04%)</title><rect x="40.8071%" y="485" width="0.0352%" height="15" fill="rgb(215,175,22)" fg:x="46343" fg:w="40"/><text x="41.0571%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="40.8291%" y="469" width="0.0132%" height="15" fill="rgb(250,205,14)" fg:x="46368" fg:w="15"/><text x="41.0791%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::inner::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (15 samples, 0.01%)</title><rect x="40.8291%" y="453" width="0.0132%" height="15" fill="rgb(225,211,22)" fg:x="46368" fg:w="15"/><text x="41.0791%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="40.8291%" y="437" width="0.0132%" height="15" fill="rgb(251,179,42)" fg:x="46368" fg:w="15"/><text x="41.0791%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::is_empty_singleton (13 samples, 0.01%)</title><rect x="40.8309%" y="421" width="0.0114%" height="15" fill="rgb(208,216,51)" fg:x="46370" fg:w="13"/><text x="41.0809%" y="431.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (75 samples, 0.07%)</title><rect x="40.7904%" y="533" width="0.0660%" height="15" fill="rgb(235,36,11)" fg:x="46324" fg:w="75"/><text x="41.0404%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="40.8423%" y="517" width="0.0141%" height="15" fill="rgb(213,189,28)" fg:x="46383" fg:w="16"/><text x="41.0923%" y="527.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.01%)</title><rect x="40.8423%" y="501" width="0.0141%" height="15" fill="rgb(227,203,42)" fg:x="46383" fg:w="16"/><text x="41.0923%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="40.8423%" y="485" width="0.0141%" height="15" fill="rgb(244,72,36)" fg:x="46383" fg:w="16"/><text x="41.0923%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="40.8423%" y="469" width="0.0141%" height="15" fill="rgb(213,53,17)" fg:x="46383" fg:w="16"/><text x="41.0923%" y="479.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="40.8423%" y="453" width="0.0141%" height="15" fill="rgb(207,167,3)" fg:x="46383" fg:w="16"/><text x="41.0923%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="40.8423%" y="437" width="0.0141%" height="15" fill="rgb(216,98,30)" fg:x="46383" fg:w="16"/><text x="41.0923%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::deref::Deref for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::deref (30 samples, 0.03%)</title><rect x="40.8564%" y="533" width="0.0264%" height="15" fill="rgb(236,123,15)" fg:x="46399" fg:w="30"/><text x="41.1064%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (30 samples, 0.03%)</title><rect x="40.8564%" y="517" width="0.0264%" height="15" fill="rgb(248,81,50)" fg:x="46399" fg:w="30"/><text x="41.1064%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (13 samples, 0.01%)</title><rect x="40.8828%" y="533" width="0.0114%" height="15" fill="rgb(214,120,4)" fg:x="46429" fg:w="13"/><text x="41.1328%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (13 samples, 0.01%)</title><rect x="40.8828%" y="517" width="0.0114%" height="15" fill="rgb(208,179,34)" fg:x="46429" fg:w="13"/><text x="41.1328%" y="527.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="40.8828%" y="501" width="0.0114%" height="15" fill="rgb(227,140,7)" fg:x="46429" fg:w="13"/><text x="41.1328%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="40.8828%" y="485" width="0.0114%" height="15" fill="rgb(214,22,6)" fg:x="46429" fg:w="13"/><text x="41.1328%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="40.8828%" y="469" width="0.0114%" height="15" fill="rgb(207,137,27)" fg:x="46429" fg:w="13"/><text x="41.1328%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="40.8828%" y="453" width="0.0114%" height="15" fill="rgb(210,8,46)" fg:x="46429" fg:w="13"/><text x="41.1328%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="40.8828%" y="437" width="0.0114%" height="15" fill="rgb(240,16,54)" fg:x="46429" fg:w="13"/><text x="41.1328%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="40.8828%" y="421" width="0.0114%" height="15" fill="rgb(211,209,29)" fg:x="46429" fg:w="13"/><text x="41.1328%" y="431.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="40.8828%" y="405" width="0.0114%" height="15" fill="rgb(226,228,24)" fg:x="46429" fg:w="13"/><text x="41.1328%" y="415.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="40.8828%" y="389" width="0.0114%" height="15" fill="rgb(222,84,9)" fg:x="46429" fg:w="13"/><text x="41.1328%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.04%)</title><rect x="40.8987%" y="469" width="0.0440%" height="15" fill="rgb(234,203,30)" fg:x="46447" fg:w="50"/><text x="41.1487%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (63 samples, 0.06%)</title><rect x="40.8987%" y="533" width="0.0555%" height="15" fill="rgb(238,109,14)" fg:x="46447" fg:w="63"/><text x="41.1487%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (63 samples, 0.06%)</title><rect x="40.8987%" y="517" width="0.0555%" height="15" fill="rgb(233,206,34)" fg:x="46447" fg:w="63"/><text x="41.1487%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (63 samples, 0.06%)</title><rect x="40.8987%" y="501" width="0.0555%" height="15" fill="rgb(220,167,47)" fg:x="46447" fg:w="63"/><text x="41.1487%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (63 samples, 0.06%)</title><rect x="40.8987%" y="485" width="0.0555%" height="15" fill="rgb(238,105,10)" fg:x="46447" fg:w="63"/><text x="41.1487%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (13 samples, 0.01%)</title><rect x="40.9427%" y="469" width="0.0114%" height="15" fill="rgb(213,227,17)" fg:x="46497" fg:w="13"/><text x="41.1927%" y="479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (13 samples, 0.01%)</title><rect x="40.9427%" y="453" width="0.0114%" height="15" fill="rgb(217,132,38)" fg:x="46497" fg:w="13"/><text x="41.1927%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (49 samples, 0.04%)</title><rect x="41.0167%" y="373" width="0.0431%" height="15" fill="rgb(242,146,4)" fg:x="46581" fg:w="49"/><text x="41.2667%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (49 samples, 0.04%)</title><rect x="41.0167%" y="357" width="0.0431%" height="15" fill="rgb(212,61,9)" fg:x="46581" fg:w="49"/><text x="41.2667%" y="367.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="41.0493%" y="341" width="0.0106%" height="15" fill="rgb(247,126,22)" fg:x="46618" fg:w="12"/><text x="41.2993%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="41.0493%" y="325" width="0.0106%" height="15" fill="rgb(220,196,2)" fg:x="46618" fg:w="12"/><text x="41.2993%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="41.0493%" y="309" width="0.0106%" height="15" fill="rgb(208,46,4)" fg:x="46618" fg:w="12"/><text x="41.2993%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="41.0493%" y="293" width="0.0106%" height="15" fill="rgb(252,104,46)" fg:x="46618" fg:w="12"/><text x="41.2993%" y="303.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (43 samples, 0.04%)</title><rect x="41.1400%" y="229" width="0.0379%" height="15" fill="rgb(237,152,48)" fg:x="46721" fg:w="43"/><text x="41.3900%" y="239.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (42 samples, 0.04%)</title><rect x="41.1408%" y="213" width="0.0370%" height="15" fill="rgb(221,59,37)" fg:x="46722" fg:w="42"/><text x="41.3908%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (116 samples, 0.10%)</title><rect x="41.0818%" y="277" width="0.1021%" height="15" fill="rgb(209,202,51)" fg:x="46655" fg:w="116"/><text x="41.3318%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (116 samples, 0.10%)</title><rect x="41.0818%" y="261" width="0.1021%" height="15" fill="rgb(228,81,30)" fg:x="46655" fg:w="116"/><text x="41.3318%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (102 samples, 0.09%)</title><rect x="41.0942%" y="245" width="0.0898%" height="15" fill="rgb(227,42,39)" fg:x="46669" fg:w="102"/><text x="41.3442%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (169 samples, 0.15%)</title><rect x="41.0713%" y="309" width="0.1488%" height="15" fill="rgb(221,26,2)" fg:x="46643" fg:w="169"/><text x="41.3213%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (169 samples, 0.15%)</title><rect x="41.0713%" y="293" width="0.1488%" height="15" fill="rgb(254,61,31)" fg:x="46643" fg:w="169"/><text x="41.3213%" y="303.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (41 samples, 0.04%)</title><rect x="41.1840%" y="277" width="0.0361%" height="15" fill="rgb(222,173,38)" fg:x="46771" fg:w="41"/><text x="41.4340%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (174 samples, 0.15%)</title><rect x="41.0713%" y="341" width="0.1532%" height="15" fill="rgb(218,50,12)" fg:x="46643" fg:w="174"/><text x="41.3213%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (174 samples, 0.15%)</title><rect x="41.0713%" y="325" width="0.1532%" height="15" fill="rgb(223,88,40)" fg:x="46643" fg:w="174"/><text x="41.3213%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (185 samples, 0.16%)</title><rect x="41.0686%" y="357" width="0.1629%" height="15" fill="rgb(237,54,19)" fg:x="46640" fg:w="185"/><text x="41.3186%" y="367.50"></text></g><g><title>rust_dealloc (209 samples, 0.18%)</title><rect x="41.0598%" y="373" width="0.1840%" height="15" fill="rgb(251,129,25)" fg:x="46630" fg:w="209"/><text x="41.3098%" y="383.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="41.2315%" y="357" width="0.0123%" height="15" fill="rgb(238,97,19)" fg:x="46825" fg:w="14"/><text x="41.4815%" y="367.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (29 samples, 0.03%)</title><rect x="41.2509%" y="357" width="0.0255%" height="15" fill="rgb(240,169,18)" fg:x="46847" fg:w="29"/><text x="41.5009%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (344 samples, 0.30%)</title><rect x="40.9762%" y="437" width="0.3029%" height="15" fill="rgb(230,187,49)" fg:x="46535" fg:w="344"/><text x="41.2262%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (337 samples, 0.30%)</title><rect x="40.9823%" y="421" width="0.2967%" height="15" fill="rgb(209,44,26)" fg:x="46542" fg:w="337"/><text x="41.2323%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (325 samples, 0.29%)</title><rect x="40.9929%" y="405" width="0.2862%" height="15" fill="rgb(244,0,6)" fg:x="46554" fg:w="325"/><text x="41.2429%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (325 samples, 0.29%)</title><rect x="40.9929%" y="389" width="0.2862%" height="15" fill="rgb(248,18,21)" fg:x="46554" fg:w="325"/><text x="41.2429%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (40 samples, 0.04%)</title><rect x="41.2439%" y="373" width="0.0352%" height="15" fill="rgb(245,180,19)" fg:x="46839" fg:w="40"/><text x="41.4939%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (370 samples, 0.33%)</title><rect x="40.9638%" y="501" width="0.3258%" height="15" fill="rgb(252,118,36)" fg:x="46521" fg:w="370"/><text x="41.2138%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (361 samples, 0.32%)</title><rect x="40.9718%" y="485" width="0.3179%" height="15" fill="rgb(210,224,19)" fg:x="46530" fg:w="361"/><text x="41.2218%" y="495.50"></text></g><g><title>core::mem::drop (356 samples, 0.31%)</title><rect x="40.9762%" y="469" width="0.3135%" height="15" fill="rgb(218,30,24)" fg:x="46535" fg:w="356"/><text x="41.2262%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (356 samples, 0.31%)</title><rect x="40.9762%" y="453" width="0.3135%" height="15" fill="rgb(219,75,50)" fg:x="46535" fg:w="356"/><text x="41.2262%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="41.2791%" y="437" width="0.0106%" height="15" fill="rgb(234,72,50)" fg:x="46879" fg:w="12"/><text x="41.5291%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="41.2791%" y="421" width="0.0106%" height="15" fill="rgb(219,100,48)" fg:x="46879" fg:w="12"/><text x="41.5291%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="41.2791%" y="405" width="0.0106%" height="15" fill="rgb(253,5,41)" fg:x="46879" fg:w="12"/><text x="41.5291%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="41.2791%" y="389" width="0.0106%" height="15" fill="rgb(247,181,11)" fg:x="46879" fg:w="12"/><text x="41.5291%" y="399.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="41.2791%" y="373" width="0.0106%" height="15" fill="rgb(222,223,25)" fg:x="46879" fg:w="12"/><text x="41.5291%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="41.2791%" y="357" width="0.0106%" height="15" fill="rgb(214,198,28)" fg:x="46879" fg:w="12"/><text x="41.5291%" y="367.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="41.3293%" y="357" width="0.0114%" height="15" fill="rgb(230,46,43)" fg:x="46936" fg:w="13"/><text x="41.5793%" y="367.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="41.3293%" y="341" width="0.0114%" height="15" fill="rgb(233,65,53)" fg:x="46936" fg:w="13"/><text x="41.5793%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (34 samples, 0.03%)</title><rect x="41.3178%" y="405" width="0.0299%" height="15" fill="rgb(221,121,27)" fg:x="46923" fg:w="34"/><text x="41.5678%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (34 samples, 0.03%)</title><rect x="41.3178%" y="389" width="0.0299%" height="15" fill="rgb(247,70,47)" fg:x="46923" fg:w="34"/><text x="41.5678%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (34 samples, 0.03%)</title><rect x="41.3178%" y="373" width="0.0299%" height="15" fill="rgb(228,85,35)" fg:x="46923" fg:w="34"/><text x="41.5678%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (54 samples, 0.05%)</title><rect x="41.3081%" y="437" width="0.0475%" height="15" fill="rgb(209,50,18)" fg:x="46912" fg:w="54"/><text x="41.5581%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (54 samples, 0.05%)</title><rect x="41.3081%" y="421" width="0.0475%" height="15" fill="rgb(250,19,35)" fg:x="46912" fg:w="54"/><text x="41.5581%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (62 samples, 0.05%)</title><rect x="41.3081%" y="469" width="0.0546%" height="15" fill="rgb(253,107,29)" fg:x="46912" fg:w="62"/><text x="41.5581%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (62 samples, 0.05%)</title><rect x="41.3081%" y="453" width="0.0546%" height="15" fill="rgb(252,179,29)" fg:x="46912" fg:w="62"/><text x="41.5581%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (465 samples, 0.41%)</title><rect x="40.9542%" y="533" width="0.4095%" height="15" fill="rgb(238,194,6)" fg:x="46510" fg:w="465"/><text x="41.2042%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (465 samples, 0.41%)</title><rect x="40.9542%" y="517" width="0.4095%" height="15" fill="rgb(238,164,29)" fg:x="46510" fg:w="465"/><text x="41.2042%" y="527.50"></text></g><g><title>rust_dealloc (84 samples, 0.07%)</title><rect x="41.2896%" y="501" width="0.0740%" height="15" fill="rgb(224,25,9)" fg:x="46891" fg:w="84"/><text x="41.5396%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (75 samples, 0.07%)</title><rect x="41.2976%" y="485" width="0.0660%" height="15" fill="rgb(244,153,23)" fg:x="46900" fg:w="75"/><text x="41.5476%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="41.3803%" y="341" width="0.0141%" height="15" fill="rgb(212,203,14)" fg:x="46994" fg:w="16"/><text x="41.6303%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="41.3803%" y="325" width="0.0141%" height="15" fill="rgb(220,164,20)" fg:x="46994" fg:w="16"/><text x="41.6303%" y="335.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="41.3803%" y="309" width="0.0141%" height="15" fill="rgb(222,203,48)" fg:x="46994" fg:w="16"/><text x="41.6303%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="41.3803%" y="293" width="0.0141%" height="15" fill="rgb(215,159,22)" fg:x="46994" fg:w="16"/><text x="41.6303%" y="303.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (31 samples, 0.03%)</title><rect x="41.3795%" y="437" width="0.0273%" height="15" fill="rgb(216,183,47)" fg:x="46993" fg:w="31"/><text x="41.6295%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (31 samples, 0.03%)</title><rect x="41.3795%" y="421" width="0.0273%" height="15" fill="rgb(229,195,25)" fg:x="46993" fg:w="31"/><text x="41.6295%" y="431.50"></text></g><g><title>core::mem::drop (30 samples, 0.03%)</title><rect x="41.3803%" y="405" width="0.0264%" height="15" fill="rgb(224,132,51)" fg:x="46994" fg:w="30"/><text x="41.6303%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (30 samples, 0.03%)</title><rect x="41.3803%" y="389" width="0.0264%" height="15" fill="rgb(240,63,7)" fg:x="46994" fg:w="30"/><text x="41.6303%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (30 samples, 0.03%)</title><rect x="41.3803%" y="373" width="0.0264%" height="15" fill="rgb(249,182,41)" fg:x="46994" fg:w="30"/><text x="41.6303%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="41.3803%" y="357" width="0.0264%" height="15" fill="rgb(243,47,26)" fg:x="46994" fg:w="30"/><text x="41.6303%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="41.3944%" y="341" width="0.0123%" height="15" fill="rgb(233,48,2)" fg:x="47010" fg:w="14"/><text x="41.6444%" y="351.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="41.4173%" y="421" width="0.0114%" height="15" fill="rgb(244,165,34)" fg:x="47036" fg:w="13"/><text x="41.6673%" y="431.50"></text></g><g><title>rust_dealloc (18 samples, 0.02%)</title><rect x="41.4517%" y="341" width="0.0158%" height="15" fill="rgb(207,89,7)" fg:x="47075" fg:w="18"/><text x="41.7017%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (22 samples, 0.02%)</title><rect x="41.5327%" y="309" width="0.0194%" height="15" fill="rgb(244,117,36)" fg:x="47167" fg:w="22"/><text x="41.7827%" y="319.50"></text></g><g><title> (22 samples, 0.02%)</title><rect x="41.5327%" y="293" width="0.0194%" height="15" fill="rgb(226,144,34)" fg:x="47167" fg:w="22"/><text x="41.7827%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (122 samples, 0.11%)</title><rect x="41.4754%" y="341" width="0.1074%" height="15" fill="rgb(213,23,19)" fg:x="47102" fg:w="122"/><text x="41.7254%" y="351.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (90 samples, 0.08%)</title><rect x="41.5036%" y="325" width="0.0792%" height="15" fill="rgb(217,75,12)" fg:x="47134" fg:w="90"/><text x="41.7536%" y="335.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (25 samples, 0.02%)</title><rect x="41.5609%" y="309" width="0.0220%" height="15" fill="rgb(224,159,17)" fg:x="47199" fg:w="25"/><text x="41.8109%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (163 samples, 0.14%)</title><rect x="41.4437%" y="373" width="0.1435%" height="15" fill="rgb(217,118,1)" fg:x="47066" fg:w="163"/><text x="41.6937%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (163 samples, 0.14%)</title><rect x="41.4437%" y="357" width="0.1435%" height="15" fill="rgb(232,180,48)" fg:x="47066" fg:w="163"/><text x="41.6937%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (169 samples, 0.15%)</title><rect x="41.4437%" y="405" width="0.1488%" height="15" fill="rgb(230,27,33)" fg:x="47066" fg:w="169"/><text x="41.6937%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (169 samples, 0.15%)</title><rect x="41.4437%" y="389" width="0.1488%" height="15" fill="rgb(205,31,21)" fg:x="47066" fg:w="169"/><text x="41.6937%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (192 samples, 0.17%)</title><rect x="41.4288%" y="421" width="0.1691%" height="15" fill="rgb(253,59,4)" fg:x="47049" fg:w="192"/><text x="41.6788%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (261 samples, 0.23%)</title><rect x="41.3786%" y="485" width="0.2298%" height="15" fill="rgb(224,201,9)" fg:x="46992" fg:w="261"/><text x="41.6286%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (261 samples, 0.23%)</title><rect x="41.3786%" y="469" width="0.2298%" height="15" fill="rgb(229,206,30)" fg:x="46992" fg:w="261"/><text x="41.6286%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (261 samples, 0.23%)</title><rect x="41.3786%" y="453" width="0.2298%" height="15" fill="rgb(212,67,47)" fg:x="46992" fg:w="261"/><text x="41.6286%" y="463.50"></text></g><g><title>rust_dealloc (229 samples, 0.20%)</title><rect x="41.4068%" y="437" width="0.2016%" height="15" fill="rgb(211,96,50)" fg:x="47024" fg:w="229"/><text x="41.6568%" y="447.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="41.5978%" y="421" width="0.0106%" height="15" fill="rgb(252,114,18)" fg:x="47241" fg:w="12"/><text x="41.8478%" y="431.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (17 samples, 0.01%)</title><rect x="42.1614%" y="309" width="0.0150%" height="15" fill="rgb(223,58,37)" fg:x="47881" fg:w="17"/><text x="42.4114%" y="319.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (17 samples, 0.01%)</title><rect x="42.1614%" y="293" width="0.0150%" height="15" fill="rgb(237,70,4)" fg:x="47881" fg:w="17"/><text x="42.4114%" y="303.50"></text></g><g><title>core::mem::drop (15 samples, 0.01%)</title><rect x="42.1631%" y="277" width="0.0132%" height="15" fill="rgb(244,85,46)" fg:x="47883" fg:w="15"/><text x="42.4131%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="42.1631%" y="261" width="0.0132%" height="15" fill="rgb(223,39,52)" fg:x="47883" fg:w="15"/><text x="42.4131%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="42.1631%" y="245" width="0.0132%" height="15" fill="rgb(218,200,14)" fg:x="47883" fg:w="15"/><text x="42.4131%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="42.1631%" y="229" width="0.0132%" height="15" fill="rgb(208,171,16)" fg:x="47883" fg:w="15"/><text x="42.4131%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="42.1631%" y="213" width="0.0132%" height="15" fill="rgb(234,200,18)" fg:x="47883" fg:w="15"/><text x="42.4131%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="42.1631%" y="197" width="0.0132%" height="15" fill="rgb(228,45,11)" fg:x="47883" fg:w="15"/><text x="42.4131%" y="207.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="42.1631%" y="181" width="0.0132%" height="15" fill="rgb(237,182,11)" fg:x="47883" fg:w="15"/><text x="42.4131%" y="191.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="42.1631%" y="165" width="0.0132%" height="15" fill="rgb(241,175,49)" fg:x="47883" fg:w="15"/><text x="42.4131%" y="175.50"></text></g><g><title>rust_dealloc (29 samples, 0.03%)</title><rect x="42.1940%" y="213" width="0.0255%" height="15" fill="rgb(247,38,35)" fg:x="47918" fg:w="29"/><text x="42.4440%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (28 samples, 0.02%)</title><rect x="42.2961%" y="181" width="0.0247%" height="15" fill="rgb(228,39,49)" fg:x="48034" fg:w="28"/><text x="42.5461%" y="191.50"></text></g><g><title> (28 samples, 0.02%)</title><rect x="42.2961%" y="165" width="0.0247%" height="15" fill="rgb(226,101,26)" fg:x="48034" fg:w="28"/><text x="42.5461%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (120 samples, 0.11%)</title><rect x="42.2301%" y="213" width="0.1057%" height="15" fill="rgb(206,141,19)" fg:x="47959" fg:w="120"/><text x="42.4801%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (109 samples, 0.10%)</title><rect x="42.2398%" y="197" width="0.0960%" height="15" fill="rgb(211,200,13)" fg:x="47970" fg:w="109"/><text x="42.4898%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (13 samples, 0.01%)</title><rect x="42.3243%" y="181" width="0.0114%" height="15" fill="rgb(241,121,6)" fg:x="48066" fg:w="13"/><text x="42.5743%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (173 samples, 0.15%)</title><rect x="42.1931%" y="245" width="0.1523%" height="15" fill="rgb(234,221,29)" fg:x="47917" fg:w="173"/><text x="42.4431%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (173 samples, 0.15%)</title><rect x="42.1931%" y="229" width="0.1523%" height="15" fill="rgb(229,136,5)" fg:x="47917" fg:w="173"/><text x="42.4431%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (176 samples, 0.15%)</title><rect x="42.1931%" y="277" width="0.1550%" height="15" fill="rgb(238,36,11)" fg:x="47917" fg:w="176"/><text x="42.4431%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (176 samples, 0.15%)</title><rect x="42.1931%" y="261" width="0.1550%" height="15" fill="rgb(251,55,41)" fg:x="47917" fg:w="176"/><text x="42.4431%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (203 samples, 0.18%)</title><rect x="42.1852%" y="293" width="0.1788%" height="15" fill="rgb(242,34,40)" fg:x="47908" fg:w="203"/><text x="42.4352%" y="303.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (18 samples, 0.02%)</title><rect x="42.3481%" y="277" width="0.0158%" height="15" fill="rgb(215,42,17)" fg:x="48093" fg:w="18"/><text x="42.5981%" y="287.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (18 samples, 0.02%)</title><rect x="42.3481%" y="261" width="0.0158%" height="15" fill="rgb(207,44,46)" fg:x="48093" fg:w="18"/><text x="42.5981%" y="271.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (18 samples, 0.02%)</title><rect x="42.3481%" y="245" width="0.0158%" height="15" fill="rgb(211,206,28)" fg:x="48093" fg:w="18"/><text x="42.5981%" y="255.50"></text></g><g><title>snmalloc::bits::align_down (18 samples, 0.02%)</title><rect x="42.3481%" y="229" width="0.0158%" height="15" fill="rgb(237,167,16)" fg:x="48093" fg:w="18"/><text x="42.5981%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (838 samples, 0.74%)</title><rect x="41.6357%" y="389" width="0.7379%" height="15" fill="rgb(233,66,6)" fg:x="47284" fg:w="838"/><text x="41.8857%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (835 samples, 0.74%)</title><rect x="41.6383%" y="373" width="0.7353%" height="15" fill="rgb(246,123,29)" fg:x="47287" fg:w="835"/><text x="41.8883%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (816 samples, 0.72%)</title><rect x="41.6551%" y="357" width="0.7185%" height="15" fill="rgb(209,62,40)" fg:x="47306" fg:w="816"/><text x="41.9051%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (816 samples, 0.72%)</title><rect x="41.6551%" y="341" width="0.7185%" height="15" fill="rgb(218,4,25)" fg:x="47306" fg:w="816"/><text x="41.9051%" y="351.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (816 samples, 0.72%)</title><rect x="41.6551%" y="325" width="0.7185%" height="15" fill="rgb(253,91,49)" fg:x="47306" fg:w="816"/><text x="41.9051%" y="335.50"></text></g><g><title>rust_dealloc (224 samples, 0.20%)</title><rect x="42.1764%" y="309" width="0.1972%" height="15" fill="rgb(228,155,29)" fg:x="47898" fg:w="224"/><text x="42.4264%" y="319.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (889 samples, 0.78%)</title><rect x="41.6093%" y="453" width="0.7828%" height="15" fill="rgb(243,57,37)" fg:x="47254" fg:w="889"/><text x="41.8593%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (887 samples, 0.78%)</title><rect x="41.6110%" y="437" width="0.7810%" height="15" fill="rgb(244,167,17)" fg:x="47256" fg:w="887"/><text x="41.8610%" y="447.50"></text></g><g><title>core::mem::drop (859 samples, 0.76%)</title><rect x="41.6357%" y="421" width="0.7564%" height="15" fill="rgb(207,181,38)" fg:x="47284" fg:w="859"/><text x="41.8857%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (859 samples, 0.76%)</title><rect x="41.6357%" y="405" width="0.7564%" height="15" fill="rgb(211,8,23)" fg:x="47284" fg:w="859"/><text x="41.8857%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (21 samples, 0.02%)</title><rect x="42.3736%" y="389" width="0.0185%" height="15" fill="rgb(235,11,44)" fg:x="48122" fg:w="21"/><text x="42.6236%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="42.3736%" y="373" width="0.0185%" height="15" fill="rgb(248,18,52)" fg:x="48122" fg:w="21"/><text x="42.6236%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.02%)</title><rect x="42.3736%" y="357" width="0.0185%" height="15" fill="rgb(208,4,7)" fg:x="48122" fg:w="21"/><text x="42.6236%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.02%)</title><rect x="42.3736%" y="341" width="0.0185%" height="15" fill="rgb(240,17,39)" fg:x="48122" fg:w="21"/><text x="42.6236%" y="351.50"></text></g><g><title>__rg_dealloc (21 samples, 0.02%)</title><rect x="42.3736%" y="325" width="0.0185%" height="15" fill="rgb(207,170,3)" fg:x="48122" fg:w="21"/><text x="42.6236%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (21 samples, 0.02%)</title><rect x="42.3736%" y="309" width="0.0185%" height="15" fill="rgb(236,100,52)" fg:x="48122" fg:w="21"/><text x="42.6236%" y="319.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (12 samples, 0.01%)</title><rect x="42.4352%" y="325" width="0.0106%" height="15" fill="rgb(246,78,51)" fg:x="48192" fg:w="12"/><text x="42.6852%" y="335.50"></text></g><g><title> (12 samples, 0.01%)</title><rect x="42.4352%" y="309" width="0.0106%" height="15" fill="rgb(211,17,15)" fg:x="48192" fg:w="12"/><text x="42.6852%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (42 samples, 0.04%)</title><rect x="42.4159%" y="357" width="0.0370%" height="15" fill="rgb(209,59,46)" fg:x="48170" fg:w="42"/><text x="42.6659%" y="367.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (34 samples, 0.03%)</title><rect x="42.4229%" y="341" width="0.0299%" height="15" fill="rgb(210,92,25)" fg:x="48178" fg:w="34"/><text x="42.6729%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (58 samples, 0.05%)</title><rect x="42.4088%" y="389" width="0.0511%" height="15" fill="rgb(238,174,52)" fg:x="48162" fg:w="58"/><text x="42.6588%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (58 samples, 0.05%)</title><rect x="42.4088%" y="373" width="0.0511%" height="15" fill="rgb(230,73,7)" fg:x="48162" fg:w="58"/><text x="42.6588%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,255 samples, 1.11%)</title><rect x="41.3689%" y="517" width="1.1051%" height="15" fill="rgb(243,124,40)" fg:x="46981" fg:w="1255"/><text x="41.6189%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,244 samples, 1.10%)</title><rect x="41.3786%" y="501" width="1.0954%" height="15" fill="rgb(244,170,11)" fg:x="46992" fg:w="1244"/><text x="41.6286%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (983 samples, 0.87%)</title><rect x="41.6084%" y="485" width="0.8656%" height="15" fill="rgb(207,114,54)" fg:x="47253" fg:w="983"/><text x="41.8584%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (983 samples, 0.87%)</title><rect x="41.6084%" y="469" width="0.8656%" height="15" fill="rgb(205,42,20)" fg:x="47253" fg:w="983"/><text x="41.8584%" y="479.50"></text></g><g><title>rust_dealloc (93 samples, 0.08%)</title><rect x="42.3921%" y="453" width="0.0819%" height="15" fill="rgb(230,30,28)" fg:x="48143" fg:w="93"/><text x="42.6421%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (83 samples, 0.07%)</title><rect x="42.4009%" y="437" width="0.0731%" height="15" fill="rgb(205,73,54)" fg:x="48153" fg:w="83"/><text x="42.6509%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (74 samples, 0.07%)</title><rect x="42.4088%" y="421" width="0.0652%" height="15" fill="rgb(254,227,23)" fg:x="48162" fg:w="74"/><text x="42.6588%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (74 samples, 0.07%)</title><rect x="42.4088%" y="405" width="0.0652%" height="15" fill="rgb(228,202,34)" fg:x="48162" fg:w="74"/><text x="42.6588%" y="415.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="42.4599%" y="389" width="0.0141%" height="15" fill="rgb(222,225,37)" fg:x="48220" fg:w="16"/><text x="42.7099%" y="399.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="42.4599%" y="373" width="0.0141%" height="15" fill="rgb(221,14,54)" fg:x="48220" fg:w="16"/><text x="42.7099%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (16 samples, 0.01%)</title><rect x="42.4599%" y="357" width="0.0141%" height="15" fill="rgb(254,102,2)" fg:x="48220" fg:w="16"/><text x="42.7099%" y="367.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.01%)</title><rect x="42.4599%" y="341" width="0.0141%" height="15" fill="rgb(232,104,17)" fg:x="48220" fg:w="16"/><text x="42.7099%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (20 samples, 0.02%)</title><rect x="42.4740%" y="517" width="0.0176%" height="15" fill="rgb(250,220,14)" fg:x="48236" fg:w="20"/><text x="42.7240%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (20 samples, 0.02%)</title><rect x="42.4740%" y="501" width="0.0176%" height="15" fill="rgb(241,158,9)" fg:x="48236" fg:w="20"/><text x="42.7240%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (20 samples, 0.02%)</title><rect x="42.4740%" y="485" width="0.0176%" height="15" fill="rgb(246,9,43)" fg:x="48236" fg:w="20"/><text x="42.7240%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (20 samples, 0.02%)</title><rect x="42.4740%" y="469" width="0.0176%" height="15" fill="rgb(206,73,33)" fg:x="48236" fg:w="20"/><text x="42.7240%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (20 samples, 0.02%)</title><rect x="42.4740%" y="453" width="0.0176%" height="15" fill="rgb(222,79,8)" fg:x="48236" fg:w="20"/><text x="42.7240%" y="463.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="42.4793%" y="437" width="0.0123%" height="15" fill="rgb(234,8,54)" fg:x="48242" fg:w="14"/><text x="42.7293%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (14 samples, 0.01%)</title><rect x="42.4793%" y="421" width="0.0123%" height="15" fill="rgb(209,134,38)" fg:x="48242" fg:w="14"/><text x="42.7293%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (14 samples, 0.01%)</title><rect x="42.4793%" y="405" width="0.0123%" height="15" fill="rgb(230,127,29)" fg:x="48242" fg:w="14"/><text x="42.7293%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="42.4793%" y="389" width="0.0123%" height="15" fill="rgb(242,44,41)" fg:x="48242" fg:w="14"/><text x="42.7293%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="42.4793%" y="373" width="0.0123%" height="15" fill="rgb(222,56,43)" fg:x="48242" fg:w="14"/><text x="42.7293%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (12 samples, 0.01%)</title><rect x="42.4916%" y="517" width="0.0106%" height="15" fill="rgb(238,39,47)" fg:x="48256" fg:w="12"/><text x="42.7416%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (12 samples, 0.01%)</title><rect x="42.4916%" y="501" width="0.0106%" height="15" fill="rgb(226,79,43)" fg:x="48256" fg:w="12"/><text x="42.7416%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="42.4916%" y="485" width="0.0106%" height="15" fill="rgb(242,105,53)" fg:x="48256" fg:w="12"/><text x="42.7416%" y="495.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (12 samples, 0.01%)</title><rect x="42.4916%" y="469" width="0.0106%" height="15" fill="rgb(251,132,46)" fg:x="48256" fg:w="12"/><text x="42.7416%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (305 samples, 0.27%)</title><rect x="42.5154%" y="485" width="0.2686%" height="15" fill="rgb(231,77,14)" fg:x="48283" fg:w="305"/><text x="42.7654%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (305 samples, 0.27%)</title><rect x="42.5154%" y="469" width="0.2686%" height="15" fill="rgb(240,135,9)" fg:x="48283" fg:w="305"/><text x="42.7654%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (305 samples, 0.27%)</title><rect x="42.5154%" y="453" width="0.2686%" height="15" fill="rgb(248,109,14)" fg:x="48283" fg:w="305"/><text x="42.7654%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (17 samples, 0.01%)</title><rect x="42.7690%" y="437" width="0.0150%" height="15" fill="rgb(227,146,52)" fg:x="48571" fg:w="17"/><text x="43.0190%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::inner::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value)&gt;&gt; (17 samples, 0.01%)</title><rect x="42.7690%" y="421" width="0.0150%" height="15" fill="rgb(232,54,3)" fg:x="48571" fg:w="17"/><text x="43.0190%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="42.7690%" y="405" width="0.0150%" height="15" fill="rgb(229,201,43)" fg:x="48571" fg:w="17"/><text x="43.0190%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (333 samples, 0.29%)</title><rect x="42.5022%" y="501" width="0.2932%" height="15" fill="rgb(252,161,33)" fg:x="48268" fg:w="333"/><text x="42.7522%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="42.7839%" y="485" width="0.0114%" height="15" fill="rgb(226,146,40)" fg:x="48588" fg:w="13"/><text x="43.0339%" y="495.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="42.7839%" y="469" width="0.0114%" height="15" fill="rgb(219,47,25)" fg:x="48588" fg:w="13"/><text x="43.0339%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="42.7839%" y="453" width="0.0114%" height="15" fill="rgb(250,135,13)" fg:x="48588" fg:w="13"/><text x="43.0339%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="42.7839%" y="437" width="0.0114%" height="15" fill="rgb(219,229,18)" fg:x="48588" fg:w="13"/><text x="43.0339%" y="447.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="42.7839%" y="421" width="0.0114%" height="15" fill="rgb(217,152,27)" fg:x="48588" fg:w="13"/><text x="43.0339%" y="431.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="42.7839%" y="405" width="0.0114%" height="15" fill="rgb(225,71,47)" fg:x="48588" fg:w="13"/><text x="43.0339%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (14 samples, 0.01%)</title><rect x="42.8033%" y="437" width="0.0123%" height="15" fill="rgb(220,139,14)" fg:x="48610" fg:w="14"/><text x="43.0533%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (14 samples, 0.01%)</title><rect x="42.8033%" y="421" width="0.0123%" height="15" fill="rgb(247,54,32)" fg:x="48610" fg:w="14"/><text x="43.0533%" y="431.50"></text></g><g><title>abi_stable::std_types::arc::private::RArc&lt;T&gt;::data (438 samples, 0.39%)</title><rect x="42.8764%" y="341" width="0.3857%" height="15" fill="rgb(252,131,39)" fg:x="48693" fg:w="438"/><text x="43.1264%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.02%)</title><rect x="43.2876%" y="213" width="0.0238%" height="15" fill="rgb(210,108,39)" fg:x="49160" fg:w="27"/><text x="43.5376%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.02%)</title><rect x="43.2876%" y="197" width="0.0238%" height="15" fill="rgb(205,23,29)" fg:x="49160" fg:w="27"/><text x="43.5376%" y="207.50"></text></g><g><title>__rg_dealloc (27 samples, 0.02%)</title><rect x="43.2876%" y="181" width="0.0238%" height="15" fill="rgb(246,139,46)" fg:x="49160" fg:w="27"/><text x="43.5376%" y="191.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (27 samples, 0.02%)</title><rect x="43.2876%" y="165" width="0.0238%" height="15" fill="rgb(250,81,26)" fg:x="49160" fg:w="27"/><text x="43.5376%" y="175.50"></text></g><g><title>core::mem::drop (664 samples, 0.58%)</title><rect x="43.2867%" y="261" width="0.5847%" height="15" fill="rgb(214,104,7)" fg:x="49159" fg:w="664"/><text x="43.5367%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (664 samples, 0.58%)</title><rect x="43.2867%" y="245" width="0.5847%" height="15" fill="rgb(233,189,8)" fg:x="49159" fg:w="664"/><text x="43.5367%" y="255.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (664 samples, 0.58%)</title><rect x="43.2867%" y="229" width="0.5847%" height="15" fill="rgb(228,141,17)" fg:x="49159" fg:w="664"/><text x="43.5367%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (636 samples, 0.56%)</title><rect x="43.3114%" y="213" width="0.5600%" height="15" fill="rgb(247,157,1)" fg:x="49187" fg:w="636"/><text x="43.5614%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_sub (636 samples, 0.56%)</title><rect x="43.3114%" y="197" width="0.5600%" height="15" fill="rgb(249,225,5)" fg:x="49187" fg:w="636"/><text x="43.5614%" y="207.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="43.9269%" y="117" width="0.0123%" height="15" fill="rgb(242,55,13)" fg:x="49886" fg:w="14"/><text x="44.1769%" y="127.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (25 samples, 0.02%)</title><rect x="43.9991%" y="85" width="0.0220%" height="15" fill="rgb(230,49,50)" fg:x="49968" fg:w="25"/><text x="44.2491%" y="95.50"></text></g><g><title> (25 samples, 0.02%)</title><rect x="43.9991%" y="69" width="0.0220%" height="15" fill="rgb(241,111,38)" fg:x="49968" fg:w="25"/><text x="44.2491%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (104 samples, 0.09%)</title><rect x="43.9427%" y="117" width="0.0916%" height="15" fill="rgb(252,155,4)" fg:x="49904" fg:w="104"/><text x="44.1927%" y="127.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (87 samples, 0.08%)</title><rect x="43.9577%" y="101" width="0.0766%" height="15" fill="rgb(212,69,32)" fg:x="49921" fg:w="87"/><text x="44.2077%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (142 samples, 0.13%)</title><rect x="43.9269%" y="149" width="0.1250%" height="15" fill="rgb(243,107,47)" fg:x="49886" fg:w="142"/><text x="44.1769%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (142 samples, 0.13%)</title><rect x="43.9269%" y="133" width="0.1250%" height="15" fill="rgb(247,130,12)" fg:x="49886" fg:w="142"/><text x="44.1769%" y="143.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (20 samples, 0.02%)</title><rect x="44.0343%" y="117" width="0.0176%" height="15" fill="rgb(233,74,16)" fg:x="50008" fg:w="20"/><text x="44.2843%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (151 samples, 0.13%)</title><rect x="43.9269%" y="181" width="0.1330%" height="15" fill="rgb(208,58,18)" fg:x="49886" fg:w="151"/><text x="44.1769%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (151 samples, 0.13%)</title><rect x="43.9269%" y="165" width="0.1330%" height="15" fill="rgb(242,225,1)" fg:x="49886" fg:w="151"/><text x="44.1769%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (175 samples, 0.15%)</title><rect x="43.9234%" y="197" width="0.1541%" height="15" fill="rgb(249,39,40)" fg:x="49882" fg:w="175"/><text x="44.1734%" y="207.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (20 samples, 0.02%)</title><rect x="44.0598%" y="181" width="0.0176%" height="15" fill="rgb(207,72,44)" fg:x="50037" fg:w="20"/><text x="44.3098%" y="191.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (20 samples, 0.02%)</title><rect x="44.0598%" y="165" width="0.0176%" height="15" fill="rgb(215,193,12)" fg:x="50037" fg:w="20"/><text x="44.3098%" y="175.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (20 samples, 0.02%)</title><rect x="44.0598%" y="149" width="0.0176%" height="15" fill="rgb(248,41,39)" fg:x="50037" fg:w="20"/><text x="44.3098%" y="159.50"></text></g><g><title>snmalloc::bits::align_down (20 samples, 0.02%)</title><rect x="44.0598%" y="133" width="0.0176%" height="15" fill="rgb(253,85,4)" fg:x="50037" fg:w="20"/><text x="44.3098%" y="143.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (914 samples, 0.80%)</title><rect x="43.2770%" y="277" width="0.8048%" height="15" fill="rgb(243,70,31)" fg:x="49148" fg:w="914"/><text x="43.5270%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (239 samples, 0.21%)</title><rect x="43.8714%" y="261" width="0.2105%" height="15" fill="rgb(253,195,26)" fg:x="49823" fg:w="239"/><text x="44.1214%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (239 samples, 0.21%)</title><rect x="43.8714%" y="245" width="0.2105%" height="15" fill="rgb(243,42,11)" fg:x="49823" fg:w="239"/><text x="44.1214%" y="255.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (239 samples, 0.21%)</title><rect x="43.8714%" y="229" width="0.2105%" height="15" fill="rgb(239,66,17)" fg:x="49823" fg:w="239"/><text x="44.1214%" y="239.50"></text></g><g><title>rust_dealloc (187 samples, 0.16%)</title><rect x="43.9172%" y="213" width="0.1647%" height="15" fill="rgb(217,132,21)" fg:x="49875" fg:w="187"/><text x="44.1672%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (965 samples, 0.85%)</title><rect x="44.0819%" y="277" width="0.8497%" height="15" fill="rgb(252,202,21)" fg:x="50062" fg:w="965"/><text x="44.3319%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_sub (965 samples, 0.85%)</title><rect x="44.0819%" y="261" width="0.8497%" height="15" fill="rgb(233,98,36)" fg:x="50062" fg:w="965"/><text x="44.3319%" y="271.50"></text></g><g><title>sizeclass_to_size (14 samples, 0.01%)</title><rect x="44.9712%" y="181" width="0.0123%" height="15" fill="rgb(216,153,54)" fg:x="51072" fg:w="14"/><text x="45.2212%" y="191.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (14 samples, 0.01%)</title><rect x="44.9712%" y="165" width="0.0123%" height="15" fill="rgb(250,99,7)" fg:x="51072" fg:w="14"/><text x="45.2212%" y="175.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (22 samples, 0.02%)</title><rect x="45.0135%" y="149" width="0.0194%" height="15" fill="rgb(207,56,50)" fg:x="51120" fg:w="22"/><text x="45.2635%" y="159.50"></text></g><g><title> (22 samples, 0.02%)</title><rect x="45.0135%" y="133" width="0.0194%" height="15" fill="rgb(244,61,34)" fg:x="51120" fg:w="22"/><text x="45.2635%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (63 samples, 0.06%)</title><rect x="44.9835%" y="181" width="0.0555%" height="15" fill="rgb(241,50,38)" fg:x="51086" fg:w="63"/><text x="45.2335%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (51 samples, 0.04%)</title><rect x="44.9941%" y="165" width="0.0449%" height="15" fill="rgb(212,166,30)" fg:x="51098" fg:w="51"/><text x="45.2441%" y="175.50"></text></g><g><title>rust_dealloc (125 samples, 0.11%)</title><rect x="44.9316%" y="277" width="0.1101%" height="15" fill="rgb(249,127,32)" fg:x="51027" fg:w="125"/><text x="45.1816%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (111 samples, 0.10%)</title><rect x="44.9439%" y="261" width="0.0977%" height="15" fill="rgb(209,103,0)" fg:x="51041" fg:w="111"/><text x="45.1939%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (91 samples, 0.08%)</title><rect x="44.9615%" y="245" width="0.0801%" height="15" fill="rgb(238,209,51)" fg:x="51061" fg:w="91"/><text x="45.2115%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (91 samples, 0.08%)</title><rect x="44.9615%" y="229" width="0.0801%" height="15" fill="rgb(237,56,23)" fg:x="51061" fg:w="91"/><text x="45.2115%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (91 samples, 0.08%)</title><rect x="44.9615%" y="213" width="0.0801%" height="15" fill="rgb(215,153,46)" fg:x="51061" fg:w="91"/><text x="45.2115%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (91 samples, 0.08%)</title><rect x="44.9615%" y="197" width="0.0801%" height="15" fill="rgb(224,49,31)" fg:x="51061" fg:w="91"/><text x="45.2115%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,538 samples, 2.23%)</title><rect x="42.8156%" y="405" width="2.2348%" height="15" fill="rgb(250,18,42)" fg:x="48624" fg:w="2538"/><text x="43.0656%" y="415.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (2,532 samples, 2.23%)</title><rect x="42.8209%" y="389" width="2.2295%" height="15" fill="rgb(215,176,39)" fg:x="48630" fg:w="2532"/><text x="43.0709%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (2,515 samples, 2.21%)</title><rect x="42.8359%" y="373" width="2.2146%" height="15" fill="rgb(223,77,29)" fg:x="48647" fg:w="2515"/><text x="43.0859%" y="383.50">c..</text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (2,515 samples, 2.21%)</title><rect x="42.8359%" y="357" width="2.2146%" height="15" fill="rgb(234,94,52)" fg:x="48647" fg:w="2515"/><text x="43.0859%" y="367.50">a..</text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (2,031 samples, 1.79%)</title><rect x="43.2621%" y="341" width="1.7884%" height="15" fill="rgb(220,154,50)" fg:x="49131" fg:w="2031"/><text x="43.5121%" y="351.50">a..</text></g><g><title>core::mem::drop (2,017 samples, 1.78%)</title><rect x="43.2744%" y="325" width="1.7761%" height="15" fill="rgb(212,11,10)" fg:x="49145" fg:w="2017"/><text x="43.5244%" y="335.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (2,017 samples, 1.78%)</title><rect x="43.2744%" y="309" width="1.7761%" height="15" fill="rgb(205,166,19)" fg:x="49145" fg:w="2017"/><text x="43.5244%" y="319.50">c..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,017 samples, 1.78%)</title><rect x="43.2744%" y="293" width="1.7761%" height="15" fill="rgb(244,198,16)" fg:x="49145" fg:w="2017"/><text x="43.5244%" y="303.50">&lt;..</text></g><g><title>abi_stable::std_types::vec::destructor_vec (2,572 samples, 2.26%)</title><rect x="42.7954%" y="469" width="2.2648%" height="15" fill="rgb(219,69,12)" fg:x="48601" fg:w="2572"/><text x="43.0454%" y="479.50">a..</text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (2,570 samples, 2.26%)</title><rect x="42.7971%" y="453" width="2.2630%" height="15" fill="rgb(245,30,7)" fg:x="48603" fg:w="2570"/><text x="43.0471%" y="463.50">a..</text></g><g><title>core::mem::drop (2,549 samples, 2.24%)</title><rect x="42.8156%" y="437" width="2.2445%" height="15" fill="rgb(218,221,48)" fg:x="48624" fg:w="2549"/><text x="43.0656%" y="447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,549 samples, 2.24%)</title><rect x="42.8156%" y="421" width="2.2445%" height="15" fill="rgb(216,66,15)" fg:x="48624" fg:w="2549"/><text x="43.0656%" y="431.50">c..</text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="45.0601%" y="453" width="0.0132%" height="15" fill="rgb(226,122,50)" fg:x="51173" fg:w="15"/><text x="45.3101%" y="463.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="45.0733%" y="437" width="0.0106%" height="15" fill="rgb(239,156,16)" fg:x="51188" fg:w="12"/><text x="45.3233%" y="447.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="45.0733%" y="421" width="0.0106%" height="15" fill="rgb(224,27,38)" fg:x="51188" fg:w="12"/><text x="45.3233%" y="431.50"></text></g><g><title>sizeclass_to_size (15 samples, 0.01%)</title><rect x="45.0839%" y="373" width="0.0132%" height="15" fill="rgb(224,39,27)" fg:x="51200" fg:w="15"/><text x="45.3339%" y="383.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (15 samples, 0.01%)</title><rect x="45.0839%" y="357" width="0.0132%" height="15" fill="rgb(215,92,29)" fg:x="51200" fg:w="15"/><text x="45.3339%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (62 samples, 0.05%)</title><rect x="45.0980%" y="373" width="0.0546%" height="15" fill="rgb(207,159,16)" fg:x="51216" fg:w="62"/><text x="45.3480%" y="383.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (48 samples, 0.04%)</title><rect x="45.1103%" y="357" width="0.0423%" height="15" fill="rgb(238,163,47)" fg:x="51230" fg:w="48"/><text x="45.3603%" y="367.50"></text></g><g><title>snmalloc::Remote::set_info (24 samples, 0.02%)</title><rect x="45.1315%" y="341" width="0.0211%" height="15" fill="rgb(219,91,49)" fg:x="51254" fg:w="24"/><text x="45.3815%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (79 samples, 0.07%)</title><rect x="45.0839%" y="405" width="0.0696%" height="15" fill="rgb(227,167,31)" fg:x="51200" fg:w="79"/><text x="45.3339%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (79 samples, 0.07%)</title><rect x="45.0839%" y="389" width="0.0696%" height="15" fill="rgb(234,80,54)" fg:x="51200" fg:w="79"/><text x="45.3339%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (80 samples, 0.07%)</title><rect x="45.0839%" y="437" width="0.0704%" height="15" fill="rgb(212,114,2)" fg:x="51200" fg:w="80"/><text x="45.3339%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (80 samples, 0.07%)</title><rect x="45.0839%" y="421" width="0.0704%" height="15" fill="rgb(234,50,24)" fg:x="51200" fg:w="80"/><text x="45.3339%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (103 samples, 0.09%)</title><rect x="45.0733%" y="453" width="0.0907%" height="15" fill="rgb(221,68,8)" fg:x="51188" fg:w="103"/><text x="45.3233%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,700 samples, 2.38%)</title><rect x="42.7954%" y="501" width="2.3775%" height="15" fill="rgb(254,180,31)" fg:x="48601" fg:w="2700"/><text x="43.0454%" y="511.50">co..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (2,700 samples, 2.38%)</title><rect x="42.7954%" y="485" width="2.3775%" height="15" fill="rgb(247,130,50)" fg:x="48601" fg:w="2700"/><text x="43.0454%" y="495.50">ab..</text></g><g><title>rust_dealloc (128 samples, 0.11%)</title><rect x="45.0601%" y="469" width="0.1127%" height="15" fill="rgb(211,109,4)" fg:x="51173" fg:w="128"/><text x="45.3101%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (31 samples, 0.03%)</title><rect x="45.1729%" y="485" width="0.0273%" height="15" fill="rgb(238,50,21)" fg:x="51301" fg:w="31"/><text x="45.4229%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::slices::private::RSlice&lt;u8&gt;,abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="45.2054%" y="469" width="0.0203%" height="15" fill="rgb(225,57,45)" fg:x="51338" fg:w="23"/><text x="45.4554%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (85 samples, 0.07%)</title><rect x="45.1729%" y="501" width="0.0748%" height="15" fill="rgb(209,196,50)" fg:x="51301" fg:w="85"/><text x="45.4229%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (54 samples, 0.05%)</title><rect x="45.2001%" y="485" width="0.0475%" height="15" fill="rgb(242,140,13)" fg:x="51332" fg:w="54"/><text x="45.4501%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (25 samples, 0.02%)</title><rect x="45.2257%" y="469" width="0.0220%" height="15" fill="rgb(217,111,7)" fg:x="51361" fg:w="25"/><text x="45.4757%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt;&gt; (25 samples, 0.02%)</title><rect x="45.2257%" y="453" width="0.0220%" height="15" fill="rgb(253,193,51)" fg:x="51361" fg:w="25"/><text x="45.4757%" y="463.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (25 samples, 0.02%)</title><rect x="45.2257%" y="437" width="0.0220%" height="15" fill="rgb(252,70,29)" fg:x="51361" fg:w="25"/><text x="45.4757%" y="447.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (12 samples, 0.01%)</title><rect x="45.2820%" y="373" width="0.0106%" height="15" fill="rgb(232,127,12)" fg:x="51425" fg:w="12"/><text x="45.5320%" y="383.50"></text></g><g><title> (12 samples, 0.01%)</title><rect x="45.2820%" y="357" width="0.0106%" height="15" fill="rgb(211,180,21)" fg:x="51425" fg:w="12"/><text x="45.5320%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (53 samples, 0.05%)</title><rect x="45.2512%" y="437" width="0.0467%" height="15" fill="rgb(229,72,13)" fg:x="51390" fg:w="53"/><text x="45.5012%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (53 samples, 0.05%)</title><rect x="45.2512%" y="421" width="0.0467%" height="15" fill="rgb(240,211,49)" fg:x="51390" fg:w="53"/><text x="45.5012%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (41 samples, 0.04%)</title><rect x="45.2618%" y="405" width="0.0361%" height="15" fill="rgb(219,149,40)" fg:x="51402" fg:w="41"/><text x="45.5118%" y="415.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (26 samples, 0.02%)</title><rect x="45.2750%" y="389" width="0.0229%" height="15" fill="rgb(210,127,46)" fg:x="51417" fg:w="26"/><text x="45.5250%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (66 samples, 0.06%)</title><rect x="45.2512%" y="469" width="0.0581%" height="15" fill="rgb(220,106,7)" fg:x="51390" fg:w="66"/><text x="45.5012%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (66 samples, 0.06%)</title><rect x="45.2512%" y="453" width="0.0581%" height="15" fill="rgb(249,31,22)" fg:x="51390" fg:w="66"/><text x="45.5012%" y="463.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="45.2979%" y="437" width="0.0114%" height="15" fill="rgb(253,1,49)" fg:x="51443" fg:w="13"/><text x="45.5479%" y="447.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="45.2979%" y="421" width="0.0114%" height="15" fill="rgb(227,144,33)" fg:x="51443" fg:w="13"/><text x="45.5479%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="45.2979%" y="405" width="0.0114%" height="15" fill="rgb(249,163,44)" fg:x="51443" fg:w="13"/><text x="45.5479%" y="415.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="45.2979%" y="389" width="0.0114%" height="15" fill="rgb(234,15,39)" fg:x="51443" fg:w="13"/><text x="45.5479%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (77 samples, 0.07%)</title><rect x="45.2503%" y="485" width="0.0678%" height="15" fill="rgb(207,66,16)" fg:x="51389" fg:w="77"/><text x="45.5003%" y="495.50"></text></g><g><title>rust_dealloc (95 samples, 0.08%)</title><rect x="45.2477%" y="501" width="0.0837%" height="15" fill="rgb(233,112,24)" fg:x="51386" fg:w="95"/><text x="45.4977%" y="511.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="45.3181%" y="485" width="0.0132%" height="15" fill="rgb(230,90,22)" fg:x="51466" fg:w="15"/><text x="45.5681%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (4,507 samples, 3.97%)</title><rect x="41.3636%" y="533" width="3.9686%" height="15" fill="rgb(229,61,13)" fg:x="46975" fg:w="4507"/><text x="41.6136%" y="543.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (3,214 samples, 2.83%)</title><rect x="42.5022%" y="517" width="2.8301%" height="15" fill="rgb(225,57,24)" fg:x="48268" fg:w="3214"/><text x="42.7522%" y="527.50">co..</text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (18 samples, 0.02%)</title><rect x="45.4617%" y="485" width="0.0158%" height="15" fill="rgb(208,169,48)" fg:x="51629" fg:w="18"/><text x="45.7117%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (18 samples, 0.02%)</title><rect x="45.4617%" y="469" width="0.0158%" height="15" fill="rgb(244,218,51)" fg:x="51629" fg:w="18"/><text x="45.7117%" y="479.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (22 samples, 0.02%)</title><rect x="45.5171%" y="453" width="0.0194%" height="15" fill="rgb(214,148,10)" fg:x="51692" fg:w="22"/><text x="45.7671%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (22 samples, 0.02%)</title><rect x="45.5171%" y="437" width="0.0194%" height="15" fill="rgb(225,174,27)" fg:x="51692" fg:w="22"/><text x="45.7671%" y="447.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (77 samples, 0.07%)</title><rect x="45.4846%" y="469" width="0.0678%" height="15" fill="rgb(230,96,26)" fg:x="51655" fg:w="77"/><text x="45.7346%" y="479.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::sub_bucket_for (18 samples, 0.02%)</title><rect x="45.5365%" y="453" width="0.0158%" height="15" fill="rgb(232,10,30)" fg:x="51714" fg:w="18"/><text x="45.7865%" y="463.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (78 samples, 0.07%)</title><rect x="45.4846%" y="485" width="0.0687%" height="15" fill="rgb(222,8,50)" fg:x="51655" fg:w="78"/><text x="45.7346%" y="495.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (239 samples, 0.21%)</title><rect x="45.3463%" y="533" width="0.2105%" height="15" fill="rgb(213,81,27)" fg:x="51498" fg:w="239"/><text x="45.5963%" y="543.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (232 samples, 0.20%)</title><rect x="45.3525%" y="517" width="0.2043%" height="15" fill="rgb(245,50,10)" fg:x="51505" fg:w="232"/><text x="45.6025%" y="527.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (232 samples, 0.20%)</title><rect x="45.3525%" y="501" width="0.2043%" height="15" fill="rgb(216,100,18)" fg:x="51505" fg:w="232"/><text x="45.6025%" y="511.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (14 samples, 0.01%)</title><rect x="45.6395%" y="405" width="0.0123%" height="15" fill="rgb(236,147,54)" fg:x="51831" fg:w="14"/><text x="45.8895%" y="415.50"></text></g><g><title> (14 samples, 0.01%)</title><rect x="45.6395%" y="389" width="0.0123%" height="15" fill="rgb(205,143,26)" fg:x="51831" fg:w="14"/><text x="45.8895%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (65 samples, 0.06%)</title><rect x="45.6078%" y="437" width="0.0572%" height="15" fill="rgb(236,26,9)" fg:x="51795" fg:w="65"/><text x="45.8578%" y="447.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (51 samples, 0.04%)</title><rect x="45.6202%" y="421" width="0.0449%" height="15" fill="rgb(221,165,53)" fg:x="51809" fg:w="51"/><text x="45.8702%" y="431.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (15 samples, 0.01%)</title><rect x="45.6519%" y="405" width="0.0132%" height="15" fill="rgb(214,110,17)" fg:x="51845" fg:w="15"/><text x="45.9019%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (94 samples, 0.08%)</title><rect x="45.5849%" y="501" width="0.0828%" height="15" fill="rgb(237,197,12)" fg:x="51769" fg:w="94"/><text x="45.8349%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (94 samples, 0.08%)</title><rect x="45.5849%" y="485" width="0.0828%" height="15" fill="rgb(205,84,17)" fg:x="51769" fg:w="94"/><text x="45.8349%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (94 samples, 0.08%)</title><rect x="45.5849%" y="469" width="0.0828%" height="15" fill="rgb(237,18,45)" fg:x="51769" fg:w="94"/><text x="45.8349%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (94 samples, 0.08%)</title><rect x="45.5849%" y="453" width="0.0828%" height="15" fill="rgb(221,87,14)" fg:x="51769" fg:w="94"/><text x="45.8349%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (114 samples, 0.10%)</title><rect x="45.5682%" y="517" width="0.1004%" height="15" fill="rgb(238,186,15)" fg:x="51750" fg:w="114"/><text x="45.8182%" y="527.50"></text></g><g><title>rust_dealloc (130 samples, 0.11%)</title><rect x="45.5568%" y="533" width="0.1145%" height="15" fill="rgb(208,115,11)" fg:x="51737" fg:w="130"/><text x="45.8068%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (57 samples, 0.05%)</title><rect x="45.7690%" y="469" width="0.0502%" height="15" fill="rgb(254,175,0)" fg:x="51978" fg:w="57"/><text x="46.0190%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::ge (57 samples, 0.05%)</title><rect x="45.7690%" y="453" width="0.0502%" height="15" fill="rgb(227,24,42)" fg:x="51978" fg:w="57"/><text x="46.0190%" y="463.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (55 samples, 0.05%)</title><rect x="45.7707%" y="437" width="0.0484%" height="15" fill="rgb(223,211,37)" fg:x="51980" fg:w="55"/><text x="46.0207%" y="447.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (55 samples, 0.05%)</title><rect x="45.7707%" y="421" width="0.0484%" height="15" fill="rgb(235,49,27)" fg:x="51980" fg:w="55"/><text x="46.0207%" y="431.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (55 samples, 0.05%)</title><rect x="45.7707%" y="405" width="0.0484%" height="15" fill="rgb(254,97,51)" fg:x="51980" fg:w="55"/><text x="46.0207%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (31 samples, 0.03%)</title><rect x="45.7919%" y="389" width="0.0273%" height="15" fill="rgb(249,51,40)" fg:x="52004" fg:w="31"/><text x="46.0419%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (143 samples, 0.13%)</title><rect x="45.7073%" y="501" width="0.1259%" height="15" fill="rgb(210,128,45)" fg:x="51908" fg:w="143"/><text x="45.9573%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (143 samples, 0.13%)</title><rect x="45.7073%" y="485" width="0.1259%" height="15" fill="rgb(224,137,50)" fg:x="51908" fg:w="143"/><text x="45.9573%" y="495.50"></text></g><g><title>core::time::Duration::new (16 samples, 0.01%)</title><rect x="45.8192%" y="469" width="0.0141%" height="15" fill="rgb(242,15,9)" fg:x="52035" fg:w="16"/><text x="46.0692%" y="479.50"></text></g><g><title>std::time::SystemTime::duration_since (155 samples, 0.14%)</title><rect x="45.7073%" y="517" width="0.1365%" height="15" fill="rgb(233,187,41)" fg:x="51908" fg:w="155"/><text x="45.9573%" y="527.50"></text></g><g><title>tremor_common::time::nanotime (12 samples, 0.01%)</title><rect x="45.8333%" y="501" width="0.0106%" height="15" fill="rgb(227,2,29)" fg:x="52051" fg:w="12"/><text x="46.0833%" y="511.50"></text></g><g><title>tremor_common::time::nanotime (903 samples, 0.80%)</title><rect x="45.6721%" y="533" width="0.7951%" height="15" fill="rgb(222,70,3)" fg:x="51868" fg:w="903"/><text x="45.9221%" y="543.50"></text></g><g><title>std::time::SystemTime::now (708 samples, 0.62%)</title><rect x="45.8438%" y="517" width="0.6234%" height="15" fill="rgb(213,11,42)" fg:x="52063" fg:w="708"/><text x="46.0938%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (708 samples, 0.62%)</title><rect x="45.8438%" y="501" width="0.6234%" height="15" fill="rgb(225,150,9)" fg:x="52063" fg:w="708"/><text x="46.0938%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::now (708 samples, 0.62%)</title><rect x="45.8438%" y="485" width="0.6234%" height="15" fill="rgb(230,162,45)" fg:x="52063" fg:w="708"/><text x="46.0938%" y="495.50"></text></g><g><title>__clock_gettime_2 (590 samples, 0.52%)</title><rect x="45.9477%" y="469" width="0.5195%" height="15" fill="rgb(222,14,52)" fg:x="52181" fg:w="590"/><text x="46.1977%" y="479.50"></text></g><g><title>__vdso_clock_gettime (573 samples, 0.50%)</title><rect x="45.9627%" y="453" width="0.5046%" height="15" fill="rgb(254,198,14)" fg:x="52198" fg:w="573"/><text x="46.2127%" y="463.50"></text></g><g><title>[[vdso]] (375 samples, 0.33%)</title><rect x="46.1370%" y="437" width="0.3302%" height="15" fill="rgb(220,217,30)" fg:x="52396" fg:w="375"/><text x="46.3870%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (214 samples, 0.19%)</title><rect x="46.4743%" y="517" width="0.1884%" height="15" fill="rgb(215,146,41)" fg:x="52779" fg:w="214"/><text x="46.7243%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (7,099 samples, 6.25%)</title><rect x="40.4311%" y="789" width="6.2510%" height="15" fill="rgb(217,27,36)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="799.50">tremor_r..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,099 samples, 6.25%)</title><rect x="40.4311%" y="773" width="6.2510%" height="15" fill="rgb(219,218,39)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="783.50">&lt;async_f..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,099 samples, 6.25%)</title><rect x="40.4311%" y="757" width="6.2510%" height="15" fill="rgb(219,4,42)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="767.50">&lt;async_f..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (7,099 samples, 6.25%)</title><rect x="40.4311%" y="741" width="6.2510%" height="15" fill="rgb(249,119,36)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="751.50">&lt;core::t..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (7,099 samples, 6.25%)</title><rect x="40.4311%" y="725" width="6.2510%" height="15" fill="rgb(209,23,33)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="735.50">&lt;async_f..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (7,099 samples, 6.25%)</title><rect x="40.4311%" y="709" width="6.2510%" height="15" fill="rgb(211,10,0)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="719.50">async_ff..</text></g><g><title>std::panic::catch_unwind (7,099 samples, 6.25%)</title><rect x="40.4311%" y="693" width="6.2510%" height="15" fill="rgb(208,99,37)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="703.50">std::pan..</text></g><g><title>std::panicking::try (7,099 samples, 6.25%)</title><rect x="40.4311%" y="677" width="6.2510%" height="15" fill="rgb(213,132,31)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="687.50">std::pan..</text></g><g><title>std::panicking::try::do_call (7,099 samples, 6.25%)</title><rect x="40.4311%" y="661" width="6.2510%" height="15" fill="rgb(243,129,40)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="671.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,099 samples, 6.25%)</title><rect x="40.4311%" y="645" width="6.2510%" height="15" fill="rgb(210,66,33)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="655.50">&lt;core::p..</text></g><g><title>core::ops::function::FnOnce::call_once (7,099 samples, 6.25%)</title><rect x="40.4311%" y="629" width="6.2510%" height="15" fill="rgb(209,189,4)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="639.50">core::op..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (7,099 samples, 6.25%)</title><rect x="40.4311%" y="613" width="6.2510%" height="15" fill="rgb(214,107,37)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="623.50">async_ff..</text></g><g><title>async_ffi::FfiContext::with_context (7,099 samples, 6.25%)</title><rect x="40.4311%" y="597" width="6.2510%" height="15" fill="rgb(245,88,54)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="607.50">async_ff..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (7,099 samples, 6.25%)</title><rect x="40.4311%" y="581" width="6.2510%" height="15" fill="rgb(205,146,20)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="591.50">async_ff..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,099 samples, 6.25%)</title><rect x="40.4311%" y="565" width="6.2510%" height="15" fill="rgb(220,161,25)" fg:x="45916" fg:w="7099"/><text x="40.6811%" y="575.50">&lt;core::f..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (7,034 samples, 6.19%)</title><rect x="40.4884%" y="549" width="6.1938%" height="15" fill="rgb(215,152,15)" fg:x="45981" fg:w="7034"/><text x="40.7384%" y="559.50">&lt;tremor_..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (244 samples, 0.21%)</title><rect x="46.4673%" y="533" width="0.2149%" height="15" fill="rgb(233,192,44)" fg:x="52771" fg:w="244"/><text x="46.7173%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::_::&lt;impl tremor_runtime::connectors::sink::EventSerializerOpaque_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::serialize (22 samples, 0.02%)</title><rect x="46.6627%" y="517" width="0.0194%" height="15" fill="rgb(240,170,46)" fg:x="52993" fg:w="22"/><text x="46.9127%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (37 samples, 0.03%)</title><rect x="46.8793%" y="757" width="0.0326%" height="15" fill="rgb(207,104,33)" fg:x="53239" fg:w="37"/><text x="47.1293%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (37 samples, 0.03%)</title><rect x="46.8793%" y="741" width="0.0326%" height="15" fill="rgb(219,21,39)" fg:x="53239" fg:w="37"/><text x="47.1293%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (37 samples, 0.03%)</title><rect x="46.8793%" y="725" width="0.0326%" height="15" fill="rgb(214,133,29)" fg:x="53239" fg:w="37"/><text x="47.1293%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (13 samples, 0.01%)</title><rect x="46.9005%" y="709" width="0.0114%" height="15" fill="rgb(226,93,6)" fg:x="53263" fg:w="13"/><text x="47.1505%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (13 samples, 0.01%)</title><rect x="46.9005%" y="693" width="0.0114%" height="15" fill="rgb(252,222,34)" fg:x="53263" fg:w="13"/><text x="47.1505%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="46.9287%" y="677" width="0.0211%" height="15" fill="rgb(252,92,48)" fg:x="53295" fg:w="24"/><text x="47.1787%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (24 samples, 0.02%)</title><rect x="46.9287%" y="661" width="0.0211%" height="15" fill="rgb(245,223,24)" fg:x="53295" fg:w="24"/><text x="47.1787%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (24 samples, 0.02%)</title><rect x="46.9287%" y="645" width="0.0211%" height="15" fill="rgb(205,176,3)" fg:x="53295" fg:w="24"/><text x="47.1787%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (56 samples, 0.05%)</title><rect x="46.9216%" y="693" width="0.0493%" height="15" fill="rgb(235,151,15)" fg:x="53287" fg:w="56"/><text x="47.1716%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="46.9498%" y="677" width="0.0211%" height="15" fill="rgb(237,209,11)" fg:x="53319" fg:w="24"/><text x="47.1998%" y="687.50"></text></g><g><title>alloc::alloc::box_free (24 samples, 0.02%)</title><rect x="46.9498%" y="661" width="0.0211%" height="15" fill="rgb(243,227,24)" fg:x="53319" fg:w="24"/><text x="47.1998%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.02%)</title><rect x="46.9498%" y="645" width="0.0211%" height="15" fill="rgb(239,193,16)" fg:x="53319" fg:w="24"/><text x="47.1998%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.02%)</title><rect x="46.9498%" y="629" width="0.0211%" height="15" fill="rgb(231,27,9)" fg:x="53319" fg:w="24"/><text x="47.1998%" y="639.50"></text></g><g><title>__rg_dealloc (24 samples, 0.02%)</title><rect x="46.9498%" y="613" width="0.0211%" height="15" fill="rgb(219,169,10)" fg:x="53319" fg:w="24"/><text x="47.1998%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (24 samples, 0.02%)</title><rect x="46.9498%" y="597" width="0.0211%" height="15" fill="rgb(244,229,43)" fg:x="53319" fg:w="24"/><text x="47.1998%" y="607.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (32 samples, 0.03%)</title><rect x="47.0167%" y="549" width="0.0282%" height="15" fill="rgb(254,38,20)" fg:x="53395" fg:w="32"/><text x="47.2667%" y="559.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (32 samples, 0.03%)</title><rect x="47.0167%" y="533" width="0.0282%" height="15" fill="rgb(250,47,30)" fg:x="53395" fg:w="32"/><text x="47.2667%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (56 samples, 0.05%)</title><rect x="47.0061%" y="597" width="0.0493%" height="15" fill="rgb(224,124,36)" fg:x="53383" fg:w="56"/><text x="47.2561%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (56 samples, 0.05%)</title><rect x="47.0061%" y="581" width="0.0493%" height="15" fill="rgb(246,68,51)" fg:x="53383" fg:w="56"/><text x="47.2561%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (56 samples, 0.05%)</title><rect x="47.0061%" y="565" width="0.0493%" height="15" fill="rgb(253,43,49)" fg:x="53383" fg:w="56"/><text x="47.2561%" y="575.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="47.0449%" y="549" width="0.0106%" height="15" fill="rgb(219,54,36)" fg:x="53427" fg:w="12"/><text x="47.2949%" y="559.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="47.0449%" y="533" width="0.0106%" height="15" fill="rgb(227,133,34)" fg:x="53427" fg:w="12"/><text x="47.2949%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (85 samples, 0.07%)</title><rect x="46.9894%" y="629" width="0.0748%" height="15" fill="rgb(247,227,15)" fg:x="53364" fg:w="85"/><text x="47.2394%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (85 samples, 0.07%)</title><rect x="46.9894%" y="613" width="0.0748%" height="15" fill="rgb(229,96,14)" fg:x="53364" fg:w="85"/><text x="47.2394%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (87 samples, 0.08%)</title><rect x="46.9894%" y="661" width="0.0766%" height="15" fill="rgb(220,79,17)" fg:x="53364" fg:w="87"/><text x="47.2394%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (87 samples, 0.08%)</title><rect x="46.9894%" y="645" width="0.0766%" height="15" fill="rgb(205,131,53)" fg:x="53364" fg:w="87"/><text x="47.2394%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (101 samples, 0.09%)</title><rect x="46.9788%" y="677" width="0.0889%" height="15" fill="rgb(209,50,29)" fg:x="53352" fg:w="101"/><text x="47.2288%" y="687.50"></text></g><g><title>rust_dealloc (112 samples, 0.10%)</title><rect x="46.9709%" y="693" width="0.0986%" height="15" fill="rgb(245,86,46)" fg:x="53343" fg:w="112"/><text x="47.2209%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (7,551 samples, 6.65%)</title><rect x="40.4223%" y="821" width="6.6490%" height="15" fill="rgb(235,66,46)" fg:x="45906" fg:w="7551"/><text x="40.6723%" y="831.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,551 samples, 6.65%)</title><rect x="40.4223%" y="805" width="6.6490%" height="15" fill="rgb(232,148,31)" fg:x="45906" fg:w="7551"/><text x="40.6723%" y="815.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (442 samples, 0.39%)</title><rect x="46.6821%" y="789" width="0.3892%" height="15" fill="rgb(217,149,8)" fg:x="53015" fg:w="442"/><text x="46.9321%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (218 samples, 0.19%)</title><rect x="46.8793%" y="773" width="0.1920%" height="15" fill="rgb(209,183,11)" fg:x="53239" fg:w="218"/><text x="47.1293%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (181 samples, 0.16%)</title><rect x="46.9119%" y="757" width="0.1594%" height="15" fill="rgb(208,55,20)" fg:x="53276" fg:w="181"/><text x="47.1619%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (181 samples, 0.16%)</title><rect x="46.9119%" y="741" width="0.1594%" height="15" fill="rgb(218,39,14)" fg:x="53276" fg:w="181"/><text x="47.1619%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt;&gt; (181 samples, 0.16%)</title><rect x="46.9119%" y="725" width="0.1594%" height="15" fill="rgb(216,169,33)" fg:x="53276" fg:w="181"/><text x="47.1619%" y="735.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (181 samples, 0.16%)</title><rect x="46.9119%" y="709" width="0.1594%" height="15" fill="rgb(233,80,24)" fg:x="53276" fg:w="181"/><text x="47.1619%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="47.9774%" y="533" width="0.0123%" height="15" fill="rgb(213,179,31)" fg:x="54486" fg:w="14"/><text x="48.2274%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="48.5709%" y="485" width="0.0106%" height="15" fill="rgb(209,19,5)" fg:x="55160" fg:w="12"/><text x="48.8209%" y="495.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (12 samples, 0.01%)</title><rect x="48.5709%" y="469" width="0.0106%" height="15" fill="rgb(219,18,35)" fg:x="55160" fg:w="12"/><text x="48.8209%" y="479.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="48.6219%" y="229" width="0.0106%" height="15" fill="rgb(209,169,16)" fg:x="55218" fg:w="12"/><text x="48.8719%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="48.6431%" y="213" width="0.0335%" height="15" fill="rgb(245,90,51)" fg:x="55242" fg:w="38"/><text x="48.8931%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (38 samples, 0.03%)</title><rect x="48.6431%" y="197" width="0.0335%" height="15" fill="rgb(220,99,45)" fg:x="55242" fg:w="38"/><text x="48.8931%" y="207.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (29 samples, 0.03%)</title><rect x="48.6510%" y="181" width="0.0255%" height="15" fill="rgb(249,89,25)" fg:x="55251" fg:w="29"/><text x="48.9010%" y="191.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (24 samples, 0.02%)</title><rect x="48.6554%" y="165" width="0.0211%" height="15" fill="rgb(239,193,0)" fg:x="55256" fg:w="24"/><text x="48.9054%" y="175.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (24 samples, 0.02%)</title><rect x="48.6554%" y="149" width="0.0211%" height="15" fill="rgb(231,126,1)" fg:x="55256" fg:w="24"/><text x="48.9054%" y="159.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (24 samples, 0.02%)</title><rect x="48.6554%" y="133" width="0.0211%" height="15" fill="rgb(243,166,3)" fg:x="55256" fg:w="24"/><text x="48.9054%" y="143.50"></text></g><g><title>snmalloc::FreeListIter::empty (43 samples, 0.04%)</title><rect x="48.6809%" y="213" width="0.0379%" height="15" fill="rgb(223,22,34)" fg:x="55285" fg:w="43"/><text x="48.9309%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (43 samples, 0.04%)</title><rect x="48.6809%" y="197" width="0.0379%" height="15" fill="rgb(251,52,51)" fg:x="55285" fg:w="43"/><text x="48.9309%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (715 samples, 0.63%)</title><rect x="48.6105%" y="261" width="0.6296%" height="15" fill="rgb(221,165,28)" fg:x="55205" fg:w="715"/><text x="48.8605%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (706 samples, 0.62%)</title><rect x="48.6184%" y="245" width="0.6217%" height="15" fill="rgb(218,121,47)" fg:x="55214" fg:w="706"/><text x="48.8684%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (690 samples, 0.61%)</title><rect x="48.6325%" y="229" width="0.6076%" height="15" fill="rgb(209,120,9)" fg:x="55230" fg:w="690"/><text x="48.8825%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::take (592 samples, 0.52%)</title><rect x="48.7188%" y="213" width="0.5213%" height="15" fill="rgb(236,68,12)" fg:x="55328" fg:w="592"/><text x="48.9688%" y="223.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (592 samples, 0.52%)</title><rect x="48.7188%" y="197" width="0.5213%" height="15" fill="rgb(225,194,26)" fg:x="55328" fg:w="592"/><text x="48.9688%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (762 samples, 0.67%)</title><rect x="48.5814%" y="405" width="0.6710%" height="15" fill="rgb(231,84,39)" fg:x="55172" fg:w="762"/><text x="48.8314%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (762 samples, 0.67%)</title><rect x="48.5814%" y="389" width="0.6710%" height="15" fill="rgb(210,11,45)" fg:x="55172" fg:w="762"/><text x="48.8314%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (761 samples, 0.67%)</title><rect x="48.5823%" y="373" width="0.6701%" height="15" fill="rgb(224,54,52)" fg:x="55173" fg:w="761"/><text x="48.8323%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (761 samples, 0.67%)</title><rect x="48.5823%" y="357" width="0.6701%" height="15" fill="rgb(238,102,14)" fg:x="55173" fg:w="761"/><text x="48.8323%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (761 samples, 0.67%)</title><rect x="48.5823%" y="341" width="0.6701%" height="15" fill="rgb(243,160,52)" fg:x="55173" fg:w="761"/><text x="48.8323%" y="351.50"></text></g><g><title>alloc::alloc::alloc (746 samples, 0.66%)</title><rect x="48.5955%" y="325" width="0.6569%" height="15" fill="rgb(216,114,19)" fg:x="55188" fg:w="746"/><text x="48.8455%" y="335.50"></text></g><g><title>__rg_alloc (746 samples, 0.66%)</title><rect x="48.5955%" y="309" width="0.6569%" height="15" fill="rgb(244,166,37)" fg:x="55188" fg:w="746"/><text x="48.8455%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (746 samples, 0.66%)</title><rect x="48.5955%" y="293" width="0.6569%" height="15" fill="rgb(246,29,44)" fg:x="55188" fg:w="746"/><text x="48.8455%" y="303.50"></text></g><g><title>rust_alloc (735 samples, 0.65%)</title><rect x="48.6052%" y="277" width="0.6472%" height="15" fill="rgb(215,56,53)" fg:x="55199" fg:w="735"/><text x="48.8552%" y="287.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="49.2401%" y="261" width="0.0123%" height="15" fill="rgb(217,60,2)" fg:x="55920" fg:w="14"/><text x="49.4901%" y="271.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (858 samples, 0.76%)</title><rect x="48.5497%" y="517" width="0.7555%" height="15" fill="rgb(207,26,24)" fg:x="55136" fg:w="858"/><text x="48.7997%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (849 samples, 0.75%)</title><rect x="48.5577%" y="501" width="0.7476%" height="15" fill="rgb(252,210,15)" fg:x="55145" fg:w="849"/><text x="48.8077%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (822 samples, 0.72%)</title><rect x="48.5814%" y="485" width="0.7238%" height="15" fill="rgb(253,209,26)" fg:x="55172" fg:w="822"/><text x="48.8314%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (822 samples, 0.72%)</title><rect x="48.5814%" y="469" width="0.7238%" height="15" fill="rgb(238,170,14)" fg:x="55172" fg:w="822"/><text x="48.8314%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (822 samples, 0.72%)</title><rect x="48.5814%" y="453" width="0.7238%" height="15" fill="rgb(216,178,15)" fg:x="55172" fg:w="822"/><text x="48.8314%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (822 samples, 0.72%)</title><rect x="48.5814%" y="437" width="0.7238%" height="15" fill="rgb(250,197,2)" fg:x="55172" fg:w="822"/><text x="48.8314%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (822 samples, 0.72%)</title><rect x="48.5814%" y="421" width="0.7238%" height="15" fill="rgb(212,70,42)" fg:x="55172" fg:w="822"/><text x="48.8314%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (60 samples, 0.05%)</title><rect x="49.2524%" y="405" width="0.0528%" height="15" fill="rgb(227,213,9)" fg:x="55934" fg:w="60"/><text x="49.5024%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (60 samples, 0.05%)</title><rect x="49.2524%" y="389" width="0.0528%" height="15" fill="rgb(245,99,25)" fg:x="55934" fg:w="60"/><text x="49.5024%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (60 samples, 0.05%)</title><rect x="49.2524%" y="373" width="0.0528%" height="15" fill="rgb(250,82,29)" fg:x="55934" fg:w="60"/><text x="49.5024%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="49.3132%" y="501" width="0.0114%" height="15" fill="rgb(241,226,54)" fg:x="56003" fg:w="13"/><text x="49.5632%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (13 samples, 0.01%)</title><rect x="49.3132%" y="485" width="0.0114%" height="15" fill="rgb(221,99,41)" fg:x="56003" fg:w="13"/><text x="49.5632%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (13 samples, 0.01%)</title><rect x="49.3634%" y="85" width="0.0114%" height="15" fill="rgb(213,90,21)" fg:x="56060" fg:w="13"/><text x="49.6134%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (73 samples, 0.06%)</title><rect x="49.3625%" y="117" width="0.0643%" height="15" fill="rgb(205,208,24)" fg:x="56059" fg:w="73"/><text x="49.6125%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (73 samples, 0.06%)</title><rect x="49.3625%" y="101" width="0.0643%" height="15" fill="rgb(246,31,12)" fg:x="56059" fg:w="73"/><text x="49.6125%" y="111.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (59 samples, 0.05%)</title><rect x="49.3748%" y="85" width="0.0520%" height="15" fill="rgb(213,154,6)" fg:x="56073" fg:w="59"/><text x="49.6248%" y="95.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (49 samples, 0.04%)</title><rect x="49.3836%" y="69" width="0.0431%" height="15" fill="rgb(222,163,29)" fg:x="56083" fg:w="49"/><text x="49.6336%" y="79.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (49 samples, 0.04%)</title><rect x="49.3836%" y="53" width="0.0431%" height="15" fill="rgb(227,201,8)" fg:x="56083" fg:w="49"/><text x="49.6336%" y="63.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (49 samples, 0.04%)</title><rect x="49.3836%" y="37" width="0.0431%" height="15" fill="rgb(233,9,32)" fg:x="56083" fg:w="49"/><text x="49.6336%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (182 samples, 0.16%)</title><rect x="49.3475%" y="165" width="0.1603%" height="15" fill="rgb(217,54,24)" fg:x="56042" fg:w="182"/><text x="49.5975%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (181 samples, 0.16%)</title><rect x="49.3484%" y="149" width="0.1594%" height="15" fill="rgb(235,192,0)" fg:x="56043" fg:w="181"/><text x="49.5984%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (172 samples, 0.15%)</title><rect x="49.3563%" y="133" width="0.1515%" height="15" fill="rgb(235,45,9)" fg:x="56052" fg:w="172"/><text x="49.6063%" y="143.50"></text></g><g><title>snmalloc::FreeListIter::take (81 samples, 0.07%)</title><rect x="49.4365%" y="117" width="0.0713%" height="15" fill="rgb(246,42,40)" fg:x="56143" fg:w="81"/><text x="49.6865%" y="127.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (81 samples, 0.07%)</title><rect x="49.4365%" y="101" width="0.0713%" height="15" fill="rgb(248,111,24)" fg:x="56143" fg:w="81"/><text x="49.6865%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (208 samples, 0.18%)</title><rect x="49.3299%" y="309" width="0.1832%" height="15" fill="rgb(249,65,22)" fg:x="56022" fg:w="208"/><text x="49.5799%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (208 samples, 0.18%)</title><rect x="49.3299%" y="293" width="0.1832%" height="15" fill="rgb(238,111,51)" fg:x="56022" fg:w="208"/><text x="49.5799%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (203 samples, 0.18%)</title><rect x="49.3343%" y="277" width="0.1788%" height="15" fill="rgb(250,118,22)" fg:x="56027" fg:w="203"/><text x="49.5843%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (203 samples, 0.18%)</title><rect x="49.3343%" y="261" width="0.1788%" height="15" fill="rgb(234,84,26)" fg:x="56027" fg:w="203"/><text x="49.5843%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (203 samples, 0.18%)</title><rect x="49.3343%" y="245" width="0.1788%" height="15" fill="rgb(243,172,12)" fg:x="56027" fg:w="203"/><text x="49.5843%" y="255.50"></text></g><g><title>alloc::alloc::alloc (201 samples, 0.18%)</title><rect x="49.3361%" y="229" width="0.1770%" height="15" fill="rgb(236,150,49)" fg:x="56029" fg:w="201"/><text x="49.5861%" y="239.50"></text></g><g><title>__rg_alloc (201 samples, 0.18%)</title><rect x="49.3361%" y="213" width="0.1770%" height="15" fill="rgb(225,197,26)" fg:x="56029" fg:w="201"/><text x="49.5861%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (201 samples, 0.18%)</title><rect x="49.3361%" y="197" width="0.1770%" height="15" fill="rgb(214,17,42)" fg:x="56029" fg:w="201"/><text x="49.5861%" y="207.50"></text></g><g><title>rust_alloc (192 samples, 0.17%)</title><rect x="49.3440%" y="181" width="0.1691%" height="15" fill="rgb(224,165,40)" fg:x="56038" fg:w="192"/><text x="49.5940%" y="191.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (266 samples, 0.23%)</title><rect x="49.3246%" y="421" width="0.2342%" height="15" fill="rgb(246,100,4)" fg:x="56016" fg:w="266"/><text x="49.5746%" y="431.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (266 samples, 0.23%)</title><rect x="49.3246%" y="405" width="0.2342%" height="15" fill="rgb(222,103,0)" fg:x="56016" fg:w="266"/><text x="49.5746%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (260 samples, 0.23%)</title><rect x="49.3299%" y="389" width="0.2289%" height="15" fill="rgb(227,189,26)" fg:x="56022" fg:w="260"/><text x="49.5799%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (260 samples, 0.23%)</title><rect x="49.3299%" y="373" width="0.2289%" height="15" fill="rgb(214,202,17)" fg:x="56022" fg:w="260"/><text x="49.5799%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (260 samples, 0.23%)</title><rect x="49.3299%" y="357" width="0.2289%" height="15" fill="rgb(229,111,3)" fg:x="56022" fg:w="260"/><text x="49.5799%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (260 samples, 0.23%)</title><rect x="49.3299%" y="341" width="0.2289%" height="15" fill="rgb(229,172,15)" fg:x="56022" fg:w="260"/><text x="49.5799%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (260 samples, 0.23%)</title><rect x="49.3299%" y="325" width="0.2289%" height="15" fill="rgb(230,224,35)" fg:x="56022" fg:w="260"/><text x="49.5799%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (52 samples, 0.05%)</title><rect x="49.5131%" y="309" width="0.0458%" height="15" fill="rgb(251,141,6)" fg:x="56230" fg:w="52"/><text x="49.7631%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (52 samples, 0.05%)</title><rect x="49.5131%" y="293" width="0.0458%" height="15" fill="rgb(225,208,6)" fg:x="56230" fg:w="52"/><text x="49.7631%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned_erms (42 samples, 0.04%)</title><rect x="49.5219%" y="277" width="0.0370%" height="15" fill="rgb(246,181,16)" fg:x="56240" fg:w="42"/><text x="49.7719%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="49.5588%" y="421" width="0.0291%" height="15" fill="rgb(227,129,36)" fg:x="56282" fg:w="33"/><text x="49.8088%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="49.5765%" y="405" width="0.0114%" height="15" fill="rgb(248,117,24)" fg:x="56302" fg:w="13"/><text x="49.8265%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="49.5765%" y="389" width="0.0114%" height="15" fill="rgb(214,185,35)" fg:x="56302" fg:w="13"/><text x="49.8265%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="49.6073%" y="229" width="0.0379%" height="15" fill="rgb(236,150,34)" fg:x="56337" fg:w="43"/><text x="49.8573%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (43 samples, 0.04%)</title><rect x="49.6073%" y="213" width="0.0379%" height="15" fill="rgb(243,228,27)" fg:x="56337" fg:w="43"/><text x="49.8573%" y="223.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (40 samples, 0.04%)</title><rect x="49.6099%" y="197" width="0.0352%" height="15" fill="rgb(245,77,44)" fg:x="56340" fg:w="40"/><text x="49.8599%" y="207.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (28 samples, 0.02%)</title><rect x="49.6205%" y="181" width="0.0247%" height="15" fill="rgb(235,214,42)" fg:x="56352" fg:w="28"/><text x="49.8705%" y="191.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (28 samples, 0.02%)</title><rect x="49.6205%" y="165" width="0.0247%" height="15" fill="rgb(221,74,3)" fg:x="56352" fg:w="28"/><text x="49.8705%" y="175.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (28 samples, 0.02%)</title><rect x="49.6205%" y="149" width="0.0247%" height="15" fill="rgb(206,121,29)" fg:x="56352" fg:w="28"/><text x="49.8705%" y="159.50"></text></g><g><title>snmalloc::FreeListIter::empty (13 samples, 0.01%)</title><rect x="49.6469%" y="229" width="0.0114%" height="15" fill="rgb(249,131,53)" fg:x="56382" fg:w="13"/><text x="49.8969%" y="239.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (13 samples, 0.01%)</title><rect x="49.6469%" y="213" width="0.0114%" height="15" fill="rgb(236,170,29)" fg:x="56382" fg:w="13"/><text x="49.8969%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (171 samples, 0.15%)</title><rect x="49.5967%" y="277" width="0.1506%" height="15" fill="rgb(247,96,15)" fg:x="56325" fg:w="171"/><text x="49.8467%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (161 samples, 0.14%)</title><rect x="49.6055%" y="261" width="0.1418%" height="15" fill="rgb(211,210,7)" fg:x="56335" fg:w="161"/><text x="49.8555%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (159 samples, 0.14%)</title><rect x="49.6073%" y="245" width="0.1400%" height="15" fill="rgb(240,88,50)" fg:x="56337" fg:w="159"/><text x="49.8573%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::take (101 samples, 0.09%)</title><rect x="49.6583%" y="229" width="0.0889%" height="15" fill="rgb(209,229,26)" fg:x="56395" fg:w="101"/><text x="49.9083%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (101 samples, 0.09%)</title><rect x="49.6583%" y="213" width="0.0889%" height="15" fill="rgb(210,68,23)" fg:x="56395" fg:w="101"/><text x="49.9083%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (190 samples, 0.17%)</title><rect x="49.5905%" y="373" width="0.1673%" height="15" fill="rgb(229,180,13)" fg:x="56318" fg:w="190"/><text x="49.8405%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (190 samples, 0.17%)</title><rect x="49.5905%" y="357" width="0.1673%" height="15" fill="rgb(236,53,44)" fg:x="56318" fg:w="190"/><text x="49.8405%" y="367.50"></text></g><g><title>alloc::alloc::alloc (189 samples, 0.17%)</title><rect x="49.5914%" y="341" width="0.1664%" height="15" fill="rgb(244,214,29)" fg:x="56319" fg:w="189"/><text x="49.8414%" y="351.50"></text></g><g><title>__rg_alloc (189 samples, 0.17%)</title><rect x="49.5914%" y="325" width="0.1664%" height="15" fill="rgb(220,75,29)" fg:x="56319" fg:w="189"/><text x="49.8414%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (189 samples, 0.17%)</title><rect x="49.5914%" y="309" width="0.1664%" height="15" fill="rgb(214,183,37)" fg:x="56319" fg:w="189"/><text x="49.8414%" y="319.50"></text></g><g><title>rust_alloc (183 samples, 0.16%)</title><rect x="49.5967%" y="293" width="0.1611%" height="15" fill="rgb(239,117,29)" fg:x="56325" fg:w="183"/><text x="49.8467%" y="303.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="49.7473%" y="277" width="0.0106%" height="15" fill="rgb(237,171,35)" fg:x="56496" fg:w="12"/><text x="49.9973%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (192 samples, 0.17%)</title><rect x="49.5897%" y="421" width="0.1691%" height="15" fill="rgb(229,178,53)" fg:x="56317" fg:w="192"/><text x="49.8397%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (192 samples, 0.17%)</title><rect x="49.5897%" y="405" width="0.1691%" height="15" fill="rgb(210,102,19)" fg:x="56317" fg:w="192"/><text x="49.8397%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (191 samples, 0.17%)</title><rect x="49.5905%" y="389" width="0.1682%" height="15" fill="rgb(235,127,22)" fg:x="56318" fg:w="191"/><text x="49.8405%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (502 samples, 0.44%)</title><rect x="49.3246%" y="437" width="0.4420%" height="15" fill="rgb(244,31,31)" fg:x="56016" fg:w="502"/><text x="49.5746%" y="447.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (2,022 samples, 1.78%)</title><rect x="47.9897%" y="533" width="1.7805%" height="15" fill="rgb(231,43,21)" fg:x="54500" fg:w="2022"/><text x="48.2397%" y="543.50">&lt;..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (528 samples, 0.46%)</title><rect x="49.3052%" y="517" width="0.4649%" height="15" fill="rgb(217,131,35)" fg:x="55994" fg:w="528"/><text x="49.5552%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (506 samples, 0.45%)</title><rect x="49.3246%" y="501" width="0.4456%" height="15" fill="rgb(221,149,4)" fg:x="56016" fg:w="506"/><text x="49.5746%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (506 samples, 0.45%)</title><rect x="49.3246%" y="485" width="0.4456%" height="15" fill="rgb(232,170,28)" fg:x="56016" fg:w="506"/><text x="49.5746%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (506 samples, 0.45%)</title><rect x="49.3246%" y="469" width="0.4456%" height="15" fill="rgb(238,56,10)" fg:x="56016" fg:w="506"/><text x="49.5746%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (506 samples, 0.45%)</title><rect x="49.3246%" y="453" width="0.4456%" height="15" fill="rgb(235,196,14)" fg:x="56016" fg:w="506"/><text x="49.5746%" y="463.50"></text></g><g><title>rust_alloc (30 samples, 0.03%)</title><rect x="49.9366%" y="245" width="0.0264%" height="15" fill="rgb(216,45,48)" fg:x="56711" fg:w="30"/><text x="50.1866%" y="255.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.01%)</title><rect x="49.9938%" y="117" width="0.0150%" height="15" fill="rgb(238,213,17)" fg:x="56776" fg:w="17"/><text x="50.2438%" y="127.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.01%)</title><rect x="49.9938%" y="101" width="0.0150%" height="15" fill="rgb(212,13,2)" fg:x="56776" fg:w="17"/><text x="50.2438%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (39 samples, 0.03%)</title><rect x="49.9850%" y="165" width="0.0343%" height="15" fill="rgb(240,114,20)" fg:x="56766" fg:w="39"/><text x="50.2350%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (39 samples, 0.03%)</title><rect x="49.9850%" y="149" width="0.0343%" height="15" fill="rgb(228,41,40)" fg:x="56766" fg:w="39"/><text x="50.2350%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (35 samples, 0.03%)</title><rect x="49.9886%" y="133" width="0.0308%" height="15" fill="rgb(244,132,35)" fg:x="56770" fg:w="35"/><text x="50.2386%" y="143.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="50.0088%" y="117" width="0.0106%" height="15" fill="rgb(253,189,4)" fg:x="56793" fg:w="12"/><text x="50.2588%" y="127.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="50.0088%" y="101" width="0.0106%" height="15" fill="rgb(224,37,19)" fg:x="56793" fg:w="12"/><text x="50.2588%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (53 samples, 0.05%)</title><rect x="49.9850%" y="181" width="0.0467%" height="15" fill="rgb(235,223,18)" fg:x="56766" fg:w="53"/><text x="50.2350%" y="191.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="50.0194%" y="165" width="0.0123%" height="15" fill="rgb(235,163,25)" fg:x="56805" fg:w="14"/><text x="50.2694%" y="175.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="50.0194%" y="149" width="0.0123%" height="15" fill="rgb(217,145,28)" fg:x="56805" fg:w="14"/><text x="50.2694%" y="159.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (14 samples, 0.01%)</title><rect x="50.0194%" y="133" width="0.0123%" height="15" fill="rgb(223,223,32)" fg:x="56805" fg:w="14"/><text x="50.2694%" y="143.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="50.0194%" y="117" width="0.0123%" height="15" fill="rgb(227,189,39)" fg:x="56805" fg:w="14"/><text x="50.2694%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (83 samples, 0.07%)</title><rect x="49.9753%" y="197" width="0.0731%" height="15" fill="rgb(248,10,22)" fg:x="56755" fg:w="83"/><text x="50.2253%" y="207.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (19 samples, 0.02%)</title><rect x="50.0317%" y="181" width="0.0167%" height="15" fill="rgb(248,46,39)" fg:x="56819" fg:w="19"/><text x="50.2817%" y="191.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (19 samples, 0.02%)</title><rect x="50.0317%" y="165" width="0.0167%" height="15" fill="rgb(248,113,48)" fg:x="56819" fg:w="19"/><text x="50.2817%" y="175.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (19 samples, 0.02%)</title><rect x="50.0317%" y="149" width="0.0167%" height="15" fill="rgb(245,16,25)" fg:x="56819" fg:w="19"/><text x="50.2817%" y="159.50"></text></g><g><title>snmalloc::bits::align_down (19 samples, 0.02%)</title><rect x="50.0317%" y="133" width="0.0167%" height="15" fill="rgb(249,152,16)" fg:x="56819" fg:w="19"/><text x="50.2817%" y="143.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (66 samples, 0.06%)</title><rect x="50.0740%" y="181" width="0.0581%" height="15" fill="rgb(250,16,1)" fg:x="56867" fg:w="66"/><text x="50.3240%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (522 samples, 0.46%)</title><rect x="49.9753%" y="229" width="0.4596%" height="15" fill="rgb(249,138,3)" fg:x="56755" fg:w="522"/><text x="50.2253%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (522 samples, 0.46%)</title><rect x="49.9753%" y="213" width="0.4596%" height="15" fill="rgb(227,71,41)" fg:x="56755" fg:w="522"/><text x="50.2253%" y="223.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (439 samples, 0.39%)</title><rect x="50.0484%" y="197" width="0.3866%" height="15" fill="rgb(209,184,23)" fg:x="56838" fg:w="439"/><text x="50.2984%" y="207.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (344 samples, 0.30%)</title><rect x="50.1321%" y="181" width="0.3029%" height="15" fill="rgb(223,215,31)" fg:x="56933" fg:w="344"/><text x="50.3821%" y="191.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (344 samples, 0.30%)</title><rect x="50.1321%" y="165" width="0.3029%" height="15" fill="rgb(210,146,28)" fg:x="56933" fg:w="344"/><text x="50.3821%" y="175.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (344 samples, 0.30%)</title><rect x="50.1321%" y="149" width="0.3029%" height="15" fill="rgb(209,183,41)" fg:x="56933" fg:w="344"/><text x="50.3821%" y="159.50"></text></g><g><title>snmalloc::FreeListIter::take (20 samples, 0.02%)</title><rect x="50.4447%" y="197" width="0.0176%" height="15" fill="rgb(209,224,45)" fg:x="57288" fg:w="20"/><text x="50.6947%" y="207.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (20 samples, 0.02%)</title><rect x="50.4447%" y="181" width="0.0176%" height="15" fill="rgb(224,209,51)" fg:x="57288" fg:w="20"/><text x="50.6947%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="50.4350%" y="229" width="0.0317%" height="15" fill="rgb(223,17,39)" fg:x="57277" fg:w="36"/><text x="50.6850%" y="239.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (34 samples, 0.03%)</title><rect x="50.4368%" y="213" width="0.0299%" height="15" fill="rgb(234,204,37)" fg:x="57279" fg:w="34"/><text x="50.6868%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (14 samples, 0.01%)</title><rect x="50.4764%" y="181" width="0.0123%" height="15" fill="rgb(236,120,5)" fg:x="57324" fg:w="14"/><text x="50.7264%" y="191.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (12 samples, 0.01%)</title><rect x="50.4781%" y="165" width="0.0106%" height="15" fill="rgb(248,97,27)" fg:x="57326" fg:w="12"/><text x="50.7281%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="50.4667%" y="229" width="0.0326%" height="15" fill="rgb(240,66,17)" fg:x="57313" fg:w="37"/><text x="50.7167%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="50.4693%" y="213" width="0.0299%" height="15" fill="rgb(210,79,3)" fg:x="57316" fg:w="34"/><text x="50.7193%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.02%)</title><rect x="50.4746%" y="197" width="0.0247%" height="15" fill="rgb(214,176,27)" fg:x="57322" fg:w="28"/><text x="50.7246%" y="207.50"></text></g><g><title>snmalloc::FreeListIter::empty (29 samples, 0.03%)</title><rect x="50.4993%" y="229" width="0.0255%" height="15" fill="rgb(235,185,3)" fg:x="57350" fg:w="29"/><text x="50.7493%" y="239.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (29 samples, 0.03%)</title><rect x="50.4993%" y="213" width="0.0255%" height="15" fill="rgb(227,24,12)" fg:x="57350" fg:w="29"/><text x="50.7493%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (855 samples, 0.75%)</title><rect x="49.9014%" y="421" width="0.7529%" height="15" fill="rgb(252,169,48)" fg:x="56671" fg:w="855"/><text x="50.1514%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (855 samples, 0.75%)</title><rect x="49.9014%" y="405" width="0.7529%" height="15" fill="rgb(212,65,1)" fg:x="56671" fg:w="855"/><text x="50.1514%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (853 samples, 0.75%)</title><rect x="49.9031%" y="389" width="0.7511%" height="15" fill="rgb(242,39,24)" fg:x="56673" fg:w="853"/><text x="50.1531%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (853 samples, 0.75%)</title><rect x="49.9031%" y="373" width="0.7511%" height="15" fill="rgb(249,32,23)" fg:x="56673" fg:w="853"/><text x="50.1531%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (853 samples, 0.75%)</title><rect x="49.9031%" y="357" width="0.7511%" height="15" fill="rgb(251,195,23)" fg:x="56673" fg:w="853"/><text x="50.1531%" y="367.50"></text></g><g><title>alloc::alloc::alloc (853 samples, 0.75%)</title><rect x="49.9031%" y="341" width="0.7511%" height="15" fill="rgb(236,174,8)" fg:x="56673" fg:w="853"/><text x="50.1531%" y="351.50"></text></g><g><title>__rg_alloc (853 samples, 0.75%)</title><rect x="49.9031%" y="325" width="0.7511%" height="15" fill="rgb(220,197,8)" fg:x="56673" fg:w="853"/><text x="50.1531%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (853 samples, 0.75%)</title><rect x="49.9031%" y="309" width="0.7511%" height="15" fill="rgb(240,108,37)" fg:x="56673" fg:w="853"/><text x="50.1531%" y="319.50"></text></g><g><title>rust_alloc (831 samples, 0.73%)</title><rect x="49.9225%" y="293" width="0.7317%" height="15" fill="rgb(232,176,24)" fg:x="56695" fg:w="831"/><text x="50.1725%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (815 samples, 0.72%)</title><rect x="49.9366%" y="277" width="0.7176%" height="15" fill="rgb(243,35,29)" fg:x="56711" fg:w="815"/><text x="50.1866%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (815 samples, 0.72%)</title><rect x="49.9366%" y="261" width="0.7176%" height="15" fill="rgb(210,37,18)" fg:x="56711" fg:w="815"/><text x="50.1866%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (784 samples, 0.69%)</title><rect x="49.9639%" y="245" width="0.6903%" height="15" fill="rgb(224,184,40)" fg:x="56742" fg:w="784"/><text x="50.2139%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::take (147 samples, 0.13%)</title><rect x="50.5248%" y="229" width="0.1294%" height="15" fill="rgb(236,39,29)" fg:x="57379" fg:w="147"/><text x="50.7748%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (147 samples, 0.13%)</title><rect x="50.5248%" y="213" width="0.1294%" height="15" fill="rgb(232,48,39)" fg:x="57379" fg:w="147"/><text x="50.7748%" y="223.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (4,427 samples, 3.90%)</title><rect x="47.0713%" y="789" width="3.8982%" height="15" fill="rgb(236,34,42)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="799.50">trem..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,427 samples, 3.90%)</title><rect x="47.0713%" y="773" width="3.8982%" height="15" fill="rgb(243,106,37)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="783.50">&lt;asy..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,427 samples, 3.90%)</title><rect x="47.0713%" y="757" width="3.8982%" height="15" fill="rgb(218,96,6)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="767.50">&lt;asy..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (4,427 samples, 3.90%)</title><rect x="47.0713%" y="741" width="3.8982%" height="15" fill="rgb(235,130,12)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="751.50">&lt;cor..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,427 samples, 3.90%)</title><rect x="47.0713%" y="725" width="3.8982%" height="15" fill="rgb(231,95,0)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="735.50">&lt;asy..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (4,427 samples, 3.90%)</title><rect x="47.0713%" y="709" width="3.8982%" height="15" fill="rgb(228,12,23)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="719.50">asyn..</text></g><g><title>std::panic::catch_unwind (4,427 samples, 3.90%)</title><rect x="47.0713%" y="693" width="3.8982%" height="15" fill="rgb(216,12,1)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="703.50">std:..</text></g><g><title>std::panicking::try (4,427 samples, 3.90%)</title><rect x="47.0713%" y="677" width="3.8982%" height="15" fill="rgb(219,59,3)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="687.50">std:..</text></g><g><title>std::panicking::try::do_call (4,427 samples, 3.90%)</title><rect x="47.0713%" y="661" width="3.8982%" height="15" fill="rgb(215,208,46)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="671.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,427 samples, 3.90%)</title><rect x="47.0713%" y="645" width="3.8982%" height="15" fill="rgb(254,224,29)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="655.50">&lt;cor..</text></g><g><title>core::ops::function::FnOnce::call_once (4,427 samples, 3.90%)</title><rect x="47.0713%" y="629" width="3.8982%" height="15" fill="rgb(232,14,29)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="639.50">core..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (4,427 samples, 3.90%)</title><rect x="47.0713%" y="613" width="3.8982%" height="15" fill="rgb(208,45,52)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="623.50">asyn..</text></g><g><title>async_ffi::FfiContext::with_context (4,427 samples, 3.90%)</title><rect x="47.0713%" y="597" width="3.8982%" height="15" fill="rgb(234,191,28)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="607.50">asyn..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (4,427 samples, 3.90%)</title><rect x="47.0713%" y="581" width="3.8982%" height="15" fill="rgb(244,67,43)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="591.50">asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,427 samples, 3.90%)</title><rect x="47.0713%" y="565" width="3.8982%" height="15" fill="rgb(236,189,24)" fg:x="53457" fg:w="4427"/><text x="47.3213%" y="575.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (4,374 samples, 3.85%)</title><rect x="47.1180%" y="549" width="3.8515%" height="15" fill="rgb(239,214,33)" fg:x="53510" fg:w="4374"/><text x="47.3680%" y="559.50">&lt;tre..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,362 samples, 1.20%)</title><rect x="49.7702%" y="533" width="1.1993%" height="15" fill="rgb(226,176,41)" fg:x="56522" fg:w="1362"/><text x="50.0202%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (1,258 samples, 1.11%)</title><rect x="49.8618%" y="517" width="1.1077%" height="15" fill="rgb(248,47,8)" fg:x="56626" fg:w="1258"/><text x="50.1118%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (1,213 samples, 1.07%)</title><rect x="49.9014%" y="501" width="1.0681%" height="15" fill="rgb(218,81,44)" fg:x="56671" fg:w="1213"/><text x="50.1514%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,213 samples, 1.07%)</title><rect x="49.9014%" y="485" width="1.0681%" height="15" fill="rgb(213,98,6)" fg:x="56671" fg:w="1213"/><text x="50.1514%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,213 samples, 1.07%)</title><rect x="49.9014%" y="469" width="1.0681%" height="15" fill="rgb(222,85,22)" fg:x="56671" fg:w="1213"/><text x="50.1514%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1,213 samples, 1.07%)</title><rect x="49.9014%" y="453" width="1.0681%" height="15" fill="rgb(239,46,39)" fg:x="56671" fg:w="1213"/><text x="50.1514%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,213 samples, 1.07%)</title><rect x="49.9014%" y="437" width="1.0681%" height="15" fill="rgb(237,12,29)" fg:x="56671" fg:w="1213"/><text x="50.1514%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (358 samples, 0.32%)</title><rect x="50.6542%" y="421" width="0.3152%" height="15" fill="rgb(214,77,8)" fg:x="57526" fg:w="358"/><text x="50.9042%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (358 samples, 0.32%)</title><rect x="50.6542%" y="405" width="0.3152%" height="15" fill="rgb(217,168,37)" fg:x="57526" fg:w="358"/><text x="50.9042%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (349 samples, 0.31%)</title><rect x="50.6622%" y="389" width="0.3073%" height="15" fill="rgb(221,217,23)" fg:x="57535" fg:w="349"/><text x="50.9122%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="50.9721%" y="757" width="0.0203%" height="15" fill="rgb(243,229,36)" fg:x="57887" fg:w="23"/><text x="51.2221%" y="767.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (14 samples, 0.01%)</title><rect x="51.1570%" y="741" width="0.0123%" height="15" fill="rgb(251,163,40)" fg:x="58097" fg:w="14"/><text x="51.4070%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (297 samples, 0.26%)</title><rect x="51.1773%" y="741" width="0.2615%" height="15" fill="rgb(237,222,12)" fg:x="58120" fg:w="297"/><text x="51.4273%" y="751.50"></text></g><g><title>core::ptr::read (271 samples, 0.24%)</title><rect x="51.2002%" y="725" width="0.2386%" height="15" fill="rgb(248,132,6)" fg:x="58146" fg:w="271"/><text x="51.4502%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (264 samples, 0.23%)</title><rect x="51.2063%" y="709" width="0.2325%" height="15" fill="rgb(227,167,50)" fg:x="58153" fg:w="264"/><text x="51.4563%" y="719.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="51.4388%" y="741" width="0.0123%" height="15" fill="rgb(242,84,37)" fg:x="58417" fg:w="14"/><text x="51.6888%" y="751.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (14 samples, 0.01%)</title><rect x="51.4388%" y="725" width="0.0123%" height="15" fill="rgb(212,4,50)" fg:x="58417" fg:w="14"/><text x="51.6888%" y="735.50"></text></g><g><title>rust_alloc (20 samples, 0.02%)</title><rect x="51.4714%" y="437" width="0.0176%" height="15" fill="rgb(230,228,32)" fg:x="58454" fg:w="20"/><text x="51.7214%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="51.5004%" y="421" width="0.0194%" height="15" fill="rgb(248,217,23)" fg:x="58487" fg:w="22"/><text x="51.7504%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (22 samples, 0.02%)</title><rect x="51.5004%" y="405" width="0.0194%" height="15" fill="rgb(238,197,32)" fg:x="58487" fg:w="22"/><text x="51.7504%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (16 samples, 0.01%)</title><rect x="51.5057%" y="389" width="0.0141%" height="15" fill="rgb(236,106,1)" fg:x="58493" fg:w="16"/><text x="51.7557%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (12 samples, 0.01%)</title><rect x="51.5093%" y="373" width="0.0106%" height="15" fill="rgb(219,228,13)" fg:x="58497" fg:w="12"/><text x="51.7593%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="51.5093%" y="357" width="0.0106%" height="15" fill="rgb(238,30,35)" fg:x="58497" fg:w="12"/><text x="51.7593%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="51.5093%" y="341" width="0.0106%" height="15" fill="rgb(236,70,23)" fg:x="58497" fg:w="12"/><text x="51.7593%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (43 samples, 0.04%)</title><rect x="51.5198%" y="421" width="0.0379%" height="15" fill="rgb(249,104,48)" fg:x="58509" fg:w="43"/><text x="51.7698%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (43 samples, 0.04%)</title><rect x="51.5198%" y="405" width="0.0379%" height="15" fill="rgb(254,117,50)" fg:x="58509" fg:w="43"/><text x="51.7698%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (407 samples, 0.36%)</title><rect x="51.4714%" y="469" width="0.3584%" height="15" fill="rgb(223,152,4)" fg:x="58454" fg:w="407"/><text x="51.7214%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (407 samples, 0.36%)</title><rect x="51.4714%" y="453" width="0.3584%" height="15" fill="rgb(245,6,2)" fg:x="58454" fg:w="407"/><text x="51.7214%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (380 samples, 0.33%)</title><rect x="51.4952%" y="437" width="0.3346%" height="15" fill="rgb(249,150,24)" fg:x="58481" fg:w="380"/><text x="51.7452%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (309 samples, 0.27%)</title><rect x="51.5577%" y="421" width="0.2721%" height="15" fill="rgb(228,185,42)" fg:x="58552" fg:w="309"/><text x="51.8077%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (309 samples, 0.27%)</title><rect x="51.5577%" y="405" width="0.2721%" height="15" fill="rgb(226,39,33)" fg:x="58552" fg:w="309"/><text x="51.8077%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (431 samples, 0.38%)</title><rect x="51.4582%" y="613" width="0.3795%" height="15" fill="rgb(221,166,19)" fg:x="58439" fg:w="431"/><text x="51.7082%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (431 samples, 0.38%)</title><rect x="51.4582%" y="597" width="0.3795%" height="15" fill="rgb(209,109,2)" fg:x="58439" fg:w="431"/><text x="51.7082%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (427 samples, 0.38%)</title><rect x="51.4617%" y="581" width="0.3760%" height="15" fill="rgb(252,216,26)" fg:x="58443" fg:w="427"/><text x="51.7117%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (427 samples, 0.38%)</title><rect x="51.4617%" y="565" width="0.3760%" height="15" fill="rgb(227,173,36)" fg:x="58443" fg:w="427"/><text x="51.7117%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (427 samples, 0.38%)</title><rect x="51.4617%" y="549" width="0.3760%" height="15" fill="rgb(209,90,7)" fg:x="58443" fg:w="427"/><text x="51.7117%" y="559.50"></text></g><g><title>alloc::alloc::alloc (422 samples, 0.37%)</title><rect x="51.4661%" y="533" width="0.3716%" height="15" fill="rgb(250,194,11)" fg:x="58448" fg:w="422"/><text x="51.7161%" y="543.50"></text></g><g><title>__rg_alloc (422 samples, 0.37%)</title><rect x="51.4661%" y="517" width="0.3716%" height="15" fill="rgb(220,72,50)" fg:x="58448" fg:w="422"/><text x="51.7161%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (422 samples, 0.37%)</title><rect x="51.4661%" y="501" width="0.3716%" height="15" fill="rgb(222,106,48)" fg:x="58448" fg:w="422"/><text x="51.7161%" y="511.50"></text></g><g><title>rust_alloc (420 samples, 0.37%)</title><rect x="51.4679%" y="485" width="0.3698%" height="15" fill="rgb(216,220,45)" fg:x="58450" fg:w="420"/><text x="51.7179%" y="495.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (468 samples, 0.41%)</title><rect x="51.4582%" y="741" width="0.4121%" height="15" fill="rgb(234,112,18)" fg:x="58439" fg:w="468"/><text x="51.7082%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (468 samples, 0.41%)</title><rect x="51.4582%" y="725" width="0.4121%" height="15" fill="rgb(206,179,9)" fg:x="58439" fg:w="468"/><text x="51.7082%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (468 samples, 0.41%)</title><rect x="51.4582%" y="709" width="0.4121%" height="15" fill="rgb(215,115,40)" fg:x="58439" fg:w="468"/><text x="51.7082%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (468 samples, 0.41%)</title><rect x="51.4582%" y="693" width="0.4121%" height="15" fill="rgb(222,69,34)" fg:x="58439" fg:w="468"/><text x="51.7082%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (468 samples, 0.41%)</title><rect x="51.4582%" y="677" width="0.4121%" height="15" fill="rgb(209,161,10)" fg:x="58439" fg:w="468"/><text x="51.7082%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (468 samples, 0.41%)</title><rect x="51.4582%" y="661" width="0.4121%" height="15" fill="rgb(217,6,38)" fg:x="58439" fg:w="468"/><text x="51.7082%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (468 samples, 0.41%)</title><rect x="51.4582%" y="645" width="0.4121%" height="15" fill="rgb(229,229,48)" fg:x="58439" fg:w="468"/><text x="51.7082%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (468 samples, 0.41%)</title><rect x="51.4582%" y="629" width="0.4121%" height="15" fill="rgb(225,21,28)" fg:x="58439" fg:w="468"/><text x="51.7082%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (37 samples, 0.03%)</title><rect x="51.8377%" y="613" width="0.0326%" height="15" fill="rgb(206,33,13)" fg:x="58870" fg:w="37"/><text x="52.0877%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.03%)</title><rect x="51.8377%" y="597" width="0.0326%" height="15" fill="rgb(242,178,17)" fg:x="58870" fg:w="37"/><text x="52.0877%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (26 samples, 0.02%)</title><rect x="51.8474%" y="581" width="0.0229%" height="15" fill="rgb(220,162,5)" fg:x="58881" fg:w="26"/><text x="52.0974%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (722 samples, 0.64%)</title><rect x="51.8703%" y="741" width="0.6358%" height="15" fill="rgb(210,33,43)" fg:x="58907" fg:w="722"/><text x="52.1203%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (373 samples, 0.33%)</title><rect x="52.5148%" y="725" width="0.3284%" height="15" fill="rgb(216,116,54)" fg:x="59639" fg:w="373"/><text x="52.7648%" y="735.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="52.8618%" y="581" width="0.0123%" height="15" fill="rgb(249,92,24)" fg:x="60033" fg:w="14"/><text x="53.1118%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="52.9199%" y="453" width="0.0167%" height="15" fill="rgb(231,189,14)" fg:x="60099" fg:w="19"/><text x="53.1699%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="52.9199%" y="437" width="0.0167%" height="15" fill="rgb(230,8,41)" fg:x="60099" fg:w="19"/><text x="53.1699%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (53 samples, 0.05%)</title><rect x="52.9032%" y="501" width="0.0467%" height="15" fill="rgb(249,7,27)" fg:x="60080" fg:w="53"/><text x="53.1532%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (53 samples, 0.05%)</title><rect x="52.9032%" y="485" width="0.0467%" height="15" fill="rgb(232,86,5)" fg:x="60080" fg:w="53"/><text x="53.1532%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (43 samples, 0.04%)</title><rect x="52.9120%" y="469" width="0.0379%" height="15" fill="rgb(224,175,18)" fg:x="60090" fg:w="43"/><text x="53.1620%" y="479.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="52.9366%" y="453" width="0.0132%" height="15" fill="rgb(220,129,12)" fg:x="60118" fg:w="15"/><text x="53.1866%" y="463.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="52.9366%" y="437" width="0.0132%" height="15" fill="rgb(210,19,36)" fg:x="60118" fg:w="15"/><text x="53.1866%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (64 samples, 0.06%)</title><rect x="52.9032%" y="517" width="0.0564%" height="15" fill="rgb(219,96,14)" fg:x="60080" fg:w="64"/><text x="53.1532%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (100 samples, 0.09%)</title><rect x="52.8855%" y="533" width="0.0881%" height="15" fill="rgb(249,106,1)" fg:x="60060" fg:w="100"/><text x="53.1355%" y="543.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="52.9622%" y="517" width="0.0114%" height="15" fill="rgb(249,155,20)" fg:x="60147" fg:w="13"/><text x="53.2122%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="52.9622%" y="501" width="0.0114%" height="15" fill="rgb(244,168,9)" fg:x="60147" fg:w="13"/><text x="53.2122%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="52.9622%" y="485" width="0.0114%" height="15" fill="rgb(216,23,50)" fg:x="60147" fg:w="13"/><text x="53.2122%" y="495.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="52.9622%" y="469" width="0.0114%" height="15" fill="rgb(224,219,20)" fg:x="60147" fg:w="13"/><text x="53.2122%" y="479.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (74 samples, 0.07%)</title><rect x="53.0053%" y="517" width="0.0652%" height="15" fill="rgb(222,156,15)" fg:x="60196" fg:w="74"/><text x="53.2553%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (668 samples, 0.59%)</title><rect x="52.8855%" y="565" width="0.5882%" height="15" fill="rgb(231,97,17)" fg:x="60060" fg:w="668"/><text x="53.1355%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (668 samples, 0.59%)</title><rect x="52.8855%" y="549" width="0.5882%" height="15" fill="rgb(218,70,48)" fg:x="60060" fg:w="668"/><text x="53.1355%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (568 samples, 0.50%)</title><rect x="52.9736%" y="533" width="0.5001%" height="15" fill="rgb(212,196,52)" fg:x="60160" fg:w="568"/><text x="53.2236%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (458 samples, 0.40%)</title><rect x="53.0705%" y="517" width="0.4033%" height="15" fill="rgb(243,203,18)" fg:x="60270" fg:w="458"/><text x="53.3205%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (458 samples, 0.40%)</title><rect x="53.0705%" y="501" width="0.4033%" height="15" fill="rgb(252,125,41)" fg:x="60270" fg:w="458"/><text x="53.3205%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (458 samples, 0.40%)</title><rect x="53.0705%" y="485" width="0.4033%" height="15" fill="rgb(223,180,33)" fg:x="60270" fg:w="458"/><text x="53.3205%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (17 samples, 0.01%)</title><rect x="53.4799%" y="533" width="0.0150%" height="15" fill="rgb(254,159,46)" fg:x="60735" fg:w="17"/><text x="53.7299%" y="543.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (16 samples, 0.01%)</title><rect x="53.4808%" y="517" width="0.0141%" height="15" fill="rgb(254,38,10)" fg:x="60736" fg:w="16"/><text x="53.7308%" y="527.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="53.4808%" y="501" width="0.0141%" height="15" fill="rgb(208,217,32)" fg:x="60736" fg:w="16"/><text x="53.7308%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (24 samples, 0.02%)</title><rect x="53.4949%" y="533" width="0.0211%" height="15" fill="rgb(221,120,13)" fg:x="60752" fg:w="24"/><text x="53.7449%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (24 samples, 0.02%)</title><rect x="53.4949%" y="517" width="0.0211%" height="15" fill="rgb(246,54,52)" fg:x="60752" fg:w="24"/><text x="53.7449%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (55 samples, 0.05%)</title><rect x="53.4738%" y="565" width="0.0484%" height="15" fill="rgb(242,34,25)" fg:x="60728" fg:w="55"/><text x="53.7238%" y="575.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (48 samples, 0.04%)</title><rect x="53.4799%" y="549" width="0.0423%" height="15" fill="rgb(247,209,9)" fg:x="60735" fg:w="48"/><text x="53.7299%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="53.5222%" y="565" width="0.0123%" height="15" fill="rgb(228,71,26)" fg:x="60783" fg:w="14"/><text x="53.7722%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="53.5231%" y="549" width="0.0114%" height="15" fill="rgb(222,145,49)" fg:x="60784" fg:w="13"/><text x="53.7731%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="53.5231%" y="533" width="0.0114%" height="15" fill="rgb(218,121,17)" fg:x="60784" fg:w="13"/><text x="53.7731%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (934 samples, 0.82%)</title><rect x="52.8618%" y="613" width="0.8224%" height="15" fill="rgb(244,50,7)" fg:x="60033" fg:w="934"/><text x="53.1118%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (934 samples, 0.82%)</title><rect x="52.8618%" y="597" width="0.8224%" height="15" fill="rgb(246,229,37)" fg:x="60033" fg:w="934"/><text x="53.1118%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (918 samples, 0.81%)</title><rect x="52.8759%" y="581" width="0.8083%" height="15" fill="rgb(225,18,5)" fg:x="60049" fg:w="918"/><text x="53.1259%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (160 samples, 0.14%)</title><rect x="53.5433%" y="565" width="0.1409%" height="15" fill="rgb(213,204,8)" fg:x="60807" fg:w="160"/><text x="53.7933%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (160 samples, 0.14%)</title><rect x="53.5433%" y="549" width="0.1409%" height="15" fill="rgb(238,103,6)" fg:x="60807" fg:w="160"/><text x="53.7933%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,346 samples, 1.19%)</title><rect x="52.5060%" y="741" width="1.1852%" height="15" fill="rgb(222,25,35)" fg:x="59629" fg:w="1346"/><text x="52.7560%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (963 samples, 0.85%)</title><rect x="52.8433%" y="725" width="0.8480%" height="15" fill="rgb(213,203,35)" fg:x="60012" fg:w="963"/><text x="53.0933%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (963 samples, 0.85%)</title><rect x="52.8433%" y="709" width="0.8480%" height="15" fill="rgb(221,79,53)" fg:x="60012" fg:w="963"/><text x="53.0933%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (963 samples, 0.85%)</title><rect x="52.8433%" y="693" width="0.8480%" height="15" fill="rgb(243,200,35)" fg:x="60012" fg:w="963"/><text x="53.0933%" y="703.50"></text></g><g><title>alloc::alloc::alloc (963 samples, 0.85%)</title><rect x="52.8433%" y="677" width="0.8480%" height="15" fill="rgb(248,60,25)" fg:x="60012" fg:w="963"/><text x="53.0933%" y="687.50"></text></g><g><title>__rg_alloc (963 samples, 0.85%)</title><rect x="52.8433%" y="661" width="0.8480%" height="15" fill="rgb(227,53,46)" fg:x="60012" fg:w="963"/><text x="53.0933%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (963 samples, 0.85%)</title><rect x="52.8433%" y="645" width="0.8480%" height="15" fill="rgb(216,120,32)" fg:x="60012" fg:w="963"/><text x="53.0933%" y="655.50"></text></g><g><title>rust_alloc (957 samples, 0.84%)</title><rect x="52.8486%" y="629" width="0.8427%" height="15" fill="rgb(220,134,1)" fg:x="60018" fg:w="957"/><text x="53.0986%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="53.6983%" y="645" width="0.0176%" height="15" fill="rgb(237,168,5)" fg:x="60983" fg:w="20"/><text x="53.9483%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (23 samples, 0.02%)</title><rect x="53.6983%" y="709" width="0.0203%" height="15" fill="rgb(231,100,33)" fg:x="60983" fg:w="23"/><text x="53.9483%" y="719.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="53.6983%" y="693" width="0.0203%" height="15" fill="rgb(236,177,47)" fg:x="60983" fg:w="23"/><text x="53.9483%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (23 samples, 0.02%)</title><rect x="53.6983%" y="677" width="0.0203%" height="15" fill="rgb(235,7,49)" fg:x="60983" fg:w="23"/><text x="53.9483%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="53.6983%" y="661" width="0.0203%" height="15" fill="rgb(232,119,22)" fg:x="60983" fg:w="23"/><text x="53.9483%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="53.6912%" y="725" width="0.0352%" height="15" fill="rgb(254,73,53)" fg:x="60975" fg:w="40"/><text x="53.9412%" y="735.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="53.7485%" y="629" width="0.0106%" height="15" fill="rgb(251,35,20)" fg:x="61040" fg:w="12"/><text x="53.9985%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (20 samples, 0.02%)</title><rect x="53.7819%" y="581" width="0.0176%" height="15" fill="rgb(241,119,20)" fg:x="61078" fg:w="20"/><text x="54.0319%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="53.7837%" y="565" width="0.0158%" height="15" fill="rgb(207,102,14)" fg:x="61080" fg:w="18"/><text x="54.0337%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (51 samples, 0.04%)</title><rect x="53.7652%" y="629" width="0.0449%" height="15" fill="rgb(248,201,50)" fg:x="61059" fg:w="51"/><text x="54.0152%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (51 samples, 0.04%)</title><rect x="53.7652%" y="613" width="0.0449%" height="15" fill="rgb(222,185,44)" fg:x="61059" fg:w="51"/><text x="54.0152%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (51 samples, 0.04%)</title><rect x="53.7652%" y="597" width="0.0449%" height="15" fill="rgb(218,107,18)" fg:x="61059" fg:w="51"/><text x="54.0152%" y="607.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="53.7996%" y="581" width="0.0106%" height="15" fill="rgb(237,177,39)" fg:x="61098" fg:w="12"/><text x="54.0496%" y="591.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="53.7996%" y="565" width="0.0106%" height="15" fill="rgb(246,69,6)" fg:x="61098" fg:w="12"/><text x="54.0496%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (83 samples, 0.07%)</title><rect x="53.7485%" y="661" width="0.0731%" height="15" fill="rgb(234,208,37)" fg:x="61040" fg:w="83"/><text x="53.9985%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (83 samples, 0.07%)</title><rect x="53.7485%" y="645" width="0.0731%" height="15" fill="rgb(225,4,6)" fg:x="61040" fg:w="83"/><text x="53.9985%" y="655.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="53.8101%" y="629" width="0.0114%" height="15" fill="rgb(233,45,0)" fg:x="61110" fg:w="13"/><text x="54.0601%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (91 samples, 0.08%)</title><rect x="53.7485%" y="693" width="0.0801%" height="15" fill="rgb(226,136,5)" fg:x="61040" fg:w="91"/><text x="53.9985%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (91 samples, 0.08%)</title><rect x="53.7485%" y="677" width="0.0801%" height="15" fill="rgb(211,91,47)" fg:x="61040" fg:w="91"/><text x="53.9985%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (109 samples, 0.10%)</title><rect x="53.7362%" y="709" width="0.0960%" height="15" fill="rgb(242,88,51)" fg:x="61026" fg:w="109"/><text x="53.9862%" y="719.50"></text></g><g><title>rust_dealloc (124 samples, 0.11%)</title><rect x="53.7265%" y="725" width="0.1092%" height="15" fill="rgb(230,91,28)" fg:x="61015" fg:w="124"/><text x="53.9765%" y="735.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (29 samples, 0.03%)</title><rect x="53.8409%" y="709" width="0.0255%" height="15" fill="rgb(254,186,29)" fg:x="61145" fg:w="29"/><text x="54.0909%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (204 samples, 0.18%)</title><rect x="53.6912%" y="741" width="0.1796%" height="15" fill="rgb(238,6,4)" fg:x="60975" fg:w="204"/><text x="53.9412%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (40 samples, 0.04%)</title><rect x="53.8357%" y="725" width="0.0352%" height="15" fill="rgb(221,151,16)" fg:x="61139" fg:w="40"/><text x="54.0857%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="53.8779%" y="741" width="0.0106%" height="15" fill="rgb(251,143,52)" fg:x="61187" fg:w="12"/><text x="54.1279%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt; (12 samples, 0.01%)</title><rect x="53.8779%" y="725" width="0.0106%" height="15" fill="rgb(206,90,15)" fg:x="61187" fg:w="12"/><text x="54.1279%" y="735.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (56 samples, 0.05%)</title><rect x="53.8955%" y="741" width="0.0493%" height="15" fill="rgb(218,35,8)" fg:x="61207" fg:w="56"/><text x="54.1455%" y="751.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (56 samples, 0.05%)</title><rect x="53.8955%" y="725" width="0.0493%" height="15" fill="rgb(239,215,6)" fg:x="61207" fg:w="56"/><text x="54.1455%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (56 samples, 0.05%)</title><rect x="53.8955%" y="709" width="0.0493%" height="15" fill="rgb(245,116,39)" fg:x="61207" fg:w="56"/><text x="54.1455%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (56 samples, 0.05%)</title><rect x="53.8955%" y="693" width="0.0493%" height="15" fill="rgb(242,65,28)" fg:x="61207" fg:w="56"/><text x="54.1455%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (33 samples, 0.03%)</title><rect x="53.9158%" y="677" width="0.0291%" height="15" fill="rgb(252,132,53)" fg:x="61230" fg:w="33"/><text x="54.1658%" y="687.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (33 samples, 0.03%)</title><rect x="53.9158%" y="661" width="0.0291%" height="15" fill="rgb(224,159,50)" fg:x="61230" fg:w="33"/><text x="54.1658%" y="671.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (33 samples, 0.03%)</title><rect x="53.9158%" y="645" width="0.0291%" height="15" fill="rgb(224,93,4)" fg:x="61230" fg:w="33"/><text x="54.1658%" y="655.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (31 samples, 0.03%)</title><rect x="53.9175%" y="629" width="0.0273%" height="15" fill="rgb(208,81,34)" fg:x="61232" fg:w="31"/><text x="54.1675%" y="639.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (21 samples, 0.02%)</title><rect x="53.9264%" y="613" width="0.0185%" height="15" fill="rgb(233,92,54)" fg:x="61242" fg:w="21"/><text x="54.1764%" y="623.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,844 samples, 6.91%)</title><rect x="47.0713%" y="821" width="6.9070%" height="15" fill="rgb(237,21,14)" fg:x="53457" fg:w="7844"/><text x="47.3213%" y="831.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,844 samples, 6.91%)</title><rect x="47.0713%" y="805" width="6.9070%" height="15" fill="rgb(249,128,51)" fg:x="53457" fg:w="7844"/><text x="47.3213%" y="815.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,417 samples, 3.01%)</title><rect x="50.9695%" y="789" width="3.0088%" height="15" fill="rgb(223,129,24)" fg:x="57884" fg:w="3417"/><text x="51.2195%" y="799.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,417 samples, 3.01%)</title><rect x="50.9695%" y="773" width="3.0088%" height="15" fill="rgb(231,168,25)" fg:x="57884" fg:w="3417"/><text x="51.2195%" y="783.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,391 samples, 2.99%)</title><rect x="50.9924%" y="757" width="2.9859%" height="15" fill="rgb(224,39,20)" fg:x="57910" fg:w="3391"/><text x="51.2424%" y="767.50">tre..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (38 samples, 0.03%)</title><rect x="53.9448%" y="741" width="0.0335%" height="15" fill="rgb(225,152,53)" fg:x="61263" fg:w="38"/><text x="54.1948%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (38 samples, 0.03%)</title><rect x="53.9448%" y="725" width="0.0335%" height="15" fill="rgb(252,17,24)" fg:x="61263" fg:w="38"/><text x="54.1948%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (38 samples, 0.03%)</title><rect x="53.9448%" y="709" width="0.0335%" height="15" fill="rgb(250,114,30)" fg:x="61263" fg:w="38"/><text x="54.1948%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (26 samples, 0.02%)</title><rect x="53.9554%" y="693" width="0.0229%" height="15" fill="rgb(229,5,4)" fg:x="61275" fg:w="26"/><text x="54.2054%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (209 samples, 0.18%)</title><rect x="54.0144%" y="789" width="0.1840%" height="15" fill="rgb(225,176,49)" fg:x="61342" fg:w="209"/><text x="54.2644%" y="799.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (37 samples, 0.03%)</title><rect x="54.3631%" y="773" width="0.0326%" height="15" fill="rgb(224,221,49)" fg:x="61738" fg:w="37"/><text x="54.6131%" y="783.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (31 samples, 0.03%)</title><rect x="54.3957%" y="773" width="0.0273%" height="15" fill="rgb(253,169,27)" fg:x="61775" fg:w="31"/><text x="54.6457%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.05%)</title><rect x="54.4291%" y="757" width="0.0528%" height="15" fill="rgb(211,206,16)" fg:x="61813" fg:w="60"/><text x="54.6791%" y="767.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (14 samples, 0.01%)</title><rect x="54.4696%" y="741" width="0.0123%" height="15" fill="rgb(244,87,35)" fg:x="61859" fg:w="14"/><text x="54.7196%" y="751.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (251 samples, 0.22%)</title><rect x="54.4291%" y="773" width="0.2210%" height="15" fill="rgb(246,28,10)" fg:x="61813" fg:w="251"/><text x="54.6791%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (191 samples, 0.17%)</title><rect x="54.4820%" y="757" width="0.1682%" height="15" fill="rgb(229,12,44)" fg:x="61873" fg:w="191"/><text x="54.7320%" y="767.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (190 samples, 0.17%)</title><rect x="54.4829%" y="741" width="0.1673%" height="15" fill="rgb(210,145,37)" fg:x="61874" fg:w="190"/><text x="54.7329%" y="751.50"></text></g><g><title>core::ptr::read (190 samples, 0.17%)</title><rect x="54.4829%" y="725" width="0.1673%" height="15" fill="rgb(227,112,52)" fg:x="61874" fg:w="190"/><text x="54.7329%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (189 samples, 0.17%)</title><rect x="54.4837%" y="709" width="0.1664%" height="15" fill="rgb(238,155,34)" fg:x="61875" fg:w="189"/><text x="54.7337%" y="719.50"></text></g><g><title>rust_alloc (50 samples, 0.04%)</title><rect x="54.6845%" y="469" width="0.0440%" height="15" fill="rgb(239,226,36)" fg:x="62103" fg:w="50"/><text x="54.9345%" y="479.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="54.7285%" y="469" width="0.0106%" height="15" fill="rgb(230,16,23)" fg:x="62153" fg:w="12"/><text x="54.9785%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="54.7532%" y="341" width="0.0114%" height="15" fill="rgb(236,171,36)" fg:x="62181" fg:w="13"/><text x="55.0032%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="54.7532%" y="325" width="0.0114%" height="15" fill="rgb(221,22,14)" fg:x="62181" fg:w="13"/><text x="55.0032%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (21 samples, 0.02%)</title><rect x="54.7488%" y="389" width="0.0185%" height="15" fill="rgb(242,43,11)" fg:x="62176" fg:w="21"/><text x="54.9988%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (21 samples, 0.02%)</title><rect x="54.7488%" y="373" width="0.0185%" height="15" fill="rgb(232,69,23)" fg:x="62176" fg:w="21"/><text x="54.9988%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (18 samples, 0.02%)</title><rect x="54.7514%" y="357" width="0.0158%" height="15" fill="rgb(216,180,54)" fg:x="62179" fg:w="18"/><text x="55.0014%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (26 samples, 0.02%)</title><rect x="54.7488%" y="405" width="0.0229%" height="15" fill="rgb(216,5,24)" fg:x="62176" fg:w="26"/><text x="54.9988%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (38 samples, 0.03%)</title><rect x="54.7435%" y="421" width="0.0335%" height="15" fill="rgb(225,89,9)" fg:x="62170" fg:w="38"/><text x="54.9935%" y="431.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (19 samples, 0.02%)</title><rect x="54.7814%" y="405" width="0.0167%" height="15" fill="rgb(243,75,33)" fg:x="62213" fg:w="19"/><text x="55.0314%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (191 samples, 0.17%)</title><rect x="54.7435%" y="453" width="0.1682%" height="15" fill="rgb(247,141,45)" fg:x="62170" fg:w="191"/><text x="54.9935%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (191 samples, 0.17%)</title><rect x="54.7435%" y="437" width="0.1682%" height="15" fill="rgb(232,177,36)" fg:x="62170" fg:w="191"/><text x="54.9935%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (153 samples, 0.13%)</title><rect x="54.7770%" y="421" width="0.1347%" height="15" fill="rgb(219,125,36)" fg:x="62208" fg:w="153"/><text x="55.0270%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (129 samples, 0.11%)</title><rect x="54.7981%" y="405" width="0.1136%" height="15" fill="rgb(227,94,9)" fg:x="62232" fg:w="129"/><text x="55.0481%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (129 samples, 0.11%)</title><rect x="54.7981%" y="389" width="0.1136%" height="15" fill="rgb(240,34,52)" fg:x="62232" fg:w="129"/><text x="55.0481%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (129 samples, 0.11%)</title><rect x="54.7981%" y="373" width="0.1136%" height="15" fill="rgb(216,45,12)" fg:x="62232" fg:w="129"/><text x="55.0481%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::empty (116 samples, 0.10%)</title><rect x="54.9170%" y="453" width="0.1021%" height="15" fill="rgb(246,21,19)" fg:x="62367" fg:w="116"/><text x="55.1670%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (116 samples, 0.10%)</title><rect x="54.9170%" y="437" width="0.1021%" height="15" fill="rgb(213,98,42)" fg:x="62367" fg:w="116"/><text x="55.1670%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (1,132 samples, 1.00%)</title><rect x="54.6819%" y="501" width="0.9968%" height="15" fill="rgb(250,136,47)" fg:x="62100" fg:w="1132"/><text x="54.9319%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (1,129 samples, 0.99%)</title><rect x="54.6845%" y="485" width="0.9941%" height="15" fill="rgb(251,124,27)" fg:x="62103" fg:w="1129"/><text x="54.9345%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (1,067 samples, 0.94%)</title><rect x="54.7391%" y="469" width="0.9395%" height="15" fill="rgb(229,180,14)" fg:x="62165" fg:w="1067"/><text x="54.9891%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (749 samples, 0.66%)</title><rect x="55.0191%" y="453" width="0.6595%" height="15" fill="rgb(245,216,25)" fg:x="62483" fg:w="749"/><text x="55.2691%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (749 samples, 0.66%)</title><rect x="55.0191%" y="437" width="0.6595%" height="15" fill="rgb(251,43,5)" fg:x="62483" fg:w="749"/><text x="55.2691%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,175 samples, 1.03%)</title><rect x="54.6519%" y="645" width="1.0346%" height="15" fill="rgb(250,128,24)" fg:x="62066" fg:w="1175"/><text x="54.9019%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,175 samples, 1.03%)</title><rect x="54.6519%" y="629" width="1.0346%" height="15" fill="rgb(217,117,27)" fg:x="62066" fg:w="1175"/><text x="54.9019%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,167 samples, 1.03%)</title><rect x="54.6590%" y="613" width="1.0276%" height="15" fill="rgb(245,147,4)" fg:x="62074" fg:w="1167"/><text x="54.9090%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,167 samples, 1.03%)</title><rect x="54.6590%" y="597" width="1.0276%" height="15" fill="rgb(242,201,35)" fg:x="62074" fg:w="1167"/><text x="54.9090%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,167 samples, 1.03%)</title><rect x="54.6590%" y="581" width="1.0276%" height="15" fill="rgb(218,181,1)" fg:x="62074" fg:w="1167"/><text x="54.9090%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1,153 samples, 1.02%)</title><rect x="54.6713%" y="565" width="1.0153%" height="15" fill="rgb(222,6,29)" fg:x="62088" fg:w="1153"/><text x="54.9213%" y="575.50"></text></g><g><title>__rg_alloc (1,153 samples, 1.02%)</title><rect x="54.6713%" y="549" width="1.0153%" height="15" fill="rgb(208,186,3)" fg:x="62088" fg:w="1153"/><text x="54.9213%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,153 samples, 1.02%)</title><rect x="54.6713%" y="533" width="1.0153%" height="15" fill="rgb(216,36,26)" fg:x="62088" fg:w="1153"/><text x="54.9213%" y="543.50"></text></g><g><title>rust_alloc (1,149 samples, 1.01%)</title><rect x="54.6748%" y="517" width="1.0117%" height="15" fill="rgb(248,201,23)" fg:x="62092" fg:w="1149"/><text x="54.9248%" y="527.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1,231 samples, 1.08%)</title><rect x="54.6519%" y="773" width="1.0840%" height="15" fill="rgb(251,170,31)" fg:x="62066" fg:w="1231"/><text x="54.9019%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,231 samples, 1.08%)</title><rect x="54.6519%" y="757" width="1.0840%" height="15" fill="rgb(207,110,25)" fg:x="62066" fg:w="1231"/><text x="54.9019%" y="767.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,231 samples, 1.08%)</title><rect x="54.6519%" y="741" width="1.0840%" height="15" fill="rgb(250,54,15)" fg:x="62066" fg:w="1231"/><text x="54.9019%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,231 samples, 1.08%)</title><rect x="54.6519%" y="725" width="1.0840%" height="15" fill="rgb(227,68,33)" fg:x="62066" fg:w="1231"/><text x="54.9019%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,231 samples, 1.08%)</title><rect x="54.6519%" y="709" width="1.0840%" height="15" fill="rgb(238,34,41)" fg:x="62066" fg:w="1231"/><text x="54.9019%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,231 samples, 1.08%)</title><rect x="54.6519%" y="693" width="1.0840%" height="15" fill="rgb(220,11,15)" fg:x="62066" fg:w="1231"/><text x="54.9019%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1,231 samples, 1.08%)</title><rect x="54.6519%" y="677" width="1.0840%" height="15" fill="rgb(246,111,35)" fg:x="62066" fg:w="1231"/><text x="54.9019%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,231 samples, 1.08%)</title><rect x="54.6519%" y="661" width="1.0840%" height="15" fill="rgb(209,88,53)" fg:x="62066" fg:w="1231"/><text x="54.9019%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (56 samples, 0.05%)</title><rect x="55.6866%" y="645" width="0.0493%" height="15" fill="rgb(231,185,47)" fg:x="63241" fg:w="56"/><text x="55.9366%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (56 samples, 0.05%)</title><rect x="55.6866%" y="629" width="0.0493%" height="15" fill="rgb(233,154,1)" fg:x="63241" fg:w="56"/><text x="55.9366%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (46 samples, 0.04%)</title><rect x="55.6954%" y="613" width="0.0405%" height="15" fill="rgb(225,15,46)" fg:x="63251" fg:w="46"/><text x="55.9454%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,043 samples, 0.92%)</title><rect x="55.7359%" y="773" width="0.9184%" height="15" fill="rgb(211,135,41)" fg:x="63297" fg:w="1043"/><text x="55.9859%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (14 samples, 0.01%)</title><rect x="56.6543%" y="773" width="0.0123%" height="15" fill="rgb(208,54,0)" fg:x="64340" fg:w="14"/><text x="56.9043%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (12 samples, 0.01%)</title><rect x="56.6560%" y="757" width="0.0106%" height="15" fill="rgb(244,136,14)" fg:x="64342" fg:w="12"/><text x="56.9060%" y="767.50"></text></g><g><title>core::mem::replace (19 samples, 0.02%)</title><rect x="56.6851%" y="741" width="0.0167%" height="15" fill="rgb(241,56,14)" fg:x="64375" fg:w="19"/><text x="56.9351%" y="751.50"></text></g><g><title>core::ptr::write (12 samples, 0.01%)</title><rect x="56.6913%" y="725" width="0.0106%" height="15" fill="rgb(205,80,24)" fg:x="64382" fg:w="12"/><text x="56.9413%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (59 samples, 0.05%)</title><rect x="56.6666%" y="773" width="0.0520%" height="15" fill="rgb(220,57,4)" fg:x="64354" fg:w="59"/><text x="56.9166%" y="783.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.05%)</title><rect x="56.6666%" y="757" width="0.0520%" height="15" fill="rgb(226,193,50)" fg:x="64354" fg:w="59"/><text x="56.9166%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (19 samples, 0.02%)</title><rect x="56.7018%" y="741" width="0.0167%" height="15" fill="rgb(231,168,22)" fg:x="64394" fg:w="19"/><text x="56.9518%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="56.7018%" y="725" width="0.0167%" height="15" fill="rgb(254,215,14)" fg:x="64394" fg:w="19"/><text x="56.9518%" y="735.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (26 samples, 0.02%)</title><rect x="56.7643%" y="725" width="0.0229%" height="15" fill="rgb(211,115,16)" fg:x="64465" fg:w="26"/><text x="57.0143%" y="735.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (240 samples, 0.21%)</title><rect x="56.7450%" y="773" width="0.2113%" height="15" fill="rgb(236,210,16)" fg:x="64443" fg:w="240"/><text x="56.9950%" y="783.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (220 samples, 0.19%)</title><rect x="56.7626%" y="757" width="0.1937%" height="15" fill="rgb(221,94,12)" fg:x="64463" fg:w="220"/><text x="57.0126%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (218 samples, 0.19%)</title><rect x="56.7643%" y="741" width="0.1920%" height="15" fill="rgb(235,218,49)" fg:x="64465" fg:w="218"/><text x="57.0143%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (192 samples, 0.17%)</title><rect x="56.7872%" y="725" width="0.1691%" height="15" fill="rgb(217,114,14)" fg:x="64491" fg:w="192"/><text x="57.0372%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (192 samples, 0.17%)</title><rect x="56.7872%" y="709" width="0.1691%" height="15" fill="rgb(216,145,22)" fg:x="64491" fg:w="192"/><text x="57.0372%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (192 samples, 0.17%)</title><rect x="56.7872%" y="693" width="0.1691%" height="15" fill="rgb(217,112,39)" fg:x="64491" fg:w="192"/><text x="57.0372%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (192 samples, 0.17%)</title><rect x="56.7872%" y="677" width="0.1691%" height="15" fill="rgb(225,85,32)" fg:x="64491" fg:w="192"/><text x="57.0372%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (192 samples, 0.17%)</title><rect x="56.7872%" y="661" width="0.1691%" height="15" fill="rgb(245,209,47)" fg:x="64491" fg:w="192"/><text x="57.0372%" y="671.50"></text></g><g><title>__memcmp_avx2_movbe (127 samples, 0.11%)</title><rect x="56.8445%" y="645" width="0.1118%" height="15" fill="rgb(218,220,15)" fg:x="64556" fg:w="127"/><text x="57.0945%" y="655.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18,854 samples, 16.60%)</title><rect x="40.4188%" y="1109" width="16.6018%" height="15" fill="rgb(222,202,31)" fg:x="45902" fg:w="18854"/><text x="40.6688%" y="1119.50">&lt;futures_lite::future::Or&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,850 samples, 16.60%)</title><rect x="40.4223%" y="1093" width="16.5983%" height="15" fill="rgb(243,203,4)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="1103.50">&lt;core::future::from_genera..</text></g><g><title>async_executor::Executor::run::{{closure}} (18,850 samples, 16.60%)</title><rect x="40.4223%" y="1077" width="16.5983%" height="15" fill="rgb(237,92,17)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="1087.50">async_executor::Executor::..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18,850 samples, 16.60%)</title><rect x="40.4223%" y="1061" width="16.5983%" height="15" fill="rgb(231,119,7)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="1071.50">&lt;futures_lite::future::Or&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,850 samples, 16.60%)</title><rect x="40.4223%" y="1045" width="16.5983%" height="15" fill="rgb(237,82,41)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="1055.50">&lt;core::future::from_genera..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (18,850 samples, 16.60%)</title><rect x="40.4223%" y="1029" width="16.5983%" height="15" fill="rgb(226,81,48)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="1039.50">async_executor::Executor::..</text></g><g><title>async_task::runnable::Runnable::run (18,850 samples, 16.60%)</title><rect x="40.4223%" y="1013" width="16.5983%" height="15" fill="rgb(234,70,51)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="1023.50">async_task::runnable::Runn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (18,850 samples, 16.60%)</title><rect x="40.4223%" y="997" width="16.5983%" height="15" fill="rgb(251,86,4)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="1007.50">async_task::raw::RawTask&lt;F..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (18,850 samples, 16.60%)</title><rect x="40.4223%" y="981" width="16.5983%" height="15" fill="rgb(244,144,28)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="991.50">&lt;core::pin::Pin&lt;P&gt; as core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,850 samples, 16.60%)</title><rect x="40.4223%" y="965" width="16.5983%" height="15" fill="rgb(232,161,39)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="975.50">&lt;core::future::from_genera..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (18,850 samples, 16.60%)</title><rect x="40.4223%" y="949" width="16.5983%" height="15" fill="rgb(247,34,51)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="959.50">async_executor::Executor::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (18,850 samples, 16.60%)</title><rect x="40.4223%" y="933" width="16.5983%" height="15" fill="rgb(225,132,2)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="943.50">&lt;async_std::task::builder:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (18,850 samples, 16.60%)</title><rect x="40.4223%" y="917" width="16.5983%" height="15" fill="rgb(209,159,44)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="927.50">async_std::task::task_loca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18,850 samples, 16.60%)</title><rect x="40.4223%" y="901" width="16.5983%" height="15" fill="rgb(251,214,1)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="911.50">std::thread::local::LocalK..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18,850 samples, 16.60%)</title><rect x="40.4223%" y="885" width="16.5983%" height="15" fill="rgb(247,84,47)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="895.50">std::thread::local::LocalK..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (18,850 samples, 16.60%)</title><rect x="40.4223%" y="869" width="16.5983%" height="15" fill="rgb(240,111,43)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="879.50">async_std::task::task_loca..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (18,850 samples, 16.60%)</title><rect x="40.4223%" y="853" width="16.5983%" height="15" fill="rgb(215,214,35)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="863.50">&lt;async_std::task::builder:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,850 samples, 16.60%)</title><rect x="40.4223%" y="837" width="16.5983%" height="15" fill="rgb(248,207,23)" fg:x="45906" fg:w="18850"/><text x="40.6723%" y="847.50">&lt;core::future::from_genera..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,455 samples, 3.04%)</title><rect x="53.9783%" y="821" width="3.0423%" height="15" fill="rgb(214,186,4)" fg:x="61301" fg:w="3455"/><text x="54.2283%" y="831.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,455 samples, 3.04%)</title><rect x="53.9783%" y="805" width="3.0423%" height="15" fill="rgb(220,133,22)" fg:x="61301" fg:w="3455"/><text x="54.2283%" y="815.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,205 samples, 2.82%)</title><rect x="54.1984%" y="789" width="2.8221%" height="15" fill="rgb(239,134,19)" fg:x="61551" fg:w="3205"/><text x="54.4484%" y="799.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (73 samples, 0.06%)</title><rect x="56.9563%" y="773" width="0.0643%" height="15" fill="rgb(250,140,9)" fg:x="64683" fg:w="73"/><text x="57.2063%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (73 samples, 0.06%)</title><rect x="56.9563%" y="757" width="0.0643%" height="15" fill="rgb(225,59,14)" fg:x="64683" fg:w="73"/><text x="57.2063%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (73 samples, 0.06%)</title><rect x="56.9563%" y="741" width="0.0643%" height="15" fill="rgb(214,152,51)" fg:x="64683" fg:w="73"/><text x="57.2063%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (54 samples, 0.05%)</title><rect x="56.9730%" y="725" width="0.0475%" height="15" fill="rgb(251,227,43)" fg:x="64702" fg:w="54"/><text x="57.2230%" y="735.50"></text></g><g><title>async_io::driver::block_on (18,859 samples, 16.61%)</title><rect x="40.4179%" y="1125" width="16.6062%" height="15" fill="rgb(241,96,17)" fg:x="45901" fg:w="18859"/><text x="40.6679%" y="1135.50">async_io::driver::block_on</text></g><g><title>__memcpy_avx_unaligned_erms (715 samples, 0.63%)</title><rect x="57.1491%" y="869" width="0.6296%" height="15" fill="rgb(234,198,43)" fg:x="64902" fg:w="715"/><text x="57.3991%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (763 samples, 0.67%)</title><rect x="57.1183%" y="885" width="0.6719%" height="15" fill="rgb(220,108,29)" fg:x="64867" fg:w="763"/><text x="57.3683%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="57.7787%" y="869" width="0.0114%" height="15" fill="rgb(226,163,33)" fg:x="65617" fg:w="13"/><text x="58.0287%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,044 samples, 0.92%)</title><rect x="57.0629%" y="901" width="0.9193%" height="15" fill="rgb(205,194,45)" fg:x="64804" fg:w="1044"/><text x="57.3129%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (218 samples, 0.19%)</title><rect x="57.7902%" y="885" width="0.1920%" height="15" fill="rgb(206,143,44)" fg:x="65630" fg:w="218"/><text x="58.0402%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,087 samples, 0.96%)</title><rect x="57.0364%" y="933" width="0.9572%" height="15" fill="rgb(236,136,36)" fg:x="64774" fg:w="1087"/><text x="57.2864%" y="943.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,087 samples, 0.96%)</title><rect x="57.0364%" y="917" width="0.9572%" height="15" fill="rgb(249,172,42)" fg:x="64774" fg:w="1087"/><text x="57.2864%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (12 samples, 0.01%)</title><rect x="57.9830%" y="901" width="0.0106%" height="15" fill="rgb(216,139,23)" fg:x="65849" fg:w="12"/><text x="58.2330%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (77 samples, 0.07%)</title><rect x="58.0121%" y="597" width="0.0678%" height="15" fill="rgb(207,166,20)" fg:x="65882" fg:w="77"/><text x="58.2621%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (70 samples, 0.06%)</title><rect x="58.0182%" y="581" width="0.0616%" height="15" fill="rgb(210,209,22)" fg:x="65889" fg:w="70"/><text x="58.2682%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (62 samples, 0.05%)</title><rect x="58.0253%" y="565" width="0.0546%" height="15" fill="rgb(232,118,20)" fg:x="65897" fg:w="62"/><text x="58.2753%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (62 samples, 0.05%)</title><rect x="58.0253%" y="549" width="0.0546%" height="15" fill="rgb(238,113,42)" fg:x="65897" fg:w="62"/><text x="58.2753%" y="559.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (62 samples, 0.05%)</title><rect x="58.0253%" y="533" width="0.0546%" height="15" fill="rgb(231,42,5)" fg:x="65897" fg:w="62"/><text x="58.2753%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (37 samples, 0.03%)</title><rect x="58.0473%" y="517" width="0.0326%" height="15" fill="rgb(243,166,24)" fg:x="65922" fg:w="37"/><text x="58.2973%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (37 samples, 0.03%)</title><rect x="58.0473%" y="501" width="0.0326%" height="15" fill="rgb(237,226,12)" fg:x="65922" fg:w="37"/><text x="58.2973%" y="511.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="58.0684%" y="485" width="0.0114%" height="15" fill="rgb(229,133,24)" fg:x="65946" fg:w="13"/><text x="58.3184%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (13 samples, 0.01%)</title><rect x="58.1081%" y="581" width="0.0114%" height="15" fill="rgb(238,33,43)" fg:x="65991" fg:w="13"/><text x="58.3581%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (599 samples, 0.53%)</title><rect x="58.1195%" y="581" width="0.5274%" height="15" fill="rgb(227,59,38)" fg:x="66004" fg:w="599"/><text x="58.3695%" y="591.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (1,842 samples, 1.62%)</title><rect x="57.0364%" y="949" width="1.6220%" height="15" fill="rgb(230,97,0)" fg:x="64774" fg:w="1842"/><text x="57.2864%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (755 samples, 0.66%)</title><rect x="57.9936%" y="933" width="0.6648%" height="15" fill="rgb(250,173,50)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="943.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (755 samples, 0.66%)</title><rect x="57.9936%" y="917" width="0.6648%" height="15" fill="rgb(240,15,50)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="927.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (755 samples, 0.66%)</title><rect x="57.9936%" y="901" width="0.6648%" height="15" fill="rgb(221,93,22)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (755 samples, 0.66%)</title><rect x="57.9936%" y="885" width="0.6648%" height="15" fill="rgb(245,180,53)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="895.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (755 samples, 0.66%)</title><rect x="57.9936%" y="869" width="0.6648%" height="15" fill="rgb(231,88,51)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="879.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (755 samples, 0.66%)</title><rect x="57.9936%" y="853" width="0.6648%" height="15" fill="rgb(240,58,21)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="863.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (755 samples, 0.66%)</title><rect x="57.9936%" y="837" width="0.6648%" height="15" fill="rgb(237,21,10)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="847.50"></text></g><g><title>std::panic::catch_unwind (755 samples, 0.66%)</title><rect x="57.9936%" y="821" width="0.6648%" height="15" fill="rgb(218,43,11)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="831.50"></text></g><g><title>std::panicking::try (755 samples, 0.66%)</title><rect x="57.9936%" y="805" width="0.6648%" height="15" fill="rgb(218,221,29)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="815.50"></text></g><g><title>std::panicking::try::do_call (755 samples, 0.66%)</title><rect x="57.9936%" y="789" width="0.6648%" height="15" fill="rgb(214,118,42)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (755 samples, 0.66%)</title><rect x="57.9936%" y="773" width="0.6648%" height="15" fill="rgb(251,200,26)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (755 samples, 0.66%)</title><rect x="57.9936%" y="757" width="0.6648%" height="15" fill="rgb(237,101,39)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (755 samples, 0.66%)</title><rect x="57.9936%" y="741" width="0.6648%" height="15" fill="rgb(251,117,11)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="751.50"></text></g><g><title>async_ffi::FfiContext::with_context (755 samples, 0.66%)</title><rect x="57.9936%" y="725" width="0.6648%" height="15" fill="rgb(216,223,23)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="735.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (755 samples, 0.66%)</title><rect x="57.9936%" y="709" width="0.6648%" height="15" fill="rgb(251,54,12)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (755 samples, 0.66%)</title><rect x="57.9936%" y="693" width="0.6648%" height="15" fill="rgb(254,176,54)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="703.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (755 samples, 0.66%)</title><rect x="57.9936%" y="677" width="0.6648%" height="15" fill="rgb(210,32,8)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (755 samples, 0.66%)</title><rect x="57.9936%" y="661" width="0.6648%" height="15" fill="rgb(235,52,38)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="671.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (755 samples, 0.66%)</title><rect x="57.9936%" y="645" width="0.6648%" height="15" fill="rgb(231,4,44)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="655.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (755 samples, 0.66%)</title><rect x="57.9936%" y="629" width="0.6648%" height="15" fill="rgb(249,2,32)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (755 samples, 0.66%)</title><rect x="57.9936%" y="613" width="0.6648%" height="15" fill="rgb(224,65,26)" fg:x="65861" fg:w="755"/><text x="58.2436%" y="623.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (657 samples, 0.58%)</title><rect x="58.0799%" y="597" width="0.5785%" height="15" fill="rgb(250,73,40)" fg:x="65959" fg:w="657"/><text x="58.3299%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (110 samples, 0.10%)</title><rect x="58.6725%" y="853" width="0.0969%" height="15" fill="rgb(253,177,16)" fg:x="66632" fg:w="110"/><text x="58.9225%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (376 samples, 0.33%)</title><rect x="59.0318%" y="773" width="0.3311%" height="15" fill="rgb(217,32,34)" fg:x="67040" fg:w="376"/><text x="59.2818%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (376 samples, 0.33%)</title><rect x="59.0318%" y="757" width="0.3311%" height="15" fill="rgb(212,7,10)" fg:x="67040" fg:w="376"/><text x="59.2818%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (398 samples, 0.35%)</title><rect x="59.3628%" y="773" width="0.3505%" height="15" fill="rgb(245,89,8)" fg:x="67416" fg:w="398"/><text x="59.6128%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (394 samples, 0.35%)</title><rect x="59.3664%" y="757" width="0.3469%" height="15" fill="rgb(237,16,53)" fg:x="67420" fg:w="394"/><text x="59.6164%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (929 samples, 0.82%)</title><rect x="58.9014%" y="805" width="0.8180%" height="15" fill="rgb(250,204,30)" fg:x="66892" fg:w="929"/><text x="59.1514%" y="815.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (862 samples, 0.76%)</title><rect x="58.9604%" y="789" width="0.7590%" height="15" fill="rgb(208,77,27)" fg:x="66959" fg:w="862"/><text x="59.2104%" y="799.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (81 samples, 0.07%)</title><rect x="59.7388%" y="709" width="0.0713%" height="15" fill="rgb(250,204,28)" fg:x="67843" fg:w="81"/><text x="59.9888%" y="719.50"></text></g><g><title>__GI___lll_lock_wake (14 samples, 0.01%)</title><rect x="59.7978%" y="693" width="0.0123%" height="15" fill="rgb(244,63,21)" fg:x="67910" fg:w="14"/><text x="60.0478%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (88 samples, 0.08%)</title><rect x="59.7335%" y="789" width="0.0775%" height="15" fill="rgb(236,85,44)" fg:x="67837" fg:w="88"/><text x="59.9835%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (85 samples, 0.07%)</title><rect x="59.7362%" y="773" width="0.0748%" height="15" fill="rgb(215,98,4)" fg:x="67840" fg:w="85"/><text x="59.9862%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (85 samples, 0.07%)</title><rect x="59.7362%" y="757" width="0.0748%" height="15" fill="rgb(235,38,11)" fg:x="67840" fg:w="85"/><text x="59.9862%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (83 samples, 0.07%)</title><rect x="59.7379%" y="741" width="0.0731%" height="15" fill="rgb(254,186,25)" fg:x="67842" fg:w="83"/><text x="59.9879%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (82 samples, 0.07%)</title><rect x="59.7388%" y="725" width="0.0722%" height="15" fill="rgb(225,55,31)" fg:x="67843" fg:w="82"/><text x="59.9888%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (40 samples, 0.04%)</title><rect x="59.8110%" y="789" width="0.0352%" height="15" fill="rgb(211,15,21)" fg:x="67925" fg:w="40"/><text x="60.0610%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (40 samples, 0.04%)</title><rect x="59.8110%" y="773" width="0.0352%" height="15" fill="rgb(215,187,41)" fg:x="67925" fg:w="40"/><text x="60.0610%" y="783.50"></text></g><g><title>event_listener::Inner::lock (143 samples, 0.13%)</title><rect x="59.8498%" y="789" width="0.1259%" height="15" fill="rgb(248,69,32)" fg:x="67969" fg:w="143"/><text x="60.0998%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (141 samples, 0.12%)</title><rect x="59.8515%" y="773" width="0.1242%" height="15" fill="rgb(252,102,52)" fg:x="67971" fg:w="141"/><text x="60.1015%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (135 samples, 0.12%)</title><rect x="59.8568%" y="757" width="0.1189%" height="15" fill="rgb(253,140,32)" fg:x="67977" fg:w="135"/><text x="60.1068%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (132 samples, 0.12%)</title><rect x="59.8595%" y="741" width="0.1162%" height="15" fill="rgb(216,56,42)" fg:x="67980" fg:w="132"/><text x="60.1095%" y="751.50"></text></g><g><title>___pthread_mutex_lock (132 samples, 0.12%)</title><rect x="59.8595%" y="725" width="0.1162%" height="15" fill="rgb(216,184,14)" fg:x="67980" fg:w="132"/><text x="60.1095%" y="735.50"></text></g><g><title>__GI___lll_lock_wait (20 samples, 0.02%)</title><rect x="59.9581%" y="709" width="0.0176%" height="15" fill="rgb(237,187,27)" fg:x="68092" fg:w="20"/><text x="60.2081%" y="719.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (16 samples, 0.01%)</title><rect x="59.9968%" y="757" width="0.0141%" height="15" fill="rgb(219,65,3)" fg:x="68136" fg:w="16"/><text x="60.2468%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.01%)</title><rect x="59.9968%" y="741" width="0.0141%" height="15" fill="rgb(245,83,25)" fg:x="68136" fg:w="16"/><text x="60.2468%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.01%)</title><rect x="59.9968%" y="725" width="0.0141%" height="15" fill="rgb(214,205,45)" fg:x="68136" fg:w="16"/><text x="60.2468%" y="735.50"></text></g><g><title>async_executor::Sleepers::notify (12 samples, 0.01%)</title><rect x="60.0171%" y="693" width="0.0106%" height="15" fill="rgb(241,20,18)" fg:x="68159" fg:w="12"/><text x="60.2671%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (66 samples, 0.06%)</title><rect x="60.0276%" y="693" width="0.0581%" height="15" fill="rgb(232,163,23)" fg:x="68171" fg:w="66"/><text x="60.2776%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.06%)</title><rect x="60.0276%" y="677" width="0.0581%" height="15" fill="rgb(214,5,46)" fg:x="68171" fg:w="66"/><text x="60.2776%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (65 samples, 0.06%)</title><rect x="60.0285%" y="661" width="0.0572%" height="15" fill="rgb(229,78,17)" fg:x="68172" fg:w="65"/><text x="60.2785%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (64 samples, 0.06%)</title><rect x="60.0294%" y="645" width="0.0564%" height="15" fill="rgb(248,89,10)" fg:x="68173" fg:w="64"/><text x="60.2794%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (64 samples, 0.06%)</title><rect x="60.0294%" y="629" width="0.0564%" height="15" fill="rgb(248,54,15)" fg:x="68173" fg:w="64"/><text x="60.2794%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (51 samples, 0.04%)</title><rect x="60.0858%" y="693" width="0.0449%" height="15" fill="rgb(223,116,6)" fg:x="68237" fg:w="51"/><text x="60.3358%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (51 samples, 0.04%)</title><rect x="60.0858%" y="677" width="0.0449%" height="15" fill="rgb(205,125,38)" fg:x="68237" fg:w="51"/><text x="60.3358%" y="687.50"></text></g><g><title>async_executor::State::notify (245 samples, 0.22%)</title><rect x="60.0171%" y="709" width="0.2157%" height="15" fill="rgb(251,78,38)" fg:x="68159" fg:w="245"/><text x="60.2671%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (115 samples, 0.10%)</title><rect x="60.1316%" y="693" width="0.1013%" height="15" fill="rgb(253,78,28)" fg:x="68289" fg:w="115"/><text x="60.3816%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (104 samples, 0.09%)</title><rect x="60.1412%" y="677" width="0.0916%" height="15" fill="rgb(209,120,3)" fg:x="68300" fg:w="104"/><text x="60.3912%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (90 samples, 0.08%)</title><rect x="60.1536%" y="661" width="0.0792%" height="15" fill="rgb(238,229,9)" fg:x="68314" fg:w="90"/><text x="60.4036%" y="671.50"></text></g><g><title>___pthread_mutex_lock (90 samples, 0.08%)</title><rect x="60.1536%" y="645" width="0.0792%" height="15" fill="rgb(253,159,18)" fg:x="68314" fg:w="90"/><text x="60.4036%" y="655.50"></text></g><g><title>__GI___lll_lock_wait (28 samples, 0.02%)</title><rect x="60.2082%" y="629" width="0.0247%" height="15" fill="rgb(244,42,34)" fg:x="68376" fg:w="28"/><text x="60.4582%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (89 samples, 0.08%)</title><rect x="60.2460%" y="677" width="0.0784%" height="15" fill="rgb(224,8,7)" fg:x="68419" fg:w="89"/><text x="60.4960%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (89 samples, 0.08%)</title><rect x="60.2460%" y="661" width="0.0784%" height="15" fill="rgb(210,201,45)" fg:x="68419" fg:w="89"/><text x="60.4960%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (24 samples, 0.02%)</title><rect x="60.3253%" y="677" width="0.0211%" height="15" fill="rgb(252,185,21)" fg:x="68509" fg:w="24"/><text x="60.5753%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_or (24 samples, 0.02%)</title><rect x="60.3253%" y="661" width="0.0211%" height="15" fill="rgb(223,131,1)" fg:x="68509" fg:w="24"/><text x="60.5753%" y="671.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (383 samples, 0.34%)</title><rect x="60.0162%" y="725" width="0.3372%" height="15" fill="rgb(245,141,16)" fg:x="68158" fg:w="383"/><text x="60.2662%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (137 samples, 0.12%)</title><rect x="60.2328%" y="709" width="0.1206%" height="15" fill="rgb(229,55,45)" fg:x="68404" fg:w="137"/><text x="60.4828%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (130 samples, 0.11%)</title><rect x="60.2390%" y="693" width="0.1145%" height="15" fill="rgb(208,92,15)" fg:x="68411" fg:w="130"/><text x="60.4890%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (93 samples, 0.08%)</title><rect x="60.3535%" y="725" width="0.0819%" height="15" fill="rgb(234,185,47)" fg:x="68541" fg:w="93"/><text x="60.6035%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (93 samples, 0.08%)</title><rect x="60.3535%" y="709" width="0.0819%" height="15" fill="rgb(253,104,50)" fg:x="68541" fg:w="93"/><text x="60.6035%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (27 samples, 0.02%)</title><rect x="60.4353%" y="725" width="0.0238%" height="15" fill="rgb(205,70,7)" fg:x="68634" fg:w="27"/><text x="60.6853%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (27 samples, 0.02%)</title><rect x="60.4353%" y="709" width="0.0238%" height="15" fill="rgb(240,178,43)" fg:x="68634" fg:w="27"/><text x="60.6853%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (54 samples, 0.05%)</title><rect x="60.4987%" y="661" width="0.0475%" height="15" fill="rgb(214,112,2)" fg:x="68706" fg:w="54"/><text x="60.7487%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_swap (54 samples, 0.05%)</title><rect x="60.4987%" y="645" width="0.0475%" height="15" fill="rgb(206,46,17)" fg:x="68706" fg:w="54"/><text x="60.7487%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (42 samples, 0.04%)</title><rect x="60.5463%" y="661" width="0.0370%" height="15" fill="rgb(225,220,16)" fg:x="68760" fg:w="42"/><text x="60.7963%" y="671.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (42 samples, 0.04%)</title><rect x="60.5463%" y="645" width="0.0370%" height="15" fill="rgb(238,65,40)" fg:x="68760" fg:w="42"/><text x="60.7963%" y="655.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (42 samples, 0.04%)</title><rect x="60.5463%" y="629" width="0.0370%" height="15" fill="rgb(230,151,21)" fg:x="68760" fg:w="42"/><text x="60.7963%" y="639.50"></text></g><g><title>__GI___pthread_cond_signal (42 samples, 0.04%)</title><rect x="60.5463%" y="613" width="0.0370%" height="15" fill="rgb(218,58,49)" fg:x="68760" fg:w="42"/><text x="60.7963%" y="623.50"></text></g><g><title>parking::Inner::unpark (143 samples, 0.13%)</title><rect x="60.4899%" y="677" width="0.1259%" height="15" fill="rgb(219,179,14)" fg:x="68696" fg:w="143"/><text x="60.7399%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (37 samples, 0.03%)</title><rect x="60.5833%" y="661" width="0.0326%" height="15" fill="rgb(223,72,1)" fg:x="68802" fg:w="37"/><text x="60.8333%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (37 samples, 0.03%)</title><rect x="60.5833%" y="645" width="0.0326%" height="15" fill="rgb(238,126,10)" fg:x="68802" fg:w="37"/><text x="60.8333%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (37 samples, 0.03%)</title><rect x="60.5833%" y="629" width="0.0326%" height="15" fill="rgb(224,206,38)" fg:x="68802" fg:w="37"/><text x="60.8333%" y="639.50"></text></g><g><title>___pthread_mutex_lock (37 samples, 0.03%)</title><rect x="60.5833%" y="613" width="0.0326%" height="15" fill="rgb(212,201,54)" fg:x="68802" fg:w="37"/><text x="60.8333%" y="623.50"></text></g><g><title>parking::Unparker::unpark (160 samples, 0.14%)</title><rect x="60.4767%" y="693" width="0.1409%" height="15" fill="rgb(218,154,48)" fg:x="68681" fg:w="160"/><text x="60.7267%" y="703.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (185 samples, 0.16%)</title><rect x="60.4591%" y="709" width="0.1629%" height="15" fill="rgb(232,93,24)" fg:x="68661" fg:w="185"/><text x="60.7091%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (43 samples, 0.04%)</title><rect x="60.6220%" y="709" width="0.0379%" height="15" fill="rgb(245,30,21)" fg:x="68846" fg:w="43"/><text x="60.8720%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="60.6220%" y="693" width="0.0379%" height="15" fill="rgb(242,148,29)" fg:x="68846" fg:w="43"/><text x="60.8720%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (42 samples, 0.04%)</title><rect x="60.6229%" y="677" width="0.0370%" height="15" fill="rgb(244,153,54)" fg:x="68847" fg:w="42"/><text x="60.8729%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (42 samples, 0.04%)</title><rect x="60.6229%" y="661" width="0.0370%" height="15" fill="rgb(252,87,22)" fg:x="68847" fg:w="42"/><text x="60.8729%" y="671.50"></text></g><g><title>event_listener::List::notify (778 samples, 0.69%)</title><rect x="59.9757%" y="789" width="0.6851%" height="15" fill="rgb(210,51,29)" fg:x="68112" fg:w="778"/><text x="60.2257%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (759 samples, 0.67%)</title><rect x="59.9924%" y="773" width="0.6683%" height="15" fill="rgb(242,136,47)" fg:x="68131" fg:w="759"/><text x="60.2424%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (738 samples, 0.65%)</title><rect x="60.0109%" y="757" width="0.6498%" height="15" fill="rgb(238,68,4)" fg:x="68152" fg:w="738"/><text x="60.2609%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (736 samples, 0.65%)</title><rect x="60.0127%" y="741" width="0.6481%" height="15" fill="rgb(242,161,30)" fg:x="68154" fg:w="736"/><text x="60.2627%" y="751.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (229 samples, 0.20%)</title><rect x="60.4591%" y="725" width="0.2016%" height="15" fill="rgb(218,58,44)" fg:x="68661" fg:w="229"/><text x="60.7091%" y="735.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,735 samples, 2.41%)</title><rect x="58.8891%" y="821" width="2.4083%" height="15" fill="rgb(252,125,32)" fg:x="66878" fg:w="2735"/><text x="59.1391%" y="831.50">as..</text></g><g><title>event_listener::Event::notify (1,792 samples, 1.58%)</title><rect x="59.7195%" y="805" width="1.5779%" height="15" fill="rgb(219,178,0)" fg:x="67821" fg:w="1792"/><text x="59.9695%" y="815.50"></text></g><g><title>event_listener::full_fence (723 samples, 0.64%)</title><rect x="60.6608%" y="789" width="0.6366%" height="15" fill="rgb(213,152,7)" fg:x="68890" fg:w="723"/><text x="60.9108%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (715 samples, 0.63%)</title><rect x="60.6678%" y="773" width="0.6296%" height="15" fill="rgb(249,109,34)" fg:x="68898" fg:w="715"/><text x="60.9178%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (715 samples, 0.63%)</title><rect x="60.6678%" y="757" width="0.6296%" height="15" fill="rgb(232,96,21)" fg:x="68898" fg:w="715"/><text x="60.9178%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (28 samples, 0.02%)</title><rect x="61.2974%" y="821" width="0.0247%" height="15" fill="rgb(228,27,39)" fg:x="69613" fg:w="28"/><text x="61.5474%" y="831.50"></text></g><g><title>event_listener::Event::listen (12 samples, 0.01%)</title><rect x="61.3326%" y="821" width="0.0106%" height="15" fill="rgb(211,182,52)" fg:x="69653" fg:w="12"/><text x="61.5826%" y="831.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (3,072 samples, 2.71%)</title><rect x="58.8416%" y="837" width="2.7050%" height="15" fill="rgb(234,178,38)" fg:x="66824" fg:w="3072"/><text x="59.0916%" y="847.50">&lt;a..</text></g><g><title>event_listener::Event::notify (231 samples, 0.20%)</title><rect x="61.3432%" y="821" width="0.2034%" height="15" fill="rgb(221,111,3)" fg:x="69665" fg:w="231"/><text x="61.5932%" y="831.50"></text></g><g><title>event_listener::full_fence (207 samples, 0.18%)</title><rect x="61.3643%" y="805" width="0.1823%" height="15" fill="rgb(228,175,21)" fg:x="69689" fg:w="207"/><text x="61.6143%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (207 samples, 0.18%)</title><rect x="61.3643%" y="789" width="0.1823%" height="15" fill="rgb(228,174,43)" fg:x="69689" fg:w="207"/><text x="61.6143%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (207 samples, 0.18%)</title><rect x="61.3643%" y="773" width="0.1823%" height="15" fill="rgb(211,191,0)" fg:x="69689" fg:w="207"/><text x="61.6143%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,302 samples, 2.91%)</title><rect x="58.6584%" y="869" width="2.9076%" height="15" fill="rgb(253,117,3)" fg:x="66616" fg:w="3302"/><text x="58.9084%" y="879.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (3,176 samples, 2.80%)</title><rect x="58.7693%" y="853" width="2.7966%" height="15" fill="rgb(241,127,19)" fg:x="66742" fg:w="3176"/><text x="59.0193%" y="863.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="61.5466%" y="837" width="0.0194%" height="15" fill="rgb(218,103,12)" fg:x="69896" fg:w="22"/><text x="61.7966%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (12 samples, 0.01%)</title><rect x="61.5554%" y="821" width="0.0106%" height="15" fill="rgb(236,214,43)" fg:x="69906" fg:w="12"/><text x="61.8054%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (12 samples, 0.01%)</title><rect x="61.5554%" y="805" width="0.0106%" height="15" fill="rgb(244,144,19)" fg:x="69906" fg:w="12"/><text x="61.8054%" y="815.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="61.5554%" y="789" width="0.0106%" height="15" fill="rgb(246,188,10)" fg:x="69906" fg:w="12"/><text x="61.8054%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,326 samples, 2.93%)</title><rect x="58.6584%" y="901" width="2.9287%" height="15" fill="rgb(212,193,33)" fg:x="66616" fg:w="3326"/><text x="58.9084%" y="911.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,326 samples, 2.93%)</title><rect x="58.6584%" y="885" width="2.9287%" height="15" fill="rgb(241,51,29)" fg:x="66616" fg:w="3326"/><text x="58.9084%" y="895.50">tr..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (24 samples, 0.02%)</title><rect x="61.5660%" y="869" width="0.0211%" height="15" fill="rgb(211,58,19)" fg:x="69918" fg:w="24"/><text x="61.8160%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="62.5099%" y="885" width="0.0158%" height="15" fill="rgb(229,111,26)" fg:x="70990" fg:w="18"/><text x="62.7599%" y="895.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="62.5258%" y="885" width="0.0211%" height="15" fill="rgb(213,115,40)" fg:x="71008" fg:w="24"/><text x="62.7758%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="63.1280%" y="837" width="0.0123%" height="15" fill="rgb(209,56,44)" fg:x="71692" fg:w="14"/><text x="63.3780%" y="847.50"></text></g><g><title>aligned_size (16 samples, 0.01%)</title><rect x="63.1686%" y="613" width="0.0141%" height="15" fill="rgb(230,108,32)" fg:x="71738" fg:w="16"/><text x="63.4186%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="63.2126%" y="565" width="0.0370%" height="15" fill="rgb(216,165,31)" fg:x="71788" fg:w="42"/><text x="63.4626%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (42 samples, 0.04%)</title><rect x="63.2126%" y="549" width="0.0370%" height="15" fill="rgb(218,122,21)" fg:x="71788" fg:w="42"/><text x="63.4626%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (35 samples, 0.03%)</title><rect x="63.2187%" y="533" width="0.0308%" height="15" fill="rgb(223,224,47)" fg:x="71795" fg:w="35"/><text x="63.4687%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (28 samples, 0.02%)</title><rect x="63.2249%" y="517" width="0.0247%" height="15" fill="rgb(238,102,44)" fg:x="71802" fg:w="28"/><text x="63.4749%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (28 samples, 0.02%)</title><rect x="63.2249%" y="501" width="0.0247%" height="15" fill="rgb(236,46,40)" fg:x="71802" fg:w="28"/><text x="63.4749%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (28 samples, 0.02%)</title><rect x="63.2249%" y="485" width="0.0247%" height="15" fill="rgb(247,202,50)" fg:x="71802" fg:w="28"/><text x="63.4749%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::empty (94 samples, 0.08%)</title><rect x="63.2557%" y="565" width="0.0828%" height="15" fill="rgb(209,99,20)" fg:x="71837" fg:w="94"/><text x="63.5057%" y="575.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (94 samples, 0.08%)</title><rect x="63.2557%" y="549" width="0.0828%" height="15" fill="rgb(252,27,34)" fg:x="71837" fg:w="94"/><text x="63.5057%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (685 samples, 0.60%)</title><rect x="63.1870%" y="613" width="0.6032%" height="15" fill="rgb(215,206,23)" fg:x="71759" fg:w="685"/><text x="63.4370%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (684 samples, 0.60%)</title><rect x="63.1879%" y="597" width="0.6023%" height="15" fill="rgb(212,135,36)" fg:x="71760" fg:w="684"/><text x="63.4379%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (666 samples, 0.59%)</title><rect x="63.2038%" y="581" width="0.5864%" height="15" fill="rgb(240,189,1)" fg:x="71778" fg:w="666"/><text x="63.4538%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (513 samples, 0.45%)</title><rect x="63.3385%" y="565" width="0.4517%" height="15" fill="rgb(242,56,20)" fg:x="71931" fg:w="513"/><text x="63.5885%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (513 samples, 0.45%)</title><rect x="63.3385%" y="549" width="0.4517%" height="15" fill="rgb(247,132,33)" fg:x="71931" fg:w="513"/><text x="63.5885%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (739 samples, 0.65%)</title><rect x="63.1404%" y="757" width="0.6507%" height="15" fill="rgb(208,149,11)" fg:x="71706" fg:w="739"/><text x="63.3904%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (739 samples, 0.65%)</title><rect x="63.1404%" y="741" width="0.6507%" height="15" fill="rgb(211,33,11)" fg:x="71706" fg:w="739"/><text x="63.3904%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (739 samples, 0.65%)</title><rect x="63.1404%" y="725" width="0.6507%" height="15" fill="rgb(221,29,38)" fg:x="71706" fg:w="739"/><text x="63.3904%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (739 samples, 0.65%)</title><rect x="63.1404%" y="709" width="0.6507%" height="15" fill="rgb(206,182,49)" fg:x="71706" fg:w="739"/><text x="63.3904%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (739 samples, 0.65%)</title><rect x="63.1404%" y="693" width="0.6507%" height="15" fill="rgb(216,140,1)" fg:x="71706" fg:w="739"/><text x="63.3904%" y="703.50"></text></g><g><title>alloc::alloc::alloc (723 samples, 0.64%)</title><rect x="63.1545%" y="677" width="0.6366%" height="15" fill="rgb(232,57,40)" fg:x="71722" fg:w="723"/><text x="63.4045%" y="687.50"></text></g><g><title>__rg_alloc (723 samples, 0.64%)</title><rect x="63.1545%" y="661" width="0.6366%" height="15" fill="rgb(224,186,18)" fg:x="71722" fg:w="723"/><text x="63.4045%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (723 samples, 0.64%)</title><rect x="63.1545%" y="645" width="0.6366%" height="15" fill="rgb(215,121,11)" fg:x="71722" fg:w="723"/><text x="63.4045%" y="655.50"></text></g><g><title>rust_alloc (707 samples, 0.62%)</title><rect x="63.1686%" y="629" width="0.6225%" height="15" fill="rgb(245,147,10)" fg:x="71738" fg:w="707"/><text x="63.4186%" y="639.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (829 samples, 0.73%)</title><rect x="63.1280%" y="853" width="0.7300%" height="15" fill="rgb(238,153,13)" fg:x="71692" fg:w="829"/><text x="63.3780%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (815 samples, 0.72%)</title><rect x="63.1404%" y="837" width="0.7176%" height="15" fill="rgb(233,108,0)" fg:x="71706" fg:w="815"/><text x="63.3904%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (815 samples, 0.72%)</title><rect x="63.1404%" y="821" width="0.7176%" height="15" fill="rgb(212,157,17)" fg:x="71706" fg:w="815"/><text x="63.3904%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (815 samples, 0.72%)</title><rect x="63.1404%" y="805" width="0.7176%" height="15" fill="rgb(225,213,38)" fg:x="71706" fg:w="815"/><text x="63.3904%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (815 samples, 0.72%)</title><rect x="63.1404%" y="789" width="0.7176%" height="15" fill="rgb(248,16,11)" fg:x="71706" fg:w="815"/><text x="63.3904%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (815 samples, 0.72%)</title><rect x="63.1404%" y="773" width="0.7176%" height="15" fill="rgb(241,33,4)" fg:x="71706" fg:w="815"/><text x="63.3904%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (76 samples, 0.07%)</title><rect x="63.7911%" y="757" width="0.0669%" height="15" fill="rgb(222,26,43)" fg:x="72445" fg:w="76"/><text x="64.0411%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (76 samples, 0.07%)</title><rect x="63.7911%" y="741" width="0.0669%" height="15" fill="rgb(243,29,36)" fg:x="72445" fg:w="76"/><text x="64.0411%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (65 samples, 0.06%)</title><rect x="63.8008%" y="725" width="0.0572%" height="15" fill="rgb(241,9,27)" fg:x="72456" fg:w="65"/><text x="64.0508%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (845 samples, 0.74%)</title><rect x="63.1210%" y="869" width="0.7441%" height="15" fill="rgb(205,117,26)" fg:x="71684" fg:w="845"/><text x="63.3710%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (38 samples, 0.03%)</title><rect x="63.8783%" y="853" width="0.0335%" height="15" fill="rgb(209,80,39)" fg:x="72544" fg:w="38"/><text x="64.1283%" y="863.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (38 samples, 0.03%)</title><rect x="63.8783%" y="837" width="0.0335%" height="15" fill="rgb(239,155,6)" fg:x="72544" fg:w="38"/><text x="64.1283%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="63.9531%" y="469" width="0.0123%" height="15" fill="rgb(212,104,12)" fg:x="72629" fg:w="14"/><text x="64.2031%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="63.9531%" y="453" width="0.0123%" height="15" fill="rgb(234,204,3)" fg:x="72629" fg:w="14"/><text x="64.2031%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="63.9531%" y="437" width="0.0123%" height="15" fill="rgb(251,218,7)" fg:x="72629" fg:w="14"/><text x="64.2031%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="63.9531%" y="421" width="0.0123%" height="15" fill="rgb(221,81,32)" fg:x="72629" fg:w="14"/><text x="64.2031%" y="431.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (13 samples, 0.01%)</title><rect x="63.9540%" y="405" width="0.0114%" height="15" fill="rgb(214,152,26)" fg:x="72630" fg:w="13"/><text x="64.2040%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (83 samples, 0.07%)</title><rect x="63.9417%" y="517" width="0.0731%" height="15" fill="rgb(223,22,3)" fg:x="72616" fg:w="83"/><text x="64.1917%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.07%)</title><rect x="63.9434%" y="501" width="0.0713%" height="15" fill="rgb(207,174,7)" fg:x="72618" fg:w="81"/><text x="64.1934%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (75 samples, 0.07%)</title><rect x="63.9487%" y="485" width="0.0660%" height="15" fill="rgb(224,19,52)" fg:x="72624" fg:w="75"/><text x="64.1987%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (53 samples, 0.05%)</title><rect x="63.9681%" y="469" width="0.0467%" height="15" fill="rgb(228,24,14)" fg:x="72646" fg:w="53"/><text x="64.2181%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (53 samples, 0.05%)</title><rect x="63.9681%" y="453" width="0.0467%" height="15" fill="rgb(230,153,43)" fg:x="72646" fg:w="53"/><text x="64.2181%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (108 samples, 0.10%)</title><rect x="63.9223%" y="661" width="0.0951%" height="15" fill="rgb(231,106,12)" fg:x="72594" fg:w="108"/><text x="64.1723%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (108 samples, 0.10%)</title><rect x="63.9223%" y="645" width="0.0951%" height="15" fill="rgb(215,92,2)" fg:x="72594" fg:w="108"/><text x="64.1723%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (108 samples, 0.10%)</title><rect x="63.9223%" y="629" width="0.0951%" height="15" fill="rgb(249,143,25)" fg:x="72594" fg:w="108"/><text x="64.1723%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (108 samples, 0.10%)</title><rect x="63.9223%" y="613" width="0.0951%" height="15" fill="rgb(252,7,35)" fg:x="72594" fg:w="108"/><text x="64.1723%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (108 samples, 0.10%)</title><rect x="63.9223%" y="597" width="0.0951%" height="15" fill="rgb(216,69,40)" fg:x="72594" fg:w="108"/><text x="64.1723%" y="607.50"></text></g><g><title>alloc::alloc::alloc (107 samples, 0.09%)</title><rect x="63.9232%" y="581" width="0.0942%" height="15" fill="rgb(240,36,33)" fg:x="72595" fg:w="107"/><text x="64.1732%" y="591.50"></text></g><g><title>__rg_alloc (107 samples, 0.09%)</title><rect x="63.9232%" y="565" width="0.0942%" height="15" fill="rgb(231,128,14)" fg:x="72595" fg:w="107"/><text x="64.1732%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (107 samples, 0.09%)</title><rect x="63.9232%" y="549" width="0.0942%" height="15" fill="rgb(245,143,14)" fg:x="72595" fg:w="107"/><text x="64.1732%" y="559.50"></text></g><g><title>rust_alloc (97 samples, 0.09%)</title><rect x="63.9320%" y="533" width="0.0854%" height="15" fill="rgb(222,130,28)" fg:x="72605" fg:w="97"/><text x="64.1820%" y="543.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (161 samples, 0.14%)</title><rect x="63.9117%" y="773" width="0.1418%" height="15" fill="rgb(212,10,48)" fg:x="72582" fg:w="161"/><text x="64.1617%" y="783.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (161 samples, 0.14%)</title><rect x="63.9117%" y="757" width="0.1418%" height="15" fill="rgb(254,118,45)" fg:x="72582" fg:w="161"/><text x="64.1617%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (149 samples, 0.13%)</title><rect x="63.9223%" y="741" width="0.1312%" height="15" fill="rgb(228,6,45)" fg:x="72594" fg:w="149"/><text x="64.1723%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (149 samples, 0.13%)</title><rect x="63.9223%" y="725" width="0.1312%" height="15" fill="rgb(241,18,35)" fg:x="72594" fg:w="149"/><text x="64.1723%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (149 samples, 0.13%)</title><rect x="63.9223%" y="709" width="0.1312%" height="15" fill="rgb(227,214,53)" fg:x="72594" fg:w="149"/><text x="64.1723%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (149 samples, 0.13%)</title><rect x="63.9223%" y="693" width="0.1312%" height="15" fill="rgb(224,107,51)" fg:x="72594" fg:w="149"/><text x="64.1723%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (149 samples, 0.13%)</title><rect x="63.9223%" y="677" width="0.1312%" height="15" fill="rgb(248,60,28)" fg:x="72594" fg:w="149"/><text x="64.1723%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (41 samples, 0.04%)</title><rect x="64.0174%" y="661" width="0.0361%" height="15" fill="rgb(249,101,23)" fg:x="72702" fg:w="41"/><text x="64.2674%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41 samples, 0.04%)</title><rect x="64.0174%" y="645" width="0.0361%" height="15" fill="rgb(228,51,19)" fg:x="72702" fg:w="41"/><text x="64.2674%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (35 samples, 0.03%)</title><rect x="64.0227%" y="629" width="0.0308%" height="15" fill="rgb(213,20,6)" fg:x="72708" fg:w="35"/><text x="64.2727%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="64.0535%" y="773" width="0.0176%" height="15" fill="rgb(212,124,10)" fg:x="72743" fg:w="20"/><text x="64.3035%" y="783.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="64.0861%" y="629" width="0.0123%" height="15" fill="rgb(248,3,40)" fg:x="72780" fg:w="14"/><text x="64.3361%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (116 samples, 0.10%)</title><rect x="64.0984%" y="629" width="0.1021%" height="15" fill="rgb(223,178,23)" fg:x="72794" fg:w="116"/><text x="64.3484%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (116 samples, 0.10%)</title><rect x="64.0984%" y="613" width="0.1021%" height="15" fill="rgb(240,132,45)" fg:x="72794" fg:w="116"/><text x="64.3484%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (106 samples, 0.09%)</title><rect x="64.1072%" y="597" width="0.0933%" height="15" fill="rgb(245,164,36)" fg:x="72804" fg:w="106"/><text x="64.3572%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::take (92 samples, 0.08%)</title><rect x="64.1195%" y="581" width="0.0810%" height="15" fill="rgb(231,188,53)" fg:x="72818" fg:w="92"/><text x="64.3695%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (92 samples, 0.08%)</title><rect x="64.1195%" y="565" width="0.0810%" height="15" fill="rgb(237,198,39)" fg:x="72818" fg:w="92"/><text x="64.3695%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (147 samples, 0.13%)</title><rect x="64.0782%" y="725" width="0.1294%" height="15" fill="rgb(223,120,35)" fg:x="72771" fg:w="147"/><text x="64.3282%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (147 samples, 0.13%)</title><rect x="64.0782%" y="709" width="0.1294%" height="15" fill="rgb(253,107,49)" fg:x="72771" fg:w="147"/><text x="64.3282%" y="719.50"></text></g><g><title>alloc::alloc::alloc (146 samples, 0.13%)</title><rect x="64.0790%" y="693" width="0.1286%" height="15" fill="rgb(216,44,31)" fg:x="72772" fg:w="146"/><text x="64.3290%" y="703.50"></text></g><g><title>__rg_alloc (146 samples, 0.13%)</title><rect x="64.0790%" y="677" width="0.1286%" height="15" fill="rgb(253,87,21)" fg:x="72772" fg:w="146"/><text x="64.3290%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (146 samples, 0.13%)</title><rect x="64.0790%" y="661" width="0.1286%" height="15" fill="rgb(226,18,2)" fg:x="72772" fg:w="146"/><text x="64.3290%" y="671.50"></text></g><g><title>rust_alloc (138 samples, 0.12%)</title><rect x="64.0861%" y="645" width="0.1215%" height="15" fill="rgb(216,8,46)" fg:x="72780" fg:w="138"/><text x="64.3361%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (161 samples, 0.14%)</title><rect x="64.0720%" y="773" width="0.1418%" height="15" fill="rgb(226,140,39)" fg:x="72764" fg:w="161"/><text x="64.3220%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (161 samples, 0.14%)</title><rect x="64.0720%" y="757" width="0.1418%" height="15" fill="rgb(221,194,54)" fg:x="72764" fg:w="161"/><text x="64.3220%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (154 samples, 0.14%)</title><rect x="64.0782%" y="741" width="0.1356%" height="15" fill="rgb(213,92,11)" fg:x="72771" fg:w="154"/><text x="64.3282%" y="751.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,899 samples, 1.67%)</title><rect x="62.5469%" y="885" width="1.6722%" height="15" fill="rgb(229,162,46)" fg:x="71032" fg:w="1899"/><text x="62.7969%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (402 samples, 0.35%)</title><rect x="63.8651%" y="869" width="0.3540%" height="15" fill="rgb(214,111,36)" fg:x="72529" fg:w="402"/><text x="64.1151%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (349 samples, 0.31%)</title><rect x="63.9117%" y="853" width="0.3073%" height="15" fill="rgb(207,6,21)" fg:x="72582" fg:w="349"/><text x="64.1617%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (349 samples, 0.31%)</title><rect x="63.9117%" y="837" width="0.3073%" height="15" fill="rgb(213,127,38)" fg:x="72582" fg:w="349"/><text x="64.1617%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (349 samples, 0.31%)</title><rect x="63.9117%" y="821" width="0.3073%" height="15" fill="rgb(238,118,32)" fg:x="72582" fg:w="349"/><text x="64.1617%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (349 samples, 0.31%)</title><rect x="63.9117%" y="805" width="0.3073%" height="15" fill="rgb(240,139,39)" fg:x="72582" fg:w="349"/><text x="64.1617%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (349 samples, 0.31%)</title><rect x="63.9117%" y="789" width="0.3073%" height="15" fill="rgb(235,10,37)" fg:x="72582" fg:w="349"/><text x="64.1617%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (154 samples, 0.14%)</title><rect x="64.2190%" y="885" width="0.1356%" height="15" fill="rgb(249,171,38)" fg:x="72931" fg:w="154"/><text x="64.4690%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (350 samples, 0.31%)</title><rect x="64.3635%" y="885" width="0.3082%" height="15" fill="rgb(242,144,32)" fg:x="73095" fg:w="350"/><text x="64.6135%" y="895.50"></text></g><g><title>core::ptr::write (326 samples, 0.29%)</title><rect x="64.3846%" y="869" width="0.2871%" height="15" fill="rgb(217,117,21)" fg:x="73119" fg:w="326"/><text x="64.6346%" y="879.50"></text></g><g><title>__memcpy_avx_unaligned_erms (317 samples, 0.28%)</title><rect x="64.3925%" y="853" width="0.2791%" height="15" fill="rgb(249,87,1)" fg:x="73128" fg:w="317"/><text x="64.6425%" y="863.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="64.7051%" y="693" width="0.0123%" height="15" fill="rgb(248,196,48)" fg:x="73483" fg:w="14"/><text x="64.9551%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (20 samples, 0.02%)</title><rect x="64.7438%" y="565" width="0.0176%" height="15" fill="rgb(251,206,33)" fg:x="73527" fg:w="20"/><text x="64.9938%" y="575.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="64.7438%" y="549" width="0.0176%" height="15" fill="rgb(232,141,28)" fg:x="73527" fg:w="20"/><text x="64.9938%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="64.7386%" y="613" width="0.0352%" height="15" fill="rgb(209,167,14)" fg:x="73521" fg:w="40"/><text x="64.9886%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="64.7386%" y="597" width="0.0352%" height="15" fill="rgb(225,11,50)" fg:x="73521" fg:w="40"/><text x="64.9886%" y="607.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (40 samples, 0.04%)</title><rect x="64.7386%" y="581" width="0.0352%" height="15" fill="rgb(209,50,20)" fg:x="73521" fg:w="40"/><text x="64.9886%" y="591.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="64.7615%" y="565" width="0.0123%" height="15" fill="rgb(212,17,46)" fg:x="73547" fg:w="14"/><text x="65.0115%" y="575.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="64.7615%" y="549" width="0.0123%" height="15" fill="rgb(216,101,39)" fg:x="73547" fg:w="14"/><text x="65.0115%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (50 samples, 0.04%)</title><rect x="64.7386%" y="629" width="0.0440%" height="15" fill="rgb(212,228,48)" fg:x="73521" fg:w="50"/><text x="64.9886%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (79 samples, 0.07%)</title><rect x="64.7227%" y="645" width="0.0696%" height="15" fill="rgb(250,6,50)" fg:x="73503" fg:w="79"/><text x="64.9727%" y="655.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (58 samples, 0.05%)</title><rect x="64.8266%" y="629" width="0.0511%" height="15" fill="rgb(250,160,48)" fg:x="73621" fg:w="58"/><text x="65.0766%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (540 samples, 0.48%)</title><rect x="64.7218%" y="677" width="0.4755%" height="15" fill="rgb(244,216,33)" fg:x="73502" fg:w="540"/><text x="64.9718%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (540 samples, 0.48%)</title><rect x="64.7218%" y="661" width="0.4755%" height="15" fill="rgb(207,157,5)" fg:x="73502" fg:w="540"/><text x="64.9718%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (460 samples, 0.41%)</title><rect x="64.7923%" y="645" width="0.4051%" height="15" fill="rgb(228,199,8)" fg:x="73582" fg:w="460"/><text x="65.0423%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (363 samples, 0.32%)</title><rect x="64.8777%" y="629" width="0.3196%" height="15" fill="rgb(227,80,20)" fg:x="73679" fg:w="363"/><text x="65.1277%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (363 samples, 0.32%)</title><rect x="64.8777%" y="613" width="0.3196%" height="15" fill="rgb(222,9,33)" fg:x="73679" fg:w="363"/><text x="65.1277%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (363 samples, 0.32%)</title><rect x="64.8777%" y="597" width="0.3196%" height="15" fill="rgb(239,44,28)" fg:x="73679" fg:w="363"/><text x="65.1277%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::take (31 samples, 0.03%)</title><rect x="65.2079%" y="645" width="0.0273%" height="15" fill="rgb(249,187,43)" fg:x="74054" fg:w="31"/><text x="65.4579%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (31 samples, 0.03%)</title><rect x="65.2079%" y="629" width="0.0273%" height="15" fill="rgb(216,141,28)" fg:x="74054" fg:w="31"/><text x="65.4579%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (46 samples, 0.04%)</title><rect x="65.1973%" y="677" width="0.0405%" height="15" fill="rgb(230,154,53)" fg:x="74042" fg:w="46"/><text x="65.4473%" y="687.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (43 samples, 0.04%)</title><rect x="65.2000%" y="661" width="0.0379%" height="15" fill="rgb(227,82,4)" fg:x="74045" fg:w="43"/><text x="65.4500%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (737 samples, 0.65%)</title><rect x="64.7051%" y="725" width="0.6490%" height="15" fill="rgb(220,107,16)" fg:x="73483" fg:w="737"/><text x="64.9551%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (737 samples, 0.65%)</title><rect x="64.7051%" y="709" width="0.6490%" height="15" fill="rgb(207,187,2)" fg:x="73483" fg:w="737"/><text x="64.9551%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (723 samples, 0.64%)</title><rect x="64.7174%" y="693" width="0.6366%" height="15" fill="rgb(210,162,52)" fg:x="73497" fg:w="723"/><text x="64.9674%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (127 samples, 0.11%)</title><rect x="65.2422%" y="677" width="0.1118%" height="15" fill="rgb(217,216,49)" fg:x="74093" fg:w="127"/><text x="65.4922%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (127 samples, 0.11%)</title><rect x="65.2422%" y="661" width="0.1118%" height="15" fill="rgb(218,146,49)" fg:x="74093" fg:w="127"/><text x="65.4922%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (766 samples, 0.67%)</title><rect x="64.6805%" y="821" width="0.6745%" height="15" fill="rgb(216,55,40)" fg:x="73455" fg:w="766"/><text x="64.9305%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (766 samples, 0.67%)</title><rect x="64.6805%" y="805" width="0.6745%" height="15" fill="rgb(208,196,21)" fg:x="73455" fg:w="766"/><text x="64.9305%" y="815.50"></text></g><g><title>alloc::alloc::alloc (758 samples, 0.67%)</title><rect x="64.6875%" y="789" width="0.6675%" height="15" fill="rgb(242,117,42)" fg:x="73463" fg:w="758"/><text x="64.9375%" y="799.50"></text></g><g><title>__rg_alloc (758 samples, 0.67%)</title><rect x="64.6875%" y="773" width="0.6675%" height="15" fill="rgb(210,11,23)" fg:x="73463" fg:w="758"/><text x="64.9375%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (758 samples, 0.67%)</title><rect x="64.6875%" y="757" width="0.6675%" height="15" fill="rgb(217,110,2)" fg:x="73463" fg:w="758"/><text x="64.9375%" y="767.50"></text></g><g><title>rust_alloc (751 samples, 0.66%)</title><rect x="64.6937%" y="741" width="0.6613%" height="15" fill="rgb(229,77,54)" fg:x="73470" fg:w="751"/><text x="64.9437%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (788 samples, 0.69%)</title><rect x="64.6716%" y="885" width="0.6939%" height="15" fill="rgb(218,53,16)" fg:x="73445" fg:w="788"/><text x="64.9216%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (788 samples, 0.69%)</title><rect x="64.6716%" y="869" width="0.6939%" height="15" fill="rgb(215,38,13)" fg:x="73445" fg:w="788"/><text x="64.9216%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (778 samples, 0.69%)</title><rect x="64.6805%" y="853" width="0.6851%" height="15" fill="rgb(235,42,18)" fg:x="73455" fg:w="778"/><text x="64.9305%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (778 samples, 0.69%)</title><rect x="64.6805%" y="837" width="0.6851%" height="15" fill="rgb(219,66,54)" fg:x="73455" fg:w="778"/><text x="64.9305%" y="847.50"></text></g><g><title>core::alloc::layout::Layout::array (12 samples, 0.01%)</title><rect x="65.3549%" y="821" width="0.0106%" height="15" fill="rgb(222,205,4)" fg:x="74221" fg:w="12"/><text x="65.6049%" y="831.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (13 samples, 0.01%)</title><rect x="65.3655%" y="853" width="0.0114%" height="15" fill="rgb(227,213,46)" fg:x="74233" fg:w="13"/><text x="65.6155%" y="863.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (36 samples, 0.03%)</title><rect x="65.4448%" y="581" width="0.0317%" height="15" fill="rgb(250,145,42)" fg:x="74323" fg:w="36"/><text x="65.6948%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (32 samples, 0.03%)</title><rect x="65.4483%" y="565" width="0.0282%" height="15" fill="rgb(219,15,2)" fg:x="74327" fg:w="32"/><text x="65.6983%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (85 samples, 0.07%)</title><rect x="65.4095%" y="629" width="0.0748%" height="15" fill="rgb(231,181,52)" fg:x="74283" fg:w="85"/><text x="65.6595%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (85 samples, 0.07%)</title><rect x="65.4095%" y="613" width="0.0748%" height="15" fill="rgb(235,1,42)" fg:x="74283" fg:w="85"/><text x="65.6595%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (83 samples, 0.07%)</title><rect x="65.4113%" y="597" width="0.0731%" height="15" fill="rgb(249,88,27)" fg:x="74285" fg:w="83"/><text x="65.6613%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (119 samples, 0.10%)</title><rect x="65.3990%" y="661" width="0.1048%" height="15" fill="rgb(235,145,16)" fg:x="74271" fg:w="119"/><text x="65.6490%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (119 samples, 0.10%)</title><rect x="65.3990%" y="645" width="0.1048%" height="15" fill="rgb(237,114,19)" fg:x="74271" fg:w="119"/><text x="65.6490%" y="655.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (22 samples, 0.02%)</title><rect x="65.4844%" y="629" width="0.0194%" height="15" fill="rgb(238,51,50)" fg:x="74368" fg:w="22"/><text x="65.7344%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (122 samples, 0.11%)</title><rect x="65.3990%" y="693" width="0.1074%" height="15" fill="rgb(205,194,25)" fg:x="74271" fg:w="122"/><text x="65.6490%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (122 samples, 0.11%)</title><rect x="65.3990%" y="677" width="0.1074%" height="15" fill="rgb(215,203,17)" fg:x="74271" fg:w="122"/><text x="65.6490%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (138 samples, 0.12%)</title><rect x="65.3937%" y="709" width="0.1215%" height="15" fill="rgb(233,112,49)" fg:x="74265" fg:w="138"/><text x="65.6437%" y="719.50"></text></g><g><title>rust_dealloc (157 samples, 0.14%)</title><rect x="65.3831%" y="725" width="0.1382%" height="15" fill="rgb(241,130,26)" fg:x="74253" fg:w="157"/><text x="65.6331%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (168 samples, 0.15%)</title><rect x="65.3770%" y="789" width="0.1479%" height="15" fill="rgb(252,223,19)" fg:x="74246" fg:w="168"/><text x="65.6270%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (168 samples, 0.15%)</title><rect x="65.3770%" y="773" width="0.1479%" height="15" fill="rgb(211,95,25)" fg:x="74246" fg:w="168"/><text x="65.6270%" y="783.50"></text></g><g><title>__rg_dealloc (168 samples, 0.15%)</title><rect x="65.3770%" y="757" width="0.1479%" height="15" fill="rgb(251,182,27)" fg:x="74246" fg:w="168"/><text x="65.6270%" y="767.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (168 samples, 0.15%)</title><rect x="65.3770%" y="741" width="0.1479%" height="15" fill="rgb(238,24,4)" fg:x="74246" fg:w="168"/><text x="65.6270%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (175 samples, 0.15%)</title><rect x="65.3770%" y="853" width="0.1541%" height="15" fill="rgb(224,220,25)" fg:x="74246" fg:w="175"/><text x="65.6270%" y="863.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (175 samples, 0.15%)</title><rect x="65.3770%" y="837" width="0.1541%" height="15" fill="rgb(239,133,26)" fg:x="74246" fg:w="175"/><text x="65.6270%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (175 samples, 0.15%)</title><rect x="65.3770%" y="821" width="0.1541%" height="15" fill="rgb(211,94,48)" fg:x="74246" fg:w="175"/><text x="65.6270%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (175 samples, 0.15%)</title><rect x="65.3770%" y="805" width="0.1541%" height="15" fill="rgb(239,87,6)" fg:x="74246" fg:w="175"/><text x="65.6270%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (190 samples, 0.17%)</title><rect x="65.3655%" y="885" width="0.1673%" height="15" fill="rgb(227,62,0)" fg:x="74233" fg:w="190"/><text x="65.6155%" y="895.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (190 samples, 0.17%)</title><rect x="65.3655%" y="869" width="0.1673%" height="15" fill="rgb(211,226,4)" fg:x="74233" fg:w="190"/><text x="65.6155%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (26 samples, 0.02%)</title><rect x="65.5451%" y="821" width="0.0229%" height="15" fill="rgb(253,38,52)" fg:x="74437" fg:w="26"/><text x="65.7951%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (26 samples, 0.02%)</title><rect x="65.5451%" y="805" width="0.0229%" height="15" fill="rgb(229,126,40)" fg:x="74437" fg:w="26"/><text x="65.7951%" y="815.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="65.5557%" y="789" width="0.0123%" height="15" fill="rgb(229,165,44)" fg:x="74449" fg:w="14"/><text x="65.8057%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="65.5557%" y="773" width="0.0123%" height="15" fill="rgb(247,95,47)" fg:x="74449" fg:w="14"/><text x="65.8057%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="65.5557%" y="757" width="0.0123%" height="15" fill="rgb(216,140,30)" fg:x="74449" fg:w="14"/><text x="65.8057%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="65.5557%" y="741" width="0.0123%" height="15" fill="rgb(246,214,8)" fg:x="74449" fg:w="14"/><text x="65.8057%" y="751.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="65.5698%" y="805" width="0.0106%" height="15" fill="rgb(227,224,15)" fg:x="74465" fg:w="12"/><text x="65.8198%" y="815.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (34 samples, 0.03%)</title><rect x="65.6244%" y="677" width="0.0299%" height="15" fill="rgb(233,175,4)" fg:x="74527" fg:w="34"/><text x="65.8744%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (29 samples, 0.03%)</title><rect x="65.6288%" y="661" width="0.0255%" height="15" fill="rgb(221,66,45)" fg:x="74532" fg:w="29"/><text x="65.8788%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (75 samples, 0.07%)</title><rect x="65.6015%" y="725" width="0.0660%" height="15" fill="rgb(221,178,18)" fg:x="74501" fg:w="75"/><text x="65.8515%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (75 samples, 0.07%)</title><rect x="65.6015%" y="709" width="0.0660%" height="15" fill="rgb(213,81,29)" fg:x="74501" fg:w="75"/><text x="65.8515%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (74 samples, 0.07%)</title><rect x="65.6024%" y="693" width="0.0652%" height="15" fill="rgb(220,89,49)" fg:x="74502" fg:w="74"/><text x="65.8524%" y="703.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="65.6543%" y="677" width="0.0132%" height="15" fill="rgb(227,60,33)" fg:x="74561" fg:w="15"/><text x="65.9043%" y="687.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="65.6543%" y="661" width="0.0132%" height="15" fill="rgb(205,113,12)" fg:x="74561" fg:w="15"/><text x="65.9043%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (100 samples, 0.09%)</title><rect x="65.5883%" y="757" width="0.0881%" height="15" fill="rgb(211,32,1)" fg:x="74486" fg:w="100"/><text x="65.8383%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (100 samples, 0.09%)</title><rect x="65.5883%" y="741" width="0.0881%" height="15" fill="rgb(246,2,12)" fg:x="74486" fg:w="100"/><text x="65.8383%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (107 samples, 0.09%)</title><rect x="65.5883%" y="789" width="0.0942%" height="15" fill="rgb(243,37,27)" fg:x="74486" fg:w="107"/><text x="65.8383%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (107 samples, 0.09%)</title><rect x="65.5883%" y="773" width="0.0942%" height="15" fill="rgb(248,211,31)" fg:x="74486" fg:w="107"/><text x="65.8383%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (121 samples, 0.11%)</title><rect x="65.5821%" y="805" width="0.1065%" height="15" fill="rgb(242,146,47)" fg:x="74479" fg:w="121"/><text x="65.8321%" y="815.50"></text></g><g><title>rust_dealloc (145 samples, 0.13%)</title><rect x="65.5680%" y="821" width="0.1277%" height="15" fill="rgb(206,70,20)" fg:x="74463" fg:w="145"/><text x="65.8180%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (192 samples, 0.17%)</title><rect x="65.5328%" y="869" width="0.1691%" height="15" fill="rgb(215,10,51)" fg:x="74423" fg:w="192"/><text x="65.7828%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (192 samples, 0.17%)</title><rect x="65.5328%" y="853" width="0.1691%" height="15" fill="rgb(243,178,53)" fg:x="74423" fg:w="192"/><text x="65.7828%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (192 samples, 0.17%)</title><rect x="65.5328%" y="837" width="0.1691%" height="15" fill="rgb(233,221,20)" fg:x="74423" fg:w="192"/><text x="65.7828%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (15 samples, 0.01%)</title><rect x="65.7371%" y="693" width="0.0132%" height="15" fill="rgb(218,95,35)" fg:x="74655" fg:w="15"/><text x="65.9871%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (15 samples, 0.01%)</title><rect x="65.7371%" y="677" width="0.0132%" height="15" fill="rgb(229,13,5)" fg:x="74655" fg:w="15"/><text x="65.9871%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="65.7926%" y="549" width="0.0158%" height="15" fill="rgb(252,164,30)" fg:x="74718" fg:w="18"/><text x="66.0426%" y="559.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="65.7943%" y="533" width="0.0141%" height="15" fill="rgb(232,68,36)" fg:x="74720" fg:w="16"/><text x="66.0443%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (46 samples, 0.04%)</title><rect x="65.7767%" y="597" width="0.0405%" height="15" fill="rgb(219,59,54)" fg:x="74700" fg:w="46"/><text x="66.0267%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (46 samples, 0.04%)</title><rect x="65.7767%" y="581" width="0.0405%" height="15" fill="rgb(250,92,33)" fg:x="74700" fg:w="46"/><text x="66.0267%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (45 samples, 0.04%)</title><rect x="65.7776%" y="565" width="0.0396%" height="15" fill="rgb(229,162,54)" fg:x="74701" fg:w="45"/><text x="66.0276%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (68 samples, 0.06%)</title><rect x="65.7653%" y="629" width="0.0599%" height="15" fill="rgb(244,114,52)" fg:x="74687" fg:w="68"/><text x="66.0153%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (68 samples, 0.06%)</title><rect x="65.7653%" y="613" width="0.0599%" height="15" fill="rgb(212,211,43)" fg:x="74687" fg:w="68"/><text x="66.0153%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (72 samples, 0.06%)</title><rect x="65.7653%" y="661" width="0.0634%" height="15" fill="rgb(226,147,8)" fg:x="74687" fg:w="72"/><text x="66.0153%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (72 samples, 0.06%)</title><rect x="65.7653%" y="645" width="0.0634%" height="15" fill="rgb(226,23,13)" fg:x="74687" fg:w="72"/><text x="66.0153%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (85 samples, 0.07%)</title><rect x="65.7547%" y="677" width="0.0748%" height="15" fill="rgb(240,63,4)" fg:x="74675" fg:w="85"/><text x="66.0047%" y="687.50"></text></g><g><title>rust_dealloc (93 samples, 0.08%)</title><rect x="65.7503%" y="693" width="0.0819%" height="15" fill="rgb(221,1,32)" fg:x="74670" fg:w="93"/><text x="66.0003%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (137 samples, 0.12%)</title><rect x="65.7142%" y="773" width="0.1206%" height="15" fill="rgb(242,117,10)" fg:x="74629" fg:w="137"/><text x="65.9642%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (133 samples, 0.12%)</title><rect x="65.7177%" y="757" width="0.1171%" height="15" fill="rgb(249,172,44)" fg:x="74633" fg:w="133"/><text x="65.9677%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (121 samples, 0.11%)</title><rect x="65.7283%" y="741" width="0.1065%" height="15" fill="rgb(244,46,45)" fg:x="74645" fg:w="121"/><text x="65.9783%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (121 samples, 0.11%)</title><rect x="65.7283%" y="725" width="0.1065%" height="15" fill="rgb(206,43,17)" fg:x="74645" fg:w="121"/><text x="65.9783%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (121 samples, 0.11%)</title><rect x="65.7283%" y="709" width="0.1065%" height="15" fill="rgb(239,218,39)" fg:x="74645" fg:w="121"/><text x="65.9783%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (165 samples, 0.15%)</title><rect x="65.7045%" y="837" width="0.1453%" height="15" fill="rgb(208,169,54)" fg:x="74618" fg:w="165"/><text x="65.9545%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (162 samples, 0.14%)</title><rect x="65.7072%" y="821" width="0.1426%" height="15" fill="rgb(247,25,42)" fg:x="74621" fg:w="162"/><text x="65.9572%" y="831.50"></text></g><g><title>core::mem::drop (154 samples, 0.14%)</title><rect x="65.7142%" y="805" width="0.1356%" height="15" fill="rgb(226,23,31)" fg:x="74629" fg:w="154"/><text x="65.9642%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (154 samples, 0.14%)</title><rect x="65.7142%" y="789" width="0.1356%" height="15" fill="rgb(247,16,28)" fg:x="74629" fg:w="154"/><text x="65.9642%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (17 samples, 0.01%)</title><rect x="65.8348%" y="773" width="0.0150%" height="15" fill="rgb(231,147,38)" fg:x="74766" fg:w="17"/><text x="66.0848%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="65.8348%" y="757" width="0.0150%" height="15" fill="rgb(253,81,48)" fg:x="74766" fg:w="17"/><text x="66.0848%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.01%)</title><rect x="65.8348%" y="741" width="0.0150%" height="15" fill="rgb(249,222,43)" fg:x="74766" fg:w="17"/><text x="66.0848%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.01%)</title><rect x="65.8348%" y="725" width="0.0150%" height="15" fill="rgb(221,3,27)" fg:x="74766" fg:w="17"/><text x="66.0848%" y="735.50"></text></g><g><title>__rg_dealloc (17 samples, 0.01%)</title><rect x="65.8348%" y="709" width="0.0150%" height="15" fill="rgb(228,180,5)" fg:x="74766" fg:w="17"/><text x="66.0848%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.01%)</title><rect x="65.8348%" y="693" width="0.0150%" height="15" fill="rgb(227,131,42)" fg:x="74766" fg:w="17"/><text x="66.0848%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (27 samples, 0.02%)</title><rect x="65.8771%" y="741" width="0.0238%" height="15" fill="rgb(212,3,39)" fg:x="74814" fg:w="27"/><text x="66.1271%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (27 samples, 0.02%)</title><rect x="65.8771%" y="725" width="0.0238%" height="15" fill="rgb(226,45,5)" fg:x="74814" fg:w="27"/><text x="66.1271%" y="735.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (27 samples, 0.02%)</title><rect x="65.8771%" y="709" width="0.0238%" height="15" fill="rgb(215,167,45)" fg:x="74814" fg:w="27"/><text x="66.1271%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (46 samples, 0.04%)</title><rect x="65.8674%" y="773" width="0.0405%" height="15" fill="rgb(250,218,53)" fg:x="74803" fg:w="46"/><text x="66.1174%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (46 samples, 0.04%)</title><rect x="65.8674%" y="757" width="0.0405%" height="15" fill="rgb(207,140,0)" fg:x="74803" fg:w="46"/><text x="66.1174%" y="767.50"></text></g><g><title>rust_dealloc (69 samples, 0.06%)</title><rect x="65.8498%" y="837" width="0.0608%" height="15" fill="rgb(238,133,51)" fg:x="74783" fg:w="69"/><text x="66.0998%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (57 samples, 0.05%)</title><rect x="65.8604%" y="821" width="0.0502%" height="15" fill="rgb(218,203,53)" fg:x="74795" fg:w="57"/><text x="66.1104%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (49 samples, 0.04%)</title><rect x="65.8674%" y="805" width="0.0431%" height="15" fill="rgb(226,184,25)" fg:x="74803" fg:w="49"/><text x="66.1174%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (49 samples, 0.04%)</title><rect x="65.8674%" y="789" width="0.0431%" height="15" fill="rgb(231,121,21)" fg:x="74803" fg:w="49"/><text x="66.1174%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (241 samples, 0.21%)</title><rect x="65.7019%" y="853" width="0.2122%" height="15" fill="rgb(251,14,34)" fg:x="74615" fg:w="241"/><text x="65.9519%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (436 samples, 0.38%)</title><rect x="65.5328%" y="885" width="0.3839%" height="15" fill="rgb(249,193,11)" fg:x="74423" fg:w="436"/><text x="65.7828%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (244 samples, 0.21%)</title><rect x="65.7019%" y="869" width="0.2149%" height="15" fill="rgb(220,172,37)" fg:x="74615" fg:w="244"/><text x="65.9519%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (28 samples, 0.02%)</title><rect x="65.9167%" y="885" width="0.0247%" height="15" fill="rgb(231,229,43)" fg:x="74859" fg:w="28"/><text x="66.1667%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (8,281 samples, 7.29%)</title><rect x="58.6584%" y="949" width="7.2918%" height="15" fill="rgb(250,161,5)" fg:x="66616" fg:w="8281"/><text x="58.9084%" y="959.50">tremor_run..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,281 samples, 7.29%)</title><rect x="58.6584%" y="933" width="7.2918%" height="15" fill="rgb(218,225,18)" fg:x="66616" fg:w="8281"/><text x="58.9084%" y="943.50">&lt;core::fut..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (8,281 samples, 7.29%)</title><rect x="58.6584%" y="917" width="7.2918%" height="15" fill="rgb(245,45,42)" fg:x="66616" fg:w="8281"/><text x="58.9084%" y="927.50">tremor_run..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,955 samples, 4.36%)</title><rect x="61.5871%" y="901" width="4.3631%" height="15" fill="rgb(211,115,1)" fg:x="69942" fg:w="4955"/><text x="61.8371%" y="911.50">tremo..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (33 samples, 0.03%)</title><rect x="66.0849%" y="885" width="0.0291%" height="15" fill="rgb(248,133,52)" fg:x="75050" fg:w="33"/><text x="66.3349%" y="895.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.01%)</title><rect x="66.1008%" y="869" width="0.0132%" height="15" fill="rgb(238,100,21)" fg:x="75068" fg:w="15"/><text x="66.3508%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,081 samples, 0.95%)</title><rect x="65.9766%" y="901" width="0.9519%" height="15" fill="rgb(247,144,11)" fg:x="74927" fg:w="1081"/><text x="66.2266%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (925 samples, 0.81%)</title><rect x="66.1140%" y="885" width="0.8145%" height="15" fill="rgb(206,164,16)" fg:x="75083" fg:w="925"/><text x="66.3640%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (11,733 samples, 10.33%)</title><rect x="57.0356%" y="1125" width="10.3314%" height="15" fill="rgb(222,34,3)" fg:x="64773" fg:w="11733"/><text x="57.2856%" y="1135.50">async_task::raw..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11,732 samples, 10.33%)</title><rect x="57.0364%" y="1109" width="10.3306%" height="15" fill="rgb(248,82,4)" fg:x="64774" fg:w="11732"/><text x="57.2864%" y="1119.50">&lt;core::pin::Pin..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,732 samples, 10.33%)</title><rect x="57.0364%" y="1093" width="10.3306%" height="15" fill="rgb(228,81,46)" fg:x="64774" fg:w="11732"/><text x="57.2864%" y="1103.50">&lt;core::future::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (11,732 samples, 10.33%)</title><rect x="57.0364%" y="1077" width="10.3306%" height="15" fill="rgb(227,67,47)" fg:x="64774" fg:w="11732"/><text x="57.2864%" y="1087.50">async_executor:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (11,732 samples, 10.33%)</title><rect x="57.0364%" y="1061" width="10.3306%" height="15" fill="rgb(215,93,53)" fg:x="64774" fg:w="11732"/><text x="57.2864%" y="1071.50">&lt;async_std::tas..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (11,732 samples, 10.33%)</title><rect x="57.0364%" y="1045" width="10.3306%" height="15" fill="rgb(248,194,39)" fg:x="64774" fg:w="11732"/><text x="57.2864%" y="1055.50">async_std::task..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,732 samples, 10.33%)</title><rect x="57.0364%" y="1029" width="10.3306%" height="15" fill="rgb(215,5,19)" fg:x="64774" fg:w="11732"/><text x="57.2864%" y="1039.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,732 samples, 10.33%)</title><rect x="57.0364%" y="1013" width="10.3306%" height="15" fill="rgb(226,215,51)" fg:x="64774" fg:w="11732"/><text x="57.2864%" y="1023.50">std::thread::lo..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (11,732 samples, 10.33%)</title><rect x="57.0364%" y="997" width="10.3306%" height="15" fill="rgb(225,56,26)" fg:x="64774" fg:w="11732"/><text x="57.2864%" y="1007.50">async_std::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (11,732 samples, 10.33%)</title><rect x="57.0364%" y="981" width="10.3306%" height="15" fill="rgb(222,75,29)" fg:x="64774" fg:w="11732"/><text x="57.2864%" y="991.50">&lt;async_std::tas..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,732 samples, 10.33%)</title><rect x="57.0364%" y="965" width="10.3306%" height="15" fill="rgb(236,139,6)" fg:x="64774" fg:w="11732"/><text x="57.2864%" y="975.50">&lt;core::future::..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,609 samples, 1.42%)</title><rect x="65.9502%" y="949" width="1.4168%" height="15" fill="rgb(223,137,36)" fg:x="74897" fg:w="1609"/><text x="66.2002%" y="959.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,609 samples, 1.42%)</title><rect x="65.9502%" y="933" width="1.4168%" height="15" fill="rgb(226,99,2)" fg:x="74897" fg:w="1609"/><text x="66.2002%" y="943.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,609 samples, 1.42%)</title><rect x="65.9502%" y="917" width="1.4168%" height="15" fill="rgb(206,133,23)" fg:x="74897" fg:w="1609"/><text x="66.2002%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (498 samples, 0.44%)</title><rect x="66.9285%" y="901" width="0.4385%" height="15" fill="rgb(243,173,15)" fg:x="76008" fg:w="498"/><text x="67.1785%" y="911.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (65 samples, 0.06%)</title><rect x="67.3740%" y="1125" width="0.0572%" height="15" fill="rgb(228,69,28)" fg:x="76514" fg:w="65"/><text x="67.6240%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (14 samples, 0.01%)</title><rect x="67.4189%" y="1109" width="0.0123%" height="15" fill="rgb(212,51,22)" fg:x="76565" fg:w="14"/><text x="67.6689%" y="1119.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="67.4189%" y="1093" width="0.0123%" height="15" fill="rgb(227,113,0)" fg:x="76565" fg:w="14"/><text x="67.6689%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.01%)</title><rect x="67.4410%" y="1125" width="0.0132%" height="15" fill="rgb(252,84,27)" fg:x="76590" fg:w="15"/><text x="67.6910%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (15 samples, 0.01%)</title><rect x="67.4630%" y="1125" width="0.0132%" height="15" fill="rgb(223,145,39)" fg:x="76615" fg:w="15"/><text x="67.7130%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (22 samples, 0.02%)</title><rect x="67.4823%" y="1125" width="0.0194%" height="15" fill="rgb(239,219,30)" fg:x="76637" fg:w="22"/><text x="67.7323%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (44 samples, 0.04%)</title><rect x="67.5193%" y="1125" width="0.0387%" height="15" fill="rgb(224,196,39)" fg:x="76679" fg:w="44"/><text x="67.7693%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (29 samples, 0.03%)</title><rect x="67.5325%" y="1109" width="0.0255%" height="15" fill="rgb(205,35,43)" fg:x="76694" fg:w="29"/><text x="67.7825%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (29 samples, 0.03%)</title><rect x="67.5325%" y="1093" width="0.0255%" height="15" fill="rgb(228,201,21)" fg:x="76694" fg:w="29"/><text x="67.7825%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt;&gt; (29 samples, 0.03%)</title><rect x="67.5325%" y="1077" width="0.0255%" height="15" fill="rgb(237,118,16)" fg:x="76694" fg:w="29"/><text x="67.7825%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (29 samples, 0.03%)</title><rect x="67.5325%" y="1061" width="0.0255%" height="15" fill="rgb(241,17,19)" fg:x="76694" fg:w="29"/><text x="67.7825%" y="1071.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (20 samples, 0.02%)</title><rect x="67.5678%" y="1125" width="0.0176%" height="15" fill="rgb(214,10,25)" fg:x="76734" fg:w="20"/><text x="67.8178%" y="1135.50"></text></g><g><title>polling::epoll::Poller::wait (37 samples, 0.03%)</title><rect x="67.5968%" y="1125" width="0.0326%" height="15" fill="rgb(238,37,29)" fg:x="76767" fg:w="37"/><text x="67.8468%" y="1135.50"></text></g><g><title>rust_alloc (98 samples, 0.09%)</title><rect x="67.6294%" y="1125" width="0.0863%" height="15" fill="rgb(253,83,25)" fg:x="76804" fg:w="98"/><text x="67.8794%" y="1135.50"></text></g><g><title>rust_dealloc (32 samples, 0.03%)</title><rect x="67.7157%" y="1125" width="0.0282%" height="15" fill="rgb(234,192,12)" fg:x="76902" fg:w="32"/><text x="67.9657%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (31 samples, 0.03%)</title><rect x="67.7166%" y="1109" width="0.0273%" height="15" fill="rgb(241,216,45)" fg:x="76903" fg:w="31"/><text x="67.9666%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (31 samples, 0.03%)</title><rect x="67.7166%" y="1093" width="0.0273%" height="15" fill="rgb(242,22,33)" fg:x="76903" fg:w="31"/><text x="67.9666%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (31 samples, 0.03%)</title><rect x="67.7166%" y="1077" width="0.0273%" height="15" fill="rgb(231,105,49)" fg:x="76903" fg:w="31"/><text x="67.9666%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (31 samples, 0.03%)</title><rect x="67.7166%" y="1061" width="0.0273%" height="15" fill="rgb(218,204,15)" fg:x="76903" fg:w="31"/><text x="67.9666%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (31 samples, 0.03%)</title><rect x="67.7166%" y="1045" width="0.0273%" height="15" fill="rgb(235,138,41)" fg:x="76903" fg:w="31"/><text x="67.9666%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="67.7166%" y="1029" width="0.0273%" height="15" fill="rgb(246,0,9)" fg:x="76903" fg:w="31"/><text x="67.9666%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="67.7166%" y="1013" width="0.0273%" height="15" fill="rgb(210,74,4)" fg:x="76903" fg:w="31"/><text x="67.9666%" y="1023.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (31 samples, 0.03%)</title><rect x="67.7166%" y="997" width="0.0273%" height="15" fill="rgb(250,60,41)" fg:x="76903" fg:w="31"/><text x="67.9666%" y="1007.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (16 samples, 0.01%)</title><rect x="67.7694%" y="1125" width="0.0141%" height="15" fill="rgb(220,115,12)" fg:x="76963" fg:w="16"/><text x="68.0194%" y="1135.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="67.8319%" y="933" width="0.0114%" height="15" fill="rgb(237,100,13)" fg:x="77034" fg:w="13"/><text x="68.0819%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (13 samples, 0.01%)</title><rect x="67.8319%" y="917" width="0.0114%" height="15" fill="rgb(213,55,26)" fg:x="77034" fg:w="13"/><text x="68.0819%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (13 samples, 0.01%)</title><rect x="67.8319%" y="901" width="0.0114%" height="15" fill="rgb(216,17,4)" fg:x="77034" fg:w="13"/><text x="68.0819%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="67.8319%" y="885" width="0.0114%" height="15" fill="rgb(220,153,47)" fg:x="77034" fg:w="13"/><text x="68.0819%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="67.8319%" y="869" width="0.0114%" height="15" fill="rgb(215,131,9)" fg:x="77034" fg:w="13"/><text x="68.0819%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.01%)</title><rect x="67.8328%" y="853" width="0.0106%" height="15" fill="rgb(233,46,42)" fg:x="77035" fg:w="12"/><text x="68.0828%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="67.8328%" y="837" width="0.0106%" height="15" fill="rgb(226,86,7)" fg:x="77035" fg:w="12"/><text x="68.0828%" y="847.50"></text></g><g><title>event_listener::Inner::lock (100 samples, 0.09%)</title><rect x="67.8522%" y="933" width="0.0881%" height="15" fill="rgb(239,226,21)" fg:x="77057" fg:w="100"/><text x="68.1022%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (100 samples, 0.09%)</title><rect x="67.8522%" y="917" width="0.0881%" height="15" fill="rgb(244,137,22)" fg:x="77057" fg:w="100"/><text x="68.1022%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (98 samples, 0.09%)</title><rect x="67.8539%" y="901" width="0.0863%" height="15" fill="rgb(211,139,35)" fg:x="77059" fg:w="98"/><text x="68.1039%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (68 samples, 0.06%)</title><rect x="67.8804%" y="885" width="0.0599%" height="15" fill="rgb(214,62,50)" fg:x="77089" fg:w="68"/><text x="68.1304%" y="895.50"></text></g><g><title>___pthread_mutex_lock (68 samples, 0.06%)</title><rect x="67.8804%" y="869" width="0.0599%" height="15" fill="rgb(212,113,44)" fg:x="77089" fg:w="68"/><text x="68.1304%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (152 samples, 0.13%)</title><rect x="67.8178%" y="949" width="0.1338%" height="15" fill="rgb(226,150,43)" fg:x="77018" fg:w="152"/><text x="68.0678%" y="959.50"></text></g><g><title>event_listener::List::remove (13 samples, 0.01%)</title><rect x="67.9402%" y="933" width="0.0114%" height="15" fill="rgb(250,71,37)" fg:x="77157" fg:w="13"/><text x="68.1902%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (764 samples, 0.67%)</title><rect x="67.9517%" y="949" width="0.6727%" height="15" fill="rgb(219,76,19)" fg:x="77170" fg:w="764"/><text x="68.2017%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (723 samples, 0.64%)</title><rect x="68.6579%" y="933" width="0.6366%" height="15" fill="rgb(250,39,11)" fg:x="77972" fg:w="723"/><text x="68.9079%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (73 samples, 0.06%)</title><rect x="69.2945%" y="933" width="0.0643%" height="15" fill="rgb(230,64,31)" fg:x="78695" fg:w="73"/><text x="69.5445%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (23 samples, 0.02%)</title><rect x="69.3676%" y="917" width="0.0203%" height="15" fill="rgb(208,222,23)" fg:x="78778" fg:w="23"/><text x="69.6176%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (22 samples, 0.02%)</title><rect x="69.3685%" y="901" width="0.0194%" height="15" fill="rgb(227,125,18)" fg:x="78779" fg:w="22"/><text x="69.6185%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="69.3685%" y="885" width="0.0194%" height="15" fill="rgb(234,210,9)" fg:x="78779" fg:w="22"/><text x="69.6185%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (22 samples, 0.02%)</title><rect x="69.3685%" y="869" width="0.0194%" height="15" fill="rgb(217,127,24)" fg:x="78779" fg:w="22"/><text x="69.6185%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (22 samples, 0.02%)</title><rect x="69.3685%" y="853" width="0.0194%" height="15" fill="rgb(239,141,48)" fg:x="78779" fg:w="22"/><text x="69.6185%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (22 samples, 0.02%)</title><rect x="69.3685%" y="837" width="0.0194%" height="15" fill="rgb(227,109,8)" fg:x="78779" fg:w="22"/><text x="69.6185%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (22 samples, 0.02%)</title><rect x="69.3878%" y="917" width="0.0194%" height="15" fill="rgb(235,184,23)" fg:x="78801" fg:w="22"/><text x="69.6378%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.02%)</title><rect x="69.3878%" y="901" width="0.0194%" height="15" fill="rgb(227,226,48)" fg:x="78801" fg:w="22"/><text x="69.6378%" y="911.50"></text></g><g><title>event_listener::Inner::lock (49 samples, 0.04%)</title><rect x="69.4099%" y="917" width="0.0431%" height="15" fill="rgb(206,150,11)" fg:x="78826" fg:w="49"/><text x="69.6599%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (48 samples, 0.04%)</title><rect x="69.4107%" y="901" width="0.0423%" height="15" fill="rgb(254,2,33)" fg:x="78827" fg:w="48"/><text x="69.6607%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (48 samples, 0.04%)</title><rect x="69.4107%" y="885" width="0.0423%" height="15" fill="rgb(243,160,20)" fg:x="78827" fg:w="48"/><text x="69.6607%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (47 samples, 0.04%)</title><rect x="69.4116%" y="869" width="0.0414%" height="15" fill="rgb(218,208,30)" fg:x="78828" fg:w="47"/><text x="69.6616%" y="879.50"></text></g><g><title>___pthread_mutex_lock (47 samples, 0.04%)</title><rect x="69.4116%" y="853" width="0.0414%" height="15" fill="rgb(224,120,49)" fg:x="78828" fg:w="47"/><text x="69.6616%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (13 samples, 0.01%)</title><rect x="69.4750%" y="821" width="0.0114%" height="15" fill="rgb(246,12,2)" fg:x="78900" fg:w="13"/><text x="69.7250%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="69.4750%" y="805" width="0.0114%" height="15" fill="rgb(236,117,3)" fg:x="78900" fg:w="13"/><text x="69.7250%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="69.4750%" y="789" width="0.0114%" height="15" fill="rgb(216,128,52)" fg:x="78900" fg:w="13"/><text x="69.7250%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="69.4750%" y="773" width="0.0114%" height="15" fill="rgb(246,145,19)" fg:x="78900" fg:w="13"/><text x="69.7250%" y="783.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="69.4750%" y="757" width="0.0114%" height="15" fill="rgb(222,11,46)" fg:x="78900" fg:w="13"/><text x="69.7250%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (15 samples, 0.01%)</title><rect x="69.4865%" y="821" width="0.0132%" height="15" fill="rgb(245,82,36)" fg:x="78913" fg:w="15"/><text x="69.7365%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="69.4865%" y="805" width="0.0132%" height="15" fill="rgb(250,73,51)" fg:x="78913" fg:w="15"/><text x="69.7365%" y="815.50"></text></g><g><title>async_executor::State::notify (67 samples, 0.06%)</title><rect x="69.4662%" y="837" width="0.0590%" height="15" fill="rgb(221,189,23)" fg:x="78890" fg:w="67"/><text x="69.7162%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.03%)</title><rect x="69.4997%" y="821" width="0.0255%" height="15" fill="rgb(210,33,7)" fg:x="78928" fg:w="29"/><text x="69.7497%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (28 samples, 0.02%)</title><rect x="69.5006%" y="805" width="0.0247%" height="15" fill="rgb(210,107,22)" fg:x="78929" fg:w="28"/><text x="69.7506%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (25 samples, 0.02%)</title><rect x="69.5032%" y="789" width="0.0220%" height="15" fill="rgb(222,116,37)" fg:x="78932" fg:w="25"/><text x="69.7532%" y="799.50"></text></g><g><title>___pthread_mutex_lock (25 samples, 0.02%)</title><rect x="69.5032%" y="773" width="0.0220%" height="15" fill="rgb(254,17,48)" fg:x="78932" fg:w="25"/><text x="69.7532%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (25 samples, 0.02%)</title><rect x="69.5331%" y="805" width="0.0220%" height="15" fill="rgb(224,36,32)" fg:x="78966" fg:w="25"/><text x="69.7831%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (25 samples, 0.02%)</title><rect x="69.5331%" y="789" width="0.0220%" height="15" fill="rgb(232,90,46)" fg:x="78966" fg:w="25"/><text x="69.7831%" y="799.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (115 samples, 0.10%)</title><rect x="69.4653%" y="853" width="0.1013%" height="15" fill="rgb(241,66,40)" fg:x="78889" fg:w="115"/><text x="69.7153%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (47 samples, 0.04%)</title><rect x="69.5252%" y="837" width="0.0414%" height="15" fill="rgb(249,184,29)" fg:x="78957" fg:w="47"/><text x="69.7752%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (43 samples, 0.04%)</title><rect x="69.5287%" y="821" width="0.0379%" height="15" fill="rgb(231,181,1)" fg:x="78961" fg:w="43"/><text x="69.7787%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (13 samples, 0.01%)</title><rect x="69.5666%" y="853" width="0.0114%" height="15" fill="rgb(224,94,2)" fg:x="79004" fg:w="13"/><text x="69.8166%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (13 samples, 0.01%)</title><rect x="69.5666%" y="837" width="0.0114%" height="15" fill="rgb(229,170,15)" fg:x="79004" fg:w="13"/><text x="69.8166%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (18 samples, 0.02%)</title><rect x="69.5913%" y="789" width="0.0158%" height="15" fill="rgb(240,127,35)" fg:x="79032" fg:w="18"/><text x="69.8413%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_swap (18 samples, 0.02%)</title><rect x="69.5913%" y="773" width="0.0158%" height="15" fill="rgb(248,196,34)" fg:x="79032" fg:w="18"/><text x="69.8413%" y="783.50"></text></g><g><title>parking::Unparker::unpark (42 samples, 0.04%)</title><rect x="69.5833%" y="821" width="0.0370%" height="15" fill="rgb(236,137,7)" fg:x="79023" fg:w="42"/><text x="69.8333%" y="831.50"></text></g><g><title>parking::Inner::unpark (36 samples, 0.03%)</title><rect x="69.5886%" y="805" width="0.0317%" height="15" fill="rgb(235,127,16)" fg:x="79029" fg:w="36"/><text x="69.8386%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="69.6071%" y="789" width="0.0132%" height="15" fill="rgb(250,192,54)" fg:x="79050" fg:w="15"/><text x="69.8571%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="69.6071%" y="773" width="0.0132%" height="15" fill="rgb(218,98,20)" fg:x="79050" fg:w="15"/><text x="69.8571%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="69.6080%" y="757" width="0.0123%" height="15" fill="rgb(230,176,47)" fg:x="79051" fg:w="14"/><text x="69.8580%" y="767.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="69.6080%" y="741" width="0.0123%" height="15" fill="rgb(244,2,33)" fg:x="79051" fg:w="14"/><text x="69.8580%" y="751.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (51 samples, 0.04%)</title><rect x="69.5807%" y="837" width="0.0449%" height="15" fill="rgb(231,100,17)" fg:x="79020" fg:w="51"/><text x="69.8307%" y="847.50"></text></g><g><title>event_listener::List::notify (205 samples, 0.18%)</title><rect x="69.4530%" y="917" width="0.1805%" height="15" fill="rgb(245,23,12)" fg:x="78875" fg:w="205"/><text x="69.7030%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (201 samples, 0.18%)</title><rect x="69.4565%" y="901" width="0.1770%" height="15" fill="rgb(249,55,22)" fg:x="78879" fg:w="201"/><text x="69.7065%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (191 samples, 0.17%)</title><rect x="69.4653%" y="885" width="0.1682%" height="15" fill="rgb(207,134,9)" fg:x="78889" fg:w="191"/><text x="69.7153%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (191 samples, 0.17%)</title><rect x="69.4653%" y="869" width="0.1682%" height="15" fill="rgb(218,134,0)" fg:x="78889" fg:w="191"/><text x="69.7153%" y="879.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (60 samples, 0.05%)</title><rect x="69.5807%" y="853" width="0.0528%" height="15" fill="rgb(213,212,33)" fg:x="79020" fg:w="60"/><text x="69.8307%" y="863.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,455 samples, 1.28%)</title><rect x="68.6244%" y="949" width="1.2812%" height="15" fill="rgb(252,106,18)" fg:x="77934" fg:w="1455"/><text x="68.8744%" y="959.50"></text></g><g><title>event_listener::Event::notify (621 samples, 0.55%)</title><rect x="69.3588%" y="933" width="0.5468%" height="15" fill="rgb(208,126,42)" fg:x="78768" fg:w="621"/><text x="69.6088%" y="943.50"></text></g><g><title>event_listener::full_fence (309 samples, 0.27%)</title><rect x="69.6335%" y="917" width="0.2721%" height="15" fill="rgb(246,175,29)" fg:x="79080" fg:w="309"/><text x="69.8835%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (296 samples, 0.26%)</title><rect x="69.6450%" y="901" width="0.2606%" height="15" fill="rgb(215,13,50)" fg:x="79093" fg:w="296"/><text x="69.8950%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (296 samples, 0.26%)</title><rect x="69.6450%" y="885" width="0.2606%" height="15" fill="rgb(216,172,15)" fg:x="79093" fg:w="296"/><text x="69.8950%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (16 samples, 0.01%)</title><rect x="69.9056%" y="949" width="0.0141%" height="15" fill="rgb(212,103,13)" fg:x="79389" fg:w="16"/><text x="70.1556%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (32 samples, 0.03%)</title><rect x="69.9197%" y="949" width="0.0282%" height="15" fill="rgb(231,171,36)" fg:x="79405" fg:w="32"/><text x="70.1697%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (19 samples, 0.02%)</title><rect x="69.9311%" y="933" width="0.0167%" height="15" fill="rgb(250,123,20)" fg:x="79418" fg:w="19"/><text x="70.1811%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="69.9479%" y="933" width="0.0220%" height="15" fill="rgb(212,53,50)" fg:x="79437" fg:w="25"/><text x="70.1979%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.02%)</title><rect x="69.9479%" y="917" width="0.0220%" height="15" fill="rgb(243,54,12)" fg:x="79437" fg:w="25"/><text x="70.1979%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.02%)</title><rect x="69.9479%" y="901" width="0.0220%" height="15" fill="rgb(234,101,34)" fg:x="79437" fg:w="25"/><text x="70.1979%" y="911.50"></text></g><g><title>event_listener::Inner::lock (14 samples, 0.01%)</title><rect x="69.9796%" y="933" width="0.0123%" height="15" fill="rgb(254,67,22)" fg:x="79473" fg:w="14"/><text x="70.2296%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="69.9796%" y="917" width="0.0123%" height="15" fill="rgb(250,35,47)" fg:x="79473" fg:w="14"/><text x="70.2296%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="69.9796%" y="901" width="0.0123%" height="15" fill="rgb(226,126,38)" fg:x="79473" fg:w="14"/><text x="70.2296%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="69.9796%" y="885" width="0.0123%" height="15" fill="rgb(216,138,53)" fg:x="79473" fg:w="14"/><text x="70.2296%" y="895.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="69.9796%" y="869" width="0.0123%" height="15" fill="rgb(246,199,43)" fg:x="79473" fg:w="14"/><text x="70.2296%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,517 samples, 2.22%)</title><rect x="67.7844%" y="1029" width="2.2163%" height="15" fill="rgb(232,125,11)" fg:x="76980" fg:w="2517"/><text x="68.0344%" y="1039.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,517 samples, 2.22%)</title><rect x="67.7844%" y="1013" width="2.2163%" height="15" fill="rgb(218,219,45)" fg:x="76980" fg:w="2517"/><text x="68.0344%" y="1023.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,517 samples, 2.22%)</title><rect x="67.7844%" y="997" width="2.2163%" height="15" fill="rgb(216,102,54)" fg:x="76980" fg:w="2517"/><text x="68.0344%" y="1007.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,517 samples, 2.22%)</title><rect x="67.7844%" y="981" width="2.2163%" height="15" fill="rgb(250,228,7)" fg:x="76980" fg:w="2517"/><text x="68.0344%" y="991.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,517 samples, 2.22%)</title><rect x="67.7844%" y="965" width="2.2163%" height="15" fill="rgb(226,125,25)" fg:x="76980" fg:w="2517"/><text x="68.0344%" y="975.50">&lt;..</text></g><g><title>event_listener::Event::listen (60 samples, 0.05%)</title><rect x="69.9479%" y="949" width="0.0528%" height="15" fill="rgb(224,165,27)" fg:x="79437" fg:w="60"/><text x="70.1979%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (249 samples, 0.22%)</title><rect x="70.2200%" y="549" width="0.2193%" height="15" fill="rgb(233,86,3)" fg:x="79746" fg:w="249"/><text x="70.4700%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (249 samples, 0.22%)</title><rect x="70.2200%" y="533" width="0.2193%" height="15" fill="rgb(228,116,20)" fg:x="79746" fg:w="249"/><text x="70.4700%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (238 samples, 0.21%)</title><rect x="70.2296%" y="517" width="0.2096%" height="15" fill="rgb(209,192,17)" fg:x="79757" fg:w="238"/><text x="70.4796%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (223 samples, 0.20%)</title><rect x="70.2429%" y="501" width="0.1964%" height="15" fill="rgb(224,88,34)" fg:x="79772" fg:w="223"/><text x="70.4929%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (223 samples, 0.20%)</title><rect x="70.2429%" y="485" width="0.1964%" height="15" fill="rgb(233,38,6)" fg:x="79772" fg:w="223"/><text x="70.4929%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (263 samples, 0.23%)</title><rect x="70.2129%" y="661" width="0.2316%" height="15" fill="rgb(212,59,30)" fg:x="79738" fg:w="263"/><text x="70.4629%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (263 samples, 0.23%)</title><rect x="70.2129%" y="645" width="0.2316%" height="15" fill="rgb(213,80,3)" fg:x="79738" fg:w="263"/><text x="70.4629%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (263 samples, 0.23%)</title><rect x="70.2129%" y="629" width="0.2316%" height="15" fill="rgb(251,178,7)" fg:x="79738" fg:w="263"/><text x="70.4629%" y="639.50"></text></g><g><title>alloc::alloc::alloc (262 samples, 0.23%)</title><rect x="70.2138%" y="613" width="0.2307%" height="15" fill="rgb(213,154,26)" fg:x="79739" fg:w="262"/><text x="70.4638%" y="623.50"></text></g><g><title>__rg_alloc (262 samples, 0.23%)</title><rect x="70.2138%" y="597" width="0.2307%" height="15" fill="rgb(238,165,49)" fg:x="79739" fg:w="262"/><text x="70.4638%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (262 samples, 0.23%)</title><rect x="70.2138%" y="581" width="0.2307%" height="15" fill="rgb(248,91,46)" fg:x="79739" fg:w="262"/><text x="70.4638%" y="591.50"></text></g><g><title>rust_alloc (262 samples, 0.23%)</title><rect x="70.2138%" y="565" width="0.2307%" height="15" fill="rgb(244,21,52)" fg:x="79739" fg:w="262"/><text x="70.4638%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (67 samples, 0.06%)</title><rect x="70.5378%" y="597" width="0.0590%" height="15" fill="rgb(247,122,20)" fg:x="80107" fg:w="67"/><text x="70.7878%" y="607.50"></text></g><g><title>core::cmp::PartialOrd::ge (67 samples, 0.06%)</title><rect x="70.5378%" y="581" width="0.0590%" height="15" fill="rgb(218,27,9)" fg:x="80107" fg:w="67"/><text x="70.7878%" y="591.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (65 samples, 0.06%)</title><rect x="70.5396%" y="565" width="0.0572%" height="15" fill="rgb(246,7,6)" fg:x="80109" fg:w="65"/><text x="70.7896%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (65 samples, 0.06%)</title><rect x="70.5396%" y="549" width="0.0572%" height="15" fill="rgb(227,135,54)" fg:x="80109" fg:w="65"/><text x="70.7896%" y="559.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (65 samples, 0.06%)</title><rect x="70.5396%" y="533" width="0.0572%" height="15" fill="rgb(247,14,11)" fg:x="80109" fg:w="65"/><text x="70.7896%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (29 samples, 0.03%)</title><rect x="70.5713%" y="517" width="0.0255%" height="15" fill="rgb(206,149,34)" fg:x="80145" fg:w="29"/><text x="70.8213%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (143 samples, 0.13%)</title><rect x="70.4947%" y="629" width="0.1259%" height="15" fill="rgb(227,228,4)" fg:x="80058" fg:w="143"/><text x="70.7447%" y="639.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (143 samples, 0.13%)</title><rect x="70.4947%" y="613" width="0.1259%" height="15" fill="rgb(238,218,28)" fg:x="80058" fg:w="143"/><text x="70.7447%" y="623.50"></text></g><g><title>core::time::Duration::new (27 samples, 0.02%)</title><rect x="70.5968%" y="597" width="0.0238%" height="15" fill="rgb(252,86,40)" fg:x="80174" fg:w="27"/><text x="70.8468%" y="607.50"></text></g><g><title>std::time::SystemTime::duration_since (150 samples, 0.13%)</title><rect x="70.4947%" y="645" width="0.1321%" height="15" fill="rgb(251,225,11)" fg:x="80058" fg:w="150"/><text x="70.7447%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (3,810 samples, 3.35%)</title><rect x="67.7844%" y="1045" width="3.3549%" height="15" fill="rgb(206,46,49)" fg:x="76980" fg:w="3810"/><text x="68.0344%" y="1055.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,293 samples, 1.14%)</title><rect x="70.0007%" y="1029" width="1.1385%" height="15" fill="rgb(245,128,24)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,293 samples, 1.14%)</title><rect x="70.0007%" y="1013" width="1.1385%" height="15" fill="rgb(219,177,34)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="1023.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,293 samples, 1.14%)</title><rect x="70.0007%" y="997" width="1.1385%" height="15" fill="rgb(218,60,48)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="1007.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,293 samples, 1.14%)</title><rect x="70.0007%" y="981" width="1.1385%" height="15" fill="rgb(221,11,5)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="991.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,293 samples, 1.14%)</title><rect x="70.0007%" y="965" width="1.1385%" height="15" fill="rgb(220,148,13)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="975.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,293 samples, 1.14%)</title><rect x="70.0007%" y="949" width="1.1385%" height="15" fill="rgb(210,16,3)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="959.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,293 samples, 1.14%)</title><rect x="70.0007%" y="933" width="1.1385%" height="15" fill="rgb(236,80,2)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1,293 samples, 1.14%)</title><rect x="70.0007%" y="917" width="1.1385%" height="15" fill="rgb(239,129,19)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="927.50"></text></g><g><title>std::panicking::try (1,293 samples, 1.14%)</title><rect x="70.0007%" y="901" width="1.1385%" height="15" fill="rgb(220,106,35)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1,293 samples, 1.14%)</title><rect x="70.0007%" y="885" width="1.1385%" height="15" fill="rgb(252,139,45)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="895.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,293 samples, 1.14%)</title><rect x="70.0007%" y="869" width="1.1385%" height="15" fill="rgb(229,8,36)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,293 samples, 1.14%)</title><rect x="70.0007%" y="853" width="1.1385%" height="15" fill="rgb(230,126,33)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="863.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,293 samples, 1.14%)</title><rect x="70.0007%" y="837" width="1.1385%" height="15" fill="rgb(239,140,21)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="847.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,293 samples, 1.14%)</title><rect x="70.0007%" y="821" width="1.1385%" height="15" fill="rgb(254,104,9)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="831.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,293 samples, 1.14%)</title><rect x="70.0007%" y="805" width="1.1385%" height="15" fill="rgb(239,52,14)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,293 samples, 1.14%)</title><rect x="70.0007%" y="789" width="1.1385%" height="15" fill="rgb(208,227,44)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="799.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,293 samples, 1.14%)</title><rect x="70.0007%" y="773" width="1.1385%" height="15" fill="rgb(246,18,19)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="783.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,293 samples, 1.14%)</title><rect x="70.0007%" y="757" width="1.1385%" height="15" fill="rgb(235,228,25)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="767.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,293 samples, 1.14%)</title><rect x="70.0007%" y="741" width="1.1385%" height="15" fill="rgb(240,156,20)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="751.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,293 samples, 1.14%)</title><rect x="70.0007%" y="725" width="1.1385%" height="15" fill="rgb(224,8,20)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,293 samples, 1.14%)</title><rect x="70.0007%" y="709" width="1.1385%" height="15" fill="rgb(214,12,52)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="719.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,293 samples, 1.14%)</title><rect x="70.0007%" y="693" width="1.1385%" height="15" fill="rgb(211,220,47)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="703.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (1,293 samples, 1.14%)</title><rect x="70.0007%" y="677" width="1.1385%" height="15" fill="rgb(250,173,5)" fg:x="79497" fg:w="1293"/><text x="70.2507%" y="687.50"></text></g><g><title>tremor_common::time::nanotime (766 samples, 0.67%)</title><rect x="70.4648%" y="661" width="0.6745%" height="15" fill="rgb(250,125,52)" fg:x="80024" fg:w="766"/><text x="70.7148%" y="671.50"></text></g><g><title>std::time::SystemTime::now (582 samples, 0.51%)</title><rect x="70.6268%" y="645" width="0.5125%" height="15" fill="rgb(209,133,18)" fg:x="80208" fg:w="582"/><text x="70.8768%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (582 samples, 0.51%)</title><rect x="70.6268%" y="629" width="0.5125%" height="15" fill="rgb(216,173,22)" fg:x="80208" fg:w="582"/><text x="70.8768%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::now (582 samples, 0.51%)</title><rect x="70.6268%" y="613" width="0.5125%" height="15" fill="rgb(205,3,22)" fg:x="80208" fg:w="582"/><text x="70.8768%" y="623.50"></text></g><g><title>__clock_gettime_2 (462 samples, 0.41%)</title><rect x="70.7324%" y="597" width="0.4068%" height="15" fill="rgb(248,22,20)" fg:x="80328" fg:w="462"/><text x="70.9824%" y="607.50"></text></g><g><title>__vdso_clock_gettime (441 samples, 0.39%)</title><rect x="70.7509%" y="581" width="0.3883%" height="15" fill="rgb(233,6,29)" fg:x="80349" fg:w="441"/><text x="71.0009%" y="591.50"></text></g><g><title>[[vdso]] (307 samples, 0.27%)</title><rect x="70.8689%" y="565" width="0.2703%" height="15" fill="rgb(240,22,54)" fg:x="80483" fg:w="307"/><text x="71.1189%" y="575.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::default::Default&gt;::default (22 samples, 0.02%)</title><rect x="71.6139%" y="949" width="0.0194%" height="15" fill="rgb(231,133,32)" fg:x="81329" fg:w="22"/><text x="71.8639%" y="959.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="71.6773%" y="725" width="0.0132%" height="15" fill="rgb(248,193,4)" fg:x="81401" fg:w="15"/><text x="71.9273%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (62 samples, 0.05%)</title><rect x="71.6984%" y="677" width="0.0546%" height="15" fill="rgb(211,178,46)" fg:x="81425" fg:w="62"/><text x="71.9484%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (62 samples, 0.05%)</title><rect x="71.6984%" y="661" width="0.0546%" height="15" fill="rgb(224,5,42)" fg:x="81425" fg:w="62"/><text x="71.9484%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (55 samples, 0.05%)</title><rect x="71.7046%" y="645" width="0.0484%" height="15" fill="rgb(239,176,25)" fg:x="81432" fg:w="55"/><text x="71.9546%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (42 samples, 0.04%)</title><rect x="71.7160%" y="629" width="0.0370%" height="15" fill="rgb(245,187,50)" fg:x="81445" fg:w="42"/><text x="71.9660%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="71.7160%" y="613" width="0.0370%" height="15" fill="rgb(248,24,15)" fg:x="81445" fg:w="42"/><text x="71.9660%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="71.7160%" y="597" width="0.0370%" height="15" fill="rgb(205,166,13)" fg:x="81445" fg:w="42"/><text x="71.9660%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="71.7627%" y="677" width="0.0211%" height="15" fill="rgb(208,114,23)" fg:x="81498" fg:w="24"/><text x="72.0127%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="71.7627%" y="661" width="0.0211%" height="15" fill="rgb(239,127,18)" fg:x="81498" fg:w="24"/><text x="72.0127%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="71.7627%" y="645" width="0.0211%" height="15" fill="rgb(219,154,28)" fg:x="81498" fg:w="24"/><text x="72.0127%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="71.7644%" y="629" width="0.0194%" height="15" fill="rgb(225,157,23)" fg:x="81500" fg:w="22"/><text x="72.0144%" y="639.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (20 samples, 0.02%)</title><rect x="71.7662%" y="613" width="0.0176%" height="15" fill="rgb(219,8,6)" fg:x="81502" fg:w="20"/><text x="72.0162%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (161 samples, 0.14%)</title><rect x="71.6905%" y="725" width="0.1418%" height="15" fill="rgb(212,47,6)" fg:x="81416" fg:w="161"/><text x="71.9405%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (161 samples, 0.14%)</title><rect x="71.6905%" y="709" width="0.1418%" height="15" fill="rgb(224,190,4)" fg:x="81416" fg:w="161"/><text x="71.9405%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (152 samples, 0.13%)</title><rect x="71.6984%" y="693" width="0.1338%" height="15" fill="rgb(239,183,29)" fg:x="81425" fg:w="152"/><text x="71.9484%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (55 samples, 0.05%)</title><rect x="71.7838%" y="677" width="0.0484%" height="15" fill="rgb(213,57,7)" fg:x="81522" fg:w="55"/><text x="72.0338%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (55 samples, 0.05%)</title><rect x="71.7838%" y="661" width="0.0484%" height="15" fill="rgb(216,148,1)" fg:x="81522" fg:w="55"/><text x="72.0338%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (220 samples, 0.19%)</title><rect x="71.6420%" y="853" width="0.1937%" height="15" fill="rgb(236,182,29)" fg:x="81361" fg:w="220"/><text x="71.8920%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (209 samples, 0.18%)</title><rect x="71.6517%" y="837" width="0.1840%" height="15" fill="rgb(244,120,48)" fg:x="81372" fg:w="209"/><text x="71.9017%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (209 samples, 0.18%)</title><rect x="71.6517%" y="821" width="0.1840%" height="15" fill="rgb(206,71,34)" fg:x="81372" fg:w="209"/><text x="71.9017%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (209 samples, 0.18%)</title><rect x="71.6517%" y="805" width="0.1840%" height="15" fill="rgb(242,32,6)" fg:x="81372" fg:w="209"/><text x="71.9017%" y="815.50"></text></g><g><title>alloc::alloc::alloc (199 samples, 0.18%)</title><rect x="71.6605%" y="789" width="0.1752%" height="15" fill="rgb(241,35,3)" fg:x="81382" fg:w="199"/><text x="71.9105%" y="799.50"></text></g><g><title>__rg_alloc (199 samples, 0.18%)</title><rect x="71.6605%" y="773" width="0.1752%" height="15" fill="rgb(222,62,19)" fg:x="81382" fg:w="199"/><text x="71.9105%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (199 samples, 0.18%)</title><rect x="71.6605%" y="757" width="0.1752%" height="15" fill="rgb(223,110,41)" fg:x="81382" fg:w="199"/><text x="71.9105%" y="767.50"></text></g><g><title>rust_alloc (180 samples, 0.16%)</title><rect x="71.6773%" y="741" width="0.1585%" height="15" fill="rgb(208,224,4)" fg:x="81401" fg:w="180"/><text x="71.9273%" y="751.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (232 samples, 0.20%)</title><rect x="71.6332%" y="949" width="0.2043%" height="15" fill="rgb(241,137,19)" fg:x="81351" fg:w="232"/><text x="71.8832%" y="959.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (222 samples, 0.20%)</title><rect x="71.6420%" y="933" width="0.1955%" height="15" fill="rgb(244,24,17)" fg:x="81361" fg:w="222"/><text x="71.8920%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (222 samples, 0.20%)</title><rect x="71.6420%" y="917" width="0.1955%" height="15" fill="rgb(245,178,49)" fg:x="81361" fg:w="222"/><text x="71.8920%" y="927.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (222 samples, 0.20%)</title><rect x="71.6420%" y="901" width="0.1955%" height="15" fill="rgb(219,160,38)" fg:x="81361" fg:w="222"/><text x="71.8920%" y="911.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (222 samples, 0.20%)</title><rect x="71.6420%" y="885" width="0.1955%" height="15" fill="rgb(228,137,14)" fg:x="81361" fg:w="222"/><text x="71.8920%" y="895.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (222 samples, 0.20%)</title><rect x="71.6420%" y="869" width="0.1955%" height="15" fill="rgb(237,134,11)" fg:x="81361" fg:w="222"/><text x="71.8920%" y="879.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (12 samples, 0.01%)</title><rect x="72.1836%" y="789" width="0.0106%" height="15" fill="rgb(211,126,44)" fg:x="81976" fg:w="12"/><text x="72.4336%" y="799.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="72.2250%" y="661" width="0.0123%" height="15" fill="rgb(226,171,33)" fg:x="82023" fg:w="14"/><text x="72.4750%" y="671.50"></text></g><g><title>rust_alloc (16 samples, 0.01%)</title><rect x="72.2373%" y="661" width="0.0141%" height="15" fill="rgb(253,99,13)" fg:x="82037" fg:w="16"/><text x="72.4873%" y="671.50"></text></g><g><title>rust_alloc (20 samples, 0.02%)</title><rect x="72.2514%" y="629" width="0.0176%" height="15" fill="rgb(244,48,7)" fg:x="82053" fg:w="20"/><text x="72.5014%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (12 samples, 0.01%)</title><rect x="72.2998%" y="501" width="0.0106%" height="15" fill="rgb(244,217,54)" fg:x="82108" fg:w="12"/><text x="72.5498%" y="511.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="72.2998%" y="485" width="0.0106%" height="15" fill="rgb(224,15,18)" fg:x="82108" fg:w="12"/><text x="72.5498%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (33 samples, 0.03%)</title><rect x="72.2901%" y="549" width="0.0291%" height="15" fill="rgb(244,99,12)" fg:x="82097" fg:w="33"/><text x="72.5401%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (33 samples, 0.03%)</title><rect x="72.2901%" y="533" width="0.0291%" height="15" fill="rgb(233,226,8)" fg:x="82097" fg:w="33"/><text x="72.5401%" y="543.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (27 samples, 0.02%)</title><rect x="72.2954%" y="517" width="0.0238%" height="15" fill="rgb(229,211,3)" fg:x="82103" fg:w="27"/><text x="72.5454%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (45 samples, 0.04%)</title><rect x="72.2901%" y="565" width="0.0396%" height="15" fill="rgb(216,140,21)" fg:x="82097" fg:w="45"/><text x="72.5401%" y="575.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="72.3192%" y="549" width="0.0106%" height="15" fill="rgb(234,122,30)" fg:x="82130" fg:w="12"/><text x="72.5692%" y="559.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="72.3192%" y="533" width="0.0106%" height="15" fill="rgb(236,25,46)" fg:x="82130" fg:w="12"/><text x="72.5692%" y="543.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="72.3192%" y="517" width="0.0106%" height="15" fill="rgb(217,52,54)" fg:x="82130" fg:w="12"/><text x="72.5692%" y="527.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="72.3192%" y="501" width="0.0106%" height="15" fill="rgb(222,29,26)" fg:x="82130" fg:w="12"/><text x="72.5692%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (62 samples, 0.05%)</title><rect x="72.2840%" y="581" width="0.0546%" height="15" fill="rgb(216,177,29)" fg:x="82090" fg:w="62"/><text x="72.5340%" y="591.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (32 samples, 0.03%)</title><rect x="72.3544%" y="565" width="0.0282%" height="15" fill="rgb(247,136,51)" fg:x="82170" fg:w="32"/><text x="72.6044%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (389 samples, 0.34%)</title><rect x="72.2831%" y="613" width="0.3425%" height="15" fill="rgb(231,47,47)" fg:x="82089" fg:w="389"/><text x="72.5331%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (389 samples, 0.34%)</title><rect x="72.2831%" y="597" width="0.3425%" height="15" fill="rgb(211,192,36)" fg:x="82089" fg:w="389"/><text x="72.5331%" y="607.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (326 samples, 0.29%)</title><rect x="72.3386%" y="581" width="0.2871%" height="15" fill="rgb(229,156,32)" fg:x="82152" fg:w="326"/><text x="72.5886%" y="591.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (276 samples, 0.24%)</title><rect x="72.3826%" y="565" width="0.2430%" height="15" fill="rgb(248,213,20)" fg:x="82202" fg:w="276"/><text x="72.6326%" y="575.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (276 samples, 0.24%)</title><rect x="72.3826%" y="549" width="0.2430%" height="15" fill="rgb(217,64,7)" fg:x="82202" fg:w="276"/><text x="72.6326%" y="559.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (276 samples, 0.24%)</title><rect x="72.3826%" y="533" width="0.2430%" height="15" fill="rgb(232,142,8)" fg:x="82202" fg:w="276"/><text x="72.6326%" y="543.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (13 samples, 0.01%)</title><rect x="72.6309%" y="581" width="0.0114%" height="15" fill="rgb(224,92,44)" fg:x="82484" fg:w="13"/><text x="72.8809%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (13 samples, 0.01%)</title><rect x="72.6309%" y="565" width="0.0114%" height="15" fill="rgb(214,169,17)" fg:x="82484" fg:w="13"/><text x="72.8809%" y="575.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="72.6309%" y="549" width="0.0114%" height="15" fill="rgb(210,59,37)" fg:x="82484" fg:w="13"/><text x="72.8809%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (32 samples, 0.03%)</title><rect x="72.6256%" y="613" width="0.0282%" height="15" fill="rgb(214,116,48)" fg:x="82478" fg:w="32"/><text x="72.8756%" y="623.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (26 samples, 0.02%)</title><rect x="72.6309%" y="597" width="0.0229%" height="15" fill="rgb(244,191,6)" fg:x="82484" fg:w="26"/><text x="72.8809%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="72.6538%" y="613" width="0.0203%" height="15" fill="rgb(241,50,52)" fg:x="82510" fg:w="23"/><text x="72.9038%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="72.6547%" y="597" width="0.0194%" height="15" fill="rgb(236,75,39)" fg:x="82511" fg:w="22"/><text x="72.9047%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="72.6547%" y="581" width="0.0194%" height="15" fill="rgb(236,99,0)" fg:x="82511" fg:w="22"/><text x="72.9047%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="72.6547%" y="565" width="0.0194%" height="15" fill="rgb(207,202,15)" fg:x="82511" fg:w="22"/><text x="72.9047%" y="575.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (22 samples, 0.02%)</title><rect x="72.6547%" y="549" width="0.0194%" height="15" fill="rgb(233,207,14)" fg:x="82511" fg:w="22"/><text x="72.9047%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (787 samples, 0.69%)</title><rect x="72.2514%" y="661" width="0.6930%" height="15" fill="rgb(226,27,51)" fg:x="82053" fg:w="787"/><text x="72.5014%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (787 samples, 0.69%)</title><rect x="72.2514%" y="645" width="0.6930%" height="15" fill="rgb(206,104,42)" fg:x="82053" fg:w="787"/><text x="72.5014%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (764 samples, 0.67%)</title><rect x="72.2716%" y="629" width="0.6727%" height="15" fill="rgb(212,225,4)" fg:x="82076" fg:w="764"/><text x="72.5216%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::take (299 samples, 0.26%)</title><rect x="72.6811%" y="613" width="0.2633%" height="15" fill="rgb(233,96,42)" fg:x="82541" fg:w="299"/><text x="72.9311%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (299 samples, 0.26%)</title><rect x="72.6811%" y="597" width="0.2633%" height="15" fill="rgb(229,21,32)" fg:x="82541" fg:w="299"/><text x="72.9311%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (871 samples, 0.77%)</title><rect x="72.1783%" y="869" width="0.7670%" height="15" fill="rgb(226,216,24)" fg:x="81970" fg:w="871"/><text x="72.4283%" y="879.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (871 samples, 0.77%)</title><rect x="72.1783%" y="853" width="0.7670%" height="15" fill="rgb(221,163,17)" fg:x="81970" fg:w="871"/><text x="72.4283%" y="863.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (871 samples, 0.77%)</title><rect x="72.1783%" y="837" width="0.7670%" height="15" fill="rgb(216,216,42)" fg:x="81970" fg:w="871"/><text x="72.4283%" y="847.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (865 samples, 0.76%)</title><rect x="72.1836%" y="821" width="0.7617%" height="15" fill="rgb(240,118,7)" fg:x="81976" fg:w="865"/><text x="72.4336%" y="831.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (865 samples, 0.76%)</title><rect x="72.1836%" y="805" width="0.7617%" height="15" fill="rgb(221,67,37)" fg:x="81976" fg:w="865"/><text x="72.4336%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (853 samples, 0.75%)</title><rect x="72.1941%" y="789" width="0.7511%" height="15" fill="rgb(241,32,44)" fg:x="81988" fg:w="853"/><text x="72.4441%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (829 samples, 0.73%)</title><rect x="72.2153%" y="773" width="0.7300%" height="15" fill="rgb(235,204,43)" fg:x="82012" fg:w="829"/><text x="72.4653%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (829 samples, 0.73%)</title><rect x="72.2153%" y="757" width="0.7300%" height="15" fill="rgb(213,116,10)" fg:x="82012" fg:w="829"/><text x="72.4653%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (829 samples, 0.73%)</title><rect x="72.2153%" y="741" width="0.7300%" height="15" fill="rgb(239,15,48)" fg:x="82012" fg:w="829"/><text x="72.4653%" y="751.50"></text></g><g><title>alloc::alloc::alloc (829 samples, 0.73%)</title><rect x="72.2153%" y="725" width="0.7300%" height="15" fill="rgb(207,123,36)" fg:x="82012" fg:w="829"/><text x="72.4653%" y="735.50"></text></g><g><title>__rg_alloc (829 samples, 0.73%)</title><rect x="72.2153%" y="709" width="0.7300%" height="15" fill="rgb(209,103,30)" fg:x="82012" fg:w="829"/><text x="72.4653%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (829 samples, 0.73%)</title><rect x="72.2153%" y="693" width="0.7300%" height="15" fill="rgb(238,100,19)" fg:x="82012" fg:w="829"/><text x="72.4653%" y="703.50"></text></g><g><title>rust_alloc (818 samples, 0.72%)</title><rect x="72.2250%" y="677" width="0.7203%" height="15" fill="rgb(244,30,14)" fg:x="82023" fg:w="818"/><text x="72.4750%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (938 samples, 0.83%)</title><rect x="72.1783%" y="885" width="0.8260%" height="15" fill="rgb(249,174,6)" fg:x="81970" fg:w="938"/><text x="72.4283%" y="895.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (67 samples, 0.06%)</title><rect x="72.9452%" y="869" width="0.0590%" height="15" fill="rgb(235,213,41)" fg:x="82841" fg:w="67"/><text x="73.1952%" y="879.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (55 samples, 0.05%)</title><rect x="72.9558%" y="853" width="0.0484%" height="15" fill="rgb(213,118,6)" fg:x="82853" fg:w="55"/><text x="73.2058%" y="863.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (43 samples, 0.04%)</title><rect x="72.9664%" y="837" width="0.0379%" height="15" fill="rgb(235,44,51)" fg:x="82865" fg:w="43"/><text x="73.2164%" y="847.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (36 samples, 0.03%)</title><rect x="72.9725%" y="821" width="0.0317%" height="15" fill="rgb(217,9,53)" fg:x="82872" fg:w="36"/><text x="73.2225%" y="831.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (36 samples, 0.03%)</title><rect x="72.9725%" y="805" width="0.0317%" height="15" fill="rgb(237,172,34)" fg:x="82872" fg:w="36"/><text x="73.2225%" y="815.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::reserve (36 samples, 0.03%)</title><rect x="72.9725%" y="789" width="0.0317%" height="15" fill="rgb(206,206,11)" fg:x="82872" fg:w="36"/><text x="73.2225%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (25 samples, 0.02%)</title><rect x="72.9822%" y="773" width="0.0220%" height="15" fill="rgb(214,149,29)" fg:x="82883" fg:w="25"/><text x="73.2322%" y="783.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (25 samples, 0.02%)</title><rect x="72.9822%" y="757" width="0.0220%" height="15" fill="rgb(208,123,3)" fg:x="82883" fg:w="25"/><text x="73.2322%" y="767.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (1,081 samples, 0.95%)</title><rect x="72.0638%" y="933" width="0.9519%" height="15" fill="rgb(229,126,4)" fg:x="81840" fg:w="1081"/><text x="72.3138%" y="943.50"></text></g><g><title>value_trait::Builder::object (951 samples, 0.84%)</title><rect x="72.1783%" y="917" width="0.8374%" height="15" fill="rgb(222,92,36)" fg:x="81970" fg:w="951"/><text x="72.4283%" y="927.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (951 samples, 0.84%)</title><rect x="72.1783%" y="901" width="0.8374%" height="15" fill="rgb(216,39,41)" fg:x="81970" fg:w="951"/><text x="72.4283%" y="911.50"></text></g><g><title>tremor_value::value::Value::Object (13 samples, 0.01%)</title><rect x="73.0042%" y="885" width="0.0114%" height="15" fill="rgb(253,127,28)" fg:x="82908" fg:w="13"/><text x="73.2542%" y="895.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,663 samples, 1.46%)</title><rect x="71.5751%" y="965" width="1.4643%" height="15" fill="rgb(249,152,51)" fg:x="81285" fg:w="1663"/><text x="71.8251%" y="975.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (1,365 samples, 1.20%)</title><rect x="71.8375%" y="949" width="1.2019%" height="15" fill="rgb(209,123,42)" fg:x="81583" fg:w="1365"/><text x="72.0875%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::default::Default for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::default (27 samples, 0.02%)</title><rect x="73.0157%" y="933" width="0.0238%" height="15" fill="rgb(241,118,22)" fg:x="82921" fg:w="27"/><text x="73.2657%" y="943.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (27 samples, 0.02%)</title><rect x="73.0157%" y="917" width="0.0238%" height="15" fill="rgb(208,25,7)" fg:x="82921" fg:w="27"/><text x="73.2657%" y="927.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (27 samples, 0.02%)</title><rect x="73.0157%" y="901" width="0.0238%" height="15" fill="rgb(243,144,39)" fg:x="82921" fg:w="27"/><text x="73.2657%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (14 samples, 0.01%)</title><rect x="73.0395%" y="965" width="0.0123%" height="15" fill="rgb(250,50,5)" fg:x="82948" fg:w="14"/><text x="73.2895%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (28 samples, 0.02%)</title><rect x="73.0518%" y="965" width="0.0247%" height="15" fill="rgb(207,67,11)" fg:x="82962" fg:w="28"/><text x="73.3018%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (28 samples, 0.02%)</title><rect x="73.0518%" y="949" width="0.0247%" height="15" fill="rgb(245,204,40)" fg:x="82962" fg:w="28"/><text x="73.3018%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (28 samples, 0.02%)</title><rect x="73.0518%" y="933" width="0.0247%" height="15" fill="rgb(238,228,24)" fg:x="82962" fg:w="28"/><text x="73.3018%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (28 samples, 0.02%)</title><rect x="73.0949%" y="933" width="0.0247%" height="15" fill="rgb(217,116,22)" fg:x="83011" fg:w="28"/><text x="73.3449%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (28 samples, 0.02%)</title><rect x="73.0949%" y="917" width="0.0247%" height="15" fill="rgb(234,98,12)" fg:x="83011" fg:w="28"/><text x="73.3449%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (17 samples, 0.01%)</title><rect x="73.1046%" y="901" width="0.0150%" height="15" fill="rgb(242,170,50)" fg:x="83022" fg:w="17"/><text x="73.3546%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (47 samples, 0.04%)</title><rect x="73.0861%" y="949" width="0.0414%" height="15" fill="rgb(235,7,5)" fg:x="83001" fg:w="47"/><text x="73.3361%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="73.1531%" y="853" width="0.0106%" height="15" fill="rgb(241,114,28)" fg:x="83077" fg:w="12"/><text x="73.4031%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (12 samples, 0.01%)</title><rect x="73.1531%" y="837" width="0.0106%" height="15" fill="rgb(246,112,42)" fg:x="83077" fg:w="12"/><text x="73.4031%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (51 samples, 0.04%)</title><rect x="73.1275%" y="949" width="0.0449%" height="15" fill="rgb(248,228,14)" fg:x="83048" fg:w="51"/><text x="73.3775%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (51 samples, 0.04%)</title><rect x="73.1275%" y="933" width="0.0449%" height="15" fill="rgb(208,133,18)" fg:x="83048" fg:w="51"/><text x="73.3775%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (41 samples, 0.04%)</title><rect x="73.1363%" y="917" width="0.0361%" height="15" fill="rgb(207,35,49)" fg:x="83058" fg:w="41"/><text x="73.3863%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (37 samples, 0.03%)</title><rect x="73.1398%" y="901" width="0.0326%" height="15" fill="rgb(205,68,36)" fg:x="83062" fg:w="37"/><text x="73.3898%" y="911.50"></text></g><g><title>core::mem::drop (22 samples, 0.02%)</title><rect x="73.1531%" y="885" width="0.0194%" height="15" fill="rgb(245,62,40)" fg:x="83077" fg:w="22"/><text x="73.4031%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="73.1531%" y="869" width="0.0194%" height="15" fill="rgb(228,27,24)" fg:x="83077" fg:w="22"/><text x="73.4031%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (47 samples, 0.04%)</title><rect x="73.1724%" y="933" width="0.0414%" height="15" fill="rgb(253,19,12)" fg:x="83099" fg:w="47"/><text x="73.4224%" y="943.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (30 samples, 0.03%)</title><rect x="73.2393%" y="869" width="0.0264%" height="15" fill="rgb(232,28,20)" fg:x="83175" fg:w="30"/><text x="73.4893%" y="879.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.01%)</title><rect x="73.3142%" y="725" width="0.0150%" height="15" fill="rgb(218,35,51)" fg:x="83260" fg:w="17"/><text x="73.5642%" y="735.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.01%)</title><rect x="73.3142%" y="709" width="0.0150%" height="15" fill="rgb(212,90,40)" fg:x="83260" fg:w="17"/><text x="73.5642%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (46 samples, 0.04%)</title><rect x="73.2939%" y="773" width="0.0405%" height="15" fill="rgb(220,172,12)" fg:x="83237" fg:w="46"/><text x="73.5439%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (46 samples, 0.04%)</title><rect x="73.2939%" y="757" width="0.0405%" height="15" fill="rgb(226,159,20)" fg:x="83237" fg:w="46"/><text x="73.5439%" y="767.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (44 samples, 0.04%)</title><rect x="73.2957%" y="741" width="0.0387%" height="15" fill="rgb(234,205,16)" fg:x="83239" fg:w="44"/><text x="73.5457%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (74 samples, 0.07%)</title><rect x="73.2807%" y="805" width="0.0652%" height="15" fill="rgb(207,9,39)" fg:x="83222" fg:w="74"/><text x="73.5307%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (74 samples, 0.07%)</title><rect x="73.2807%" y="789" width="0.0652%" height="15" fill="rgb(249,143,15)" fg:x="83222" fg:w="74"/><text x="73.5307%" y="799.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="73.3344%" y="773" width="0.0114%" height="15" fill="rgb(253,133,29)" fg:x="83283" fg:w="13"/><text x="73.5844%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (75 samples, 0.07%)</title><rect x="73.2807%" y="837" width="0.0660%" height="15" fill="rgb(221,187,0)" fg:x="83222" fg:w="75"/><text x="73.5307%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (75 samples, 0.07%)</title><rect x="73.2807%" y="821" width="0.0660%" height="15" fill="rgb(205,204,26)" fg:x="83222" fg:w="75"/><text x="73.5307%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (91 samples, 0.08%)</title><rect x="73.2728%" y="853" width="0.0801%" height="15" fill="rgb(224,68,54)" fg:x="83213" fg:w="91"/><text x="73.5228%" y="863.50"></text></g><g><title>rust_dealloc (106 samples, 0.09%)</title><rect x="73.2658%" y="869" width="0.0933%" height="15" fill="rgb(209,67,4)" fg:x="83205" fg:w="106"/><text x="73.5158%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (217 samples, 0.19%)</title><rect x="73.1724%" y="949" width="0.1911%" height="15" fill="rgb(228,229,18)" fg:x="83099" fg:w="217"/><text x="73.4224%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (170 samples, 0.15%)</title><rect x="73.2138%" y="933" width="0.1497%" height="15" fill="rgb(231,89,13)" fg:x="83146" fg:w="170"/><text x="73.4638%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (158 samples, 0.14%)</title><rect x="73.2244%" y="917" width="0.1391%" height="15" fill="rgb(210,182,18)" fg:x="83158" fg:w="158"/><text x="73.4744%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt;&gt; (158 samples, 0.14%)</title><rect x="73.2244%" y="901" width="0.1391%" height="15" fill="rgb(240,105,2)" fg:x="83158" fg:w="158"/><text x="73.4744%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (158 samples, 0.14%)</title><rect x="73.2244%" y="885" width="0.1391%" height="15" fill="rgb(207,170,50)" fg:x="83158" fg:w="158"/><text x="73.4744%" y="895.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="73.3635%" y="933" width="0.0106%" height="15" fill="rgb(232,133,24)" fg:x="83316" fg:w="12"/><text x="73.6135%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="73.3838%" y="853" width="0.0273%" height="15" fill="rgb(235,166,27)" fg:x="83339" fg:w="31"/><text x="73.6338%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="73.3838%" y="837" width="0.0273%" height="15" fill="rgb(209,19,13)" fg:x="83339" fg:w="31"/><text x="73.6338%" y="847.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (28 samples, 0.02%)</title><rect x="73.3864%" y="821" width="0.0247%" height="15" fill="rgb(226,79,39)" fg:x="83342" fg:w="28"/><text x="73.6364%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (43 samples, 0.04%)</title><rect x="73.3741%" y="885" width="0.0379%" height="15" fill="rgb(222,163,10)" fg:x="83328" fg:w="43"/><text x="73.6241%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (43 samples, 0.04%)</title><rect x="73.3741%" y="869" width="0.0379%" height="15" fill="rgb(214,44,19)" fg:x="83328" fg:w="43"/><text x="73.6241%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (53 samples, 0.05%)</title><rect x="73.3741%" y="917" width="0.0467%" height="15" fill="rgb(210,217,13)" fg:x="83328" fg:w="53"/><text x="73.6241%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (53 samples, 0.05%)</title><rect x="73.3741%" y="901" width="0.0467%" height="15" fill="rgb(237,61,54)" fg:x="83328" fg:w="53"/><text x="73.6241%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (64 samples, 0.06%)</title><rect x="73.3741%" y="933" width="0.0564%" height="15" fill="rgb(226,184,24)" fg:x="83328" fg:w="64"/><text x="73.6241%" y="943.50"></text></g><g><title>rust_dealloc (89 samples, 0.08%)</title><rect x="73.3635%" y="949" width="0.0784%" height="15" fill="rgb(223,226,4)" fg:x="83316" fg:w="89"/><text x="73.6135%" y="959.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="73.4304%" y="933" width="0.0114%" height="15" fill="rgb(210,26,41)" fg:x="83392" fg:w="13"/><text x="73.6804%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (429 samples, 0.38%)</title><rect x="73.0764%" y="965" width="0.3778%" height="15" fill="rgb(220,221,6)" fg:x="82990" fg:w="429"/><text x="73.3264%" y="975.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (14 samples, 0.01%)</title><rect x="73.4419%" y="949" width="0.0123%" height="15" fill="rgb(225,89,49)" fg:x="83405" fg:w="14"/><text x="73.6919%" y="959.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (2,642 samples, 2.33%)</title><rect x="71.1392%" y="981" width="2.3264%" height="15" fill="rgb(218,70,45)" fg:x="80790" fg:w="2642"/><text x="71.3892%" y="991.50">t..</text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (13 samples, 0.01%)</title><rect x="73.4542%" y="965" width="0.0114%" height="15" fill="rgb(238,166,21)" fg:x="83419" fg:w="13"/><text x="73.7042%" y="975.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.04%)</title><rect x="73.8637%" y="805" width="0.0423%" height="15" fill="rgb(224,141,44)" fg:x="83884" fg:w="48"/><text x="74.1137%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (48 samples, 0.04%)</title><rect x="73.8637%" y="789" width="0.0423%" height="15" fill="rgb(230,12,49)" fg:x="83884" fg:w="48"/><text x="74.1137%" y="799.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (39 samples, 0.03%)</title><rect x="73.8716%" y="773" width="0.0343%" height="15" fill="rgb(212,174,12)" fg:x="83893" fg:w="39"/><text x="74.1216%" y="783.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (32 samples, 0.03%)</title><rect x="73.8777%" y="757" width="0.0282%" height="15" fill="rgb(246,67,9)" fg:x="83900" fg:w="32"/><text x="74.1277%" y="767.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (32 samples, 0.03%)</title><rect x="73.8777%" y="741" width="0.0282%" height="15" fill="rgb(239,35,23)" fg:x="83900" fg:w="32"/><text x="74.1277%" y="751.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (32 samples, 0.03%)</title><rect x="73.8777%" y="725" width="0.0282%" height="15" fill="rgb(211,167,0)" fg:x="83900" fg:w="32"/><text x="74.1277%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (246 samples, 0.22%)</title><rect x="73.8496%" y="853" width="0.2166%" height="15" fill="rgb(225,119,45)" fg:x="83868" fg:w="246"/><text x="74.0996%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (242 samples, 0.21%)</title><rect x="73.8531%" y="837" width="0.2131%" height="15" fill="rgb(210,162,6)" fg:x="83872" fg:w="242"/><text x="74.1031%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (231 samples, 0.20%)</title><rect x="73.8628%" y="821" width="0.2034%" height="15" fill="rgb(208,118,35)" fg:x="83883" fg:w="231"/><text x="74.1128%" y="831.50"></text></g><g><title>snmalloc::FreeListIter::take (170 samples, 0.15%)</title><rect x="73.9165%" y="805" width="0.1497%" height="15" fill="rgb(239,4,53)" fg:x="83944" fg:w="170"/><text x="74.1665%" y="815.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (170 samples, 0.15%)</title><rect x="73.9165%" y="789" width="0.1497%" height="15" fill="rgb(213,130,21)" fg:x="83944" fg:w="170"/><text x="74.1665%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (263 samples, 0.23%)</title><rect x="73.8381%" y="965" width="0.2316%" height="15" fill="rgb(235,148,0)" fg:x="83855" fg:w="263"/><text x="74.0881%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (263 samples, 0.23%)</title><rect x="73.8381%" y="949" width="0.2316%" height="15" fill="rgb(244,224,18)" fg:x="83855" fg:w="263"/><text x="74.0881%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (263 samples, 0.23%)</title><rect x="73.8381%" y="933" width="0.2316%" height="15" fill="rgb(211,214,4)" fg:x="83855" fg:w="263"/><text x="74.0881%" y="943.50"></text></g><g><title>alloc::alloc::alloc (263 samples, 0.23%)</title><rect x="73.8381%" y="917" width="0.2316%" height="15" fill="rgb(206,119,25)" fg:x="83855" fg:w="263"/><text x="74.0881%" y="927.50"></text></g><g><title>__rg_alloc (263 samples, 0.23%)</title><rect x="73.8381%" y="901" width="0.2316%" height="15" fill="rgb(243,93,47)" fg:x="83855" fg:w="263"/><text x="74.0881%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (263 samples, 0.23%)</title><rect x="73.8381%" y="885" width="0.2316%" height="15" fill="rgb(224,194,6)" fg:x="83855" fg:w="263"/><text x="74.0881%" y="895.50"></text></g><g><title>rust_alloc (261 samples, 0.23%)</title><rect x="73.8399%" y="869" width="0.2298%" height="15" fill="rgb(243,229,6)" fg:x="83857" fg:w="261"/><text x="74.0899%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (21 samples, 0.02%)</title><rect x="74.0697%" y="965" width="0.0185%" height="15" fill="rgb(207,23,50)" fg:x="84118" fg:w="21"/><text x="74.3197%" y="975.50"></text></g><g><title>alloc::slice::hack::into_vec (21 samples, 0.02%)</title><rect x="74.0697%" y="949" width="0.0185%" height="15" fill="rgb(253,192,32)" fg:x="84118" fg:w="21"/><text x="74.3197%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (21 samples, 0.02%)</title><rect x="74.0697%" y="933" width="0.0185%" height="15" fill="rgb(213,21,6)" fg:x="84118" fg:w="21"/><text x="74.3197%" y="943.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (734 samples, 0.65%)</title><rect x="73.4656%" y="981" width="0.6463%" height="15" fill="rgb(243,151,13)" fg:x="83432" fg:w="734"/><text x="73.7156%" y="991.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (59 samples, 0.05%)</title><rect x="74.1120%" y="773" width="0.0520%" height="15" fill="rgb(233,165,41)" fg:x="84166" fg:w="59"/><text x="74.3620%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (59 samples, 0.05%)</title><rect x="74.1120%" y="757" width="0.0520%" height="15" fill="rgb(246,176,45)" fg:x="84166" fg:w="59"/><text x="74.3620%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (50 samples, 0.04%)</title><rect x="74.1199%" y="741" width="0.0440%" height="15" fill="rgb(217,170,52)" fg:x="84175" fg:w="50"/><text x="74.3699%" y="751.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (40 samples, 0.04%)</title><rect x="74.1287%" y="725" width="0.0352%" height="15" fill="rgb(214,203,54)" fg:x="84185" fg:w="40"/><text x="74.3787%" y="735.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (40 samples, 0.04%)</title><rect x="74.1287%" y="709" width="0.0352%" height="15" fill="rgb(248,215,49)" fg:x="84185" fg:w="40"/><text x="74.3787%" y="719.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (40 samples, 0.04%)</title><rect x="74.1287%" y="693" width="0.0352%" height="15" fill="rgb(208,46,10)" fg:x="84185" fg:w="40"/><text x="74.3787%" y="703.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (67 samples, 0.06%)</title><rect x="74.1120%" y="965" width="0.0590%" height="15" fill="rgb(254,5,31)" fg:x="84166" fg:w="67"/><text x="74.3620%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (67 samples, 0.06%)</title><rect x="74.1120%" y="949" width="0.0590%" height="15" fill="rgb(222,104,33)" fg:x="84166" fg:w="67"/><text x="74.3620%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (67 samples, 0.06%)</title><rect x="74.1120%" y="933" width="0.0590%" height="15" fill="rgb(248,49,16)" fg:x="84166" fg:w="67"/><text x="74.3620%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67 samples, 0.06%)</title><rect x="74.1120%" y="917" width="0.0590%" height="15" fill="rgb(232,198,41)" fg:x="84166" fg:w="67"/><text x="74.3620%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 0.06%)</title><rect x="74.1120%" y="901" width="0.0590%" height="15" fill="rgb(214,125,3)" fg:x="84166" fg:w="67"/><text x="74.3620%" y="911.50"></text></g><g><title>alloc::alloc::alloc (67 samples, 0.06%)</title><rect x="74.1120%" y="885" width="0.0590%" height="15" fill="rgb(229,220,28)" fg:x="84166" fg:w="67"/><text x="74.3620%" y="895.50"></text></g><g><title>__rg_alloc (67 samples, 0.06%)</title><rect x="74.1120%" y="869" width="0.0590%" height="15" fill="rgb(222,64,37)" fg:x="84166" fg:w="67"/><text x="74.3620%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (67 samples, 0.06%)</title><rect x="74.1120%" y="853" width="0.0590%" height="15" fill="rgb(249,184,13)" fg:x="84166" fg:w="67"/><text x="74.3620%" y="863.50"></text></g><g><title>rust_alloc (67 samples, 0.06%)</title><rect x="74.1120%" y="837" width="0.0590%" height="15" fill="rgb(252,176,6)" fg:x="84166" fg:w="67"/><text x="74.3620%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (67 samples, 0.06%)</title><rect x="74.1120%" y="821" width="0.0590%" height="15" fill="rgb(228,153,7)" fg:x="84166" fg:w="67"/><text x="74.3620%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (67 samples, 0.06%)</title><rect x="74.1120%" y="805" width="0.0590%" height="15" fill="rgb(242,193,5)" fg:x="84166" fg:w="67"/><text x="74.3620%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (67 samples, 0.06%)</title><rect x="74.1120%" y="789" width="0.0590%" height="15" fill="rgb(232,140,9)" fg:x="84166" fg:w="67"/><text x="74.3620%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (29 samples, 0.03%)</title><rect x="74.1710%" y="965" width="0.0255%" height="15" fill="rgb(213,222,16)" fg:x="84233" fg:w="29"/><text x="74.4210%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.03%)</title><rect x="74.1710%" y="949" width="0.0255%" height="15" fill="rgb(222,75,50)" fg:x="84233" fg:w="29"/><text x="74.4210%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.03%)</title><rect x="74.1710%" y="933" width="0.0255%" height="15" fill="rgb(205,180,2)" fg:x="84233" fg:w="29"/><text x="74.4210%" y="943.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.03%)</title><rect x="74.1710%" y="917" width="0.0255%" height="15" fill="rgb(216,34,7)" fg:x="84233" fg:w="29"/><text x="74.4210%" y="927.50"></text></g><g><title>__rg_alloc (29 samples, 0.03%)</title><rect x="74.1710%" y="901" width="0.0255%" height="15" fill="rgb(253,16,32)" fg:x="84233" fg:w="29"/><text x="74.4210%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (29 samples, 0.03%)</title><rect x="74.1710%" y="885" width="0.0255%" height="15" fill="rgb(208,97,28)" fg:x="84233" fg:w="29"/><text x="74.4210%" y="895.50"></text></g><g><title>rust_alloc (29 samples, 0.03%)</title><rect x="74.1710%" y="869" width="0.0255%" height="15" fill="rgb(225,92,11)" fg:x="84233" fg:w="29"/><text x="74.4210%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="74.1710%" y="853" width="0.0255%" height="15" fill="rgb(243,38,12)" fg:x="84233" fg:w="29"/><text x="74.4210%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="74.1710%" y="837" width="0.0255%" height="15" fill="rgb(208,139,16)" fg:x="84233" fg:w="29"/><text x="74.4210%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="74.1710%" y="821" width="0.0255%" height="15" fill="rgb(227,24,9)" fg:x="84233" fg:w="29"/><text x="74.4210%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="74.1710%" y="805" width="0.0255%" height="15" fill="rgb(206,62,11)" fg:x="84233" fg:w="29"/><text x="74.4210%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (29 samples, 0.03%)</title><rect x="74.1710%" y="789" width="0.0255%" height="15" fill="rgb(228,134,27)" fg:x="84233" fg:w="29"/><text x="74.4210%" y="799.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (23 samples, 0.02%)</title><rect x="74.1762%" y="773" width="0.0203%" height="15" fill="rgb(205,55,33)" fg:x="84239" fg:w="23"/><text x="74.4262%" y="783.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (18 samples, 0.02%)</title><rect x="74.1807%" y="757" width="0.0158%" height="15" fill="rgb(243,75,43)" fg:x="84244" fg:w="18"/><text x="74.4307%" y="767.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="74.1807%" y="741" width="0.0158%" height="15" fill="rgb(223,27,42)" fg:x="84244" fg:w="18"/><text x="74.4307%" y="751.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="74.1807%" y="725" width="0.0158%" height="15" fill="rgb(232,189,33)" fg:x="84244" fg:w="18"/><text x="74.4307%" y="735.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (12 samples, 0.01%)</title><rect x="74.1974%" y="821" width="0.0106%" height="15" fill="rgb(210,9,39)" fg:x="84263" fg:w="12"/><text x="74.4474%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="74.2396%" y="597" width="0.0106%" height="15" fill="rgb(242,85,26)" fg:x="84311" fg:w="12"/><text x="74.4896%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (61 samples, 0.05%)</title><rect x="74.2396%" y="629" width="0.0537%" height="15" fill="rgb(248,44,4)" fg:x="84311" fg:w="61"/><text x="74.4896%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (61 samples, 0.05%)</title><rect x="74.2396%" y="613" width="0.0537%" height="15" fill="rgb(250,96,46)" fg:x="84311" fg:w="61"/><text x="74.4896%" y="623.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (49 samples, 0.04%)</title><rect x="74.2502%" y="597" width="0.0431%" height="15" fill="rgb(229,116,26)" fg:x="84323" fg:w="49"/><text x="74.5002%" y="607.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (37 samples, 0.03%)</title><rect x="74.2608%" y="581" width="0.0326%" height="15" fill="rgb(246,94,34)" fg:x="84335" fg:w="37"/><text x="74.5108%" y="591.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (37 samples, 0.03%)</title><rect x="74.2608%" y="565" width="0.0326%" height="15" fill="rgb(251,73,21)" fg:x="84335" fg:w="37"/><text x="74.5108%" y="575.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (37 samples, 0.03%)</title><rect x="74.2608%" y="549" width="0.0326%" height="15" fill="rgb(254,121,25)" fg:x="84335" fg:w="37"/><text x="74.5108%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (162 samples, 0.14%)</title><rect x="74.2291%" y="677" width="0.1426%" height="15" fill="rgb(215,161,49)" fg:x="84299" fg:w="162"/><text x="74.4791%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (162 samples, 0.14%)</title><rect x="74.2291%" y="661" width="0.1426%" height="15" fill="rgb(221,43,13)" fg:x="84299" fg:w="162"/><text x="74.4791%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (152 samples, 0.13%)</title><rect x="74.2379%" y="645" width="0.1338%" height="15" fill="rgb(249,5,37)" fg:x="84309" fg:w="152"/><text x="74.4879%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::take (73 samples, 0.06%)</title><rect x="74.3075%" y="629" width="0.0643%" height="15" fill="rgb(226,25,44)" fg:x="84388" fg:w="73"/><text x="74.5575%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (73 samples, 0.06%)</title><rect x="74.3075%" y="613" width="0.0643%" height="15" fill="rgb(238,189,16)" fg:x="84388" fg:w="73"/><text x="74.5575%" y="623.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (201 samples, 0.18%)</title><rect x="74.1974%" y="837" width="0.1770%" height="15" fill="rgb(251,186,8)" fg:x="84263" fg:w="201"/><text x="74.4474%" y="847.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (189 samples, 0.17%)</title><rect x="74.2079%" y="821" width="0.1664%" height="15" fill="rgb(254,34,31)" fg:x="84275" fg:w="189"/><text x="74.4579%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (189 samples, 0.17%)</title><rect x="74.2079%" y="805" width="0.1664%" height="15" fill="rgb(225,215,27)" fg:x="84275" fg:w="189"/><text x="74.4579%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (173 samples, 0.15%)</title><rect x="74.2220%" y="789" width="0.1523%" height="15" fill="rgb(221,192,48)" fg:x="84291" fg:w="173"/><text x="74.4720%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (173 samples, 0.15%)</title><rect x="74.2220%" y="773" width="0.1523%" height="15" fill="rgb(219,137,20)" fg:x="84291" fg:w="173"/><text x="74.4720%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (173 samples, 0.15%)</title><rect x="74.2220%" y="757" width="0.1523%" height="15" fill="rgb(219,84,11)" fg:x="84291" fg:w="173"/><text x="74.4720%" y="767.50"></text></g><g><title>alloc::alloc::alloc (171 samples, 0.15%)</title><rect x="74.2238%" y="741" width="0.1506%" height="15" fill="rgb(224,10,23)" fg:x="84293" fg:w="171"/><text x="74.4738%" y="751.50"></text></g><g><title>__rg_alloc (171 samples, 0.15%)</title><rect x="74.2238%" y="725" width="0.1506%" height="15" fill="rgb(248,22,39)" fg:x="84293" fg:w="171"/><text x="74.4738%" y="735.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (171 samples, 0.15%)</title><rect x="74.2238%" y="709" width="0.1506%" height="15" fill="rgb(212,154,20)" fg:x="84293" fg:w="171"/><text x="74.4738%" y="719.50"></text></g><g><title>rust_alloc (170 samples, 0.15%)</title><rect x="74.2247%" y="693" width="0.1497%" height="15" fill="rgb(236,199,50)" fg:x="84294" fg:w="170"/><text x="74.4747%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (247 samples, 0.22%)</title><rect x="74.1965%" y="917" width="0.2175%" height="15" fill="rgb(211,9,17)" fg:x="84262" fg:w="247"/><text x="74.4465%" y="927.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (247 samples, 0.22%)</title><rect x="74.1965%" y="901" width="0.2175%" height="15" fill="rgb(243,216,36)" fg:x="84262" fg:w="247"/><text x="74.4465%" y="911.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (247 samples, 0.22%)</title><rect x="74.1965%" y="885" width="0.2175%" height="15" fill="rgb(250,2,10)" fg:x="84262" fg:w="247"/><text x="74.4465%" y="895.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (246 samples, 0.22%)</title><rect x="74.1974%" y="869" width="0.2166%" height="15" fill="rgb(226,50,48)" fg:x="84263" fg:w="246"/><text x="74.4474%" y="879.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (246 samples, 0.22%)</title><rect x="74.1974%" y="853" width="0.2166%" height="15" fill="rgb(243,81,16)" fg:x="84263" fg:w="246"/><text x="74.4474%" y="863.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::iter (45 samples, 0.04%)</title><rect x="74.3744%" y="837" width="0.0396%" height="15" fill="rgb(250,14,2)" fg:x="84464" fg:w="45"/><text x="74.6244%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (28 samples, 0.02%)</title><rect x="74.3893%" y="821" width="0.0247%" height="15" fill="rgb(233,135,29)" fg:x="84481" fg:w="28"/><text x="74.6393%" y="831.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter (19 samples, 0.02%)</title><rect x="74.3973%" y="805" width="0.0167%" height="15" fill="rgb(224,64,43)" fg:x="84490" fg:w="19"/><text x="74.6473%" y="815.50"></text></g><g><title>hashbrown::raw::inner::RawIterRange&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="74.3973%" y="789" width="0.0167%" height="15" fill="rgb(238,84,13)" fg:x="84490" fg:w="19"/><text x="74.6473%" y="799.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="74.4748%" y="517" width="0.0123%" height="15" fill="rgb(253,48,26)" fg:x="84578" fg:w="14"/><text x="74.7248%" y="527.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="74.4756%" y="501" width="0.0114%" height="15" fill="rgb(205,223,31)" fg:x="84579" fg:w="13"/><text x="74.7256%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (25 samples, 0.02%)</title><rect x="74.4739%" y="565" width="0.0220%" height="15" fill="rgb(221,41,32)" fg:x="84577" fg:w="25"/><text x="74.7239%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (25 samples, 0.02%)</title><rect x="74.4739%" y="549" width="0.0220%" height="15" fill="rgb(213,158,31)" fg:x="84577" fg:w="25"/><text x="74.7239%" y="559.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (25 samples, 0.02%)</title><rect x="74.4739%" y="533" width="0.0220%" height="15" fill="rgb(245,126,43)" fg:x="84577" fg:w="25"/><text x="74.7239%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (30 samples, 0.03%)</title><rect x="74.4739%" y="581" width="0.0264%" height="15" fill="rgb(227,7,22)" fg:x="84577" fg:w="30"/><text x="74.7239%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (43 samples, 0.04%)</title><rect x="74.4677%" y="597" width="0.0379%" height="15" fill="rgb(252,90,44)" fg:x="84570" fg:w="43"/><text x="74.7177%" y="607.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (19 samples, 0.02%)</title><rect x="74.5205%" y="581" width="0.0167%" height="15" fill="rgb(253,91,0)" fg:x="84630" fg:w="19"/><text x="74.7705%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (223 samples, 0.20%)</title><rect x="74.4677%" y="629" width="0.1964%" height="15" fill="rgb(252,175,49)" fg:x="84570" fg:w="223"/><text x="74.7177%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (223 samples, 0.20%)</title><rect x="74.4677%" y="613" width="0.1964%" height="15" fill="rgb(246,150,1)" fg:x="84570" fg:w="223"/><text x="74.7177%" y="623.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (180 samples, 0.16%)</title><rect x="74.5056%" y="597" width="0.1585%" height="15" fill="rgb(241,192,25)" fg:x="84613" fg:w="180"/><text x="74.7556%" y="607.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (144 samples, 0.13%)</title><rect x="74.5373%" y="581" width="0.1268%" height="15" fill="rgb(239,187,11)" fg:x="84649" fg:w="144"/><text x="74.7873%" y="591.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (144 samples, 0.13%)</title><rect x="74.5373%" y="565" width="0.1268%" height="15" fill="rgb(218,202,51)" fg:x="84649" fg:w="144"/><text x="74.7873%" y="575.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (144 samples, 0.13%)</title><rect x="74.5373%" y="549" width="0.1268%" height="15" fill="rgb(225,176,8)" fg:x="84649" fg:w="144"/><text x="74.7873%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.01%)</title><rect x="74.6641%" y="629" width="0.0150%" height="15" fill="rgb(219,122,41)" fg:x="84793" fg:w="17"/><text x="74.9141%" y="639.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (16 samples, 0.01%)</title><rect x="74.6650%" y="613" width="0.0141%" height="15" fill="rgb(248,140,20)" fg:x="84794" fg:w="16"/><text x="74.9150%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::take (12 samples, 0.01%)</title><rect x="74.6685%" y="597" width="0.0106%" height="15" fill="rgb(245,41,37)" fg:x="84798" fg:w="12"/><text x="74.9185%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (12 samples, 0.01%)</title><rect x="74.6685%" y="581" width="0.0106%" height="15" fill="rgb(235,82,39)" fg:x="84798" fg:w="12"/><text x="74.9185%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (374 samples, 0.33%)</title><rect x="74.4589%" y="677" width="0.3293%" height="15" fill="rgb(230,108,42)" fg:x="84560" fg:w="374"/><text x="74.7089%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (374 samples, 0.33%)</title><rect x="74.4589%" y="661" width="0.3293%" height="15" fill="rgb(215,150,50)" fg:x="84560" fg:w="374"/><text x="74.7089%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (368 samples, 0.32%)</title><rect x="74.4642%" y="645" width="0.3240%" height="15" fill="rgb(233,212,5)" fg:x="84566" fg:w="368"/><text x="74.7142%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::take (121 samples, 0.11%)</title><rect x="74.6817%" y="629" width="0.1065%" height="15" fill="rgb(245,80,22)" fg:x="84813" fg:w="121"/><text x="74.9317%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (121 samples, 0.11%)</title><rect x="74.6817%" y="613" width="0.1065%" height="15" fill="rgb(238,129,16)" fg:x="84813" fg:w="121"/><text x="74.9317%" y="623.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (417 samples, 0.37%)</title><rect x="74.4228%" y="885" width="0.3672%" height="15" fill="rgb(240,19,0)" fg:x="84519" fg:w="417"/><text x="74.6728%" y="895.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (417 samples, 0.37%)</title><rect x="74.4228%" y="869" width="0.3672%" height="15" fill="rgb(232,42,35)" fg:x="84519" fg:w="417"/><text x="74.6728%" y="879.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (417 samples, 0.37%)</title><rect x="74.4228%" y="853" width="0.3672%" height="15" fill="rgb(223,130,24)" fg:x="84519" fg:w="417"/><text x="74.6728%" y="863.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (406 samples, 0.36%)</title><rect x="74.4325%" y="837" width="0.3575%" height="15" fill="rgb(237,16,22)" fg:x="84530" fg:w="406"/><text x="74.6825%" y="847.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (406 samples, 0.36%)</title><rect x="74.4325%" y="821" width="0.3575%" height="15" fill="rgb(248,192,20)" fg:x="84530" fg:w="406"/><text x="74.6825%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (406 samples, 0.36%)</title><rect x="74.4325%" y="805" width="0.3575%" height="15" fill="rgb(233,167,2)" fg:x="84530" fg:w="406"/><text x="74.6825%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (387 samples, 0.34%)</title><rect x="74.4492%" y="789" width="0.3408%" height="15" fill="rgb(252,71,44)" fg:x="84549" fg:w="387"/><text x="74.6992%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (387 samples, 0.34%)</title><rect x="74.4492%" y="773" width="0.3408%" height="15" fill="rgb(238,37,47)" fg:x="84549" fg:w="387"/><text x="74.6992%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (387 samples, 0.34%)</title><rect x="74.4492%" y="757" width="0.3408%" height="15" fill="rgb(214,202,54)" fg:x="84549" fg:w="387"/><text x="74.6992%" y="767.50"></text></g><g><title>alloc::alloc::alloc (386 samples, 0.34%)</title><rect x="74.4501%" y="741" width="0.3399%" height="15" fill="rgb(254,165,40)" fg:x="84550" fg:w="386"/><text x="74.7001%" y="751.50"></text></g><g><title>__rg_alloc (386 samples, 0.34%)</title><rect x="74.4501%" y="725" width="0.3399%" height="15" fill="rgb(246,173,38)" fg:x="84550" fg:w="386"/><text x="74.7001%" y="735.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (386 samples, 0.34%)</title><rect x="74.4501%" y="709" width="0.3399%" height="15" fill="rgb(215,3,27)" fg:x="84550" fg:w="386"/><text x="74.7001%" y="719.50"></text></g><g><title>rust_alloc (385 samples, 0.34%)</title><rect x="74.4510%" y="693" width="0.3390%" height="15" fill="rgb(239,169,51)" fg:x="84551" fg:w="385"/><text x="74.7010%" y="703.50"></text></g><g><title>abi_stable::erased_types::iterator::next (44 samples, 0.04%)</title><rect x="74.9626%" y="837" width="0.0387%" height="15" fill="rgb(212,5,25)" fg:x="85132" fg:w="44"/><text x="75.2126%" y="847.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (26 samples, 0.02%)</title><rect x="74.9784%" y="821" width="0.0229%" height="15" fill="rgb(243,45,17)" fg:x="85150" fg:w="26"/><text x="75.2284%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.02%)</title><rect x="74.9784%" y="805" width="0.0229%" height="15" fill="rgb(242,97,9)" fg:x="85150" fg:w="26"/><text x="75.2284%" y="815.50"></text></g><g><title>&lt;halfbrown::iter::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.02%)</title><rect x="74.9784%" y="789" width="0.0229%" height="15" fill="rgb(228,71,31)" fg:x="85150" fg:w="26"/><text x="75.2284%" y="799.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="74.9828%" y="773" width="0.0185%" height="15" fill="rgb(252,184,16)" fg:x="85155" fg:w="21"/><text x="75.2328%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="74.9828%" y="757" width="0.0185%" height="15" fill="rgb(236,169,46)" fg:x="85155" fg:w="21"/><text x="75.2328%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="74.9828%" y="741" width="0.0185%" height="15" fill="rgb(207,17,47)" fg:x="85155" fg:w="21"/><text x="75.2328%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.06%)</title><rect x="74.9502%" y="869" width="0.0599%" height="15" fill="rgb(206,201,28)" fg:x="85118" fg:w="68"/><text x="75.2002%" y="879.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (68 samples, 0.06%)</title><rect x="74.9502%" y="853" width="0.0599%" height="15" fill="rgb(224,184,23)" fg:x="85118" fg:w="68"/><text x="75.2002%" y="863.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (57 samples, 0.05%)</title><rect x="75.0207%" y="837" width="0.0502%" height="15" fill="rgb(208,139,48)" fg:x="85198" fg:w="57"/><text x="75.2707%" y="847.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (57 samples, 0.05%)</title><rect x="75.0207%" y="821" width="0.0502%" height="15" fill="rgb(208,130,10)" fg:x="85198" fg:w="57"/><text x="75.2707%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (47 samples, 0.04%)</title><rect x="75.0295%" y="805" width="0.0414%" height="15" fill="rgb(211,213,45)" fg:x="85208" fg:w="47"/><text x="75.2795%" y="815.50"></text></g><g><title>&lt;halfbrown::iter::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (47 samples, 0.04%)</title><rect x="75.0295%" y="789" width="0.0414%" height="15" fill="rgb(235,100,30)" fg:x="85208" fg:w="47"/><text x="75.2795%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="75.0709%" y="805" width="0.0106%" height="15" fill="rgb(206,144,31)" fg:x="85255" fg:w="12"/><text x="75.3209%" y="815.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (12 samples, 0.01%)</title><rect x="75.0709%" y="789" width="0.0106%" height="15" fill="rgb(224,200,26)" fg:x="85255" fg:w="12"/><text x="75.3209%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (94 samples, 0.08%)</title><rect x="75.0101%" y="869" width="0.0828%" height="15" fill="rgb(247,104,53)" fg:x="85186" fg:w="94"/><text x="75.2601%" y="879.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (94 samples, 0.08%)</title><rect x="75.0101%" y="853" width="0.0828%" height="15" fill="rgb(220,14,17)" fg:x="85186" fg:w="94"/><text x="75.2601%" y="863.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (25 samples, 0.02%)</title><rect x="75.0709%" y="837" width="0.0220%" height="15" fill="rgb(230,140,40)" fg:x="85255" fg:w="25"/><text x="75.3209%" y="847.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (25 samples, 0.02%)</title><rect x="75.0709%" y="821" width="0.0220%" height="15" fill="rgb(229,2,41)" fg:x="85255" fg:w="25"/><text x="75.3209%" y="831.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (13 samples, 0.01%)</title><rect x="75.0815%" y="805" width="0.0114%" height="15" fill="rgb(232,89,16)" fg:x="85267" fg:w="13"/><text x="75.3315%" y="815.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (21 samples, 0.02%)</title><rect x="75.0929%" y="869" width="0.0185%" height="15" fill="rgb(247,59,52)" fg:x="85280" fg:w="21"/><text x="75.3429%" y="879.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (21 samples, 0.02%)</title><rect x="75.0929%" y="853" width="0.0185%" height="15" fill="rgb(226,110,21)" fg:x="85280" fg:w="21"/><text x="75.3429%" y="863.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (21 samples, 0.02%)</title><rect x="75.0929%" y="837" width="0.0185%" height="15" fill="rgb(224,176,43)" fg:x="85280" fg:w="21"/><text x="75.3429%" y="847.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (17 samples, 0.01%)</title><rect x="75.0964%" y="821" width="0.0150%" height="15" fill="rgb(221,73,6)" fg:x="85284" fg:w="17"/><text x="75.3464%" y="831.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (17 samples, 0.01%)</title><rect x="75.0964%" y="805" width="0.0150%" height="15" fill="rgb(232,78,19)" fg:x="85284" fg:w="17"/><text x="75.3464%" y="815.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::reserve (17 samples, 0.01%)</title><rect x="75.0964%" y="789" width="0.0150%" height="15" fill="rgb(233,112,48)" fg:x="85284" fg:w="17"/><text x="75.3464%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (12 samples, 0.01%)</title><rect x="75.1008%" y="773" width="0.0106%" height="15" fill="rgb(243,131,47)" fg:x="85289" fg:w="12"/><text x="75.3508%" y="783.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (12 samples, 0.01%)</title><rect x="75.1008%" y="757" width="0.0106%" height="15" fill="rgb(226,51,1)" fg:x="85289" fg:w="12"/><text x="75.3508%" y="767.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (40 samples, 0.04%)</title><rect x="75.1721%" y="613" width="0.0352%" height="15" fill="rgb(247,58,7)" fg:x="85370" fg:w="40"/><text x="75.4221%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (36 samples, 0.03%)</title><rect x="75.1757%" y="597" width="0.0317%" height="15" fill="rgb(209,7,32)" fg:x="85374" fg:w="36"/><text x="75.4257%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (67 samples, 0.06%)</title><rect x="75.1581%" y="661" width="0.0590%" height="15" fill="rgb(209,39,41)" fg:x="85354" fg:w="67"/><text x="75.4081%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (67 samples, 0.06%)</title><rect x="75.1581%" y="645" width="0.0590%" height="15" fill="rgb(226,182,46)" fg:x="85354" fg:w="67"/><text x="75.4081%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (67 samples, 0.06%)</title><rect x="75.1581%" y="629" width="0.0590%" height="15" fill="rgb(230,219,10)" fg:x="85354" fg:w="67"/><text x="75.4081%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (91 samples, 0.08%)</title><rect x="75.1466%" y="693" width="0.0801%" height="15" fill="rgb(227,175,30)" fg:x="85341" fg:w="91"/><text x="75.3966%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (91 samples, 0.08%)</title><rect x="75.1466%" y="677" width="0.0801%" height="15" fill="rgb(217,2,50)" fg:x="85341" fg:w="91"/><text x="75.3966%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (100 samples, 0.09%)</title><rect x="75.1466%" y="725" width="0.0881%" height="15" fill="rgb(229,160,0)" fg:x="85341" fg:w="100"/><text x="75.3966%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (100 samples, 0.09%)</title><rect x="75.1466%" y="709" width="0.0881%" height="15" fill="rgb(207,78,37)" fg:x="85341" fg:w="100"/><text x="75.3966%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (108 samples, 0.10%)</title><rect x="75.1431%" y="741" width="0.0951%" height="15" fill="rgb(225,57,0)" fg:x="85337" fg:w="108"/><text x="75.3931%" y="751.50"></text></g><g><title>rust_dealloc (123 samples, 0.11%)</title><rect x="75.1352%" y="757" width="0.1083%" height="15" fill="rgb(232,154,2)" fg:x="85328" fg:w="123"/><text x="75.3852%" y="767.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (151 samples, 0.13%)</title><rect x="75.1114%" y="837" width="0.1330%" height="15" fill="rgb(241,212,25)" fg:x="85301" fg:w="151"/><text x="75.3614%" y="847.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (147 samples, 0.13%)</title><rect x="75.1149%" y="821" width="0.1294%" height="15" fill="rgb(226,69,20)" fg:x="85305" fg:w="147"/><text x="75.3649%" y="831.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (138 samples, 0.12%)</title><rect x="75.1228%" y="805" width="0.1215%" height="15" fill="rgb(247,184,54)" fg:x="85314" fg:w="138"/><text x="75.3728%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;halfbrown::iter::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt; (138 samples, 0.12%)</title><rect x="75.1228%" y="789" width="0.1215%" height="15" fill="rgb(210,145,0)" fg:x="85314" fg:w="138"/><text x="75.3728%" y="799.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (138 samples, 0.12%)</title><rect x="75.1228%" y="773" width="0.1215%" height="15" fill="rgb(253,82,12)" fg:x="85314" fg:w="138"/><text x="75.3728%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (517 samples, 0.46%)</title><rect x="74.7900%" y="885" width="0.4552%" height="15" fill="rgb(245,42,11)" fg:x="84936" fg:w="517"/><text x="75.0400%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (152 samples, 0.13%)</title><rect x="75.1114%" y="869" width="0.1338%" height="15" fill="rgb(219,147,32)" fg:x="85301" fg:w="152"/><text x="75.3614%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (152 samples, 0.13%)</title><rect x="75.1114%" y="853" width="0.1338%" height="15" fill="rgb(246,12,7)" fg:x="85301" fg:w="152"/><text x="75.3614%" y="863.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (4,668 samples, 4.11%)</title><rect x="71.1392%" y="1045" width="4.1104%" height="15" fill="rgb(243,50,9)" fg:x="80790" fg:w="4668"/><text x="71.3892%" y="1055.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,668 samples, 4.11%)</title><rect x="71.1392%" y="1029" width="4.1104%" height="15" fill="rgb(219,149,6)" fg:x="80790" fg:w="4668"/><text x="71.3892%" y="1039.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (4,668 samples, 4.11%)</title><rect x="71.1392%" y="1013" width="4.1104%" height="15" fill="rgb(241,51,42)" fg:x="80790" fg:w="4668"/><text x="71.3892%" y="1023.50">trem..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,668 samples, 4.11%)</title><rect x="71.1392%" y="997" width="4.1104%" height="15" fill="rgb(226,128,27)" fg:x="80790" fg:w="4668"/><text x="71.3892%" y="1007.50">trem..</text></g><g><title>tremor_script::srs::EventPayload::try_new (1,292 samples, 1.14%)</title><rect x="74.1120%" y="981" width="1.1377%" height="15" fill="rgb(244,144,4)" fg:x="84166" fg:w="1292"/><text x="74.3620%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (1,196 samples, 1.05%)</title><rect x="74.1965%" y="965" width="1.0531%" height="15" fill="rgb(221,4,13)" fg:x="84262" fg:w="1196"/><text x="74.4465%" y="975.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (1,196 samples, 1.05%)</title><rect x="74.1965%" y="949" width="1.0531%" height="15" fill="rgb(208,170,28)" fg:x="84262" fg:w="1196"/><text x="74.4465%" y="959.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,196 samples, 1.05%)</title><rect x="74.1965%" y="933" width="1.0531%" height="15" fill="rgb(226,131,13)" fg:x="84262" fg:w="1196"/><text x="74.4465%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (949 samples, 0.84%)</title><rect x="74.4140%" y="917" width="0.8356%" height="15" fill="rgb(215,72,41)" fg:x="84509" fg:w="949"/><text x="74.6640%" y="927.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (939 samples, 0.83%)</title><rect x="74.4228%" y="901" width="0.8268%" height="15" fill="rgb(243,108,20)" fg:x="84519" fg:w="939"/><text x="74.6728%" y="911.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (19 samples, 0.02%)</title><rect x="75.2558%" y="821" width="0.0167%" height="15" fill="rgb(230,189,17)" fg:x="85465" fg:w="19"/><text x="75.5058%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (24 samples, 0.02%)</title><rect x="75.2549%" y="901" width="0.0211%" height="15" fill="rgb(220,50,17)" fg:x="85464" fg:w="24"/><text x="75.5049%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (23 samples, 0.02%)</title><rect x="75.2558%" y="885" width="0.0203%" height="15" fill="rgb(248,152,48)" fg:x="85465" fg:w="23"/><text x="75.5058%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="75.2558%" y="869" width="0.0203%" height="15" fill="rgb(244,91,11)" fg:x="85465" fg:w="23"/><text x="75.5058%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (23 samples, 0.02%)</title><rect x="75.2558%" y="853" width="0.0203%" height="15" fill="rgb(220,157,5)" fg:x="85465" fg:w="23"/><text x="75.5058%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (23 samples, 0.02%)</title><rect x="75.2558%" y="837" width="0.0203%" height="15" fill="rgb(253,137,8)" fg:x="85465" fg:w="23"/><text x="75.5058%" y="847.50"></text></g><g><title>event_listener::Inner::lock (28 samples, 0.02%)</title><rect x="75.2761%" y="901" width="0.0247%" height="15" fill="rgb(217,137,51)" fg:x="85488" fg:w="28"/><text x="75.5261%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (28 samples, 0.02%)</title><rect x="75.2761%" y="885" width="0.0247%" height="15" fill="rgb(218,209,53)" fg:x="85488" fg:w="28"/><text x="75.5261%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (28 samples, 0.02%)</title><rect x="75.2761%" y="869" width="0.0247%" height="15" fill="rgb(249,137,25)" fg:x="85488" fg:w="28"/><text x="75.5261%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.02%)</title><rect x="75.2769%" y="853" width="0.0238%" height="15" fill="rgb(239,155,26)" fg:x="85489" fg:w="27"/><text x="75.5269%" y="863.50"></text></g><g><title>___pthread_mutex_lock (27 samples, 0.02%)</title><rect x="75.2769%" y="837" width="0.0238%" height="15" fill="rgb(227,85,46)" fg:x="85489" fg:w="27"/><text x="75.5269%" y="847.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (65 samples, 0.06%)</title><rect x="75.2496%" y="1013" width="0.0572%" height="15" fill="rgb(251,107,43)" fg:x="85458" fg:w="65"/><text x="75.4996%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (65 samples, 0.06%)</title><rect x="75.2496%" y="997" width="0.0572%" height="15" fill="rgb(234,170,33)" fg:x="85458" fg:w="65"/><text x="75.4996%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (65 samples, 0.06%)</title><rect x="75.2496%" y="981" width="0.0572%" height="15" fill="rgb(206,29,35)" fg:x="85458" fg:w="65"/><text x="75.4996%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (65 samples, 0.06%)</title><rect x="75.2496%" y="965" width="0.0572%" height="15" fill="rgb(227,138,25)" fg:x="85458" fg:w="65"/><text x="75.4996%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (65 samples, 0.06%)</title><rect x="75.2496%" y="949" width="0.0572%" height="15" fill="rgb(249,131,35)" fg:x="85458" fg:w="65"/><text x="75.4996%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (65 samples, 0.06%)</title><rect x="75.2496%" y="933" width="0.0572%" height="15" fill="rgb(239,6,40)" fg:x="85458" fg:w="65"/><text x="75.4996%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (65 samples, 0.06%)</title><rect x="75.2496%" y="917" width="0.0572%" height="15" fill="rgb(246,136,47)" fg:x="85458" fg:w="65"/><text x="75.4996%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,544 samples, 7.52%)</title><rect x="67.7844%" y="1061" width="7.5234%" height="15" fill="rgb(253,58,26)" fg:x="76980" fg:w="8544"/><text x="68.0344%" y="1071.50">&lt;core::fut..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (66 samples, 0.06%)</title><rect x="75.2496%" y="1045" width="0.0581%" height="15" fill="rgb(237,141,10)" fg:x="85458" fg:w="66"/><text x="75.4996%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (66 samples, 0.06%)</title><rect x="75.2496%" y="1029" width="0.0581%" height="15" fill="rgb(234,156,12)" fg:x="85458" fg:w="66"/><text x="75.4996%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,561 samples, 7.54%)</title><rect x="67.7835%" y="1125" width="7.5383%" height="15" fill="rgb(243,224,36)" fg:x="76979" fg:w="8561"/><text x="68.0335%" y="1135.50">std::threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,560 samples, 7.54%)</title><rect x="67.7844%" y="1109" width="7.5375%" height="15" fill="rgb(205,229,51)" fg:x="76980" fg:w="8560"/><text x="68.0344%" y="1119.50">std::threa..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,560 samples, 7.54%)</title><rect x="67.7844%" y="1093" width="7.5375%" height="15" fill="rgb(223,189,4)" fg:x="76980" fg:w="8560"/><text x="68.0344%" y="1103.50">async_std:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,560 samples, 7.54%)</title><rect x="67.7844%" y="1077" width="7.5375%" height="15" fill="rgb(249,167,54)" fg:x="76980" fg:w="8560"/><text x="68.0344%" y="1087.50">&lt;async_std..</text></g><g><title>tremor_common::time::nanotime (23 samples, 0.02%)</title><rect x="75.3218%" y="1125" width="0.0203%" height="15" fill="rgb(218,34,28)" fg:x="85540" fg:w="23"/><text x="75.5718%" y="1135.50"></text></g><g><title>std::time::SystemTime::now (21 samples, 0.02%)</title><rect x="75.3236%" y="1109" width="0.0185%" height="15" fill="rgb(232,109,42)" fg:x="85542" fg:w="21"/><text x="75.5736%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (21 samples, 0.02%)</title><rect x="75.3236%" y="1093" width="0.0185%" height="15" fill="rgb(248,214,46)" fg:x="85542" fg:w="21"/><text x="75.5736%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::now (21 samples, 0.02%)</title><rect x="75.3236%" y="1077" width="0.0185%" height="15" fill="rgb(244,216,40)" fg:x="85542" fg:w="21"/><text x="75.5736%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (23 samples, 0.02%)</title><rect x="75.3421%" y="1125" width="0.0203%" height="15" fill="rgb(231,226,31)" fg:x="85563" fg:w="23"/><text x="75.5921%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (31 samples, 0.03%)</title><rect x="75.3623%" y="1125" width="0.0273%" height="15" fill="rgb(238,38,43)" fg:x="85586" fg:w="31"/><text x="75.6123%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (416 samples, 0.37%)</title><rect x="75.5675%" y="981" width="0.3663%" height="15" fill="rgb(208,88,43)" fg:x="85819" fg:w="416"/><text x="75.8175%" y="991.50"></text></g><g><title>concurrent_queue::full_fence (17 samples, 0.01%)</title><rect x="75.9338%" y="981" width="0.0150%" height="15" fill="rgb(205,136,37)" fg:x="86235" fg:w="17"/><text x="76.1838%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (15 samples, 0.01%)</title><rect x="75.9356%" y="965" width="0.0132%" height="15" fill="rgb(237,34,14)" fg:x="86237" fg:w="15"/><text x="76.1856%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.01%)</title><rect x="75.9356%" y="949" width="0.0132%" height="15" fill="rgb(236,193,44)" fg:x="86237" fg:w="15"/><text x="76.1856%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="75.9356%" y="933" width="0.0132%" height="15" fill="rgb(231,48,10)" fg:x="86237" fg:w="15"/><text x="76.1856%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (586 samples, 0.52%)</title><rect x="75.9505%" y="981" width="0.5160%" height="15" fill="rgb(213,141,34)" fg:x="86254" fg:w="586"/><text x="76.2005%" y="991.50"></text></g><g><title>core::ptr::read (586 samples, 0.52%)</title><rect x="75.9505%" y="965" width="0.5160%" height="15" fill="rgb(249,130,34)" fg:x="86254" fg:w="586"/><text x="76.2005%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (586 samples, 0.52%)</title><rect x="75.9505%" y="949" width="0.5160%" height="15" fill="rgb(219,42,41)" fg:x="86254" fg:w="586"/><text x="76.2005%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (577 samples, 0.51%)</title><rect x="76.4665%" y="981" width="0.5081%" height="15" fill="rgb(224,100,54)" fg:x="86840" fg:w="577"/><text x="76.7165%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (577 samples, 0.51%)</title><rect x="76.4665%" y="965" width="0.5081%" height="15" fill="rgb(229,200,27)" fg:x="86840" fg:w="577"/><text x="76.7165%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (376 samples, 0.33%)</title><rect x="76.9746%" y="981" width="0.3311%" height="15" fill="rgb(217,118,10)" fg:x="87417" fg:w="376"/><text x="77.2246%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (374 samples, 0.33%)</title><rect x="76.9764%" y="965" width="0.3293%" height="15" fill="rgb(206,22,3)" fg:x="87419" fg:w="374"/><text x="77.2264%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,177 samples, 1.92%)</title><rect x="75.3896%" y="1013" width="1.9169%" height="15" fill="rgb(232,163,46)" fg:x="85617" fg:w="2177"/><text x="75.6396%" y="1023.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,177 samples, 1.92%)</title><rect x="75.3896%" y="997" width="1.9169%" height="15" fill="rgb(206,95,13)" fg:x="85617" fg:w="2177"/><text x="75.6396%" y="1007.50">c..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (2,196 samples, 1.93%)</title><rect x="75.3896%" y="1125" width="1.9337%" height="15" fill="rgb(253,154,18)" fg:x="85617" fg:w="2196"/><text x="75.6396%" y="1135.50">t..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,196 samples, 1.93%)</title><rect x="75.3896%" y="1109" width="1.9337%" height="15" fill="rgb(219,32,23)" fg:x="85617" fg:w="2196"/><text x="75.6396%" y="1119.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,196 samples, 1.93%)</title><rect x="75.3896%" y="1093" width="1.9337%" height="15" fill="rgb(230,191,45)" fg:x="85617" fg:w="2196"/><text x="75.6396%" y="1103.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,196 samples, 1.93%)</title><rect x="75.3896%" y="1077" width="1.9337%" height="15" fill="rgb(229,64,36)" fg:x="85617" fg:w="2196"/><text x="75.6396%" y="1087.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,196 samples, 1.93%)</title><rect x="75.3896%" y="1061" width="1.9337%" height="15" fill="rgb(205,129,25)" fg:x="85617" fg:w="2196"/><text x="75.6396%" y="1071.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,196 samples, 1.93%)</title><rect x="75.3896%" y="1045" width="1.9337%" height="15" fill="rgb(254,112,7)" fg:x="85617" fg:w="2196"/><text x="75.6396%" y="1055.50">&lt;..</text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,196 samples, 1.93%)</title><rect x="75.3896%" y="1029" width="1.9337%" height="15" fill="rgb(226,53,48)" fg:x="85617" fg:w="2196"/><text x="75.6396%" y="1039.50">a..</text></g><g><title>event_listener::Event::notify (19 samples, 0.02%)</title><rect x="77.3066%" y="1013" width="0.0167%" height="15" fill="rgb(214,153,38)" fg:x="87794" fg:w="19"/><text x="77.5566%" y="1023.50"></text></g><g><title>event_listener::List::notify (19 samples, 0.02%)</title><rect x="77.3066%" y="997" width="0.0167%" height="15" fill="rgb(243,101,7)" fg:x="87794" fg:w="19"/><text x="77.5566%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (19 samples, 0.02%)</title><rect x="77.3066%" y="981" width="0.0167%" height="15" fill="rgb(240,140,22)" fg:x="87794" fg:w="19"/><text x="77.5566%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (19 samples, 0.02%)</title><rect x="77.3066%" y="965" width="0.0167%" height="15" fill="rgb(235,114,2)" fg:x="87794" fg:w="19"/><text x="77.5566%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (19 samples, 0.02%)</title><rect x="77.3066%" y="949" width="0.0167%" height="15" fill="rgb(242,59,12)" fg:x="87794" fg:w="19"/><text x="77.5566%" y="959.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (19 samples, 0.02%)</title><rect x="77.3066%" y="933" width="0.0167%" height="15" fill="rgb(252,134,9)" fg:x="87794" fg:w="19"/><text x="77.5566%" y="943.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (19 samples, 0.02%)</title><rect x="77.3066%" y="917" width="0.0167%" height="15" fill="rgb(236,4,44)" fg:x="87794" fg:w="19"/><text x="77.5566%" y="927.50"></text></g><g><title>parking::Unparker::unpark (16 samples, 0.01%)</title><rect x="77.3092%" y="901" width="0.0141%" height="15" fill="rgb(254,172,41)" fg:x="87797" fg:w="16"/><text x="77.5592%" y="911.50"></text></g><g><title>parking::Inner::unpark (16 samples, 0.01%)</title><rect x="77.3092%" y="885" width="0.0141%" height="15" fill="rgb(244,63,20)" fg:x="87797" fg:w="16"/><text x="77.5592%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (16 samples, 0.01%)</title><rect x="77.3092%" y="869" width="0.0141%" height="15" fill="rgb(250,73,31)" fg:x="87797" fg:w="16"/><text x="77.5592%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (16 samples, 0.01%)</title><rect x="77.3092%" y="853" width="0.0141%" height="15" fill="rgb(241,38,36)" fg:x="87797" fg:w="16"/><text x="77.5592%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (16 samples, 0.01%)</title><rect x="77.3092%" y="837" width="0.0141%" height="15" fill="rgb(245,211,2)" fg:x="87797" fg:w="16"/><text x="77.5592%" y="847.50"></text></g><g><title>__GI___pthread_cond_signal (16 samples, 0.01%)</title><rect x="77.3092%" y="821" width="0.0141%" height="15" fill="rgb(206,120,28)" fg:x="87797" fg:w="16"/><text x="77.5592%" y="831.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (26 samples, 0.02%)</title><rect x="77.3400%" y="1125" width="0.0229%" height="15" fill="rgb(211,59,34)" fg:x="87832" fg:w="26"/><text x="77.5900%" y="1135.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (40 samples, 0.04%)</title><rect x="77.6315%" y="981" width="0.0352%" height="15" fill="rgb(233,168,5)" fg:x="88163" fg:w="40"/><text x="77.8815%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (40 samples, 0.04%)</title><rect x="77.6315%" y="965" width="0.0352%" height="15" fill="rgb(234,33,13)" fg:x="88163" fg:w="40"/><text x="77.8815%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (40 samples, 0.04%)</title><rect x="77.6315%" y="949" width="0.0352%" height="15" fill="rgb(231,150,26)" fg:x="88163" fg:w="40"/><text x="77.8815%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (40 samples, 0.04%)</title><rect x="77.6315%" y="933" width="0.0352%" height="15" fill="rgb(217,191,4)" fg:x="88163" fg:w="40"/><text x="77.8815%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (31 samples, 0.03%)</title><rect x="77.6747%" y="981" width="0.0273%" height="15" fill="rgb(246,198,38)" fg:x="88212" fg:w="31"/><text x="77.9247%" y="991.50"></text></g><g><title>core::mem::replace (31 samples, 0.03%)</title><rect x="77.6747%" y="965" width="0.0273%" height="15" fill="rgb(245,64,37)" fg:x="88212" fg:w="31"/><text x="77.9247%" y="975.50"></text></g><g><title>core::ptr::read (30 samples, 0.03%)</title><rect x="77.6755%" y="949" width="0.0264%" height="15" fill="rgb(250,30,36)" fg:x="88213" fg:w="30"/><text x="77.9255%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (198 samples, 0.17%)</title><rect x="77.7671%" y="965" width="0.1743%" height="15" fill="rgb(217,86,53)" fg:x="88317" fg:w="198"/><text x="78.0171%" y="975.50"></text></g><g><title>core::mem::replace (198 samples, 0.17%)</title><rect x="77.7671%" y="949" width="0.1743%" height="15" fill="rgb(228,157,16)" fg:x="88317" fg:w="198"/><text x="78.0171%" y="959.50"></text></g><g><title>core::ptr::read (198 samples, 0.17%)</title><rect x="77.7671%" y="933" width="0.1743%" height="15" fill="rgb(217,59,31)" fg:x="88317" fg:w="198"/><text x="78.0171%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (343 samples, 0.30%)</title><rect x="77.7020%" y="981" width="0.3020%" height="15" fill="rgb(237,138,41)" fg:x="88243" fg:w="343"/><text x="77.9520%" y="991.50"></text></g><g><title>core::mem::drop (71 samples, 0.06%)</title><rect x="77.9415%" y="965" width="0.0625%" height="15" fill="rgb(227,91,49)" fg:x="88515" fg:w="71"/><text x="78.1915%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (71 samples, 0.06%)</title><rect x="77.9415%" y="949" width="0.0625%" height="15" fill="rgb(247,21,44)" fg:x="88515" fg:w="71"/><text x="78.1915%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (36 samples, 0.03%)</title><rect x="78.0075%" y="885" width="0.0317%" height="15" fill="rgb(219,210,51)" fg:x="88590" fg:w="36"/><text x="78.2575%" y="895.50"></text></g><g><title>core::mem::drop (41 samples, 0.04%)</title><rect x="78.0040%" y="981" width="0.0361%" height="15" fill="rgb(209,140,6)" fg:x="88586" fg:w="41"/><text x="78.2540%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (41 samples, 0.04%)</title><rect x="78.0040%" y="965" width="0.0361%" height="15" fill="rgb(221,188,24)" fg:x="88586" fg:w="41"/><text x="78.2540%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (39 samples, 0.03%)</title><rect x="78.0057%" y="949" width="0.0343%" height="15" fill="rgb(232,154,20)" fg:x="88588" fg:w="39"/><text x="78.2557%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.03%)</title><rect x="78.0057%" y="933" width="0.0343%" height="15" fill="rgb(244,137,50)" fg:x="88588" fg:w="39"/><text x="78.2557%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (38 samples, 0.03%)</title><rect x="78.0066%" y="917" width="0.0335%" height="15" fill="rgb(225,185,43)" fg:x="88589" fg:w="38"/><text x="78.2566%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (37 samples, 0.03%)</title><rect x="78.0075%" y="901" width="0.0326%" height="15" fill="rgb(213,205,38)" fg:x="88590" fg:w="37"/><text x="78.2575%" y="911.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="78.0401%" y="965" width="0.0150%" height="15" fill="rgb(236,73,12)" fg:x="88627" fg:w="17"/><text x="78.2901%" y="975.50"></text></g><g><title>std::sync::poison::Flag::done (18 samples, 0.02%)</title><rect x="78.0647%" y="933" width="0.0158%" height="15" fill="rgb(235,219,13)" fg:x="88655" fg:w="18"/><text x="78.3147%" y="943.50"></text></g><g><title>std::thread::panicking (18 samples, 0.02%)</title><rect x="78.0647%" y="917" width="0.0158%" height="15" fill="rgb(218,59,36)" fg:x="88655" fg:w="18"/><text x="78.3147%" y="927.50"></text></g><g><title>std::panicking::panicking (18 samples, 0.02%)</title><rect x="78.0647%" y="901" width="0.0158%" height="15" fill="rgb(205,110,39)" fg:x="88655" fg:w="18"/><text x="78.3147%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (18 samples, 0.02%)</title><rect x="78.0647%" y="885" width="0.0158%" height="15" fill="rgb(218,206,42)" fg:x="88655" fg:w="18"/><text x="78.3147%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (382 samples, 0.34%)</title><rect x="78.0885%" y="901" width="0.3364%" height="15" fill="rgb(248,125,24)" fg:x="88682" fg:w="382"/><text x="78.3385%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (449 samples, 0.40%)</title><rect x="78.0401%" y="981" width="0.3954%" height="15" fill="rgb(242,28,27)" fg:x="88627" fg:w="449"/><text x="78.2901%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (432 samples, 0.38%)</title><rect x="78.0551%" y="965" width="0.3804%" height="15" fill="rgb(216,228,15)" fg:x="88644" fg:w="432"/><text x="78.3051%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (432 samples, 0.38%)</title><rect x="78.0551%" y="949" width="0.3804%" height="15" fill="rgb(235,116,46)" fg:x="88644" fg:w="432"/><text x="78.3051%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (403 samples, 0.35%)</title><rect x="78.0806%" y="933" width="0.3549%" height="15" fill="rgb(224,18,32)" fg:x="88673" fg:w="403"/><text x="78.3306%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (394 samples, 0.35%)</title><rect x="78.0885%" y="917" width="0.3469%" height="15" fill="rgb(252,5,12)" fg:x="88682" fg:w="394"/><text x="78.3385%" y="927.50"></text></g><g><title>___pthread_mutex_unlock (12 samples, 0.01%)</title><rect x="78.4249%" y="901" width="0.0106%" height="15" fill="rgb(251,36,5)" fg:x="89064" fg:w="12"/><text x="78.6749%" y="911.50"></text></g><g><title>core::task::wake::Waker::will_wake (59 samples, 0.05%)</title><rect x="78.4354%" y="981" width="0.0520%" height="15" fill="rgb(217,53,14)" fg:x="89076" fg:w="59"/><text x="78.6854%" y="991.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (59 samples, 0.05%)</title><rect x="78.4354%" y="965" width="0.0520%" height="15" fill="rgb(215,86,45)" fg:x="89076" fg:w="59"/><text x="78.6854%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (43 samples, 0.04%)</title><rect x="78.4495%" y="949" width="0.0379%" height="15" fill="rgb(242,169,11)" fg:x="89092" fg:w="43"/><text x="78.6995%" y="959.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (43 samples, 0.04%)</title><rect x="78.4495%" y="933" width="0.0379%" height="15" fill="rgb(211,213,45)" fg:x="89092" fg:w="43"/><text x="78.6995%" y="943.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="78.4997%" y="949" width="0.0203%" height="15" fill="rgb(205,88,11)" fg:x="89149" fg:w="23"/><text x="78.7497%" y="959.50"></text></g><g><title>std::sync::poison::Flag::borrow (23 samples, 0.02%)</title><rect x="78.4997%" y="933" width="0.0203%" height="15" fill="rgb(252,69,26)" fg:x="89149" fg:w="23"/><text x="78.7497%" y="943.50"></text></g><g><title>std::thread::panicking (14 samples, 0.01%)</title><rect x="78.5077%" y="917" width="0.0123%" height="15" fill="rgb(246,123,37)" fg:x="89158" fg:w="14"/><text x="78.7577%" y="927.50"></text></g><g><title>std::panicking::panicking (14 samples, 0.01%)</title><rect x="78.5077%" y="901" width="0.0123%" height="15" fill="rgb(212,205,5)" fg:x="89158" fg:w="14"/><text x="78.7577%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (14 samples, 0.01%)</title><rect x="78.5077%" y="885" width="0.0123%" height="15" fill="rgb(253,148,0)" fg:x="89158" fg:w="14"/><text x="78.7577%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="78.5094%" y="869" width="0.0106%" height="15" fill="rgb(239,22,4)" fg:x="89160" fg:w="12"/><text x="78.7594%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="78.5094%" y="853" width="0.0106%" height="15" fill="rgb(226,26,53)" fg:x="89160" fg:w="12"/><text x="78.7594%" y="863.50"></text></g><g><title>event_listener::Inner::lock (812 samples, 0.72%)</title><rect x="78.4874%" y="981" width="0.7150%" height="15" fill="rgb(225,229,45)" fg:x="89135" fg:w="812"/><text x="78.7374%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (798 samples, 0.70%)</title><rect x="78.4997%" y="965" width="0.7027%" height="15" fill="rgb(220,60,37)" fg:x="89149" fg:w="798"/><text x="78.7497%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (775 samples, 0.68%)</title><rect x="78.5200%" y="949" width="0.6824%" height="15" fill="rgb(217,180,35)" fg:x="89172" fg:w="775"/><text x="78.7700%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (735 samples, 0.65%)</title><rect x="78.5552%" y="933" width="0.6472%" height="15" fill="rgb(229,7,53)" fg:x="89212" fg:w="735"/><text x="78.8052%" y="943.50"></text></g><g><title>___pthread_mutex_lock (735 samples, 0.65%)</title><rect x="78.5552%" y="917" width="0.6472%" height="15" fill="rgb(254,137,3)" fg:x="89212" fg:w="735"/><text x="78.8052%" y="927.50"></text></g><g><title>__GI___lll_lock_wait (86 samples, 0.08%)</title><rect x="79.1267%" y="901" width="0.0757%" height="15" fill="rgb(215,140,41)" fg:x="89861" fg:w="86"/><text x="79.3767%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,955 samples, 1.72%)</title><rect x="77.5487%" y="997" width="1.7215%" height="15" fill="rgb(250,80,15)" fg:x="88069" fg:w="1955"/><text x="77.7987%" y="1007.50"></text></g><g><title>event_listener::List::remove (77 samples, 0.07%)</title><rect x="79.2024%" y="981" width="0.0678%" height="15" fill="rgb(252,191,6)" fg:x="89947" fg:w="77"/><text x="79.4524%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (51 samples, 0.04%)</title><rect x="79.2253%" y="965" width="0.0449%" height="15" fill="rgb(246,217,18)" fg:x="89973" fg:w="51"/><text x="79.4753%" y="975.50"></text></g><g><title>core::mem::replace (51 samples, 0.04%)</title><rect x="79.2253%" y="949" width="0.0449%" height="15" fill="rgb(223,93,7)" fg:x="89973" fg:w="51"/><text x="79.4753%" y="959.50"></text></g><g><title>core::ptr::read (51 samples, 0.04%)</title><rect x="79.2253%" y="933" width="0.0449%" height="15" fill="rgb(225,55,52)" fg:x="89973" fg:w="51"/><text x="79.4753%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (104 samples, 0.09%)</title><rect x="79.4578%" y="949" width="0.0916%" height="15" fill="rgb(240,31,24)" fg:x="90237" fg:w="104"/><text x="79.7078%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (99 samples, 0.09%)</title><rect x="79.4622%" y="933" width="0.0872%" height="15" fill="rgb(205,56,52)" fg:x="90242" fg:w="99"/><text x="79.7122%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (99 samples, 0.09%)</title><rect x="79.4622%" y="917" width="0.0872%" height="15" fill="rgb(246,146,12)" fg:x="90242" fg:w="99"/><text x="79.7122%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (99 samples, 0.09%)</title><rect x="79.4622%" y="901" width="0.0872%" height="15" fill="rgb(239,84,36)" fg:x="90242" fg:w="99"/><text x="79.7122%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (206 samples, 0.18%)</title><rect x="79.5546%" y="949" width="0.1814%" height="15" fill="rgb(207,41,40)" fg:x="90347" fg:w="206"/><text x="79.8046%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (206 samples, 0.18%)</title><rect x="79.5546%" y="933" width="0.1814%" height="15" fill="rgb(241,179,25)" fg:x="90347" fg:w="206"/><text x="79.8046%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (412 samples, 0.36%)</title><rect x="79.7360%" y="949" width="0.3628%" height="15" fill="rgb(210,0,34)" fg:x="90553" fg:w="412"/><text x="79.9860%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (407 samples, 0.36%)</title><rect x="79.7404%" y="933" width="0.3584%" height="15" fill="rgb(225,217,29)" fg:x="90558" fg:w="407"/><text x="79.9904%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (940 samples, 0.83%)</title><rect x="79.2808%" y="981" width="0.8277%" height="15" fill="rgb(216,191,38)" fg:x="90036" fg:w="940"/><text x="79.5308%" y="991.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (895 samples, 0.79%)</title><rect x="79.3204%" y="965" width="0.7881%" height="15" fill="rgb(232,140,52)" fg:x="90081" fg:w="895"/><text x="79.5704%" y="975.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (16 samples, 0.01%)</title><rect x="80.1393%" y="901" width="0.0141%" height="15" fill="rgb(223,158,51)" fg:x="91011" fg:w="16"/><text x="80.3893%" y="911.50"></text></g><g><title>parking::Unparker::unpark (28 samples, 0.02%)</title><rect x="80.1613%" y="869" width="0.0247%" height="15" fill="rgb(235,29,51)" fg:x="91036" fg:w="28"/><text x="80.4113%" y="879.50"></text></g><g><title>parking::Inner::unpark (26 samples, 0.02%)</title><rect x="80.1631%" y="853" width="0.0229%" height="15" fill="rgb(215,181,18)" fg:x="91038" fg:w="26"/><text x="80.4131%" y="863.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.01%)</title><rect x="80.1754%" y="837" width="0.0106%" height="15" fill="rgb(227,125,34)" fg:x="91052" fg:w="12"/><text x="80.4254%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="80.1754%" y="821" width="0.0106%" height="15" fill="rgb(230,197,49)" fg:x="91052" fg:w="12"/><text x="80.4254%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="80.1754%" y="805" width="0.0106%" height="15" fill="rgb(239,141,16)" fg:x="91052" fg:w="12"/><text x="80.4254%" y="815.50"></text></g><g><title>___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="80.1754%" y="789" width="0.0106%" height="15" fill="rgb(225,105,43)" fg:x="91052" fg:w="12"/><text x="80.4254%" y="799.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (29 samples, 0.03%)</title><rect x="80.1613%" y="885" width="0.0255%" height="15" fill="rgb(214,131,14)" fg:x="91036" fg:w="29"/><text x="80.4113%" y="895.50"></text></g><g><title>event_listener::List::notify (58 samples, 0.05%)</title><rect x="80.1375%" y="965" width="0.0511%" height="15" fill="rgb(229,177,11)" fg:x="91009" fg:w="58"/><text x="80.3875%" y="975.50"></text></g><g><title>core::task::wake::Waker::wake (57 samples, 0.05%)</title><rect x="80.1384%" y="949" width="0.0502%" height="15" fill="rgb(231,180,14)" fg:x="91010" fg:w="57"/><text x="80.3884%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (56 samples, 0.05%)</title><rect x="80.1393%" y="933" width="0.0493%" height="15" fill="rgb(232,88,2)" fg:x="91011" fg:w="56"/><text x="80.3893%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (56 samples, 0.05%)</title><rect x="80.1393%" y="917" width="0.0493%" height="15" fill="rgb(205,220,8)" fg:x="91011" fg:w="56"/><text x="80.3893%" y="927.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (31 samples, 0.03%)</title><rect x="80.1613%" y="901" width="0.0273%" height="15" fill="rgb(225,23,53)" fg:x="91036" fg:w="31"/><text x="80.4113%" y="911.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,867 samples, 1.64%)</title><rect x="79.2702%" y="997" width="1.6440%" height="15" fill="rgb(213,62,29)" fg:x="90024" fg:w="1867"/><text x="79.5202%" y="1007.50"></text></g><g><title>event_listener::Event::notify (915 samples, 0.81%)</title><rect x="80.1085%" y="981" width="0.8057%" height="15" fill="rgb(227,75,7)" fg:x="90976" fg:w="915"/><text x="80.3585%" y="991.50"></text></g><g><title>event_listener::full_fence (824 samples, 0.73%)</title><rect x="80.1886%" y="965" width="0.7256%" height="15" fill="rgb(207,105,14)" fg:x="91067" fg:w="824"/><text x="80.4386%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (815 samples, 0.72%)</title><rect x="80.1965%" y="949" width="0.7176%" height="15" fill="rgb(245,62,29)" fg:x="91076" fg:w="815"/><text x="80.4465%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (815 samples, 0.72%)</title><rect x="80.1965%" y="933" width="0.7176%" height="15" fill="rgb(236,202,4)" fg:x="91076" fg:w="815"/><text x="80.4465%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (19 samples, 0.02%)</title><rect x="80.9142%" y="997" width="0.0167%" height="15" fill="rgb(250,67,1)" fg:x="91891" fg:w="19"/><text x="81.1642%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (51 samples, 0.04%)</title><rect x="80.9564%" y="869" width="0.0449%" height="15" fill="rgb(253,115,44)" fg:x="91939" fg:w="51"/><text x="81.2064%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (58 samples, 0.05%)</title><rect x="80.9520%" y="949" width="0.0511%" height="15" fill="rgb(251,139,18)" fg:x="91934" fg:w="58"/><text x="81.2020%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (57 samples, 0.05%)</title><rect x="80.9529%" y="933" width="0.0502%" height="15" fill="rgb(218,22,32)" fg:x="91935" fg:w="57"/><text x="81.2029%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.05%)</title><rect x="80.9529%" y="917" width="0.0502%" height="15" fill="rgb(243,53,5)" fg:x="91935" fg:w="57"/><text x="81.2029%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (53 samples, 0.05%)</title><rect x="80.9564%" y="901" width="0.0467%" height="15" fill="rgb(227,56,16)" fg:x="91939" fg:w="53"/><text x="81.2064%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (53 samples, 0.05%)</title><rect x="80.9564%" y="885" width="0.0467%" height="15" fill="rgb(245,53,0)" fg:x="91939" fg:w="53"/><text x="81.2064%" y="895.50"></text></g><g><title>event_listener::Inner::lock (71 samples, 0.06%)</title><rect x="81.0031%" y="949" width="0.0625%" height="15" fill="rgb(216,170,35)" fg:x="91992" fg:w="71"/><text x="81.2531%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (71 samples, 0.06%)</title><rect x="81.0031%" y="933" width="0.0625%" height="15" fill="rgb(211,200,8)" fg:x="91992" fg:w="71"/><text x="81.2531%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (66 samples, 0.06%)</title><rect x="81.0075%" y="917" width="0.0581%" height="15" fill="rgb(228,204,44)" fg:x="91997" fg:w="66"/><text x="81.2575%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (64 samples, 0.06%)</title><rect x="81.0093%" y="901" width="0.0564%" height="15" fill="rgb(214,121,17)" fg:x="91999" fg:w="64"/><text x="81.2593%" y="911.50"></text></g><g><title>___pthread_mutex_lock (64 samples, 0.06%)</title><rect x="81.0093%" y="885" width="0.0564%" height="15" fill="rgb(233,64,38)" fg:x="91999" fg:w="64"/><text x="81.2593%" y="895.50"></text></g><g><title>__GI___lll_lock_wait (23 samples, 0.02%)</title><rect x="81.0454%" y="869" width="0.0203%" height="15" fill="rgb(253,54,19)" fg:x="92040" fg:w="23"/><text x="81.2954%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (146 samples, 0.13%)</title><rect x="80.9503%" y="965" width="0.1286%" height="15" fill="rgb(253,94,18)" fg:x="91932" fg:w="146"/><text x="81.2003%" y="975.50"></text></g><g><title>event_listener::List::remove (14 samples, 0.01%)</title><rect x="81.0665%" y="949" width="0.0123%" height="15" fill="rgb(227,57,52)" fg:x="92064" fg:w="14"/><text x="81.3165%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (218 samples, 0.19%)</title><rect x="80.9309%" y="997" width="0.1920%" height="15" fill="rgb(230,228,50)" fg:x="91910" fg:w="218"/><text x="81.1809%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (199 samples, 0.18%)</title><rect x="80.9476%" y="981" width="0.1752%" height="15" fill="rgb(217,205,27)" fg:x="91929" fg:w="199"/><text x="81.1976%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (50 samples, 0.04%)</title><rect x="81.0788%" y="965" width="0.0440%" height="15" fill="rgb(252,71,50)" fg:x="92078" fg:w="50"/><text x="81.3288%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.04%)</title><rect x="81.0788%" y="949" width="0.0440%" height="15" fill="rgb(209,86,4)" fg:x="92078" fg:w="50"/><text x="81.3288%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (49 samples, 0.04%)</title><rect x="81.0797%" y="933" width="0.0431%" height="15" fill="rgb(229,94,0)" fg:x="92079" fg:w="49"/><text x="81.3297%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (49 samples, 0.04%)</title><rect x="81.0797%" y="917" width="0.0431%" height="15" fill="rgb(252,223,21)" fg:x="92079" fg:w="49"/><text x="81.3297%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (60 samples, 0.05%)</title><rect x="81.1238%" y="981" width="0.0528%" height="15" fill="rgb(230,210,4)" fg:x="92129" fg:w="60"/><text x="81.3738%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (60 samples, 0.05%)</title><rect x="81.1238%" y="965" width="0.0528%" height="15" fill="rgb(240,149,38)" fg:x="92129" fg:w="60"/><text x="81.3738%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (60 samples, 0.05%)</title><rect x="81.1238%" y="949" width="0.0528%" height="15" fill="rgb(254,105,20)" fg:x="92129" fg:w="60"/><text x="81.3738%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (54 samples, 0.05%)</title><rect x="81.1801%" y="901" width="0.0475%" height="15" fill="rgb(253,87,46)" fg:x="92193" fg:w="54"/><text x="81.4301%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (59 samples, 0.05%)</title><rect x="81.1766%" y="981" width="0.0520%" height="15" fill="rgb(253,116,33)" fg:x="92189" fg:w="59"/><text x="81.4266%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (59 samples, 0.05%)</title><rect x="81.1766%" y="965" width="0.0520%" height="15" fill="rgb(229,198,5)" fg:x="92189" fg:w="59"/><text x="81.4266%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.05%)</title><rect x="81.1766%" y="949" width="0.0520%" height="15" fill="rgb(242,38,37)" fg:x="92189" fg:w="59"/><text x="81.4266%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (56 samples, 0.05%)</title><rect x="81.1792%" y="933" width="0.0493%" height="15" fill="rgb(242,69,53)" fg:x="92192" fg:w="56"/><text x="81.4292%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (55 samples, 0.05%)</title><rect x="81.1801%" y="917" width="0.0484%" height="15" fill="rgb(249,80,16)" fg:x="92193" fg:w="55"/><text x="81.4301%" y="927.50"></text></g><g><title>event_listener::Inner::lock (59 samples, 0.05%)</title><rect x="81.2285%" y="981" width="0.0520%" height="15" fill="rgb(206,128,11)" fg:x="92248" fg:w="59"/><text x="81.4785%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (59 samples, 0.05%)</title><rect x="81.2285%" y="965" width="0.0520%" height="15" fill="rgb(212,35,20)" fg:x="92248" fg:w="59"/><text x="81.4785%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (57 samples, 0.05%)</title><rect x="81.2303%" y="949" width="0.0502%" height="15" fill="rgb(236,79,13)" fg:x="92250" fg:w="57"/><text x="81.4803%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (57 samples, 0.05%)</title><rect x="81.2303%" y="933" width="0.0502%" height="15" fill="rgb(233,123,3)" fg:x="92250" fg:w="57"/><text x="81.4803%" y="943.50"></text></g><g><title>___pthread_mutex_lock (57 samples, 0.05%)</title><rect x="81.2303%" y="917" width="0.0502%" height="15" fill="rgb(214,93,52)" fg:x="92250" fg:w="57"/><text x="81.4803%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,391 samples, 3.87%)</title><rect x="77.4580%" y="1013" width="3.8665%" height="15" fill="rgb(251,37,40)" fg:x="87966" fg:w="4391"/><text x="77.7080%" y="1023.50">&lt;asy..</text></g><g><title>event_listener::Event::listen (229 samples, 0.20%)</title><rect x="81.1229%" y="997" width="0.2016%" height="15" fill="rgb(227,80,54)" fg:x="92128" fg:w="229"/><text x="81.3729%" y="1007.50"></text></g><g><title>event_listener::full_fence (42 samples, 0.04%)</title><rect x="81.2875%" y="981" width="0.0370%" height="15" fill="rgb(254,48,11)" fg:x="92315" fg:w="42"/><text x="81.5375%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (41 samples, 0.04%)</title><rect x="81.2884%" y="965" width="0.0361%" height="15" fill="rgb(235,193,26)" fg:x="92316" fg:w="41"/><text x="81.5384%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (41 samples, 0.04%)</title><rect x="81.2884%" y="949" width="0.0361%" height="15" fill="rgb(229,99,21)" fg:x="92316" fg:w="41"/><text x="81.5384%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (326 samples, 0.29%)</title><rect x="81.3386%" y="997" width="0.2871%" height="15" fill="rgb(211,140,41)" fg:x="92373" fg:w="326"/><text x="81.5886%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,216 samples, 1.07%)</title><rect x="81.6353%" y="965" width="1.0707%" height="15" fill="rgb(240,227,30)" fg:x="92710" fg:w="1216"/><text x="81.8853%" y="975.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="82.7255%" y="853" width="0.0114%" height="15" fill="rgb(215,224,45)" fg:x="93948" fg:w="13"/><text x="82.9755%" y="863.50"></text></g><g><title>rust_dealloc (21 samples, 0.02%)</title><rect x="82.7387%" y="789" width="0.0185%" height="15" fill="rgb(206,123,31)" fg:x="93963" fg:w="21"/><text x="82.9887%" y="799.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (17 samples, 0.01%)</title><rect x="82.7985%" y="757" width="0.0150%" height="15" fill="rgb(210,138,16)" fg:x="94031" fg:w="17"/><text x="83.0485%" y="767.50"></text></g><g><title> (17 samples, 0.01%)</title><rect x="82.7985%" y="741" width="0.0150%" height="15" fill="rgb(228,57,28)" fg:x="94031" fg:w="17"/><text x="83.0485%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (73 samples, 0.06%)</title><rect x="82.7624%" y="789" width="0.0643%" height="15" fill="rgb(242,170,10)" fg:x="93990" fg:w="73"/><text x="83.0124%" y="799.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (64 samples, 0.06%)</title><rect x="82.7704%" y="773" width="0.0564%" height="15" fill="rgb(228,214,39)" fg:x="93999" fg:w="64"/><text x="83.0204%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (112 samples, 0.10%)</title><rect x="82.7369%" y="821" width="0.0986%" height="15" fill="rgb(218,179,33)" fg:x="93961" fg:w="112"/><text x="82.9869%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (112 samples, 0.10%)</title><rect x="82.7369%" y="805" width="0.0986%" height="15" fill="rgb(235,193,39)" fg:x="93961" fg:w="112"/><text x="82.9869%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (117 samples, 0.10%)</title><rect x="82.7369%" y="853" width="0.1030%" height="15" fill="rgb(219,221,36)" fg:x="93961" fg:w="117"/><text x="82.9869%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (117 samples, 0.10%)</title><rect x="82.7369%" y="837" width="0.1030%" height="15" fill="rgb(248,218,19)" fg:x="93961" fg:w="117"/><text x="82.9869%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (140 samples, 0.12%)</title><rect x="82.7211%" y="869" width="0.1233%" height="15" fill="rgb(205,50,9)" fg:x="93943" fg:w="140"/><text x="82.9711%" y="879.50"></text></g><g><title>rust_dealloc (162 samples, 0.14%)</title><rect x="82.7123%" y="885" width="0.1426%" height="15" fill="rgb(238,81,28)" fg:x="93933" fg:w="162"/><text x="82.9623%" y="895.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="82.8443%" y="869" width="0.0106%" height="15" fill="rgb(235,110,19)" fg:x="94083" fg:w="12"/><text x="83.0943%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,215 samples, 5.47%)</title><rect x="77.3858%" y="1045" width="5.4726%" height="15" fill="rgb(214,7,14)" fg:x="87884" fg:w="6215"/><text x="77.6358%" y="1055.50">&lt;async_..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (6,194 samples, 5.45%)</title><rect x="77.4043%" y="1029" width="5.4541%" height="15" fill="rgb(211,77,3)" fg:x="87905" fg:w="6194"/><text x="77.6543%" y="1039.50">&lt;async_..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,742 samples, 1.53%)</title><rect x="81.3245%" y="1013" width="1.5339%" height="15" fill="rgb(229,5,9)" fg:x="92357" fg:w="1742"/><text x="81.5745%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,400 samples, 1.23%)</title><rect x="81.6257%" y="997" width="1.2328%" height="15" fill="rgb(225,90,11)" fg:x="92699" fg:w="1400"/><text x="81.8757%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (1,400 samples, 1.23%)</title><rect x="81.6257%" y="981" width="1.2328%" height="15" fill="rgb(242,56,8)" fg:x="92699" fg:w="1400"/><text x="81.8757%" y="991.50"></text></g><g><title>alloc::alloc::box_free (173 samples, 0.15%)</title><rect x="82.7061%" y="965" width="0.1523%" height="15" fill="rgb(249,212,39)" fg:x="93926" fg:w="173"/><text x="82.9561%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (173 samples, 0.15%)</title><rect x="82.7061%" y="949" width="0.1523%" height="15" fill="rgb(236,90,9)" fg:x="93926" fg:w="173"/><text x="82.9561%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (173 samples, 0.15%)</title><rect x="82.7061%" y="933" width="0.1523%" height="15" fill="rgb(206,88,35)" fg:x="93926" fg:w="173"/><text x="82.9561%" y="943.50"></text></g><g><title>__rg_dealloc (173 samples, 0.15%)</title><rect x="82.7061%" y="917" width="0.1523%" height="15" fill="rgb(205,126,30)" fg:x="93926" fg:w="173"/><text x="82.9561%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (173 samples, 0.15%)</title><rect x="82.7061%" y="901" width="0.1523%" height="15" fill="rgb(230,176,12)" fg:x="93926" fg:w="173"/><text x="82.9561%" y="911.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,303 samples, 6.43%)</title><rect x="77.3629%" y="1109" width="6.4306%" height="15" fill="rgb(243,19,9)" fg:x="87858" fg:w="7303"/><text x="77.6129%" y="1119.50">&lt;async_s..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (7,303 samples, 6.43%)</title><rect x="77.3629%" y="1093" width="6.4306%" height="15" fill="rgb(245,171,17)" fg:x="87858" fg:w="7303"/><text x="77.6129%" y="1103.50">&lt;tremor_..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (7,303 samples, 6.43%)</title><rect x="77.3629%" y="1077" width="6.4306%" height="15" fill="rgb(227,52,21)" fg:x="87858" fg:w="7303"/><text x="77.6129%" y="1087.50">&lt;async_s..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (7,303 samples, 6.43%)</title><rect x="77.3629%" y="1061" width="6.4306%" height="15" fill="rgb(238,69,14)" fg:x="87858" fg:w="7303"/><text x="77.6129%" y="1071.50">&lt;tremor_..</text></g><g><title>__memcpy_avx_unaligned_erms (1,062 samples, 0.94%)</title><rect x="82.8584%" y="1045" width="0.9351%" height="15" fill="rgb(241,156,39)" fg:x="94099" fg:w="1062"/><text x="83.1084%" y="1055.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="83.8957%" y="1013" width="0.0123%" height="15" fill="rgb(212,227,28)" fg:x="95277" fg:w="14"/><text x="84.1457%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (14 samples, 0.01%)</title><rect x="83.8957%" y="997" width="0.0123%" height="15" fill="rgb(209,118,27)" fg:x="95277" fg:w="14"/><text x="84.1457%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (14 samples, 0.01%)</title><rect x="83.8957%" y="981" width="0.0123%" height="15" fill="rgb(226,102,5)" fg:x="95277" fg:w="14"/><text x="84.1457%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.01%)</title><rect x="83.8957%" y="965" width="0.0123%" height="15" fill="rgb(223,34,3)" fg:x="95277" fg:w="14"/><text x="84.1457%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (14 samples, 0.01%)</title><rect x="83.9124%" y="1013" width="0.0123%" height="15" fill="rgb(221,81,38)" fg:x="95296" fg:w="14"/><text x="84.1624%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (14 samples, 0.01%)</title><rect x="83.9124%" y="997" width="0.0123%" height="15" fill="rgb(236,219,28)" fg:x="95296" fg:w="14"/><text x="84.1624%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="83.9124%" y="981" width="0.0123%" height="15" fill="rgb(213,200,14)" fg:x="95296" fg:w="14"/><text x="84.1624%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="83.9133%" y="965" width="0.0114%" height="15" fill="rgb(240,33,19)" fg:x="95297" fg:w="13"/><text x="84.1633%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="83.9133%" y="949" width="0.0114%" height="15" fill="rgb(233,113,27)" fg:x="95297" fg:w="13"/><text x="84.1633%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="83.9133%" y="933" width="0.0114%" height="15" fill="rgb(220,221,18)" fg:x="95297" fg:w="13"/><text x="84.1633%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (49 samples, 0.04%)</title><rect x="83.8948%" y="1029" width="0.0431%" height="15" fill="rgb(238,92,8)" fg:x="95276" fg:w="49"/><text x="84.1448%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (14 samples, 0.01%)</title><rect x="83.9256%" y="1013" width="0.0123%" height="15" fill="rgb(222,164,16)" fg:x="95311" fg:w="14"/><text x="84.1756%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="83.9256%" y="997" width="0.0123%" height="15" fill="rgb(241,119,3)" fg:x="95311" fg:w="14"/><text x="84.1756%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="83.9256%" y="981" width="0.0123%" height="15" fill="rgb(241,44,8)" fg:x="95311" fg:w="14"/><text x="84.1756%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="83.9265%" y="965" width="0.0114%" height="15" fill="rgb(230,36,40)" fg:x="95312" fg:w="13"/><text x="84.1765%" y="975.50"></text></g><g><title>___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="83.9265%" y="949" width="0.0114%" height="15" fill="rgb(243,16,36)" fg:x="95312" fg:w="13"/><text x="84.1765%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (23 samples, 0.02%)</title><rect x="83.9380%" y="1029" width="0.0203%" height="15" fill="rgb(231,4,26)" fg:x="95325" fg:w="23"/><text x="84.1880%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (25 samples, 0.02%)</title><rect x="83.9811%" y="1013" width="0.0220%" height="15" fill="rgb(240,9,31)" fg:x="95374" fg:w="25"/><text x="84.2311%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (304 samples, 0.27%)</title><rect x="84.1396%" y="997" width="0.2677%" height="15" fill="rgb(207,173,15)" fg:x="95554" fg:w="304"/><text x="84.3896%" y="1007.50"></text></g><g><title>concurrent_queue::full_fence (17 samples, 0.01%)</title><rect x="84.5174%" y="981" width="0.0150%" height="15" fill="rgb(224,192,53)" fg:x="95983" fg:w="17"/><text x="84.7674%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (16 samples, 0.01%)</title><rect x="84.5183%" y="965" width="0.0141%" height="15" fill="rgb(223,67,28)" fg:x="95984" fg:w="16"/><text x="84.7683%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.01%)</title><rect x="84.5183%" y="949" width="0.0141%" height="15" fill="rgb(211,20,47)" fg:x="95984" fg:w="16"/><text x="84.7683%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.01%)</title><rect x="84.5183%" y="933" width="0.0141%" height="15" fill="rgb(240,228,2)" fg:x="95984" fg:w="16"/><text x="84.7683%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (12 samples, 0.01%)</title><rect x="84.5323%" y="981" width="0.0106%" height="15" fill="rgb(248,151,12)" fg:x="96000" fg:w="12"/><text x="84.7823%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (250 samples, 0.22%)</title><rect x="84.5429%" y="981" width="0.2201%" height="15" fill="rgb(244,8,39)" fg:x="96012" fg:w="250"/><text x="84.7929%" y="991.50"></text></g><g><title>core::ptr::write (250 samples, 0.22%)</title><rect x="84.5429%" y="965" width="0.2201%" height="15" fill="rgb(222,26,8)" fg:x="96012" fg:w="250"/><text x="84.7929%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (241 samples, 0.21%)</title><rect x="84.5508%" y="949" width="0.2122%" height="15" fill="rgb(213,106,44)" fg:x="96021" fg:w="241"/><text x="84.8008%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (309 samples, 0.27%)</title><rect x="84.7630%" y="981" width="0.2721%" height="15" fill="rgb(214,129,20)" fg:x="96262" fg:w="309"/><text x="85.0130%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (309 samples, 0.27%)</title><rect x="84.7630%" y="965" width="0.2721%" height="15" fill="rgb(212,32,13)" fg:x="96262" fg:w="309"/><text x="85.0130%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (310 samples, 0.27%)</title><rect x="85.0351%" y="981" width="0.2730%" height="15" fill="rgb(208,168,33)" fg:x="96571" fg:w="310"/><text x="85.2851%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (299 samples, 0.26%)</title><rect x="85.0448%" y="965" width="0.2633%" height="15" fill="rgb(231,207,8)" fg:x="96582" fg:w="299"/><text x="85.2948%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,497 samples, 1.32%)</title><rect x="84.0031%" y="1013" width="1.3182%" height="15" fill="rgb(235,219,23)" fg:x="95399" fg:w="1497"/><text x="84.2531%" y="1023.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,038 samples, 0.91%)</title><rect x="84.4073%" y="997" width="0.9140%" height="15" fill="rgb(226,216,26)" fg:x="95858" fg:w="1038"/><text x="84.6573%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (15 samples, 0.01%)</title><rect x="85.3081%" y="981" width="0.0132%" height="15" fill="rgb(239,137,16)" fg:x="96881" fg:w="15"/><text x="85.5581%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_store (15 samples, 0.01%)</title><rect x="85.3081%" y="965" width="0.0132%" height="15" fill="rgb(207,12,36)" fg:x="96881" fg:w="15"/><text x="85.5581%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (13 samples, 0.01%)</title><rect x="85.3336%" y="997" width="0.0114%" height="15" fill="rgb(210,214,24)" fg:x="96910" fg:w="13"/><text x="85.5836%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="85.3451%" y="997" width="0.0114%" height="15" fill="rgb(206,56,30)" fg:x="96923" fg:w="13"/><text x="85.5951%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="85.3451%" y="981" width="0.0114%" height="15" fill="rgb(228,143,26)" fg:x="96923" fg:w="13"/><text x="85.5951%" y="991.50"></text></g><g><title>event_listener::Inner::lock (44 samples, 0.04%)</title><rect x="85.3583%" y="997" width="0.0387%" height="15" fill="rgb(216,218,46)" fg:x="96938" fg:w="44"/><text x="85.6083%" y="1007.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (44 samples, 0.04%)</title><rect x="85.3583%" y="981" width="0.0387%" height="15" fill="rgb(206,6,19)" fg:x="96938" fg:w="44"/><text x="85.6083%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (43 samples, 0.04%)</title><rect x="85.3592%" y="965" width="0.0379%" height="15" fill="rgb(239,177,51)" fg:x="96939" fg:w="43"/><text x="85.6092%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (43 samples, 0.04%)</title><rect x="85.3592%" y="949" width="0.0379%" height="15" fill="rgb(216,55,25)" fg:x="96939" fg:w="43"/><text x="85.6092%" y="959.50"></text></g><g><title>___pthread_mutex_lock (43 samples, 0.04%)</title><rect x="85.3592%" y="933" width="0.0379%" height="15" fill="rgb(231,163,29)" fg:x="96939" fg:w="43"/><text x="85.6092%" y="943.50"></text></g><g><title>async_executor::State::notify (48 samples, 0.04%)</title><rect x="85.4058%" y="917" width="0.0423%" height="15" fill="rgb(232,149,50)" fg:x="96992" fg:w="48"/><text x="85.6558%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (26 samples, 0.02%)</title><rect x="85.4252%" y="901" width="0.0229%" height="15" fill="rgb(223,142,48)" fg:x="97014" fg:w="26"/><text x="85.6752%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (26 samples, 0.02%)</title><rect x="85.4252%" y="885" width="0.0229%" height="15" fill="rgb(245,83,23)" fg:x="97014" fg:w="26"/><text x="85.6752%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (25 samples, 0.02%)</title><rect x="85.4261%" y="869" width="0.0220%" height="15" fill="rgb(224,63,2)" fg:x="97015" fg:w="25"/><text x="85.6761%" y="879.50"></text></g><g><title>___pthread_mutex_lock (25 samples, 0.02%)</title><rect x="85.4261%" y="853" width="0.0220%" height="15" fill="rgb(218,65,53)" fg:x="97015" fg:w="25"/><text x="85.6761%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (27 samples, 0.02%)</title><rect x="85.4587%" y="885" width="0.0238%" height="15" fill="rgb(221,84,29)" fg:x="97052" fg:w="27"/><text x="85.7087%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (27 samples, 0.02%)</title><rect x="85.4587%" y="869" width="0.0238%" height="15" fill="rgb(234,0,32)" fg:x="97052" fg:w="27"/><text x="85.7087%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (12 samples, 0.01%)</title><rect x="85.4833%" y="885" width="0.0106%" height="15" fill="rgb(206,20,16)" fg:x="97080" fg:w="12"/><text x="85.7333%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_or (12 samples, 0.01%)</title><rect x="85.4833%" y="869" width="0.0106%" height="15" fill="rgb(244,172,18)" fg:x="97080" fg:w="12"/><text x="85.7333%" y="879.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (105 samples, 0.09%)</title><rect x="85.4058%" y="933" width="0.0925%" height="15" fill="rgb(254,133,1)" fg:x="96992" fg:w="105"/><text x="85.6558%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (57 samples, 0.05%)</title><rect x="85.4481%" y="917" width="0.0502%" height="15" fill="rgb(222,206,41)" fg:x="97040" fg:w="57"/><text x="85.6981%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (56 samples, 0.05%)</title><rect x="85.4490%" y="901" width="0.0493%" height="15" fill="rgb(212,3,42)" fg:x="97041" fg:w="56"/><text x="85.6990%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (42 samples, 0.04%)</title><rect x="85.4983%" y="933" width="0.0370%" height="15" fill="rgb(241,11,4)" fg:x="97097" fg:w="42"/><text x="85.7483%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (42 samples, 0.04%)</title><rect x="85.4983%" y="917" width="0.0370%" height="15" fill="rgb(205,19,26)" fg:x="97097" fg:w="42"/><text x="85.7483%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15 samples, 0.01%)</title><rect x="85.5353%" y="933" width="0.0132%" height="15" fill="rgb(210,179,32)" fg:x="97139" fg:w="15"/><text x="85.7853%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="85.5353%" y="917" width="0.0132%" height="15" fill="rgb(227,116,49)" fg:x="97139" fg:w="15"/><text x="85.7853%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (25 samples, 0.02%)</title><rect x="85.5626%" y="869" width="0.0220%" height="15" fill="rgb(211,146,6)" fg:x="97170" fg:w="25"/><text x="85.8126%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_swap (25 samples, 0.02%)</title><rect x="85.5626%" y="853" width="0.0220%" height="15" fill="rgb(219,44,39)" fg:x="97170" fg:w="25"/><text x="85.8126%" y="863.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (31 samples, 0.03%)</title><rect x="85.5846%" y="869" width="0.0273%" height="15" fill="rgb(234,128,11)" fg:x="97195" fg:w="31"/><text x="85.8346%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (31 samples, 0.03%)</title><rect x="85.5846%" y="853" width="0.0273%" height="15" fill="rgb(220,183,53)" fg:x="97195" fg:w="31"/><text x="85.8346%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (31 samples, 0.03%)</title><rect x="85.5846%" y="837" width="0.0273%" height="15" fill="rgb(213,219,32)" fg:x="97195" fg:w="31"/><text x="85.8346%" y="847.50"></text></g><g><title>__GI___pthread_cond_signal (31 samples, 0.03%)</title><rect x="85.5846%" y="821" width="0.0273%" height="15" fill="rgb(232,156,16)" fg:x="97195" fg:w="31"/><text x="85.8346%" y="831.50"></text></g><g><title>parking::Unparker::unpark (94 samples, 0.08%)</title><rect x="85.5564%" y="901" width="0.0828%" height="15" fill="rgb(246,135,34)" fg:x="97163" fg:w="94"/><text x="85.8064%" y="911.50"></text></g><g><title>parking::Inner::unpark (90 samples, 0.08%)</title><rect x="85.5599%" y="885" width="0.0792%" height="15" fill="rgb(241,99,0)" fg:x="97167" fg:w="90"/><text x="85.8099%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 0.03%)</title><rect x="85.6119%" y="869" width="0.0273%" height="15" fill="rgb(222,103,45)" fg:x="97226" fg:w="31"/><text x="85.8619%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (31 samples, 0.03%)</title><rect x="85.6119%" y="853" width="0.0273%" height="15" fill="rgb(212,57,4)" fg:x="97226" fg:w="31"/><text x="85.8619%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (31 samples, 0.03%)</title><rect x="85.6119%" y="837" width="0.0273%" height="15" fill="rgb(215,68,47)" fg:x="97226" fg:w="31"/><text x="85.8619%" y="847.50"></text></g><g><title>___pthread_mutex_lock (31 samples, 0.03%)</title><rect x="85.6119%" y="821" width="0.0273%" height="15" fill="rgb(230,84,2)" fg:x="97226" fg:w="31"/><text x="85.8619%" y="831.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (108 samples, 0.10%)</title><rect x="85.5485%" y="917" width="0.0951%" height="15" fill="rgb(220,102,14)" fg:x="97154" fg:w="108"/><text x="85.7985%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (17 samples, 0.01%)</title><rect x="85.6436%" y="917" width="0.0150%" height="15" fill="rgb(240,10,32)" fg:x="97262" fg:w="17"/><text x="85.8936%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="85.6436%" y="901" width="0.0150%" height="15" fill="rgb(215,47,27)" fg:x="97262" fg:w="17"/><text x="85.8936%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.01%)</title><rect x="85.6436%" y="885" width="0.0150%" height="15" fill="rgb(233,188,43)" fg:x="97262" fg:w="17"/><text x="85.8936%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.01%)</title><rect x="85.6436%" y="869" width="0.0150%" height="15" fill="rgb(253,190,1)" fg:x="97262" fg:w="17"/><text x="85.8936%" y="879.50"></text></g><g><title>event_listener::List::notify (298 samples, 0.26%)</title><rect x="85.3970%" y="997" width="0.2624%" height="15" fill="rgb(206,114,52)" fg:x="96982" fg:w="298"/><text x="85.6470%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (296 samples, 0.26%)</title><rect x="85.3988%" y="981" width="0.2606%" height="15" fill="rgb(233,120,37)" fg:x="96984" fg:w="296"/><text x="85.6488%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (289 samples, 0.25%)</title><rect x="85.4050%" y="965" width="0.2545%" height="15" fill="rgb(214,52,39)" fg:x="96991" fg:w="289"/><text x="85.6550%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (288 samples, 0.25%)</title><rect x="85.4058%" y="949" width="0.2536%" height="15" fill="rgb(223,80,29)" fg:x="96992" fg:w="288"/><text x="85.6558%" y="959.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (126 samples, 0.11%)</title><rect x="85.5485%" y="933" width="0.1109%" height="15" fill="rgb(230,101,40)" fg:x="97154" fg:w="126"/><text x="85.7985%" y="943.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (3,111 samples, 2.74%)</title><rect x="83.9582%" y="1029" width="2.7394%" height="15" fill="rgb(219,211,8)" fg:x="95348" fg:w="3111"/><text x="84.2082%" y="1039.50">as..</text></g><g><title>event_listener::Event::notify (1,563 samples, 1.38%)</title><rect x="85.3213%" y="1013" width="1.3763%" height="15" fill="rgb(252,126,28)" fg:x="96896" fg:w="1563"/><text x="85.5713%" y="1023.50"></text></g><g><title>event_listener::full_fence (1,179 samples, 1.04%)</title><rect x="85.6594%" y="997" width="1.0382%" height="15" fill="rgb(215,56,38)" fg:x="97280" fg:w="1179"/><text x="85.9094%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,177 samples, 1.04%)</title><rect x="85.6612%" y="981" width="1.0364%" height="15" fill="rgb(249,55,44)" fg:x="97282" fg:w="1177"/><text x="85.9112%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,177 samples, 1.04%)</title><rect x="85.6612%" y="965" width="1.0364%" height="15" fill="rgb(220,221,32)" fg:x="97282" fg:w="1177"/><text x="85.9112%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="86.7170%" y="1013" width="0.0273%" height="15" fill="rgb(212,216,41)" fg:x="98481" fg:w="31"/><text x="86.9670%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (31 samples, 0.03%)</title><rect x="86.7170%" y="997" width="0.0273%" height="15" fill="rgb(228,213,43)" fg:x="98481" fg:w="31"/><text x="86.9670%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (31 samples, 0.03%)</title><rect x="86.7170%" y="981" width="0.0273%" height="15" fill="rgb(211,31,26)" fg:x="98481" fg:w="31"/><text x="86.9670%" y="991.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (24 samples, 0.02%)</title><rect x="86.7443%" y="933" width="0.0211%" height="15" fill="rgb(229,202,19)" fg:x="98512" fg:w="24"/><text x="86.9943%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (25 samples, 0.02%)</title><rect x="86.7443%" y="1013" width="0.0220%" height="15" fill="rgb(229,105,46)" fg:x="98512" fg:w="25"/><text x="86.9943%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (25 samples, 0.02%)</title><rect x="86.7443%" y="997" width="0.0220%" height="15" fill="rgb(235,108,1)" fg:x="98512" fg:w="25"/><text x="86.9943%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="86.7443%" y="981" width="0.0220%" height="15" fill="rgb(245,111,35)" fg:x="98512" fg:w="25"/><text x="86.9943%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (25 samples, 0.02%)</title><rect x="86.7443%" y="965" width="0.0220%" height="15" fill="rgb(219,185,31)" fg:x="98512" fg:w="25"/><text x="86.9943%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (25 samples, 0.02%)</title><rect x="86.7443%" y="949" width="0.0220%" height="15" fill="rgb(214,4,43)" fg:x="98512" fg:w="25"/><text x="86.9943%" y="959.50"></text></g><g><title>event_listener::Inner::lock (14 samples, 0.01%)</title><rect x="86.7672%" y="1013" width="0.0123%" height="15" fill="rgb(235,227,40)" fg:x="98538" fg:w="14"/><text x="87.0172%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="86.7672%" y="997" width="0.0123%" height="15" fill="rgb(230,88,30)" fg:x="98538" fg:w="14"/><text x="87.0172%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="86.7672%" y="981" width="0.0123%" height="15" fill="rgb(216,217,1)" fg:x="98538" fg:w="14"/><text x="87.0172%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="86.7672%" y="965" width="0.0123%" height="15" fill="rgb(248,139,50)" fg:x="98538" fg:w="14"/><text x="87.0172%" y="975.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="86.7672%" y="949" width="0.0123%" height="15" fill="rgb(233,1,21)" fg:x="98538" fg:w="14"/><text x="87.0172%" y="959.50"></text></g><g><title>event_listener::Event::listen (79 samples, 0.07%)</title><rect x="86.7170%" y="1029" width="0.0696%" height="15" fill="rgb(215,183,12)" fg:x="98481" fg:w="79"/><text x="86.9670%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (26 samples, 0.02%)</title><rect x="86.7989%" y="933" width="0.0229%" height="15" fill="rgb(229,104,42)" fg:x="98574" fg:w="26"/><text x="87.0489%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (29 samples, 0.03%)</title><rect x="86.7971%" y="1013" width="0.0255%" height="15" fill="rgb(243,34,48)" fg:x="98572" fg:w="29"/><text x="87.0471%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (28 samples, 0.02%)</title><rect x="86.7980%" y="997" width="0.0247%" height="15" fill="rgb(239,11,44)" fg:x="98573" fg:w="28"/><text x="87.0480%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.02%)</title><rect x="86.7980%" y="981" width="0.0247%" height="15" fill="rgb(231,98,35)" fg:x="98573" fg:w="28"/><text x="87.0480%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (28 samples, 0.02%)</title><rect x="86.7980%" y="965" width="0.0247%" height="15" fill="rgb(233,28,25)" fg:x="98573" fg:w="28"/><text x="87.0480%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (27 samples, 0.02%)</title><rect x="86.7989%" y="949" width="0.0238%" height="15" fill="rgb(234,123,11)" fg:x="98574" fg:w="27"/><text x="87.0489%" y="959.50"></text></g><g><title>event_listener::Inner::lock (55 samples, 0.05%)</title><rect x="86.8262%" y="1013" width="0.0484%" height="15" fill="rgb(220,69,3)" fg:x="98605" fg:w="55"/><text x="87.0762%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (54 samples, 0.05%)</title><rect x="86.8270%" y="997" width="0.0475%" height="15" fill="rgb(214,64,36)" fg:x="98606" fg:w="54"/><text x="87.0770%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (47 samples, 0.04%)</title><rect x="86.8332%" y="981" width="0.0414%" height="15" fill="rgb(211,138,32)" fg:x="98613" fg:w="47"/><text x="87.0832%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (47 samples, 0.04%)</title><rect x="86.8332%" y="965" width="0.0414%" height="15" fill="rgb(213,118,47)" fg:x="98613" fg:w="47"/><text x="87.0832%" y="975.50"></text></g><g><title>___pthread_mutex_lock (47 samples, 0.04%)</title><rect x="86.8332%" y="949" width="0.0414%" height="15" fill="rgb(243,124,49)" fg:x="98613" fg:w="47"/><text x="87.0832%" y="959.50"></text></g><g><title>__GI___lll_lock_wait (33 samples, 0.03%)</title><rect x="86.8455%" y="933" width="0.0291%" height="15" fill="rgb(221,30,28)" fg:x="98627" fg:w="33"/><text x="87.0955%" y="943.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (11,053 samples, 9.73%)</title><rect x="77.3629%" y="1125" width="9.7327%" height="15" fill="rgb(246,37,13)" fg:x="87858" fg:w="11053"/><text x="77.6129%" y="1135.50">tremor_runtime..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,750 samples, 3.30%)</title><rect x="83.7936%" y="1109" width="3.3020%" height="15" fill="rgb(249,66,14)" fg:x="95161" fg:w="3750"/><text x="84.0436%" y="1119.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,750 samples, 3.30%)</title><rect x="83.7936%" y="1093" width="3.3020%" height="15" fill="rgb(213,166,5)" fg:x="95161" fg:w="3750"/><text x="84.0436%" y="1103.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,750 samples, 3.30%)</title><rect x="83.7936%" y="1077" width="3.3020%" height="15" fill="rgb(221,66,24)" fg:x="95161" fg:w="3750"/><text x="84.0436%" y="1087.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (3,750 samples, 3.30%)</title><rect x="83.7936%" y="1061" width="3.3020%" height="15" fill="rgb(210,132,17)" fg:x="95161" fg:w="3750"/><text x="84.0436%" y="1071.50">tre..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (3,750 samples, 3.30%)</title><rect x="83.7936%" y="1045" width="3.3020%" height="15" fill="rgb(243,202,5)" fg:x="95161" fg:w="3750"/><text x="84.0436%" y="1055.50">&lt;as..</text></g><g><title>event_listener::Event::notify (351 samples, 0.31%)</title><rect x="86.7865%" y="1029" width="0.3091%" height="15" fill="rgb(233,70,48)" fg:x="98560" fg:w="351"/><text x="87.0365%" y="1039.50"></text></g><g><title>event_listener::full_fence (251 samples, 0.22%)</title><rect x="86.8746%" y="1013" width="0.2210%" height="15" fill="rgb(238,41,26)" fg:x="98660" fg:w="251"/><text x="87.1246%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (249 samples, 0.22%)</title><rect x="86.8764%" y="997" width="0.2193%" height="15" fill="rgb(241,19,31)" fg:x="98662" fg:w="249"/><text x="87.1264%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (249 samples, 0.22%)</title><rect x="86.8764%" y="981" width="0.2193%" height="15" fill="rgb(214,76,10)" fg:x="98662" fg:w="249"/><text x="87.1264%" y="991.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (59 samples, 0.05%)</title><rect x="87.0956%" y="1125" width="0.0520%" height="15" fill="rgb(254,202,22)" fg:x="98911" fg:w="59"/><text x="87.3456%" y="1135.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (36 samples, 0.03%)</title><rect x="87.1476%" y="1125" width="0.0317%" height="15" fill="rgb(214,72,24)" fg:x="98970" fg:w="36"/><text x="87.3976%" y="1135.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (23 samples, 0.02%)</title><rect x="87.1801%" y="1125" width="0.0203%" height="15" fill="rgb(221,92,46)" fg:x="99007" fg:w="23"/><text x="87.4301%" y="1135.50"></text></g><g><title>value_trait::Builder::object (13 samples, 0.01%)</title><rect x="87.2004%" y="1125" width="0.0114%" height="15" fill="rgb(246,13,50)" fg:x="99030" fg:w="13"/><text x="87.4504%" y="1135.50"></text></g><g><title>[unknown] (93,810 samples, 82.60%)</title><rect x="4.6123%" y="1141" width="82.6039%" height="15" fill="rgb(240,165,38)" fg:x="5238" fg:w="93810"/><text x="4.8623%" y="1151.50">[unknown]</text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (22 samples, 0.02%)</title><rect x="87.2339%" y="485" width="0.0194%" height="15" fill="rgb(241,24,51)" fg:x="99068" fg:w="22"/><text x="87.4839%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::get_superslab (22 samples, 0.02%)</title><rect x="87.2339%" y="469" width="0.0194%" height="15" fill="rgb(227,51,44)" fg:x="99068" fg:w="22"/><text x="87.4839%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::get_superslab (22 samples, 0.02%)</title><rect x="87.2339%" y="453" width="0.0194%" height="15" fill="rgb(231,121,3)" fg:x="99068" fg:w="22"/><text x="87.4839%" y="463.50"></text></g><g><title>snmalloc::Superslab::init (15 samples, 0.01%)</title><rect x="87.2400%" y="437" width="0.0132%" height="15" fill="rgb(245,3,41)" fg:x="99075" fg:w="15"/><text x="87.4900%" y="447.50"></text></g><g><title>snmalloc::AllocPool&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt;::acquire (34 samples, 0.03%)</title><rect x="87.2339%" y="677" width="0.0299%" height="15" fill="rgb(214,13,26)" fg:x="99068" fg:w="34"/><text x="87.4839%" y="687.50"></text></g><g><title>snmalloc::Pool&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt; &gt;::acquire&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (34 samples, 0.03%)</title><rect x="87.2339%" y="661" width="0.0299%" height="15" fill="rgb(252,75,11)" fg:x="99068" fg:w="34"/><text x="87.4839%" y="671.50"></text></g><g><title>snmalloc::Pool&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt; &gt;::acquire&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (34 samples, 0.03%)</title><rect x="87.2339%" y="645" width="0.0299%" height="15" fill="rgb(218,226,17)" fg:x="99068" fg:w="34"/><text x="87.4839%" y="655.50"></text></g><g><title>snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;::alloc_chunk&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, 4096ul, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (34 samples, 0.03%)</title><rect x="87.2339%" y="629" width="0.0299%" height="15" fill="rgb(248,89,38)" fg:x="99068" fg:w="34"/><text x="87.4839%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::Allocator (34 samples, 0.03%)</title><rect x="87.2339%" y="613" width="0.0299%" height="15" fill="rgb(237,73,46)" fg:x="99068" fg:w="34"/><text x="87.4839%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::init_message_queue (34 samples, 0.03%)</title><rect x="87.2339%" y="597" width="0.0299%" height="15" fill="rgb(242,78,33)" fg:x="99068" fg:w="34"/><text x="87.4839%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)1&gt; (34 samples, 0.03%)</title><rect x="87.2339%" y="581" width="0.0299%" height="15" fill="rgb(235,60,3)" fg:x="99068" fg:w="34"/><text x="87.4839%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)1&gt; (34 samples, 0.03%)</title><rect x="87.2339%" y="565" width="0.0299%" height="15" fill="rgb(216,172,19)" fg:x="99068" fg:w="34"/><text x="87.4839%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)1&gt; (34 samples, 0.03%)</title><rect x="87.2339%" y="549" width="0.0299%" height="15" fill="rgb(227,6,42)" fg:x="99068" fg:w="34"/><text x="87.4839%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)1&gt; (34 samples, 0.03%)</title><rect x="87.2339%" y="533" width="0.0299%" height="15" fill="rgb(223,207,42)" fg:x="99068" fg:w="34"/><text x="87.4839%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)1&gt; (34 samples, 0.03%)</title><rect x="87.2339%" y="517" width="0.0299%" height="15" fill="rgb(246,138,30)" fg:x="99068" fg:w="34"/><text x="87.4839%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)1&gt; (34 samples, 0.03%)</title><rect x="87.2339%" y="501" width="0.0299%" height="15" fill="rgb(251,199,47)" fg:x="99068" fg:w="34"/><text x="87.4839%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)1&gt; (12 samples, 0.01%)</title><rect x="87.2532%" y="485" width="0.0106%" height="15" fill="rgb(228,218,44)" fg:x="99090" fg:w="12"/><text x="87.5032%" y="495.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (12 samples, 0.01%)</title><rect x="87.2532%" y="469" width="0.0106%" height="15" fill="rgb(220,68,6)" fg:x="99090" fg:w="12"/><text x="87.5032%" y="479.50"></text></g><g><title>async_channel::bounded (36 samples, 0.03%)</title><rect x="87.2339%" y="901" width="0.0317%" height="15" fill="rgb(240,60,26)" fg:x="99068" fg:w="36"/><text x="87.4839%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (36 samples, 0.03%)</title><rect x="87.2339%" y="885" width="0.0317%" height="15" fill="rgb(211,200,19)" fg:x="99068" fg:w="36"/><text x="87.4839%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (36 samples, 0.03%)</title><rect x="87.2339%" y="869" width="0.0317%" height="15" fill="rgb(242,145,30)" fg:x="99068" fg:w="36"/><text x="87.4839%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.03%)</title><rect x="87.2339%" y="853" width="0.0317%" height="15" fill="rgb(225,64,13)" fg:x="99068" fg:w="36"/><text x="87.4839%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.03%)</title><rect x="87.2339%" y="837" width="0.0317%" height="15" fill="rgb(218,103,35)" fg:x="99068" fg:w="36"/><text x="87.4839%" y="847.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.03%)</title><rect x="87.2339%" y="821" width="0.0317%" height="15" fill="rgb(216,93,46)" fg:x="99068" fg:w="36"/><text x="87.4839%" y="831.50"></text></g><g><title>__rg_alloc (36 samples, 0.03%)</title><rect x="87.2339%" y="805" width="0.0317%" height="15" fill="rgb(225,159,27)" fg:x="99068" fg:w="36"/><text x="87.4839%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (36 samples, 0.03%)</title><rect x="87.2339%" y="789" width="0.0317%" height="15" fill="rgb(225,204,11)" fg:x="99068" fg:w="36"/><text x="87.4839%" y="799.50"></text></g><g><title>rust_alloc (36 samples, 0.03%)</title><rect x="87.2339%" y="773" width="0.0317%" height="15" fill="rgb(205,56,4)" fg:x="99068" fg:w="36"/><text x="87.4839%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="87.2339%" y="757" width="0.0317%" height="15" fill="rgb(206,6,35)" fg:x="99068" fg:w="36"/><text x="87.4839%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="87.2339%" y="741" width="0.0317%" height="15" fill="rgb(247,73,52)" fg:x="99068" fg:w="36"/><text x="87.4839%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="87.2339%" y="725" width="0.0317%" height="15" fill="rgb(246,97,4)" fg:x="99068" fg:w="36"/><text x="87.4839%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="87.2339%" y="709" width="0.0317%" height="15" fill="rgb(212,37,15)" fg:x="99068" fg:w="36"/><text x="87.4839%" y="719.50"></text></g><g><title>snmalloc::init_thread_allocator (36 samples, 0.03%)</title><rect x="87.2339%" y="693" width="0.0317%" height="15" fill="rgb(208,130,40)" fg:x="99068" fg:w="36"/><text x="87.4839%" y="703.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="87.3703%" y="549" width="0.0114%" height="15" fill="rgb(236,55,29)" fg:x="99223" fg:w="13"/><text x="87.6203%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.02%)</title><rect x="87.5174%" y="533" width="0.0176%" height="15" fill="rgb(209,156,45)" fg:x="99390" fg:w="20"/><text x="87.7674%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::nth (15 samples, 0.01%)</title><rect x="87.6213%" y="469" width="0.0132%" height="15" fill="rgb(249,107,4)" fg:x="99508" fg:w="15"/><text x="87.8713%" y="479.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.01%)</title><rect x="87.6504%" y="453" width="0.0150%" height="15" fill="rgb(227,7,13)" fg:x="99541" fg:w="17"/><text x="87.9004%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (44 samples, 0.04%)</title><rect x="87.6750%" y="437" width="0.0387%" height="15" fill="rgb(250,129,14)" fg:x="99569" fg:w="44"/><text x="87.9250%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (39 samples, 0.03%)</title><rect x="87.6794%" y="421" width="0.0343%" height="15" fill="rgb(229,92,13)" fg:x="99574" fg:w="39"/><text x="87.9294%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.01%)</title><rect x="87.6988%" y="405" width="0.0150%" height="15" fill="rgb(245,98,39)" fg:x="99596" fg:w="17"/><text x="87.9488%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="87.7138%" y="437" width="0.0167%" height="15" fill="rgb(234,135,48)" fg:x="99613" fg:w="19"/><text x="87.9638%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (56 samples, 0.05%)</title><rect x="87.7305%" y="437" width="0.0493%" height="15" fill="rgb(230,98,28)" fg:x="99632" fg:w="56"/><text x="87.9805%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (235 samples, 0.21%)</title><rect x="87.6345%" y="469" width="0.2069%" height="15" fill="rgb(223,121,0)" fg:x="99523" fg:w="235"/><text x="87.8845%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (200 samples, 0.18%)</title><rect x="87.6653%" y="453" width="0.1761%" height="15" fill="rgb(234,173,33)" fg:x="99558" fg:w="200"/><text x="87.9153%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (70 samples, 0.06%)</title><rect x="87.7798%" y="437" width="0.0616%" height="15" fill="rgb(245,47,8)" fg:x="99688" fg:w="70"/><text x="88.0298%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (70 samples, 0.06%)</title><rect x="87.7798%" y="421" width="0.0616%" height="15" fill="rgb(205,17,20)" fg:x="99688" fg:w="70"/><text x="88.0298%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (32 samples, 0.03%)</title><rect x="87.8133%" y="405" width="0.0282%" height="15" fill="rgb(232,151,16)" fg:x="99726" fg:w="32"/><text x="88.0633%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (32 samples, 0.03%)</title><rect x="87.8133%" y="389" width="0.0282%" height="15" fill="rgb(208,30,32)" fg:x="99726" fg:w="32"/><text x="88.0633%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (292 samples, 0.26%)</title><rect x="87.5861%" y="485" width="0.2571%" height="15" fill="rgb(254,26,3)" fg:x="99468" fg:w="292"/><text x="87.8361%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (362 samples, 0.32%)</title><rect x="87.5350%" y="533" width="0.3188%" height="15" fill="rgb(240,177,30)" fg:x="99410" fg:w="362"/><text x="87.7850%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (362 samples, 0.32%)</title><rect x="87.5350%" y="517" width="0.3188%" height="15" fill="rgb(248,76,44)" fg:x="99410" fg:w="362"/><text x="87.7850%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (362 samples, 0.32%)</title><rect x="87.5350%" y="501" width="0.3188%" height="15" fill="rgb(241,186,54)" fg:x="99410" fg:w="362"/><text x="87.7850%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (572 samples, 0.50%)</title><rect x="88.1100%" y="501" width="0.5037%" height="15" fill="rgb(249,171,29)" fg:x="100063" fg:w="572"/><text x="88.3600%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (366 samples, 0.32%)</title><rect x="88.2914%" y="485" width="0.3223%" height="15" fill="rgb(237,151,44)" fg:x="100269" fg:w="366"/><text x="88.5414%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (366 samples, 0.32%)</title><rect x="88.2914%" y="469" width="0.3223%" height="15" fill="rgb(228,174,30)" fg:x="100269" fg:w="366"/><text x="88.5414%" y="479.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (814 samples, 0.72%)</title><rect x="87.9057%" y="517" width="0.7168%" height="15" fill="rgb(252,14,37)" fg:x="99831" fg:w="814"/><text x="88.1557%" y="527.50"></text></g><g><title>async_executor::steal (873 samples, 0.77%)</title><rect x="87.8546%" y="533" width="0.7687%" height="15" fill="rgb(207,111,40)" fg:x="99773" fg:w="873"/><text x="88.1046%" y="543.50"></text></g><g><title>concurrent_queue::full_fence (1,062 samples, 0.94%)</title><rect x="89.1323%" y="501" width="0.9351%" height="15" fill="rgb(248,171,54)" fg:x="101224" fg:w="1062"/><text x="89.3823%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1,061 samples, 0.93%)</title><rect x="89.1332%" y="485" width="0.9343%" height="15" fill="rgb(211,127,2)" fg:x="101225" fg:w="1061"/><text x="89.3832%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,061 samples, 0.93%)</title><rect x="89.1332%" y="469" width="0.9343%" height="15" fill="rgb(236,87,47)" fg:x="101225" fg:w="1061"/><text x="89.3832%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,061 samples, 0.93%)</title><rect x="89.1332%" y="453" width="0.9343%" height="15" fill="rgb(223,190,45)" fg:x="101225" fg:w="1061"/><text x="89.3832%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,570 samples, 1.38%)</title><rect x="88.7801%" y="517" width="1.3825%" height="15" fill="rgb(215,5,16)" fg:x="100824" fg:w="1570"/><text x="89.0301%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (108 samples, 0.10%)</title><rect x="90.0674%" y="501" width="0.0951%" height="15" fill="rgb(252,82,33)" fg:x="102286" fg:w="108"/><text x="90.3174%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (75 samples, 0.07%)</title><rect x="90.0965%" y="485" width="0.0660%" height="15" fill="rgb(247,213,44)" fg:x="102319" fg:w="75"/><text x="90.3465%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (323 samples, 0.28%)</title><rect x="90.2119%" y="501" width="0.2844%" height="15" fill="rgb(205,196,44)" fg:x="102450" fg:w="323"/><text x="90.4619%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (322 samples, 0.28%)</title><rect x="90.2127%" y="485" width="0.2835%" height="15" fill="rgb(237,96,54)" fg:x="102451" fg:w="322"/><text x="90.4627%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (322 samples, 0.28%)</title><rect x="90.2127%" y="469" width="0.2835%" height="15" fill="rgb(230,113,34)" fg:x="102451" fg:w="322"/><text x="90.4627%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (322 samples, 0.28%)</title><rect x="90.2127%" y="453" width="0.2835%" height="15" fill="rgb(221,224,12)" fg:x="102451" fg:w="322"/><text x="90.4627%" y="463.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (28 samples, 0.02%)</title><rect x="90.5024%" y="501" width="0.0247%" height="15" fill="rgb(219,112,44)" fg:x="102780" fg:w="28"/><text x="90.7524%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (27 samples, 0.02%)</title><rect x="90.5033%" y="485" width="0.0238%" height="15" fill="rgb(210,31,13)" fg:x="102781" fg:w="27"/><text x="90.7533%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (27 samples, 0.02%)</title><rect x="90.5033%" y="469" width="0.0238%" height="15" fill="rgb(230,25,16)" fg:x="102781" fg:w="27"/><text x="90.7533%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (24 samples, 0.02%)</title><rect x="90.5333%" y="501" width="0.0211%" height="15" fill="rgb(246,108,53)" fg:x="102815" fg:w="24"/><text x="90.7833%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (24 samples, 0.02%)</title><rect x="90.5333%" y="485" width="0.0211%" height="15" fill="rgb(241,172,50)" fg:x="102815" fg:w="24"/><text x="90.7833%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (106 samples, 0.09%)</title><rect x="90.5544%" y="501" width="0.0933%" height="15" fill="rgb(235,141,10)" fg:x="102839" fg:w="106"/><text x="90.8044%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (106 samples, 0.09%)</title><rect x="90.5544%" y="485" width="0.0933%" height="15" fill="rgb(220,174,43)" fg:x="102839" fg:w="106"/><text x="90.8044%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (116 samples, 0.10%)</title><rect x="90.6477%" y="501" width="0.1021%" height="15" fill="rgb(215,181,40)" fg:x="102945" fg:w="116"/><text x="90.8977%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_or (116 samples, 0.10%)</title><rect x="90.6477%" y="485" width="0.1021%" height="15" fill="rgb(230,97,2)" fg:x="102945" fg:w="116"/><text x="90.8977%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,709 samples, 2.39%)</title><rect x="88.6234%" y="533" width="2.3854%" height="15" fill="rgb(211,25,27)" fg:x="100646" fg:w="2709"/><text x="88.8734%" y="543.50">co..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (961 samples, 0.85%)</title><rect x="90.1625%" y="517" width="0.8462%" height="15" fill="rgb(230,87,26)" fg:x="102394" fg:w="961"/><text x="90.4125%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (294 samples, 0.26%)</title><rect x="90.7499%" y="501" width="0.2589%" height="15" fill="rgb(227,160,17)" fg:x="103061" fg:w="294"/><text x="90.9999%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (294 samples, 0.26%)</title><rect x="90.7499%" y="485" width="0.2589%" height="15" fill="rgb(244,85,34)" fg:x="103061" fg:w="294"/><text x="90.9999%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (259 samples, 0.23%)</title><rect x="91.0369%" y="469" width="0.2281%" height="15" fill="rgb(207,70,0)" fg:x="103387" fg:w="259"/><text x="91.2869%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (259 samples, 0.23%)</title><rect x="91.0369%" y="453" width="0.2281%" height="15" fill="rgb(223,129,7)" fg:x="103387" fg:w="259"/><text x="91.2869%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (530 samples, 0.47%)</title><rect x="91.0088%" y="533" width="0.4667%" height="15" fill="rgb(246,105,7)" fg:x="103355" fg:w="530"/><text x="91.2588%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (530 samples, 0.47%)</title><rect x="91.0088%" y="517" width="0.4667%" height="15" fill="rgb(215,154,42)" fg:x="103355" fg:w="530"/><text x="91.2588%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (530 samples, 0.47%)</title><rect x="91.0088%" y="501" width="0.4667%" height="15" fill="rgb(220,215,30)" fg:x="103355" fg:w="530"/><text x="91.2588%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (506 samples, 0.45%)</title><rect x="91.0299%" y="485" width="0.4456%" height="15" fill="rgb(228,81,51)" fg:x="103379" fg:w="506"/><text x="91.2799%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (239 samples, 0.21%)</title><rect x="91.2650%" y="469" width="0.2105%" height="15" fill="rgb(247,71,54)" fg:x="103646" fg:w="239"/><text x="91.5150%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (239 samples, 0.21%)</title><rect x="91.2650%" y="453" width="0.2105%" height="15" fill="rgb(234,176,34)" fg:x="103646" fg:w="239"/><text x="91.5150%" y="463.50"></text></g><g><title>fastrand::RNG::__getit (12 samples, 0.01%)</title><rect x="91.4754%" y="485" width="0.0106%" height="15" fill="rgb(241,103,54)" fg:x="103885" fg:w="12"/><text x="91.7254%" y="495.50"></text></g><g><title>fastrand::Rng::usize (18 samples, 0.02%)</title><rect x="91.4860%" y="469" width="0.0158%" height="15" fill="rgb(228,22,34)" fg:x="103897" fg:w="18"/><text x="91.7360%" y="479.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (16 samples, 0.01%)</title><rect x="91.4878%" y="453" width="0.0141%" height="15" fill="rgb(241,179,48)" fg:x="103899" fg:w="16"/><text x="91.7378%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.03%)</title><rect x="91.4754%" y="501" width="0.0343%" height="15" fill="rgb(235,167,37)" fg:x="103885" fg:w="39"/><text x="91.7254%" y="511.50"></text></g><g><title>fastrand::usize::{{closure}} (27 samples, 0.02%)</title><rect x="91.4860%" y="485" width="0.0238%" height="15" fill="rgb(213,109,30)" fg:x="103897" fg:w="27"/><text x="91.7360%" y="495.50"></text></g><g><title>fastrand::usize (44 samples, 0.04%)</title><rect x="91.4754%" y="533" width="0.0387%" height="15" fill="rgb(222,172,16)" fg:x="103885" fg:w="44"/><text x="91.7254%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (44 samples, 0.04%)</title><rect x="91.4754%" y="517" width="0.0387%" height="15" fill="rgb(233,192,5)" fg:x="103885" fg:w="44"/><text x="91.7254%" y="527.50"></text></g><g><title>___pthread_rwlock_rdlock (280 samples, 0.25%)</title><rect x="91.5388%" y="485" width="0.2466%" height="15" fill="rgb(247,189,41)" fg:x="103957" fg:w="280"/><text x="91.7888%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (5,144 samples, 4.53%)</title><rect x="87.3818%" y="549" width="4.5295%" height="15" fill="rgb(218,134,47)" fg:x="99236" fg:w="5144"/><text x="87.6318%" y="559.50">async..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (451 samples, 0.40%)</title><rect x="91.5142%" y="533" width="0.3971%" height="15" fill="rgb(216,29,3)" fg:x="103929" fg:w="451"/><text x="91.7642%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (445 samples, 0.39%)</title><rect x="91.5195%" y="517" width="0.3918%" height="15" fill="rgb(246,140,12)" fg:x="103935" fg:w="445"/><text x="91.7695%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (438 samples, 0.39%)</title><rect x="91.5256%" y="501" width="0.3857%" height="15" fill="rgb(230,136,11)" fg:x="103942" fg:w="438"/><text x="91.7756%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (143 samples, 0.13%)</title><rect x="91.7854%" y="485" width="0.1259%" height="15" fill="rgb(247,22,47)" fg:x="104237" fg:w="143"/><text x="92.0354%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (143 samples, 0.13%)</title><rect x="91.7854%" y="469" width="0.1259%" height="15" fill="rgb(218,84,22)" fg:x="104237" fg:w="143"/><text x="92.0354%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (47 samples, 0.04%)</title><rect x="91.9228%" y="469" width="0.0414%" height="15" fill="rgb(216,87,39)" fg:x="104393" fg:w="47"/><text x="92.1728%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (52 samples, 0.05%)</title><rect x="91.9201%" y="533" width="0.0458%" height="15" fill="rgb(221,178,8)" fg:x="104390" fg:w="52"/><text x="92.1701%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.05%)</title><rect x="91.9201%" y="517" width="0.0458%" height="15" fill="rgb(230,42,11)" fg:x="104390" fg:w="52"/><text x="92.1701%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (49 samples, 0.04%)</title><rect x="91.9228%" y="501" width="0.0431%" height="15" fill="rgb(237,229,4)" fg:x="104393" fg:w="49"/><text x="92.1728%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (49 samples, 0.04%)</title><rect x="91.9228%" y="485" width="0.0431%" height="15" fill="rgb(222,31,33)" fg:x="104393" fg:w="49"/><text x="92.1728%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (65 samples, 0.06%)</title><rect x="91.9659%" y="533" width="0.0572%" height="15" fill="rgb(210,17,39)" fg:x="104442" fg:w="65"/><text x="92.2159%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (65 samples, 0.06%)</title><rect x="91.9659%" y="517" width="0.0572%" height="15" fill="rgb(244,93,20)" fg:x="104442" fg:w="65"/><text x="92.2159%" y="527.50"></text></g><g><title>async_executor::State::notify (188 samples, 0.17%)</title><rect x="91.9113%" y="549" width="0.1655%" height="15" fill="rgb(210,40,47)" fg:x="104380" fg:w="188"/><text x="92.1613%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (61 samples, 0.05%)</title><rect x="92.0231%" y="533" width="0.0537%" height="15" fill="rgb(239,211,47)" fg:x="104507" fg:w="61"/><text x="92.2731%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (60 samples, 0.05%)</title><rect x="92.0240%" y="517" width="0.0528%" height="15" fill="rgb(251,223,49)" fg:x="104508" fg:w="60"/><text x="92.2740%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (59 samples, 0.05%)</title><rect x="92.0249%" y="501" width="0.0520%" height="15" fill="rgb(221,149,5)" fg:x="104509" fg:w="59"/><text x="92.2749%" y="511.50"></text></g><g><title>___pthread_mutex_lock (59 samples, 0.05%)</title><rect x="92.0249%" y="485" width="0.0520%" height="15" fill="rgb(219,224,51)" fg:x="104509" fg:w="59"/><text x="92.2749%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (156 samples, 0.14%)</title><rect x="92.0997%" y="517" width="0.1374%" height="15" fill="rgb(223,7,8)" fg:x="104594" fg:w="156"/><text x="92.3497%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (153 samples, 0.13%)</title><rect x="92.1024%" y="501" width="0.1347%" height="15" fill="rgb(241,217,22)" fg:x="104597" fg:w="153"/><text x="92.3524%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (149 samples, 0.13%)</title><rect x="92.1059%" y="485" width="0.1312%" height="15" fill="rgb(248,209,0)" fg:x="104601" fg:w="149"/><text x="92.3559%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (149 samples, 0.13%)</title><rect x="92.1059%" y="469" width="0.1312%" height="15" fill="rgb(217,205,4)" fg:x="104601" fg:w="149"/><text x="92.3559%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (149 samples, 0.13%)</title><rect x="92.1059%" y="453" width="0.1312%" height="15" fill="rgb(228,124,39)" fg:x="104601" fg:w="149"/><text x="92.3559%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (149 samples, 0.13%)</title><rect x="92.1059%" y="437" width="0.1312%" height="15" fill="rgb(250,116,42)" fg:x="104601" fg:w="149"/><text x="92.3559%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (34 samples, 0.03%)</title><rect x="92.2371%" y="517" width="0.0299%" height="15" fill="rgb(223,202,9)" fg:x="104750" fg:w="34"/><text x="92.4871%" y="527.50"></text></g><g><title>async_executor::Sleepers::insert (200 samples, 0.18%)</title><rect x="92.0971%" y="533" width="0.1761%" height="15" fill="rgb(242,222,40)" fg:x="104591" fg:w="200"/><text x="92.3471%" y="543.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="92.3190%" y="517" width="0.0114%" height="15" fill="rgb(229,99,46)" fg:x="104843" fg:w="13"/><text x="92.5690%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (64 samples, 0.06%)</title><rect x="92.3305%" y="517" width="0.0564%" height="15" fill="rgb(225,56,46)" fg:x="104856" fg:w="64"/><text x="92.5805%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (62 samples, 0.05%)</title><rect x="92.3322%" y="501" width="0.0546%" height="15" fill="rgb(227,94,5)" fg:x="104858" fg:w="62"/><text x="92.5822%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (58 samples, 0.05%)</title><rect x="92.3357%" y="485" width="0.0511%" height="15" fill="rgb(205,112,38)" fg:x="104862" fg:w="58"/><text x="92.5857%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (58 samples, 0.05%)</title><rect x="92.3357%" y="469" width="0.0511%" height="15" fill="rgb(231,133,46)" fg:x="104862" fg:w="58"/><text x="92.5857%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (57 samples, 0.05%)</title><rect x="92.3366%" y="453" width="0.0502%" height="15" fill="rgb(217,16,9)" fg:x="104863" fg:w="57"/><text x="92.5866%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (57 samples, 0.05%)</title><rect x="92.3366%" y="437" width="0.0502%" height="15" fill="rgb(249,173,9)" fg:x="104863" fg:w="57"/><text x="92.5866%" y="447.50"></text></g><g><title>async_executor::Sleepers::update (138 samples, 0.12%)</title><rect x="92.2794%" y="533" width="0.1215%" height="15" fill="rgb(205,163,53)" fg:x="104798" fg:w="138"/><text x="92.5294%" y="543.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (275 samples, 0.24%)</title><rect x="92.4123%" y="469" width="0.2421%" height="15" fill="rgb(217,54,41)" fg:x="104949" fg:w="275"/><text x="92.6623%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (297 samples, 0.26%)</title><rect x="92.4009%" y="533" width="0.2615%" height="15" fill="rgb(228,216,12)" fg:x="104936" fg:w="297"/><text x="92.6509%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (297 samples, 0.26%)</title><rect x="92.4009%" y="517" width="0.2615%" height="15" fill="rgb(244,228,15)" fg:x="104936" fg:w="297"/><text x="92.6509%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (290 samples, 0.26%)</title><rect x="92.4071%" y="501" width="0.2554%" height="15" fill="rgb(221,176,53)" fg:x="104943" fg:w="290"/><text x="92.6571%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (284 samples, 0.25%)</title><rect x="92.4123%" y="485" width="0.2501%" height="15" fill="rgb(205,94,34)" fg:x="104949" fg:w="284"/><text x="92.6623%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (175 samples, 0.15%)</title><rect x="92.6624%" y="533" width="0.1541%" height="15" fill="rgb(213,110,48)" fg:x="105233" fg:w="175"/><text x="92.9124%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (175 samples, 0.15%)</title><rect x="92.6624%" y="517" width="0.1541%" height="15" fill="rgb(236,142,28)" fg:x="105233" fg:w="175"/><text x="92.9124%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (107 samples, 0.09%)</title><rect x="92.8165%" y="533" width="0.0942%" height="15" fill="rgb(225,135,29)" fg:x="105408" fg:w="107"/><text x="93.0665%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_store (107 samples, 0.09%)</title><rect x="92.8165%" y="517" width="0.0942%" height="15" fill="rgb(252,45,31)" fg:x="105408" fg:w="107"/><text x="93.0665%" y="527.50"></text></g><g><title>std::sync::poison::Flag::get (15 samples, 0.01%)</title><rect x="92.9107%" y="485" width="0.0132%" height="15" fill="rgb(211,187,50)" fg:x="105515" fg:w="15"/><text x="93.1607%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (15 samples, 0.01%)</title><rect x="92.9107%" y="469" width="0.0132%" height="15" fill="rgb(229,109,7)" fg:x="105515" fg:w="15"/><text x="93.1607%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="92.9107%" y="453" width="0.0132%" height="15" fill="rgb(251,131,51)" fg:x="105515" fg:w="15"/><text x="93.1607%" y="463.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="92.9107%" y="517" width="0.0194%" height="15" fill="rgb(251,180,35)" fg:x="105515" fg:w="22"/><text x="93.1607%" y="527.50"></text></g><g><title>std::sync::poison::Flag::borrow (22 samples, 0.02%)</title><rect x="92.9107%" y="501" width="0.0194%" height="15" fill="rgb(211,46,32)" fg:x="105515" fg:w="22"/><text x="93.1607%" y="511.50"></text></g><g><title>async_executor::Ticker::sleep (1,476 samples, 1.30%)</title><rect x="92.0769%" y="549" width="1.2997%" height="15" fill="rgb(248,123,17)" fg:x="104568" fg:w="1476"/><text x="92.3269%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (529 samples, 0.47%)</title><rect x="92.9107%" y="533" width="0.4658%" height="15" fill="rgb(227,141,18)" fg:x="105515" fg:w="529"/><text x="93.1607%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (507 samples, 0.45%)</title><rect x="92.9301%" y="517" width="0.4464%" height="15" fill="rgb(216,102,9)" fg:x="105537" fg:w="507"/><text x="93.1801%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (491 samples, 0.43%)</title><rect x="92.9442%" y="501" width="0.4323%" height="15" fill="rgb(253,47,13)" fg:x="105553" fg:w="491"/><text x="93.1942%" y="511.50"></text></g><g><title>___pthread_mutex_lock (491 samples, 0.43%)</title><rect x="92.9442%" y="485" width="0.4323%" height="15" fill="rgb(226,93,23)" fg:x="105553" fg:w="491"/><text x="93.1942%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (65 samples, 0.06%)</title><rect x="93.3193%" y="469" width="0.0572%" height="15" fill="rgb(247,104,17)" fg:x="105979" fg:w="65"/><text x="93.5693%" y="479.50"></text></g><g><title>async_executor::Sleepers::remove (109 samples, 0.10%)</title><rect x="93.3836%" y="533" width="0.0960%" height="15" fill="rgb(233,203,26)" fg:x="106052" fg:w="109"/><text x="93.6336%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (70 samples, 0.06%)</title><rect x="93.4179%" y="517" width="0.0616%" height="15" fill="rgb(244,98,49)" fg:x="106091" fg:w="70"/><text x="93.6679%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (70 samples, 0.06%)</title><rect x="93.4179%" y="501" width="0.0616%" height="15" fill="rgb(235,134,22)" fg:x="106091" fg:w="70"/><text x="93.6679%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (70 samples, 0.06%)</title><rect x="93.4179%" y="485" width="0.0616%" height="15" fill="rgb(221,70,32)" fg:x="106091" fg:w="70"/><text x="93.6679%" y="495.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (70 samples, 0.06%)</title><rect x="93.4179%" y="469" width="0.0616%" height="15" fill="rgb(238,15,50)" fg:x="106091" fg:w="70"/><text x="93.6679%" y="479.50"></text></g><g><title>core::mem::drop (69 samples, 0.06%)</title><rect x="93.4188%" y="453" width="0.0608%" height="15" fill="rgb(215,221,48)" fg:x="106092" fg:w="69"/><text x="93.6688%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (69 samples, 0.06%)</title><rect x="93.4188%" y="437" width="0.0608%" height="15" fill="rgb(236,73,3)" fg:x="106092" fg:w="69"/><text x="93.6688%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.06%)</title><rect x="93.4188%" y="421" width="0.0608%" height="15" fill="rgb(250,107,11)" fg:x="106092" fg:w="69"/><text x="93.6688%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (69 samples, 0.06%)</title><rect x="93.4188%" y="405" width="0.0608%" height="15" fill="rgb(242,39,14)" fg:x="106092" fg:w="69"/><text x="93.6688%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (69 samples, 0.06%)</title><rect x="93.4188%" y="389" width="0.0608%" height="15" fill="rgb(248,164,37)" fg:x="106092" fg:w="69"/><text x="93.6688%" y="399.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (59 samples, 0.05%)</title><rect x="93.4848%" y="469" width="0.0520%" height="15" fill="rgb(217,60,12)" fg:x="106167" fg:w="59"/><text x="93.7348%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (67 samples, 0.06%)</title><rect x="93.4796%" y="533" width="0.0590%" height="15" fill="rgb(240,125,29)" fg:x="106161" fg:w="67"/><text x="93.7296%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.06%)</title><rect x="93.4796%" y="517" width="0.0590%" height="15" fill="rgb(208,207,28)" fg:x="106161" fg:w="67"/><text x="93.7296%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (62 samples, 0.05%)</title><rect x="93.4840%" y="501" width="0.0546%" height="15" fill="rgb(209,159,27)" fg:x="106166" fg:w="62"/><text x="93.7340%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (61 samples, 0.05%)</title><rect x="93.4848%" y="485" width="0.0537%" height="15" fill="rgb(251,176,53)" fg:x="106167" fg:w="61"/><text x="93.7348%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (74 samples, 0.07%)</title><rect x="93.5386%" y="533" width="0.0652%" height="15" fill="rgb(211,85,7)" fg:x="106228" fg:w="74"/><text x="93.7886%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (74 samples, 0.07%)</title><rect x="93.5386%" y="517" width="0.0652%" height="15" fill="rgb(216,64,54)" fg:x="106228" fg:w="74"/><text x="93.7886%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (74 samples, 0.07%)</title><rect x="93.6037%" y="533" width="0.0652%" height="15" fill="rgb(217,54,24)" fg:x="106302" fg:w="74"/><text x="93.8537%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (74 samples, 0.07%)</title><rect x="93.6037%" y="517" width="0.0652%" height="15" fill="rgb(208,206,53)" fg:x="106302" fg:w="74"/><text x="93.8537%" y="527.50"></text></g><g><title>async_executor::Ticker::wake (568 samples, 0.50%)</title><rect x="93.3765%" y="549" width="0.5001%" height="15" fill="rgb(251,74,39)" fg:x="106044" fg:w="568"/><text x="93.6265%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (236 samples, 0.21%)</title><rect x="93.6689%" y="533" width="0.2078%" height="15" fill="rgb(226,47,5)" fg:x="106376" fg:w="236"/><text x="93.9189%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (228 samples, 0.20%)</title><rect x="93.6759%" y="517" width="0.2008%" height="15" fill="rgb(234,111,33)" fg:x="106384" fg:w="228"/><text x="93.9259%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (205 samples, 0.18%)</title><rect x="93.6962%" y="501" width="0.1805%" height="15" fill="rgb(251,14,10)" fg:x="106407" fg:w="205"/><text x="93.9462%" y="511.50"></text></g><g><title>___pthread_mutex_lock (205 samples, 0.18%)</title><rect x="93.6962%" y="485" width="0.1805%" height="15" fill="rgb(232,43,0)" fg:x="106407" fg:w="205"/><text x="93.9462%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (29 samples, 0.03%)</title><rect x="93.8512%" y="469" width="0.0255%" height="15" fill="rgb(222,68,43)" fg:x="106583" fg:w="29"/><text x="94.1012%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (13 samples, 0.01%)</title><rect x="93.8855%" y="485" width="0.0114%" height="15" fill="rgb(217,24,23)" fg:x="106622" fg:w="13"/><text x="94.1355%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.01%)</title><rect x="93.8855%" y="469" width="0.0114%" height="15" fill="rgb(229,209,14)" fg:x="106622" fg:w="13"/><text x="94.1355%" y="479.50"></text></g><g><title>__GI___write (13 samples, 0.01%)</title><rect x="93.8978%" y="469" width="0.0114%" height="15" fill="rgb(250,149,48)" fg:x="106636" fg:w="13"/><text x="94.1478%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::notify (28 samples, 0.02%)</title><rect x="93.8855%" y="517" width="0.0247%" height="15" fill="rgb(210,120,37)" fg:x="106622" fg:w="28"/><text x="94.1355%" y="527.50"></text></g><g><title>polling::Poller::notify (28 samples, 0.02%)</title><rect x="93.8855%" y="501" width="0.0247%" height="15" fill="rgb(210,21,8)" fg:x="106622" fg:w="28"/><text x="94.1355%" y="511.50"></text></g><g><title>polling::epoll::Poller::notify (15 samples, 0.01%)</title><rect x="93.8969%" y="485" width="0.0132%" height="15" fill="rgb(243,145,7)" fg:x="106635" fg:w="15"/><text x="94.1469%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (78 samples, 0.07%)</title><rect x="93.9418%" y="485" width="0.0687%" height="15" fill="rgb(238,178,32)" fg:x="106686" fg:w="78"/><text x="94.1918%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (78 samples, 0.07%)</title><rect x="93.9418%" y="469" width="0.0687%" height="15" fill="rgb(222,4,10)" fg:x="106686" fg:w="78"/><text x="94.1918%" y="479.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (119 samples, 0.10%)</title><rect x="94.0105%" y="485" width="0.1048%" height="15" fill="rgb(239,7,37)" fg:x="106764" fg:w="119"/><text x="94.2605%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (119 samples, 0.10%)</title><rect x="94.0105%" y="469" width="0.1048%" height="15" fill="rgb(215,31,37)" fg:x="106764" fg:w="119"/><text x="94.2605%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (119 samples, 0.10%)</title><rect x="94.0105%" y="453" width="0.1048%" height="15" fill="rgb(224,83,33)" fg:x="106764" fg:w="119"/><text x="94.2605%" y="463.50"></text></g><g><title>__GI___pthread_cond_signal (119 samples, 0.10%)</title><rect x="94.0105%" y="437" width="0.1048%" height="15" fill="rgb(239,55,3)" fg:x="106764" fg:w="119"/><text x="94.2605%" y="447.50"></text></g><g><title>parking::Unparker::unpark (320 samples, 0.28%)</title><rect x="93.9172%" y="517" width="0.2818%" height="15" fill="rgb(247,92,11)" fg:x="106658" fg:w="320"/><text x="94.1672%" y="527.50"></text></g><g><title>parking::Inner::unpark (301 samples, 0.27%)</title><rect x="93.9339%" y="501" width="0.2650%" height="15" fill="rgb(239,200,7)" fg:x="106677" fg:w="301"/><text x="94.1839%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (95 samples, 0.08%)</title><rect x="94.1153%" y="485" width="0.0837%" height="15" fill="rgb(227,115,8)" fg:x="106883" fg:w="95"/><text x="94.3653%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (95 samples, 0.08%)</title><rect x="94.1153%" y="469" width="0.0837%" height="15" fill="rgb(215,189,27)" fg:x="106883" fg:w="95"/><text x="94.3653%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (92 samples, 0.08%)</title><rect x="94.1180%" y="453" width="0.0810%" height="15" fill="rgb(251,216,39)" fg:x="106886" fg:w="92"/><text x="94.3680%" y="463.50"></text></g><g><title>___pthread_mutex_lock (92 samples, 0.08%)</title><rect x="94.1180%" y="437" width="0.0810%" height="15" fill="rgb(207,29,47)" fg:x="106886" fg:w="92"/><text x="94.3680%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (372 samples, 0.33%)</title><rect x="93.8811%" y="533" width="0.3276%" height="15" fill="rgb(210,71,34)" fg:x="106617" fg:w="372"/><text x="94.1311%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (98 samples, 0.09%)</title><rect x="94.2087%" y="533" width="0.0863%" height="15" fill="rgb(253,217,51)" fg:x="106989" fg:w="98"/><text x="94.4587%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 0.09%)</title><rect x="94.2087%" y="517" width="0.0863%" height="15" fill="rgb(222,117,46)" fg:x="106989" fg:w="98"/><text x="94.4587%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (92 samples, 0.08%)</title><rect x="94.2139%" y="501" width="0.0810%" height="15" fill="rgb(226,132,6)" fg:x="106995" fg:w="92"/><text x="94.4639%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (92 samples, 0.08%)</title><rect x="94.2139%" y="485" width="0.0810%" height="15" fill="rgb(254,145,51)" fg:x="106995" fg:w="92"/><text x="94.4639%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,908 samples, 6.96%)</title><rect x="87.3325%" y="613" width="6.9634%" height="15" fill="rgb(231,199,27)" fg:x="99180" fg:w="7908"/><text x="87.5825%" y="623.50">&lt;core::fu..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (7,905 samples, 6.96%)</title><rect x="87.3351%" y="597" width="6.9607%" height="15" fill="rgb(245,158,14)" fg:x="99183" fg:w="7905"/><text x="87.5851%" y="607.50">async_exe..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (7,890 samples, 6.95%)</title><rect x="87.3483%" y="581" width="6.9475%" height="15" fill="rgb(240,113,14)" fg:x="99198" fg:w="7890"/><text x="87.5983%" y="591.50">&lt;futures_..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (7,876 samples, 6.94%)</title><rect x="87.3607%" y="565" width="6.9352%" height="15" fill="rgb(210,20,13)" fg:x="99212" fg:w="7876"/><text x="87.6107%" y="575.50">async_exe..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (471 samples, 0.41%)</title><rect x="93.8811%" y="549" width="0.4147%" height="15" fill="rgb(241,144,13)" fg:x="106617" fg:w="471"/><text x="94.1311%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,978 samples, 7.02%)</title><rect x="87.3105%" y="645" width="7.0250%" height="15" fill="rgb(235,43,34)" fg:x="99155" fg:w="7978"/><text x="87.5605%" y="655.50">&lt;core::fu..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (7,975 samples, 7.02%)</title><rect x="87.3131%" y="629" width="7.0223%" height="15" fill="rgb(208,36,20)" fg:x="99158" fg:w="7975"/><text x="87.5631%" y="639.50">async_exe..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (41 samples, 0.04%)</title><rect x="94.2994%" y="613" width="0.0361%" height="15" fill="rgb(239,204,10)" fg:x="107092" fg:w="41"/><text x="94.5494%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (41 samples, 0.04%)</title><rect x="94.2994%" y="597" width="0.0361%" height="15" fill="rgb(217,84,43)" fg:x="107092" fg:w="41"/><text x="94.5494%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (62 samples, 0.05%)</title><rect x="94.4482%" y="517" width="0.0546%" height="15" fill="rgb(241,170,50)" fg:x="107261" fg:w="62"/><text x="94.6982%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (56 samples, 0.05%)</title><rect x="94.4534%" y="501" width="0.0493%" height="15" fill="rgb(226,205,29)" fg:x="107267" fg:w="56"/><text x="94.7034%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (40 samples, 0.04%)</title><rect x="94.5036%" y="501" width="0.0352%" height="15" fill="rgb(233,113,1)" fg:x="107324" fg:w="40"/><text x="94.7536%" y="511.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (13 samples, 0.01%)</title><rect x="94.5459%" y="485" width="0.0114%" height="15" fill="rgb(253,98,13)" fg:x="107372" fg:w="13"/><text x="94.7959%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (196 samples, 0.17%)</title><rect x="94.3900%" y="597" width="0.1726%" height="15" fill="rgb(211,115,12)" fg:x="107195" fg:w="196"/><text x="94.6400%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (186 samples, 0.16%)</title><rect x="94.3989%" y="581" width="0.1638%" height="15" fill="rgb(208,12,16)" fg:x="107205" fg:w="186"/><text x="94.6489%" y="591.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (136 samples, 0.12%)</title><rect x="94.4429%" y="565" width="0.1198%" height="15" fill="rgb(237,193,54)" fg:x="107255" fg:w="136"/><text x="94.6929%" y="575.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (136 samples, 0.12%)</title><rect x="94.4429%" y="549" width="0.1198%" height="15" fill="rgb(243,22,42)" fg:x="107255" fg:w="136"/><text x="94.6929%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (133 samples, 0.12%)</title><rect x="94.4455%" y="533" width="0.1171%" height="15" fill="rgb(233,151,36)" fg:x="107258" fg:w="133"/><text x="94.6955%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (68 samples, 0.06%)</title><rect x="94.5028%" y="517" width="0.0599%" height="15" fill="rgb(237,57,45)" fg:x="107323" fg:w="68"/><text x="94.7528%" y="527.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (19 samples, 0.02%)</title><rect x="94.5459%" y="501" width="0.0167%" height="15" fill="rgb(221,88,17)" fg:x="107372" fg:w="19"/><text x="94.7959%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (200 samples, 0.18%)</title><rect x="94.3900%" y="613" width="0.1761%" height="15" fill="rgb(230,79,15)" fg:x="107195" fg:w="200"/><text x="94.6400%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (40 samples, 0.04%)</title><rect x="94.5662%" y="613" width="0.0352%" height="15" fill="rgb(213,57,13)" fg:x="107395" fg:w="40"/><text x="94.8162%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (40 samples, 0.04%)</title><rect x="94.5662%" y="597" width="0.0352%" height="15" fill="rgb(222,116,39)" fg:x="107395" fg:w="40"/><text x="94.8162%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (40 samples, 0.04%)</title><rect x="94.5662%" y="581" width="0.0352%" height="15" fill="rgb(245,107,2)" fg:x="107395" fg:w="40"/><text x="94.8162%" y="591.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (16 samples, 0.01%)</title><rect x="94.6014%" y="597" width="0.0141%" height="15" fill="rgb(238,1,10)" fg:x="107435" fg:w="16"/><text x="94.8514%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (12 samples, 0.01%)</title><rect x="94.6049%" y="581" width="0.0106%" height="15" fill="rgb(249,4,48)" fg:x="107439" fg:w="12"/><text x="94.8549%" y="591.50"></text></g><g><title>parking::Unparker::unpark (15 samples, 0.01%)</title><rect x="94.6172%" y="565" width="0.0132%" height="15" fill="rgb(223,151,18)" fg:x="107453" fg:w="15"/><text x="94.8672%" y="575.50"></text></g><g><title>parking::Inner::unpark (14 samples, 0.01%)</title><rect x="94.6181%" y="549" width="0.0123%" height="15" fill="rgb(227,65,43)" fg:x="107454" fg:w="14"/><text x="94.8681%" y="559.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (20 samples, 0.02%)</title><rect x="94.6155%" y="581" width="0.0176%" height="15" fill="rgb(218,40,45)" fg:x="107451" fg:w="20"/><text x="94.8655%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (37 samples, 0.03%)</title><rect x="94.6014%" y="613" width="0.0326%" height="15" fill="rgb(252,121,31)" fg:x="107435" fg:w="37"/><text x="94.8514%" y="623.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (21 samples, 0.02%)</title><rect x="94.6155%" y="597" width="0.0185%" height="15" fill="rgb(219,158,43)" fg:x="107451" fg:w="21"/><text x="94.8655%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (185 samples, 0.16%)</title><rect x="94.6348%" y="613" width="0.1629%" height="15" fill="rgb(231,162,42)" fg:x="107473" fg:w="185"/><text x="94.8848%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (185 samples, 0.16%)</title><rect x="94.6348%" y="597" width="0.1629%" height="15" fill="rgb(217,179,25)" fg:x="107473" fg:w="185"/><text x="94.8848%" y="607.50"></text></g><g><title>async_task::runnable::Runnable::run (526 samples, 0.46%)</title><rect x="94.3355%" y="645" width="0.4632%" height="15" fill="rgb(206,212,31)" fg:x="107133" fg:w="526"/><text x="94.5855%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (509 samples, 0.45%)</title><rect x="94.3504%" y="629" width="0.4482%" height="15" fill="rgb(235,144,12)" fg:x="107150" fg:w="509"/><text x="94.6004%" y="639.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,532 samples, 7.51%)</title><rect x="87.2999%" y="693" width="7.5128%" height="15" fill="rgb(213,51,10)" fg:x="99143" fg:w="8532"/><text x="87.5499%" y="703.50">&lt;futures_l..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,531 samples, 7.51%)</title><rect x="87.3008%" y="677" width="7.5119%" height="15" fill="rgb(231,145,14)" fg:x="99144" fg:w="8531"/><text x="87.5508%" y="687.50">&lt;core::fut..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8,531 samples, 7.51%)</title><rect x="87.3008%" y="661" width="7.5119%" height="15" fill="rgb(235,15,28)" fg:x="99144" fg:w="8531"/><text x="87.5508%" y="671.50">async_exec..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (16 samples, 0.01%)</title><rect x="94.7986%" y="645" width="0.0141%" height="15" fill="rgb(237,206,10)" fg:x="107659" fg:w="16"/><text x="95.0486%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (16 samples, 0.01%)</title><rect x="94.7986%" y="629" width="0.0141%" height="15" fill="rgb(236,227,27)" fg:x="107659" fg:w="16"/><text x="95.0486%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (8,546 samples, 7.53%)</title><rect x="87.2981%" y="709" width="7.5251%" height="15" fill="rgb(246,83,35)" fg:x="99141" fg:w="8546"/><text x="87.5481%" y="719.50">async_exec..</text></g><g><title>async_executor::Runner::new (12 samples, 0.01%)</title><rect x="94.8127%" y="693" width="0.0106%" height="15" fill="rgb(220,136,24)" fg:x="107675" fg:w="12"/><text x="95.0627%" y="703.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (12 samples, 0.01%)</title><rect x="94.8127%" y="677" width="0.0106%" height="15" fill="rgb(217,3,25)" fg:x="107675" fg:w="12"/><text x="95.0627%" y="687.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="94.8127%" y="661" width="0.0106%" height="15" fill="rgb(239,24,14)" fg:x="107675" fg:w="12"/><text x="95.0627%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="94.9052%" y="501" width="0.0141%" height="15" fill="rgb(244,16,53)" fg:x="107780" fg:w="16"/><text x="95.1552%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (16 samples, 0.01%)</title><rect x="94.9052%" y="485" width="0.0141%" height="15" fill="rgb(208,175,44)" fg:x="107780" fg:w="16"/><text x="95.1552%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.01%)</title><rect x="94.9052%" y="469" width="0.0141%" height="15" fill="rgb(252,18,48)" fg:x="107780" fg:w="16"/><text x="95.1552%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.01%)</title><rect x="94.9052%" y="453" width="0.0141%" height="15" fill="rgb(234,199,32)" fg:x="107780" fg:w="16"/><text x="95.1552%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.01%)</title><rect x="94.9052%" y="437" width="0.0141%" height="15" fill="rgb(225,77,54)" fg:x="107780" fg:w="16"/><text x="95.1552%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.01%)</title><rect x="94.9078%" y="421" width="0.0114%" height="15" fill="rgb(225,42,25)" fg:x="107783" fg:w="13"/><text x="95.1578%" y="431.50"></text></g><g><title>concurrent_queue::full_fence (41 samples, 0.04%)</title><rect x="94.9756%" y="469" width="0.0361%" height="15" fill="rgb(242,227,46)" fg:x="107860" fg:w="41"/><text x="95.2256%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (41 samples, 0.04%)</title><rect x="94.9756%" y="453" width="0.0361%" height="15" fill="rgb(246,197,35)" fg:x="107860" fg:w="41"/><text x="95.2256%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (41 samples, 0.04%)</title><rect x="94.9756%" y="437" width="0.0361%" height="15" fill="rgb(215,159,26)" fg:x="107860" fg:w="41"/><text x="95.2256%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (41 samples, 0.04%)</title><rect x="94.9756%" y="421" width="0.0361%" height="15" fill="rgb(212,194,50)" fg:x="107860" fg:w="41"/><text x="95.2256%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (165 samples, 0.15%)</title><rect x="94.9554%" y="485" width="0.1453%" height="15" fill="rgb(246,132,1)" fg:x="107837" fg:w="165"/><text x="95.2054%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (101 samples, 0.09%)</title><rect x="95.0117%" y="469" width="0.0889%" height="15" fill="rgb(217,71,7)" fg:x="107901" fg:w="101"/><text x="95.2617%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (101 samples, 0.09%)</title><rect x="95.0117%" y="453" width="0.0889%" height="15" fill="rgb(252,59,32)" fg:x="107901" fg:w="101"/><text x="95.2617%" y="463.50"></text></g><g><title>concurrent_queue::full_fence (57 samples, 0.05%)</title><rect x="95.1103%" y="469" width="0.0502%" height="15" fill="rgb(253,204,25)" fg:x="108013" fg:w="57"/><text x="95.3603%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (54 samples, 0.05%)</title><rect x="95.1130%" y="453" width="0.0475%" height="15" fill="rgb(232,21,16)" fg:x="108016" fg:w="54"/><text x="95.3630%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (54 samples, 0.05%)</title><rect x="95.1130%" y="437" width="0.0475%" height="15" fill="rgb(248,90,29)" fg:x="108016" fg:w="54"/><text x="95.3630%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (54 samples, 0.05%)</title><rect x="95.1130%" y="421" width="0.0475%" height="15" fill="rgb(249,223,7)" fg:x="108016" fg:w="54"/><text x="95.3630%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (291 samples, 0.26%)</title><rect x="94.9193%" y="501" width="0.2562%" height="15" fill="rgb(231,119,42)" fg:x="107796" fg:w="291"/><text x="95.1693%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (85 samples, 0.07%)</title><rect x="95.1006%" y="485" width="0.0748%" height="15" fill="rgb(215,41,35)" fg:x="108002" fg:w="85"/><text x="95.3506%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="95.1640%" y="469" width="0.0114%" height="15" fill="rgb(220,44,45)" fg:x="108074" fg:w="13"/><text x="95.4140%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="95.1640%" y="453" width="0.0114%" height="15" fill="rgb(253,197,36)" fg:x="108074" fg:w="13"/><text x="95.4140%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (34 samples, 0.03%)</title><rect x="95.1764%" y="437" width="0.0299%" height="15" fill="rgb(245,225,54)" fg:x="108088" fg:w="34"/><text x="95.4264%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (34 samples, 0.03%)</title><rect x="95.1764%" y="421" width="0.0299%" height="15" fill="rgb(239,94,37)" fg:x="108088" fg:w="34"/><text x="95.4264%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (89 samples, 0.08%)</title><rect x="95.1755%" y="501" width="0.0784%" height="15" fill="rgb(242,217,10)" fg:x="108087" fg:w="89"/><text x="95.4255%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.08%)</title><rect x="95.1755%" y="485" width="0.0784%" height="15" fill="rgb(250,193,7)" fg:x="108087" fg:w="89"/><text x="95.4255%" y="495.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (89 samples, 0.08%)</title><rect x="95.1755%" y="469" width="0.0784%" height="15" fill="rgb(230,104,19)" fg:x="108087" fg:w="89"/><text x="95.4255%" y="479.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (88 samples, 0.08%)</title><rect x="95.1764%" y="453" width="0.0775%" height="15" fill="rgb(230,181,4)" fg:x="108088" fg:w="88"/><text x="95.4264%" y="463.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (54 samples, 0.05%)</title><rect x="95.2063%" y="437" width="0.0475%" height="15" fill="rgb(216,219,49)" fg:x="108122" fg:w="54"/><text x="95.4563%" y="447.50"></text></g><g><title>___pthread_rwlock_unlock (54 samples, 0.05%)</title><rect x="95.2063%" y="421" width="0.0475%" height="15" fill="rgb(254,144,0)" fg:x="108122" fg:w="54"/><text x="95.4563%" y="431.50"></text></g><g><title>fastrand::usize (20 samples, 0.02%)</title><rect x="95.2539%" y="501" width="0.0176%" height="15" fill="rgb(205,209,38)" fg:x="108176" fg:w="20"/><text x="95.5039%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.02%)</title><rect x="95.2547%" y="485" width="0.0167%" height="15" fill="rgb(240,21,42)" fg:x="108177" fg:w="19"/><text x="95.5047%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.02%)</title><rect x="95.2547%" y="469" width="0.0167%" height="15" fill="rgb(241,132,3)" fg:x="108177" fg:w="19"/><text x="95.5047%" y="479.50"></text></g><g><title>___pthread_rwlock_rdlock (39 samples, 0.03%)</title><rect x="95.2794%" y="453" width="0.0343%" height="15" fill="rgb(225,14,2)" fg:x="108205" fg:w="39"/><text x="95.5294%" y="463.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (515 samples, 0.45%)</title><rect x="94.8920%" y="517" width="0.4535%" height="15" fill="rgb(210,141,35)" fg:x="107765" fg:w="515"/><text x="95.1420%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (84 samples, 0.07%)</title><rect x="95.2715%" y="501" width="0.0740%" height="15" fill="rgb(251,14,44)" fg:x="108196" fg:w="84"/><text x="95.5215%" y="511.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (78 samples, 0.07%)</title><rect x="95.2768%" y="485" width="0.0687%" height="15" fill="rgb(247,48,18)" fg:x="108202" fg:w="78"/><text x="95.5268%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (78 samples, 0.07%)</title><rect x="95.2768%" y="469" width="0.0687%" height="15" fill="rgb(225,0,40)" fg:x="108202" fg:w="78"/><text x="95.5268%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (36 samples, 0.03%)</title><rect x="95.3137%" y="453" width="0.0317%" height="15" fill="rgb(221,31,33)" fg:x="108244" fg:w="36"/><text x="95.5637%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (36 samples, 0.03%)</title><rect x="95.3137%" y="437" width="0.0317%" height="15" fill="rgb(237,42,40)" fg:x="108244" fg:w="36"/><text x="95.5637%" y="447.50"></text></g><g><title>async_executor::Sleepers::update (18 samples, 0.02%)</title><rect x="95.3586%" y="501" width="0.0158%" height="15" fill="rgb(233,51,29)" fg:x="108295" fg:w="18"/><text x="95.6086%" y="511.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (63 samples, 0.06%)</title><rect x="95.3815%" y="437" width="0.0555%" height="15" fill="rgb(226,58,20)" fg:x="108321" fg:w="63"/><text x="95.6315%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (73 samples, 0.06%)</title><rect x="95.3745%" y="501" width="0.0643%" height="15" fill="rgb(208,98,7)" fg:x="108313" fg:w="73"/><text x="95.6245%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.06%)</title><rect x="95.3745%" y="485" width="0.0643%" height="15" fill="rgb(228,143,44)" fg:x="108313" fg:w="73"/><text x="95.6245%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (70 samples, 0.06%)</title><rect x="95.3771%" y="469" width="0.0616%" height="15" fill="rgb(246,55,38)" fg:x="108316" fg:w="70"/><text x="95.6271%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (65 samples, 0.06%)</title><rect x="95.3815%" y="453" width="0.0572%" height="15" fill="rgb(247,87,16)" fg:x="108321" fg:w="65"/><text x="95.6315%" y="463.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (744 samples, 0.66%)</title><rect x="94.8638%" y="629" width="0.6551%" height="15" fill="rgb(234,129,42)" fg:x="107733" fg:w="744"/><text x="95.1138%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (739 samples, 0.65%)</title><rect x="94.8682%" y="613" width="0.6507%" height="15" fill="rgb(220,82,16)" fg:x="107738" fg:w="739"/><text x="95.1182%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (738 samples, 0.65%)</title><rect x="94.8691%" y="597" width="0.6498%" height="15" fill="rgb(211,88,4)" fg:x="107739" fg:w="738"/><text x="95.1191%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (729 samples, 0.64%)</title><rect x="94.8770%" y="581" width="0.6419%" height="15" fill="rgb(248,151,21)" fg:x="107748" fg:w="729"/><text x="95.1270%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (725 samples, 0.64%)</title><rect x="94.8805%" y="565" width="0.6384%" height="15" fill="rgb(238,163,6)" fg:x="107752" fg:w="725"/><text x="95.1305%" y="575.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (724 samples, 0.64%)</title><rect x="94.8814%" y="549" width="0.6375%" height="15" fill="rgb(209,183,11)" fg:x="107753" fg:w="724"/><text x="95.1314%" y="559.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (716 samples, 0.63%)</title><rect x="94.8884%" y="533" width="0.6305%" height="15" fill="rgb(219,37,20)" fg:x="107761" fg:w="716"/><text x="95.1384%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (197 samples, 0.17%)</title><rect x="95.3454%" y="517" width="0.1735%" height="15" fill="rgb(210,158,4)" fg:x="108280" fg:w="197"/><text x="95.5954%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (91 samples, 0.08%)</title><rect x="95.4388%" y="501" width="0.0801%" height="15" fill="rgb(221,167,53)" fg:x="108386" fg:w="91"/><text x="95.6888%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (87 samples, 0.08%)</title><rect x="95.4423%" y="485" width="0.0766%" height="15" fill="rgb(237,151,45)" fg:x="108390" fg:w="87"/><text x="95.6923%" y="495.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (87 samples, 0.08%)</title><rect x="95.4423%" y="469" width="0.0766%" height="15" fill="rgb(231,39,3)" fg:x="108390" fg:w="87"/><text x="95.6923%" y="479.50"></text></g><g><title>___pthread_mutex_lock (87 samples, 0.08%)</title><rect x="95.4423%" y="453" width="0.0766%" height="15" fill="rgb(212,167,28)" fg:x="108390" fg:w="87"/><text x="95.6923%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (24 samples, 0.02%)</title><rect x="95.5823%" y="565" width="0.0211%" height="15" fill="rgb(232,178,8)" fg:x="108549" fg:w="24"/><text x="95.8323%" y="575.50"></text></g><g><title>core::mem::replace (24 samples, 0.02%)</title><rect x="95.5823%" y="549" width="0.0211%" height="15" fill="rgb(225,151,20)" fg:x="108549" fg:w="24"/><text x="95.8323%" y="559.50"></text></g><g><title>core::ptr::read (24 samples, 0.02%)</title><rect x="95.5823%" y="533" width="0.0211%" height="15" fill="rgb(238,3,37)" fg:x="108549" fg:w="24"/><text x="95.8323%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (38 samples, 0.03%)</title><rect x="95.5761%" y="581" width="0.0335%" height="15" fill="rgb(251,147,42)" fg:x="108542" fg:w="38"/><text x="95.8261%" y="591.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (51 samples, 0.04%)</title><rect x="95.6166%" y="501" width="0.0449%" height="15" fill="rgb(208,173,10)" fg:x="108588" fg:w="51"/><text x="95.8666%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (64 samples, 0.06%)</title><rect x="95.6096%" y="581" width="0.0564%" height="15" fill="rgb(246,225,4)" fg:x="108580" fg:w="64"/><text x="95.8596%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (60 samples, 0.05%)</title><rect x="95.6131%" y="565" width="0.0528%" height="15" fill="rgb(248,102,6)" fg:x="108584" fg:w="60"/><text x="95.8631%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.05%)</title><rect x="95.6131%" y="549" width="0.0528%" height="15" fill="rgb(232,6,21)" fg:x="108584" fg:w="60"/><text x="95.8631%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (58 samples, 0.05%)</title><rect x="95.6149%" y="533" width="0.0511%" height="15" fill="rgb(221,179,22)" fg:x="108586" fg:w="58"/><text x="95.8649%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (56 samples, 0.05%)</title><rect x="95.6166%" y="517" width="0.0493%" height="15" fill="rgb(252,50,20)" fg:x="108588" fg:w="56"/><text x="95.8666%" y="527.50"></text></g><g><title>core::task::wake::Waker::will_wake (12 samples, 0.01%)</title><rect x="95.6686%" y="581" width="0.0106%" height="15" fill="rgb(222,56,38)" fg:x="108647" fg:w="12"/><text x="95.9186%" y="591.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (12 samples, 0.01%)</title><rect x="95.6686%" y="565" width="0.0106%" height="15" fill="rgb(206,193,29)" fg:x="108647" fg:w="12"/><text x="95.9186%" y="575.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (275 samples, 0.24%)</title><rect x="95.5638%" y="597" width="0.2421%" height="15" fill="rgb(239,192,45)" fg:x="108528" fg:w="275"/><text x="95.8138%" y="607.50"></text></g><g><title>event_listener::Inner::lock (144 samples, 0.13%)</title><rect x="95.6792%" y="581" width="0.1268%" height="15" fill="rgb(254,18,36)" fg:x="108659" fg:w="144"/><text x="95.9292%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (142 samples, 0.13%)</title><rect x="95.6809%" y="565" width="0.1250%" height="15" fill="rgb(221,127,11)" fg:x="108661" fg:w="142"/><text x="95.9309%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (140 samples, 0.12%)</title><rect x="95.6827%" y="549" width="0.1233%" height="15" fill="rgb(234,146,35)" fg:x="108663" fg:w="140"/><text x="95.9327%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (133 samples, 0.12%)</title><rect x="95.6889%" y="533" width="0.1171%" height="15" fill="rgb(254,201,37)" fg:x="108670" fg:w="133"/><text x="95.9389%" y="543.50"></text></g><g><title>___pthread_mutex_lock (133 samples, 0.12%)</title><rect x="95.6889%" y="517" width="0.1171%" height="15" fill="rgb(211,202,23)" fg:x="108670" fg:w="133"/><text x="95.9389%" y="527.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (123 samples, 0.11%)</title><rect x="95.8060%" y="597" width="0.1083%" height="15" fill="rgb(237,91,2)" fg:x="108803" fg:w="123"/><text x="96.0560%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (123 samples, 0.11%)</title><rect x="95.8060%" y="581" width="0.1083%" height="15" fill="rgb(226,228,36)" fg:x="108803" fg:w="123"/><text x="96.0560%" y="591.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (78 samples, 0.07%)</title><rect x="95.8456%" y="565" width="0.0687%" height="15" fill="rgb(213,63,50)" fg:x="108848" fg:w="78"/><text x="96.0956%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (75 samples, 0.07%)</title><rect x="95.8482%" y="549" width="0.0660%" height="15" fill="rgb(235,194,19)" fg:x="108851" fg:w="75"/><text x="96.0982%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (75 samples, 0.07%)</title><rect x="95.8482%" y="533" width="0.0660%" height="15" fill="rgb(207,204,18)" fg:x="108851" fg:w="75"/><text x="96.0982%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (75 samples, 0.07%)</title><rect x="95.8482%" y="517" width="0.0660%" height="15" fill="rgb(248,8,7)" fg:x="108851" fg:w="75"/><text x="96.0982%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,201 samples, 1.06%)</title><rect x="94.8629%" y="645" width="1.0575%" height="15" fill="rgb(223,145,47)" fg:x="107732" fg:w="1201"/><text x="95.1129%" y="655.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (456 samples, 0.40%)</title><rect x="95.5189%" y="629" width="0.4015%" height="15" fill="rgb(228,84,11)" fg:x="108477" fg:w="456"/><text x="95.7689%" y="639.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (419 samples, 0.37%)</title><rect x="95.5515%" y="613" width="0.3689%" height="15" fill="rgb(218,76,45)" fg:x="108514" fg:w="419"/><text x="95.8015%" y="623.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,205 samples, 1.06%)</title><rect x="94.8629%" y="661" width="1.0611%" height="15" fill="rgb(223,80,15)" fg:x="107732" fg:w="1205"/><text x="95.1129%" y="671.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (9,835 samples, 8.66%)</title><rect x="87.2823%" y="741" width="8.6602%" height="15" fill="rgb(219,218,33)" fg:x="99123" fg:w="9835"/><text x="87.5323%" y="751.50">&lt;futures_lit..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,830 samples, 8.66%)</title><rect x="87.2867%" y="725" width="8.6558%" height="15" fill="rgb(208,51,11)" fg:x="99128" fg:w="9830"/><text x="87.5367%" y="735.50">&lt;core::futur..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,271 samples, 1.12%)</title><rect x="94.8233%" y="709" width="1.1192%" height="15" fill="rgb(229,165,39)" fg:x="107687" fg:w="1271"/><text x="95.0733%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,230 samples, 1.08%)</title><rect x="94.8594%" y="693" width="1.0831%" height="15" fill="rgb(241,100,24)" fg:x="107728" fg:w="1230"/><text x="95.1094%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,227 samples, 1.08%)</title><rect x="94.8620%" y="677" width="1.0804%" height="15" fill="rgb(228,14,23)" fg:x="107731" fg:w="1227"/><text x="95.1120%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::get (18 samples, 0.02%)</title><rect x="95.9530%" y="741" width="0.0158%" height="15" fill="rgb(247,116,52)" fg:x="108970" fg:w="18"/><text x="96.2030%" y="751.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="95.9530%" y="725" width="0.0158%" height="15" fill="rgb(216,149,33)" fg:x="108970" fg:w="18"/><text x="96.2030%" y="735.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (18 samples, 0.02%)</title><rect x="95.9530%" y="709" width="0.0158%" height="15" fill="rgb(238,142,29)" fg:x="108970" fg:w="18"/><text x="96.2030%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (18 samples, 0.02%)</title><rect x="95.9530%" y="693" width="0.0158%" height="15" fill="rgb(224,83,40)" fg:x="108970" fg:w="18"/><text x="96.2030%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (18 samples, 0.02%)</title><rect x="95.9530%" y="677" width="0.0158%" height="15" fill="rgb(234,165,11)" fg:x="108970" fg:w="18"/><text x="96.2030%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="95.9583%" y="661" width="0.0106%" height="15" fill="rgb(215,96,23)" fg:x="108976" fg:w="12"/><text x="96.2083%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (212 samples, 0.19%)</title><rect x="95.9689%" y="741" width="0.1867%" height="15" fill="rgb(233,179,26)" fg:x="108988" fg:w="212"/><text x="96.2189%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (211 samples, 0.19%)</title><rect x="95.9697%" y="725" width="0.1858%" height="15" fill="rgb(225,129,33)" fg:x="108989" fg:w="211"/><text x="96.2197%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (205 samples, 0.18%)</title><rect x="95.9750%" y="709" width="0.1805%" height="15" fill="rgb(237,49,13)" fg:x="108995" fg:w="205"/><text x="96.2250%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (197 samples, 0.17%)</title><rect x="95.9821%" y="693" width="0.1735%" height="15" fill="rgb(211,3,31)" fg:x="109003" fg:w="197"/><text x="96.2321%" y="703.50"></text></g><g><title>__GI___pthread_mutex_trylock (197 samples, 0.17%)</title><rect x="95.9821%" y="677" width="0.1735%" height="15" fill="rgb(216,152,19)" fg:x="109003" fg:w="197"/><text x="96.2321%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (37 samples, 0.03%)</title><rect x="96.2207%" y="549" width="0.0326%" height="15" fill="rgb(251,121,35)" fg:x="109274" fg:w="37"/><text x="96.4707%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (34 samples, 0.03%)</title><rect x="96.2233%" y="533" width="0.0299%" height="15" fill="rgb(210,217,47)" fg:x="109277" fg:w="34"/><text x="96.4733%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (34 samples, 0.03%)</title><rect x="96.2233%" y="517" width="0.0299%" height="15" fill="rgb(244,116,22)" fg:x="109277" fg:w="34"/><text x="96.4733%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (34 samples, 0.03%)</title><rect x="96.2233%" y="501" width="0.0299%" height="15" fill="rgb(228,17,21)" fg:x="109277" fg:w="34"/><text x="96.4733%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (34 samples, 0.03%)</title><rect x="96.2233%" y="485" width="0.0299%" height="15" fill="rgb(240,149,34)" fg:x="109277" fg:w="34"/><text x="96.4733%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="96.2427%" y="469" width="0.0106%" height="15" fill="rgb(208,125,47)" fg:x="109299" fg:w="12"/><text x="96.4927%" y="479.50"></text></g><g><title>rust_dealloc (45 samples, 0.04%)</title><rect x="96.2207%" y="565" width="0.0396%" height="15" fill="rgb(249,186,39)" fg:x="109274" fg:w="45"/><text x="96.4707%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (53 samples, 0.05%)</title><rect x="96.2172%" y="661" width="0.0467%" height="15" fill="rgb(240,220,33)" fg:x="109270" fg:w="53"/><text x="96.4672%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (52 samples, 0.05%)</title><rect x="96.2181%" y="645" width="0.0458%" height="15" fill="rgb(243,110,23)" fg:x="109271" fg:w="52"/><text x="96.4681%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (52 samples, 0.05%)</title><rect x="96.2181%" y="629" width="0.0458%" height="15" fill="rgb(219,163,46)" fg:x="109271" fg:w="52"/><text x="96.4681%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (52 samples, 0.05%)</title><rect x="96.2181%" y="613" width="0.0458%" height="15" fill="rgb(216,126,30)" fg:x="109271" fg:w="52"/><text x="96.4681%" y="623.50"></text></g><g><title>__rg_dealloc (52 samples, 0.05%)</title><rect x="96.2181%" y="597" width="0.0458%" height="15" fill="rgb(208,139,11)" fg:x="109271" fg:w="52"/><text x="96.4681%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (49 samples, 0.04%)</title><rect x="96.2207%" y="581" width="0.0431%" height="15" fill="rgb(213,118,36)" fg:x="109274" fg:w="49"/><text x="96.4707%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.05%)</title><rect x="96.2145%" y="709" width="0.0511%" height="15" fill="rgb(226,43,17)" fg:x="109267" fg:w="58"/><text x="96.4645%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (55 samples, 0.05%)</title><rect x="96.2172%" y="693" width="0.0484%" height="15" fill="rgb(254,217,4)" fg:x="109270" fg:w="55"/><text x="96.4672%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (55 samples, 0.05%)</title><rect x="96.2172%" y="677" width="0.0484%" height="15" fill="rgb(210,134,47)" fg:x="109270" fg:w="55"/><text x="96.4672%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (22 samples, 0.02%)</title><rect x="96.2982%" y="677" width="0.0194%" height="15" fill="rgb(237,24,49)" fg:x="109362" fg:w="22"/><text x="96.5482%" y="687.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (17 samples, 0.01%)</title><rect x="96.3026%" y="661" width="0.0150%" height="15" fill="rgb(251,39,46)" fg:x="109367" fg:w="17"/><text x="96.5526%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.01%)</title><rect x="96.3026%" y="645" width="0.0150%" height="15" fill="rgb(251,220,3)" fg:x="109367" fg:w="17"/><text x="96.5526%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (16 samples, 0.01%)</title><rect x="96.3035%" y="629" width="0.0141%" height="15" fill="rgb(228,105,12)" fg:x="109368" fg:w="16"/><text x="96.5535%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (17 samples, 0.01%)</title><rect x="96.3211%" y="645" width="0.0150%" height="15" fill="rgb(215,196,1)" fg:x="109388" fg:w="17"/><text x="96.5711%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (36 samples, 0.03%)</title><rect x="96.3176%" y="677" width="0.0317%" height="15" fill="rgb(214,33,39)" fg:x="109384" fg:w="36"/><text x="96.5676%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (36 samples, 0.03%)</title><rect x="96.3176%" y="661" width="0.0317%" height="15" fill="rgb(220,19,52)" fg:x="109384" fg:w="36"/><text x="96.5676%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="96.3739%" y="309" width="0.0132%" height="15" fill="rgb(221,78,38)" fg:x="109448" fg:w="15"/><text x="96.6239%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="96.3739%" y="293" width="0.0132%" height="15" fill="rgb(253,30,16)" fg:x="109448" fg:w="15"/><text x="96.6239%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (30 samples, 0.03%)</title><rect x="96.3642%" y="357" width="0.0264%" height="15" fill="rgb(242,65,0)" fg:x="109437" fg:w="30"/><text x="96.6142%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (30 samples, 0.03%)</title><rect x="96.3642%" y="341" width="0.0264%" height="15" fill="rgb(235,201,12)" fg:x="109437" fg:w="30"/><text x="96.6142%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (24 samples, 0.02%)</title><rect x="96.3695%" y="325" width="0.0211%" height="15" fill="rgb(233,161,9)" fg:x="109443" fg:w="24"/><text x="96.6195%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (36 samples, 0.03%)</title><rect x="96.3642%" y="373" width="0.0317%" height="15" fill="rgb(241,207,41)" fg:x="109437" fg:w="36"/><text x="96.6142%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (61 samples, 0.05%)</title><rect x="96.3589%" y="389" width="0.0537%" height="15" fill="rgb(212,69,46)" fg:x="109431" fg:w="61"/><text x="96.6089%" y="399.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="96.3995%" y="373" width="0.0132%" height="15" fill="rgb(239,69,45)" fg:x="109477" fg:w="15"/><text x="96.6495%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="96.3995%" y="357" width="0.0132%" height="15" fill="rgb(242,117,48)" fg:x="109477" fg:w="15"/><text x="96.6495%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (15 samples, 0.01%)</title><rect x="96.3995%" y="341" width="0.0132%" height="15" fill="rgb(228,41,36)" fg:x="109477" fg:w="15"/><text x="96.6495%" y="351.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="96.3995%" y="325" width="0.0132%" height="15" fill="rgb(212,3,32)" fg:x="109477" fg:w="15"/><text x="96.6495%" y="335.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (32 samples, 0.03%)</title><rect x="96.4276%" y="373" width="0.0282%" height="15" fill="rgb(233,41,49)" fg:x="109509" fg:w="32"/><text x="96.6776%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (294 samples, 0.26%)</title><rect x="96.3589%" y="421" width="0.2589%" height="15" fill="rgb(252,170,49)" fg:x="109431" fg:w="294"/><text x="96.6089%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (294 samples, 0.26%)</title><rect x="96.3589%" y="405" width="0.2589%" height="15" fill="rgb(229,53,26)" fg:x="109431" fg:w="294"/><text x="96.6089%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (233 samples, 0.21%)</title><rect x="96.4127%" y="389" width="0.2052%" height="15" fill="rgb(217,157,12)" fg:x="109492" fg:w="233"/><text x="96.6627%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (184 samples, 0.16%)</title><rect x="96.4558%" y="373" width="0.1620%" height="15" fill="rgb(227,17,9)" fg:x="109541" fg:w="184"/><text x="96.7058%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (184 samples, 0.16%)</title><rect x="96.4558%" y="357" width="0.1620%" height="15" fill="rgb(218,84,12)" fg:x="109541" fg:w="184"/><text x="96.7058%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (184 samples, 0.16%)</title><rect x="96.4558%" y="341" width="0.1620%" height="15" fill="rgb(212,79,24)" fg:x="109541" fg:w="184"/><text x="96.7058%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="96.6178%" y="421" width="0.0141%" height="15" fill="rgb(217,222,37)" fg:x="109725" fg:w="16"/><text x="96.8678%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::empty (17 samples, 0.01%)</title><rect x="96.6328%" y="421" width="0.0150%" height="15" fill="rgb(246,208,8)" fg:x="109742" fg:w="17"/><text x="96.8828%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (17 samples, 0.01%)</title><rect x="96.6328%" y="405" width="0.0150%" height="15" fill="rgb(244,133,10)" fg:x="109742" fg:w="17"/><text x="96.8828%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (417 samples, 0.37%)</title><rect x="96.3519%" y="469" width="0.3672%" height="15" fill="rgb(209,219,41)" fg:x="109423" fg:w="417"/><text x="96.6019%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (417 samples, 0.37%)</title><rect x="96.3519%" y="453" width="0.3672%" height="15" fill="rgb(253,175,45)" fg:x="109423" fg:w="417"/><text x="96.6019%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (414 samples, 0.36%)</title><rect x="96.3545%" y="437" width="0.3645%" height="15" fill="rgb(235,100,37)" fg:x="109426" fg:w="414"/><text x="96.6045%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (81 samples, 0.07%)</title><rect x="96.6478%" y="421" width="0.0713%" height="15" fill="rgb(225,87,19)" fg:x="109759" fg:w="81"/><text x="96.8978%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (81 samples, 0.07%)</title><rect x="96.6478%" y="405" width="0.0713%" height="15" fill="rgb(217,152,17)" fg:x="109759" fg:w="81"/><text x="96.8978%" y="415.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (421 samples, 0.37%)</title><rect x="96.3493%" y="629" width="0.3707%" height="15" fill="rgb(235,72,13)" fg:x="109420" fg:w="421"/><text x="96.5993%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (421 samples, 0.37%)</title><rect x="96.3493%" y="613" width="0.3707%" height="15" fill="rgb(233,140,18)" fg:x="109420" fg:w="421"/><text x="96.5993%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (421 samples, 0.37%)</title><rect x="96.3493%" y="597" width="0.3707%" height="15" fill="rgb(207,212,28)" fg:x="109420" fg:w="421"/><text x="96.5993%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (421 samples, 0.37%)</title><rect x="96.3493%" y="581" width="0.3707%" height="15" fill="rgb(220,130,25)" fg:x="109420" fg:w="421"/><text x="96.5993%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (421 samples, 0.37%)</title><rect x="96.3493%" y="565" width="0.3707%" height="15" fill="rgb(205,55,34)" fg:x="109420" fg:w="421"/><text x="96.5993%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (421 samples, 0.37%)</title><rect x="96.3493%" y="549" width="0.3707%" height="15" fill="rgb(237,54,35)" fg:x="109420" fg:w="421"/><text x="96.5993%" y="559.50"></text></g><g><title>alloc::alloc::alloc (421 samples, 0.37%)</title><rect x="96.3493%" y="533" width="0.3707%" height="15" fill="rgb(208,67,23)" fg:x="109420" fg:w="421"/><text x="96.5993%" y="543.50"></text></g><g><title>__rg_alloc (421 samples, 0.37%)</title><rect x="96.3493%" y="517" width="0.3707%" height="15" fill="rgb(206,207,50)" fg:x="109420" fg:w="421"/><text x="96.5993%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (421 samples, 0.37%)</title><rect x="96.3493%" y="501" width="0.3707%" height="15" fill="rgb(213,211,42)" fg:x="109420" fg:w="421"/><text x="96.5993%" y="511.50"></text></g><g><title>rust_alloc (421 samples, 0.37%)</title><rect x="96.3493%" y="485" width="0.3707%" height="15" fill="rgb(252,197,50)" fg:x="109420" fg:w="421"/><text x="96.5993%" y="495.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (422 samples, 0.37%)</title><rect x="96.3493%" y="677" width="0.3716%" height="15" fill="rgb(251,211,41)" fg:x="109420" fg:w="422"/><text x="96.5993%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (422 samples, 0.37%)</title><rect x="96.3493%" y="661" width="0.3716%" height="15" fill="rgb(229,211,5)" fg:x="109420" fg:w="422"/><text x="96.5993%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (422 samples, 0.37%)</title><rect x="96.3493%" y="645" width="0.3716%" height="15" fill="rgb(239,36,31)" fg:x="109420" fg:w="422"/><text x="96.5993%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (509 samples, 0.45%)</title><rect x="96.2771%" y="709" width="0.4482%" height="15" fill="rgb(248,67,31)" fg:x="109338" fg:w="509"/><text x="96.5271%" y="719.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (498 samples, 0.44%)</title><rect x="96.2867%" y="693" width="0.4385%" height="15" fill="rgb(249,55,44)" fg:x="109349" fg:w="498"/><text x="96.5367%" y="703.50"></text></g><g><title>concurrent_queue::full_fence (42 samples, 0.04%)</title><rect x="96.7490%" y="661" width="0.0370%" height="15" fill="rgb(216,82,12)" fg:x="109874" fg:w="42"/><text x="96.9990%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (42 samples, 0.04%)</title><rect x="96.7490%" y="645" width="0.0370%" height="15" fill="rgb(242,174,1)" fg:x="109874" fg:w="42"/><text x="96.9990%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (42 samples, 0.04%)</title><rect x="96.7490%" y="629" width="0.0370%" height="15" fill="rgb(208,120,29)" fg:x="109874" fg:w="42"/><text x="96.9990%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (42 samples, 0.04%)</title><rect x="96.7490%" y="613" width="0.0370%" height="15" fill="rgb(221,105,43)" fg:x="109874" fg:w="42"/><text x="96.9990%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (69 samples, 0.06%)</title><rect x="96.7341%" y="693" width="0.0608%" height="15" fill="rgb(234,124,22)" fg:x="109857" fg:w="69"/><text x="96.9841%" y="703.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (65 samples, 0.06%)</title><rect x="96.7376%" y="677" width="0.0572%" height="15" fill="rgb(212,23,30)" fg:x="109861" fg:w="65"/><text x="96.9876%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (83 samples, 0.07%)</title><rect x="96.7253%" y="709" width="0.0731%" height="15" fill="rgb(219,122,53)" fg:x="109847" fg:w="83"/><text x="96.9753%" y="719.50"></text></g><g><title>core::mem::drop (112 samples, 0.10%)</title><rect x="96.7983%" y="709" width="0.0986%" height="15" fill="rgb(248,84,24)" fg:x="109930" fg:w="112"/><text x="97.0483%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (112 samples, 0.10%)</title><rect x="96.7983%" y="693" width="0.0986%" height="15" fill="rgb(245,115,18)" fg:x="109930" fg:w="112"/><text x="97.0483%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (112 samples, 0.10%)</title><rect x="96.7983%" y="677" width="0.0986%" height="15" fill="rgb(227,176,51)" fg:x="109930" fg:w="112"/><text x="97.0483%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (109 samples, 0.10%)</title><rect x="96.8010%" y="661" width="0.0960%" height="15" fill="rgb(229,63,42)" fg:x="109933" fg:w="109"/><text x="97.0510%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (107 samples, 0.09%)</title><rect x="96.8027%" y="645" width="0.0942%" height="15" fill="rgb(247,202,24)" fg:x="109935" fg:w="107"/><text x="97.0527%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (107 samples, 0.09%)</title><rect x="96.8027%" y="629" width="0.0942%" height="15" fill="rgb(244,173,20)" fg:x="109935" fg:w="107"/><text x="97.0527%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.02%)</title><rect x="96.9022%" y="709" width="0.0167%" height="15" fill="rgb(242,81,47)" fg:x="110048" fg:w="19"/><text x="97.1522%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::process_timers::{{closure}} (18 samples, 0.02%)</title><rect x="96.9031%" y="693" width="0.0158%" height="15" fill="rgb(231,185,54)" fg:x="110049" fg:w="18"/><text x="97.1531%" y="703.50"></text></g><g><title>std::time::Instant::saturating_duration_since (18 samples, 0.02%)</title><rect x="96.9031%" y="677" width="0.0158%" height="15" fill="rgb(243,55,32)" fg:x="110049" fg:w="18"/><text x="97.1531%" y="687.50"></text></g><g><title>std::time::Instant::checked_duration_since (18 samples, 0.02%)</title><rect x="96.9031%" y="661" width="0.0158%" height="15" fill="rgb(208,167,19)" fg:x="110049" fg:w="18"/><text x="97.1531%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (18 samples, 0.02%)</title><rect x="96.9031%" y="645" width="0.0158%" height="15" fill="rgb(231,72,35)" fg:x="110049" fg:w="18"/><text x="97.1531%" y="655.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (14 samples, 0.01%)</title><rect x="96.9066%" y="629" width="0.0123%" height="15" fill="rgb(250,173,51)" fg:x="110053" fg:w="14"/><text x="97.1566%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (45 samples, 0.04%)</title><rect x="96.9243%" y="709" width="0.0396%" height="15" fill="rgb(209,5,22)" fg:x="110073" fg:w="45"/><text x="97.1743%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (44 samples, 0.04%)</title><rect x="96.9251%" y="693" width="0.0387%" height="15" fill="rgb(250,174,19)" fg:x="110074" fg:w="44"/><text x="97.1751%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (43 samples, 0.04%)</title><rect x="96.9260%" y="677" width="0.0379%" height="15" fill="rgb(217,3,49)" fg:x="110075" fg:w="43"/><text x="97.1760%" y="687.50"></text></g><g><title>___pthread_mutex_lock (43 samples, 0.04%)</title><rect x="96.9260%" y="661" width="0.0379%" height="15" fill="rgb(218,225,5)" fg:x="110075" fg:w="43"/><text x="97.1760%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (951 samples, 0.84%)</title><rect x="96.1996%" y="725" width="0.8374%" height="15" fill="rgb(236,89,11)" fg:x="109250" fg:w="951"/><text x="96.4496%" y="735.50"></text></g><g><title>std::time::Instant::now (83 samples, 0.07%)</title><rect x="96.9639%" y="709" width="0.0731%" height="15" fill="rgb(206,33,28)" fg:x="110118" fg:w="83"/><text x="97.2139%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (83 samples, 0.07%)</title><rect x="96.9639%" y="693" width="0.0731%" height="15" fill="rgb(241,56,42)" fg:x="110118" fg:w="83"/><text x="97.2139%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::now (83 samples, 0.07%)</title><rect x="96.9639%" y="677" width="0.0731%" height="15" fill="rgb(222,44,11)" fg:x="110118" fg:w="83"/><text x="97.2139%" y="687.50"></text></g><g><title>__clock_gettime_2 (80 samples, 0.07%)</title><rect x="96.9665%" y="661" width="0.0704%" height="15" fill="rgb(234,111,20)" fg:x="110121" fg:w="80"/><text x="97.2165%" y="671.50"></text></g><g><title>__vdso_clock_gettime (70 samples, 0.06%)</title><rect x="96.9753%" y="645" width="0.0616%" height="15" fill="rgb(237,77,6)" fg:x="110131" fg:w="70"/><text x="97.2253%" y="655.50"></text></g><g><title>[[vdso]] (46 samples, 0.04%)</title><rect x="96.9965%" y="629" width="0.0405%" height="15" fill="rgb(235,111,23)" fg:x="110155" fg:w="46"/><text x="97.2465%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (39 samples, 0.03%)</title><rect x="97.0422%" y="725" width="0.0343%" height="15" fill="rgb(251,135,29)" fg:x="110207" fg:w="39"/><text x="97.2922%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (39 samples, 0.03%)</title><rect x="97.0422%" y="709" width="0.0343%" height="15" fill="rgb(217,57,1)" fg:x="110207" fg:w="39"/><text x="97.2922%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (73 samples, 0.06%)</title><rect x="97.0898%" y="709" width="0.0643%" height="15" fill="rgb(249,119,31)" fg:x="110261" fg:w="73"/><text x="97.3398%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.06%)</title><rect x="97.0898%" y="693" width="0.0643%" height="15" fill="rgb(233,164,33)" fg:x="110261" fg:w="73"/><text x="97.3398%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (73 samples, 0.06%)</title><rect x="97.0898%" y="677" width="0.0643%" height="15" fill="rgb(250,217,43)" fg:x="110261" fg:w="73"/><text x="97.3398%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (73 samples, 0.06%)</title><rect x="97.0898%" y="661" width="0.0643%" height="15" fill="rgb(232,154,50)" fg:x="110261" fg:w="73"/><text x="97.3398%" y="671.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (73 samples, 0.06%)</title><rect x="97.0898%" y="645" width="0.0643%" height="15" fill="rgb(227,190,8)" fg:x="110261" fg:w="73"/><text x="97.3398%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (78 samples, 0.07%)</title><rect x="97.1541%" y="709" width="0.0687%" height="15" fill="rgb(209,217,32)" fg:x="110334" fg:w="78"/><text x="97.4041%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (78 samples, 0.07%)</title><rect x="97.1541%" y="693" width="0.0687%" height="15" fill="rgb(243,203,50)" fg:x="110334" fg:w="78"/><text x="97.4041%" y="703.50"></text></g><g><title>__libc_read (51 samples, 0.04%)</title><rect x="97.2562%" y="693" width="0.0449%" height="15" fill="rgb(232,152,27)" fg:x="110450" fg:w="51"/><text x="97.5062%" y="703.50"></text></g><g><title>__GI___pthread_disable_asynccancel (18 samples, 0.02%)</title><rect x="97.3839%" y="677" width="0.0158%" height="15" fill="rgb(240,34,29)" fg:x="110595" fg:w="18"/><text x="97.6339%" y="687.50"></text></g><g><title>epoll_wait (119 samples, 0.10%)</title><rect x="97.3011%" y="693" width="0.1048%" height="15" fill="rgb(215,185,52)" fg:x="110501" fg:w="119"/><text x="97.5511%" y="703.50"></text></g><g><title>__GI_epoll_ctl (51 samples, 0.04%)</title><rect x="97.4218%" y="661" width="0.0449%" height="15" fill="rgb(240,89,49)" fg:x="110638" fg:w="51"/><text x="97.6718%" y="671.50"></text></g><g><title>polling::epoll::Poller::ctl (67 samples, 0.06%)</title><rect x="97.4174%" y="677" width="0.0590%" height="15" fill="rgb(225,12,52)" fg:x="110633" fg:w="67"/><text x="97.6674%" y="687.50"></text></g><g><title>polling::epoll::Poller::modify (77 samples, 0.07%)</title><rect x="97.4094%" y="693" width="0.0678%" height="15" fill="rgb(239,128,45)" fg:x="110624" fg:w="77"/><text x="97.6594%" y="703.50"></text></g><g><title>polling::epoll::Poller::wait (343 samples, 0.30%)</title><rect x="97.2245%" y="709" width="0.3020%" height="15" fill="rgb(211,78,47)" fg:x="110414" fg:w="343"/><text x="97.4745%" y="719.50"></text></g><g><title>syscall (48 samples, 0.04%)</title><rect x="97.4843%" y="693" width="0.0423%" height="15" fill="rgb(232,31,21)" fg:x="110709" fg:w="48"/><text x="97.7343%" y="703.50"></text></g><g><title>polling::Poller::wait (568 samples, 0.50%)</title><rect x="97.0766%" y="725" width="0.5001%" height="15" fill="rgb(222,168,14)" fg:x="110246" fg:w="568"/><text x="97.3266%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (57 samples, 0.05%)</title><rect x="97.5265%" y="709" width="0.0502%" height="15" fill="rgb(209,128,24)" fg:x="110757" fg:w="57"/><text x="97.7765%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (56 samples, 0.05%)</title><rect x="97.5274%" y="693" width="0.0493%" height="15" fill="rgb(249,35,13)" fg:x="110758" fg:w="56"/><text x="97.7774%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (56 samples, 0.05%)</title><rect x="97.5274%" y="677" width="0.0493%" height="15" fill="rgb(218,7,2)" fg:x="110758" fg:w="56"/><text x="97.7774%" y="687.50"></text></g><g><title>__GI___pthread_mutex_trylock (56 samples, 0.05%)</title><rect x="97.5274%" y="661" width="0.0493%" height="15" fill="rgb(238,107,27)" fg:x="110758" fg:w="56"/><text x="97.7774%" y="671.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,615 samples, 1.42%)</title><rect x="96.1555%" y="741" width="1.4221%" height="15" fill="rgb(217,88,38)" fg:x="109200" fg:w="1615"/><text x="96.4055%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (34 samples, 0.03%)</title><rect x="97.5785%" y="693" width="0.0299%" height="15" fill="rgb(230,207,0)" fg:x="110816" fg:w="34"/><text x="97.8285%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_store (34 samples, 0.03%)</title><rect x="97.5785%" y="677" width="0.0299%" height="15" fill="rgb(249,64,54)" fg:x="110816" fg:w="34"/><text x="97.8285%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (40 samples, 0.04%)</title><rect x="97.5776%" y="741" width="0.0352%" height="15" fill="rgb(231,7,11)" fg:x="110815" fg:w="40"/><text x="97.8276%" y="751.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="97.5776%" y="725" width="0.0352%" height="15" fill="rgb(205,149,21)" fg:x="110815" fg:w="40"/><text x="97.8276%" y="735.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (40 samples, 0.04%)</title><rect x="97.5776%" y="709" width="0.0352%" height="15" fill="rgb(215,126,34)" fg:x="110815" fg:w="40"/><text x="97.8276%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (18 samples, 0.02%)</title><rect x="97.6146%" y="661" width="0.0158%" height="15" fill="rgb(241,132,45)" fg:x="110857" fg:w="18"/><text x="97.8646%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::reactor::ReactorLock&gt; (23 samples, 0.02%)</title><rect x="97.6128%" y="741" width="0.0203%" height="15" fill="rgb(252,69,32)" fg:x="110855" fg:w="23"/><text x="97.8628%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;polling::Event&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="97.6128%" y="725" width="0.0203%" height="15" fill="rgb(232,204,19)" fg:x="110855" fg:w="23"/><text x="97.8628%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="97.6128%" y="709" width="0.0203%" height="15" fill="rgb(249,15,47)" fg:x="110855" fg:w="23"/><text x="97.8628%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (22 samples, 0.02%)</title><rect x="97.6137%" y="693" width="0.0194%" height="15" fill="rgb(209,227,23)" fg:x="110856" fg:w="22"/><text x="97.8637%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (22 samples, 0.02%)</title><rect x="97.6137%" y="677" width="0.0194%" height="15" fill="rgb(248,92,24)" fg:x="110856" fg:w="22"/><text x="97.8637%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (16 samples, 0.01%)</title><rect x="97.6366%" y="741" width="0.0141%" height="15" fill="rgb(247,59,2)" fg:x="110882" fg:w="16"/><text x="97.8866%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_store (16 samples, 0.01%)</title><rect x="97.6366%" y="725" width="0.0141%" height="15" fill="rgb(221,30,5)" fg:x="110882" fg:w="16"/><text x="97.8866%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (58 samples, 0.05%)</title><rect x="97.6674%" y="709" width="0.0511%" height="15" fill="rgb(208,108,53)" fg:x="110917" fg:w="58"/><text x="97.9174%" y="719.50"></text></g><g><title>__GI___lll_lock_wake (30 samples, 0.03%)</title><rect x="97.6921%" y="693" width="0.0264%" height="15" fill="rgb(211,183,26)" fg:x="110945" fg:w="30"/><text x="97.9421%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (103 samples, 0.09%)</title><rect x="97.7238%" y="709" width="0.0907%" height="15" fill="rgb(232,132,4)" fg:x="110981" fg:w="103"/><text x="97.9738%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (103 samples, 0.09%)</title><rect x="97.7238%" y="693" width="0.0907%" height="15" fill="rgb(253,128,37)" fg:x="110981" fg:w="103"/><text x="97.9738%" y="703.50"></text></g><g><title>std::sync::poison::Flag::get (18 samples, 0.02%)</title><rect x="97.8145%" y="693" width="0.0158%" height="15" fill="rgb(221,58,24)" fg:x="111084" fg:w="18"/><text x="98.0645%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (18 samples, 0.02%)</title><rect x="97.8145%" y="677" width="0.0158%" height="15" fill="rgb(230,54,45)" fg:x="111084" fg:w="18"/><text x="98.0645%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.02%)</title><rect x="97.8145%" y="661" width="0.0158%" height="15" fill="rgb(254,21,18)" fg:x="111084" fg:w="18"/><text x="98.0645%" y="671.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (25 samples, 0.02%)</title><rect x="98.0073%" y="645" width="0.0220%" height="15" fill="rgb(221,108,0)" fg:x="111303" fg:w="25"/><text x="98.2573%" y="655.50"></text></g><g><title>__condvar_confirm_wakeup (31 samples, 0.03%)</title><rect x="98.0293%" y="645" width="0.0273%" height="15" fill="rgb(206,95,1)" fg:x="111328" fg:w="31"/><text x="98.2793%" y="655.50"></text></g><g><title>__condvar_dec_grefs (154 samples, 0.14%)</title><rect x="98.0566%" y="645" width="0.1356%" height="15" fill="rgb(237,52,5)" fg:x="111359" fg:w="154"/><text x="98.3066%" y="655.50"></text></g><g><title>__GI___pthread_disable_asynccancel (27 samples, 0.02%)</title><rect x="98.3613%" y="629" width="0.0238%" height="15" fill="rgb(218,150,34)" fg:x="111705" fg:w="27"/><text x="98.6113%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common (223 samples, 0.20%)</title><rect x="98.1922%" y="645" width="0.1964%" height="15" fill="rgb(235,194,28)" fg:x="111513" fg:w="223"/><text x="98.4422%" y="655.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (679 samples, 0.60%)</title><rect x="97.8312%" y="677" width="0.5979%" height="15" fill="rgb(245,92,18)" fg:x="111103" fg:w="679"/><text x="98.0812%" y="687.50"></text></g><g><title>__GI___pthread_cond_wait (679 samples, 0.60%)</title><rect x="97.8312%" y="661" width="0.5979%" height="15" fill="rgb(253,203,53)" fg:x="111103" fg:w="679"/><text x="98.0812%" y="671.50"></text></g><g><title>__pthread_mutex_cond_lock (35 samples, 0.03%)</title><rect x="98.3983%" y="645" width="0.0308%" height="15" fill="rgb(249,185,47)" fg:x="111747" fg:w="35"/><text x="98.6483%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::wait (718 samples, 0.63%)</title><rect x="97.8145%" y="709" width="0.6322%" height="15" fill="rgb(252,194,52)" fg:x="111084" fg:w="718"/><text x="98.0645%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (700 samples, 0.62%)</title><rect x="97.8303%" y="693" width="0.6164%" height="15" fill="rgb(210,53,36)" fg:x="111102" fg:w="700"/><text x="98.0803%" y="703.50"></text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (20 samples, 0.02%)</title><rect x="98.4291%" y="677" width="0.0176%" height="15" fill="rgb(237,37,25)" fg:x="111782" fg:w="20"/><text x="98.6791%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (19 samples, 0.02%)</title><rect x="98.4300%" y="661" width="0.0167%" height="15" fill="rgb(242,116,27)" fg:x="111783" fg:w="19"/><text x="98.6800%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="98.4300%" y="645" width="0.0167%" height="15" fill="rgb(213,185,26)" fg:x="111783" fg:w="19"/><text x="98.6800%" y="655.50"></text></g><g><title>parking::Parker::park (930 samples, 0.82%)</title><rect x="97.6577%" y="741" width="0.8189%" height="15" fill="rgb(225,204,8)" fg:x="110906" fg:w="930"/><text x="97.9077%" y="751.50"></text></g><g><title>parking::Inner::park (929 samples, 0.82%)</title><rect x="97.6586%" y="725" width="0.8180%" height="15" fill="rgb(254,111,37)" fg:x="110907" fg:w="929"/><text x="97.9086%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (34 samples, 0.03%)</title><rect x="98.4467%" y="709" width="0.0299%" height="15" fill="rgb(242,35,9)" fg:x="111802" fg:w="34"/><text x="98.6967%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (31 samples, 0.03%)</title><rect x="98.4494%" y="693" width="0.0273%" height="15" fill="rgb(232,138,49)" fg:x="111805" fg:w="31"/><text x="98.6994%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (30 samples, 0.03%)</title><rect x="98.4502%" y="677" width="0.0264%" height="15" fill="rgb(247,56,4)" fg:x="111806" fg:w="30"/><text x="98.7002%" y="687.50"></text></g><g><title>___pthread_mutex_lock (30 samples, 0.03%)</title><rect x="98.4502%" y="661" width="0.0264%" height="15" fill="rgb(226,179,17)" fg:x="111806" fg:w="30"/><text x="98.7002%" y="671.50"></text></g><g><title>parking::Parker::park_timeout (228 samples, 0.20%)</title><rect x="98.4767%" y="741" width="0.2008%" height="15" fill="rgb(216,163,45)" fg:x="111836" fg:w="228"/><text x="98.7267%" y="751.50"></text></g><g><title>parking::Inner::park (219 samples, 0.19%)</title><rect x="98.4846%" y="725" width="0.1928%" height="15" fill="rgb(211,157,3)" fg:x="111845" fg:w="219"/><text x="98.7346%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (202 samples, 0.18%)</title><rect x="98.4996%" y="709" width="0.1779%" height="15" fill="rgb(234,44,20)" fg:x="111862" fg:w="202"/><text x="98.7496%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (202 samples, 0.18%)</title><rect x="98.4996%" y="693" width="0.1779%" height="15" fill="rgb(254,138,23)" fg:x="111862" fg:w="202"/><text x="98.7496%" y="703.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (13,016 samples, 11.46%)</title><rect x="87.2656%" y="773" width="11.4612%" height="15" fill="rgb(206,119,39)" fg:x="99104" fg:w="13016"/><text x="87.5156%" y="783.50">async_global_exec..</text></g><g><title>async_io::driver::block_on (13,016 samples, 11.46%)</title><rect x="87.2656%" y="757" width="11.4612%" height="15" fill="rgb(231,105,52)" fg:x="99104" fg:w="13016"/><text x="87.5156%" y="767.50">async_io::driver:..</text></g><g><title>std::time::Instant::now (42 samples, 0.04%)</title><rect x="98.6897%" y="741" width="0.0370%" height="15" fill="rgb(250,20,5)" fg:x="112078" fg:w="42"/><text x="98.9397%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (42 samples, 0.04%)</title><rect x="98.6897%" y="725" width="0.0370%" height="15" fill="rgb(215,198,30)" fg:x="112078" fg:w="42"/><text x="98.9397%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (42 samples, 0.04%)</title><rect x="98.6897%" y="709" width="0.0370%" height="15" fill="rgb(246,142,8)" fg:x="112078" fg:w="42"/><text x="98.9397%" y="719.50"></text></g><g><title>__clock_gettime_2 (37 samples, 0.03%)</title><rect x="98.6942%" y="693" width="0.0326%" height="15" fill="rgb(243,26,38)" fg:x="112083" fg:w="37"/><text x="98.9442%" y="703.50"></text></g><g><title>__vdso_clock_gettime (34 samples, 0.03%)</title><rect x="98.6968%" y="677" width="0.0299%" height="15" fill="rgb(205,133,28)" fg:x="112086" fg:w="34"/><text x="98.9468%" y="687.50"></text></g><g><title>[[vdso]] (15 samples, 0.01%)</title><rect x="98.7135%" y="661" width="0.0132%" height="15" fill="rgb(212,34,0)" fg:x="112105" fg:w="15"/><text x="98.9635%" y="671.50"></text></g><g><title>std::panic::catch_unwind (13,053 samples, 11.49%)</title><rect x="87.2339%" y="1029" width="11.4938%" height="15" fill="rgb(251,226,22)" fg:x="99068" fg:w="13053"/><text x="87.4839%" y="1039.50">std::panic::catch..</text></g><g><title>std::panicking::try (13,053 samples, 11.49%)</title><rect x="87.2339%" y="1013" width="11.4938%" height="15" fill="rgb(252,119,9)" fg:x="99068" fg:w="13053"/><text x="87.4839%" y="1023.50">std::panicking::t..</text></g><g><title>std::panicking::try::do_call (13,053 samples, 11.49%)</title><rect x="87.2339%" y="997" width="11.4938%" height="15" fill="rgb(213,150,50)" fg:x="99068" fg:w="13053"/><text x="87.4839%" y="1007.50">std::panicking::t..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13,053 samples, 11.49%)</title><rect x="87.2339%" y="981" width="11.4938%" height="15" fill="rgb(212,24,39)" fg:x="99068" fg:w="13053"/><text x="87.4839%" y="991.50">&lt;core::panic::unw..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (13,053 samples, 11.49%)</title><rect x="87.2339%" y="965" width="11.4938%" height="15" fill="rgb(213,46,39)" fg:x="99068" fg:w="13053"/><text x="87.4839%" y="975.50">std::thread::Buil..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13,053 samples, 11.49%)</title><rect x="87.2339%" y="949" width="11.4938%" height="15" fill="rgb(239,106,12)" fg:x="99068" fg:w="13053"/><text x="87.4839%" y="959.50">std::sys_common::..</text></g><g><title>core::ops::function::FnOnce::call_once (13,053 samples, 11.49%)</title><rect x="87.2339%" y="933" width="11.4938%" height="15" fill="rgb(249,229,21)" fg:x="99068" fg:w="13053"/><text x="87.4839%" y="943.50">core::ops::functi..</text></g><g><title>async_global_executor::threading::thread_main_loop (13,053 samples, 11.49%)</title><rect x="87.2339%" y="917" width="11.4938%" height="15" fill="rgb(212,158,3)" fg:x="99068" fg:w="13053"/><text x="87.4839%" y="927.50">async_global_exec..</text></g><g><title>std::panic::catch_unwind (13,017 samples, 11.46%)</title><rect x="87.2656%" y="901" width="11.4621%" height="15" fill="rgb(253,26,48)" fg:x="99104" fg:w="13017"/><text x="87.5156%" y="911.50">std::panic::catch..</text></g><g><title>std::panicking::try (13,017 samples, 11.46%)</title><rect x="87.2656%" y="885" width="11.4621%" height="15" fill="rgb(238,178,20)" fg:x="99104" fg:w="13017"/><text x="87.5156%" y="895.50">std::panicking::t..</text></g><g><title>std::panicking::try::do_call (13,017 samples, 11.46%)</title><rect x="87.2656%" y="869" width="11.4621%" height="15" fill="rgb(208,86,15)" fg:x="99104" fg:w="13017"/><text x="87.5156%" y="879.50">std::panicking::t..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (13,017 samples, 11.46%)</title><rect x="87.2656%" y="853" width="11.4621%" height="15" fill="rgb(239,42,53)" fg:x="99104" fg:w="13017"/><text x="87.5156%" y="863.50">async_global_exec..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13,017 samples, 11.46%)</title><rect x="87.2656%" y="837" width="11.4621%" height="15" fill="rgb(245,226,8)" fg:x="99104" fg:w="13017"/><text x="87.5156%" y="847.50">std::thread::loca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,017 samples, 11.46%)</title><rect x="87.2656%" y="821" width="11.4621%" height="15" fill="rgb(216,176,32)" fg:x="99104" fg:w="13017"/><text x="87.5156%" y="831.50">std::thread::loca..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (13,017 samples, 11.46%)</title><rect x="87.2656%" y="805" width="11.4621%" height="15" fill="rgb(231,186,21)" fg:x="99104" fg:w="13017"/><text x="87.5156%" y="815.50">async_global_exec..</text></g><g><title>async_global_executor::reactor::block_on (13,017 samples, 11.46%)</title><rect x="87.2656%" y="789" width="11.4621%" height="15" fill="rgb(205,95,49)" fg:x="99104" fg:w="13017"/><text x="87.5156%" y="799.50">async_global_exec..</text></g><g><title>__GI___clone (13,080 samples, 11.52%)</title><rect x="87.2162%" y="1141" width="11.5175%" height="15" fill="rgb(217,145,8)" fg:x="99048" fg:w="13080"/><text x="87.4662%" y="1151.50">__GI___clone</text></g><g><title>start_thread (13,063 samples, 11.50%)</title><rect x="87.2312%" y="1125" width="11.5026%" height="15" fill="rgb(239,144,48)" fg:x="99065" fg:w="13063"/><text x="87.4812%" y="1135.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (13,060 samples, 11.50%)</title><rect x="87.2339%" y="1109" width="11.4999%" height="15" fill="rgb(214,189,23)" fg:x="99068" fg:w="13060"/><text x="87.4839%" y="1119.50">std::sys::unix::t..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13,060 samples, 11.50%)</title><rect x="87.2339%" y="1093" width="11.4999%" height="15" fill="rgb(229,157,17)" fg:x="99068" fg:w="13060"/><text x="87.4839%" y="1103.50">&lt;alloc::boxed::Bo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13,060 samples, 11.50%)</title><rect x="87.2339%" y="1077" width="11.4999%" height="15" fill="rgb(230,5,48)" fg:x="99068" fg:w="13060"/><text x="87.4839%" y="1087.50">&lt;alloc::boxed::Bo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (13,060 samples, 11.50%)</title><rect x="87.2339%" y="1061" width="11.4999%" height="15" fill="rgb(224,156,48)" fg:x="99068" fg:w="13060"/><text x="87.4839%" y="1071.50">core::ops::functi..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (13,060 samples, 11.50%)</title><rect x="87.2339%" y="1045" width="11.4999%" height="15" fill="rgb(223,14,29)" fg:x="99068" fg:w="13060"/><text x="87.4839%" y="1055.50">std::thread::Buil..</text></g><g><title>__clock_gettime_2 (31 samples, 0.03%)</title><rect x="98.7470%" y="1141" width="0.0273%" height="15" fill="rgb(229,96,36)" fg:x="112143" fg:w="31"/><text x="98.9970%" y="1151.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (27 samples, 0.02%)</title><rect x="98.7884%" y="1141" width="0.0238%" height="15" fill="rgb(231,102,53)" fg:x="112190" fg:w="27"/><text x="99.0384%" y="1151.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (12 samples, 0.01%)</title><rect x="98.8130%" y="1141" width="0.0106%" height="15" fill="rgb(210,77,38)" fg:x="112218" fg:w="12"/><text x="99.0630%" y="1151.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (14 samples, 0.01%)</title><rect x="98.8236%" y="1125" width="0.0123%" height="15" fill="rgb(235,131,6)" fg:x="112230" fg:w="14"/><text x="99.0736%" y="1135.50"></text></g><g><title>anon.1fee94cbc9cd1464b31270186276884a.202.llvm.15394472242377914703 (16 samples, 0.01%)</title><rect x="98.8236%" y="1141" width="0.0141%" height="15" fill="rgb(252,55,38)" fg:x="112230" fg:w="16"/><text x="99.0736%" y="1151.50"></text></g><g><title>anon.1fee94cbc9cd1464b31270186276884a.203.llvm.15394472242377914703 (41 samples, 0.04%)</title><rect x="98.8377%" y="1141" width="0.0361%" height="15" fill="rgb(246,38,14)" fg:x="112246" fg:w="41"/><text x="99.0877%" y="1151.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="98.8615%" y="1125" width="0.0123%" height="15" fill="rgb(242,27,5)" fg:x="112273" fg:w="14"/><text x="99.1115%" y="1135.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (25 samples, 0.02%)</title><rect x="98.8826%" y="1125" width="0.0220%" height="15" fill="rgb(228,65,35)" fg:x="112297" fg:w="25"/><text x="99.1326%" y="1135.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="98.9046%" y="1125" width="0.0255%" height="15" fill="rgb(245,93,11)" fg:x="112322" fg:w="29"/><text x="99.1546%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (19 samples, 0.02%)</title><rect x="98.9301%" y="1125" width="0.0167%" height="15" fill="rgb(213,1,31)" fg:x="112351" fg:w="19"/><text x="99.1801%" y="1135.50"></text></g><g><title>anon.385eb99e056c80ae7804e6b8cb07ae89.33.llvm.10999518732910691693 (80 samples, 0.07%)</title><rect x="98.8826%" y="1141" width="0.0704%" height="15" fill="rgb(237,205,14)" fg:x="112297" fg:w="80"/><text x="99.1326%" y="1151.50"></text></g><g><title>anon.5e2e0b53a489f0906627c4095b80fb6b.446.llvm.11845379862401193500 (29 samples, 0.03%)</title><rect x="98.9539%" y="1141" width="0.0255%" height="15" fill="rgb(232,118,45)" fg:x="112378" fg:w="29"/><text x="99.2039%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (29 samples, 0.03%)</title><rect x="98.9539%" y="1125" width="0.0255%" height="15" fill="rgb(218,5,6)" fg:x="112378" fg:w="29"/><text x="99.2039%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (21 samples, 0.02%)</title><rect x="98.9610%" y="1109" width="0.0185%" height="15" fill="rgb(251,87,51)" fg:x="112386" fg:w="21"/><text x="99.2110%" y="1119.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (33 samples, 0.03%)</title><rect x="98.9847%" y="1125" width="0.0291%" height="15" fill="rgb(207,225,20)" fg:x="112413" fg:w="33"/><text x="99.2347%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (25 samples, 0.02%)</title><rect x="99.0235%" y="1125" width="0.0220%" height="15" fill="rgb(222,78,54)" fg:x="112457" fg:w="25"/><text x="99.2735%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (40 samples, 0.04%)</title><rect x="99.0481%" y="1125" width="0.0352%" height="15" fill="rgb(232,85,16)" fg:x="112485" fg:w="40"/><text x="99.2981%" y="1135.50"></text></g><g><title>rust_alloc (17 samples, 0.01%)</title><rect x="99.0834%" y="1125" width="0.0150%" height="15" fill="rgb(244,25,33)" fg:x="112525" fg:w="17"/><text x="99.3334%" y="1135.50"></text></g><g><title>anon.766eceb1ace0ff057734d890108c4d7c.282.llvm.2146512597063358360 (130 samples, 0.11%)</title><rect x="98.9847%" y="1141" width="0.1145%" height="15" fill="rgb(233,24,36)" fg:x="112413" fg:w="130"/><text x="99.2347%" y="1151.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="99.1106%" y="1125" width="0.0194%" height="15" fill="rgb(253,49,54)" fg:x="112556" fg:w="22"/><text x="99.3606%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="99.1300%" y="1125" width="0.0114%" height="15" fill="rgb(245,12,22)" fg:x="112578" fg:w="13"/><text x="99.3800%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (13 samples, 0.01%)</title><rect x="99.1415%" y="1125" width="0.0114%" height="15" fill="rgb(253,141,28)" fg:x="112591" fg:w="13"/><text x="99.3915%" y="1135.50"></text></g><g><title>anon.95c97727e17c57a3bb13bf7b04e604e6.2418.llvm.15311789802968813336 (51 samples, 0.04%)</title><rect x="99.1106%" y="1141" width="0.0449%" height="15" fill="rgb(225,207,27)" fg:x="112556" fg:w="51"/><text x="99.3606%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="99.1855%" y="1125" width="0.0176%" height="15" fill="rgb(220,84,2)" fg:x="112641" fg:w="20"/><text x="99.4355%" y="1135.50"></text></g><g><title>anon.d22d9956963e8ad988d59723773a7312.1.llvm.10361100436754576773 (67 samples, 0.06%)</title><rect x="99.1626%" y="1141" width="0.0590%" height="15" fill="rgb(224,37,37)" fg:x="112615" fg:w="67"/><text x="99.4126%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (21 samples, 0.02%)</title><rect x="99.2031%" y="1125" width="0.0185%" height="15" fill="rgb(220,143,18)" fg:x="112661" fg:w="21"/><text x="99.4531%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (13 samples, 0.01%)</title><rect x="99.2260%" y="1141" width="0.0114%" height="15" fill="rgb(210,88,33)" fg:x="112687" fg:w="13"/><text x="99.4760%" y="1151.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (23 samples, 0.02%)</title><rect x="99.2374%" y="1141" width="0.0203%" height="15" fill="rgb(219,87,51)" fg:x="112700" fg:w="23"/><text x="99.4874%" y="1151.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (14 samples, 0.01%)</title><rect x="99.2577%" y="1141" width="0.0123%" height="15" fill="rgb(211,7,35)" fg:x="112723" fg:w="14"/><text x="99.5077%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (122 samples, 0.11%)</title><rect x="99.2727%" y="1141" width="0.1074%" height="15" fill="rgb(232,77,2)" fg:x="112740" fg:w="122"/><text x="99.5227%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (122 samples, 0.11%)</title><rect x="99.2727%" y="1125" width="0.1074%" height="15" fill="rgb(249,94,25)" fg:x="112740" fg:w="122"/><text x="99.5227%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (37 samples, 0.03%)</title><rect x="99.3801%" y="1141" width="0.0326%" height="15" fill="rgb(215,112,2)" fg:x="112862" fg:w="37"/><text x="99.6301%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (25 samples, 0.02%)</title><rect x="99.4188%" y="1093" width="0.0220%" height="15" fill="rgb(226,115,48)" fg:x="112906" fg:w="25"/><text x="99.6688%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (25 samples, 0.02%)</title><rect x="99.4188%" y="1077" width="0.0220%" height="15" fill="rgb(249,196,10)" fg:x="112906" fg:w="25"/><text x="99.6688%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (25 samples, 0.02%)</title><rect x="99.4188%" y="1061" width="0.0220%" height="15" fill="rgb(237,109,14)" fg:x="112906" fg:w="25"/><text x="99.6688%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (42 samples, 0.04%)</title><rect x="99.4188%" y="1125" width="0.0370%" height="15" fill="rgb(217,103,53)" fg:x="112906" fg:w="42"/><text x="99.6688%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (42 samples, 0.04%)</title><rect x="99.4188%" y="1109" width="0.0370%" height="15" fill="rgb(244,137,9)" fg:x="112906" fg:w="42"/><text x="99.6688%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (17 samples, 0.01%)</title><rect x="99.4409%" y="1093" width="0.0150%" height="15" fill="rgb(227,201,3)" fg:x="112931" fg:w="17"/><text x="99.6909%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (17 samples, 0.01%)</title><rect x="99.4409%" y="1077" width="0.0150%" height="15" fill="rgb(243,94,6)" fg:x="112931" fg:w="17"/><text x="99.6909%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (37 samples, 0.03%)</title><rect x="99.4558%" y="1125" width="0.0326%" height="15" fill="rgb(235,118,5)" fg:x="112948" fg:w="37"/><text x="99.7058%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (37 samples, 0.03%)</title><rect x="99.4558%" y="1109" width="0.0326%" height="15" fill="rgb(247,10,30)" fg:x="112948" fg:w="37"/><text x="99.7058%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (37 samples, 0.03%)</title><rect x="99.4558%" y="1093" width="0.0326%" height="15" fill="rgb(205,26,28)" fg:x="112948" fg:w="37"/><text x="99.7058%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (128 samples, 0.11%)</title><rect x="99.4127%" y="1141" width="0.1127%" height="15" fill="rgb(206,99,35)" fg:x="112899" fg:w="128"/><text x="99.6627%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (42 samples, 0.04%)</title><rect x="99.4884%" y="1125" width="0.0370%" height="15" fill="rgb(238,130,40)" fg:x="112985" fg:w="42"/><text x="99.7384%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (27 samples, 0.02%)</title><rect x="99.5016%" y="1109" width="0.0238%" height="15" fill="rgb(224,126,31)" fg:x="113000" fg:w="27"/><text x="99.7516%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (27 samples, 0.02%)</title><rect x="99.5016%" y="1093" width="0.0238%" height="15" fill="rgb(254,105,17)" fg:x="113000" fg:w="27"/><text x="99.7516%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (84 samples, 0.07%)</title><rect x="99.5254%" y="1141" width="0.0740%" height="15" fill="rgb(216,87,36)" fg:x="113027" fg:w="84"/><text x="99.7754%" y="1151.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (17 samples, 0.01%)</title><rect x="99.6196%" y="1141" width="0.0150%" height="15" fill="rgb(240,21,12)" fg:x="113134" fg:w="17"/><text x="99.8696%" y="1151.50"></text></g><g><title>tremor_common::time::nanotime (12 samples, 0.01%)</title><rect x="99.6381%" y="1141" width="0.0106%" height="15" fill="rgb(245,192,34)" fg:x="113155" fg:w="12"/><text x="99.8881%" y="1151.50"></text></g><g><title>std::time::SystemTime::now (12 samples, 0.01%)</title><rect x="99.6381%" y="1125" width="0.0106%" height="15" fill="rgb(226,100,49)" fg:x="113155" fg:w="12"/><text x="99.8881%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (12 samples, 0.01%)</title><rect x="99.6381%" y="1109" width="0.0106%" height="15" fill="rgb(245,188,27)" fg:x="113155" fg:w="12"/><text x="99.8881%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::now (12 samples, 0.01%)</title><rect x="99.6381%" y="1093" width="0.0106%" height="15" fill="rgb(212,170,8)" fg:x="113155" fg:w="12"/><text x="99.8881%" y="1103.50"></text></g><g><title>async-std/runti (113,108 samples, 99.60%)</title><rect x="0.0528%" y="1157" width="99.5967%" height="15" fill="rgb(217,113,29)" fg:x="60" fg:w="113108"/><text x="0.3028%" y="1167.50">async-std/runti</text></g><g><title>blocking-1 (18 samples, 0.02%)</title><rect x="99.6495%" y="1157" width="0.0158%" height="15" fill="rgb(237,30,3)" fg:x="113168" fg:w="18"/><text x="99.8995%" y="1167.50"></text></g><g><title>__GI___clone (17 samples, 0.01%)</title><rect x="99.6504%" y="1141" width="0.0150%" height="15" fill="rgb(227,19,28)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="1151.50"></text></g><g><title>start_thread (17 samples, 0.01%)</title><rect x="99.6504%" y="1125" width="0.0150%" height="15" fill="rgb(239,172,45)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (17 samples, 0.01%)</title><rect x="99.6504%" y="1109" width="0.0150%" height="15" fill="rgb(254,55,39)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.01%)</title><rect x="99.6504%" y="1093" width="0.0150%" height="15" fill="rgb(249,208,12)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.01%)</title><rect x="99.6504%" y="1077" width="0.0150%" height="15" fill="rgb(240,52,13)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (17 samples, 0.01%)</title><rect x="99.6504%" y="1061" width="0.0150%" height="15" fill="rgb(252,149,13)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (17 samples, 0.01%)</title><rect x="99.6504%" y="1045" width="0.0150%" height="15" fill="rgb(232,81,48)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.01%)</title><rect x="99.6504%" y="1029" width="0.0150%" height="15" fill="rgb(222,144,2)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="1039.50"></text></g><g><title>std::panicking::try (17 samples, 0.01%)</title><rect x="99.6504%" y="1013" width="0.0150%" height="15" fill="rgb(216,81,32)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.01%)</title><rect x="99.6504%" y="997" width="0.0150%" height="15" fill="rgb(244,78,51)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.01%)</title><rect x="99.6504%" y="981" width="0.0150%" height="15" fill="rgb(217,66,21)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (17 samples, 0.01%)</title><rect x="99.6504%" y="965" width="0.0150%" height="15" fill="rgb(247,101,42)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 0.01%)</title><rect x="99.6504%" y="949" width="0.0150%" height="15" fill="rgb(227,81,39)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="959.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (17 samples, 0.01%)</title><rect x="99.6504%" y="933" width="0.0150%" height="15" fill="rgb(220,223,44)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="943.50"></text></g><g><title>blocking::Executor::main_loop (17 samples, 0.01%)</title><rect x="99.6504%" y="917" width="0.0150%" height="15" fill="rgb(205,218,2)" fg:x="113169" fg:w="17"/><text x="99.9004%" y="927.50"></text></g><g><title>blocking-2 (16 samples, 0.01%)</title><rect x="99.6654%" y="1157" width="0.0141%" height="15" fill="rgb(212,207,28)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="1167.50"></text></g><g><title>__GI___clone (16 samples, 0.01%)</title><rect x="99.6654%" y="1141" width="0.0141%" height="15" fill="rgb(224,12,41)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="1151.50"></text></g><g><title>start_thread (16 samples, 0.01%)</title><rect x="99.6654%" y="1125" width="0.0141%" height="15" fill="rgb(216,118,12)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (16 samples, 0.01%)</title><rect x="99.6654%" y="1109" width="0.0141%" height="15" fill="rgb(252,97,46)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (16 samples, 0.01%)</title><rect x="99.6654%" y="1093" width="0.0141%" height="15" fill="rgb(244,206,19)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (16 samples, 0.01%)</title><rect x="99.6654%" y="1077" width="0.0141%" height="15" fill="rgb(231,84,31)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (16 samples, 0.01%)</title><rect x="99.6654%" y="1061" width="0.0141%" height="15" fill="rgb(244,133,0)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (16 samples, 0.01%)</title><rect x="99.6654%" y="1045" width="0.0141%" height="15" fill="rgb(223,15,50)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.01%)</title><rect x="99.6654%" y="1029" width="0.0141%" height="15" fill="rgb(250,118,49)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="1039.50"></text></g><g><title>std::panicking::try (16 samples, 0.01%)</title><rect x="99.6654%" y="1013" width="0.0141%" height="15" fill="rgb(248,25,38)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.01%)</title><rect x="99.6654%" y="997" width="0.0141%" height="15" fill="rgb(215,70,14)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.01%)</title><rect x="99.6654%" y="981" width="0.0141%" height="15" fill="rgb(215,28,15)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (16 samples, 0.01%)</title><rect x="99.6654%" y="965" width="0.0141%" height="15" fill="rgb(243,6,28)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (16 samples, 0.01%)</title><rect x="99.6654%" y="949" width="0.0141%" height="15" fill="rgb(222,130,1)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="959.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (16 samples, 0.01%)</title><rect x="99.6654%" y="933" width="0.0141%" height="15" fill="rgb(236,166,44)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="943.50"></text></g><g><title>blocking::Executor::main_loop (16 samples, 0.01%)</title><rect x="99.6654%" y="917" width="0.0141%" height="15" fill="rgb(221,108,14)" fg:x="113186" fg:w="16"/><text x="99.9154%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (15 samples, 0.01%)</title><rect x="99.6663%" y="901" width="0.0132%" height="15" fill="rgb(252,3,45)" fg:x="113187" fg:w="15"/><text x="99.9163%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (15 samples, 0.01%)</title><rect x="99.6663%" y="885" width="0.0132%" height="15" fill="rgb(237,68,30)" fg:x="113187" fg:w="15"/><text x="99.9163%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (15 samples, 0.01%)</title><rect x="99.6663%" y="869" width="0.0132%" height="15" fill="rgb(211,79,22)" fg:x="113187" fg:w="15"/><text x="99.9163%" y="879.50"></text></g><g><title>___pthread_cond_timedwait (15 samples, 0.01%)</title><rect x="99.6663%" y="853" width="0.0132%" height="15" fill="rgb(252,185,21)" fg:x="113187" fg:w="15"/><text x="99.9163%" y="863.50"></text></g><g><title>__futex_abstimed_wait_common (13 samples, 0.01%)</title><rect x="99.6680%" y="837" width="0.0114%" height="15" fill="rgb(225,189,26)" fg:x="113189" fg:w="13"/><text x="99.9180%" y="847.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (81 samples, 0.07%)</title><rect x="99.6848%" y="901" width="0.0713%" height="15" fill="rgb(241,30,40)" fg:x="113208" fg:w="81"/><text x="99.9348%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (81 samples, 0.07%)</title><rect x="99.6848%" y="885" width="0.0713%" height="15" fill="rgb(235,215,44)" fg:x="113208" fg:w="81"/><text x="99.9348%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (81 samples, 0.07%)</title><rect x="99.6848%" y="869" width="0.0713%" height="15" fill="rgb(205,8,29)" fg:x="113208" fg:w="81"/><text x="99.9348%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (81 samples, 0.07%)</title><rect x="99.6848%" y="853" width="0.0713%" height="15" fill="rgb(241,137,42)" fg:x="113208" fg:w="81"/><text x="99.9348%" y="863.50"></text></g><g><title>___pthread_mutex_lock (81 samples, 0.07%)</title><rect x="99.6848%" y="837" width="0.0713%" height="15" fill="rgb(237,155,2)" fg:x="113208" fg:w="81"/><text x="99.9348%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (80 samples, 0.07%)</title><rect x="99.6856%" y="821" width="0.0704%" height="15" fill="rgb(245,29,42)" fg:x="113209" fg:w="80"/><text x="99.9356%" y="831.50"></text></g><g><title>std::panic::catch_unwind (84 samples, 0.07%)</title><rect x="99.6839%" y="1029" width="0.0740%" height="15" fill="rgb(234,101,35)" fg:x="113207" fg:w="84"/><text x="99.9339%" y="1039.50"></text></g><g><title>std::panicking::try (84 samples, 0.07%)</title><rect x="99.6839%" y="1013" width="0.0740%" height="15" fill="rgb(228,64,37)" fg:x="113207" fg:w="84"/><text x="99.9339%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (84 samples, 0.07%)</title><rect x="99.6839%" y="997" width="0.0740%" height="15" fill="rgb(217,214,36)" fg:x="113207" fg:w="84"/><text x="99.9339%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (84 samples, 0.07%)</title><rect x="99.6839%" y="981" width="0.0740%" height="15" fill="rgb(243,70,3)" fg:x="113207" fg:w="84"/><text x="99.9339%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (84 samples, 0.07%)</title><rect x="99.6839%" y="965" width="0.0740%" height="15" fill="rgb(253,158,52)" fg:x="113207" fg:w="84"/><text x="99.9339%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (84 samples, 0.07%)</title><rect x="99.6839%" y="949" width="0.0740%" height="15" fill="rgb(234,111,54)" fg:x="113207" fg:w="84"/><text x="99.9339%" y="959.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (84 samples, 0.07%)</title><rect x="99.6839%" y="933" width="0.0740%" height="15" fill="rgb(217,70,32)" fg:x="113207" fg:w="84"/><text x="99.9339%" y="943.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (84 samples, 0.07%)</title><rect x="99.6839%" y="917" width="0.0740%" height="15" fill="rgb(234,18,33)" fg:x="113207" fg:w="84"/><text x="99.9339%" y="927.50"></text></g><g><title>tokio-runtime-w (86 samples, 0.08%)</title><rect x="99.6839%" y="1157" width="0.0757%" height="15" fill="rgb(234,12,49)" fg:x="113207" fg:w="86"/><text x="99.9339%" y="1167.50"></text></g><g><title>__GI___clone (86 samples, 0.08%)</title><rect x="99.6839%" y="1141" width="0.0757%" height="15" fill="rgb(236,10,21)" fg:x="113207" fg:w="86"/><text x="99.9339%" y="1151.50"></text></g><g><title>start_thread (86 samples, 0.08%)</title><rect x="99.6839%" y="1125" width="0.0757%" height="15" fill="rgb(248,182,45)" fg:x="113207" fg:w="86"/><text x="99.9339%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (86 samples, 0.08%)</title><rect x="99.6839%" y="1109" width="0.0757%" height="15" fill="rgb(217,95,36)" fg:x="113207" fg:w="86"/><text x="99.9339%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (86 samples, 0.08%)</title><rect x="99.6839%" y="1093" width="0.0757%" height="15" fill="rgb(212,110,31)" fg:x="113207" fg:w="86"/><text x="99.9339%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (86 samples, 0.08%)</title><rect x="99.6839%" y="1077" width="0.0757%" height="15" fill="rgb(206,32,53)" fg:x="113207" fg:w="86"/><text x="99.9339%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (86 samples, 0.08%)</title><rect x="99.6839%" y="1061" width="0.0757%" height="15" fill="rgb(246,141,37)" fg:x="113207" fg:w="86"/><text x="99.9339%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (86 samples, 0.08%)</title><rect x="99.6839%" y="1045" width="0.0757%" height="15" fill="rgb(219,16,7)" fg:x="113207" fg:w="86"/><text x="99.9339%" y="1055.50"></text></g><g><title>__GI___clone (253 samples, 0.22%)</title><rect x="99.7675%" y="1141" width="0.2228%" height="15" fill="rgb(230,205,45)" fg:x="113302" fg:w="253"/><text x="100.0175%" y="1151.50"></text></g><g><title>start_thread (23 samples, 0.02%)</title><rect x="99.9701%" y="1125" width="0.0203%" height="15" fill="rgb(231,43,49)" fg:x="113532" fg:w="23"/><text x="100.2201%" y="1135.50"></text></g><g><title>all (113,566 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(212,106,34)" fg:x="0" fg:w="113566"/><text x="0.2500%" y="1183.50"></text></g><g><title>tremor-pdk-half (273 samples, 0.24%)</title><rect x="99.7596%" y="1157" width="0.2404%" height="15" fill="rgb(206,83,17)" fg:x="113293" fg:w="273"/><text x="100.0096%" y="1167.50"></text></g></svg></svg>