<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="110798"><g><title>__futex_abstimed_wait_common (28 samples, 0.03%)</title><rect x="0.0235%" y="805" width="0.0253%" height="15" fill="rgb(227,0,7)" fg:x="26" fg:w="28"/><text x="0.2735%" y="815.50"></text></g><g><title>___pthread_cond_timedwait (32 samples, 0.03%)</title><rect x="0.0208%" y="821" width="0.0289%" height="15" fill="rgb(217,0,24)" fg:x="23" fg:w="32"/><text x="0.2708%" y="831.50"></text></g><g><title>async-io (54 samples, 0.05%)</title><rect x="0.0018%" y="1157" width="0.0487%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="54"/><text x="0.2518%" y="1167.50"></text></g><g><title>__GI___clone (51 samples, 0.05%)</title><rect x="0.0045%" y="1141" width="0.0460%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="51"/><text x="0.2545%" y="1151.50"></text></g><g><title>start_thread (51 samples, 0.05%)</title><rect x="0.0045%" y="1125" width="0.0460%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="51"/><text x="0.2545%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (51 samples, 0.05%)</title><rect x="0.0045%" y="1109" width="0.0460%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="51"/><text x="0.2545%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (51 samples, 0.05%)</title><rect x="0.0045%" y="1093" width="0.0460%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="51"/><text x="0.2545%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (51 samples, 0.05%)</title><rect x="0.0045%" y="1077" width="0.0460%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="51"/><text x="0.2545%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (51 samples, 0.05%)</title><rect x="0.0045%" y="1061" width="0.0460%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="51"/><text x="0.2545%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (51 samples, 0.05%)</title><rect x="0.0045%" y="1045" width="0.0460%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="51"/><text x="0.2545%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (51 samples, 0.05%)</title><rect x="0.0045%" y="1029" width="0.0460%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="51"/><text x="0.2545%" y="1039.50"></text></g><g><title>std::panicking::try (51 samples, 0.05%)</title><rect x="0.0045%" y="1013" width="0.0460%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="51"/><text x="0.2545%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (51 samples, 0.05%)</title><rect x="0.0045%" y="997" width="0.0460%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="51"/><text x="0.2545%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (51 samples, 0.05%)</title><rect x="0.0045%" y="981" width="0.0460%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="51"/><text x="0.2545%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (51 samples, 0.05%)</title><rect x="0.0045%" y="965" width="0.0460%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="51"/><text x="0.2545%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (51 samples, 0.05%)</title><rect x="0.0045%" y="949" width="0.0460%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="51"/><text x="0.2545%" y="959.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (51 samples, 0.05%)</title><rect x="0.0045%" y="933" width="0.0460%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="51"/><text x="0.2545%" y="943.50"></text></g><g><title>async_io::driver::main_loop (51 samples, 0.05%)</title><rect x="0.0045%" y="917" width="0.0460%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="51"/><text x="0.2545%" y="927.50"></text></g><g><title>parking::Parker::park_timeout (39 samples, 0.04%)</title><rect x="0.0153%" y="901" width="0.0352%" height="15" fill="rgb(221,200,47)" fg:x="17" fg:w="39"/><text x="0.2653%" y="911.50"></text></g><g><title>parking::Inner::park (39 samples, 0.04%)</title><rect x="0.0153%" y="885" width="0.0352%" height="15" fill="rgb(226,26,5)" fg:x="17" fg:w="39"/><text x="0.2653%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (37 samples, 0.03%)</title><rect x="0.0171%" y="869" width="0.0334%" height="15" fill="rgb(249,33,26)" fg:x="19" fg:w="37"/><text x="0.2671%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (36 samples, 0.03%)</title><rect x="0.0181%" y="853" width="0.0325%" height="15" fill="rgb(235,183,28)" fg:x="20" fg:w="36"/><text x="0.2681%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (36 samples, 0.03%)</title><rect x="0.0181%" y="837" width="0.0325%" height="15" fill="rgb(221,5,38)" fg:x="20" fg:w="36"/><text x="0.2681%" y="847.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (55 samples, 0.05%)</title><rect x="0.3944%" y="1141" width="0.0496%" height="15" fill="rgb(247,18,42)" fg:x="437" fg:w="55"/><text x="0.6444%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="0.4441%" y="1141" width="0.0181%" height="15" fill="rgb(241,131,45)" fg:x="492" fg:w="20"/><text x="0.6941%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.07%)</title><rect x="0.4702%" y="1141" width="0.0731%" height="15" fill="rgb(249,31,29)" fg:x="521" fg:w="81"/><text x="0.7202%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (81 samples, 0.07%)</title><rect x="0.4702%" y="1125" width="0.0731%" height="15" fill="rgb(225,111,53)" fg:x="521" fg:w="81"/><text x="0.7202%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="0.5496%" y="1125" width="0.0253%" height="15" fill="rgb(238,160,17)" fg:x="609" fg:w="28"/><text x="0.7996%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="0.5749%" y="1125" width="0.0343%" height="15" fill="rgb(214,148,48)" fg:x="637" fg:w="38"/><text x="0.8249%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (20 samples, 0.02%)</title><rect x="0.5912%" y="1109" width="0.0181%" height="15" fill="rgb(232,36,49)" fg:x="655" fg:w="20"/><text x="0.8412%" y="1119.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="0.5912%" y="1093" width="0.0181%" height="15" fill="rgb(209,103,24)" fg:x="655" fg:w="20"/><text x="0.8412%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (20 samples, 0.02%)</title><rect x="0.5912%" y="1077" width="0.0181%" height="15" fill="rgb(229,88,8)" fg:x="655" fg:w="20"/><text x="0.8412%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="0.5912%" y="1061" width="0.0181%" height="15" fill="rgb(213,181,19)" fg:x="655" fg:w="20"/><text x="0.8412%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="0.5912%" y="1045" width="0.0181%" height="15" fill="rgb(254,191,54)" fg:x="655" fg:w="20"/><text x="0.8412%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="0.5912%" y="1029" width="0.0181%" height="15" fill="rgb(241,83,37)" fg:x="655" fg:w="20"/><text x="0.8412%" y="1039.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="0.5912%" y="1013" width="0.0181%" height="15" fill="rgb(233,36,39)" fg:x="655" fg:w="20"/><text x="0.8412%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="0.5912%" y="997" width="0.0181%" height="15" fill="rgb(226,3,54)" fg:x="655" fg:w="20"/><text x="0.8412%" y="1007.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (103 samples, 0.09%)</title><rect x="0.6092%" y="1125" width="0.0930%" height="15" fill="rgb(245,192,40)" fg:x="675" fg:w="103"/><text x="0.8592%" y="1135.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="0.7022%" y="1125" width="0.0190%" height="15" fill="rgb(238,167,29)" fg:x="778" fg:w="21"/><text x="0.9522%" y="1135.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (14 samples, 0.01%)</title><rect x="0.7816%" y="1093" width="0.0126%" height="15" fill="rgb(232,182,51)" fg:x="866" fg:w="14"/><text x="1.0316%" y="1103.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (24 samples, 0.02%)</title><rect x="0.7816%" y="1109" width="0.0217%" height="15" fill="rgb(231,60,39)" fg:x="866" fg:w="24"/><text x="1.0316%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (57 samples, 0.05%)</title><rect x="0.8033%" y="1109" width="0.0514%" height="15" fill="rgb(208,69,12)" fg:x="890" fg:w="57"/><text x="1.0533%" y="1119.50"></text></g><g><title>core::mem::replace (57 samples, 0.05%)</title><rect x="0.8033%" y="1093" width="0.0514%" height="15" fill="rgb(235,93,37)" fg:x="890" fg:w="57"/><text x="1.0533%" y="1103.50"></text></g><g><title>core::ptr::read (57 samples, 0.05%)</title><rect x="0.8033%" y="1077" width="0.0514%" height="15" fill="rgb(213,116,39)" fg:x="890" fg:w="57"/><text x="1.0533%" y="1087.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (152 samples, 0.14%)</title><rect x="0.7211%" y="1125" width="0.1372%" height="15" fill="rgb(222,207,29)" fg:x="799" fg:w="152"/><text x="0.9711%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (76 samples, 0.07%)</title><rect x="1.2942%" y="1093" width="0.0686%" height="15" fill="rgb(206,96,30)" fg:x="1434" fg:w="76"/><text x="1.5442%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (76 samples, 0.07%)</title><rect x="1.2942%" y="1077" width="0.0686%" height="15" fill="rgb(218,138,4)" fg:x="1434" fg:w="76"/><text x="1.5442%" y="1087.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (154 samples, 0.14%)</title><rect x="1.2383%" y="1109" width="0.1390%" height="15" fill="rgb(250,191,14)" fg:x="1372" fg:w="154"/><text x="1.4883%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (16 samples, 0.01%)</title><rect x="1.3628%" y="1093" width="0.0144%" height="15" fill="rgb(239,60,40)" fg:x="1510" fg:w="16"/><text x="1.6128%" y="1103.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="1.3773%" y="1093" width="0.0271%" height="15" fill="rgb(206,27,48)" fg:x="1526" fg:w="30"/><text x="1.6273%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="1.3827%" y="1077" width="0.0217%" height="15" fill="rgb(225,35,8)" fg:x="1532" fg:w="24"/><text x="1.6327%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (24 samples, 0.02%)</title><rect x="1.3827%" y="1061" width="0.0217%" height="15" fill="rgb(250,213,24)" fg:x="1532" fg:w="24"/><text x="1.6327%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (24 samples, 0.02%)</title><rect x="1.3827%" y="1045" width="0.0217%" height="15" fill="rgb(247,123,22)" fg:x="1532" fg:w="24"/><text x="1.6327%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (24 samples, 0.02%)</title><rect x="1.3827%" y="1029" width="0.0217%" height="15" fill="rgb(231,138,38)" fg:x="1532" fg:w="24"/><text x="1.6327%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.02%)</title><rect x="1.3827%" y="1013" width="0.0217%" height="15" fill="rgb(231,145,46)" fg:x="1532" fg:w="24"/><text x="1.6327%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.02%)</title><rect x="1.3827%" y="997" width="0.0217%" height="15" fill="rgb(251,118,11)" fg:x="1532" fg:w="24"/><text x="1.6327%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.02%)</title><rect x="1.3827%" y="981" width="0.0217%" height="15" fill="rgb(217,147,25)" fg:x="1532" fg:w="24"/><text x="1.6327%" y="991.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (17 samples, 0.02%)</title><rect x="1.3890%" y="965" width="0.0153%" height="15" fill="rgb(247,81,37)" fg:x="1539" fg:w="17"/><text x="1.6390%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="1.3890%" y="949" width="0.0153%" height="15" fill="rgb(209,12,38)" fg:x="1539" fg:w="17"/><text x="1.6390%" y="959.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (49 samples, 0.04%)</title><rect x="1.3773%" y="1109" width="0.0442%" height="15" fill="rgb(227,1,9)" fg:x="1526" fg:w="49"/><text x="1.6273%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (19 samples, 0.02%)</title><rect x="1.4044%" y="1093" width="0.0171%" height="15" fill="rgb(248,47,43)" fg:x="1556" fg:w="19"/><text x="1.6544%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (19 samples, 0.02%)</title><rect x="1.4044%" y="1077" width="0.0171%" height="15" fill="rgb(221,10,30)" fg:x="1556" fg:w="19"/><text x="1.6544%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (19 samples, 0.02%)</title><rect x="1.4044%" y="1061" width="0.0171%" height="15" fill="rgb(210,229,1)" fg:x="1556" fg:w="19"/><text x="1.6544%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (19 samples, 0.02%)</title><rect x="1.4044%" y="1045" width="0.0171%" height="15" fill="rgb(222,148,37)" fg:x="1556" fg:w="19"/><text x="1.6544%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="1.4044%" y="1029" width="0.0171%" height="15" fill="rgb(234,67,33)" fg:x="1556" fg:w="19"/><text x="1.6544%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="1.4044%" y="1013" width="0.0171%" height="15" fill="rgb(247,98,35)" fg:x="1556" fg:w="19"/><text x="1.6544%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="1.4044%" y="997" width="0.0171%" height="15" fill="rgb(247,138,52)" fg:x="1556" fg:w="19"/><text x="1.6544%" y="1007.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (30 samples, 0.03%)</title><rect x="1.4215%" y="1109" width="0.0271%" height="15" fill="rgb(213,79,30)" fg:x="1575" fg:w="30"/><text x="1.6715%" y="1119.50"></text></g><g><title>async_task::runnable::Runnable::run (28 samples, 0.03%)</title><rect x="1.4233%" y="1093" width="0.0253%" height="15" fill="rgb(246,177,23)" fg:x="1577" fg:w="28"/><text x="1.6733%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="1.4892%" y="1093" width="0.0153%" height="15" fill="rgb(230,62,27)" fg:x="1650" fg:w="17"/><text x="1.7392%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (60 samples, 0.05%)</title><rect x="1.4585%" y="1109" width="0.0542%" height="15" fill="rgb(216,154,8)" fg:x="1616" fg:w="60"/><text x="1.7085%" y="1119.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (47 samples, 0.04%)</title><rect x="1.5190%" y="1109" width="0.0424%" height="15" fill="rgb(244,35,45)" fg:x="1683" fg:w="47"/><text x="1.7690%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="1.5921%" y="1093" width="0.0117%" height="15" fill="rgb(251,115,12)" fg:x="1764" fg:w="13"/><text x="1.8421%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="1.5921%" y="1077" width="0.0117%" height="15" fill="rgb(240,54,50)" fg:x="1764" fg:w="13"/><text x="1.8421%" y="1087.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (13 samples, 0.01%)</title><rect x="1.5921%" y="1061" width="0.0117%" height="15" fill="rgb(233,84,52)" fg:x="1764" fg:w="13"/><text x="1.8421%" y="1071.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="1.5921%" y="1045" width="0.0117%" height="15" fill="rgb(207,117,47)" fg:x="1764" fg:w="13"/><text x="1.8421%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="1.6038%" y="965" width="0.0135%" height="15" fill="rgb(249,43,39)" fg:x="1777" fg:w="15"/><text x="1.8538%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="1.6038%" y="949" width="0.0135%" height="15" fill="rgb(209,38,44)" fg:x="1777" fg:w="15"/><text x="1.8538%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.01%)</title><rect x="1.6038%" y="933" width="0.0135%" height="15" fill="rgb(236,212,23)" fg:x="1777" fg:w="15"/><text x="1.8538%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="1.6038%" y="917" width="0.0135%" height="15" fill="rgb(242,79,21)" fg:x="1777" fg:w="15"/><text x="1.8538%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="1.6038%" y="901" width="0.0135%" height="15" fill="rgb(211,96,35)" fg:x="1777" fg:w="15"/><text x="1.8538%" y="911.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="1.6038%" y="885" width="0.0135%" height="15" fill="rgb(253,215,40)" fg:x="1777" fg:w="15"/><text x="1.8538%" y="895.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="1.6038%" y="869" width="0.0135%" height="15" fill="rgb(211,81,21)" fg:x="1777" fg:w="15"/><text x="1.8538%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="1.6038%" y="853" width="0.0135%" height="15" fill="rgb(208,190,38)" fg:x="1777" fg:w="15"/><text x="1.8538%" y="863.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (16 samples, 0.01%)</title><rect x="1.6038%" y="1093" width="0.0144%" height="15" fill="rgb(235,213,38)" fg:x="1777" fg:w="16"/><text x="1.8538%" y="1103.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (16 samples, 0.01%)</title><rect x="1.6038%" y="1077" width="0.0144%" height="15" fill="rgb(237,122,38)" fg:x="1777" fg:w="16"/><text x="1.8538%" y="1087.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (16 samples, 0.01%)</title><rect x="1.6038%" y="1061" width="0.0144%" height="15" fill="rgb(244,218,35)" fg:x="1777" fg:w="16"/><text x="1.8538%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (16 samples, 0.01%)</title><rect x="1.6038%" y="1045" width="0.0144%" height="15" fill="rgb(240,68,47)" fg:x="1777" fg:w="16"/><text x="1.8538%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 0.01%)</title><rect x="1.6038%" y="1029" width="0.0144%" height="15" fill="rgb(210,16,53)" fg:x="1777" fg:w="16"/><text x="1.8538%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.01%)</title><rect x="1.6038%" y="1013" width="0.0144%" height="15" fill="rgb(235,124,12)" fg:x="1777" fg:w="16"/><text x="1.8538%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.01%)</title><rect x="1.6038%" y="997" width="0.0144%" height="15" fill="rgb(224,169,11)" fg:x="1777" fg:w="16"/><text x="1.8538%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.01%)</title><rect x="1.6038%" y="981" width="0.0144%" height="15" fill="rgb(250,166,2)" fg:x="1777" fg:w="16"/><text x="1.8538%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (845 samples, 0.76%)</title><rect x="0.8583%" y="1125" width="0.7626%" height="15" fill="rgb(242,216,29)" fg:x="951" fg:w="845"/><text x="1.1083%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (66 samples, 0.06%)</title><rect x="1.5614%" y="1109" width="0.0596%" height="15" fill="rgb(230,116,27)" fg:x="1730" fg:w="66"/><text x="1.8114%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (18 samples, 0.02%)</title><rect x="1.7139%" y="1109" width="0.0162%" height="15" fill="rgb(228,99,48)" fg:x="1899" fg:w="18"/><text x="1.9639%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (18 samples, 0.02%)</title><rect x="1.7139%" y="1093" width="0.0162%" height="15" fill="rgb(253,11,6)" fg:x="1899" fg:w="18"/><text x="1.9639%" y="1103.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="1.7139%" y="1077" width="0.0162%" height="15" fill="rgb(247,143,39)" fg:x="1899" fg:w="18"/><text x="1.9639%" y="1087.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (18 samples, 0.02%)</title><rect x="1.7139%" y="1061" width="0.0162%" height="15" fill="rgb(236,97,10)" fg:x="1899" fg:w="18"/><text x="1.9639%" y="1071.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (18 samples, 0.02%)</title><rect x="1.7139%" y="1045" width="0.0162%" height="15" fill="rgb(233,208,19)" fg:x="1899" fg:w="18"/><text x="1.9639%" y="1055.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (145 samples, 0.13%)</title><rect x="1.6210%" y="1125" width="0.1309%" height="15" fill="rgb(216,164,2)" fg:x="1796" fg:w="145"/><text x="1.8710%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (24 samples, 0.02%)</title><rect x="1.7302%" y="1109" width="0.0217%" height="15" fill="rgb(220,129,5)" fg:x="1917" fg:w="24"/><text x="1.9802%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (24 samples, 0.02%)</title><rect x="1.7302%" y="1093" width="0.0217%" height="15" fill="rgb(242,17,10)" fg:x="1917" fg:w="24"/><text x="1.9802%" y="1103.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (24 samples, 0.02%)</title><rect x="1.7302%" y="1077" width="0.0217%" height="15" fill="rgb(242,107,0)" fg:x="1917" fg:w="24"/><text x="1.9802%" y="1087.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (24 samples, 0.02%)</title><rect x="1.7302%" y="1061" width="0.0217%" height="15" fill="rgb(251,28,31)" fg:x="1917" fg:w="24"/><text x="1.9802%" y="1071.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="1.7518%" y="1125" width="0.0199%" height="15" fill="rgb(233,223,10)" fg:x="1941" fg:w="22"/><text x="2.0018%" y="1135.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (50 samples, 0.05%)</title><rect x="1.7717%" y="1125" width="0.0451%" height="15" fill="rgb(215,21,27)" fg:x="1963" fg:w="50"/><text x="2.0217%" y="1135.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (29 samples, 0.03%)</title><rect x="1.7906%" y="1109" width="0.0262%" height="15" fill="rgb(232,23,21)" fg:x="1984" fg:w="29"/><text x="2.0406%" y="1119.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (17 samples, 0.02%)</title><rect x="1.8015%" y="1093" width="0.0153%" height="15" fill="rgb(244,5,23)" fg:x="1996" fg:w="17"/><text x="2.0515%" y="1103.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (29 samples, 0.03%)</title><rect x="1.8195%" y="1125" width="0.0262%" height="15" fill="rgb(226,81,46)" fg:x="2016" fg:w="29"/><text x="2.0695%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (170 samples, 0.15%)</title><rect x="1.8457%" y="1125" width="0.1534%" height="15" fill="rgb(247,70,30)" fg:x="2045" fg:w="170"/><text x="2.0957%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (112 samples, 0.10%)</title><rect x="1.8980%" y="1109" width="0.1011%" height="15" fill="rgb(212,68,19)" fg:x="2103" fg:w="112"/><text x="2.1480%" y="1119.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (76 samples, 0.07%)</title><rect x="1.9305%" y="1093" width="0.0686%" height="15" fill="rgb(240,187,13)" fg:x="2139" fg:w="76"/><text x="2.1805%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.02%)</title><rect x="1.9802%" y="1077" width="0.0190%" height="15" fill="rgb(223,113,26)" fg:x="2194" fg:w="21"/><text x="2.2302%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (21 samples, 0.02%)</title><rect x="1.9802%" y="1061" width="0.0190%" height="15" fill="rgb(206,192,2)" fg:x="2194" fg:w="21"/><text x="2.2302%" y="1071.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (21 samples, 0.02%)</title><rect x="1.9802%" y="1045" width="0.0190%" height="15" fill="rgb(241,108,4)" fg:x="2194" fg:w="21"/><text x="2.2302%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="1.9865%" y="1029" width="0.0126%" height="15" fill="rgb(247,173,49)" fg:x="2201" fg:w="14"/><text x="2.2365%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="1.9865%" y="1013" width="0.0126%" height="15" fill="rgb(224,114,35)" fg:x="2201" fg:w="14"/><text x="2.2365%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="1.9865%" y="997" width="0.0126%" height="15" fill="rgb(245,159,27)" fg:x="2201" fg:w="14"/><text x="2.2365%" y="1007.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="1.9865%" y="981" width="0.0126%" height="15" fill="rgb(245,172,44)" fg:x="2201" fg:w="14"/><text x="2.2365%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="1.9865%" y="965" width="0.0126%" height="15" fill="rgb(236,23,11)" fg:x="2201" fg:w="14"/><text x="2.2365%" y="975.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (37 samples, 0.03%)</title><rect x="1.9991%" y="1125" width="0.0334%" height="15" fill="rgb(205,117,38)" fg:x="2215" fg:w="37"/><text x="2.2491%" y="1135.50"></text></g><g><title>value_trait::Builder::object (19 samples, 0.02%)</title><rect x="2.0154%" y="1109" width="0.0171%" height="15" fill="rgb(237,72,25)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="1119.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (19 samples, 0.02%)</title><rect x="2.0154%" y="1093" width="0.0171%" height="15" fill="rgb(244,70,9)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (19 samples, 0.02%)</title><rect x="2.0154%" y="1077" width="0.0171%" height="15" fill="rgb(217,125,39)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="1087.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (19 samples, 0.02%)</title><rect x="2.0154%" y="1061" width="0.0171%" height="15" fill="rgb(235,36,10)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (19 samples, 0.02%)</title><rect x="2.0154%" y="1045" width="0.0171%" height="15" fill="rgb(251,123,47)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (19 samples, 0.02%)</title><rect x="2.0154%" y="1029" width="0.0171%" height="15" fill="rgb(221,13,13)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="1039.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (19 samples, 0.02%)</title><rect x="2.0154%" y="1013" width="0.0171%" height="15" fill="rgb(238,131,9)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="1023.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="2.0154%" y="997" width="0.0171%" height="15" fill="rgb(211,50,8)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="2.0154%" y="981" width="0.0171%" height="15" fill="rgb(245,182,24)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (19 samples, 0.02%)</title><rect x="2.0154%" y="965" width="0.0171%" height="15" fill="rgb(242,14,37)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="2.0154%" y="949" width="0.0171%" height="15" fill="rgb(246,228,12)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="2.0154%" y="933" width="0.0171%" height="15" fill="rgb(213,55,15)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="943.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.02%)</title><rect x="2.0154%" y="917" width="0.0171%" height="15" fill="rgb(209,9,3)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="927.50"></text></g><g><title>__rg_alloc (19 samples, 0.02%)</title><rect x="2.0154%" y="901" width="0.0171%" height="15" fill="rgb(230,59,30)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (19 samples, 0.02%)</title><rect x="2.0154%" y="885" width="0.0171%" height="15" fill="rgb(209,121,21)" fg:x="2233" fg:w="19"/><text x="2.2654%" y="895.50"></text></g><g><title>__GI___pthread_mutex_trylock (16 samples, 0.01%)</title><rect x="2.0515%" y="1125" width="0.0144%" height="15" fill="rgb(220,109,13)" fg:x="2273" fg:w="16"/><text x="2.3015%" y="1135.50"></text></g><g><title>___pthread_mutex_lock (63 samples, 0.06%)</title><rect x="2.0731%" y="1125" width="0.0569%" height="15" fill="rgb(232,18,1)" fg:x="2297" fg:w="63"/><text x="2.3231%" y="1135.50"></text></g><g><title>___pthread_rwlock_unlock (17 samples, 0.02%)</title><rect x="2.1390%" y="1125" width="0.0153%" height="15" fill="rgb(215,41,42)" fg:x="2370" fg:w="17"/><text x="2.3890%" y="1135.50"></text></g><g><title>__clock_gettime_2 (53 samples, 0.05%)</title><rect x="2.1544%" y="1125" width="0.0478%" height="15" fill="rgb(224,123,36)" fg:x="2387" fg:w="53"/><text x="2.4044%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (35 samples, 0.03%)</title><rect x="2.2121%" y="1125" width="0.0316%" height="15" fill="rgb(240,125,3)" fg:x="2451" fg:w="35"/><text x="2.4621%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (15 samples, 0.01%)</title><rect x="2.2591%" y="1125" width="0.0135%" height="15" fill="rgb(205,98,50)" fg:x="2503" fg:w="15"/><text x="2.5091%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="2.3475%" y="1109" width="0.0108%" height="15" fill="rgb(205,185,37)" fg:x="2601" fg:w="12"/><text x="2.5975%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="2.3475%" y="1093" width="0.0108%" height="15" fill="rgb(238,207,15)" fg:x="2601" fg:w="12"/><text x="2.5975%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="2.3475%" y="1077" width="0.0108%" height="15" fill="rgb(213,199,42)" fg:x="2601" fg:w="12"/><text x="2.5975%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="2.3475%" y="1061" width="0.0108%" height="15" fill="rgb(235,201,11)" fg:x="2601" fg:w="12"/><text x="2.5975%" y="1071.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="2.3475%" y="1045" width="0.0108%" height="15" fill="rgb(207,46,11)" fg:x="2601" fg:w="12"/><text x="2.5975%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="2.3475%" y="1029" width="0.0108%" height="15" fill="rgb(241,35,35)" fg:x="2601" fg:w="12"/><text x="2.5975%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (94 samples, 0.08%)</title><rect x="2.2762%" y="1125" width="0.0848%" height="15" fill="rgb(243,32,47)" fg:x="2522" fg:w="94"/><text x="2.5262%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (75 samples, 0.07%)</title><rect x="2.3611%" y="1125" width="0.0677%" height="15" fill="rgb(247,202,23)" fg:x="2616" fg:w="75"/><text x="2.6111%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (28 samples, 0.03%)</title><rect x="2.4035%" y="1109" width="0.0253%" height="15" fill="rgb(219,102,11)" fg:x="2663" fg:w="28"/><text x="2.6535%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (28 samples, 0.03%)</title><rect x="2.4035%" y="1093" width="0.0253%" height="15" fill="rgb(243,110,44)" fg:x="2663" fg:w="28"/><text x="2.6535%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (28 samples, 0.03%)</title><rect x="2.4035%" y="1077" width="0.0253%" height="15" fill="rgb(222,74,54)" fg:x="2663" fg:w="28"/><text x="2.6535%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (28 samples, 0.03%)</title><rect x="2.4035%" y="1061" width="0.0253%" height="15" fill="rgb(216,99,12)" fg:x="2663" fg:w="28"/><text x="2.6535%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (28 samples, 0.03%)</title><rect x="2.4035%" y="1045" width="0.0253%" height="15" fill="rgb(226,22,26)" fg:x="2663" fg:w="28"/><text x="2.6535%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (28 samples, 0.03%)</title><rect x="2.4035%" y="1029" width="0.0253%" height="15" fill="rgb(217,163,10)" fg:x="2663" fg:w="28"/><text x="2.6535%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (28 samples, 0.03%)</title><rect x="2.4035%" y="1013" width="0.0253%" height="15" fill="rgb(213,25,53)" fg:x="2663" fg:w="28"/><text x="2.6535%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.03%)</title><rect x="2.4035%" y="997" width="0.0253%" height="15" fill="rgb(252,105,26)" fg:x="2663" fg:w="28"/><text x="2.6535%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.03%)</title><rect x="2.4035%" y="981" width="0.0253%" height="15" fill="rgb(220,39,43)" fg:x="2663" fg:w="28"/><text x="2.6535%" y="991.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.03%)</title><rect x="2.4035%" y="965" width="0.0253%" height="15" fill="rgb(229,68,48)" fg:x="2663" fg:w="28"/><text x="2.6535%" y="975.50"></text></g><g><title>__rg_alloc (28 samples, 0.03%)</title><rect x="2.4035%" y="949" width="0.0253%" height="15" fill="rgb(252,8,32)" fg:x="2663" fg:w="28"/><text x="2.6535%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (28 samples, 0.03%)</title><rect x="2.4035%" y="933" width="0.0253%" height="15" fill="rgb(223,20,43)" fg:x="2663" fg:w="28"/><text x="2.6535%" y="943.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (53 samples, 0.05%)</title><rect x="2.4287%" y="1125" width="0.0478%" height="15" fill="rgb(229,81,49)" fg:x="2691" fg:w="53"/><text x="2.6787%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (40 samples, 0.04%)</title><rect x="2.4405%" y="1109" width="0.0361%" height="15" fill="rgb(236,28,36)" fg:x="2704" fg:w="40"/><text x="2.6905%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (40 samples, 0.04%)</title><rect x="2.4405%" y="1093" width="0.0361%" height="15" fill="rgb(249,185,26)" fg:x="2704" fg:w="40"/><text x="2.6905%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (40 samples, 0.04%)</title><rect x="2.4405%" y="1077" width="0.0361%" height="15" fill="rgb(249,174,33)" fg:x="2704" fg:w="40"/><text x="2.6905%" y="1087.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (20 samples, 0.02%)</title><rect x="2.4585%" y="1061" width="0.0181%" height="15" fill="rgb(233,201,37)" fg:x="2724" fg:w="20"/><text x="2.7085%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (20 samples, 0.02%)</title><rect x="2.4585%" y="1045" width="0.0181%" height="15" fill="rgb(221,78,26)" fg:x="2724" fg:w="20"/><text x="2.7085%" y="1055.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (20 samples, 0.02%)</title><rect x="2.4585%" y="1029" width="0.0181%" height="15" fill="rgb(250,127,30)" fg:x="2724" fg:w="20"/><text x="2.7085%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (20 samples, 0.02%)</title><rect x="2.4585%" y="1013" width="0.0181%" height="15" fill="rgb(230,49,44)" fg:x="2724" fg:w="20"/><text x="2.7085%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (74 samples, 0.07%)</title><rect x="2.4838%" y="1125" width="0.0668%" height="15" fill="rgb(229,67,23)" fg:x="2752" fg:w="74"/><text x="2.7338%" y="1135.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (53 samples, 0.05%)</title><rect x="2.5028%" y="1109" width="0.0478%" height="15" fill="rgb(249,83,47)" fg:x="2773" fg:w="53"/><text x="2.7528%" y="1119.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (53 samples, 0.05%)</title><rect x="2.5028%" y="1093" width="0.0478%" height="15" fill="rgb(215,43,3)" fg:x="2773" fg:w="53"/><text x="2.7528%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (18 samples, 0.02%)</title><rect x="2.5506%" y="1125" width="0.0162%" height="15" fill="rgb(238,154,13)" fg:x="2826" fg:w="18"/><text x="2.8006%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (99 samples, 0.09%)</title><rect x="2.6787%" y="1061" width="0.0894%" height="15" fill="rgb(219,56,2)" fg:x="2968" fg:w="99"/><text x="2.9287%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (99 samples, 0.09%)</title><rect x="2.6787%" y="1045" width="0.0894%" height="15" fill="rgb(233,0,4)" fg:x="2968" fg:w="99"/><text x="2.9287%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (99 samples, 0.09%)</title><rect x="2.6787%" y="1029" width="0.0894%" height="15" fill="rgb(235,30,7)" fg:x="2968" fg:w="99"/><text x="2.9287%" y="1039.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (99 samples, 0.09%)</title><rect x="2.6787%" y="1013" width="0.0894%" height="15" fill="rgb(250,79,13)" fg:x="2968" fg:w="99"/><text x="2.9287%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (112 samples, 0.10%)</title><rect x="2.6787%" y="1077" width="0.1011%" height="15" fill="rgb(211,146,34)" fg:x="2968" fg:w="112"/><text x="2.9287%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="2.7681%" y="1061" width="0.0117%" height="15" fill="rgb(228,22,38)" fg:x="3067" fg:w="13"/><text x="3.0181%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="2.7681%" y="1045" width="0.0117%" height="15" fill="rgb(235,168,5)" fg:x="3067" fg:w="13"/><text x="3.0181%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="2.7681%" y="1029" width="0.0117%" height="15" fill="rgb(221,155,16)" fg:x="3067" fg:w="13"/><text x="3.0181%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="2.7681%" y="1013" width="0.0117%" height="15" fill="rgb(215,215,53)" fg:x="3067" fg:w="13"/><text x="3.0181%" y="1023.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="2.7681%" y="997" width="0.0117%" height="15" fill="rgb(223,4,10)" fg:x="3067" fg:w="13"/><text x="3.0181%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="2.7681%" y="981" width="0.0117%" height="15" fill="rgb(234,103,6)" fg:x="3067" fg:w="13"/><text x="3.0181%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.06%)</title><rect x="2.7798%" y="1061" width="0.0632%" height="15" fill="rgb(227,97,0)" fg:x="3080" fg:w="70"/><text x="3.0298%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (70 samples, 0.06%)</title><rect x="2.7798%" y="1045" width="0.0632%" height="15" fill="rgb(234,150,53)" fg:x="3080" fg:w="70"/><text x="3.0298%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (70 samples, 0.06%)</title><rect x="2.7798%" y="1029" width="0.0632%" height="15" fill="rgb(228,201,54)" fg:x="3080" fg:w="70"/><text x="3.0298%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (70 samples, 0.06%)</title><rect x="2.7798%" y="1013" width="0.0632%" height="15" fill="rgb(222,22,37)" fg:x="3080" fg:w="70"/><text x="3.0298%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (70 samples, 0.06%)</title><rect x="2.7798%" y="997" width="0.0632%" height="15" fill="rgb(237,53,32)" fg:x="3080" fg:w="70"/><text x="3.0298%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (81 samples, 0.07%)</title><rect x="2.7798%" y="1077" width="0.0731%" height="15" fill="rgb(233,25,53)" fg:x="3080" fg:w="81"/><text x="3.0298%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (330 samples, 0.30%)</title><rect x="2.5668%" y="1125" width="0.2978%" height="15" fill="rgb(210,40,34)" fg:x="2844" fg:w="330"/><text x="2.8168%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (206 samples, 0.19%)</title><rect x="2.6787%" y="1109" width="0.1859%" height="15" fill="rgb(241,220,44)" fg:x="2968" fg:w="206"/><text x="2.9287%" y="1119.50"></text></g><g><title>core::mem::drop (206 samples, 0.19%)</title><rect x="2.6787%" y="1093" width="0.1859%" height="15" fill="rgb(235,28,35)" fg:x="2968" fg:w="206"/><text x="2.9287%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="2.8529%" y="1077" width="0.0117%" height="15" fill="rgb(210,56,17)" fg:x="3161" fg:w="13"/><text x="3.1029%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="2.8529%" y="1061" width="0.0117%" height="15" fill="rgb(224,130,29)" fg:x="3161" fg:w="13"/><text x="3.1029%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (13 samples, 0.01%)</title><rect x="2.8529%" y="1045" width="0.0117%" height="15" fill="rgb(235,212,8)" fg:x="3161" fg:w="13"/><text x="3.1029%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="2.8529%" y="1029" width="0.0117%" height="15" fill="rgb(223,33,50)" fg:x="3161" fg:w="13"/><text x="3.1029%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (13 samples, 0.01%)</title><rect x="2.8529%" y="1013" width="0.0117%" height="15" fill="rgb(219,149,13)" fg:x="3161" fg:w="13"/><text x="3.1029%" y="1023.50"></text></g><g><title>async_executor::State::notify (16 samples, 0.01%)</title><rect x="2.8737%" y="1125" width="0.0144%" height="15" fill="rgb(250,156,29)" fg:x="3184" fg:w="16"/><text x="3.1237%" y="1135.50"></text></g><g><title>async_executor::Ticker::sleep (30 samples, 0.03%)</title><rect x="2.8881%" y="1125" width="0.0271%" height="15" fill="rgb(216,193,19)" fg:x="3200" fg:w="30"/><text x="3.1381%" y="1135.50"></text></g><g><title>async_executor::steal (147 samples, 0.13%)</title><rect x="2.9233%" y="1125" width="0.1327%" height="15" fill="rgb(216,135,14)" fg:x="3239" fg:w="147"/><text x="3.1733%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (29 samples, 0.03%)</title><rect x="3.0659%" y="1125" width="0.0262%" height="15" fill="rgb(241,47,5)" fg:x="3397" fg:w="29"/><text x="3.3159%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (17 samples, 0.02%)</title><rect x="3.0921%" y="1125" width="0.0153%" height="15" fill="rgb(233,42,35)" fg:x="3426" fg:w="17"/><text x="3.3421%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (30 samples, 0.03%)</title><rect x="3.1309%" y="1125" width="0.0271%" height="15" fill="rgb(231,13,6)" fg:x="3469" fg:w="30"/><text x="3.3809%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (134 samples, 0.12%)</title><rect x="3.1652%" y="1125" width="0.1209%" height="15" fill="rgb(207,181,40)" fg:x="3507" fg:w="134"/><text x="3.4152%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (108 samples, 0.10%)</title><rect x="3.2862%" y="1125" width="0.0975%" height="15" fill="rgb(254,173,49)" fg:x="3641" fg:w="108"/><text x="3.5362%" y="1135.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (37 samples, 0.03%)</title><rect x="3.3836%" y="1125" width="0.0334%" height="15" fill="rgb(221,1,38)" fg:x="3749" fg:w="37"/><text x="3.6336%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (33 samples, 0.03%)</title><rect x="3.4197%" y="1125" width="0.0298%" height="15" fill="rgb(206,124,46)" fg:x="3789" fg:w="33"/><text x="3.6697%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (23 samples, 0.02%)</title><rect x="3.4288%" y="1109" width="0.0208%" height="15" fill="rgb(249,21,11)" fg:x="3799" fg:w="23"/><text x="3.6788%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (18 samples, 0.02%)</title><rect x="3.4333%" y="1093" width="0.0162%" height="15" fill="rgb(222,201,40)" fg:x="3804" fg:w="18"/><text x="3.6833%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (37 samples, 0.03%)</title><rect x="3.4495%" y="1125" width="0.0334%" height="15" fill="rgb(235,61,29)" fg:x="3822" fg:w="37"/><text x="3.6995%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (29 samples, 0.03%)</title><rect x="3.4829%" y="1125" width="0.0262%" height="15" fill="rgb(219,207,3)" fg:x="3859" fg:w="29"/><text x="3.7329%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt; (29 samples, 0.03%)</title><rect x="3.4829%" y="1109" width="0.0262%" height="15" fill="rgb(222,56,46)" fg:x="3859" fg:w="29"/><text x="3.7329%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="3.5172%" y="1125" width="0.0181%" height="15" fill="rgb(239,76,54)" fg:x="3897" fg:w="20"/><text x="3.7672%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (24 samples, 0.02%)</title><rect x="3.5669%" y="1125" width="0.0217%" height="15" fill="rgb(231,124,27)" fg:x="3952" fg:w="24"/><text x="3.8169%" y="1135.50"></text></g><g><title>event_listener::List::notify (14 samples, 0.01%)</title><rect x="3.5885%" y="1125" width="0.0126%" height="15" fill="rgb(249,195,6)" fg:x="3976" fg:w="14"/><text x="3.8385%" y="1135.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (48 samples, 0.04%)</title><rect x="3.6011%" y="1125" width="0.0433%" height="15" fill="rgb(237,174,47)" fg:x="3990" fg:w="48"/><text x="3.8511%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIter&lt;T&gt;::drop_elements (18 samples, 0.02%)</title><rect x="3.6445%" y="1125" width="0.0162%" height="15" fill="rgb(206,201,31)" fg:x="4038" fg:w="18"/><text x="3.8945%" y="1135.50"></text></g><g><title>parking::Inner::park (46 samples, 0.04%)</title><rect x="3.6607%" y="1125" width="0.0415%" height="15" fill="rgb(231,57,52)" fg:x="4056" fg:w="46"/><text x="3.9107%" y="1135.50"></text></g><g><title>rust_alloc (36 samples, 0.03%)</title><rect x="3.7248%" y="1125" width="0.0325%" height="15" fill="rgb(248,177,22)" fg:x="4127" fg:w="36"/><text x="3.9748%" y="1135.50"></text></g><g><title>rust_dealloc (18 samples, 0.02%)</title><rect x="3.7573%" y="1125" width="0.0162%" height="15" fill="rgb(215,211,37)" fg:x="4163" fg:w="18"/><text x="4.0073%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (16 samples, 0.01%)</title><rect x="3.7591%" y="1109" width="0.0144%" height="15" fill="rgb(241,128,51)" fg:x="4165" fg:w="16"/><text x="4.0091%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (16 samples, 0.01%)</title><rect x="3.7591%" y="1093" width="0.0144%" height="15" fill="rgb(227,165,31)" fg:x="4165" fg:w="16"/><text x="4.0091%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (16 samples, 0.01%)</title><rect x="3.7591%" y="1077" width="0.0144%" height="15" fill="rgb(228,167,24)" fg:x="4165" fg:w="16"/><text x="4.0091%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (16 samples, 0.01%)</title><rect x="3.7591%" y="1061" width="0.0144%" height="15" fill="rgb(228,143,12)" fg:x="4165" fg:w="16"/><text x="4.0091%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (16 samples, 0.01%)</title><rect x="3.7591%" y="1045" width="0.0144%" height="15" fill="rgb(249,149,8)" fg:x="4165" fg:w="16"/><text x="4.0091%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (16 samples, 0.01%)</title><rect x="3.7591%" y="1029" width="0.0144%" height="15" fill="rgb(243,35,44)" fg:x="4165" fg:w="16"/><text x="4.0091%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (16 samples, 0.01%)</title><rect x="3.7591%" y="1013" width="0.0144%" height="15" fill="rgb(246,89,9)" fg:x="4165" fg:w="16"/><text x="4.0091%" y="1023.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (16 samples, 0.01%)</title><rect x="3.7591%" y="997" width="0.0144%" height="15" fill="rgb(233,213,13)" fg:x="4165" fg:w="16"/><text x="4.0091%" y="1007.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (47 samples, 0.04%)</title><rect x="3.7952%" y="1125" width="0.0424%" height="15" fill="rgb(233,141,41)" fg:x="4205" fg:w="47"/><text x="4.0452%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (47 samples, 0.04%)</title><rect x="3.8385%" y="1125" width="0.0424%" height="15" fill="rgb(239,167,4)" fg:x="4253" fg:w="47"/><text x="4.0885%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (41 samples, 0.04%)</title><rect x="3.8809%" y="1125" width="0.0370%" height="15" fill="rgb(209,217,16)" fg:x="4300" fg:w="41"/><text x="4.1309%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.02%)</title><rect x="3.8999%" y="1109" width="0.0181%" height="15" fill="rgb(219,88,35)" fg:x="4321" fg:w="20"/><text x="4.1499%" y="1119.50"></text></g><g><title>tremor_common::time::nanotime (46 samples, 0.04%)</title><rect x="3.9179%" y="1125" width="0.0415%" height="15" fill="rgb(220,193,23)" fg:x="4341" fg:w="46"/><text x="4.1679%" y="1135.50"></text></g><g><title>std::time::SystemTime::now (46 samples, 0.04%)</title><rect x="3.9179%" y="1109" width="0.0415%" height="15" fill="rgb(230,90,52)" fg:x="4341" fg:w="46"/><text x="4.1679%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (46 samples, 0.04%)</title><rect x="3.9179%" y="1093" width="0.0415%" height="15" fill="rgb(252,106,19)" fg:x="4341" fg:w="46"/><text x="4.1679%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::now (46 samples, 0.04%)</title><rect x="3.9179%" y="1077" width="0.0415%" height="15" fill="rgb(206,74,20)" fg:x="4341" fg:w="46"/><text x="4.1679%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.04%)</title><rect x="4.0362%" y="1109" width="0.0361%" height="15" fill="rgb(230,138,44)" fg:x="4472" fg:w="40"/><text x="4.2862%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (40 samples, 0.04%)</title><rect x="4.0362%" y="1093" width="0.0361%" height="15" fill="rgb(235,182,43)" fg:x="4472" fg:w="40"/><text x="4.2862%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (15 samples, 0.01%)</title><rect x="4.0587%" y="1077" width="0.0135%" height="15" fill="rgb(242,16,51)" fg:x="4497" fg:w="15"/><text x="4.3087%" y="1087.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (19 samples, 0.02%)</title><rect x="4.0804%" y="1093" width="0.0171%" height="15" fill="rgb(248,9,4)" fg:x="4521" fg:w="19"/><text x="4.3304%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (159 samples, 0.14%)</title><rect x="3.9595%" y="1125" width="0.1435%" height="15" fill="rgb(210,31,22)" fg:x="4387" fg:w="159"/><text x="4.2095%" y="1135.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (25 samples, 0.02%)</title><rect x="4.0804%" y="1109" width="0.0226%" height="15" fill="rgb(239,54,39)" fg:x="4521" fg:w="25"/><text x="4.3304%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (12 samples, 0.01%)</title><rect x="4.1030%" y="1125" width="0.0108%" height="15" fill="rgb(230,99,41)" fg:x="4546" fg:w="12"/><text x="4.3530%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="4.1743%" y="981" width="0.0181%" height="15" fill="rgb(253,106,12)" fg:x="4625" fg:w="20"/><text x="4.4243%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="4.1743%" y="965" width="0.0181%" height="15" fill="rgb(213,46,41)" fg:x="4625" fg:w="20"/><text x="4.4243%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.02%)</title><rect x="4.1743%" y="949" width="0.0181%" height="15" fill="rgb(215,133,35)" fg:x="4625" fg:w="20"/><text x="4.4243%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.02%)</title><rect x="4.1743%" y="933" width="0.0181%" height="15" fill="rgb(213,28,5)" fg:x="4625" fg:w="20"/><text x="4.4243%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.02%)</title><rect x="4.1743%" y="917" width="0.0181%" height="15" fill="rgb(215,77,49)" fg:x="4625" fg:w="20"/><text x="4.4243%" y="927.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.02%)</title><rect x="4.1743%" y="901" width="0.0181%" height="15" fill="rgb(248,100,22)" fg:x="4625" fg:w="20"/><text x="4.4243%" y="911.50"></text></g><g><title>__rg_alloc (20 samples, 0.02%)</title><rect x="4.1743%" y="885" width="0.0181%" height="15" fill="rgb(208,67,9)" fg:x="4625" fg:w="20"/><text x="4.4243%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (20 samples, 0.02%)</title><rect x="4.1743%" y="869" width="0.0181%" height="15" fill="rgb(219,133,21)" fg:x="4625" fg:w="20"/><text x="4.4243%" y="879.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (46 samples, 0.04%)</title><rect x="4.1743%" y="1109" width="0.0415%" height="15" fill="rgb(246,46,29)" fg:x="4625" fg:w="46"/><text x="4.4243%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (46 samples, 0.04%)</title><rect x="4.1743%" y="1093" width="0.0415%" height="15" fill="rgb(246,185,52)" fg:x="4625" fg:w="46"/><text x="4.4243%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (46 samples, 0.04%)</title><rect x="4.1743%" y="1077" width="0.0415%" height="15" fill="rgb(252,136,11)" fg:x="4625" fg:w="46"/><text x="4.4243%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (46 samples, 0.04%)</title><rect x="4.1743%" y="1061" width="0.0415%" height="15" fill="rgb(219,138,53)" fg:x="4625" fg:w="46"/><text x="4.4243%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (46 samples, 0.04%)</title><rect x="4.1743%" y="1045" width="0.0415%" height="15" fill="rgb(211,51,23)" fg:x="4625" fg:w="46"/><text x="4.4243%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (46 samples, 0.04%)</title><rect x="4.1743%" y="1029" width="0.0415%" height="15" fill="rgb(247,221,28)" fg:x="4625" fg:w="46"/><text x="4.4243%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (46 samples, 0.04%)</title><rect x="4.1743%" y="1013" width="0.0415%" height="15" fill="rgb(251,222,45)" fg:x="4625" fg:w="46"/><text x="4.4243%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (46 samples, 0.04%)</title><rect x="4.1743%" y="997" width="0.0415%" height="15" fill="rgb(217,162,53)" fg:x="4625" fg:w="46"/><text x="4.4243%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (26 samples, 0.02%)</title><rect x="4.1923%" y="981" width="0.0235%" height="15" fill="rgb(229,93,14)" fg:x="4645" fg:w="26"/><text x="4.4423%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.02%)</title><rect x="4.1923%" y="965" width="0.0235%" height="15" fill="rgb(209,67,49)" fg:x="4645" fg:w="26"/><text x="4.4423%" y="975.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (139 samples, 0.13%)</title><rect x="4.1156%" y="1125" width="0.1255%" height="15" fill="rgb(213,87,29)" fg:x="4560" fg:w="139"/><text x="4.3656%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (16 samples, 0.01%)</title><rect x="4.2266%" y="1109" width="0.0144%" height="15" fill="rgb(205,151,52)" fg:x="4683" fg:w="16"/><text x="4.4766%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (34 samples, 0.03%)</title><rect x="4.2411%" y="1125" width="0.0307%" height="15" fill="rgb(253,215,39)" fg:x="4699" fg:w="34"/><text x="4.4911%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="4.3512%" y="1109" width="0.0117%" height="15" fill="rgb(221,220,41)" fg:x="4821" fg:w="13"/><text x="4.6012%" y="1119.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (143 samples, 0.13%)</title><rect x="4.2763%" y="1125" width="0.1291%" height="15" fill="rgb(218,133,21)" fg:x="4738" fg:w="143"/><text x="4.5263%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.04%)</title><rect x="4.3629%" y="1109" width="0.0424%" height="15" fill="rgb(221,193,43)" fg:x="4834" fg:w="47"/><text x="4.6129%" y="1119.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (47 samples, 0.04%)</title><rect x="4.3629%" y="1093" width="0.0424%" height="15" fill="rgb(240,128,52)" fg:x="4834" fg:w="47"/><text x="4.6129%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="4.4243%" y="1109" width="0.0108%" height="15" fill="rgb(253,114,12)" fg:x="4902" fg:w="12"/><text x="4.6743%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="4.4243%" y="1093" width="0.0108%" height="15" fill="rgb(215,223,47)" fg:x="4902" fg:w="12"/><text x="4.6743%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="4.4243%" y="1077" width="0.0108%" height="15" fill="rgb(248,225,23)" fg:x="4902" fg:w="12"/><text x="4.6743%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="4.4243%" y="1061" width="0.0108%" height="15" fill="rgb(250,108,0)" fg:x="4902" fg:w="12"/><text x="4.6743%" y="1071.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="4.4243%" y="1045" width="0.0108%" height="15" fill="rgb(228,208,7)" fg:x="4902" fg:w="12"/><text x="4.6743%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="4.4243%" y="1029" width="0.0108%" height="15" fill="rgb(244,45,10)" fg:x="4902" fg:w="12"/><text x="4.6743%" y="1039.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (60 samples, 0.05%)</title><rect x="4.4053%" y="1125" width="0.0542%" height="15" fill="rgb(207,125,25)" fg:x="4881" fg:w="60"/><text x="4.6553%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (27 samples, 0.02%)</title><rect x="4.4351%" y="1109" width="0.0244%" height="15" fill="rgb(210,195,18)" fg:x="4914" fg:w="27"/><text x="4.6851%" y="1119.50"></text></g><g><title>[anon] (4,356 samples, 3.93%)</title><rect x="0.5433%" y="1141" width="3.9315%" height="15" fill="rgb(249,80,12)" fg:x="602" fg:w="4356"/><text x="0.7933%" y="1151.50">[ano..</text></g><g><title>[libc.so.6] (42 samples, 0.04%)</title><rect x="4.4748%" y="1141" width="0.0379%" height="15" fill="rgb(221,65,9)" fg:x="4958" fg:w="42"/><text x="4.7248%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="4.5154%" y="1125" width="0.0415%" height="15" fill="rgb(235,49,36)" fg:x="5003" fg:w="46"/><text x="4.7654%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (66 samples, 0.06%)</title><rect x="4.5569%" y="1125" width="0.0596%" height="15" fill="rgb(225,32,20)" fg:x="5049" fg:w="66"/><text x="4.8069%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (15 samples, 0.01%)</title><rect x="4.6030%" y="1109" width="0.0135%" height="15" fill="rgb(215,141,46)" fg:x="5100" fg:w="15"/><text x="4.8530%" y="1119.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (70 samples, 0.06%)</title><rect x="4.6183%" y="1125" width="0.0632%" height="15" fill="rgb(250,160,47)" fg:x="5117" fg:w="70"/><text x="4.8683%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (70 samples, 0.06%)</title><rect x="4.6183%" y="1109" width="0.0632%" height="15" fill="rgb(216,222,40)" fg:x="5117" fg:w="70"/><text x="4.8683%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (70 samples, 0.06%)</title><rect x="4.6183%" y="1093" width="0.0632%" height="15" fill="rgb(234,217,39)" fg:x="5117" fg:w="70"/><text x="4.8683%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (70 samples, 0.06%)</title><rect x="4.6183%" y="1077" width="0.0632%" height="15" fill="rgb(207,178,40)" fg:x="5117" fg:w="70"/><text x="4.8683%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (14 samples, 0.01%)</title><rect x="4.7284%" y="1109" width="0.0126%" height="15" fill="rgb(221,136,13)" fg:x="5239" fg:w="14"/><text x="4.9784%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (14 samples, 0.01%)</title><rect x="4.7284%" y="1093" width="0.0126%" height="15" fill="rgb(249,199,10)" fg:x="5239" fg:w="14"/><text x="4.9784%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (14 samples, 0.01%)</title><rect x="4.7284%" y="1077" width="0.0126%" height="15" fill="rgb(249,222,13)" fg:x="5239" fg:w="14"/><text x="4.9784%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value)&gt;&gt; (14 samples, 0.01%)</title><rect x="4.7284%" y="1061" width="0.0126%" height="15" fill="rgb(244,185,38)" fg:x="5239" fg:w="14"/><text x="4.9784%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (69 samples, 0.06%)</title><rect x="4.6869%" y="1125" width="0.0623%" height="15" fill="rgb(236,202,9)" fg:x="5193" fg:w="69"/><text x="4.9369%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (23 samples, 0.02%)</title><rect x="4.7492%" y="1125" width="0.0208%" height="15" fill="rgb(250,229,37)" fg:x="5262" fg:w="23"/><text x="4.9992%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (17 samples, 0.02%)</title><rect x="4.7699%" y="1125" width="0.0153%" height="15" fill="rgb(206,174,23)" fg:x="5285" fg:w="17"/><text x="5.0199%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIter&lt;T&gt;::drop_elements (20 samples, 0.02%)</title><rect x="4.7889%" y="1125" width="0.0181%" height="15" fill="rgb(211,33,43)" fg:x="5306" fg:w="20"/><text x="5.0389%" y="1135.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="4.8160%" y="1125" width="0.0117%" height="15" fill="rgb(245,58,50)" fg:x="5336" fg:w="13"/><text x="5.0660%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (13 samples, 0.01%)</title><rect x="4.8160%" y="1109" width="0.0117%" height="15" fill="rgb(244,68,36)" fg:x="5336" fg:w="13"/><text x="5.0660%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (13 samples, 0.01%)</title><rect x="4.8160%" y="1093" width="0.0117%" height="15" fill="rgb(232,229,15)" fg:x="5336" fg:w="13"/><text x="5.0660%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (13 samples, 0.01%)</title><rect x="4.8160%" y="1077" width="0.0117%" height="15" fill="rgb(254,30,23)" fg:x="5336" fg:w="13"/><text x="5.0660%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (13 samples, 0.01%)</title><rect x="4.8160%" y="1061" width="0.0117%" height="15" fill="rgb(235,160,14)" fg:x="5336" fg:w="13"/><text x="5.0660%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (13 samples, 0.01%)</title><rect x="4.8160%" y="1045" width="0.0117%" height="15" fill="rgb(212,155,44)" fg:x="5336" fg:w="13"/><text x="5.0660%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (13 samples, 0.01%)</title><rect x="4.8160%" y="1029" width="0.0117%" height="15" fill="rgb(226,2,50)" fg:x="5336" fg:w="13"/><text x="5.0660%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (13 samples, 0.01%)</title><rect x="4.8160%" y="1013" width="0.0117%" height="15" fill="rgb(234,177,6)" fg:x="5336" fg:w="13"/><text x="5.0660%" y="1023.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="4.8160%" y="997" width="0.0117%" height="15" fill="rgb(217,24,9)" fg:x="5336" fg:w="13"/><text x="5.0660%" y="1007.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (23 samples, 0.02%)</title><rect x="4.8331%" y="1125" width="0.0208%" height="15" fill="rgb(220,13,46)" fg:x="5355" fg:w="23"/><text x="5.0831%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (14 samples, 0.01%)</title><rect x="4.8412%" y="1109" width="0.0126%" height="15" fill="rgb(239,221,27)" fg:x="5364" fg:w="14"/><text x="5.0912%" y="1119.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (14 samples, 0.01%)</title><rect x="4.8412%" y="1093" width="0.0126%" height="15" fill="rgb(222,198,25)" fg:x="5364" fg:w="14"/><text x="5.0912%" y="1103.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="4.8412%" y="1077" width="0.0126%" height="15" fill="rgb(211,99,13)" fg:x="5364" fg:w="14"/><text x="5.0912%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="4.8412%" y="1061" width="0.0126%" height="15" fill="rgb(232,111,31)" fg:x="5364" fg:w="14"/><text x="5.0912%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="4.8412%" y="1045" width="0.0126%" height="15" fill="rgb(245,82,37)" fg:x="5364" fg:w="14"/><text x="5.0912%" y="1055.50"></text></g><g><title>[tremor-pdk-nobox] (380 samples, 0.34%)</title><rect x="4.5127%" y="1141" width="0.3430%" height="15" fill="rgb(227,149,46)" fg:x="5000" fg:w="380"/><text x="4.7627%" y="1151.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (50 samples, 0.05%)</title><rect x="4.9667%" y="1109" width="0.0451%" height="15" fill="rgb(218,36,50)" fg:x="5503" fg:w="50"/><text x="5.2167%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (18 samples, 0.02%)</title><rect x="5.0118%" y="1077" width="0.0162%" height="15" fill="rgb(226,80,48)" fg:x="5553" fg:w="18"/><text x="5.2618%" y="1087.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (18 samples, 0.02%)</title><rect x="5.0118%" y="1061" width="0.0162%" height="15" fill="rgb(238,224,15)" fg:x="5553" fg:w="18"/><text x="5.2618%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (18 samples, 0.02%)</title><rect x="5.0118%" y="1045" width="0.0162%" height="15" fill="rgb(241,136,10)" fg:x="5553" fg:w="18"/><text x="5.2618%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (18 samples, 0.02%)</title><rect x="5.0118%" y="1029" width="0.0162%" height="15" fill="rgb(208,32,45)" fg:x="5553" fg:w="18"/><text x="5.2618%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="5.0118%" y="1013" width="0.0162%" height="15" fill="rgb(207,135,9)" fg:x="5553" fg:w="18"/><text x="5.2618%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="5.0118%" y="997" width="0.0162%" height="15" fill="rgb(206,86,44)" fg:x="5553" fg:w="18"/><text x="5.2618%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (18 samples, 0.02%)</title><rect x="5.0118%" y="981" width="0.0162%" height="15" fill="rgb(245,177,15)" fg:x="5553" fg:w="18"/><text x="5.2618%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="5.0118%" y="965" width="0.0162%" height="15" fill="rgb(206,64,50)" fg:x="5553" fg:w="18"/><text x="5.2618%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="5.0118%" y="949" width="0.0162%" height="15" fill="rgb(234,36,40)" fg:x="5553" fg:w="18"/><text x="5.2618%" y="959.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="5.0118%" y="933" width="0.0162%" height="15" fill="rgb(213,64,8)" fg:x="5553" fg:w="18"/><text x="5.2618%" y="943.50"></text></g><g><title>__rg_alloc (18 samples, 0.02%)</title><rect x="5.0118%" y="917" width="0.0162%" height="15" fill="rgb(210,75,36)" fg:x="5553" fg:w="18"/><text x="5.2618%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (18 samples, 0.02%)</title><rect x="5.0118%" y="901" width="0.0162%" height="15" fill="rgb(229,88,21)" fg:x="5553" fg:w="18"/><text x="5.2618%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="5.0281%" y="1061" width="0.0171%" height="15" fill="rgb(252,204,47)" fg:x="5571" fg:w="19"/><text x="5.2781%" y="1071.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (19 samples, 0.02%)</title><rect x="5.0281%" y="1045" width="0.0171%" height="15" fill="rgb(208,77,27)" fg:x="5571" fg:w="19"/><text x="5.2781%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (17 samples, 0.02%)</title><rect x="5.0452%" y="1061" width="0.0153%" height="15" fill="rgb(221,76,26)" fg:x="5590" fg:w="17"/><text x="5.2952%" y="1071.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (17 samples, 0.02%)</title><rect x="5.0452%" y="1045" width="0.0153%" height="15" fill="rgb(225,139,18)" fg:x="5590" fg:w="17"/><text x="5.2952%" y="1055.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (249 samples, 0.22%)</title><rect x="4.8557%" y="1125" width="0.2247%" height="15" fill="rgb(230,137,11)" fg:x="5380" fg:w="249"/><text x="5.1057%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (76 samples, 0.07%)</title><rect x="5.0118%" y="1109" width="0.0686%" height="15" fill="rgb(212,28,1)" fg:x="5553" fg:w="76"/><text x="5.2618%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (76 samples, 0.07%)</title><rect x="5.0118%" y="1093" width="0.0686%" height="15" fill="rgb(248,164,17)" fg:x="5553" fg:w="76"/><text x="5.2618%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (58 samples, 0.05%)</title><rect x="5.0281%" y="1077" width="0.0523%" height="15" fill="rgb(222,171,42)" fg:x="5571" fg:w="58"/><text x="5.2781%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="5.0606%" y="1061" width="0.0199%" height="15" fill="rgb(243,84,45)" fg:x="5607" fg:w="22"/><text x="5.3106%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="5.0606%" y="1045" width="0.0199%" height="15" fill="rgb(252,49,23)" fg:x="5607" fg:w="22"/><text x="5.3106%" y="1055.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="5.0606%" y="1029" width="0.0199%" height="15" fill="rgb(215,19,7)" fg:x="5607" fg:w="22"/><text x="5.3106%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (36 samples, 0.03%)</title><rect x="5.1003%" y="1109" width="0.0325%" height="15" fill="rgb(238,81,41)" fg:x="5651" fg:w="36"/><text x="5.3503%" y="1119.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (36 samples, 0.03%)</title><rect x="5.1003%" y="1093" width="0.0325%" height="15" fill="rgb(210,199,37)" fg:x="5651" fg:w="36"/><text x="5.3503%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (36 samples, 0.03%)</title><rect x="5.1003%" y="1077" width="0.0325%" height="15" fill="rgb(244,192,49)" fg:x="5651" fg:w="36"/><text x="5.3503%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (36 samples, 0.03%)</title><rect x="5.1003%" y="1061" width="0.0325%" height="15" fill="rgb(226,211,11)" fg:x="5651" fg:w="36"/><text x="5.3503%" y="1071.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (62 samples, 0.06%)</title><rect x="5.0804%" y="1125" width="0.0560%" height="15" fill="rgb(236,162,54)" fg:x="5629" fg:w="62"/><text x="5.3304%" y="1135.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (33 samples, 0.03%)</title><rect x="5.2104%" y="1109" width="0.0298%" height="15" fill="rgb(220,229,9)" fg:x="5773" fg:w="33"/><text x="5.4604%" y="1119.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (113 samples, 0.10%)</title><rect x="5.1427%" y="1125" width="0.1020%" height="15" fill="rgb(250,87,22)" fg:x="5698" fg:w="113"/><text x="5.3927%" y="1135.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.02%)</title><rect x="5.2447%" y="1125" width="0.0244%" height="15" fill="rgb(239,43,17)" fg:x="5811" fg:w="27"/><text x="5.4947%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (22 samples, 0.02%)</title><rect x="5.5263%" y="469" width="0.0199%" height="15" fill="rgb(231,177,25)" fg:x="6123" fg:w="22"/><text x="5.7763%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.03%)</title><rect x="5.5543%" y="421" width="0.0271%" height="15" fill="rgb(219,179,1)" fg:x="6154" fg:w="30"/><text x="5.8043%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (14 samples, 0.01%)</title><rect x="5.5813%" y="421" width="0.0126%" height="15" fill="rgb(238,219,53)" fg:x="6184" fg:w="14"/><text x="5.8313%" y="431.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (15 samples, 0.01%)</title><rect x="5.5940%" y="389" width="0.0135%" height="15" fill="rgb(232,167,36)" fg:x="6198" fg:w="15"/><text x="5.8440%" y="399.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (15 samples, 0.01%)</title><rect x="5.5940%" y="373" width="0.0135%" height="15" fill="rgb(244,19,51)" fg:x="6198" fg:w="15"/><text x="5.8440%" y="383.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (15 samples, 0.01%)</title><rect x="5.5940%" y="357" width="0.0135%" height="15" fill="rgb(224,6,22)" fg:x="6198" fg:w="15"/><text x="5.8440%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (15 samples, 0.01%)</title><rect x="5.5940%" y="341" width="0.0135%" height="15" fill="rgb(224,145,5)" fg:x="6198" fg:w="15"/><text x="5.8440%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (15 samples, 0.01%)</title><rect x="5.5940%" y="325" width="0.0135%" height="15" fill="rgb(234,130,49)" fg:x="6198" fg:w="15"/><text x="5.8440%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (23 samples, 0.02%)</title><rect x="5.6508%" y="165" width="0.0208%" height="15" fill="rgb(254,6,2)" fg:x="6261" fg:w="23"/><text x="5.9008%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (23 samples, 0.02%)</title><rect x="5.6508%" y="149" width="0.0208%" height="15" fill="rgb(208,96,46)" fg:x="6261" fg:w="23"/><text x="5.9008%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (23 samples, 0.02%)</title><rect x="5.6508%" y="133" width="0.0208%" height="15" fill="rgb(239,3,39)" fg:x="6261" fg:w="23"/><text x="5.9008%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (39 samples, 0.04%)</title><rect x="5.6409%" y="197" width="0.0352%" height="15" fill="rgb(233,210,1)" fg:x="6250" fg:w="39"/><text x="5.8909%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (39 samples, 0.04%)</title><rect x="5.6409%" y="181" width="0.0352%" height="15" fill="rgb(244,137,37)" fg:x="6250" fg:w="39"/><text x="5.8909%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (43 samples, 0.04%)</title><rect x="5.6409%" y="229" width="0.0388%" height="15" fill="rgb(240,136,2)" fg:x="6250" fg:w="43"/><text x="5.8909%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (43 samples, 0.04%)</title><rect x="5.6409%" y="213" width="0.0388%" height="15" fill="rgb(239,18,37)" fg:x="6250" fg:w="43"/><text x="5.8909%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (81 samples, 0.07%)</title><rect x="5.6075%" y="325" width="0.0731%" height="15" fill="rgb(218,185,22)" fg:x="6213" fg:w="81"/><text x="5.8575%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (66 samples, 0.06%)</title><rect x="5.6210%" y="309" width="0.0596%" height="15" fill="rgb(225,218,4)" fg:x="6228" fg:w="66"/><text x="5.8710%" y="319.50"></text></g><g><title>__rg_dealloc (66 samples, 0.06%)</title><rect x="5.6210%" y="293" width="0.0596%" height="15" fill="rgb(230,182,32)" fg:x="6228" fg:w="66"/><text x="5.8710%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (66 samples, 0.06%)</title><rect x="5.6210%" y="277" width="0.0596%" height="15" fill="rgb(242,56,43)" fg:x="6228" fg:w="66"/><text x="5.8710%" y="287.50"></text></g><g><title>rust_dealloc (56 samples, 0.05%)</title><rect x="5.6301%" y="261" width="0.0505%" height="15" fill="rgb(233,99,24)" fg:x="6238" fg:w="56"/><text x="5.8801%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (51 samples, 0.05%)</title><rect x="5.6346%" y="245" width="0.0460%" height="15" fill="rgb(234,209,42)" fg:x="6243" fg:w="51"/><text x="5.8846%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (179 samples, 0.16%)</title><rect x="5.5263%" y="485" width="0.1616%" height="15" fill="rgb(227,7,12)" fg:x="6123" fg:w="179"/><text x="5.7763%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (157 samples, 0.14%)</title><rect x="5.5461%" y="469" width="0.1417%" height="15" fill="rgb(245,203,43)" fg:x="6145" fg:w="157"/><text x="5.7961%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (156 samples, 0.14%)</title><rect x="5.5470%" y="453" width="0.1408%" height="15" fill="rgb(238,205,33)" fg:x="6146" fg:w="156"/><text x="5.7970%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (156 samples, 0.14%)</title><rect x="5.5470%" y="437" width="0.1408%" height="15" fill="rgb(231,56,7)" fg:x="6146" fg:w="156"/><text x="5.7970%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (104 samples, 0.09%)</title><rect x="5.5940%" y="421" width="0.0939%" height="15" fill="rgb(244,186,29)" fg:x="6198" fg:w="104"/><text x="5.8440%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (104 samples, 0.09%)</title><rect x="5.5940%" y="405" width="0.0939%" height="15" fill="rgb(234,111,31)" fg:x="6198" fg:w="104"/><text x="5.8440%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (89 samples, 0.08%)</title><rect x="5.6075%" y="389" width="0.0803%" height="15" fill="rgb(241,149,10)" fg:x="6213" fg:w="89"/><text x="5.8575%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.08%)</title><rect x="5.6075%" y="373" width="0.0803%" height="15" fill="rgb(249,206,44)" fg:x="6213" fg:w="89"/><text x="5.8575%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (89 samples, 0.08%)</title><rect x="5.6075%" y="357" width="0.0803%" height="15" fill="rgb(251,153,30)" fg:x="6213" fg:w="89"/><text x="5.8575%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.08%)</title><rect x="5.6075%" y="341" width="0.0803%" height="15" fill="rgb(239,152,38)" fg:x="6213" fg:w="89"/><text x="5.8575%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (94 samples, 0.08%)</title><rect x="5.6878%" y="485" width="0.0848%" height="15" fill="rgb(249,139,47)" fg:x="6302" fg:w="94"/><text x="5.9378%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (56 samples, 0.05%)</title><rect x="5.7221%" y="469" width="0.0505%" height="15" fill="rgb(244,64,35)" fg:x="6340" fg:w="56"/><text x="5.9721%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (56 samples, 0.05%)</title><rect x="5.7221%" y="453" width="0.0505%" height="15" fill="rgb(216,46,15)" fg:x="6340" fg:w="56"/><text x="5.9721%" y="463.50"></text></g><g><title>size_to_sizeclass (29 samples, 0.03%)</title><rect x="5.7970%" y="293" width="0.0262%" height="15" fill="rgb(250,74,19)" fg:x="6423" fg:w="29"/><text x="6.0470%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::empty (42 samples, 0.04%)</title><rect x="5.8404%" y="277" width="0.0379%" height="15" fill="rgb(249,42,33)" fg:x="6471" fg:w="42"/><text x="6.0904%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (42 samples, 0.04%)</title><rect x="5.8404%" y="261" width="0.0379%" height="15" fill="rgb(242,149,17)" fg:x="6471" fg:w="42"/><text x="6.0904%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (442 samples, 0.40%)</title><rect x="5.7898%" y="325" width="0.3989%" height="15" fill="rgb(244,29,21)" fg:x="6415" fg:w="442"/><text x="6.0398%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (442 samples, 0.40%)</title><rect x="5.7898%" y="309" width="0.3989%" height="15" fill="rgb(220,130,37)" fg:x="6415" fg:w="442"/><text x="6.0398%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (405 samples, 0.37%)</title><rect x="5.8232%" y="293" width="0.3655%" height="15" fill="rgb(211,67,2)" fg:x="6452" fg:w="405"/><text x="6.0732%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (344 samples, 0.31%)</title><rect x="5.8783%" y="277" width="0.3105%" height="15" fill="rgb(235,68,52)" fg:x="6513" fg:w="344"/><text x="6.1283%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (344 samples, 0.31%)</title><rect x="5.8783%" y="261" width="0.3105%" height="15" fill="rgb(246,142,3)" fg:x="6513" fg:w="344"/><text x="6.1283%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (462 samples, 0.42%)</title><rect x="5.7727%" y="421" width="0.4170%" height="15" fill="rgb(241,25,7)" fg:x="6396" fg:w="462"/><text x="6.0227%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (462 samples, 0.42%)</title><rect x="5.7727%" y="405" width="0.4170%" height="15" fill="rgb(242,119,39)" fg:x="6396" fg:w="462"/><text x="6.0227%" y="415.50"></text></g><g><title>alloc::alloc::alloc (455 samples, 0.41%)</title><rect x="5.7790%" y="389" width="0.4107%" height="15" fill="rgb(241,98,45)" fg:x="6403" fg:w="455"/><text x="6.0290%" y="399.50"></text></g><g><title>__rg_alloc (455 samples, 0.41%)</title><rect x="5.7790%" y="373" width="0.4107%" height="15" fill="rgb(254,28,30)" fg:x="6403" fg:w="455"/><text x="6.0290%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (455 samples, 0.41%)</title><rect x="5.7790%" y="357" width="0.4107%" height="15" fill="rgb(241,142,54)" fg:x="6403" fg:w="455"/><text x="6.0290%" y="367.50"></text></g><g><title>rust_alloc (450 samples, 0.41%)</title><rect x="5.7835%" y="341" width="0.4061%" height="15" fill="rgb(222,85,15)" fg:x="6408" fg:w="450"/><text x="6.0335%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (481 samples, 0.43%)</title><rect x="5.7727%" y="437" width="0.4341%" height="15" fill="rgb(210,85,47)" fg:x="6396" fg:w="481"/><text x="6.0227%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (19 samples, 0.02%)</title><rect x="6.1896%" y="421" width="0.0171%" height="15" fill="rgb(224,206,25)" fg:x="6858" fg:w="19"/><text x="6.4396%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (19 samples, 0.02%)</title><rect x="6.1896%" y="405" width="0.0171%" height="15" fill="rgb(243,201,19)" fg:x="6858" fg:w="19"/><text x="6.4396%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (19 samples, 0.02%)</title><rect x="6.1896%" y="389" width="0.0171%" height="15" fill="rgb(236,59,4)" fg:x="6858" fg:w="19"/><text x="6.4396%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (486 samples, 0.44%)</title><rect x="5.7727%" y="485" width="0.4386%" height="15" fill="rgb(254,179,45)" fg:x="6396" fg:w="486"/><text x="6.0227%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (486 samples, 0.44%)</title><rect x="5.7727%" y="469" width="0.4386%" height="15" fill="rgb(226,14,10)" fg:x="6396" fg:w="486"/><text x="6.0227%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (486 samples, 0.44%)</title><rect x="5.7727%" y="453" width="0.4386%" height="15" fill="rgb(244,27,41)" fg:x="6396" fg:w="486"/><text x="6.0227%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (920 samples, 0.83%)</title><rect x="5.3927%" y="629" width="0.8303%" height="15" fill="rgb(235,35,32)" fg:x="5975" fg:w="920"/><text x="5.6427%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (920 samples, 0.83%)</title><rect x="5.3927%" y="613" width="0.8303%" height="15" fill="rgb(218,68,31)" fg:x="5975" fg:w="920"/><text x="5.6427%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (920 samples, 0.83%)</title><rect x="5.3927%" y="597" width="0.8303%" height="15" fill="rgb(207,120,37)" fg:x="5975" fg:w="920"/><text x="5.6427%" y="607.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (920 samples, 0.83%)</title><rect x="5.3927%" y="581" width="0.8303%" height="15" fill="rgb(227,98,0)" fg:x="5975" fg:w="920"/><text x="5.6427%" y="591.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (920 samples, 0.83%)</title><rect x="5.3927%" y="565" width="0.8303%" height="15" fill="rgb(207,7,3)" fg:x="5975" fg:w="920"/><text x="5.6427%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (920 samples, 0.83%)</title><rect x="5.3927%" y="549" width="0.8303%" height="15" fill="rgb(206,98,19)" fg:x="5975" fg:w="920"/><text x="5.6427%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (920 samples, 0.83%)</title><rect x="5.3927%" y="533" width="0.8303%" height="15" fill="rgb(217,5,26)" fg:x="5975" fg:w="920"/><text x="5.6427%" y="543.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (920 samples, 0.83%)</title><rect x="5.3927%" y="517" width="0.8303%" height="15" fill="rgb(235,190,38)" fg:x="5975" fg:w="920"/><text x="5.6427%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (779 samples, 0.70%)</title><rect x="5.5200%" y="501" width="0.7031%" height="15" fill="rgb(247,86,24)" fg:x="6116" fg:w="779"/><text x="5.7700%" y="511.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="6.2113%" y="485" width="0.0117%" height="15" fill="rgb(205,101,16)" fg:x="6882" fg:w="13"/><text x="6.4613%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned_erms (978 samples, 0.88%)</title><rect x="6.2673%" y="597" width="0.8827%" height="15" fill="rgb(246,168,33)" fg:x="6944" fg:w="978"/><text x="6.5173%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (12 samples, 0.01%)</title><rect x="7.1743%" y="533" width="0.0108%" height="15" fill="rgb(231,114,1)" fg:x="7949" fg:w="12"/><text x="7.4243%" y="543.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (12 samples, 0.01%)</title><rect x="7.1743%" y="517" width="0.0108%" height="15" fill="rgb(207,184,53)" fg:x="7949" fg:w="12"/><text x="7.4243%" y="527.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (12 samples, 0.01%)</title><rect x="7.1743%" y="501" width="0.0108%" height="15" fill="rgb(224,95,51)" fg:x="7949" fg:w="12"/><text x="7.4243%" y="511.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="7.1743%" y="485" width="0.0108%" height="15" fill="rgb(212,188,45)" fg:x="7949" fg:w="12"/><text x="7.4243%" y="495.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="7.1743%" y="469" width="0.0108%" height="15" fill="rgb(223,154,38)" fg:x="7949" fg:w="12"/><text x="7.4243%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (13 samples, 0.01%)</title><rect x="7.1861%" y="469" width="0.0117%" height="15" fill="rgb(251,22,52)" fg:x="7962" fg:w="13"/><text x="7.4361%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (13 samples, 0.01%)</title><rect x="7.1861%" y="453" width="0.0117%" height="15" fill="rgb(229,209,22)" fg:x="7962" fg:w="13"/><text x="7.4361%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="7.1861%" y="437" width="0.0117%" height="15" fill="rgb(234,138,34)" fg:x="7962" fg:w="13"/><text x="7.4361%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (17 samples, 0.02%)</title><rect x="7.1861%" y="485" width="0.0153%" height="15" fill="rgb(212,95,11)" fg:x="7962" fg:w="17"/><text x="7.4361%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (25 samples, 0.02%)</title><rect x="7.1851%" y="501" width="0.0226%" height="15" fill="rgb(240,179,47)" fg:x="7961" fg:w="25"/><text x="7.4351%" y="511.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (17 samples, 0.02%)</title><rect x="7.2104%" y="485" width="0.0153%" height="15" fill="rgb(240,163,11)" fg:x="7989" fg:w="17"/><text x="7.4604%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (129 samples, 0.12%)</title><rect x="7.1851%" y="533" width="0.1164%" height="15" fill="rgb(236,37,12)" fg:x="7961" fg:w="129"/><text x="7.4351%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (129 samples, 0.12%)</title><rect x="7.1851%" y="517" width="0.1164%" height="15" fill="rgb(232,164,16)" fg:x="7961" fg:w="129"/><text x="7.4351%" y="527.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (104 samples, 0.09%)</title><rect x="7.2077%" y="501" width="0.0939%" height="15" fill="rgb(244,205,15)" fg:x="7986" fg:w="104"/><text x="7.4577%" y="511.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (84 samples, 0.08%)</title><rect x="7.2258%" y="485" width="0.0758%" height="15" fill="rgb(223,117,47)" fg:x="8006" fg:w="84"/><text x="7.4758%" y="495.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (84 samples, 0.08%)</title><rect x="7.2258%" y="469" width="0.0758%" height="15" fill="rgb(244,107,35)" fg:x="8006" fg:w="84"/><text x="7.4758%" y="479.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (84 samples, 0.08%)</title><rect x="7.2258%" y="453" width="0.0758%" height="15" fill="rgb(205,140,8)" fg:x="8006" fg:w="84"/><text x="7.4758%" y="463.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (15 samples, 0.01%)</title><rect x="7.3115%" y="501" width="0.0135%" height="15" fill="rgb(228,84,46)" fg:x="8101" fg:w="15"/><text x="7.5615%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (14 samples, 0.01%)</title><rect x="7.3124%" y="485" width="0.0126%" height="15" fill="rgb(254,188,9)" fg:x="8102" fg:w="14"/><text x="7.5624%" y="495.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="7.3124%" y="469" width="0.0126%" height="15" fill="rgb(206,112,54)" fg:x="8102" fg:w="14"/><text x="7.5624%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (13 samples, 0.01%)</title><rect x="7.3250%" y="501" width="0.0117%" height="15" fill="rgb(216,84,49)" fg:x="8116" fg:w="13"/><text x="7.5750%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (13 samples, 0.01%)</title><rect x="7.3250%" y="485" width="0.0117%" height="15" fill="rgb(214,194,35)" fg:x="8116" fg:w="13"/><text x="7.5750%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="7.3016%" y="533" width="0.0361%" height="15" fill="rgb(249,28,3)" fg:x="8090" fg:w="40"/><text x="7.5516%" y="543.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (31 samples, 0.03%)</title><rect x="7.3097%" y="517" width="0.0280%" height="15" fill="rgb(222,56,52)" fg:x="8099" fg:w="31"/><text x="7.5597%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (16 samples, 0.01%)</title><rect x="7.3476%" y="485" width="0.0144%" height="15" fill="rgb(245,217,50)" fg:x="8141" fg:w="16"/><text x="7.5976%" y="495.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (15 samples, 0.01%)</title><rect x="7.3485%" y="469" width="0.0135%" height="15" fill="rgb(213,201,24)" fg:x="8142" fg:w="15"/><text x="7.5985%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="7.3377%" y="533" width="0.0397%" height="15" fill="rgb(248,116,28)" fg:x="8130" fg:w="44"/><text x="7.5877%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="7.3386%" y="517" width="0.0388%" height="15" fill="rgb(219,72,43)" fg:x="8131" fg:w="43"/><text x="7.5886%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="7.3449%" y="501" width="0.0325%" height="15" fill="rgb(209,138,14)" fg:x="8138" fg:w="36"/><text x="7.5949%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="7.3620%" y="485" width="0.0153%" height="15" fill="rgb(222,18,33)" fg:x="8157" fg:w="17"/><text x="7.6120%" y="495.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (17 samples, 0.02%)</title><rect x="7.3620%" y="469" width="0.0153%" height="15" fill="rgb(213,199,7)" fg:x="8157" fg:w="17"/><text x="7.6120%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::empty (27 samples, 0.02%)</title><rect x="7.3774%" y="533" width="0.0244%" height="15" fill="rgb(250,110,10)" fg:x="8174" fg:w="27"/><text x="7.6274%" y="543.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (27 samples, 0.02%)</title><rect x="7.3774%" y="517" width="0.0244%" height="15" fill="rgb(248,123,6)" fg:x="8174" fg:w="27"/><text x="7.6274%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (530 samples, 0.48%)</title><rect x="7.1518%" y="581" width="0.4783%" height="15" fill="rgb(206,91,31)" fg:x="7924" fg:w="530"/><text x="7.4018%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (524 samples, 0.47%)</title><rect x="7.1572%" y="565" width="0.4729%" height="15" fill="rgb(211,154,13)" fg:x="7930" fg:w="524"/><text x="7.4072%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (518 samples, 0.47%)</title><rect x="7.1626%" y="549" width="0.4675%" height="15" fill="rgb(225,148,7)" fg:x="7936" fg:w="518"/><text x="7.4126%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::take (253 samples, 0.23%)</title><rect x="7.4018%" y="533" width="0.2283%" height="15" fill="rgb(220,160,43)" fg:x="8201" fg:w="253"/><text x="7.6518%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (253 samples, 0.23%)</title><rect x="7.4018%" y="517" width="0.2283%" height="15" fill="rgb(213,52,39)" fg:x="8201" fg:w="253"/><text x="7.6518%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (2,484 samples, 2.24%)</title><rect x="5.3927%" y="981" width="2.2419%" height="15" fill="rgb(243,137,7)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="991.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,484 samples, 2.24%)</title><rect x="5.3927%" y="965" width="2.2419%" height="15" fill="rgb(230,79,13)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="975.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (2,484 samples, 2.24%)</title><rect x="5.3927%" y="949" width="2.2419%" height="15" fill="rgb(247,105,23)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="959.50">t..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,484 samples, 2.24%)</title><rect x="5.3927%" y="933" width="2.2419%" height="15" fill="rgb(223,179,41)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="943.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,484 samples, 2.24%)</title><rect x="5.3927%" y="917" width="2.2419%" height="15" fill="rgb(218,9,34)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="927.50">&lt;..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (2,484 samples, 2.24%)</title><rect x="5.3927%" y="901" width="2.2419%" height="15" fill="rgb(222,106,8)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="911.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,484 samples, 2.24%)</title><rect x="5.3927%" y="885" width="2.2419%" height="15" fill="rgb(211,220,0)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="895.50">&lt;..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (2,484 samples, 2.24%)</title><rect x="5.3927%" y="869" width="2.2419%" height="15" fill="rgb(229,52,16)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="879.50">a..</text></g><g><title>std::panic::catch_unwind (2,484 samples, 2.24%)</title><rect x="5.3927%" y="853" width="2.2419%" height="15" fill="rgb(212,155,18)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="863.50">s..</text></g><g><title>std::panicking::try (2,484 samples, 2.24%)</title><rect x="5.3927%" y="837" width="2.2419%" height="15" fill="rgb(242,21,14)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="847.50">s..</text></g><g><title>std::panicking::try::do_call (2,484 samples, 2.24%)</title><rect x="5.3927%" y="821" width="2.2419%" height="15" fill="rgb(222,19,48)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="831.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,484 samples, 2.24%)</title><rect x="5.3927%" y="805" width="2.2419%" height="15" fill="rgb(232,45,27)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="815.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once (2,484 samples, 2.24%)</title><rect x="5.3927%" y="789" width="2.2419%" height="15" fill="rgb(249,103,42)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="799.50">c..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (2,484 samples, 2.24%)</title><rect x="5.3927%" y="773" width="2.2419%" height="15" fill="rgb(246,81,33)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="783.50">a..</text></g><g><title>async_ffi::FfiContext::with_context (2,484 samples, 2.24%)</title><rect x="5.3927%" y="757" width="2.2419%" height="15" fill="rgb(252,33,42)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="767.50">a..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (2,484 samples, 2.24%)</title><rect x="5.3927%" y="741" width="2.2419%" height="15" fill="rgb(209,212,41)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="751.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,484 samples, 2.24%)</title><rect x="5.3927%" y="725" width="2.2419%" height="15" fill="rgb(207,154,6)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="735.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (2,484 samples, 2.24%)</title><rect x="5.3927%" y="709" width="2.2419%" height="15" fill="rgb(223,64,47)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="719.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (2,484 samples, 2.24%)</title><rect x="5.3927%" y="693" width="2.2419%" height="15" fill="rgb(211,161,38)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="703.50">t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (2,484 samples, 2.24%)</title><rect x="5.3927%" y="677" width="2.2419%" height="15" fill="rgb(219,138,40)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="687.50">t..</text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (2,484 samples, 2.24%)</title><rect x="5.3927%" y="661" width="2.2419%" height="15" fill="rgb(241,228,46)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="671.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (2,484 samples, 2.24%)</title><rect x="5.3927%" y="645" width="2.2419%" height="15" fill="rgb(223,209,38)" fg:x="5975" fg:w="2484"/><text x="5.6427%" y="655.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,564 samples, 1.41%)</title><rect x="6.2230%" y="629" width="1.4116%" height="15" fill="rgb(236,164,45)" fg:x="6895" fg:w="1564"/><text x="6.4730%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (1,564 samples, 1.41%)</title><rect x="6.2230%" y="613" width="1.4116%" height="15" fill="rgb(231,15,5)" fg:x="6895" fg:w="1564"/><text x="6.4730%" y="623.50"></text></g><g><title>rust_alloc (537 samples, 0.48%)</title><rect x="7.1499%" y="597" width="0.4847%" height="15" fill="rgb(252,35,15)" fg:x="7922" fg:w="537"/><text x="7.3999%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="7.6346%" y="933" width="0.0144%" height="15" fill="rgb(248,181,18)" fg:x="8459" fg:w="16"/><text x="7.8846%" y="943.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (16 samples, 0.01%)</title><rect x="7.6346%" y="917" width="0.0144%" height="15" fill="rgb(233,39,42)" fg:x="8459" fg:w="16"/><text x="7.8846%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="7.6346%" y="901" width="0.0144%" height="15" fill="rgb(238,110,33)" fg:x="8459" fg:w="16"/><text x="7.8846%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (16 samples, 0.01%)</title><rect x="7.6346%" y="885" width="0.0144%" height="15" fill="rgb(233,195,10)" fg:x="8459" fg:w="16"/><text x="7.8846%" y="895.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="7.6346%" y="869" width="0.0144%" height="15" fill="rgb(254,105,3)" fg:x="8459" fg:w="16"/><text x="7.8846%" y="879.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (16 samples, 0.01%)</title><rect x="7.6346%" y="853" width="0.0144%" height="15" fill="rgb(221,225,9)" fg:x="8459" fg:w="16"/><text x="7.8846%" y="863.50"></text></g><g><title>event_listener::Event::notify (16 samples, 0.01%)</title><rect x="7.6346%" y="837" width="0.0144%" height="15" fill="rgb(224,227,45)" fg:x="8459" fg:w="16"/><text x="7.8846%" y="847.50"></text></g><g><title>event_listener::List::notify (16 samples, 0.01%)</title><rect x="7.6346%" y="821" width="0.0144%" height="15" fill="rgb(229,198,43)" fg:x="8459" fg:w="16"/><text x="7.8846%" y="831.50"></text></g><g><title>core::task::wake::Waker::wake (16 samples, 0.01%)</title><rect x="7.6346%" y="805" width="0.0144%" height="15" fill="rgb(206,209,35)" fg:x="8459" fg:w="16"/><text x="7.8846%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (16 samples, 0.01%)</title><rect x="7.6346%" y="789" width="0.0144%" height="15" fill="rgb(245,195,53)" fg:x="8459" fg:w="16"/><text x="7.8846%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (16 samples, 0.01%)</title><rect x="7.6346%" y="773" width="0.0144%" height="15" fill="rgb(240,92,26)" fg:x="8459" fg:w="16"/><text x="7.8846%" y="783.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (15 samples, 0.01%)</title><rect x="7.6355%" y="757" width="0.0135%" height="15" fill="rgb(207,40,23)" fg:x="8460" fg:w="15"/><text x="7.8855%" y="767.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (15 samples, 0.01%)</title><rect x="7.6355%" y="741" width="0.0135%" height="15" fill="rgb(223,111,35)" fg:x="8460" fg:w="15"/><text x="7.8855%" y="751.50"></text></g><g><title>async_io::reactor::Reactor::notify (15 samples, 0.01%)</title><rect x="7.6355%" y="725" width="0.0135%" height="15" fill="rgb(229,147,28)" fg:x="8460" fg:w="15"/><text x="7.8855%" y="735.50"></text></g><g><title>polling::Poller::notify (15 samples, 0.01%)</title><rect x="7.6355%" y="709" width="0.0135%" height="15" fill="rgb(211,29,28)" fg:x="8460" fg:w="15"/><text x="7.8855%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="7.6500%" y="469" width="0.0135%" height="15" fill="rgb(228,72,33)" fg:x="8476" fg:w="15"/><text x="7.9000%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (72 samples, 0.06%)</title><rect x="7.6500%" y="501" width="0.0650%" height="15" fill="rgb(205,214,31)" fg:x="8476" fg:w="72"/><text x="7.9000%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (72 samples, 0.06%)</title><rect x="7.6500%" y="485" width="0.0650%" height="15" fill="rgb(224,111,15)" fg:x="8476" fg:w="72"/><text x="7.9000%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (57 samples, 0.05%)</title><rect x="7.6635%" y="469" width="0.0514%" height="15" fill="rgb(253,21,26)" fg:x="8491" fg:w="57"/><text x="7.9135%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (50 samples, 0.05%)</title><rect x="7.6698%" y="453" width="0.0451%" height="15" fill="rgb(245,139,43)" fg:x="8498" fg:w="50"/><text x="7.9198%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (50 samples, 0.05%)</title><rect x="7.6698%" y="437" width="0.0451%" height="15" fill="rgb(252,170,7)" fg:x="8498" fg:w="50"/><text x="7.9198%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (50 samples, 0.05%)</title><rect x="7.6698%" y="421" width="0.0451%" height="15" fill="rgb(231,118,14)" fg:x="8498" fg:w="50"/><text x="7.9198%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (87 samples, 0.08%)</title><rect x="7.6500%" y="805" width="0.0785%" height="15" fill="rgb(238,83,0)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="815.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (87 samples, 0.08%)</title><rect x="7.6500%" y="789" width="0.0785%" height="15" fill="rgb(221,39,39)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (87 samples, 0.08%)</title><rect x="7.6500%" y="773" width="0.0785%" height="15" fill="rgb(222,119,46)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (87 samples, 0.08%)</title><rect x="7.6500%" y="757" width="0.0785%" height="15" fill="rgb(222,165,49)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (87 samples, 0.08%)</title><rect x="7.6500%" y="741" width="0.0785%" height="15" fill="rgb(219,113,52)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (87 samples, 0.08%)</title><rect x="7.6500%" y="725" width="0.0785%" height="15" fill="rgb(214,7,15)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (87 samples, 0.08%)</title><rect x="7.6500%" y="709" width="0.0785%" height="15" fill="rgb(235,32,4)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (87 samples, 0.08%)</title><rect x="7.6500%" y="693" width="0.0785%" height="15" fill="rgb(238,90,54)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (87 samples, 0.08%)</title><rect x="7.6500%" y="677" width="0.0785%" height="15" fill="rgb(213,208,19)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (87 samples, 0.08%)</title><rect x="7.6500%" y="661" width="0.0785%" height="15" fill="rgb(233,156,4)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (87 samples, 0.08%)</title><rect x="7.6500%" y="645" width="0.0785%" height="15" fill="rgb(207,194,5)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87 samples, 0.08%)</title><rect x="7.6500%" y="629" width="0.0785%" height="15" fill="rgb(206,111,30)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="639.50"></text></g><g><title>alloc::alloc::alloc (87 samples, 0.08%)</title><rect x="7.6500%" y="613" width="0.0785%" height="15" fill="rgb(243,70,54)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="623.50"></text></g><g><title>__rg_alloc (87 samples, 0.08%)</title><rect x="7.6500%" y="597" width="0.0785%" height="15" fill="rgb(242,28,8)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (87 samples, 0.08%)</title><rect x="7.6500%" y="581" width="0.0785%" height="15" fill="rgb(219,106,18)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="591.50"></text></g><g><title>rust_alloc (87 samples, 0.08%)</title><rect x="7.6500%" y="565" width="0.0785%" height="15" fill="rgb(244,222,10)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="7.6500%" y="549" width="0.0785%" height="15" fill="rgb(236,179,52)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="7.6500%" y="533" width="0.0785%" height="15" fill="rgb(213,23,39)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="7.6500%" y="517" width="0.0785%" height="15" fill="rgb(238,48,10)" fg:x="8476" fg:w="87"/><text x="7.9000%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="7.7149%" y="501" width="0.0135%" height="15" fill="rgb(251,196,23)" fg:x="8548" fg:w="15"/><text x="7.9649%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="7.7149%" y="485" width="0.0135%" height="15" fill="rgb(250,152,24)" fg:x="8548" fg:w="15"/><text x="7.9649%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="7.7149%" y="469" width="0.0135%" height="15" fill="rgb(209,150,17)" fg:x="8548" fg:w="15"/><text x="7.9649%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="7.7149%" y="453" width="0.0135%" height="15" fill="rgb(234,202,34)" fg:x="8548" fg:w="15"/><text x="7.9649%" y="463.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (15 samples, 0.01%)</title><rect x="7.7149%" y="437" width="0.0135%" height="15" fill="rgb(253,148,53)" fg:x="8548" fg:w="15"/><text x="7.9649%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="7.7285%" y="613" width="0.0379%" height="15" fill="rgb(218,129,16)" fg:x="8563" fg:w="42"/><text x="7.9785%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (42 samples, 0.04%)</title><rect x="7.7285%" y="597" width="0.0379%" height="15" fill="rgb(216,85,19)" fg:x="8563" fg:w="42"/><text x="7.9785%" y="607.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (37 samples, 0.03%)</title><rect x="7.7330%" y="581" width="0.0334%" height="15" fill="rgb(235,228,7)" fg:x="8568" fg:w="37"/><text x="7.9830%" y="591.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (32 samples, 0.03%)</title><rect x="7.7375%" y="565" width="0.0289%" height="15" fill="rgb(245,175,0)" fg:x="8573" fg:w="32"/><text x="7.9875%" y="575.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (32 samples, 0.03%)</title><rect x="7.7375%" y="549" width="0.0289%" height="15" fill="rgb(208,168,36)" fg:x="8573" fg:w="32"/><text x="7.9875%" y="559.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (32 samples, 0.03%)</title><rect x="7.7375%" y="533" width="0.0289%" height="15" fill="rgb(246,171,24)" fg:x="8573" fg:w="32"/><text x="7.9875%" y="543.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (132 samples, 0.12%)</title><rect x="7.6491%" y="917" width="0.1191%" height="15" fill="rgb(215,142,24)" fg:x="8475" fg:w="132"/><text x="7.8991%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (131 samples, 0.12%)</title><rect x="7.6500%" y="901" width="0.1182%" height="15" fill="rgb(250,187,7)" fg:x="8476" fg:w="131"/><text x="7.9000%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (131 samples, 0.12%)</title><rect x="7.6500%" y="885" width="0.1182%" height="15" fill="rgb(228,66,33)" fg:x="8476" fg:w="131"/><text x="7.9000%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (131 samples, 0.12%)</title><rect x="7.6500%" y="869" width="0.1182%" height="15" fill="rgb(234,215,21)" fg:x="8476" fg:w="131"/><text x="7.9000%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (131 samples, 0.12%)</title><rect x="7.6500%" y="853" width="0.1182%" height="15" fill="rgb(222,191,20)" fg:x="8476" fg:w="131"/><text x="7.9000%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (131 samples, 0.12%)</title><rect x="7.6500%" y="837" width="0.1182%" height="15" fill="rgb(245,79,54)" fg:x="8476" fg:w="131"/><text x="7.9000%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (131 samples, 0.12%)</title><rect x="7.6500%" y="821" width="0.1182%" height="15" fill="rgb(240,10,37)" fg:x="8476" fg:w="131"/><text x="7.9000%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (44 samples, 0.04%)</title><rect x="7.7285%" y="805" width="0.0397%" height="15" fill="rgb(214,192,32)" fg:x="8563" fg:w="44"/><text x="7.9785%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (44 samples, 0.04%)</title><rect x="7.7285%" y="789" width="0.0397%" height="15" fill="rgb(209,36,54)" fg:x="8563" fg:w="44"/><text x="7.9785%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (44 samples, 0.04%)</title><rect x="7.7285%" y="773" width="0.0397%" height="15" fill="rgb(220,10,11)" fg:x="8563" fg:w="44"/><text x="7.9785%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (44 samples, 0.04%)</title><rect x="7.7285%" y="757" width="0.0397%" height="15" fill="rgb(221,106,17)" fg:x="8563" fg:w="44"/><text x="7.9785%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (44 samples, 0.04%)</title><rect x="7.7285%" y="741" width="0.0397%" height="15" fill="rgb(251,142,44)" fg:x="8563" fg:w="44"/><text x="7.9785%" y="751.50"></text></g><g><title>alloc::alloc::alloc (44 samples, 0.04%)</title><rect x="7.7285%" y="725" width="0.0397%" height="15" fill="rgb(238,13,15)" fg:x="8563" fg:w="44"/><text x="7.9785%" y="735.50"></text></g><g><title>__rg_alloc (44 samples, 0.04%)</title><rect x="7.7285%" y="709" width="0.0397%" height="15" fill="rgb(208,107,27)" fg:x="8563" fg:w="44"/><text x="7.9785%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (44 samples, 0.04%)</title><rect x="7.7285%" y="693" width="0.0397%" height="15" fill="rgb(205,136,37)" fg:x="8563" fg:w="44"/><text x="7.9785%" y="703.50"></text></g><g><title>rust_alloc (44 samples, 0.04%)</title><rect x="7.7285%" y="677" width="0.0397%" height="15" fill="rgb(250,205,27)" fg:x="8563" fg:w="44"/><text x="7.9785%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="7.7285%" y="661" width="0.0397%" height="15" fill="rgb(210,80,43)" fg:x="8563" fg:w="44"/><text x="7.9785%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="7.7285%" y="645" width="0.0397%" height="15" fill="rgb(247,160,36)" fg:x="8563" fg:w="44"/><text x="7.9785%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="7.7285%" y="629" width="0.0397%" height="15" fill="rgb(234,13,49)" fg:x="8563" fg:w="44"/><text x="7.9785%" y="639.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (324 samples, 0.29%)</title><rect x="8.0254%" y="901" width="0.2924%" height="15" fill="rgb(234,122,0)" fg:x="8892" fg:w="324"/><text x="8.2754%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (54 samples, 0.05%)</title><rect x="8.3557%" y="757" width="0.0487%" height="15" fill="rgb(207,146,38)" fg:x="9258" fg:w="54"/><text x="8.6057%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="8.3594%" y="741" width="0.0451%" height="15" fill="rgb(207,177,25)" fg:x="9262" fg:w="50"/><text x="8.6094%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="8.3621%" y="725" width="0.0424%" height="15" fill="rgb(211,178,42)" fg:x="9265" fg:w="47"/><text x="8.6121%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::take (35 samples, 0.03%)</title><rect x="8.3729%" y="709" width="0.0316%" height="15" fill="rgb(230,69,54)" fg:x="9277" fg:w="35"/><text x="8.6229%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (35 samples, 0.03%)</title><rect x="8.3729%" y="693" width="0.0316%" height="15" fill="rgb(214,135,41)" fg:x="9277" fg:w="35"/><text x="8.6229%" y="703.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (103 samples, 0.09%)</title><rect x="8.3178%" y="901" width="0.0930%" height="15" fill="rgb(237,67,25)" fg:x="9216" fg:w="103"/><text x="8.5678%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (103 samples, 0.09%)</title><rect x="8.3178%" y="885" width="0.0930%" height="15" fill="rgb(222,189,50)" fg:x="9216" fg:w="103"/><text x="8.5678%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (77 samples, 0.07%)</title><rect x="8.3413%" y="869" width="0.0695%" height="15" fill="rgb(245,148,34)" fg:x="9242" fg:w="77"/><text x="8.5913%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 0.07%)</title><rect x="8.3413%" y="853" width="0.0695%" height="15" fill="rgb(222,29,6)" fg:x="9242" fg:w="77"/><text x="8.5913%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77 samples, 0.07%)</title><rect x="8.3413%" y="837" width="0.0695%" height="15" fill="rgb(221,189,43)" fg:x="9242" fg:w="77"/><text x="8.5913%" y="847.50"></text></g><g><title>alloc::alloc::alloc (77 samples, 0.07%)</title><rect x="8.3413%" y="821" width="0.0695%" height="15" fill="rgb(207,36,27)" fg:x="9242" fg:w="77"/><text x="8.5913%" y="831.50"></text></g><g><title>__rg_alloc (77 samples, 0.07%)</title><rect x="8.3413%" y="805" width="0.0695%" height="15" fill="rgb(217,90,24)" fg:x="9242" fg:w="77"/><text x="8.5913%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (77 samples, 0.07%)</title><rect x="8.3413%" y="789" width="0.0695%" height="15" fill="rgb(224,66,35)" fg:x="9242" fg:w="77"/><text x="8.5913%" y="799.50"></text></g><g><title>rust_alloc (69 samples, 0.06%)</title><rect x="8.3485%" y="773" width="0.0623%" height="15" fill="rgb(221,13,50)" fg:x="9250" fg:w="69"/><text x="8.5985%" y="783.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="8.4189%" y="789" width="0.0117%" height="15" fill="rgb(236,68,49)" fg:x="9328" fg:w="13"/><text x="8.6689%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (102 samples, 0.09%)</title><rect x="8.4108%" y="901" width="0.0921%" height="15" fill="rgb(229,146,28)" fg:x="9319" fg:w="102"/><text x="8.6608%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (102 samples, 0.09%)</title><rect x="8.4108%" y="885" width="0.0921%" height="15" fill="rgb(225,31,38)" fg:x="9319" fg:w="102"/><text x="8.6608%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (102 samples, 0.09%)</title><rect x="8.4108%" y="869" width="0.0921%" height="15" fill="rgb(250,208,3)" fg:x="9319" fg:w="102"/><text x="8.6608%" y="879.50"></text></g><g><title>alloc::alloc::alloc (102 samples, 0.09%)</title><rect x="8.4108%" y="853" width="0.0921%" height="15" fill="rgb(246,54,23)" fg:x="9319" fg:w="102"/><text x="8.6608%" y="863.50"></text></g><g><title>__rg_alloc (102 samples, 0.09%)</title><rect x="8.4108%" y="837" width="0.0921%" height="15" fill="rgb(243,76,11)" fg:x="9319" fg:w="102"/><text x="8.6608%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (102 samples, 0.09%)</title><rect x="8.4108%" y="821" width="0.0921%" height="15" fill="rgb(245,21,50)" fg:x="9319" fg:w="102"/><text x="8.6608%" y="831.50"></text></g><g><title>rust_alloc (93 samples, 0.08%)</title><rect x="8.4189%" y="805" width="0.0839%" height="15" fill="rgb(228,9,43)" fg:x="9328" fg:w="93"/><text x="8.6689%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (80 samples, 0.07%)</title><rect x="8.4307%" y="789" width="0.0722%" height="15" fill="rgb(208,100,47)" fg:x="9341" fg:w="80"/><text x="8.6807%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (80 samples, 0.07%)</title><rect x="8.4307%" y="773" width="0.0722%" height="15" fill="rgb(232,26,8)" fg:x="9341" fg:w="80"/><text x="8.6807%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (72 samples, 0.06%)</title><rect x="8.4379%" y="757" width="0.0650%" height="15" fill="rgb(216,166,38)" fg:x="9349" fg:w="72"/><text x="8.6879%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (64 samples, 0.06%)</title><rect x="8.4451%" y="741" width="0.0578%" height="15" fill="rgb(251,202,51)" fg:x="9357" fg:w="64"/><text x="8.6951%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (64 samples, 0.06%)</title><rect x="8.4451%" y="725" width="0.0578%" height="15" fill="rgb(254,216,34)" fg:x="9357" fg:w="64"/><text x="8.6951%" y="735.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (24 samples, 0.02%)</title><rect x="8.7935%" y="885" width="0.0217%" height="15" fill="rgb(251,32,27)" fg:x="9743" fg:w="24"/><text x="9.0435%" y="895.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="8.8413%" y="869" width="0.0162%" height="15" fill="rgb(208,127,28)" fg:x="9796" fg:w="18"/><text x="9.0913%" y="879.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (18 samples, 0.02%)</title><rect x="8.8413%" y="853" width="0.0162%" height="15" fill="rgb(224,137,22)" fg:x="9796" fg:w="18"/><text x="9.0913%" y="863.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (53 samples, 0.05%)</title><rect x="8.8151%" y="885" width="0.0478%" height="15" fill="rgb(254,70,32)" fg:x="9767" fg:w="53"/><text x="9.0651%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (1,386 samples, 1.25%)</title><rect x="7.6346%" y="981" width="1.2509%" height="15" fill="rgb(229,75,37)" fg:x="8459" fg:w="1386"/><text x="7.8846%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,386 samples, 1.25%)</title><rect x="7.6346%" y="965" width="1.2509%" height="15" fill="rgb(252,64,23)" fg:x="8459" fg:w="1386"/><text x="7.8846%" y="975.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (1,386 samples, 1.25%)</title><rect x="7.6346%" y="949" width="1.2509%" height="15" fill="rgb(232,162,48)" fg:x="8459" fg:w="1386"/><text x="7.8846%" y="959.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (1,370 samples, 1.24%)</title><rect x="7.6491%" y="933" width="1.2365%" height="15" fill="rgb(246,160,12)" fg:x="8475" fg:w="1370"/><text x="7.8991%" y="943.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (1,228 samples, 1.11%)</title><rect x="7.7772%" y="917" width="1.1083%" height="15" fill="rgb(247,166,0)" fg:x="8617" fg:w="1228"/><text x="8.0272%" y="927.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (424 samples, 0.38%)</title><rect x="8.5029%" y="901" width="0.3827%" height="15" fill="rgb(249,219,21)" fg:x="9421" fg:w="424"/><text x="8.7529%" y="911.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (17 samples, 0.02%)</title><rect x="8.8702%" y="885" width="0.0153%" height="15" fill="rgb(205,209,3)" fg:x="9828" fg:w="17"/><text x="9.1202%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.01%)</title><rect x="8.9794%" y="869" width="0.0144%" height="15" fill="rgb(243,44,1)" fg:x="9949" fg:w="16"/><text x="9.2294%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="8.9938%" y="869" width="0.0117%" height="15" fill="rgb(206,159,16)" fg:x="9965" fg:w="13"/><text x="9.2438%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (205 samples, 0.19%)</title><rect x="9.0570%" y="853" width="0.1850%" height="15" fill="rgb(244,77,30)" fg:x="10035" fg:w="205"/><text x="9.3070%" y="863.50"></text></g><g><title>core::mem::replace (205 samples, 0.19%)</title><rect x="9.0570%" y="837" width="0.1850%" height="15" fill="rgb(218,69,12)" fg:x="10035" fg:w="205"/><text x="9.3070%" y="847.50"></text></g><g><title>core::ptr::read (205 samples, 0.19%)</title><rect x="9.0570%" y="821" width="0.1850%" height="15" fill="rgb(212,87,7)" fg:x="10035" fg:w="205"/><text x="9.3070%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (313 samples, 0.28%)</title><rect x="9.0137%" y="869" width="0.2825%" height="15" fill="rgb(245,114,25)" fg:x="9987" fg:w="313"/><text x="9.2637%" y="879.50"></text></g><g><title>core::mem::drop (60 samples, 0.05%)</title><rect x="9.2420%" y="853" width="0.0542%" height="15" fill="rgb(210,61,42)" fg:x="10240" fg:w="60"/><text x="9.4920%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (60 samples, 0.05%)</title><rect x="9.2420%" y="837" width="0.0542%" height="15" fill="rgb(211,52,33)" fg:x="10240" fg:w="60"/><text x="9.4920%" y="847.50"></text></g><g><title>std::sync::poison::Flag::done (12 samples, 0.01%)</title><rect x="9.3142%" y="821" width="0.0108%" height="15" fill="rgb(234,58,33)" fg:x="10320" fg:w="12"/><text x="9.5642%" y="831.50"></text></g><g><title>std::thread::panicking (12 samples, 0.01%)</title><rect x="9.3142%" y="805" width="0.0108%" height="15" fill="rgb(220,115,36)" fg:x="10320" fg:w="12"/><text x="9.5642%" y="815.50"></text></g><g><title>std::panicking::panicking (12 samples, 0.01%)</title><rect x="9.3142%" y="789" width="0.0108%" height="15" fill="rgb(243,153,54)" fg:x="10320" fg:w="12"/><text x="9.5642%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (12 samples, 0.01%)</title><rect x="9.3142%" y="773" width="0.0108%" height="15" fill="rgb(251,47,18)" fg:x="10320" fg:w="12"/><text x="9.5642%" y="783.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="9.3251%" y="805" width="0.0135%" height="15" fill="rgb(242,102,42)" fg:x="10332" fg:w="15"/><text x="9.5751%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (318 samples, 0.29%)</title><rect x="9.3386%" y="789" width="0.2870%" height="15" fill="rgb(234,31,38)" fg:x="10347" fg:w="318"/><text x="9.5886%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (384 samples, 0.35%)</title><rect x="9.2962%" y="869" width="0.3466%" height="15" fill="rgb(221,117,51)" fg:x="10300" fg:w="384"/><text x="9.5462%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (374 samples, 0.34%)</title><rect x="9.3052%" y="853" width="0.3376%" height="15" fill="rgb(212,20,18)" fg:x="10310" fg:w="374"/><text x="9.5552%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (374 samples, 0.34%)</title><rect x="9.3052%" y="837" width="0.3376%" height="15" fill="rgb(245,133,36)" fg:x="10310" fg:w="374"/><text x="9.5552%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (352 samples, 0.32%)</title><rect x="9.3251%" y="821" width="0.3177%" height="15" fill="rgb(212,6,19)" fg:x="10332" fg:w="352"/><text x="9.5751%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (337 samples, 0.30%)</title><rect x="9.3386%" y="805" width="0.3042%" height="15" fill="rgb(218,1,36)" fg:x="10347" fg:w="337"/><text x="9.5886%" y="815.50"></text></g><g><title>___pthread_mutex_unlock (19 samples, 0.02%)</title><rect x="9.6256%" y="789" width="0.0171%" height="15" fill="rgb(246,84,54)" fg:x="10665" fg:w="19"/><text x="9.8756%" y="799.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (36 samples, 0.03%)</title><rect x="9.6545%" y="821" width="0.0325%" height="15" fill="rgb(242,110,6)" fg:x="10697" fg:w="36"/><text x="9.9045%" y="831.50"></text></g><g><title>core::task::wake::Waker::will_wake (48 samples, 0.04%)</title><rect x="9.6446%" y="869" width="0.0433%" height="15" fill="rgb(214,47,5)" fg:x="10686" fg:w="48"/><text x="9.8946%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (48 samples, 0.04%)</title><rect x="9.6446%" y="853" width="0.0433%" height="15" fill="rgb(218,159,25)" fg:x="10686" fg:w="48"/><text x="9.8946%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (37 samples, 0.03%)</title><rect x="9.6545%" y="837" width="0.0334%" height="15" fill="rgb(215,211,28)" fg:x="10697" fg:w="37"/><text x="9.9045%" y="847.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="9.6978%" y="837" width="0.0117%" height="15" fill="rgb(238,59,32)" fg:x="10745" fg:w="13"/><text x="9.9478%" y="847.50"></text></g><g><title>std::sync::poison::Flag::borrow (13 samples, 0.01%)</title><rect x="9.6978%" y="821" width="0.0117%" height="15" fill="rgb(226,82,3)" fg:x="10745" fg:w="13"/><text x="9.9478%" y="831.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="9.6978%" y="805" width="0.0117%" height="15" fill="rgb(240,164,32)" fg:x="10745" fg:w="13"/><text x="9.9478%" y="815.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="9.6978%" y="789" width="0.0117%" height="15" fill="rgb(232,46,7)" fg:x="10745" fg:w="13"/><text x="9.9478%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="9.6978%" y="773" width="0.0117%" height="15" fill="rgb(229,129,53)" fg:x="10745" fg:w="13"/><text x="9.9478%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="9.6978%" y="757" width="0.0117%" height="15" fill="rgb(234,188,29)" fg:x="10745" fg:w="13"/><text x="9.9478%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="9.6978%" y="741" width="0.0117%" height="15" fill="rgb(246,141,4)" fg:x="10745" fg:w="13"/><text x="9.9478%" y="751.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,932 samples, 1.74%)</title><rect x="8.9280%" y="885" width="1.7437%" height="15" fill="rgb(229,23,39)" fg:x="9892" fg:w="1932"/><text x="9.1780%" y="895.50"></text></g><g><title>event_listener::Inner::lock (1,090 samples, 0.98%)</title><rect x="9.6879%" y="869" width="0.9838%" height="15" fill="rgb(206,12,3)" fg:x="10734" fg:w="1090"/><text x="9.9379%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,079 samples, 0.97%)</title><rect x="9.6978%" y="853" width="0.9738%" height="15" fill="rgb(252,226,20)" fg:x="10745" fg:w="1079"/><text x="9.9478%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,066 samples, 0.96%)</title><rect x="9.7096%" y="837" width="0.9621%" height="15" fill="rgb(216,123,35)" fg:x="10758" fg:w="1066"/><text x="9.9596%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1,026 samples, 0.93%)</title><rect x="9.7457%" y="821" width="0.9260%" height="15" fill="rgb(212,68,40)" fg:x="10798" fg:w="1026"/><text x="9.9957%" y="831.50"></text></g><g><title>___pthread_mutex_lock (1,026 samples, 0.93%)</title><rect x="9.7457%" y="805" width="0.9260%" height="15" fill="rgb(254,125,32)" fg:x="10798" fg:w="1026"/><text x="9.9957%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,992 samples, 1.80%)</title><rect x="8.8855%" y="965" width="1.7979%" height="15" fill="rgb(253,97,22)" fg:x="9845" fg:w="1992"/><text x="9.1355%" y="975.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,992 samples, 1.80%)</title><rect x="8.8855%" y="949" width="1.7979%" height="15" fill="rgb(241,101,14)" fg:x="9845" fg:w="1992"/><text x="9.1355%" y="959.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,992 samples, 1.80%)</title><rect x="8.8855%" y="933" width="1.7979%" height="15" fill="rgb(238,103,29)" fg:x="9845" fg:w="1992"/><text x="9.1355%" y="943.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,992 samples, 1.80%)</title><rect x="8.8855%" y="917" width="1.7979%" height="15" fill="rgb(233,195,47)" fg:x="9845" fg:w="1992"/><text x="9.1355%" y="927.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,992 samples, 1.80%)</title><rect x="8.8855%" y="901" width="1.7979%" height="15" fill="rgb(246,218,30)" fg:x="9845" fg:w="1992"/><text x="9.1355%" y="911.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (13 samples, 0.01%)</title><rect x="10.6717%" y="885" width="0.0117%" height="15" fill="rgb(219,145,47)" fg:x="11824" fg:w="13"/><text x="10.9217%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="10.6942%" y="917" width="0.0181%" height="15" fill="rgb(243,12,26)" fg:x="11849" fg:w="20"/><text x="10.9442%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (176 samples, 0.16%)</title><rect x="10.7123%" y="917" width="0.1588%" height="15" fill="rgb(214,87,16)" fg:x="11869" fg:w="176"/><text x="10.9623%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.01%)</title><rect x="10.9776%" y="901" width="0.0126%" height="15" fill="rgb(208,99,42)" fg:x="12163" fg:w="14"/><text x="11.2276%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (738 samples, 0.67%)</title><rect x="10.9903%" y="901" width="0.6661%" height="15" fill="rgb(253,99,2)" fg:x="12177" fg:w="738"/><text x="11.2403%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="11.6618%" y="853" width="0.0208%" height="15" fill="rgb(220,168,23)" fg:x="12921" fg:w="23"/><text x="11.9118%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (36 samples, 0.03%)</title><rect x="11.6582%" y="885" width="0.0325%" height="15" fill="rgb(242,38,24)" fg:x="12917" fg:w="36"/><text x="11.9082%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (32 samples, 0.03%)</title><rect x="11.6618%" y="869" width="0.0289%" height="15" fill="rgb(225,182,9)" fg:x="12921" fg:w="32"/><text x="11.9118%" y="879.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (6,986 samples, 6.31%)</title><rect x="5.3927%" y="1109" width="6.3052%" height="15" fill="rgb(243,178,37)" fg:x="5975" fg:w="6986"/><text x="5.6427%" y="1119.50">async_ex..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (6,986 samples, 6.31%)</title><rect x="5.3927%" y="1093" width="6.3052%" height="15" fill="rgb(232,139,19)" fg:x="5975" fg:w="6986"/><text x="5.6427%" y="1103.50">&lt;async_s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (6,986 samples, 6.31%)</title><rect x="5.3927%" y="1077" width="6.3052%" height="15" fill="rgb(225,201,24)" fg:x="5975" fg:w="6986"/><text x="5.6427%" y="1087.50">async_st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,986 samples, 6.31%)</title><rect x="5.3927%" y="1061" width="6.3052%" height="15" fill="rgb(221,47,46)" fg:x="5975" fg:w="6986"/><text x="5.6427%" y="1071.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,986 samples, 6.31%)</title><rect x="5.3927%" y="1045" width="6.3052%" height="15" fill="rgb(249,23,13)" fg:x="5975" fg:w="6986"/><text x="5.6427%" y="1055.50">std::thr..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,986 samples, 6.31%)</title><rect x="5.3927%" y="1029" width="6.3052%" height="15" fill="rgb(219,9,5)" fg:x="5975" fg:w="6986"/><text x="5.6427%" y="1039.50">async_st..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,986 samples, 6.31%)</title><rect x="5.3927%" y="1013" width="6.3052%" height="15" fill="rgb(254,171,16)" fg:x="5975" fg:w="6986"/><text x="5.6427%" y="1023.50">&lt;async_s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,986 samples, 6.31%)</title><rect x="5.3927%" y="997" width="6.3052%" height="15" fill="rgb(230,171,20)" fg:x="5975" fg:w="6986"/><text x="5.6427%" y="1007.50">&lt;core::f..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,116 samples, 2.81%)</title><rect x="8.8855%" y="981" width="2.8123%" height="15" fill="rgb(210,71,41)" fg:x="9845" fg:w="3116"/><text x="9.1355%" y="991.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,124 samples, 1.01%)</title><rect x="10.6834%" y="965" width="1.0145%" height="15" fill="rgb(206,173,20)" fg:x="11837" fg:w="1124"/><text x="10.9334%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,124 samples, 1.01%)</title><rect x="10.6834%" y="949" width="1.0145%" height="15" fill="rgb(233,88,34)" fg:x="11837" fg:w="1124"/><text x="10.9334%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,124 samples, 1.01%)</title><rect x="10.6834%" y="933" width="1.0145%" height="15" fill="rgb(223,209,46)" fg:x="11837" fg:w="1124"/><text x="10.9334%" y="943.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (916 samples, 0.83%)</title><rect x="10.8711%" y="917" width="0.8267%" height="15" fill="rgb(250,43,18)" fg:x="12045" fg:w="916"/><text x="11.1211%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (46 samples, 0.04%)</title><rect x="11.6563%" y="901" width="0.0415%" height="15" fill="rgb(208,13,10)" fg:x="12915" fg:w="46"/><text x="11.9063%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (92 samples, 0.08%)</title><rect x="11.6979%" y="1077" width="0.0830%" height="15" fill="rgb(212,200,36)" fg:x="12961" fg:w="92"/><text x="11.9479%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (92 samples, 0.08%)</title><rect x="11.6979%" y="1061" width="0.0830%" height="15" fill="rgb(225,90,30)" fg:x="12961" fg:w="92"/><text x="11.9479%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (92 samples, 0.08%)</title><rect x="11.6979%" y="1045" width="0.0830%" height="15" fill="rgb(236,182,39)" fg:x="12961" fg:w="92"/><text x="11.9479%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (93 samples, 0.08%)</title><rect x="11.6979%" y="1109" width="0.0839%" height="15" fill="rgb(212,144,35)" fg:x="12961" fg:w="93"/><text x="11.9479%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (93 samples, 0.08%)</title><rect x="11.6979%" y="1093" width="0.0839%" height="15" fill="rgb(228,63,44)" fg:x="12961" fg:w="93"/><text x="11.9479%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (16 samples, 0.01%)</title><rect x="11.7899%" y="629" width="0.0144%" height="15" fill="rgb(228,109,6)" fg:x="13063" fg:w="16"/><text x="12.0399%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (16 samples, 0.01%)</title><rect x="11.7899%" y="613" width="0.0144%" height="15" fill="rgb(238,117,24)" fg:x="13063" fg:w="16"/><text x="12.0399%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (12 samples, 0.01%)</title><rect x="11.7935%" y="597" width="0.0108%" height="15" fill="rgb(242,26,26)" fg:x="13067" fg:w="12"/><text x="12.0435%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (21 samples, 0.02%)</title><rect x="11.7899%" y="645" width="0.0190%" height="15" fill="rgb(221,92,48)" fg:x="13063" fg:w="21"/><text x="12.0399%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (31 samples, 0.03%)</title><rect x="11.7863%" y="661" width="0.0280%" height="15" fill="rgb(209,209,32)" fg:x="13059" fg:w="31"/><text x="12.0363%" y="671.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (28 samples, 0.03%)</title><rect x="11.8179%" y="645" width="0.0253%" height="15" fill="rgb(221,70,22)" fg:x="13094" fg:w="28"/><text x="12.0679%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,419 samples, 6.70%)</title><rect x="5.2718%" y="1125" width="6.6960%" height="15" fill="rgb(248,145,5)" fg:x="5841" fg:w="7419"/><text x="5.5218%" y="1135.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (206 samples, 0.19%)</title><rect x="11.7818%" y="1109" width="0.1859%" height="15" fill="rgb(226,116,26)" fg:x="13054" fg:w="206"/><text x="12.0318%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (206 samples, 0.19%)</title><rect x="11.7818%" y="1093" width="0.1859%" height="15" fill="rgb(244,5,17)" fg:x="13054" fg:w="206"/><text x="12.0318%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (206 samples, 0.19%)</title><rect x="11.7818%" y="1077" width="0.1859%" height="15" fill="rgb(252,159,33)" fg:x="13054" fg:w="206"/><text x="12.0318%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (206 samples, 0.19%)</title><rect x="11.7818%" y="1061" width="0.1859%" height="15" fill="rgb(206,71,0)" fg:x="13054" fg:w="206"/><text x="12.0318%" y="1071.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (201 samples, 0.18%)</title><rect x="11.7863%" y="1045" width="0.1814%" height="15" fill="rgb(233,118,54)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (201 samples, 0.18%)</title><rect x="11.7863%" y="1029" width="0.1814%" height="15" fill="rgb(234,83,48)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="1039.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (201 samples, 0.18%)</title><rect x="11.7863%" y="1013" width="0.1814%" height="15" fill="rgb(228,3,54)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="1023.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (201 samples, 0.18%)</title><rect x="11.7863%" y="997" width="0.1814%" height="15" fill="rgb(226,155,13)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (201 samples, 0.18%)</title><rect x="11.7863%" y="981" width="0.1814%" height="15" fill="rgb(241,28,37)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="991.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (201 samples, 0.18%)</title><rect x="11.7863%" y="965" width="0.1814%" height="15" fill="rgb(233,93,10)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (201 samples, 0.18%)</title><rect x="11.7863%" y="949" width="0.1814%" height="15" fill="rgb(225,113,19)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="959.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (201 samples, 0.18%)</title><rect x="11.7863%" y="933" width="0.1814%" height="15" fill="rgb(241,2,18)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (201 samples, 0.18%)</title><rect x="11.7863%" y="917" width="0.1814%" height="15" fill="rgb(228,207,21)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="927.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (201 samples, 0.18%)</title><rect x="11.7863%" y="901" width="0.1814%" height="15" fill="rgb(213,211,35)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (201 samples, 0.18%)</title><rect x="11.7863%" y="885" width="0.1814%" height="15" fill="rgb(209,83,10)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (201 samples, 0.18%)</title><rect x="11.7863%" y="869" width="0.1814%" height="15" fill="rgb(209,164,1)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (201 samples, 0.18%)</title><rect x="11.7863%" y="853" width="0.1814%" height="15" fill="rgb(213,184,43)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (201 samples, 0.18%)</title><rect x="11.7863%" y="837" width="0.1814%" height="15" fill="rgb(231,61,34)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (201 samples, 0.18%)</title><rect x="11.7863%" y="821" width="0.1814%" height="15" fill="rgb(235,75,3)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="831.50"></text></g><g><title>alloc::alloc::alloc (201 samples, 0.18%)</title><rect x="11.7863%" y="805" width="0.1814%" height="15" fill="rgb(220,106,47)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="815.50"></text></g><g><title>__rg_alloc (201 samples, 0.18%)</title><rect x="11.7863%" y="789" width="0.1814%" height="15" fill="rgb(210,196,33)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (201 samples, 0.18%)</title><rect x="11.7863%" y="773" width="0.1814%" height="15" fill="rgb(229,154,42)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="783.50"></text></g><g><title>rust_alloc (201 samples, 0.18%)</title><rect x="11.7863%" y="757" width="0.1814%" height="15" fill="rgb(228,114,26)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (201 samples, 0.18%)</title><rect x="11.7863%" y="741" width="0.1814%" height="15" fill="rgb(208,144,1)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (201 samples, 0.18%)</title><rect x="11.7863%" y="725" width="0.1814%" height="15" fill="rgb(239,112,37)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (201 samples, 0.18%)</title><rect x="11.7863%" y="709" width="0.1814%" height="15" fill="rgb(210,96,50)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (201 samples, 0.18%)</title><rect x="11.7863%" y="693" width="0.1814%" height="15" fill="rgb(222,178,2)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (201 samples, 0.18%)</title><rect x="11.7863%" y="677" width="0.1814%" height="15" fill="rgb(226,74,18)" fg:x="13059" fg:w="201"/><text x="12.0363%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (170 samples, 0.15%)</title><rect x="11.8143%" y="661" width="0.1534%" height="15" fill="rgb(225,67,54)" fg:x="13090" fg:w="170"/><text x="12.0643%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (138 samples, 0.12%)</title><rect x="11.8432%" y="645" width="0.1246%" height="15" fill="rgb(251,92,32)" fg:x="13122" fg:w="138"/><text x="12.0932%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (138 samples, 0.12%)</title><rect x="11.8432%" y="629" width="0.1246%" height="15" fill="rgb(228,149,22)" fg:x="13122" fg:w="138"/><text x="12.0932%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (138 samples, 0.12%)</title><rect x="11.8432%" y="613" width="0.1246%" height="15" fill="rgb(243,54,13)" fg:x="13122" fg:w="138"/><text x="12.0932%" y="623.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (25 samples, 0.02%)</title><rect x="11.9831%" y="1125" width="0.0226%" height="15" fill="rgb(243,180,28)" fg:x="13277" fg:w="25"/><text x="12.2331%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (34 samples, 0.03%)</title><rect x="12.0056%" y="1125" width="0.0307%" height="15" fill="rgb(208,167,24)" fg:x="13302" fg:w="34"/><text x="12.2556%" y="1135.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (17 samples, 0.02%)</title><rect x="12.0363%" y="1125" width="0.0153%" height="15" fill="rgb(245,73,45)" fg:x="13336" fg:w="17"/><text x="12.2863%" y="1135.50"></text></g><g><title>__clock_gettime_2 (88 samples, 0.08%)</title><rect x="12.0679%" y="1125" width="0.0794%" height="15" fill="rgb(237,203,48)" fg:x="13371" fg:w="88"/><text x="12.3179%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (139 samples, 0.13%)</title><rect x="12.1564%" y="1125" width="0.1255%" height="15" fill="rgb(211,197,16)" fg:x="13469" fg:w="139"/><text x="12.4064%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (18 samples, 0.02%)</title><rect x="12.2836%" y="1125" width="0.0162%" height="15" fill="rgb(243,99,51)" fg:x="13610" fg:w="18"/><text x="12.5336%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (36 samples, 0.03%)</title><rect x="12.2999%" y="1125" width="0.0325%" height="15" fill="rgb(215,123,29)" fg:x="13628" fg:w="36"/><text x="12.5499%" y="1135.50"></text></g><g><title>abi_stable::erased_types::iterator::next (23 samples, 0.02%)</title><rect x="12.3324%" y="1125" width="0.0208%" height="15" fill="rgb(239,186,37)" fg:x="13664" fg:w="23"/><text x="12.5824%" y="1135.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (21 samples, 0.02%)</title><rect x="12.3531%" y="1125" width="0.0190%" height="15" fill="rgb(252,136,39)" fg:x="13687" fg:w="21"/><text x="12.6031%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (45 samples, 0.04%)</title><rect x="12.3937%" y="1109" width="0.0406%" height="15" fill="rgb(223,213,32)" fg:x="13732" fg:w="45"/><text x="12.6437%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (45 samples, 0.04%)</title><rect x="12.3937%" y="1093" width="0.0406%" height="15" fill="rgb(233,115,5)" fg:x="13732" fg:w="45"/><text x="12.6437%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (45 samples, 0.04%)</title><rect x="12.3937%" y="1077" width="0.0406%" height="15" fill="rgb(207,226,44)" fg:x="13732" fg:w="45"/><text x="12.6437%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (45 samples, 0.04%)</title><rect x="12.3937%" y="1061" width="0.0406%" height="15" fill="rgb(208,126,0)" fg:x="13732" fg:w="45"/><text x="12.6437%" y="1071.50"></text></g><g><title>__rg_dealloc (45 samples, 0.04%)</title><rect x="12.3937%" y="1045" width="0.0406%" height="15" fill="rgb(244,66,21)" fg:x="13732" fg:w="45"/><text x="12.6437%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (45 samples, 0.04%)</title><rect x="12.3937%" y="1029" width="0.0406%" height="15" fill="rgb(222,97,12)" fg:x="13732" fg:w="45"/><text x="12.6437%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (71 samples, 0.06%)</title><rect x="12.3721%" y="1125" width="0.0641%" height="15" fill="rgb(219,213,19)" fg:x="13708" fg:w="71"/><text x="12.6221%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (27 samples, 0.02%)</title><rect x="12.4361%" y="1125" width="0.0244%" height="15" fill="rgb(252,169,30)" fg:x="13779" fg:w="27"/><text x="12.6861%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (15 samples, 0.01%)</title><rect x="12.4614%" y="1125" width="0.0135%" height="15" fill="rgb(206,32,51)" fg:x="13807" fg:w="15"/><text x="12.7114%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (102 samples, 0.09%)</title><rect x="12.4840%" y="1125" width="0.0921%" height="15" fill="rgb(250,172,42)" fg:x="13832" fg:w="102"/><text x="12.7340%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (23 samples, 0.02%)</title><rect x="12.5553%" y="1109" width="0.0208%" height="15" fill="rgb(209,34,43)" fg:x="13911" fg:w="23"/><text x="12.8053%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (23 samples, 0.02%)</title><rect x="12.5553%" y="1093" width="0.0208%" height="15" fill="rgb(223,11,35)" fg:x="13911" fg:w="23"/><text x="12.8053%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.02%)</title><rect x="12.5553%" y="1077" width="0.0208%" height="15" fill="rgb(251,219,26)" fg:x="13911" fg:w="23"/><text x="12.8053%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.02%)</title><rect x="12.5553%" y="1061" width="0.0208%" height="15" fill="rgb(231,119,3)" fg:x="13911" fg:w="23"/><text x="12.8053%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.02%)</title><rect x="12.5553%" y="1045" width="0.0208%" height="15" fill="rgb(216,97,11)" fg:x="13911" fg:w="23"/><text x="12.8053%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.01%)</title><rect x="12.5616%" y="1029" width="0.0144%" height="15" fill="rgb(223,59,9)" fg:x="13918" fg:w="16"/><text x="12.8116%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.01%)</title><rect x="12.5616%" y="1013" width="0.0144%" height="15" fill="rgb(233,93,31)" fg:x="13918" fg:w="16"/><text x="12.8116%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.01%)</title><rect x="12.5616%" y="997" width="0.0144%" height="15" fill="rgb(239,81,33)" fg:x="13918" fg:w="16"/><text x="12.8116%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.01%)</title><rect x="12.5616%" y="981" width="0.0144%" height="15" fill="rgb(213,120,34)" fg:x="13918" fg:w="16"/><text x="12.8116%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.01%)</title><rect x="12.5616%" y="965" width="0.0144%" height="15" fill="rgb(243,49,53)" fg:x="13918" fg:w="16"/><text x="12.8116%" y="975.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.01%)</title><rect x="12.5616%" y="949" width="0.0144%" height="15" fill="rgb(247,216,33)" fg:x="13918" fg:w="16"/><text x="12.8116%" y="959.50"></text></g><g><title>__rg_alloc (16 samples, 0.01%)</title><rect x="12.5616%" y="933" width="0.0144%" height="15" fill="rgb(226,26,14)" fg:x="13918" fg:w="16"/><text x="12.8116%" y="943.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.01%)</title><rect x="12.5616%" y="917" width="0.0144%" height="15" fill="rgb(215,49,53)" fg:x="13918" fg:w="16"/><text x="12.8116%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (42 samples, 0.04%)</title><rect x="12.5760%" y="1125" width="0.0379%" height="15" fill="rgb(245,162,40)" fg:x="13934" fg:w="42"/><text x="12.8260%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (17 samples, 0.02%)</title><rect x="12.5986%" y="1109" width="0.0153%" height="15" fill="rgb(229,68,17)" fg:x="13959" fg:w="17"/><text x="12.8486%" y="1119.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="12.5986%" y="1093" width="0.0153%" height="15" fill="rgb(213,182,10)" fg:x="13959" fg:w="17"/><text x="12.8486%" y="1103.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (19 samples, 0.02%)</title><rect x="12.6167%" y="1125" width="0.0171%" height="15" fill="rgb(245,125,30)" fg:x="13979" fg:w="19"/><text x="12.8667%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="12.6167%" y="1109" width="0.0171%" height="15" fill="rgb(232,202,2)" fg:x="13979" fg:w="19"/><text x="12.8667%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="12.6167%" y="1093" width="0.0171%" height="15" fill="rgb(237,140,51)" fg:x="13979" fg:w="19"/><text x="12.8667%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (19 samples, 0.02%)</title><rect x="12.6167%" y="1077" width="0.0171%" height="15" fill="rgb(236,157,25)" fg:x="13979" fg:w="19"/><text x="12.8667%" y="1087.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (65 samples, 0.06%)</title><rect x="12.6338%" y="1125" width="0.0587%" height="15" fill="rgb(219,209,0)" fg:x="13998" fg:w="65"/><text x="12.8838%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (28 samples, 0.03%)</title><rect x="12.6672%" y="1109" width="0.0253%" height="15" fill="rgb(240,116,54)" fg:x="14035" fg:w="28"/><text x="12.9172%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (19 samples, 0.02%)</title><rect x="12.6753%" y="1093" width="0.0171%" height="15" fill="rgb(216,10,36)" fg:x="14044" fg:w="19"/><text x="12.9253%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19 samples, 0.02%)</title><rect x="12.6753%" y="1077" width="0.0171%" height="15" fill="rgb(222,72,44)" fg:x="14044" fg:w="19"/><text x="12.9253%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 0.02%)</title><rect x="12.6753%" y="1061" width="0.0171%" height="15" fill="rgb(232,159,9)" fg:x="14044" fg:w="19"/><text x="12.9253%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.02%)</title><rect x="12.6753%" y="1045" width="0.0171%" height="15" fill="rgb(210,39,32)" fg:x="14044" fg:w="19"/><text x="12.9253%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="12.6753%" y="1029" width="0.0171%" height="15" fill="rgb(216,194,45)" fg:x="14044" fg:w="19"/><text x="12.9253%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="12.6753%" y="1013" width="0.0171%" height="15" fill="rgb(218,18,35)" fg:x="14044" fg:w="19"/><text x="12.9253%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.02%)</title><rect x="12.6753%" y="997" width="0.0171%" height="15" fill="rgb(207,83,51)" fg:x="14044" fg:w="19"/><text x="12.9253%" y="1007.50"></text></g><g><title>__rg_alloc (19 samples, 0.02%)</title><rect x="12.6753%" y="981" width="0.0171%" height="15" fill="rgb(225,63,43)" fg:x="14044" fg:w="19"/><text x="12.9253%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (19 samples, 0.02%)</title><rect x="12.6753%" y="965" width="0.0171%" height="15" fill="rgb(207,57,36)" fg:x="14044" fg:w="19"/><text x="12.9253%" y="975.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="12.6961%" y="1125" width="0.0126%" height="15" fill="rgb(216,99,33)" fg:x="14067" fg:w="14"/><text x="12.9461%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (14 samples, 0.01%)</title><rect x="12.7087%" y="1125" width="0.0126%" height="15" fill="rgb(225,42,16)" fg:x="14081" fg:w="14"/><text x="12.9587%" y="1135.50"></text></g><g><title>async_ffi::DropBomb::with (14 samples, 0.01%)</title><rect x="12.7087%" y="1109" width="0.0126%" height="15" fill="rgb(220,201,45)" fg:x="14081" fg:w="14"/><text x="12.9587%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (14 samples, 0.01%)</title><rect x="12.7087%" y="1093" width="0.0126%" height="15" fill="rgb(225,33,4)" fg:x="14081" fg:w="14"/><text x="12.9587%" y="1103.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="12.7087%" y="1077" width="0.0126%" height="15" fill="rgb(224,33,50)" fg:x="14081" fg:w="14"/><text x="12.9587%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (29 samples, 0.03%)</title><rect x="12.7213%" y="1125" width="0.0262%" height="15" fill="rgb(246,198,51)" fg:x="14095" fg:w="29"/><text x="12.9713%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="12.7493%" y="789" width="0.0153%" height="15" fill="rgb(205,22,4)" fg:x="14126" fg:w="17"/><text x="12.9993%" y="799.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (67 samples, 0.06%)</title><rect x="12.7647%" y="789" width="0.0605%" height="15" fill="rgb(206,3,8)" fg:x="14143" fg:w="67"/><text x="13.0147%" y="799.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (1,087 samples, 0.98%)</title><rect x="13.1140%" y="773" width="0.9811%" height="15" fill="rgb(251,23,15)" fg:x="14530" fg:w="1087"/><text x="13.3640%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (957 samples, 0.86%)</title><rect x="13.2313%" y="757" width="0.8637%" height="15" fill="rgb(252,88,28)" fg:x="14660" fg:w="957"/><text x="13.4813%" y="767.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (709 samples, 0.64%)</title><rect x="14.8279%" y="741" width="0.6399%" height="15" fill="rgb(212,127,14)" fg:x="16429" fg:w="709"/><text x="15.0779%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (95 samples, 0.09%)</title><rect x="15.4678%" y="741" width="0.0857%" height="15" fill="rgb(247,145,37)" fg:x="17138" fg:w="95"/><text x="15.7178%" y="751.50"></text></g><g><title>abi_stable::std_types::result::&lt;impl core::convert::From&lt;abi_stable::std_types::result::RResult&lt;T,E&gt;&gt; for core::result::Result&lt;T,E&gt;&gt;::from (29 samples, 0.03%)</title><rect x="15.5274%" y="725" width="0.0262%" height="15" fill="rgb(209,117,53)" fg:x="17204" fg:w="29"/><text x="15.7774%" y="735.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (210 samples, 0.19%)</title><rect x="15.5535%" y="709" width="0.1895%" height="15" fill="rgb(212,90,42)" fg:x="17233" fg:w="210"/><text x="15.8035%" y="719.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (195 samples, 0.18%)</title><rect x="15.5671%" y="693" width="0.1760%" height="15" fill="rgb(218,164,37)" fg:x="17248" fg:w="195"/><text x="15.8171%" y="703.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (195 samples, 0.18%)</title><rect x="15.5671%" y="677" width="0.1760%" height="15" fill="rgb(246,65,34)" fg:x="17248" fg:w="195"/><text x="15.8171%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (44 samples, 0.04%)</title><rect x="15.7774%" y="661" width="0.0397%" height="15" fill="rgb(231,100,33)" fg:x="17481" fg:w="44"/><text x="16.0274%" y="671.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (44 samples, 0.04%)</title><rect x="15.7774%" y="645" width="0.0397%" height="15" fill="rgb(228,126,14)" fg:x="17481" fg:w="44"/><text x="16.0274%" y="655.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (44 samples, 0.04%)</title><rect x="15.7774%" y="629" width="0.0397%" height="15" fill="rgb(215,173,21)" fg:x="17481" fg:w="44"/><text x="16.0274%" y="639.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,735 samples, 1.57%)</title><rect x="15.7557%" y="693" width="1.5659%" height="15" fill="rgb(210,6,40)" fg:x="17457" fg:w="1735"/><text x="16.0057%" y="703.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,720 samples, 1.55%)</title><rect x="15.7692%" y="677" width="1.5524%" height="15" fill="rgb(212,48,18)" fg:x="17472" fg:w="1720"/><text x="16.0192%" y="687.50"></text></g><g><title>std::panic::catch_unwind (1,667 samples, 1.50%)</title><rect x="15.8171%" y="661" width="1.5045%" height="15" fill="rgb(230,214,11)" fg:x="17525" fg:w="1667"/><text x="16.0671%" y="671.50"></text></g><g><title>std::panicking::try (1,667 samples, 1.50%)</title><rect x="15.8171%" y="645" width="1.5045%" height="15" fill="rgb(254,105,39)" fg:x="17525" fg:w="1667"/><text x="16.0671%" y="655.50"></text></g><g><title>std::panicking::try::do_call (1,667 samples, 1.50%)</title><rect x="15.8171%" y="629" width="1.5045%" height="15" fill="rgb(245,158,5)" fg:x="17525" fg:w="1667"/><text x="16.0671%" y="639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20 samples, 0.02%)</title><rect x="17.3036%" y="613" width="0.0181%" height="15" fill="rgb(249,208,11)" fg:x="19172" fg:w="20"/><text x="17.5536%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (20 samples, 0.02%)</title><rect x="17.3036%" y="597" width="0.0181%" height="15" fill="rgb(210,39,28)" fg:x="19172" fg:w="20"/><text x="17.5536%" y="607.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (20 samples, 0.02%)</title><rect x="17.3036%" y="581" width="0.0181%" height="15" fill="rgb(211,56,53)" fg:x="19172" fg:w="20"/><text x="17.5536%" y="591.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,750 samples, 1.58%)</title><rect x="15.7431%" y="709" width="1.5795%" height="15" fill="rgb(226,201,30)" fg:x="17443" fg:w="1750"/><text x="15.9931%" y="719.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,179 samples, 1.97%)</title><rect x="15.5535%" y="741" width="1.9666%" height="15" fill="rgb(239,101,34)" fg:x="17233" fg:w="2179"/><text x="15.8035%" y="751.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,179 samples, 1.97%)</title><rect x="15.5535%" y="725" width="1.9666%" height="15" fill="rgb(226,209,5)" fg:x="17233" fg:w="2179"/><text x="15.8035%" y="735.50">&lt;..</text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (219 samples, 0.20%)</title><rect x="17.3225%" y="709" width="0.1977%" height="15" fill="rgb(250,105,47)" fg:x="19193" fg:w="219"/><text x="17.5725%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (612 samples, 0.55%)</title><rect x="17.5202%" y="741" width="0.5524%" height="15" fill="rgb(230,72,3)" fg:x="19412" fg:w="612"/><text x="17.7702%" y="751.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (48 samples, 0.04%)</title><rect x="18.0725%" y="741" width="0.0433%" height="15" fill="rgb(232,218,39)" fg:x="20024" fg:w="48"/><text x="18.3225%" y="751.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (15 samples, 0.01%)</title><rect x="18.1159%" y="693" width="0.0135%" height="15" fill="rgb(248,166,6)" fg:x="20072" fg:w="15"/><text x="18.3659%" y="703.50"></text></g><g><title>async_ffi::DropBomb::with (15 samples, 0.01%)</title><rect x="18.1159%" y="677" width="0.0135%" height="15" fill="rgb(247,89,20)" fg:x="20072" fg:w="15"/><text x="18.3659%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="18.1492%" y="549" width="0.0117%" height="15" fill="rgb(248,130,54)" fg:x="20109" fg:w="13"/><text x="18.3992%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (40 samples, 0.04%)</title><rect x="18.1348%" y="629" width="0.0361%" height="15" fill="rgb(234,196,4)" fg:x="20093" fg:w="40"/><text x="18.3848%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (40 samples, 0.04%)</title><rect x="18.1348%" y="613" width="0.0361%" height="15" fill="rgb(250,143,31)" fg:x="20093" fg:w="40"/><text x="18.3848%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (33 samples, 0.03%)</title><rect x="18.1411%" y="597" width="0.0298%" height="15" fill="rgb(211,110,34)" fg:x="20100" fg:w="33"/><text x="18.3911%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (33 samples, 0.03%)</title><rect x="18.1411%" y="581" width="0.0298%" height="15" fill="rgb(215,124,48)" fg:x="20100" fg:w="33"/><text x="18.3911%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (33 samples, 0.03%)</title><rect x="18.1411%" y="565" width="0.0298%" height="15" fill="rgb(216,46,13)" fg:x="20100" fg:w="33"/><text x="18.3911%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (53 samples, 0.05%)</title><rect x="18.1348%" y="661" width="0.0478%" height="15" fill="rgb(205,184,25)" fg:x="20093" fg:w="53"/><text x="18.3848%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (53 samples, 0.05%)</title><rect x="18.1348%" y="645" width="0.0478%" height="15" fill="rgb(228,1,10)" fg:x="20093" fg:w="53"/><text x="18.3848%" y="655.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="18.1709%" y="629" width="0.0117%" height="15" fill="rgb(213,116,27)" fg:x="20133" fg:w="13"/><text x="18.4209%" y="639.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="18.1709%" y="613" width="0.0117%" height="15" fill="rgb(241,95,50)" fg:x="20133" fg:w="13"/><text x="18.4209%" y="623.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="18.1709%" y="597" width="0.0117%" height="15" fill="rgb(238,48,32)" fg:x="20133" fg:w="13"/><text x="18.4209%" y="607.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="18.1709%" y="581" width="0.0117%" height="15" fill="rgb(235,113,49)" fg:x="20133" fg:w="13"/><text x="18.4209%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (63 samples, 0.06%)</title><rect x="18.1348%" y="677" width="0.0569%" height="15" fill="rgb(205,127,43)" fg:x="20093" fg:w="63"/><text x="18.3848%" y="687.50"></text></g><g><title>rust_dealloc (77 samples, 0.07%)</title><rect x="18.1294%" y="693" width="0.0695%" height="15" fill="rgb(250,162,2)" fg:x="20087" fg:w="77"/><text x="18.3794%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (102 samples, 0.09%)</title><rect x="18.1159%" y="741" width="0.0921%" height="15" fill="rgb(220,13,41)" fg:x="20072" fg:w="102"/><text x="18.3659%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (102 samples, 0.09%)</title><rect x="18.1159%" y="725" width="0.0921%" height="15" fill="rgb(249,221,25)" fg:x="20072" fg:w="102"/><text x="18.3659%" y="735.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (102 samples, 0.09%)</title><rect x="18.1159%" y="709" width="0.0921%" height="15" fill="rgb(215,208,19)" fg:x="20072" fg:w="102"/><text x="18.3659%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (166 samples, 0.15%)</title><rect x="18.6772%" y="725" width="0.1498%" height="15" fill="rgb(236,175,2)" fg:x="20694" fg:w="166"/><text x="18.9272%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (203 samples, 0.18%)</title><rect x="18.8595%" y="629" width="0.1832%" height="15" fill="rgb(241,52,2)" fg:x="20896" fg:w="203"/><text x="19.1095%" y="639.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="19.0446%" y="517" width="0.0126%" height="15" fill="rgb(248,140,14)" fg:x="21101" fg:w="14"/><text x="19.2946%" y="527.50"></text></g><g><title>size_to_sizeclass (20 samples, 0.02%)</title><rect x="19.0572%" y="485" width="0.0181%" height="15" fill="rgb(253,22,42)" fg:x="21115" fg:w="20"/><text x="19.3072%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (14 samples, 0.01%)</title><rect x="19.0816%" y="469" width="0.0126%" height="15" fill="rgb(234,61,47)" fg:x="21142" fg:w="14"/><text x="19.3316%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (14 samples, 0.01%)</title><rect x="19.0816%" y="453" width="0.0126%" height="15" fill="rgb(208,226,15)" fg:x="21142" fg:w="14"/><text x="19.3316%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="19.0816%" y="437" width="0.0126%" height="15" fill="rgb(217,221,4)" fg:x="21142" fg:w="14"/><text x="19.3316%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="19.0816%" y="421" width="0.0126%" height="15" fill="rgb(212,174,34)" fg:x="21142" fg:w="14"/><text x="19.3316%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="19.0816%" y="405" width="0.0126%" height="15" fill="rgb(253,83,4)" fg:x="21142" fg:w="14"/><text x="19.3316%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (15 samples, 0.01%)</title><rect x="19.0969%" y="405" width="0.0135%" height="15" fill="rgb(250,195,49)" fg:x="21159" fg:w="15"/><text x="19.3469%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (15 samples, 0.01%)</title><rect x="19.0969%" y="389" width="0.0135%" height="15" fill="rgb(241,192,25)" fg:x="21159" fg:w="15"/><text x="19.3469%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (14 samples, 0.01%)</title><rect x="19.0978%" y="373" width="0.0126%" height="15" fill="rgb(208,124,10)" fg:x="21160" fg:w="14"/><text x="19.3478%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (20 samples, 0.02%)</title><rect x="19.0960%" y="421" width="0.0181%" height="15" fill="rgb(222,33,0)" fg:x="21158" fg:w="20"/><text x="19.3460%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (27 samples, 0.02%)</title><rect x="19.0942%" y="437" width="0.0244%" height="15" fill="rgb(234,209,28)" fg:x="21156" fg:w="27"/><text x="19.3442%" y="447.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (15 samples, 0.01%)</title><rect x="19.1249%" y="421" width="0.0135%" height="15" fill="rgb(224,11,23)" fg:x="21190" fg:w="15"/><text x="19.3749%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (168 samples, 0.15%)</title><rect x="19.0942%" y="469" width="0.1516%" height="15" fill="rgb(232,99,1)" fg:x="21156" fg:w="168"/><text x="19.3442%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (168 samples, 0.15%)</title><rect x="19.0942%" y="453" width="0.1516%" height="15" fill="rgb(237,95,45)" fg:x="21156" fg:w="168"/><text x="19.3442%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (141 samples, 0.13%)</title><rect x="19.1186%" y="437" width="0.1273%" height="15" fill="rgb(208,109,11)" fg:x="21183" fg:w="141"/><text x="19.3686%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (119 samples, 0.11%)</title><rect x="19.1384%" y="421" width="0.1074%" height="15" fill="rgb(216,190,48)" fg:x="21205" fg:w="119"/><text x="19.3884%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (119 samples, 0.11%)</title><rect x="19.1384%" y="405" width="0.1074%" height="15" fill="rgb(251,171,36)" fg:x="21205" fg:w="119"/><text x="19.3884%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (119 samples, 0.11%)</title><rect x="19.1384%" y="389" width="0.1074%" height="15" fill="rgb(230,62,22)" fg:x="21205" fg:w="119"/><text x="19.3884%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (14 samples, 0.01%)</title><rect x="19.2503%" y="437" width="0.0126%" height="15" fill="rgb(225,114,35)" fg:x="21329" fg:w="14"/><text x="19.5003%" y="447.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (13 samples, 0.01%)</title><rect x="19.2513%" y="421" width="0.0117%" height="15" fill="rgb(215,118,42)" fg:x="21330" fg:w="13"/><text x="19.5013%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="19.2513%" y="405" width="0.0117%" height="15" fill="rgb(243,119,21)" fg:x="21330" fg:w="13"/><text x="19.5013%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (33 samples, 0.03%)</title><rect x="19.2630%" y="437" width="0.0298%" height="15" fill="rgb(252,177,53)" fg:x="21343" fg:w="33"/><text x="19.5130%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (33 samples, 0.03%)</title><rect x="19.2630%" y="421" width="0.0298%" height="15" fill="rgb(237,209,29)" fg:x="21343" fg:w="33"/><text x="19.5130%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (57 samples, 0.05%)</title><rect x="19.2458%" y="469" width="0.0514%" height="15" fill="rgb(212,65,23)" fg:x="21324" fg:w="57"/><text x="19.4958%" y="479.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (52 samples, 0.05%)</title><rect x="19.2503%" y="453" width="0.0469%" height="15" fill="rgb(230,222,46)" fg:x="21329" fg:w="52"/><text x="19.5003%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="19.2982%" y="437" width="0.0117%" height="15" fill="rgb(215,135,32)" fg:x="21382" fg:w="13"/><text x="19.5482%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="19.2973%" y="469" width="0.0135%" height="15" fill="rgb(246,101,22)" fg:x="21381" fg:w="15"/><text x="19.5473%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="19.2973%" y="453" width="0.0135%" height="15" fill="rgb(206,107,13)" fg:x="21381" fg:w="15"/><text x="19.5473%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::empty (37 samples, 0.03%)</title><rect x="19.3108%" y="469" width="0.0334%" height="15" fill="rgb(250,100,44)" fg:x="21396" fg:w="37"/><text x="19.5608%" y="479.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (37 samples, 0.03%)</title><rect x="19.3108%" y="453" width="0.0334%" height="15" fill="rgb(231,147,38)" fg:x="21396" fg:w="37"/><text x="19.5608%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (817 samples, 0.74%)</title><rect x="19.0572%" y="517" width="0.7374%" height="15" fill="rgb(229,8,40)" fg:x="21115" fg:w="817"/><text x="19.3072%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (817 samples, 0.74%)</title><rect x="19.0572%" y="501" width="0.7374%" height="15" fill="rgb(221,135,30)" fg:x="21115" fg:w="817"/><text x="19.3072%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (797 samples, 0.72%)</title><rect x="19.0753%" y="485" width="0.7193%" height="15" fill="rgb(249,193,18)" fg:x="21135" fg:w="797"/><text x="19.3253%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (499 samples, 0.45%)</title><rect x="19.3442%" y="469" width="0.4504%" height="15" fill="rgb(209,133,39)" fg:x="21433" fg:w="499"/><text x="19.5942%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (499 samples, 0.45%)</title><rect x="19.3442%" y="453" width="0.4504%" height="15" fill="rgb(232,100,14)" fg:x="21433" fg:w="499"/><text x="19.5942%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,059 samples, 0.96%)</title><rect x="18.8478%" y="645" width="0.9558%" height="15" fill="rgb(224,185,1)" fg:x="20883" fg:w="1059"/><text x="19.0978%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (843 samples, 0.76%)</title><rect x="19.0428%" y="629" width="0.7608%" height="15" fill="rgb(223,139,8)" fg:x="21099" fg:w="843"/><text x="19.2928%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (843 samples, 0.76%)</title><rect x="19.0428%" y="613" width="0.7608%" height="15" fill="rgb(232,213,38)" fg:x="21099" fg:w="843"/><text x="19.2928%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (843 samples, 0.76%)</title><rect x="19.0428%" y="597" width="0.7608%" height="15" fill="rgb(207,94,22)" fg:x="21099" fg:w="843"/><text x="19.2928%" y="607.50"></text></g><g><title>alloc::alloc::alloc (842 samples, 0.76%)</title><rect x="19.0437%" y="581" width="0.7599%" height="15" fill="rgb(219,183,54)" fg:x="21100" fg:w="842"/><text x="19.2937%" y="591.50"></text></g><g><title>__rg_alloc (842 samples, 0.76%)</title><rect x="19.0437%" y="565" width="0.7599%" height="15" fill="rgb(216,185,54)" fg:x="21100" fg:w="842"/><text x="19.2937%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (842 samples, 0.76%)</title><rect x="19.0437%" y="549" width="0.7599%" height="15" fill="rgb(254,217,39)" fg:x="21100" fg:w="842"/><text x="19.2937%" y="559.50"></text></g><g><title>rust_alloc (842 samples, 0.76%)</title><rect x="19.0437%" y="533" width="0.7599%" height="15" fill="rgb(240,178,23)" fg:x="21100" fg:w="842"/><text x="19.2937%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (1,093 samples, 0.99%)</title><rect x="18.8271%" y="725" width="0.9865%" height="15" fill="rgb(218,11,47)" fg:x="20860" fg:w="1093"/><text x="19.0771%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (1,070 samples, 0.97%)</title><rect x="18.8478%" y="709" width="0.9657%" height="15" fill="rgb(218,51,51)" fg:x="20883" fg:w="1070"/><text x="19.0978%" y="719.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (1,070 samples, 0.97%)</title><rect x="18.8478%" y="693" width="0.9657%" height="15" fill="rgb(238,126,27)" fg:x="20883" fg:w="1070"/><text x="19.0978%" y="703.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (1,070 samples, 0.97%)</title><rect x="18.8478%" y="677" width="0.9657%" height="15" fill="rgb(249,202,22)" fg:x="20883" fg:w="1070"/><text x="19.0978%" y="687.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (1,070 samples, 0.97%)</title><rect x="18.8478%" y="661" width="0.9657%" height="15" fill="rgb(254,195,49)" fg:x="20883" fg:w="1070"/><text x="19.0978%" y="671.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::_::&lt;impl tremor_runtime::connectors::sink::RawSink_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::on_event (34 samples, 0.03%)</title><rect x="19.8144%" y="725" width="0.0307%" height="15" fill="rgb(208,123,14)" fg:x="21954" fg:w="34"/><text x="20.0644%" y="735.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (5,930 samples, 5.35%)</title><rect x="14.4957%" y="757" width="5.3521%" height="15" fill="rgb(224,200,8)" fg:x="16061" fg:w="5930"/><text x="14.7457%" y="767.50">tremor_..</text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (1,817 samples, 1.64%)</title><rect x="18.2079%" y="741" width="1.6399%" height="15" fill="rgb(217,61,36)" fg:x="20174" fg:w="1817"/><text x="18.4579%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,356 samples, 5.74%)</title><rect x="14.1176%" y="773" width="5.7366%" height="15" fill="rgb(206,35,45)" fg:x="15642" fg:w="6356"/><text x="14.3676%" y="783.50">&lt;core::..</text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (21 samples, 0.02%)</title><rect x="19.8921%" y="645" width="0.0190%" height="15" fill="rgb(217,65,33)" fg:x="22040" fg:w="21"/><text x="20.1421%" y="655.50"></text></g><g><title>aligned_size (16 samples, 0.01%)</title><rect x="19.9336%" y="501" width="0.0144%" height="15" fill="rgb(222,158,48)" fg:x="22086" fg:w="16"/><text x="20.1836%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="19.9616%" y="453" width="0.0126%" height="15" fill="rgb(254,2,54)" fg:x="22117" fg:w="14"/><text x="20.2116%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (14 samples, 0.01%)</title><rect x="19.9616%" y="437" width="0.0126%" height="15" fill="rgb(250,143,38)" fg:x="22117" fg:w="14"/><text x="20.2116%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (12 samples, 0.01%)</title><rect x="19.9634%" y="421" width="0.0108%" height="15" fill="rgb(248,25,0)" fg:x="22119" fg:w="12"/><text x="20.2134%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (260 samples, 0.23%)</title><rect x="19.9480%" y="501" width="0.2347%" height="15" fill="rgb(206,152,27)" fg:x="22102" fg:w="260"/><text x="20.1980%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (260 samples, 0.23%)</title><rect x="19.9480%" y="485" width="0.2347%" height="15" fill="rgb(240,77,30)" fg:x="22102" fg:w="260"/><text x="20.1980%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (249 samples, 0.22%)</title><rect x="19.9579%" y="469" width="0.2247%" height="15" fill="rgb(231,5,3)" fg:x="22113" fg:w="249"/><text x="20.2079%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (223 samples, 0.20%)</title><rect x="19.9814%" y="453" width="0.2013%" height="15" fill="rgb(207,226,32)" fg:x="22139" fg:w="223"/><text x="20.2314%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (223 samples, 0.20%)</title><rect x="19.9814%" y="437" width="0.2013%" height="15" fill="rgb(222,207,47)" fg:x="22139" fg:w="223"/><text x="20.2314%" y="447.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (323 samples, 0.29%)</title><rect x="19.8921%" y="661" width="0.2915%" height="15" fill="rgb(229,115,45)" fg:x="22040" fg:w="323"/><text x="20.1421%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (302 samples, 0.27%)</title><rect x="19.9110%" y="645" width="0.2726%" height="15" fill="rgb(224,191,6)" fg:x="22061" fg:w="302"/><text x="20.1610%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (302 samples, 0.27%)</title><rect x="19.9110%" y="629" width="0.2726%" height="15" fill="rgb(230,227,24)" fg:x="22061" fg:w="302"/><text x="20.1610%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (287 samples, 0.26%)</title><rect x="19.9245%" y="613" width="0.2590%" height="15" fill="rgb(228,80,19)" fg:x="22076" fg:w="287"/><text x="20.1745%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (287 samples, 0.26%)</title><rect x="19.9245%" y="597" width="0.2590%" height="15" fill="rgb(247,229,0)" fg:x="22076" fg:w="287"/><text x="20.1745%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (287 samples, 0.26%)</title><rect x="19.9245%" y="581" width="0.2590%" height="15" fill="rgb(237,194,15)" fg:x="22076" fg:w="287"/><text x="20.1745%" y="591.50"></text></g><g><title>alloc::alloc::alloc (287 samples, 0.26%)</title><rect x="19.9245%" y="565" width="0.2590%" height="15" fill="rgb(219,203,20)" fg:x="22076" fg:w="287"/><text x="20.1745%" y="575.50"></text></g><g><title>__rg_alloc (287 samples, 0.26%)</title><rect x="19.9245%" y="549" width="0.2590%" height="15" fill="rgb(234,128,8)" fg:x="22076" fg:w="287"/><text x="20.1745%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (287 samples, 0.26%)</title><rect x="19.9245%" y="533" width="0.2590%" height="15" fill="rgb(248,202,8)" fg:x="22076" fg:w="287"/><text x="20.1745%" y="543.50"></text></g><g><title>rust_alloc (277 samples, 0.25%)</title><rect x="19.9336%" y="517" width="0.2500%" height="15" fill="rgb(206,104,37)" fg:x="22086" fg:w="277"/><text x="20.1836%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (16 samples, 0.01%)</title><rect x="20.1989%" y="597" width="0.0144%" height="15" fill="rgb(223,8,27)" fg:x="22380" fg:w="16"/><text x="20.4489%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (16 samples, 0.01%)</title><rect x="20.1989%" y="581" width="0.0144%" height="15" fill="rgb(216,217,28)" fg:x="22380" fg:w="16"/><text x="20.4489%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (36 samples, 0.03%)</title><rect x="20.1917%" y="613" width="0.0325%" height="15" fill="rgb(249,199,1)" fg:x="22372" fg:w="36"/><text x="20.4417%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (12 samples, 0.01%)</title><rect x="20.2134%" y="597" width="0.0108%" height="15" fill="rgb(240,85,17)" fg:x="22396" fg:w="12"/><text x="20.4634%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (12 samples, 0.01%)</title><rect x="20.2134%" y="581" width="0.0108%" height="15" fill="rgb(206,108,45)" fg:x="22396" fg:w="12"/><text x="20.4634%" y="591.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (381 samples, 0.34%)</title><rect x="19.8839%" y="741" width="0.3439%" height="15" fill="rgb(245,210,41)" fg:x="22031" fg:w="381"/><text x="20.1339%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (372 samples, 0.34%)</title><rect x="19.8921%" y="725" width="0.3357%" height="15" fill="rgb(206,13,37)" fg:x="22040" fg:w="372"/><text x="20.1421%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (372 samples, 0.34%)</title><rect x="19.8921%" y="709" width="0.3357%" height="15" fill="rgb(250,61,18)" fg:x="22040" fg:w="372"/><text x="20.1421%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (372 samples, 0.34%)</title><rect x="19.8921%" y="693" width="0.3357%" height="15" fill="rgb(235,172,48)" fg:x="22040" fg:w="372"/><text x="20.1421%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (372 samples, 0.34%)</title><rect x="19.8921%" y="677" width="0.3357%" height="15" fill="rgb(249,201,17)" fg:x="22040" fg:w="372"/><text x="20.1421%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (49 samples, 0.04%)</title><rect x="20.1836%" y="661" width="0.0442%" height="15" fill="rgb(219,208,6)" fg:x="22363" fg:w="49"/><text x="20.4336%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (49 samples, 0.04%)</title><rect x="20.1836%" y="645" width="0.0442%" height="15" fill="rgb(248,31,23)" fg:x="22363" fg:w="49"/><text x="20.4336%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (49 samples, 0.04%)</title><rect x="20.1836%" y="629" width="0.0442%" height="15" fill="rgb(245,15,42)" fg:x="22363" fg:w="49"/><text x="20.4336%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="20.5581%" y="709" width="0.0108%" height="15" fill="rgb(222,217,39)" fg:x="22778" fg:w="12"/><text x="20.8081%" y="719.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (13 samples, 0.01%)</title><rect x="20.5690%" y="629" width="0.0117%" height="15" fill="rgb(210,219,27)" fg:x="22790" fg:w="13"/><text x="20.8190%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="20.5690%" y="613" width="0.0117%" height="15" fill="rgb(252,166,36)" fg:x="22790" fg:w="13"/><text x="20.8190%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (38 samples, 0.03%)</title><rect x="20.5690%" y="693" width="0.0343%" height="15" fill="rgb(245,132,34)" fg:x="22790" fg:w="38"/><text x="20.8190%" y="703.50"></text></g><g><title>std::collections::hash::map::RandomState::new (38 samples, 0.03%)</title><rect x="20.5690%" y="677" width="0.0343%" height="15" fill="rgb(236,54,3)" fg:x="22790" fg:w="38"/><text x="20.8190%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (38 samples, 0.03%)</title><rect x="20.5690%" y="661" width="0.0343%" height="15" fill="rgb(241,173,43)" fg:x="22790" fg:w="38"/><text x="20.8190%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (38 samples, 0.03%)</title><rect x="20.5690%" y="645" width="0.0343%" height="15" fill="rgb(215,190,9)" fg:x="22790" fg:w="38"/><text x="20.8190%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (25 samples, 0.02%)</title><rect x="20.5807%" y="629" width="0.0226%" height="15" fill="rgb(242,101,16)" fg:x="22803" fg:w="25"/><text x="20.8307%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (16 samples, 0.01%)</title><rect x="20.5888%" y="613" width="0.0144%" height="15" fill="rgb(223,190,21)" fg:x="22812" fg:w="16"/><text x="20.8388%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (16 samples, 0.01%)</title><rect x="20.5888%" y="597" width="0.0144%" height="15" fill="rgb(215,228,25)" fg:x="22812" fg:w="16"/><text x="20.8388%" y="607.50"></text></g><g><title>core::mem::replace (16 samples, 0.01%)</title><rect x="20.5888%" y="581" width="0.0144%" height="15" fill="rgb(225,36,22)" fg:x="22812" fg:w="16"/><text x="20.8388%" y="591.50"></text></g><g><title>core::ptr::write (16 samples, 0.01%)</title><rect x="20.5888%" y="565" width="0.0144%" height="15" fill="rgb(251,106,46)" fg:x="22812" fg:w="16"/><text x="20.8388%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="20.6448%" y="453" width="0.0280%" height="15" fill="rgb(208,90,1)" fg:x="22874" fg:w="31"/><text x="20.8948%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (31 samples, 0.03%)</title><rect x="20.6448%" y="437" width="0.0280%" height="15" fill="rgb(243,10,4)" fg:x="22874" fg:w="31"/><text x="20.8948%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (21 samples, 0.02%)</title><rect x="20.6538%" y="421" width="0.0190%" height="15" fill="rgb(212,137,27)" fg:x="22884" fg:w="21"/><text x="20.9038%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (19 samples, 0.02%)</title><rect x="20.6556%" y="405" width="0.0171%" height="15" fill="rgb(231,220,49)" fg:x="22886" fg:w="19"/><text x="20.9056%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (19 samples, 0.02%)</title><rect x="20.6556%" y="389" width="0.0171%" height="15" fill="rgb(237,96,20)" fg:x="22886" fg:w="19"/><text x="20.9056%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (19 samples, 0.02%)</title><rect x="20.6556%" y="373" width="0.0171%" height="15" fill="rgb(239,229,30)" fg:x="22886" fg:w="19"/><text x="20.9056%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (102 samples, 0.09%)</title><rect x="20.6348%" y="501" width="0.0921%" height="15" fill="rgb(219,65,33)" fg:x="22863" fg:w="102"/><text x="20.8848%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (102 samples, 0.09%)</title><rect x="20.6348%" y="485" width="0.0921%" height="15" fill="rgb(243,134,7)" fg:x="22863" fg:w="102"/><text x="20.8848%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (93 samples, 0.08%)</title><rect x="20.6430%" y="469" width="0.0839%" height="15" fill="rgb(216,177,54)" fg:x="22872" fg:w="93"/><text x="20.8930%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (53 samples, 0.05%)</title><rect x="20.6791%" y="453" width="0.0478%" height="15" fill="rgb(211,160,20)" fg:x="22912" fg:w="53"/><text x="20.9291%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (53 samples, 0.05%)</title><rect x="20.6791%" y="437" width="0.0478%" height="15" fill="rgb(239,85,39)" fg:x="22912" fg:w="53"/><text x="20.9291%" y="447.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (182 samples, 0.16%)</title><rect x="20.5690%" y="709" width="0.1643%" height="15" fill="rgb(232,125,22)" fg:x="22790" fg:w="182"/><text x="20.8190%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (144 samples, 0.13%)</title><rect x="20.6033%" y="693" width="0.1300%" height="15" fill="rgb(244,57,34)" fg:x="22828" fg:w="144"/><text x="20.8533%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (144 samples, 0.13%)</title><rect x="20.6033%" y="677" width="0.1300%" height="15" fill="rgb(214,203,32)" fg:x="22828" fg:w="144"/><text x="20.8533%" y="687.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (139 samples, 0.13%)</title><rect x="20.6078%" y="661" width="0.1255%" height="15" fill="rgb(207,58,43)" fg:x="22833" fg:w="139"/><text x="20.8578%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (139 samples, 0.13%)</title><rect x="20.6078%" y="645" width="0.1255%" height="15" fill="rgb(215,193,15)" fg:x="22833" fg:w="139"/><text x="20.8578%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (138 samples, 0.12%)</title><rect x="20.6087%" y="629" width="0.1246%" height="15" fill="rgb(232,15,44)" fg:x="22834" fg:w="138"/><text x="20.8587%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (119 samples, 0.11%)</title><rect x="20.6258%" y="613" width="0.1074%" height="15" fill="rgb(212,3,48)" fg:x="22853" fg:w="119"/><text x="20.8758%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (114 samples, 0.10%)</title><rect x="20.6303%" y="597" width="0.1029%" height="15" fill="rgb(218,128,7)" fg:x="22858" fg:w="114"/><text x="20.8803%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (114 samples, 0.10%)</title><rect x="20.6303%" y="581" width="0.1029%" height="15" fill="rgb(226,216,39)" fg:x="22858" fg:w="114"/><text x="20.8803%" y="591.50"></text></g><g><title>alloc::alloc::alloc (114 samples, 0.10%)</title><rect x="20.6303%" y="565" width="0.1029%" height="15" fill="rgb(243,47,51)" fg:x="22858" fg:w="114"/><text x="20.8803%" y="575.50"></text></g><g><title>__rg_alloc (114 samples, 0.10%)</title><rect x="20.6303%" y="549" width="0.1029%" height="15" fill="rgb(241,183,40)" fg:x="22858" fg:w="114"/><text x="20.8803%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (114 samples, 0.10%)</title><rect x="20.6303%" y="533" width="0.1029%" height="15" fill="rgb(231,217,32)" fg:x="22858" fg:w="114"/><text x="20.8803%" y="543.50"></text></g><g><title>rust_alloc (114 samples, 0.10%)</title><rect x="20.6303%" y="517" width="0.1029%" height="15" fill="rgb(229,61,38)" fg:x="22858" fg:w="114"/><text x="20.8803%" y="527.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (17 samples, 0.02%)</title><rect x="20.7684%" y="661" width="0.0153%" height="15" fill="rgb(225,210,5)" fg:x="23011" fg:w="17"/><text x="21.0184%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (17 samples, 0.02%)</title><rect x="20.7684%" y="645" width="0.0153%" height="15" fill="rgb(231,79,45)" fg:x="23011" fg:w="17"/><text x="21.0184%" y="655.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (17 samples, 0.02%)</title><rect x="20.7684%" y="629" width="0.0153%" height="15" fill="rgb(224,100,7)" fg:x="23011" fg:w="17"/><text x="21.0184%" y="639.50"></text></g><g><title>abi_stable::erased_types::iterator::next (35 samples, 0.03%)</title><rect x="20.7892%" y="661" width="0.0316%" height="15" fill="rgb(241,198,18)" fg:x="23034" fg:w="35"/><text x="21.0392%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (93 samples, 0.08%)</title><rect x="20.7594%" y="693" width="0.0839%" height="15" fill="rgb(252,97,53)" fg:x="23001" fg:w="93"/><text x="21.0094%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (93 samples, 0.08%)</title><rect x="20.7594%" y="677" width="0.0839%" height="15" fill="rgb(220,88,7)" fg:x="23001" fg:w="93"/><text x="21.0094%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (25 samples, 0.02%)</title><rect x="20.8208%" y="661" width="0.0226%" height="15" fill="rgb(213,176,14)" fg:x="23069" fg:w="25"/><text x="21.0708%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (17 samples, 0.02%)</title><rect x="20.8280%" y="645" width="0.0153%" height="15" fill="rgb(246,73,7)" fg:x="23077" fg:w="17"/><text x="21.0780%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (12 samples, 0.01%)</title><rect x="20.8524%" y="661" width="0.0108%" height="15" fill="rgb(245,64,36)" fg:x="23104" fg:w="12"/><text x="21.1024%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (12 samples, 0.01%)</title><rect x="20.8524%" y="645" width="0.0108%" height="15" fill="rgb(245,80,10)" fg:x="23104" fg:w="12"/><text x="21.1024%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (43 samples, 0.04%)</title><rect x="20.8433%" y="693" width="0.0388%" height="15" fill="rgb(232,107,50)" fg:x="23094" fg:w="43"/><text x="21.0933%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (43 samples, 0.04%)</title><rect x="20.8433%" y="677" width="0.0388%" height="15" fill="rgb(253,3,0)" fg:x="23094" fg:w="43"/><text x="21.0933%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (21 samples, 0.02%)</title><rect x="20.8632%" y="661" width="0.0190%" height="15" fill="rgb(212,99,53)" fg:x="23116" fg:w="21"/><text x="21.1132%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (21 samples, 0.02%)</title><rect x="20.8632%" y="645" width="0.0190%" height="15" fill="rgb(249,111,54)" fg:x="23116" fg:w="21"/><text x="21.1132%" y="655.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (16 samples, 0.01%)</title><rect x="20.8821%" y="693" width="0.0144%" height="15" fill="rgb(249,55,30)" fg:x="23137" fg:w="16"/><text x="21.1321%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (16 samples, 0.01%)</title><rect x="20.8821%" y="677" width="0.0144%" height="15" fill="rgb(237,47,42)" fg:x="23137" fg:w="16"/><text x="21.1321%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (16 samples, 0.01%)</title><rect x="20.8821%" y="661" width="0.0144%" height="15" fill="rgb(211,20,18)" fg:x="23137" fg:w="16"/><text x="21.1321%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="20.9769%" y="437" width="0.0117%" height="15" fill="rgb(231,203,46)" fg:x="23242" fg:w="13"/><text x="21.2269%" y="447.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="20.9769%" y="421" width="0.0117%" height="15" fill="rgb(237,142,3)" fg:x="23242" fg:w="13"/><text x="21.2269%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="20.9625%" y="485" width="0.0361%" height="15" fill="rgb(241,107,1)" fg:x="23226" fg:w="40"/><text x="21.2125%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="20.9625%" y="469" width="0.0361%" height="15" fill="rgb(229,83,13)" fg:x="23226" fg:w="40"/><text x="21.2125%" y="479.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (39 samples, 0.04%)</title><rect x="20.9634%" y="453" width="0.0352%" height="15" fill="rgb(241,91,40)" fg:x="23227" fg:w="39"/><text x="21.2134%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (65 samples, 0.06%)</title><rect x="20.9462%" y="517" width="0.0587%" height="15" fill="rgb(225,3,45)" fg:x="23208" fg:w="65"/><text x="21.1962%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (65 samples, 0.06%)</title><rect x="20.9462%" y="501" width="0.0587%" height="15" fill="rgb(244,223,14)" fg:x="23208" fg:w="65"/><text x="21.1962%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (75 samples, 0.07%)</title><rect x="20.9462%" y="549" width="0.0677%" height="15" fill="rgb(224,124,37)" fg:x="23208" fg:w="75"/><text x="21.1962%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (75 samples, 0.07%)</title><rect x="20.9462%" y="533" width="0.0677%" height="15" fill="rgb(251,171,30)" fg:x="23208" fg:w="75"/><text x="21.1962%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (89 samples, 0.08%)</title><rect x="20.9363%" y="565" width="0.0803%" height="15" fill="rgb(236,46,54)" fg:x="23197" fg:w="89"/><text x="21.1863%" y="575.50"></text></g><g><title>rust_dealloc (105 samples, 0.09%)</title><rect x="20.9264%" y="581" width="0.0948%" height="15" fill="rgb(245,213,5)" fg:x="23186" fg:w="105"/><text x="21.1764%" y="591.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,296 samples, 1.17%)</title><rect x="19.8541%" y="773" width="1.1697%" height="15" fill="rgb(230,144,27)" fg:x="21998" fg:w="1296"/><text x="20.1041%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,271 samples, 1.15%)</title><rect x="19.8767%" y="757" width="1.1471%" height="15" fill="rgb(220,86,6)" fg:x="22023" fg:w="1271"/><text x="20.1267%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (882 samples, 0.80%)</title><rect x="20.2278%" y="741" width="0.7960%" height="15" fill="rgb(240,20,13)" fg:x="22412" fg:w="882"/><text x="20.4778%" y="751.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (516 samples, 0.47%)</title><rect x="20.5581%" y="725" width="0.4657%" height="15" fill="rgb(217,89,34)" fg:x="22778" fg:w="516"/><text x="20.8081%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (322 samples, 0.29%)</title><rect x="20.7332%" y="709" width="0.2906%" height="15" fill="rgb(229,13,5)" fg:x="22972" fg:w="322"/><text x="20.9832%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (141 samples, 0.13%)</title><rect x="20.8966%" y="693" width="0.1273%" height="15" fill="rgb(244,67,35)" fg:x="23153" fg:w="141"/><text x="21.1466%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (141 samples, 0.13%)</title><rect x="20.8966%" y="677" width="0.1273%" height="15" fill="rgb(221,40,2)" fg:x="23153" fg:w="141"/><text x="21.1466%" y="687.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (141 samples, 0.13%)</title><rect x="20.8966%" y="661" width="0.1273%" height="15" fill="rgb(237,157,21)" fg:x="23153" fg:w="141"/><text x="21.1466%" y="671.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (131 samples, 0.12%)</title><rect x="20.9056%" y="645" width="0.1182%" height="15" fill="rgb(222,94,11)" fg:x="23163" fg:w="131"/><text x="21.1556%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (125 samples, 0.11%)</title><rect x="20.9110%" y="629" width="0.1128%" height="15" fill="rgb(249,113,6)" fg:x="23169" fg:w="125"/><text x="21.1610%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (125 samples, 0.11%)</title><rect x="20.9110%" y="613" width="0.1128%" height="15" fill="rgb(238,137,36)" fg:x="23169" fg:w="125"/><text x="21.1610%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (125 samples, 0.11%)</title><rect x="20.9110%" y="597" width="0.1128%" height="15" fill="rgb(210,102,26)" fg:x="23169" fg:w="125"/><text x="21.1610%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="21.0807%" y="725" width="0.0117%" height="15" fill="rgb(218,30,30)" fg:x="23357" fg:w="13"/><text x="21.3307%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (13 samples, 0.01%)</title><rect x="21.0807%" y="709" width="0.0117%" height="15" fill="rgb(214,67,26)" fg:x="23357" fg:w="13"/><text x="21.3307%" y="719.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (79 samples, 0.07%)</title><rect x="21.0374%" y="757" width="0.0713%" height="15" fill="rgb(251,9,53)" fg:x="23309" fg:w="79"/><text x="21.2874%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (45 samples, 0.04%)</title><rect x="21.0681%" y="741" width="0.0406%" height="15" fill="rgb(228,204,25)" fg:x="23343" fg:w="45"/><text x="21.3181%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (18 samples, 0.02%)</title><rect x="21.0924%" y="725" width="0.0162%" height="15" fill="rgb(207,153,8)" fg:x="23370" fg:w="18"/><text x="21.3424%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 0.02%)</title><rect x="21.0924%" y="709" width="0.0162%" height="15" fill="rgb(242,9,16)" fg:x="23370" fg:w="18"/><text x="21.3424%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.02%)</title><rect x="21.0924%" y="693" width="0.0162%" height="15" fill="rgb(217,211,10)" fg:x="23370" fg:w="18"/><text x="21.3424%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="21.0924%" y="677" width="0.0162%" height="15" fill="rgb(219,228,52)" fg:x="23370" fg:w="18"/><text x="21.3424%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.02%)</title><rect x="21.0924%" y="661" width="0.0162%" height="15" fill="rgb(231,92,29)" fg:x="23370" fg:w="18"/><text x="21.3424%" y="671.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (15 samples, 0.01%)</title><rect x="21.1574%" y="629" width="0.0135%" height="15" fill="rgb(232,8,23)" fg:x="23442" fg:w="15"/><text x="21.4074%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="21.2016%" y="437" width="0.0153%" height="15" fill="rgb(216,211,34)" fg:x="23491" fg:w="17"/><text x="21.4516%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (17 samples, 0.02%)</title><rect x="21.2016%" y="421" width="0.0153%" height="15" fill="rgb(236,151,0)" fg:x="23491" fg:w="17"/><text x="21.4516%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (16 samples, 0.01%)</title><rect x="21.2025%" y="405" width="0.0144%" height="15" fill="rgb(209,168,3)" fg:x="23492" fg:w="16"/><text x="21.4525%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (244 samples, 0.22%)</title><rect x="21.1881%" y="485" width="0.2202%" height="15" fill="rgb(208,129,28)" fg:x="23476" fg:w="244"/><text x="21.4381%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (244 samples, 0.22%)</title><rect x="21.1881%" y="469" width="0.2202%" height="15" fill="rgb(229,78,22)" fg:x="23476" fg:w="244"/><text x="21.4381%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (235 samples, 0.21%)</title><rect x="21.1962%" y="453" width="0.2121%" height="15" fill="rgb(228,187,13)" fg:x="23485" fg:w="235"/><text x="21.4462%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (201 samples, 0.18%)</title><rect x="21.2269%" y="437" width="0.1814%" height="15" fill="rgb(240,119,24)" fg:x="23519" fg:w="201"/><text x="21.4769%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (201 samples, 0.18%)</title><rect x="21.2269%" y="421" width="0.1814%" height="15" fill="rgb(209,194,42)" fg:x="23519" fg:w="201"/><text x="21.4769%" y="431.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (283 samples, 0.26%)</title><rect x="21.1574%" y="645" width="0.2554%" height="15" fill="rgb(247,200,46)" fg:x="23442" fg:w="283"/><text x="21.4074%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (268 samples, 0.24%)</title><rect x="21.1710%" y="629" width="0.2419%" height="15" fill="rgb(218,76,16)" fg:x="23457" fg:w="268"/><text x="21.4210%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (268 samples, 0.24%)</title><rect x="21.1710%" y="613" width="0.2419%" height="15" fill="rgb(225,21,48)" fg:x="23457" fg:w="268"/><text x="21.4210%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (256 samples, 0.23%)</title><rect x="21.1818%" y="597" width="0.2311%" height="15" fill="rgb(239,223,50)" fg:x="23469" fg:w="256"/><text x="21.4318%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (256 samples, 0.23%)</title><rect x="21.1818%" y="581" width="0.2311%" height="15" fill="rgb(244,45,21)" fg:x="23469" fg:w="256"/><text x="21.4318%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (256 samples, 0.23%)</title><rect x="21.1818%" y="565" width="0.2311%" height="15" fill="rgb(232,33,43)" fg:x="23469" fg:w="256"/><text x="21.4318%" y="575.50"></text></g><g><title>alloc::alloc::alloc (256 samples, 0.23%)</title><rect x="21.1818%" y="549" width="0.2311%" height="15" fill="rgb(209,8,3)" fg:x="23469" fg:w="256"/><text x="21.4318%" y="559.50"></text></g><g><title>__rg_alloc (256 samples, 0.23%)</title><rect x="21.1818%" y="533" width="0.2311%" height="15" fill="rgb(214,25,53)" fg:x="23469" fg:w="256"/><text x="21.4318%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (256 samples, 0.23%)</title><rect x="21.1818%" y="517" width="0.2311%" height="15" fill="rgb(254,186,54)" fg:x="23469" fg:w="256"/><text x="21.4318%" y="527.50"></text></g><g><title>rust_alloc (256 samples, 0.23%)</title><rect x="21.1818%" y="501" width="0.2311%" height="15" fill="rgb(208,174,49)" fg:x="23469" fg:w="256"/><text x="21.4318%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (140 samples, 0.13%)</title><rect x="21.4724%" y="581" width="0.1264%" height="15" fill="rgb(233,191,51)" fg:x="23791" fg:w="140"/><text x="21.7224%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (140 samples, 0.13%)</title><rect x="21.4724%" y="565" width="0.1264%" height="15" fill="rgb(222,134,10)" fg:x="23791" fg:w="140"/><text x="21.7224%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (162 samples, 0.15%)</title><rect x="21.4634%" y="597" width="0.1462%" height="15" fill="rgb(230,226,20)" fg:x="23781" fg:w="162"/><text x="21.7134%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (12 samples, 0.01%)</title><rect x="21.5988%" y="581" width="0.0108%" height="15" fill="rgb(251,111,25)" fg:x="23931" fg:w="12"/><text x="21.8488%" y="591.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (715 samples, 0.65%)</title><rect x="21.1502%" y="725" width="0.6453%" height="15" fill="rgb(224,40,46)" fg:x="23434" fg:w="715"/><text x="21.4002%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (707 samples, 0.64%)</title><rect x="21.1574%" y="709" width="0.6381%" height="15" fill="rgb(236,108,47)" fg:x="23442" fg:w="707"/><text x="21.4074%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (707 samples, 0.64%)</title><rect x="21.1574%" y="693" width="0.6381%" height="15" fill="rgb(234,93,0)" fg:x="23442" fg:w="707"/><text x="21.4074%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (707 samples, 0.64%)</title><rect x="21.1574%" y="677" width="0.6381%" height="15" fill="rgb(224,213,32)" fg:x="23442" fg:w="707"/><text x="21.4074%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (707 samples, 0.64%)</title><rect x="21.1574%" y="661" width="0.6381%" height="15" fill="rgb(251,11,48)" fg:x="23442" fg:w="707"/><text x="21.4074%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (424 samples, 0.38%)</title><rect x="21.4128%" y="645" width="0.3827%" height="15" fill="rgb(236,173,5)" fg:x="23725" fg:w="424"/><text x="21.6628%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (424 samples, 0.38%)</title><rect x="21.4128%" y="629" width="0.3827%" height="15" fill="rgb(230,95,12)" fg:x="23725" fg:w="424"/><text x="21.6628%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (424 samples, 0.38%)</title><rect x="21.4128%" y="613" width="0.3827%" height="15" fill="rgb(232,209,1)" fg:x="23725" fg:w="424"/><text x="21.6628%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (206 samples, 0.19%)</title><rect x="21.6096%" y="597" width="0.1859%" height="15" fill="rgb(232,6,1)" fg:x="23943" fg:w="206"/><text x="21.8596%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="22.1448%" y="693" width="0.0135%" height="15" fill="rgb(210,224,50)" fg:x="24536" fg:w="15"/><text x="22.3948%" y="703.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="22.1583%" y="597" width="0.0108%" height="15" fill="rgb(228,127,35)" fg:x="24551" fg:w="12"/><text x="22.4083%" y="607.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (13 samples, 0.01%)</title><rect x="22.1583%" y="613" width="0.0117%" height="15" fill="rgb(245,102,45)" fg:x="24551" fg:w="13"/><text x="22.4083%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (27 samples, 0.02%)</title><rect x="22.1583%" y="677" width="0.0244%" height="15" fill="rgb(214,1,49)" fg:x="24551" fg:w="27"/><text x="22.4083%" y="687.50"></text></g><g><title>std::collections::hash::map::RandomState::new (27 samples, 0.02%)</title><rect x="22.1583%" y="661" width="0.0244%" height="15" fill="rgb(226,163,40)" fg:x="24551" fg:w="27"/><text x="22.4083%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.02%)</title><rect x="22.1583%" y="645" width="0.0244%" height="15" fill="rgb(239,212,28)" fg:x="24551" fg:w="27"/><text x="22.4083%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.02%)</title><rect x="22.1583%" y="629" width="0.0244%" height="15" fill="rgb(220,20,13)" fg:x="24551" fg:w="27"/><text x="22.4083%" y="639.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (14 samples, 0.01%)</title><rect x="22.1701%" y="613" width="0.0126%" height="15" fill="rgb(210,164,35)" fg:x="24564" fg:w="14"/><text x="22.4201%" y="623.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="22.2143%" y="453" width="0.0126%" height="15" fill="rgb(248,109,41)" fg:x="24613" fg:w="14"/><text x="22.4643%" y="463.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="22.2143%" y="437" width="0.0126%" height="15" fill="rgb(238,23,50)" fg:x="24613" fg:w="14"/><text x="22.4643%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="22.2269%" y="437" width="0.0117%" height="15" fill="rgb(211,48,49)" fg:x="24627" fg:w="13"/><text x="22.4769%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (13 samples, 0.01%)</title><rect x="22.2269%" y="421" width="0.0117%" height="15" fill="rgb(223,36,21)" fg:x="24627" fg:w="13"/><text x="22.4769%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (67 samples, 0.06%)</title><rect x="22.2143%" y="485" width="0.0605%" height="15" fill="rgb(207,123,46)" fg:x="24613" fg:w="67"/><text x="22.4643%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (67 samples, 0.06%)</title><rect x="22.2143%" y="469" width="0.0605%" height="15" fill="rgb(240,218,32)" fg:x="24613" fg:w="67"/><text x="22.4643%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (53 samples, 0.05%)</title><rect x="22.2269%" y="453" width="0.0478%" height="15" fill="rgb(252,5,43)" fg:x="24627" fg:w="53"/><text x="22.4769%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (38 samples, 0.03%)</title><rect x="22.2405%" y="437" width="0.0343%" height="15" fill="rgb(252,84,19)" fg:x="24642" fg:w="38"/><text x="22.4905%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (38 samples, 0.03%)</title><rect x="22.2405%" y="421" width="0.0343%" height="15" fill="rgb(243,152,39)" fg:x="24642" fg:w="38"/><text x="22.4905%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (137 samples, 0.12%)</title><rect x="22.1583%" y="693" width="0.1236%" height="15" fill="rgb(234,160,15)" fg:x="24551" fg:w="137"/><text x="22.4083%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (110 samples, 0.10%)</title><rect x="22.1827%" y="677" width="0.0993%" height="15" fill="rgb(237,34,20)" fg:x="24578" fg:w="110"/><text x="22.4327%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (110 samples, 0.10%)</title><rect x="22.1827%" y="661" width="0.0993%" height="15" fill="rgb(229,97,13)" fg:x="24578" fg:w="110"/><text x="22.4327%" y="671.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (103 samples, 0.09%)</title><rect x="22.1890%" y="645" width="0.0930%" height="15" fill="rgb(234,71,50)" fg:x="24585" fg:w="103"/><text x="22.4390%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (103 samples, 0.09%)</title><rect x="22.1890%" y="629" width="0.0930%" height="15" fill="rgb(253,155,4)" fg:x="24585" fg:w="103"/><text x="22.4390%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (103 samples, 0.09%)</title><rect x="22.1890%" y="613" width="0.0930%" height="15" fill="rgb(222,185,37)" fg:x="24585" fg:w="103"/><text x="22.4390%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (91 samples, 0.08%)</title><rect x="22.1999%" y="597" width="0.0821%" height="15" fill="rgb(251,177,13)" fg:x="24597" fg:w="91"/><text x="22.4499%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (83 samples, 0.07%)</title><rect x="22.2071%" y="581" width="0.0749%" height="15" fill="rgb(250,179,40)" fg:x="24605" fg:w="83"/><text x="22.4571%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (83 samples, 0.07%)</title><rect x="22.2071%" y="565" width="0.0749%" height="15" fill="rgb(242,44,2)" fg:x="24605" fg:w="83"/><text x="22.4571%" y="575.50"></text></g><g><title>alloc::alloc::alloc (83 samples, 0.07%)</title><rect x="22.2071%" y="549" width="0.0749%" height="15" fill="rgb(216,177,13)" fg:x="24605" fg:w="83"/><text x="22.4571%" y="559.50"></text></g><g><title>__rg_alloc (83 samples, 0.07%)</title><rect x="22.2071%" y="533" width="0.0749%" height="15" fill="rgb(216,106,43)" fg:x="24605" fg:w="83"/><text x="22.4571%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (83 samples, 0.07%)</title><rect x="22.2071%" y="517" width="0.0749%" height="15" fill="rgb(216,183,2)" fg:x="24605" fg:w="83"/><text x="22.4571%" y="527.50"></text></g><g><title>rust_alloc (83 samples, 0.07%)</title><rect x="22.2071%" y="501" width="0.0749%" height="15" fill="rgb(249,75,3)" fg:x="24605" fg:w="83"/><text x="22.4571%" y="511.50"></text></g><g><title>abi_stable::erased_types::iterator::next (42 samples, 0.04%)</title><rect x="22.3235%" y="645" width="0.0379%" height="15" fill="rgb(219,67,39)" fg:x="24734" fg:w="42"/><text x="22.5735%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (87 samples, 0.08%)</title><rect x="22.3018%" y="677" width="0.0785%" height="15" fill="rgb(253,228,2)" fg:x="24710" fg:w="87"/><text x="22.5518%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (87 samples, 0.08%)</title><rect x="22.3018%" y="661" width="0.0785%" height="15" fill="rgb(235,138,27)" fg:x="24710" fg:w="87"/><text x="22.5518%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (21 samples, 0.02%)</title><rect x="22.3614%" y="645" width="0.0190%" height="15" fill="rgb(236,97,51)" fg:x="24776" fg:w="21"/><text x="22.6114%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (14 samples, 0.01%)</title><rect x="22.3677%" y="629" width="0.0126%" height="15" fill="rgb(240,80,30)" fg:x="24783" fg:w="14"/><text x="22.6177%" y="639.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (49 samples, 0.04%)</title><rect x="22.3876%" y="645" width="0.0442%" height="15" fill="rgb(230,178,19)" fg:x="24805" fg:w="49"/><text x="22.6376%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (32 samples, 0.03%)</title><rect x="22.4029%" y="629" width="0.0289%" height="15" fill="rgb(210,190,27)" fg:x="24822" fg:w="32"/><text x="22.6529%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (17 samples, 0.02%)</title><rect x="22.4165%" y="613" width="0.0153%" height="15" fill="rgb(222,107,31)" fg:x="24837" fg:w="17"/><text x="22.6665%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (17 samples, 0.02%)</title><rect x="22.4165%" y="597" width="0.0153%" height="15" fill="rgb(216,127,34)" fg:x="24837" fg:w="17"/><text x="22.6665%" y="607.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (17 samples, 0.02%)</title><rect x="22.4165%" y="581" width="0.0153%" height="15" fill="rgb(234,116,52)" fg:x="24837" fg:w="17"/><text x="22.6665%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (17 samples, 0.02%)</title><rect x="22.4165%" y="565" width="0.0153%" height="15" fill="rgb(222,124,15)" fg:x="24837" fg:w="17"/><text x="22.6665%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="22.4318%" y="613" width="0.0126%" height="15" fill="rgb(231,179,28)" fg:x="24854" fg:w="14"/><text x="22.6818%" y="623.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (14 samples, 0.01%)</title><rect x="22.4318%" y="597" width="0.0126%" height="15" fill="rgb(226,93,45)" fg:x="24854" fg:w="14"/><text x="22.6818%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (89 samples, 0.08%)</title><rect x="22.3804%" y="677" width="0.0803%" height="15" fill="rgb(215,8,51)" fg:x="24797" fg:w="89"/><text x="22.6304%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (89 samples, 0.08%)</title><rect x="22.3804%" y="661" width="0.0803%" height="15" fill="rgb(223,106,5)" fg:x="24797" fg:w="89"/><text x="22.6304%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (32 samples, 0.03%)</title><rect x="22.4318%" y="645" width="0.0289%" height="15" fill="rgb(250,191,5)" fg:x="24854" fg:w="32"/><text x="22.6818%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (32 samples, 0.03%)</title><rect x="22.4318%" y="629" width="0.0289%" height="15" fill="rgb(242,132,44)" fg:x="24854" fg:w="32"/><text x="22.6818%" y="639.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (18 samples, 0.02%)</title><rect x="22.4444%" y="613" width="0.0162%" height="15" fill="rgb(251,152,29)" fg:x="24868" fg:w="18"/><text x="22.6944%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (19 samples, 0.02%)</title><rect x="22.5022%" y="565" width="0.0171%" height="15" fill="rgb(218,179,5)" fg:x="24932" fg:w="19"/><text x="22.7522%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="22.5058%" y="549" width="0.0135%" height="15" fill="rgb(227,67,19)" fg:x="24936" fg:w="15"/><text x="22.7558%" y="559.50"></text></g><g><title>alloc::alloc::box_free (15 samples, 0.01%)</title><rect x="22.5058%" y="533" width="0.0135%" height="15" fill="rgb(233,119,31)" fg:x="24936" fg:w="15"/><text x="22.7558%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="22.5058%" y="517" width="0.0135%" height="15" fill="rgb(241,120,22)" fg:x="24936" fg:w="15"/><text x="22.7558%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="22.5058%" y="501" width="0.0135%" height="15" fill="rgb(224,102,30)" fg:x="24936" fg:w="15"/><text x="22.7558%" y="511.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="22.5058%" y="485" width="0.0135%" height="15" fill="rgb(210,164,37)" fg:x="24936" fg:w="15"/><text x="22.7558%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="22.5058%" y="469" width="0.0135%" height="15" fill="rgb(226,191,16)" fg:x="24936" fg:w="15"/><text x="22.7558%" y="479.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="22.5203%" y="549" width="0.0117%" height="15" fill="rgb(214,40,45)" fg:x="24952" fg:w="13"/><text x="22.7703%" y="559.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (41 samples, 0.04%)</title><rect x="22.5880%" y="421" width="0.0370%" height="15" fill="rgb(244,29,26)" fg:x="25027" fg:w="41"/><text x="22.8380%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (40 samples, 0.04%)</title><rect x="22.5889%" y="405" width="0.0361%" height="15" fill="rgb(216,16,5)" fg:x="25028" fg:w="40"/><text x="22.8389%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (92 samples, 0.08%)</title><rect x="22.5564%" y="469" width="0.0830%" height="15" fill="rgb(249,76,35)" fg:x="24992" fg:w="92"/><text x="22.8064%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (92 samples, 0.08%)</title><rect x="22.5564%" y="453" width="0.0830%" height="15" fill="rgb(207,11,44)" fg:x="24992" fg:w="92"/><text x="22.8064%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (91 samples, 0.08%)</title><rect x="22.5573%" y="437" width="0.0821%" height="15" fill="rgb(228,190,49)" fg:x="24993" fg:w="91"/><text x="22.8073%" y="447.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (16 samples, 0.01%)</title><rect x="22.6250%" y="421" width="0.0144%" height="15" fill="rgb(214,173,12)" fg:x="25068" fg:w="16"/><text x="22.8750%" y="431.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (16 samples, 0.01%)</title><rect x="22.6250%" y="405" width="0.0144%" height="15" fill="rgb(218,26,35)" fg:x="25068" fg:w="16"/><text x="22.8750%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (139 samples, 0.13%)</title><rect x="22.5446%" y="501" width="0.1255%" height="15" fill="rgb(220,200,19)" fg:x="24979" fg:w="139"/><text x="22.7946%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (139 samples, 0.13%)</title><rect x="22.5446%" y="485" width="0.1255%" height="15" fill="rgb(239,95,49)" fg:x="24979" fg:w="139"/><text x="22.7946%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (34 samples, 0.03%)</title><rect x="22.6394%" y="469" width="0.0307%" height="15" fill="rgb(235,85,53)" fg:x="25084" fg:w="34"/><text x="22.8894%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (146 samples, 0.13%)</title><rect x="22.5446%" y="533" width="0.1318%" height="15" fill="rgb(233,133,31)" fg:x="24979" fg:w="146"/><text x="22.7946%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (146 samples, 0.13%)</title><rect x="22.5446%" y="517" width="0.1318%" height="15" fill="rgb(218,25,20)" fg:x="24979" fg:w="146"/><text x="22.7946%" y="527.50"></text></g><g><title>rust_dealloc (176 samples, 0.16%)</title><rect x="22.5194%" y="565" width="0.1588%" height="15" fill="rgb(252,210,38)" fg:x="24951" fg:w="176"/><text x="22.7694%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (161 samples, 0.15%)</title><rect x="22.5329%" y="549" width="0.1453%" height="15" fill="rgb(242,134,21)" fg:x="24966" fg:w="161"/><text x="22.7829%" y="559.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,743 samples, 1.57%)</title><rect x="21.1087%" y="757" width="1.5731%" height="15" fill="rgb(213,28,48)" fg:x="23388" fg:w="1743"/><text x="21.3587%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,698 samples, 1.53%)</title><rect x="21.1493%" y="741" width="1.5325%" height="15" fill="rgb(250,196,2)" fg:x="23433" fg:w="1698"/><text x="21.3993%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (982 samples, 0.89%)</title><rect x="21.7955%" y="725" width="0.8863%" height="15" fill="rgb(227,5,17)" fg:x="24149" fg:w="982"/><text x="22.0455%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (595 samples, 0.54%)</title><rect x="22.1448%" y="709" width="0.5370%" height="15" fill="rgb(221,226,24)" fg:x="24536" fg:w="595"/><text x="22.3948%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (443 samples, 0.40%)</title><rect x="22.2820%" y="693" width="0.3998%" height="15" fill="rgb(211,5,48)" fg:x="24688" fg:w="443"/><text x="22.5320%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (234 samples, 0.21%)</title><rect x="22.4706%" y="677" width="0.2112%" height="15" fill="rgb(219,150,6)" fg:x="24897" fg:w="234"/><text x="22.7206%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (234 samples, 0.21%)</title><rect x="22.4706%" y="661" width="0.2112%" height="15" fill="rgb(251,46,16)" fg:x="24897" fg:w="234"/><text x="22.7206%" y="671.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (234 samples, 0.21%)</title><rect x="22.4706%" y="645" width="0.2112%" height="15" fill="rgb(220,204,40)" fg:x="24897" fg:w="234"/><text x="22.7206%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (219 samples, 0.20%)</title><rect x="22.4842%" y="629" width="0.1977%" height="15" fill="rgb(211,85,2)" fg:x="24912" fg:w="219"/><text x="22.7342%" y="639.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (207 samples, 0.19%)</title><rect x="22.4950%" y="613" width="0.1868%" height="15" fill="rgb(229,17,7)" fg:x="24924" fg:w="207"/><text x="22.7450%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (207 samples, 0.19%)</title><rect x="22.4950%" y="597" width="0.1868%" height="15" fill="rgb(239,72,28)" fg:x="24924" fg:w="207"/><text x="22.7450%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (207 samples, 0.19%)</title><rect x="22.4950%" y="581" width="0.1868%" height="15" fill="rgb(230,47,54)" fg:x="24924" fg:w="207"/><text x="22.7450%" y="591.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (1,850 samples, 1.67%)</title><rect x="21.0238%" y="773" width="1.6697%" height="15" fill="rgb(214,50,8)" fg:x="23294" fg:w="1850"/><text x="21.2738%" y="783.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (13 samples, 0.01%)</title><rect x="22.6818%" y="757" width="0.0117%" height="15" fill="rgb(216,198,43)" fg:x="25131" fg:w="13"/><text x="22.9318%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,677 samples, 1.51%)</title><rect x="22.6936%" y="773" width="1.5136%" height="15" fill="rgb(234,20,35)" fg:x="25144" fg:w="1677"/><text x="22.9436%" y="783.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (47 samples, 0.04%)</title><rect x="24.3488%" y="485" width="0.0424%" height="15" fill="rgb(254,45,19)" fg:x="26978" fg:w="47"/><text x="24.5988%" y="495.50"></text></g><g><title> (47 samples, 0.04%)</title><rect x="24.3488%" y="469" width="0.0424%" height="15" fill="rgb(219,14,44)" fg:x="26978" fg:w="47"/><text x="24.5988%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (169 samples, 0.15%)</title><rect x="24.2531%" y="517" width="0.1525%" height="15" fill="rgb(217,220,26)" fg:x="26872" fg:w="169"/><text x="24.5031%" y="527.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (157 samples, 0.14%)</title><rect x="24.2640%" y="501" width="0.1417%" height="15" fill="rgb(213,158,28)" fg:x="26884" fg:w="157"/><text x="24.5140%" y="511.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (13 samples, 0.01%)</title><rect x="24.3939%" y="485" width="0.0117%" height="15" fill="rgb(252,51,52)" fg:x="27028" fg:w="13"/><text x="24.6439%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (240 samples, 0.22%)</title><rect x="24.2423%" y="549" width="0.2166%" height="15" fill="rgb(246,89,16)" fg:x="26860" fg:w="240"/><text x="24.4923%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (240 samples, 0.22%)</title><rect x="24.2423%" y="533" width="0.2166%" height="15" fill="rgb(216,158,49)" fg:x="26860" fg:w="240"/><text x="24.4923%" y="543.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (56 samples, 0.05%)</title><rect x="24.4084%" y="517" width="0.0505%" height="15" fill="rgb(236,107,19)" fg:x="27044" fg:w="56"/><text x="24.6584%" y="527.50"></text></g><g><title>rust_dealloc (273 samples, 0.25%)</title><rect x="24.2179%" y="613" width="0.2464%" height="15" fill="rgb(228,185,30)" fg:x="26833" fg:w="273"/><text x="24.4679%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (265 samples, 0.24%)</title><rect x="24.2252%" y="597" width="0.2392%" height="15" fill="rgb(246,134,8)" fg:x="26841" fg:w="265"/><text x="24.4752%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (246 samples, 0.22%)</title><rect x="24.2423%" y="581" width="0.2220%" height="15" fill="rgb(214,143,50)" fg:x="26860" fg:w="246"/><text x="24.4923%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (246 samples, 0.22%)</title><rect x="24.2423%" y="565" width="0.2220%" height="15" fill="rgb(228,75,8)" fg:x="26860" fg:w="246"/><text x="24.4923%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (286 samples, 0.26%)</title><rect x="24.2071%" y="773" width="0.2581%" height="15" fill="rgb(207,175,4)" fg:x="26821" fg:w="286"/><text x="24.4571%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (286 samples, 0.26%)</title><rect x="24.2071%" y="757" width="0.2581%" height="15" fill="rgb(205,108,24)" fg:x="26821" fg:w="286"/><text x="24.4571%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (275 samples, 0.25%)</title><rect x="24.2170%" y="741" width="0.2482%" height="15" fill="rgb(244,120,49)" fg:x="26832" fg:w="275"/><text x="24.4670%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (275 samples, 0.25%)</title><rect x="24.2170%" y="725" width="0.2482%" height="15" fill="rgb(223,47,38)" fg:x="26832" fg:w="275"/><text x="24.4670%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (275 samples, 0.25%)</title><rect x="24.2170%" y="709" width="0.2482%" height="15" fill="rgb(229,179,11)" fg:x="26832" fg:w="275"/><text x="24.4670%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (275 samples, 0.25%)</title><rect x="24.2170%" y="693" width="0.2482%" height="15" fill="rgb(231,122,1)" fg:x="26832" fg:w="275"/><text x="24.4670%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (275 samples, 0.25%)</title><rect x="24.2170%" y="677" width="0.2482%" height="15" fill="rgb(245,119,9)" fg:x="26832" fg:w="275"/><text x="24.4670%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (275 samples, 0.25%)</title><rect x="24.2170%" y="661" width="0.2482%" height="15" fill="rgb(241,163,25)" fg:x="26832" fg:w="275"/><text x="24.4670%" y="671.50"></text></g><g><title>__rg_dealloc (275 samples, 0.25%)</title><rect x="24.2170%" y="645" width="0.2482%" height="15" fill="rgb(217,214,3)" fg:x="26832" fg:w="275"/><text x="24.4670%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (275 samples, 0.25%)</title><rect x="24.2170%" y="629" width="0.2482%" height="15" fill="rgb(240,86,28)" fg:x="26832" fg:w="275"/><text x="24.4670%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="24.4652%" y="757" width="0.0162%" height="15" fill="rgb(215,47,9)" fg:x="27107" fg:w="18"/><text x="24.7152%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (33 samples, 0.03%)</title><rect x="24.4652%" y="773" width="0.0298%" height="15" fill="rgb(252,25,45)" fg:x="27107" fg:w="33"/><text x="24.7152%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (15 samples, 0.01%)</title><rect x="24.4815%" y="757" width="0.0135%" height="15" fill="rgb(251,164,9)" fg:x="27125" fg:w="15"/><text x="24.7315%" y="767.50"></text></g><g><title>core::time::Duration::as_nanos (28 samples, 0.03%)</title><rect x="24.5582%" y="757" width="0.0253%" height="15" fill="rgb(233,194,0)" fg:x="27210" fg:w="28"/><text x="24.8082%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (136 samples, 0.12%)</title><rect x="24.6954%" y="709" width="0.1227%" height="15" fill="rgb(249,111,24)" fg:x="27362" fg:w="136"/><text x="24.9454%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::ge (136 samples, 0.12%)</title><rect x="24.6954%" y="693" width="0.1227%" height="15" fill="rgb(250,223,3)" fg:x="27362" fg:w="136"/><text x="24.9454%" y="703.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (132 samples, 0.12%)</title><rect x="24.6990%" y="677" width="0.1191%" height="15" fill="rgb(236,178,37)" fg:x="27366" fg:w="132"/><text x="24.9490%" y="687.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (132 samples, 0.12%)</title><rect x="24.6990%" y="661" width="0.1191%" height="15" fill="rgb(241,158,50)" fg:x="27366" fg:w="132"/><text x="24.9490%" y="671.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (132 samples, 0.12%)</title><rect x="24.6990%" y="645" width="0.1191%" height="15" fill="rgb(213,121,41)" fg:x="27366" fg:w="132"/><text x="24.9490%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (71 samples, 0.06%)</title><rect x="24.7541%" y="629" width="0.0641%" height="15" fill="rgb(240,92,3)" fg:x="27427" fg:w="71"/><text x="25.0041%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (292 samples, 0.26%)</title><rect x="24.5835%" y="741" width="0.2635%" height="15" fill="rgb(205,123,3)" fg:x="27238" fg:w="292"/><text x="24.8335%" y="751.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (292 samples, 0.26%)</title><rect x="24.5835%" y="725" width="0.2635%" height="15" fill="rgb(205,97,47)" fg:x="27238" fg:w="292"/><text x="24.8335%" y="735.50"></text></g><g><title>core::time::Duration::new (32 samples, 0.03%)</title><rect x="24.8181%" y="709" width="0.0289%" height="15" fill="rgb(247,152,14)" fg:x="27498" fg:w="32"/><text x="25.0681%" y="719.50"></text></g><g><title>std::time::SystemTime::duration_since (321 samples, 0.29%)</title><rect x="24.5835%" y="757" width="0.2897%" height="15" fill="rgb(248,195,53)" fg:x="27238" fg:w="321"/><text x="24.8335%" y="767.50"></text></g><g><title>tremor_common::time::nanotime (29 samples, 0.03%)</title><rect x="24.8470%" y="741" width="0.0262%" height="15" fill="rgb(226,201,16)" fg:x="27530" fg:w="29"/><text x="25.0970%" y="751.50"></text></g><g><title>tremor_common::time::nanotime (1,968 samples, 1.78%)</title><rect x="24.4950%" y="773" width="1.7762%" height="15" fill="rgb(205,98,0)" fg:x="27140" fg:w="1968"/><text x="24.7450%" y="783.50">t..</text></g><g><title>std::time::SystemTime::now (1,549 samples, 1.40%)</title><rect x="24.8732%" y="757" width="1.3980%" height="15" fill="rgb(214,191,48)" fg:x="27559" fg:w="1549"/><text x="25.1232%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,549 samples, 1.40%)</title><rect x="24.8732%" y="741" width="1.3980%" height="15" fill="rgb(237,112,39)" fg:x="27559" fg:w="1549"/><text x="25.1232%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::now (1,549 samples, 1.40%)</title><rect x="24.8732%" y="725" width="1.3980%" height="15" fill="rgb(247,203,27)" fg:x="27559" fg:w="1549"/><text x="25.1232%" y="735.50"></text></g><g><title>__clock_gettime_2 (1,230 samples, 1.11%)</title><rect x="25.1611%" y="709" width="1.1101%" height="15" fill="rgb(235,124,28)" fg:x="27878" fg:w="1230"/><text x="25.4111%" y="719.50"></text></g><g><title>__vdso_clock_gettime (1,169 samples, 1.06%)</title><rect x="25.2162%" y="693" width="1.0551%" height="15" fill="rgb(208,207,46)" fg:x="27939" fg:w="1169"/><text x="25.4662%" y="703.50"></text></g><g><title>[[vdso]] (776 samples, 0.70%)</title><rect x="25.5709%" y="677" width="0.7004%" height="15" fill="rgb(234,176,4)" fg:x="28332" fg:w="776"/><text x="25.8209%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="26.3326%" y="629" width="0.0208%" height="15" fill="rgb(230,133,28)" fg:x="29176" fg:w="23"/><text x="26.5826%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="26.3326%" y="613" width="0.0208%" height="15" fill="rgb(211,137,40)" fg:x="29176" fg:w="23"/><text x="26.5826%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="26.3326%" y="597" width="0.0208%" height="15" fill="rgb(254,35,13)" fg:x="29176" fg:w="23"/><text x="26.5826%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="26.3326%" y="581" width="0.0208%" height="15" fill="rgb(225,49,51)" fg:x="29176" fg:w="23"/><text x="26.5826%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="26.3326%" y="565" width="0.0208%" height="15" fill="rgb(251,10,15)" fg:x="29176" fg:w="23"/><text x="26.5826%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="26.3326%" y="549" width="0.0208%" height="15" fill="rgb(228,207,15)" fg:x="29176" fg:w="23"/><text x="26.5826%" y="559.50"></text></g><g><title>abi_stable::erased_types::iterator::next (56 samples, 0.05%)</title><rect x="26.3137%" y="661" width="0.0505%" height="15" fill="rgb(241,99,19)" fg:x="29155" fg:w="56"/><text x="26.5637%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (35 samples, 0.03%)</title><rect x="26.3326%" y="645" width="0.0316%" height="15" fill="rgb(207,104,49)" fg:x="29176" fg:w="35"/><text x="26.5826%" y="655.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl abi_stable::traits::IntoReprC for core::option::Option&lt;T&gt;&gt;::into_c (12 samples, 0.01%)</title><rect x="26.3534%" y="629" width="0.0108%" height="15" fill="rgb(234,99,18)" fg:x="29199" fg:w="12"/><text x="26.6034%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="26.3534%" y="613" width="0.0108%" height="15" fill="rgb(213,191,49)" fg:x="29199" fg:w="12"/><text x="26.6034%" y="623.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as core::convert::From&lt;core::option::Option&lt;T&gt;&gt;&gt;::from (12 samples, 0.01%)</title><rect x="26.3534%" y="597" width="0.0108%" height="15" fill="rgb(210,226,19)" fg:x="29199" fg:w="12"/><text x="26.6034%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.08%)</title><rect x="26.3001%" y="725" width="0.0767%" height="15" fill="rgb(229,97,18)" fg:x="29140" fg:w="85"/><text x="26.5501%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.08%)</title><rect x="26.3001%" y="709" width="0.0767%" height="15" fill="rgb(211,167,15)" fg:x="29140" fg:w="85"/><text x="26.5501%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.08%)</title><rect x="26.3001%" y="693" width="0.0767%" height="15" fill="rgb(210,169,34)" fg:x="29140" fg:w="85"/><text x="26.5501%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (85 samples, 0.08%)</title><rect x="26.3001%" y="677" width="0.0767%" height="15" fill="rgb(241,121,31)" fg:x="29140" fg:w="85"/><text x="26.5501%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (14 samples, 0.01%)</title><rect x="26.3642%" y="661" width="0.0126%" height="15" fill="rgb(232,40,11)" fg:x="29211" fg:w="14"/><text x="26.6142%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (14 samples, 0.01%)</title><rect x="26.3642%" y="645" width="0.0126%" height="15" fill="rgb(205,86,26)" fg:x="29211" fg:w="14"/><text x="26.6142%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="26.3642%" y="629" width="0.0126%" height="15" fill="rgb(231,126,28)" fg:x="29211" fg:w="14"/><text x="26.6142%" y="639.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (14 samples, 0.01%)</title><rect x="26.3642%" y="613" width="0.0126%" height="15" fill="rgb(219,221,18)" fg:x="29211" fg:w="14"/><text x="26.6142%" y="623.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (13 samples, 0.01%)</title><rect x="26.3913%" y="661" width="0.0117%" height="15" fill="rgb(211,40,0)" fg:x="29241" fg:w="13"/><text x="26.6413%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (13 samples, 0.01%)</title><rect x="26.3913%" y="645" width="0.0117%" height="15" fill="rgb(239,85,43)" fg:x="29241" fg:w="13"/><text x="26.6413%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (42 samples, 0.04%)</title><rect x="26.3768%" y="725" width="0.0379%" height="15" fill="rgb(231,55,21)" fg:x="29225" fg:w="42"/><text x="26.6268%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (42 samples, 0.04%)</title><rect x="26.3768%" y="709" width="0.0379%" height="15" fill="rgb(225,184,43)" fg:x="29225" fg:w="42"/><text x="26.6268%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (42 samples, 0.04%)</title><rect x="26.3768%" y="693" width="0.0379%" height="15" fill="rgb(251,158,41)" fg:x="29225" fg:w="42"/><text x="26.6268%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (42 samples, 0.04%)</title><rect x="26.3768%" y="677" width="0.0379%" height="15" fill="rgb(234,159,37)" fg:x="29225" fg:w="42"/><text x="26.6268%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (13 samples, 0.01%)</title><rect x="26.4030%" y="661" width="0.0117%" height="15" fill="rgb(216,204,22)" fg:x="29254" fg:w="13"/><text x="26.6530%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (13 samples, 0.01%)</title><rect x="26.4030%" y="645" width="0.0117%" height="15" fill="rgb(214,17,3)" fg:x="29254" fg:w="13"/><text x="26.6530%" y="655.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;abi_stable::std_types::tuple::Tuple2&lt;K,V&gt;&gt;&gt;::extend (191 samples, 0.17%)</title><rect x="26.2712%" y="757" width="0.1724%" height="15" fill="rgb(212,111,17)" fg:x="29108" fg:w="191"/><text x="26.5212%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (180 samples, 0.16%)</title><rect x="26.2812%" y="741" width="0.1625%" height="15" fill="rgb(221,157,24)" fg:x="29119" fg:w="180"/><text x="26.5312%" y="751.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (32 samples, 0.03%)</title><rect x="26.4147%" y="725" width="0.0289%" height="15" fill="rgb(252,16,13)" fg:x="29267" fg:w="32"/><text x="26.6647%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (19 samples, 0.02%)</title><rect x="26.4265%" y="709" width="0.0171%" height="15" fill="rgb(221,62,2)" fg:x="29280" fg:w="19"/><text x="26.6765%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (19 samples, 0.02%)</title><rect x="26.4265%" y="693" width="0.0171%" height="15" fill="rgb(247,87,22)" fg:x="29280" fg:w="19"/><text x="26.6765%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (18 samples, 0.02%)</title><rect x="26.4274%" y="677" width="0.0162%" height="15" fill="rgb(215,73,9)" fg:x="29281" fg:w="18"/><text x="26.6774%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (18 samples, 0.02%)</title><rect x="26.4274%" y="661" width="0.0162%" height="15" fill="rgb(207,175,33)" fg:x="29281" fg:w="18"/><text x="26.6774%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (18 samples, 0.02%)</title><rect x="26.4274%" y="645" width="0.0162%" height="15" fill="rgb(243,129,54)" fg:x="29281" fg:w="18"/><text x="26.6774%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (18 samples, 0.02%)</title><rect x="26.4274%" y="629" width="0.0162%" height="15" fill="rgb(227,119,45)" fg:x="29281" fg:w="18"/><text x="26.6774%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="26.4274%" y="613" width="0.0162%" height="15" fill="rgb(205,109,36)" fg:x="29281" fg:w="18"/><text x="26.6774%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (27 samples, 0.02%)</title><rect x="26.9815%" y="629" width="0.0244%" height="15" fill="rgb(205,6,39)" fg:x="29895" fg:w="27"/><text x="27.2315%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (51 samples, 0.05%)</title><rect x="27.0077%" y="597" width="0.0460%" height="15" fill="rgb(221,32,16)" fg:x="29924" fg:w="51"/><text x="27.2577%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (51 samples, 0.05%)</title><rect x="27.0077%" y="581" width="0.0460%" height="15" fill="rgb(228,144,50)" fg:x="29924" fg:w="51"/><text x="27.2577%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (88 samples, 0.08%)</title><rect x="27.0077%" y="613" width="0.0794%" height="15" fill="rgb(229,201,53)" fg:x="29924" fg:w="88"/><text x="27.2577%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (37 samples, 0.03%)</title><rect x="27.0537%" y="597" width="0.0334%" height="15" fill="rgb(249,153,27)" fg:x="29975" fg:w="37"/><text x="27.3037%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (27 samples, 0.02%)</title><rect x="27.0628%" y="581" width="0.0244%" height="15" fill="rgb(227,106,25)" fg:x="29985" fg:w="27"/><text x="27.3128%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (27 samples, 0.02%)</title><rect x="27.0628%" y="565" width="0.0244%" height="15" fill="rgb(230,65,29)" fg:x="29985" fg:w="27"/><text x="27.3128%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (693 samples, 0.63%)</title><rect x="26.4734%" y="677" width="0.6255%" height="15" fill="rgb(221,57,46)" fg:x="29332" fg:w="693"/><text x="26.7234%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (637 samples, 0.57%)</title><rect x="26.5239%" y="661" width="0.5749%" height="15" fill="rgb(229,161,17)" fg:x="29388" fg:w="637"/><text x="26.7739%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (147 samples, 0.13%)</title><rect x="26.9662%" y="645" width="0.1327%" height="15" fill="rgb(222,213,11)" fg:x="29878" fg:w="147"/><text x="27.2162%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (103 samples, 0.09%)</title><rect x="27.0059%" y="629" width="0.0930%" height="15" fill="rgb(235,35,13)" fg:x="29922" fg:w="103"/><text x="27.2559%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (13 samples, 0.01%)</title><rect x="27.0871%" y="613" width="0.0117%" height="15" fill="rgb(233,158,34)" fg:x="30012" fg:w="13"/><text x="27.3371%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (61 samples, 0.06%)</title><rect x="27.1268%" y="517" width="0.0551%" height="15" fill="rgb(215,151,48)" fg:x="30056" fg:w="61"/><text x="27.3768%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (61 samples, 0.06%)</title><rect x="27.1268%" y="501" width="0.0551%" height="15" fill="rgb(229,84,14)" fg:x="30056" fg:w="61"/><text x="27.3768%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (54 samples, 0.05%)</title><rect x="27.1332%" y="485" width="0.0487%" height="15" fill="rgb(229,68,14)" fg:x="30063" fg:w="54"/><text x="27.3832%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (42 samples, 0.04%)</title><rect x="27.1440%" y="469" width="0.0379%" height="15" fill="rgb(243,106,26)" fg:x="30075" fg:w="42"/><text x="27.3940%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (42 samples, 0.04%)</title><rect x="27.1440%" y="453" width="0.0379%" height="15" fill="rgb(206,45,38)" fg:x="30075" fg:w="42"/><text x="27.3940%" y="463.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (104 samples, 0.09%)</title><rect x="27.0989%" y="677" width="0.0939%" height="15" fill="rgb(226,6,15)" fg:x="30025" fg:w="104"/><text x="27.3489%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (104 samples, 0.09%)</title><rect x="27.0989%" y="661" width="0.0939%" height="15" fill="rgb(232,22,54)" fg:x="30025" fg:w="104"/><text x="27.3489%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (104 samples, 0.09%)</title><rect x="27.0989%" y="645" width="0.0939%" height="15" fill="rgb(229,222,32)" fg:x="30025" fg:w="104"/><text x="27.3489%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (96 samples, 0.09%)</title><rect x="27.1061%" y="629" width="0.0866%" height="15" fill="rgb(228,62,29)" fg:x="30033" fg:w="96"/><text x="27.3561%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (89 samples, 0.08%)</title><rect x="27.1124%" y="613" width="0.0803%" height="15" fill="rgb(251,103,34)" fg:x="30040" fg:w="89"/><text x="27.3624%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (89 samples, 0.08%)</title><rect x="27.1124%" y="597" width="0.0803%" height="15" fill="rgb(233,12,30)" fg:x="30040" fg:w="89"/><text x="27.3624%" y="607.50"></text></g><g><title>alloc::alloc::alloc (89 samples, 0.08%)</title><rect x="27.1124%" y="581" width="0.0803%" height="15" fill="rgb(238,52,0)" fg:x="30040" fg:w="89"/><text x="27.3624%" y="591.50"></text></g><g><title>__rg_alloc (89 samples, 0.08%)</title><rect x="27.1124%" y="565" width="0.0803%" height="15" fill="rgb(223,98,5)" fg:x="30040" fg:w="89"/><text x="27.3624%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (89 samples, 0.08%)</title><rect x="27.1124%" y="549" width="0.0803%" height="15" fill="rgb(228,75,37)" fg:x="30040" fg:w="89"/><text x="27.3624%" y="559.50"></text></g><g><title>rust_alloc (79 samples, 0.07%)</title><rect x="27.1214%" y="533" width="0.0713%" height="15" fill="rgb(205,115,49)" fg:x="30050" fg:w="79"/><text x="27.3714%" y="543.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="27.1819%" y="517" width="0.0108%" height="15" fill="rgb(250,154,43)" fg:x="30117" fg:w="12"/><text x="27.4319%" y="527.50"></text></g><g><title>abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt;::new (16 samples, 0.01%)</title><rect x="27.1927%" y="677" width="0.0144%" height="15" fill="rgb(226,43,29)" fg:x="30129" fg:w="16"/><text x="27.4427%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (28 samples, 0.03%)</title><rect x="27.2261%" y="613" width="0.0253%" height="15" fill="rgb(249,228,39)" fg:x="30166" fg:w="28"/><text x="27.4761%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="27.2992%" y="469" width="0.0190%" height="15" fill="rgb(216,79,43)" fg:x="30247" fg:w="21"/><text x="27.5492%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="27.2992%" y="453" width="0.0190%" height="15" fill="rgb(228,95,12)" fg:x="30247" fg:w="21"/><text x="27.5492%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (57 samples, 0.05%)</title><rect x="27.2803%" y="517" width="0.0514%" height="15" fill="rgb(249,221,15)" fg:x="30226" fg:w="57"/><text x="27.5303%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (57 samples, 0.05%)</title><rect x="27.2803%" y="501" width="0.0514%" height="15" fill="rgb(233,34,13)" fg:x="30226" fg:w="57"/><text x="27.5303%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (55 samples, 0.05%)</title><rect x="27.2821%" y="485" width="0.0496%" height="15" fill="rgb(214,103,39)" fg:x="30228" fg:w="55"/><text x="27.5321%" y="495.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="27.3182%" y="469" width="0.0135%" height="15" fill="rgb(251,126,39)" fg:x="30268" fg:w="15"/><text x="27.5682%" y="479.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="27.3182%" y="453" width="0.0135%" height="15" fill="rgb(214,216,36)" fg:x="30268" fg:w="15"/><text x="27.5682%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (84 samples, 0.08%)</title><rect x="27.2676%" y="549" width="0.0758%" height="15" fill="rgb(220,221,8)" fg:x="30212" fg:w="84"/><text x="27.5176%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (84 samples, 0.08%)</title><rect x="27.2676%" y="533" width="0.0758%" height="15" fill="rgb(240,216,3)" fg:x="30212" fg:w="84"/><text x="27.5176%" y="543.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="27.3317%" y="517" width="0.0117%" height="15" fill="rgb(232,218,17)" fg:x="30283" fg:w="13"/><text x="27.5817%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (107 samples, 0.10%)</title><rect x="27.2577%" y="597" width="0.0966%" height="15" fill="rgb(229,163,45)" fg:x="30201" fg:w="107"/><text x="27.5077%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (96 samples, 0.09%)</title><rect x="27.2676%" y="581" width="0.0866%" height="15" fill="rgb(231,110,42)" fg:x="30212" fg:w="96"/><text x="27.5176%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (96 samples, 0.09%)</title><rect x="27.2676%" y="565" width="0.0866%" height="15" fill="rgb(208,170,48)" fg:x="30212" fg:w="96"/><text x="27.5176%" y="575.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="27.3435%" y="549" width="0.0108%" height="15" fill="rgb(239,116,25)" fg:x="30296" fg:w="12"/><text x="27.5935%" y="559.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="27.3435%" y="533" width="0.0108%" height="15" fill="rgb(219,200,50)" fg:x="30296" fg:w="12"/><text x="27.5935%" y="543.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="27.3435%" y="517" width="0.0108%" height="15" fill="rgb(245,200,0)" fg:x="30296" fg:w="12"/><text x="27.5935%" y="527.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="27.3435%" y="501" width="0.0108%" height="15" fill="rgb(245,119,33)" fg:x="30296" fg:w="12"/><text x="27.5935%" y="511.50"></text></g><g><title>rust_dealloc (116 samples, 0.10%)</title><rect x="27.2514%" y="613" width="0.1047%" height="15" fill="rgb(231,125,12)" fg:x="30194" fg:w="116"/><text x="27.5014%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (172 samples, 0.16%)</title><rect x="27.2072%" y="629" width="0.1552%" height="15" fill="rgb(216,96,41)" fg:x="30145" fg:w="172"/><text x="27.4572%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,071 samples, 0.97%)</title><rect x="26.4436%" y="757" width="0.9666%" height="15" fill="rgb(248,43,45)" fg:x="29299" fg:w="1071"/><text x="26.6936%" y="767.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (1,071 samples, 0.97%)</title><rect x="26.4436%" y="741" width="0.9666%" height="15" fill="rgb(217,222,7)" fg:x="29299" fg:w="1071"/><text x="26.6936%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (1,048 samples, 0.95%)</title><rect x="26.4644%" y="725" width="0.9459%" height="15" fill="rgb(233,28,6)" fg:x="29322" fg:w="1048"/><text x="26.7144%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (1,038 samples, 0.94%)</title><rect x="26.4734%" y="709" width="0.9368%" height="15" fill="rgb(231,218,15)" fg:x="29332" fg:w="1038"/><text x="26.7234%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (1,038 samples, 0.94%)</title><rect x="26.4734%" y="693" width="0.9368%" height="15" fill="rgb(226,171,48)" fg:x="29332" fg:w="1038"/><text x="26.7234%" y="703.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (225 samples, 0.20%)</title><rect x="27.2072%" y="677" width="0.2031%" height="15" fill="rgb(235,201,9)" fg:x="30145" fg:w="225"/><text x="27.4572%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (225 samples, 0.20%)</title><rect x="27.2072%" y="661" width="0.2031%" height="15" fill="rgb(217,80,15)" fg:x="30145" fg:w="225"/><text x="27.4572%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (225 samples, 0.20%)</title><rect x="27.2072%" y="645" width="0.2031%" height="15" fill="rgb(219,152,8)" fg:x="30145" fg:w="225"/><text x="27.4572%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (53 samples, 0.05%)</title><rect x="27.3624%" y="629" width="0.0478%" height="15" fill="rgb(243,107,38)" fg:x="30317" fg:w="53"/><text x="27.6124%" y="639.50"></text></g><g><title>core::ptr::read (53 samples, 0.05%)</title><rect x="27.3624%" y="613" width="0.0478%" height="15" fill="rgb(231,17,5)" fg:x="30317" fg:w="53"/><text x="27.6124%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="27.4463%" y="629" width="0.0135%" height="15" fill="rgb(209,25,54)" fg:x="30410" fg:w="15"/><text x="27.6963%" y="639.50"></text></g><g><title>alloc::alloc::box_free (15 samples, 0.01%)</title><rect x="27.4463%" y="613" width="0.0135%" height="15" fill="rgb(219,0,2)" fg:x="30410" fg:w="15"/><text x="27.6963%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="27.4463%" y="597" width="0.0135%" height="15" fill="rgb(246,9,5)" fg:x="30410" fg:w="15"/><text x="27.6963%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="27.4463%" y="581" width="0.0135%" height="15" fill="rgb(226,159,4)" fg:x="30410" fg:w="15"/><text x="27.6963%" y="591.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="27.4463%" y="565" width="0.0135%" height="15" fill="rgb(219,175,34)" fg:x="30410" fg:w="15"/><text x="27.6963%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="27.4463%" y="549" width="0.0135%" height="15" fill="rgb(236,10,46)" fg:x="30410" fg:w="15"/><text x="27.6963%" y="559.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (63 samples, 0.06%)</title><rect x="27.4310%" y="645" width="0.0569%" height="15" fill="rgb(240,211,16)" fg:x="30393" fg:w="63"/><text x="27.6810%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (31 samples, 0.03%)</title><rect x="27.4599%" y="629" width="0.0280%" height="15" fill="rgb(205,3,43)" fg:x="30425" fg:w="31"/><text x="27.7099%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (31 samples, 0.03%)</title><rect x="27.4599%" y="613" width="0.0280%" height="15" fill="rgb(245,7,22)" fg:x="30425" fg:w="31"/><text x="27.7099%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (31 samples, 0.03%)</title><rect x="27.4599%" y="597" width="0.0280%" height="15" fill="rgb(239,132,32)" fg:x="30425" fg:w="31"/><text x="27.7099%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (31 samples, 0.03%)</title><rect x="27.4599%" y="581" width="0.0280%" height="15" fill="rgb(228,202,34)" fg:x="30425" fg:w="31"/><text x="27.7099%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="27.4599%" y="565" width="0.0280%" height="15" fill="rgb(254,200,22)" fg:x="30425" fg:w="31"/><text x="27.7099%" y="575.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="27.5393%" y="501" width="0.0162%" height="15" fill="rgb(219,10,39)" fg:x="30513" fg:w="18"/><text x="27.7893%" y="511.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="27.5420%" y="485" width="0.0135%" height="15" fill="rgb(226,210,39)" fg:x="30516" fg:w="15"/><text x="27.7920%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (62 samples, 0.06%)</title><rect x="27.5149%" y="549" width="0.0560%" height="15" fill="rgb(208,219,16)" fg:x="30486" fg:w="62"/><text x="27.7649%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (62 samples, 0.06%)</title><rect x="27.5149%" y="533" width="0.0560%" height="15" fill="rgb(216,158,51)" fg:x="30486" fg:w="62"/><text x="27.7649%" y="543.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (62 samples, 0.06%)</title><rect x="27.5149%" y="517" width="0.0560%" height="15" fill="rgb(233,14,44)" fg:x="30486" fg:w="62"/><text x="27.7649%" y="527.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (17 samples, 0.02%)</title><rect x="27.5556%" y="501" width="0.0153%" height="15" fill="rgb(237,97,39)" fg:x="30531" fg:w="17"/><text x="27.8056%" y="511.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (17 samples, 0.02%)</title><rect x="27.5556%" y="485" width="0.0153%" height="15" fill="rgb(218,198,43)" fg:x="30531" fg:w="17"/><text x="27.8056%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (84 samples, 0.08%)</title><rect x="27.5005%" y="581" width="0.0758%" height="15" fill="rgb(231,104,20)" fg:x="30470" fg:w="84"/><text x="27.7505%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (84 samples, 0.08%)</title><rect x="27.5005%" y="565" width="0.0758%" height="15" fill="rgb(254,36,13)" fg:x="30470" fg:w="84"/><text x="27.7505%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (91 samples, 0.08%)</title><rect x="27.5005%" y="613" width="0.0821%" height="15" fill="rgb(248,14,50)" fg:x="30470" fg:w="91"/><text x="27.7505%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (91 samples, 0.08%)</title><rect x="27.5005%" y="597" width="0.0821%" height="15" fill="rgb(217,107,29)" fg:x="30470" fg:w="91"/><text x="27.7505%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (103 samples, 0.09%)</title><rect x="27.4942%" y="629" width="0.0930%" height="15" fill="rgb(251,169,33)" fg:x="30463" fg:w="103"/><text x="27.7442%" y="639.50"></text></g><g><title>rust_dealloc (115 samples, 0.10%)</title><rect x="27.4879%" y="645" width="0.1038%" height="15" fill="rgb(217,108,32)" fg:x="30456" fg:w="115"/><text x="27.7379%" y="655.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (202 samples, 0.18%)</title><rect x="27.4102%" y="725" width="0.1823%" height="15" fill="rgb(219,66,42)" fg:x="30370" fg:w="202"/><text x="27.6602%" y="735.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (199 samples, 0.18%)</title><rect x="27.4129%" y="709" width="0.1796%" height="15" fill="rgb(206,180,7)" fg:x="30373" fg:w="199"/><text x="27.6629%" y="719.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (188 samples, 0.17%)</title><rect x="27.4229%" y="693" width="0.1697%" height="15" fill="rgb(208,226,31)" fg:x="30384" fg:w="188"/><text x="27.6729%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (188 samples, 0.17%)</title><rect x="27.4229%" y="677" width="0.1697%" height="15" fill="rgb(218,26,49)" fg:x="30384" fg:w="188"/><text x="27.6729%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (188 samples, 0.17%)</title><rect x="27.4229%" y="661" width="0.1697%" height="15" fill="rgb(233,197,48)" fg:x="30384" fg:w="188"/><text x="27.6729%" y="671.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (1,469 samples, 1.33%)</title><rect x="26.2712%" y="773" width="1.3258%" height="15" fill="rgb(252,181,51)" fg:x="29108" fg:w="1469"/><text x="26.5212%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (207 samples, 0.19%)</title><rect x="27.4102%" y="757" width="0.1868%" height="15" fill="rgb(253,90,19)" fg:x="30370" fg:w="207"/><text x="27.6602%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (207 samples, 0.19%)</title><rect x="27.4102%" y="741" width="0.1868%" height="15" fill="rgb(215,171,30)" fg:x="30370" fg:w="207"/><text x="27.6602%" y="751.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies (42 samples, 0.04%)</title><rect x="27.6043%" y="773" width="0.0379%" height="15" fill="rgb(214,222,9)" fg:x="30585" fg:w="42"/><text x="27.8543%" y="783.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (13 samples, 0.01%)</title><rect x="27.6422%" y="773" width="0.0117%" height="15" fill="rgb(223,3,22)" fg:x="30627" fg:w="13"/><text x="27.8922%" y="783.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (16,431 samples, 14.83%)</title><rect x="12.8251%" y="789" width="14.8297%" height="15" fill="rgb(225,196,46)" fg:x="14210" fg:w="16431"/><text x="13.0751%" y="799.50">tremor_runtime::connect..</text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (938 samples, 0.85%)</title><rect x="27.9229%" y="773" width="0.8466%" height="15" fill="rgb(209,110,37)" fg:x="30938" fg:w="938"/><text x="28.1729%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (713 samples, 0.64%)</title><rect x="28.1260%" y="757" width="0.6435%" height="15" fill="rgb(249,89,12)" fg:x="31163" fg:w="713"/><text x="28.3760%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="28.9987%" y="757" width="0.0208%" height="15" fill="rgb(226,27,33)" fg:x="32130" fg:w="23"/><text x="29.2487%" y="767.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (64 samples, 0.06%)</title><rect x="29.2397%" y="741" width="0.0578%" height="15" fill="rgb(213,82,22)" fg:x="32397" fg:w="64"/><text x="29.4897%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (186 samples, 0.17%)</title><rect x="29.4960%" y="725" width="0.1679%" height="15" fill="rgb(248,140,0)" fg:x="32681" fg:w="186"/><text x="29.7460%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (419 samples, 0.38%)</title><rect x="29.2975%" y="741" width="0.3782%" height="15" fill="rgb(228,106,3)" fg:x="32461" fg:w="419"/><text x="29.5475%" y="751.50"></text></g><g><title>abi_stable::std_types::result::&lt;impl core::convert::From&lt;abi_stable::std_types::result::RResult&lt;T,E&gt;&gt; for core::result::Result&lt;T,E&gt;&gt;::from (13 samples, 0.01%)</title><rect x="29.6639%" y="725" width="0.0117%" height="15" fill="rgb(209,23,37)" fg:x="32867" fg:w="13"/><text x="29.9139%" y="735.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (483 samples, 0.44%)</title><rect x="29.6756%" y="709" width="0.4359%" height="15" fill="rgb(241,93,50)" fg:x="32880" fg:w="483"/><text x="29.9256%" y="719.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (476 samples, 0.43%)</title><rect x="29.6819%" y="693" width="0.4296%" height="15" fill="rgb(253,46,43)" fg:x="32887" fg:w="476"/><text x="29.9319%" y="703.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (476 samples, 0.43%)</title><rect x="29.6819%" y="677" width="0.4296%" height="15" fill="rgb(226,206,43)" fg:x="32887" fg:w="476"/><text x="29.9319%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (270 samples, 0.24%)</title><rect x="30.1711%" y="661" width="0.2437%" height="15" fill="rgb(217,54,7)" fg:x="33429" fg:w="270"/><text x="30.4211%" y="671.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (270 samples, 0.24%)</title><rect x="30.1711%" y="645" width="0.2437%" height="15" fill="rgb(223,5,52)" fg:x="33429" fg:w="270"/><text x="30.4211%" y="655.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (270 samples, 0.24%)</title><rect x="30.1711%" y="629" width="0.2437%" height="15" fill="rgb(206,52,46)" fg:x="33429" fg:w="270"/><text x="30.4211%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (241 samples, 0.22%)</title><rect x="30.1973%" y="613" width="0.2175%" height="15" fill="rgb(253,136,11)" fg:x="33458" fg:w="241"/><text x="30.4473%" y="623.50"></text></g><g><title>async_ffi::FfiContext::with_context (20 samples, 0.02%)</title><rect x="30.6441%" y="565" width="0.0181%" height="15" fill="rgb(208,106,33)" fg:x="33953" fg:w="20"/><text x="30.8941%" y="575.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (32 samples, 0.03%)</title><rect x="30.6395%" y="613" width="0.0289%" height="15" fill="rgb(206,54,4)" fg:x="33948" fg:w="32"/><text x="30.8895%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (32 samples, 0.03%)</title><rect x="30.6395%" y="597" width="0.0289%" height="15" fill="rgb(213,3,15)" fg:x="33948" fg:w="32"/><text x="30.8895%" y="607.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (32 samples, 0.03%)</title><rect x="30.6395%" y="581" width="0.0289%" height="15" fill="rgb(252,211,39)" fg:x="33948" fg:w="32"/><text x="30.8895%" y="591.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (746 samples, 0.67%)</title><rect x="30.1215%" y="693" width="0.6733%" height="15" fill="rgb(223,6,36)" fg:x="33374" fg:w="746"/><text x="30.3715%" y="703.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (710 samples, 0.64%)</title><rect x="30.1540%" y="677" width="0.6408%" height="15" fill="rgb(252,169,45)" fg:x="33410" fg:w="710"/><text x="30.4040%" y="687.50"></text></g><g><title>std::panic::catch_unwind (421 samples, 0.38%)</title><rect x="30.4148%" y="661" width="0.3800%" height="15" fill="rgb(212,48,26)" fg:x="33699" fg:w="421"/><text x="30.6648%" y="671.50"></text></g><g><title>std::panicking::try (421 samples, 0.38%)</title><rect x="30.4148%" y="645" width="0.3800%" height="15" fill="rgb(251,102,48)" fg:x="33699" fg:w="421"/><text x="30.6648%" y="655.50"></text></g><g><title>std::panicking::try::do_call (421 samples, 0.38%)</title><rect x="30.4148%" y="629" width="0.3800%" height="15" fill="rgb(243,208,16)" fg:x="33699" fg:w="421"/><text x="30.6648%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (140 samples, 0.13%)</title><rect x="30.6684%" y="613" width="0.1264%" height="15" fill="rgb(219,96,24)" fg:x="33980" fg:w="140"/><text x="30.9184%" y="623.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (761 samples, 0.69%)</title><rect x="30.1116%" y="709" width="0.6868%" height="15" fill="rgb(219,33,29)" fg:x="33363" fg:w="761"/><text x="30.3616%" y="719.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,503 samples, 1.36%)</title><rect x="29.6756%" y="741" width="1.3565%" height="15" fill="rgb(223,176,5)" fg:x="32880" fg:w="1503"/><text x="29.9256%" y="751.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,503 samples, 1.36%)</title><rect x="29.6756%" y="725" width="1.3565%" height="15" fill="rgb(228,140,14)" fg:x="32880" fg:w="1503"/><text x="29.9256%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (259 samples, 0.23%)</title><rect x="30.7984%" y="709" width="0.2338%" height="15" fill="rgb(217,179,31)" fg:x="34124" fg:w="259"/><text x="31.0484%" y="719.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (106 samples, 0.10%)</title><rect x="31.0321%" y="741" width="0.0957%" height="15" fill="rgb(230,9,30)" fg:x="34383" fg:w="106"/><text x="31.2821%" y="751.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (14 samples, 0.01%)</title><rect x="31.1495%" y="693" width="0.0126%" height="15" fill="rgb(230,136,20)" fg:x="34513" fg:w="14"/><text x="31.3995%" y="703.50"></text></g><g><title>async_ffi::DropBomb::with (14 samples, 0.01%)</title><rect x="31.1495%" y="677" width="0.0126%" height="15" fill="rgb(215,210,22)" fg:x="34513" fg:w="14"/><text x="31.3995%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="31.1802%" y="549" width="0.0117%" height="15" fill="rgb(218,43,5)" fg:x="34547" fg:w="13"/><text x="31.4302%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (17 samples, 0.02%)</title><rect x="31.1775%" y="597" width="0.0153%" height="15" fill="rgb(216,11,5)" fg:x="34544" fg:w="17"/><text x="31.4275%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (17 samples, 0.02%)</title><rect x="31.1775%" y="581" width="0.0153%" height="15" fill="rgb(209,82,29)" fg:x="34544" fg:w="17"/><text x="31.4275%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (17 samples, 0.02%)</title><rect x="31.1775%" y="565" width="0.0153%" height="15" fill="rgb(244,115,12)" fg:x="34544" fg:w="17"/><text x="31.4275%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (26 samples, 0.02%)</title><rect x="31.1702%" y="629" width="0.0235%" height="15" fill="rgb(222,82,18)" fg:x="34536" fg:w="26"/><text x="31.4202%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (26 samples, 0.02%)</title><rect x="31.1702%" y="613" width="0.0235%" height="15" fill="rgb(249,227,8)" fg:x="34536" fg:w="26"/><text x="31.4202%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (37 samples, 0.03%)</title><rect x="31.1702%" y="661" width="0.0334%" height="15" fill="rgb(253,141,45)" fg:x="34536" fg:w="37"/><text x="31.4202%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (37 samples, 0.03%)</title><rect x="31.1702%" y="645" width="0.0334%" height="15" fill="rgb(234,184,4)" fg:x="34536" fg:w="37"/><text x="31.4202%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (46 samples, 0.04%)</title><rect x="31.1702%" y="677" width="0.0415%" height="15" fill="rgb(218,194,23)" fg:x="34536" fg:w="46"/><text x="31.4202%" y="687.50"></text></g><g><title>rust_dealloc (63 samples, 0.06%)</title><rect x="31.1621%" y="693" width="0.0569%" height="15" fill="rgb(235,66,41)" fg:x="34527" fg:w="63"/><text x="31.4121%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (107 samples, 0.10%)</title><rect x="31.1278%" y="741" width="0.0966%" height="15" fill="rgb(245,217,1)" fg:x="34489" fg:w="107"/><text x="31.3778%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (107 samples, 0.10%)</title><rect x="31.1278%" y="725" width="0.0966%" height="15" fill="rgb(229,91,1)" fg:x="34489" fg:w="107"/><text x="31.3778%" y="735.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (107 samples, 0.10%)</title><rect x="31.1278%" y="709" width="0.0966%" height="15" fill="rgb(207,101,30)" fg:x="34489" fg:w="107"/><text x="31.3778%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="31.7307%" y="437" width="0.0135%" height="15" fill="rgb(223,82,49)" fg:x="35157" fg:w="15"/><text x="31.9807%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (90 samples, 0.08%)</title><rect x="31.7307%" y="469" width="0.0812%" height="15" fill="rgb(218,167,17)" fg:x="35157" fg:w="90"/><text x="31.9807%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (90 samples, 0.08%)</title><rect x="31.7307%" y="453" width="0.0812%" height="15" fill="rgb(208,103,14)" fg:x="35157" fg:w="90"/><text x="31.9807%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (75 samples, 0.07%)</title><rect x="31.7443%" y="437" width="0.0677%" height="15" fill="rgb(238,20,8)" fg:x="35172" fg:w="75"/><text x="31.9943%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (66 samples, 0.06%)</title><rect x="31.7524%" y="421" width="0.0596%" height="15" fill="rgb(218,80,54)" fg:x="35181" fg:w="66"/><text x="32.0024%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (66 samples, 0.06%)</title><rect x="31.7524%" y="405" width="0.0596%" height="15" fill="rgb(240,144,17)" fg:x="35181" fg:w="66"/><text x="32.0024%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (66 samples, 0.06%)</title><rect x="31.7524%" y="389" width="0.0596%" height="15" fill="rgb(245,27,50)" fg:x="35181" fg:w="66"/><text x="32.0024%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="31.8183%" y="421" width="0.0162%" height="15" fill="rgb(251,51,7)" fg:x="35254" fg:w="18"/><text x="32.0683%" y="431.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (18 samples, 0.02%)</title><rect x="31.8183%" y="405" width="0.0162%" height="15" fill="rgb(245,217,29)" fg:x="35254" fg:w="18"/><text x="32.0683%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="31.8147%" y="469" width="0.0208%" height="15" fill="rgb(221,176,29)" fg:x="35250" fg:w="23"/><text x="32.0647%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="31.8147%" y="453" width="0.0208%" height="15" fill="rgb(212,180,24)" fg:x="35250" fg:w="23"/><text x="32.0647%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="31.8147%" y="437" width="0.0208%" height="15" fill="rgb(254,24,2)" fg:x="35250" fg:w="23"/><text x="32.0647%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (182 samples, 0.16%)</title><rect x="31.7172%" y="517" width="0.1643%" height="15" fill="rgb(230,100,2)" fg:x="35142" fg:w="182"/><text x="31.9672%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (182 samples, 0.16%)</title><rect x="31.7172%" y="501" width="0.1643%" height="15" fill="rgb(219,142,25)" fg:x="35142" fg:w="182"/><text x="31.9672%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (174 samples, 0.16%)</title><rect x="31.7244%" y="485" width="0.1570%" height="15" fill="rgb(240,73,43)" fg:x="35150" fg:w="174"/><text x="31.9744%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (44 samples, 0.04%)</title><rect x="31.8417%" y="469" width="0.0397%" height="15" fill="rgb(214,114,15)" fg:x="35280" fg:w="44"/><text x="32.0917%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (44 samples, 0.04%)</title><rect x="31.8417%" y="453" width="0.0397%" height="15" fill="rgb(207,130,4)" fg:x="35280" fg:w="44"/><text x="32.0917%" y="463.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (710 samples, 0.64%)</title><rect x="31.2442%" y="725" width="0.6408%" height="15" fill="rgb(221,25,40)" fg:x="34618" fg:w="710"/><text x="31.4942%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (390 samples, 0.35%)</title><rect x="31.5331%" y="709" width="0.3520%" height="15" fill="rgb(241,184,7)" fg:x="34938" fg:w="390"/><text x="31.7831%" y="719.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (390 samples, 0.35%)</title><rect x="31.5331%" y="693" width="0.3520%" height="15" fill="rgb(235,159,4)" fg:x="34938" fg:w="390"/><text x="31.7831%" y="703.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (385 samples, 0.35%)</title><rect x="31.5376%" y="677" width="0.3475%" height="15" fill="rgb(214,87,48)" fg:x="34943" fg:w="385"/><text x="31.7876%" y="687.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (347 samples, 0.31%)</title><rect x="31.5719%" y="661" width="0.3132%" height="15" fill="rgb(246,198,24)" fg:x="34981" fg:w="347"/><text x="31.8219%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (347 samples, 0.31%)</title><rect x="31.5719%" y="645" width="0.3132%" height="15" fill="rgb(209,66,40)" fg:x="34981" fg:w="347"/><text x="31.8219%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (192 samples, 0.17%)</title><rect x="31.7118%" y="629" width="0.1733%" height="15" fill="rgb(233,147,39)" fg:x="35136" fg:w="192"/><text x="31.9618%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (192 samples, 0.17%)</title><rect x="31.7118%" y="613" width="0.1733%" height="15" fill="rgb(231,145,52)" fg:x="35136" fg:w="192"/><text x="31.9618%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (192 samples, 0.17%)</title><rect x="31.7118%" y="597" width="0.1733%" height="15" fill="rgb(206,20,26)" fg:x="35136" fg:w="192"/><text x="31.9618%" y="607.50"></text></g><g><title>alloc::alloc::alloc (192 samples, 0.17%)</title><rect x="31.7118%" y="581" width="0.1733%" height="15" fill="rgb(238,220,4)" fg:x="35136" fg:w="192"/><text x="31.9618%" y="591.50"></text></g><g><title>__rg_alloc (192 samples, 0.17%)</title><rect x="31.7118%" y="565" width="0.1733%" height="15" fill="rgb(252,195,42)" fg:x="35136" fg:w="192"/><text x="31.9618%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (192 samples, 0.17%)</title><rect x="31.7118%" y="549" width="0.1733%" height="15" fill="rgb(209,10,6)" fg:x="35136" fg:w="192"/><text x="31.9618%" y="559.50"></text></g><g><title>rust_alloc (192 samples, 0.17%)</title><rect x="31.7118%" y="533" width="0.1733%" height="15" fill="rgb(229,3,52)" fg:x="35136" fg:w="192"/><text x="31.9618%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (3,216 samples, 2.90%)</title><rect x="29.0195%" y="757" width="2.9026%" height="15" fill="rgb(253,49,37)" fg:x="32153" fg:w="3216"/><text x="29.2695%" y="767.50">tr..</text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_TO&lt;_ErasedPtr&gt;::pull_data (773 samples, 0.70%)</title><rect x="31.2244%" y="741" width="0.6977%" height="15" fill="rgb(240,103,49)" fg:x="34596" fg:w="773"/><text x="31.4744%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::_::&lt;impl tremor_runtime::connectors::source::RawSource_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::pull_data (40 samples, 0.04%)</title><rect x="31.8860%" y="725" width="0.0361%" height="15" fill="rgb(250,182,30)" fg:x="35329" fg:w="40"/><text x="32.1360%" y="735.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::control_plane::{{closure}} (314 samples, 0.28%)</title><rect x="31.9221%" y="757" width="0.2834%" height="15" fill="rgb(248,8,30)" fg:x="35369" fg:w="314"/><text x="32.1721%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::needs_control_plane_msg (231 samples, 0.21%)</title><rect x="31.9970%" y="741" width="0.2085%" height="15" fill="rgb(237,120,30)" fg:x="35452" fg:w="231"/><text x="32.2470%" y="751.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (203 samples, 0.18%)</title><rect x="32.0222%" y="725" width="0.1832%" height="15" fill="rgb(221,146,34)" fg:x="35480" fg:w="203"/><text x="32.2722%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (199 samples, 0.18%)</title><rect x="32.0258%" y="709" width="0.1796%" height="15" fill="rgb(242,55,13)" fg:x="35484" fg:w="199"/><text x="32.2758%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (113 samples, 0.10%)</title><rect x="32.1035%" y="693" width="0.1020%" height="15" fill="rgb(242,112,31)" fg:x="35570" fg:w="113"/><text x="32.3535%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (101 samples, 0.09%)</title><rect x="32.1143%" y="677" width="0.0912%" height="15" fill="rgb(249,192,27)" fg:x="35582" fg:w="101"/><text x="32.3643%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (101 samples, 0.09%)</title><rect x="32.1143%" y="661" width="0.0912%" height="15" fill="rgb(208,204,44)" fg:x="35582" fg:w="101"/><text x="32.3643%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::utypeid::UTypeId as core::cmp::PartialEq&gt;::eq (256 samples, 0.23%)</title><rect x="33.2425%" y="677" width="0.2311%" height="15" fill="rgb(208,93,54)" fg:x="36832" fg:w="256"/><text x="33.4925%" y="687.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (250 samples, 0.23%)</title><rect x="33.2479%" y="661" width="0.2256%" height="15" fill="rgb(242,1,31)" fg:x="36838" fg:w="250"/><text x="33.4979%" y="671.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (250 samples, 0.23%)</title><rect x="33.2479%" y="645" width="0.2256%" height="15" fill="rgb(241,83,25)" fg:x="36838" fg:w="250"/><text x="33.4979%" y="655.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (40 samples, 0.04%)</title><rect x="33.4735%" y="677" width="0.0361%" height="15" fill="rgb(205,169,50)" fg:x="37088" fg:w="40"/><text x="33.7235%" y="687.50"></text></g><g><title>abi_stable::std_types::utypeid::new_utypeid (24 samples, 0.02%)</title><rect x="33.4880%" y="661" width="0.0217%" height="15" fill="rgb(239,186,37)" fg:x="37104" fg:w="24"/><text x="33.7380%" y="671.50"></text></g><g><title>abi_stable::std_types::utypeid::UTypeId::new (16 samples, 0.01%)</title><rect x="33.4952%" y="645" width="0.0144%" height="15" fill="rgb(205,221,10)" fg:x="37112" fg:w="16"/><text x="33.7452%" y="655.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (301 samples, 0.27%)</title><rect x="33.2425%" y="693" width="0.2717%" height="15" fill="rgb(218,196,15)" fg:x="36832" fg:w="301"/><text x="33.4925%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (647 samples, 0.58%)</title><rect x="32.9401%" y="741" width="0.5839%" height="15" fill="rgb(218,196,35)" fg:x="36497" fg:w="647"/><text x="33.1901%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::convert::From&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (366 samples, 0.33%)</title><rect x="33.1937%" y="725" width="0.3303%" height="15" fill="rgb(233,63,24)" fg:x="36778" fg:w="366"/><text x="33.4437%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (351 samples, 0.32%)</title><rect x="33.2073%" y="709" width="0.3168%" height="15" fill="rgb(225,8,4)" fg:x="36793" fg:w="351"/><text x="33.4573%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (52 samples, 0.05%)</title><rect x="33.5331%" y="741" width="0.0469%" height="15" fill="rgb(234,105,35)" fg:x="37154" fg:w="52"/><text x="33.7831%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (697 samples, 0.63%)</title><rect x="33.5827%" y="741" width="0.6291%" height="15" fill="rgb(236,21,32)" fg:x="37209" fg:w="697"/><text x="33.8327%" y="751.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (14 samples, 0.01%)</title><rect x="34.2226%" y="581" width="0.0126%" height="15" fill="rgb(228,109,6)" fg:x="37918" fg:w="14"/><text x="34.4726%" y="591.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (14 samples, 0.01%)</title><rect x="34.2226%" y="565" width="0.0126%" height="15" fill="rgb(229,215,31)" fg:x="37918" fg:w="14"/><text x="34.4726%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (27 samples, 0.02%)</title><rect x="34.2226%" y="645" width="0.0244%" height="15" fill="rgb(221,52,54)" fg:x="37918" fg:w="27"/><text x="34.4726%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new (27 samples, 0.02%)</title><rect x="34.2226%" y="629" width="0.0244%" height="15" fill="rgb(252,129,43)" fg:x="37918" fg:w="27"/><text x="34.4726%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.02%)</title><rect x="34.2226%" y="613" width="0.0244%" height="15" fill="rgb(248,183,27)" fg:x="37918" fg:w="27"/><text x="34.4726%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.02%)</title><rect x="34.2226%" y="597" width="0.0244%" height="15" fill="rgb(250,0,22)" fg:x="37918" fg:w="27"/><text x="34.4726%" y="607.50"></text></g><g><title>aligned_size (22 samples, 0.02%)</title><rect x="34.2813%" y="453" width="0.0199%" height="15" fill="rgb(213,166,10)" fg:x="37983" fg:w="22"/><text x="34.5313%" y="463.50"></text></g><g><title>size_to_sizeclass (16 samples, 0.01%)</title><rect x="34.3030%" y="421" width="0.0144%" height="15" fill="rgb(207,163,36)" fg:x="38007" fg:w="16"/><text x="34.5530%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (23 samples, 0.02%)</title><rect x="34.3237%" y="341" width="0.0208%" height="15" fill="rgb(208,122,22)" fg:x="38030" fg:w="23"/><text x="34.5737%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (23 samples, 0.02%)</title><rect x="34.3237%" y="325" width="0.0208%" height="15" fill="rgb(207,104,49)" fg:x="38030" fg:w="23"/><text x="34.5737%" y="335.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (16 samples, 0.01%)</title><rect x="34.3300%" y="309" width="0.0144%" height="15" fill="rgb(248,211,50)" fg:x="38037" fg:w="16"/><text x="34.5800%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (30 samples, 0.03%)</title><rect x="34.3237%" y="357" width="0.0271%" height="15" fill="rgb(217,13,45)" fg:x="38030" fg:w="30"/><text x="34.5737%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (43 samples, 0.04%)</title><rect x="34.3210%" y="373" width="0.0388%" height="15" fill="rgb(211,216,49)" fg:x="38027" fg:w="43"/><text x="34.5710%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (27 samples, 0.02%)</title><rect x="34.3698%" y="357" width="0.0244%" height="15" fill="rgb(221,58,53)" fg:x="38081" fg:w="27"/><text x="34.6198%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (223 samples, 0.20%)</title><rect x="34.3210%" y="405" width="0.2013%" height="15" fill="rgb(220,112,41)" fg:x="38027" fg:w="223"/><text x="34.5710%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (223 samples, 0.20%)</title><rect x="34.3210%" y="389" width="0.2013%" height="15" fill="rgb(236,38,28)" fg:x="38027" fg:w="223"/><text x="34.5710%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (180 samples, 0.16%)</title><rect x="34.3598%" y="373" width="0.1625%" height="15" fill="rgb(227,195,22)" fg:x="38070" fg:w="180"/><text x="34.6098%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (142 samples, 0.13%)</title><rect x="34.3941%" y="357" width="0.1282%" height="15" fill="rgb(214,55,33)" fg:x="38108" fg:w="142"/><text x="34.6441%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (142 samples, 0.13%)</title><rect x="34.3941%" y="341" width="0.1282%" height="15" fill="rgb(248,80,13)" fg:x="38108" fg:w="142"/><text x="34.6441%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (142 samples, 0.13%)</title><rect x="34.3941%" y="325" width="0.1282%" height="15" fill="rgb(238,52,6)" fg:x="38108" fg:w="142"/><text x="34.6441%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="34.5223%" y="405" width="0.0190%" height="15" fill="rgb(224,198,47)" fg:x="38250" fg:w="21"/><text x="34.7723%" y="415.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (18 samples, 0.02%)</title><rect x="34.5250%" y="389" width="0.0162%" height="15" fill="rgb(233,171,20)" fg:x="38253" fg:w="18"/><text x="34.7750%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::take (14 samples, 0.01%)</title><rect x="34.5286%" y="373" width="0.0126%" height="15" fill="rgb(241,30,25)" fg:x="38257" fg:w="14"/><text x="34.7786%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (14 samples, 0.01%)</title><rect x="34.5286%" y="357" width="0.0126%" height="15" fill="rgb(207,171,38)" fg:x="38257" fg:w="14"/><text x="34.7786%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (450 samples, 0.41%)</title><rect x="34.3021%" y="453" width="0.4061%" height="15" fill="rgb(234,70,1)" fg:x="38006" fg:w="450"/><text x="34.5521%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (449 samples, 0.41%)</title><rect x="34.3030%" y="437" width="0.4052%" height="15" fill="rgb(232,178,18)" fg:x="38007" fg:w="449"/><text x="34.5530%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (433 samples, 0.39%)</title><rect x="34.3174%" y="421" width="0.3908%" height="15" fill="rgb(241,78,40)" fg:x="38023" fg:w="433"/><text x="34.5674%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (171 samples, 0.15%)</title><rect x="34.5539%" y="405" width="0.1543%" height="15" fill="rgb(222,35,25)" fg:x="38285" fg:w="171"/><text x="34.8039%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (171 samples, 0.15%)</title><rect x="34.5539%" y="389" width="0.1543%" height="15" fill="rgb(207,92,16)" fg:x="38285" fg:w="171"/><text x="34.8039%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (514 samples, 0.46%)</title><rect x="34.2470%" y="581" width="0.4639%" height="15" fill="rgb(216,59,51)" fg:x="37945" fg:w="514"/><text x="34.4970%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (493 samples, 0.44%)</title><rect x="34.2660%" y="565" width="0.4450%" height="15" fill="rgb(213,80,28)" fg:x="37966" fg:w="493"/><text x="34.5160%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (481 samples, 0.43%)</title><rect x="34.2768%" y="549" width="0.4341%" height="15" fill="rgb(220,93,7)" fg:x="37978" fg:w="481"/><text x="34.5268%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (481 samples, 0.43%)</title><rect x="34.2768%" y="533" width="0.4341%" height="15" fill="rgb(225,24,44)" fg:x="37978" fg:w="481"/><text x="34.5268%" y="543.50"></text></g><g><title>alloc::alloc::alloc (481 samples, 0.43%)</title><rect x="34.2768%" y="517" width="0.4341%" height="15" fill="rgb(243,74,40)" fg:x="37978" fg:w="481"/><text x="34.5268%" y="527.50"></text></g><g><title>__rg_alloc (481 samples, 0.43%)</title><rect x="34.2768%" y="501" width="0.4341%" height="15" fill="rgb(228,39,7)" fg:x="37978" fg:w="481"/><text x="34.5268%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (481 samples, 0.43%)</title><rect x="34.2768%" y="485" width="0.4341%" height="15" fill="rgb(227,79,8)" fg:x="37978" fg:w="481"/><text x="34.5268%" y="495.50"></text></g><g><title>rust_alloc (476 samples, 0.43%)</title><rect x="34.2813%" y="469" width="0.4296%" height="15" fill="rgb(236,58,11)" fg:x="37983" fg:w="476"/><text x="34.5313%" y="479.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (550 samples, 0.50%)</title><rect x="34.2226%" y="661" width="0.4964%" height="15" fill="rgb(249,63,35)" fg:x="37918" fg:w="550"/><text x="34.4726%" y="671.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (523 samples, 0.47%)</title><rect x="34.2470%" y="645" width="0.4720%" height="15" fill="rgb(252,114,16)" fg:x="37945" fg:w="523"/><text x="34.4970%" y="655.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (523 samples, 0.47%)</title><rect x="34.2470%" y="629" width="0.4720%" height="15" fill="rgb(254,151,24)" fg:x="37945" fg:w="523"/><text x="34.4970%" y="639.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (523 samples, 0.47%)</title><rect x="34.2470%" y="613" width="0.4720%" height="15" fill="rgb(253,54,39)" fg:x="37945" fg:w="523"/><text x="34.4970%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (523 samples, 0.47%)</title><rect x="34.2470%" y="597" width="0.4720%" height="15" fill="rgb(243,25,45)" fg:x="37945" fg:w="523"/><text x="34.4970%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (589 samples, 0.53%)</title><rect x="34.2226%" y="677" width="0.5316%" height="15" fill="rgb(234,134,9)" fg:x="37918" fg:w="589"/><text x="34.4726%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (39 samples, 0.04%)</title><rect x="34.7190%" y="661" width="0.0352%" height="15" fill="rgb(227,166,31)" fg:x="38468" fg:w="39"/><text x="34.9690%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (39 samples, 0.04%)</title><rect x="34.7190%" y="645" width="0.0352%" height="15" fill="rgb(245,143,41)" fg:x="38468" fg:w="39"/><text x="34.9690%" y="655.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (39 samples, 0.04%)</title><rect x="34.7190%" y="629" width="0.0352%" height="15" fill="rgb(238,181,32)" fg:x="38468" fg:w="39"/><text x="34.9690%" y="639.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (32 samples, 0.03%)</title><rect x="34.7254%" y="613" width="0.0289%" height="15" fill="rgb(224,113,18)" fg:x="38475" fg:w="32"/><text x="34.9754%" y="623.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (32 samples, 0.03%)</title><rect x="34.7254%" y="597" width="0.0289%" height="15" fill="rgb(240,229,28)" fg:x="38475" fg:w="32"/><text x="34.9754%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (32 samples, 0.03%)</title><rect x="34.7254%" y="581" width="0.0289%" height="15" fill="rgb(250,185,3)" fg:x="38475" fg:w="32"/><text x="34.9754%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (32 samples, 0.03%)</title><rect x="34.7254%" y="565" width="0.0289%" height="15" fill="rgb(212,59,25)" fg:x="38475" fg:w="32"/><text x="34.9754%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (32 samples, 0.03%)</title><rect x="34.7254%" y="549" width="0.0289%" height="15" fill="rgb(221,87,20)" fg:x="38475" fg:w="32"/><text x="34.9754%" y="559.50"></text></g><g><title>abi_stable::std_types::option::ROption&lt;T&gt;::unwrap_or_else (611 samples, 0.55%)</title><rect x="34.2127%" y="741" width="0.5515%" height="15" fill="rgb(213,74,28)" fg:x="37907" fg:w="611"/><text x="34.4627%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (605 samples, 0.55%)</title><rect x="34.2181%" y="725" width="0.5460%" height="15" fill="rgb(224,132,34)" fg:x="37913" fg:w="605"/><text x="34.4681%" y="735.50"></text></g><g><title>value_trait::Builder::object (600 samples, 0.54%)</title><rect x="34.2226%" y="709" width="0.5415%" height="15" fill="rgb(222,101,24)" fg:x="37918" fg:w="600"/><text x="34.4726%" y="719.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (600 samples, 0.54%)</title><rect x="34.2226%" y="693" width="0.5415%" height="15" fill="rgb(254,142,4)" fg:x="37918" fg:w="600"/><text x="34.4726%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="34.7831%" y="741" width="0.0171%" height="15" fill="rgb(230,229,49)" fg:x="38539" fg:w="19"/><text x="35.0331%" y="751.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (43 samples, 0.04%)</title><rect x="34.8328%" y="677" width="0.0388%" height="15" fill="rgb(238,70,47)" fg:x="38594" fg:w="43"/><text x="35.0828%" y="687.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="34.8842%" y="645" width="0.0126%" height="15" fill="rgb(231,160,17)" fg:x="38651" fg:w="14"/><text x="35.1342%" y="655.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="34.8842%" y="629" width="0.0126%" height="15" fill="rgb(218,68,53)" fg:x="38651" fg:w="14"/><text x="35.1342%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="34.9185%" y="533" width="0.0135%" height="15" fill="rgb(236,111,10)" fg:x="38689" fg:w="15"/><text x="35.1685%" y="543.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="34.9194%" y="517" width="0.0126%" height="15" fill="rgb(224,34,41)" fg:x="38690" fg:w="14"/><text x="35.1694%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (43 samples, 0.04%)</title><rect x="34.9023%" y="581" width="0.0388%" height="15" fill="rgb(241,118,19)" fg:x="38671" fg:w="43"/><text x="35.1523%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (43 samples, 0.04%)</title><rect x="34.9023%" y="565" width="0.0388%" height="15" fill="rgb(238,129,25)" fg:x="38671" fg:w="43"/><text x="35.1523%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (40 samples, 0.04%)</title><rect x="34.9050%" y="549" width="0.0361%" height="15" fill="rgb(238,22,31)" fg:x="38674" fg:w="40"/><text x="35.1550%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (52 samples, 0.05%)</title><rect x="34.8968%" y="613" width="0.0469%" height="15" fill="rgb(222,174,48)" fg:x="38665" fg:w="52"/><text x="35.1468%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (52 samples, 0.05%)</title><rect x="34.8968%" y="597" width="0.0469%" height="15" fill="rgb(206,152,40)" fg:x="38665" fg:w="52"/><text x="35.1468%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (54 samples, 0.05%)</title><rect x="34.8968%" y="645" width="0.0487%" height="15" fill="rgb(218,99,54)" fg:x="38665" fg:w="54"/><text x="35.1468%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (54 samples, 0.05%)</title><rect x="34.8968%" y="629" width="0.0487%" height="15" fill="rgb(220,174,26)" fg:x="38665" fg:w="54"/><text x="35.1468%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (79 samples, 0.07%)</title><rect x="34.8833%" y="661" width="0.0713%" height="15" fill="rgb(245,116,9)" fg:x="38650" fg:w="79"/><text x="35.1333%" y="671.50"></text></g><g><title>rust_dealloc (101 samples, 0.09%)</title><rect x="34.8716%" y="677" width="0.0912%" height="15" fill="rgb(209,72,35)" fg:x="38637" fg:w="101"/><text x="35.1216%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (190 samples, 0.17%)</title><rect x="34.8003%" y="741" width="0.1715%" height="15" fill="rgb(226,126,21)" fg:x="38558" fg:w="190"/><text x="35.0503%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (183 samples, 0.17%)</title><rect x="34.8066%" y="725" width="0.1652%" height="15" fill="rgb(227,192,1)" fg:x="38565" fg:w="183"/><text x="35.0566%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (183 samples, 0.17%)</title><rect x="34.8066%" y="709" width="0.1652%" height="15" fill="rgb(237,180,29)" fg:x="38565" fg:w="183"/><text x="35.0566%" y="719.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (183 samples, 0.17%)</title><rect x="34.8066%" y="693" width="0.1652%" height="15" fill="rgb(230,197,35)" fg:x="38565" fg:w="183"/><text x="35.0566%" y="703.50"></text></g><g><title>core::time::Duration::as_nanos (12 samples, 0.01%)</title><rect x="34.9898%" y="725" width="0.0108%" height="15" fill="rgb(246,193,31)" fg:x="38768" fg:w="12"/><text x="35.2398%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (67 samples, 0.06%)</title><rect x="35.0403%" y="677" width="0.0605%" height="15" fill="rgb(241,36,4)" fg:x="38824" fg:w="67"/><text x="35.2903%" y="687.50"></text></g><g><title>core::cmp::PartialOrd::ge (67 samples, 0.06%)</title><rect x="35.0403%" y="661" width="0.0605%" height="15" fill="rgb(241,130,17)" fg:x="38824" fg:w="67"/><text x="35.2903%" y="671.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (64 samples, 0.06%)</title><rect x="35.0431%" y="645" width="0.0578%" height="15" fill="rgb(206,137,32)" fg:x="38827" fg:w="64"/><text x="35.2931%" y="655.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (64 samples, 0.06%)</title><rect x="35.0431%" y="629" width="0.0578%" height="15" fill="rgb(237,228,51)" fg:x="38827" fg:w="64"/><text x="35.2931%" y="639.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (64 samples, 0.06%)</title><rect x="35.0431%" y="613" width="0.0578%" height="15" fill="rgb(243,6,42)" fg:x="38827" fg:w="64"/><text x="35.2931%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (29 samples, 0.03%)</title><rect x="35.0746%" y="597" width="0.0262%" height="15" fill="rgb(251,74,28)" fg:x="38862" fg:w="29"/><text x="35.3246%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (137 samples, 0.12%)</title><rect x="35.0006%" y="709" width="0.1236%" height="15" fill="rgb(218,20,49)" fg:x="38780" fg:w="137"/><text x="35.2506%" y="719.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (137 samples, 0.12%)</title><rect x="35.0006%" y="693" width="0.1236%" height="15" fill="rgb(238,28,14)" fg:x="38780" fg:w="137"/><text x="35.2506%" y="703.50"></text></g><g><title>core::time::Duration::new (26 samples, 0.02%)</title><rect x="35.1008%" y="677" width="0.0235%" height="15" fill="rgb(229,40,46)" fg:x="38891" fg:w="26"/><text x="35.3508%" y="687.50"></text></g><g><title>std::time::SystemTime::duration_since (145 samples, 0.13%)</title><rect x="35.0006%" y="725" width="0.1309%" height="15" fill="rgb(244,195,20)" fg:x="38780" fg:w="145"/><text x="35.2506%" y="735.50"></text></g><g><title>tremor_common::time::nanotime (742 samples, 0.67%)</title><rect x="34.9718%" y="741" width="0.6697%" height="15" fill="rgb(253,56,35)" fg:x="38748" fg:w="742"/><text x="35.2218%" y="751.50"></text></g><g><title>std::time::SystemTime::now (565 samples, 0.51%)</title><rect x="35.1315%" y="725" width="0.5099%" height="15" fill="rgb(210,149,44)" fg:x="38925" fg:w="565"/><text x="35.3815%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (565 samples, 0.51%)</title><rect x="35.1315%" y="709" width="0.5099%" height="15" fill="rgb(240,135,12)" fg:x="38925" fg:w="565"/><text x="35.3815%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::now (565 samples, 0.51%)</title><rect x="35.1315%" y="693" width="0.5099%" height="15" fill="rgb(251,24,50)" fg:x="38925" fg:w="565"/><text x="35.3815%" y="703.50"></text></g><g><title>__clock_gettime_2 (454 samples, 0.41%)</title><rect x="35.2317%" y="677" width="0.4098%" height="15" fill="rgb(243,200,47)" fg:x="39036" fg:w="454"/><text x="35.4817%" y="687.50"></text></g><g><title>__vdso_clock_gettime (435 samples, 0.39%)</title><rect x="35.2488%" y="661" width="0.3926%" height="15" fill="rgb(224,166,26)" fg:x="39055" fg:w="435"/><text x="35.4988%" y="671.50"></text></g><g><title>[[vdso]] (295 samples, 0.27%)</title><rect x="35.3752%" y="645" width="0.2663%" height="15" fill="rgb(233,0,47)" fg:x="39195" fg:w="295"/><text x="35.6252%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (13 samples, 0.01%)</title><rect x="35.6586%" y="709" width="0.0117%" height="15" fill="rgb(253,80,5)" fg:x="39509" fg:w="13"/><text x="35.9086%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (13 samples, 0.01%)</title><rect x="35.6586%" y="693" width="0.0117%" height="15" fill="rgb(214,133,25)" fg:x="39509" fg:w="13"/><text x="35.9086%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (22 samples, 0.02%)</title><rect x="35.6983%" y="661" width="0.0199%" height="15" fill="rgb(209,27,14)" fg:x="39553" fg:w="22"/><text x="35.9483%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,727 samples, 6.97%)</title><rect x="28.7695%" y="773" width="6.9740%" height="15" fill="rgb(219,102,51)" fg:x="31876" fg:w="7727"/><text x="29.0195%" y="783.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,920 samples, 3.54%)</title><rect x="32.2055%" y="757" width="3.5380%" height="15" fill="rgb(237,18,16)" fg:x="35683" fg:w="3920"/><text x="32.4555%" y="767.50">tre..</text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (113 samples, 0.10%)</title><rect x="35.6414%" y="741" width="0.1020%" height="15" fill="rgb(241,85,17)" fg:x="39490" fg:w="113"/><text x="35.8914%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (94 samples, 0.08%)</title><rect x="35.6586%" y="725" width="0.0848%" height="15" fill="rgb(236,90,42)" fg:x="39509" fg:w="94"/><text x="35.9086%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (80 samples, 0.07%)</title><rect x="35.6712%" y="709" width="0.0722%" height="15" fill="rgb(249,57,21)" fg:x="39523" fg:w="80"/><text x="35.9212%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (80 samples, 0.07%)</title><rect x="35.6712%" y="693" width="0.0722%" height="15" fill="rgb(243,12,36)" fg:x="39523" fg:w="80"/><text x="35.9212%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (80 samples, 0.07%)</title><rect x="35.6712%" y="677" width="0.0722%" height="15" fill="rgb(253,128,47)" fg:x="39523" fg:w="80"/><text x="35.9212%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (28 samples, 0.03%)</title><rect x="35.7182%" y="661" width="0.0253%" height="15" fill="rgb(207,33,20)" fg:x="39575" fg:w="28"/><text x="35.9682%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="35.7515%" y="757" width="0.0199%" height="15" fill="rgb(233,215,35)" fg:x="39612" fg:w="22"/><text x="36.0015%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (26 samples, 0.02%)</title><rect x="35.7515%" y="773" width="0.0235%" height="15" fill="rgb(249,188,52)" fg:x="39612" fg:w="26"/><text x="36.0015%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (9,036 samples, 8.16%)</title><rect x="27.6548%" y="789" width="8.1554%" height="15" fill="rgb(225,12,32)" fg:x="30641" fg:w="9036"/><text x="27.9048%" y="799.50">tremor_runt..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::should_pull_data (39 samples, 0.04%)</title><rect x="35.7750%" y="773" width="0.0352%" height="15" fill="rgb(247,98,14)" fg:x="39638" fg:w="39"/><text x="36.0250%" y="783.50"></text></g><g><title>rust_dealloc (20 samples, 0.02%)</title><rect x="35.9339%" y="741" width="0.0181%" height="15" fill="rgb(247,219,48)" fg:x="39814" fg:w="20"/><text x="36.1839%" y="751.50"></text></g><g><title>rust_dealloc (30 samples, 0.03%)</title><rect x="35.9600%" y="677" width="0.0271%" height="15" fill="rgb(253,60,48)" fg:x="39843" fg:w="30"/><text x="36.2100%" y="687.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (26 samples, 0.02%)</title><rect x="36.0584%" y="645" width="0.0235%" height="15" fill="rgb(245,15,52)" fg:x="39952" fg:w="26"/><text x="36.3084%" y="655.50"></text></g><g><title> (26 samples, 0.02%)</title><rect x="36.0584%" y="629" width="0.0235%" height="15" fill="rgb(220,133,28)" fg:x="39952" fg:w="26"/><text x="36.3084%" y="639.50"></text></g><g><title>snmalloc::Remote::set_info (20 samples, 0.02%)</title><rect x="36.0819%" y="645" width="0.0181%" height="15" fill="rgb(217,180,4)" fg:x="39978" fg:w="20"/><text x="36.3319%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (116 samples, 0.10%)</title><rect x="35.9970%" y="677" width="0.1047%" height="15" fill="rgb(251,24,1)" fg:x="39884" fg:w="116"/><text x="36.2470%" y="687.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (103 samples, 0.09%)</title><rect x="36.0088%" y="661" width="0.0930%" height="15" fill="rgb(212,185,49)" fg:x="39897" fg:w="103"/><text x="36.2588%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (202 samples, 0.18%)</title><rect x="35.9600%" y="741" width="0.1823%" height="15" fill="rgb(215,175,22)" fg:x="39843" fg:w="202"/><text x="36.2100%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (202 samples, 0.18%)</title><rect x="35.9600%" y="725" width="0.1823%" height="15" fill="rgb(250,205,14)" fg:x="39843" fg:w="202"/><text x="36.2100%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (202 samples, 0.18%)</title><rect x="35.9600%" y="709" width="0.1823%" height="15" fill="rgb(225,211,22)" fg:x="39843" fg:w="202"/><text x="36.2100%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (202 samples, 0.18%)</title><rect x="35.9600%" y="693" width="0.1823%" height="15" fill="rgb(251,179,42)" fg:x="39843" fg:w="202"/><text x="36.2100%" y="703.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (39 samples, 0.04%)</title><rect x="36.1071%" y="677" width="0.0352%" height="15" fill="rgb(208,216,51)" fg:x="40006" fg:w="39"/><text x="36.3571%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (245 samples, 0.22%)</title><rect x="35.9330%" y="757" width="0.2211%" height="15" fill="rgb(235,36,11)" fg:x="39813" fg:w="245"/><text x="36.1830%" y="767.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="36.1423%" y="741" width="0.0117%" height="15" fill="rgb(213,189,28)" fg:x="40045" fg:w="13"/><text x="36.3923%" y="751.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="36.1423%" y="725" width="0.0117%" height="15" fill="rgb(227,203,42)" fg:x="40045" fg:w="13"/><text x="36.3923%" y="735.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="36.1423%" y="709" width="0.0117%" height="15" fill="rgb(244,72,36)" fg:x="40045" fg:w="13"/><text x="36.3923%" y="719.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="36.1423%" y="693" width="0.0117%" height="15" fill="rgb(213,53,17)" fg:x="40045" fg:w="13"/><text x="36.3923%" y="703.50"></text></g><g><title>rust_dealloc (271 samples, 0.24%)</title><rect x="35.9266%" y="773" width="0.2446%" height="15" fill="rgb(207,167,3)" fg:x="39806" fg:w="271"/><text x="36.1766%" y="783.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (19 samples, 0.02%)</title><rect x="36.1541%" y="757" width="0.0171%" height="15" fill="rgb(216,98,30)" fg:x="40058" fg:w="19"/><text x="36.4041%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (34 samples, 0.03%)</title><rect x="36.1785%" y="725" width="0.0307%" height="15" fill="rgb(236,123,15)" fg:x="40085" fg:w="34"/><text x="36.4285%" y="735.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (30 samples, 0.03%)</title><rect x="36.1821%" y="709" width="0.0271%" height="15" fill="rgb(248,81,50)" fg:x="40089" fg:w="30"/><text x="36.4321%" y="719.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (30 samples, 0.03%)</title><rect x="36.1821%" y="693" width="0.0271%" height="15" fill="rgb(214,120,4)" fg:x="40089" fg:w="30"/><text x="36.4321%" y="703.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (30 samples, 0.03%)</title><rect x="36.1821%" y="677" width="0.0271%" height="15" fill="rgb(208,179,34)" fg:x="40089" fg:w="30"/><text x="36.4321%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (44 samples, 0.04%)</title><rect x="36.1712%" y="741" width="0.0397%" height="15" fill="rgb(227,140,7)" fg:x="40077" fg:w="44"/><text x="36.4212%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (45 samples, 0.04%)</title><rect x="36.1712%" y="757" width="0.0406%" height="15" fill="rgb(214,22,6)" fg:x="40077" fg:w="45"/><text x="36.4212%" y="767.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (451 samples, 0.41%)</title><rect x="35.8102%" y="789" width="0.4070%" height="15" fill="rgb(207,137,27)" fg:x="39677" fg:w="451"/><text x="36.0602%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (51 samples, 0.05%)</title><rect x="36.1712%" y="773" width="0.0460%" height="15" fill="rgb(210,8,46)" fg:x="40077" fg:w="51"/><text x="36.4212%" y="783.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (27 samples, 0.02%)</title><rect x="37.2732%" y="773" width="0.0244%" height="15" fill="rgb(240,16,54)" fg:x="41298" fg:w="27"/><text x="37.5232%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.03%)</title><rect x="37.2976%" y="773" width="0.0325%" height="15" fill="rgb(211,209,29)" fg:x="41325" fg:w="36"/><text x="37.5476%" y="783.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.01%)</title><rect x="37.3157%" y="757" width="0.0144%" height="15" fill="rgb(226,228,24)" fg:x="41345" fg:w="16"/><text x="37.5657%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="37.4610%" y="757" width="0.0217%" height="15" fill="rgb(222,84,9)" fg:x="41506" fg:w="24"/><text x="37.7110%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (492 samples, 0.44%)</title><rect x="37.7371%" y="741" width="0.4441%" height="15" fill="rgb(234,203,30)" fg:x="41812" fg:w="492"/><text x="37.9871%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (468 samples, 0.42%)</title><rect x="38.1812%" y="741" width="0.4224%" height="15" fill="rgb(238,109,14)" fg:x="42304" fg:w="468"/><text x="38.4312%" y="751.50"></text></g><g><title>core::ptr::write (446 samples, 0.40%)</title><rect x="38.2011%" y="725" width="0.4025%" height="15" fill="rgb(233,206,34)" fg:x="42326" fg:w="446"/><text x="38.4511%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (445 samples, 0.40%)</title><rect x="38.2020%" y="709" width="0.4016%" height="15" fill="rgb(220,167,47)" fg:x="42327" fg:w="445"/><text x="38.4520%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (37 samples, 0.03%)</title><rect x="38.6036%" y="741" width="0.0334%" height="15" fill="rgb(238,105,10)" fg:x="42772" fg:w="37"/><text x="38.8536%" y="751.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (19 samples, 0.02%)</title><rect x="38.6442%" y="709" width="0.0171%" height="15" fill="rgb(213,227,17)" fg:x="42817" fg:w="19"/><text x="38.8942%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (19 samples, 0.02%)</title><rect x="38.6442%" y="693" width="0.0171%" height="15" fill="rgb(217,132,38)" fg:x="42817" fg:w="19"/><text x="38.8942%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (918 samples, 0.83%)</title><rect x="38.6722%" y="645" width="0.8285%" height="15" fill="rgb(242,146,4)" fg:x="42848" fg:w="918"/><text x="38.9222%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (846 samples, 0.76%)</title><rect x="38.7372%" y="629" width="0.7636%" height="15" fill="rgb(212,61,9)" fg:x="42920" fg:w="846"/><text x="38.9872%" y="639.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (958 samples, 0.86%)</title><rect x="38.6442%" y="725" width="0.8646%" height="15" fill="rgb(247,126,22)" fg:x="42817" fg:w="958"/><text x="38.8942%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (927 samples, 0.84%)</title><rect x="38.6722%" y="709" width="0.8367%" height="15" fill="rgb(220,196,2)" fg:x="42848" fg:w="927"/><text x="38.9222%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (927 samples, 0.84%)</title><rect x="38.6722%" y="693" width="0.8367%" height="15" fill="rgb(208,46,4)" fg:x="42848" fg:w="927"/><text x="38.9222%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (927 samples, 0.84%)</title><rect x="38.6722%" y="677" width="0.8367%" height="15" fill="rgb(252,104,46)" fg:x="42848" fg:w="927"/><text x="38.9222%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (927 samples, 0.84%)</title><rect x="38.6722%" y="661" width="0.8367%" height="15" fill="rgb(237,152,48)" fg:x="42848" fg:w="927"/><text x="38.9222%" y="671.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (985 samples, 0.89%)</title><rect x="38.6370%" y="741" width="0.8890%" height="15" fill="rgb(221,59,37)" fg:x="42809" fg:w="985"/><text x="38.8870%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (19 samples, 0.02%)</title><rect x="39.5088%" y="725" width="0.0171%" height="15" fill="rgb(209,202,51)" fg:x="43775" fg:w="19"/><text x="39.7588%" y="735.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="40.1957%" y="709" width="0.0190%" height="15" fill="rgb(228,81,30)" fg:x="44536" fg:w="21"/><text x="40.4457%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (19 samples, 0.02%)</title><rect x="40.2218%" y="709" width="0.0171%" height="15" fill="rgb(227,42,39)" fg:x="44565" fg:w="19"/><text x="40.4718%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (475 samples, 0.43%)</title><rect x="40.2390%" y="709" width="0.4287%" height="15" fill="rgb(221,26,2)" fg:x="44584" fg:w="475"/><text x="40.4890%" y="719.50"></text></g><g><title>core::ptr::write (475 samples, 0.43%)</title><rect x="40.2390%" y="693" width="0.4287%" height="15" fill="rgb(254,61,31)" fg:x="44584" fg:w="475"/><text x="40.4890%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (461 samples, 0.42%)</title><rect x="40.2516%" y="677" width="0.4161%" height="15" fill="rgb(222,173,38)" fg:x="44598" fg:w="461"/><text x="40.5016%" y="687.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,253 samples, 1.13%)</title><rect x="39.5495%" y="725" width="1.1309%" height="15" fill="rgb(218,50,12)" fg:x="43820" fg:w="1253"/><text x="39.7995%" y="735.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (12 samples, 0.01%)</title><rect x="40.6695%" y="709" width="0.0108%" height="15" fill="rgb(223,88,40)" fg:x="45061" fg:w="12"/><text x="40.9195%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,290 samples, 1.16%)</title><rect x="39.5260%" y="741" width="1.1643%" height="15" fill="rgb(237,54,19)" fg:x="43794" fg:w="1290"/><text x="39.7760%" y="751.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,567 samples, 3.22%)</title><rect x="37.4826%" y="757" width="3.2194%" height="15" fill="rgb(251,129,25)" fg:x="41530" fg:w="3567"/><text x="37.7326%" y="767.50">tre..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (13 samples, 0.01%)</title><rect x="40.6903%" y="741" width="0.0117%" height="15" fill="rgb(238,97,19)" fg:x="45084" fg:w="13"/><text x="40.9403%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (35 samples, 0.03%)</title><rect x="40.7020%" y="757" width="0.0316%" height="15" fill="rgb(240,169,18)" fg:x="45097" fg:w="35"/><text x="40.9520%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,809 samples, 3.44%)</title><rect x="37.3310%" y="773" width="3.4378%" height="15" fill="rgb(230,187,49)" fg:x="41362" fg:w="3809"/><text x="37.5810%" y="783.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (39 samples, 0.04%)</title><rect x="40.7336%" y="757" width="0.0352%" height="15" fill="rgb(209,44,26)" fg:x="45132" fg:w="39"/><text x="40.9836%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,660 samples, 1.50%)</title><rect x="40.7688%" y="773" width="1.4982%" height="15" fill="rgb(244,0,6)" fg:x="45171" fg:w="1660"/><text x="41.0188%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="42.2697%" y="757" width="0.0126%" height="15" fill="rgb(248,18,21)" fg:x="46834" fg:w="14"/><text x="42.5197%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (15 samples, 0.01%)</title><rect x="42.2697%" y="773" width="0.0135%" height="15" fill="rgb(245,180,19)" fg:x="46834" fg:w="15"/><text x="42.5197%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="42.2833%" y="773" width="0.0153%" height="15" fill="rgb(252,118,36)" fg:x="46849" fg:w="17"/><text x="42.5333%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (17 samples, 0.02%)</title><rect x="42.2833%" y="757" width="0.0153%" height="15" fill="rgb(210,224,19)" fg:x="46849" fg:w="17"/><text x="42.5333%" y="767.50"></text></g><g><title>tremor_runtime::pipeline::maybe_send (15 samples, 0.01%)</title><rect x="42.3076%" y="773" width="0.0135%" height="15" fill="rgb(218,30,24)" fg:x="46876" fg:w="15"/><text x="42.5576%" y="783.50"></text></g><g><title>async_global_executor::reactor::block_on (32,772 samples, 29.58%)</title><rect x="12.7475%" y="1125" width="29.5782%" height="15" fill="rgb(219,75,50)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="1135.50">async_global_executor::reactor::block_on</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (32,772 samples, 29.58%)</title><rect x="12.7475%" y="1109" width="29.5782%" height="15" fill="rgb(234,72,50)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="1119.50">async_global_executor::reactor::block_on::{{clos..</text></g><g><title>async_io::driver::block_on (32,772 samples, 29.58%)</title><rect x="12.7475%" y="1093" width="29.5782%" height="15" fill="rgb(219,100,48)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="1103.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (32,772 samples, 29.58%)</title><rect x="12.7475%" y="1077" width="29.5782%" height="15" fill="rgb(253,5,41)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="1087.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,772 samples, 29.58%)</title><rect x="12.7475%" y="1061" width="29.5782%" height="15" fill="rgb(247,181,11)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="1071.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as c..</text></g><g><title>async_executor::Executor::run::{{closure}} (32,772 samples, 29.58%)</title><rect x="12.7475%" y="1045" width="29.5782%" height="15" fill="rgb(222,223,25)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="1055.50">async_executor::Executor::run::{{closure}}</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (32,772 samples, 29.58%)</title><rect x="12.7475%" y="1029" width="29.5782%" height="15" fill="rgb(214,198,28)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="1039.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,772 samples, 29.58%)</title><rect x="12.7475%" y="1013" width="29.5782%" height="15" fill="rgb(230,46,43)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="1023.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as c..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (32,772 samples, 29.58%)</title><rect x="12.7475%" y="997" width="29.5782%" height="15" fill="rgb(233,65,53)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="1007.50">async_executor::Executor::run::{{closure}}::{{cl..</text></g><g><title>async_task::runnable::Runnable::run (32,772 samples, 29.58%)</title><rect x="12.7475%" y="981" width="29.5782%" height="15" fill="rgb(221,121,27)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="991.50">async_task::runnable::Runnable::run</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (32,772 samples, 29.58%)</title><rect x="12.7475%" y="965" width="29.5782%" height="15" fill="rgb(247,70,47)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="975.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (32,772 samples, 29.58%)</title><rect x="12.7475%" y="949" width="29.5782%" height="15" fill="rgb(228,85,35)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="959.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,772 samples, 29.58%)</title><rect x="12.7475%" y="933" width="29.5782%" height="15" fill="rgb(209,50,18)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="943.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as c..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (32,772 samples, 29.58%)</title><rect x="12.7475%" y="917" width="29.5782%" height="15" fill="rgb(250,19,35)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="927.50">async_executor::Executor::spawn::{{closure}}</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (32,772 samples, 29.58%)</title><rect x="12.7475%" y="901" width="29.5782%" height="15" fill="rgb(253,107,29)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="911.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; ..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (32,772 samples, 29.58%)</title><rect x="12.7475%" y="885" width="29.5782%" height="15" fill="rgb(252,179,29)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="895.50">async_std::task::task_locals_wrapper::TaskLocals..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32,772 samples, 29.58%)</title><rect x="12.7475%" y="869" width="29.5782%" height="15" fill="rgb(238,194,6)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="879.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (32,772 samples, 29.58%)</title><rect x="12.7475%" y="853" width="29.5782%" height="15" fill="rgb(238,164,29)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="863.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (32,772 samples, 29.58%)</title><rect x="12.7475%" y="837" width="29.5782%" height="15" fill="rgb(224,25,9)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="847.50">async_std::task::task_locals_wrapper::TaskLocals..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (32,772 samples, 29.58%)</title><rect x="12.7475%" y="821" width="29.5782%" height="15" fill="rgb(244,153,23)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="831.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; ..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,772 samples, 29.58%)</title><rect x="12.7475%" y="805" width="29.5782%" height="15" fill="rgb(212,203,14)" fg:x="14124" fg:w="32772"/><text x="12.9975%" y="815.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as c..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,768 samples, 6.11%)</title><rect x="36.2173%" y="789" width="6.1084%" height="15" fill="rgb(220,164,20)" fg:x="40128" fg:w="6768"/><text x="36.4673%" y="799.50">tremor_r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.04%)</title><rect x="42.3663%" y="549" width="0.0406%" height="15" fill="rgb(222,203,48)" fg:x="46941" fg:w="45"/><text x="42.6163%" y="559.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="42.6524%" y="533" width="0.0361%" height="15" fill="rgb(215,159,22)" fg:x="47258" fg:w="40"/><text x="42.9024%" y="543.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (45 samples, 0.04%)</title><rect x="42.6885%" y="533" width="0.0406%" height="15" fill="rgb(216,183,47)" fg:x="47298" fg:w="45"/><text x="42.9385%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="42.7165%" y="517" width="0.0126%" height="15" fill="rgb(229,195,25)" fg:x="47329" fg:w="14"/><text x="42.9665%" y="527.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="42.7165%" y="501" width="0.0126%" height="15" fill="rgb(224,132,51)" fg:x="47329" fg:w="14"/><text x="42.9665%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="42.7165%" y="485" width="0.0126%" height="15" fill="rgb(240,63,7)" fg:x="47329" fg:w="14"/><text x="42.9665%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="42.7165%" y="469" width="0.0126%" height="15" fill="rgb(249,182,41)" fg:x="47329" fg:w="14"/><text x="42.9665%" y="479.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="42.7165%" y="453" width="0.0126%" height="15" fill="rgb(243,47,26)" fg:x="47329" fg:w="14"/><text x="42.9665%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="42.7165%" y="437" width="0.0126%" height="15" fill="rgb(233,48,2)" fg:x="47329" fg:w="14"/><text x="42.9665%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::deref::Deref for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::deref (19 samples, 0.02%)</title><rect x="42.7291%" y="533" width="0.0171%" height="15" fill="rgb(244,165,34)" fg:x="47343" fg:w="19"/><text x="42.9791%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (19 samples, 0.02%)</title><rect x="42.7291%" y="517" width="0.0171%" height="15" fill="rgb(207,89,7)" fg:x="47343" fg:w="19"/><text x="42.9791%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.04%)</title><rect x="42.7607%" y="469" width="0.0406%" height="15" fill="rgb(244,117,36)" fg:x="47378" fg:w="45"/><text x="43.0107%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (63 samples, 0.06%)</title><rect x="42.7598%" y="533" width="0.0569%" height="15" fill="rgb(226,144,34)" fg:x="47377" fg:w="63"/><text x="43.0098%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (63 samples, 0.06%)</title><rect x="42.7598%" y="517" width="0.0569%" height="15" fill="rgb(213,23,19)" fg:x="47377" fg:w="63"/><text x="43.0098%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (63 samples, 0.06%)</title><rect x="42.7598%" y="501" width="0.0569%" height="15" fill="rgb(217,75,12)" fg:x="47377" fg:w="63"/><text x="43.0098%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (63 samples, 0.06%)</title><rect x="42.7598%" y="485" width="0.0569%" height="15" fill="rgb(224,159,17)" fg:x="47377" fg:w="63"/><text x="43.0098%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (17 samples, 0.02%)</title><rect x="42.8013%" y="469" width="0.0153%" height="15" fill="rgb(217,118,1)" fg:x="47423" fg:w="17"/><text x="43.0513%" y="479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (17 samples, 0.02%)</title><rect x="42.8013%" y="453" width="0.0153%" height="15" fill="rgb(232,180,48)" fg:x="47423" fg:w="17"/><text x="43.0513%" y="463.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (36 samples, 0.03%)</title><rect x="42.9349%" y="229" width="0.0325%" height="15" fill="rgb(230,27,33)" fg:x="47571" fg:w="36"/><text x="43.1849%" y="239.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (34 samples, 0.03%)</title><rect x="42.9367%" y="213" width="0.0307%" height="15" fill="rgb(205,31,21)" fg:x="47573" fg:w="34"/><text x="43.1867%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (82 samples, 0.07%)</title><rect x="42.9006%" y="277" width="0.0740%" height="15" fill="rgb(253,59,4)" fg:x="47533" fg:w="82"/><text x="43.1506%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (82 samples, 0.07%)</title><rect x="42.9006%" y="261" width="0.0740%" height="15" fill="rgb(224,201,9)" fg:x="47533" fg:w="82"/><text x="43.1506%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (70 samples, 0.06%)</title><rect x="42.9114%" y="245" width="0.0632%" height="15" fill="rgb(229,206,30)" fg:x="47545" fg:w="70"/><text x="43.1614%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (110 samples, 0.10%)</title><rect x="42.8880%" y="309" width="0.0993%" height="15" fill="rgb(212,67,47)" fg:x="47519" fg:w="110"/><text x="43.1380%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (110 samples, 0.10%)</title><rect x="42.8880%" y="293" width="0.0993%" height="15" fill="rgb(211,96,50)" fg:x="47519" fg:w="110"/><text x="43.1380%" y="303.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="42.9746%" y="277" width="0.0126%" height="15" fill="rgb(252,114,18)" fg:x="47615" fg:w="14"/><text x="43.2246%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (120 samples, 0.11%)</title><rect x="42.8880%" y="341" width="0.1083%" height="15" fill="rgb(223,58,37)" fg:x="47519" fg:w="120"/><text x="43.1380%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (120 samples, 0.11%)</title><rect x="42.8880%" y="325" width="0.1083%" height="15" fill="rgb(237,70,4)" fg:x="47519" fg:w="120"/><text x="43.1380%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (128 samples, 0.12%)</title><rect x="42.8853%" y="357" width="0.1155%" height="15" fill="rgb(244,85,46)" fg:x="47516" fg:w="128"/><text x="43.1353%" y="367.50"></text></g><g><title>rust_dealloc (144 samples, 0.13%)</title><rect x="42.8771%" y="373" width="0.1300%" height="15" fill="rgb(223,39,52)" fg:x="47507" fg:w="144"/><text x="43.1271%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (32 samples, 0.03%)</title><rect x="43.0089%" y="357" width="0.0289%" height="15" fill="rgb(218,200,14)" fg:x="47653" fg:w="32"/><text x="43.2589%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (221 samples, 0.20%)</title><rect x="42.8446%" y="437" width="0.1995%" height="15" fill="rgb(208,171,16)" fg:x="47471" fg:w="221"/><text x="43.0946%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (216 samples, 0.19%)</title><rect x="42.8491%" y="421" width="0.1949%" height="15" fill="rgb(234,200,18)" fg:x="47476" fg:w="216"/><text x="43.0991%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (207 samples, 0.19%)</title><rect x="42.8573%" y="405" width="0.1868%" height="15" fill="rgb(228,45,11)" fg:x="47485" fg:w="207"/><text x="43.1073%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (207 samples, 0.19%)</title><rect x="42.8573%" y="389" width="0.1868%" height="15" fill="rgb(237,182,11)" fg:x="47485" fg:w="207"/><text x="43.1073%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (41 samples, 0.04%)</title><rect x="43.0071%" y="373" width="0.0370%" height="15" fill="rgb(241,175,49)" fg:x="47651" fg:w="41"/><text x="43.2571%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="43.0441%" y="405" width="0.0108%" height="15" fill="rgb(247,38,35)" fg:x="47692" fg:w="12"/><text x="43.2941%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="43.0441%" y="389" width="0.0108%" height="15" fill="rgb(228,39,49)" fg:x="47692" fg:w="12"/><text x="43.2941%" y="399.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="43.0441%" y="373" width="0.0108%" height="15" fill="rgb(226,101,26)" fg:x="47692" fg:w="12"/><text x="43.2941%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="43.0441%" y="357" width="0.0108%" height="15" fill="rgb(206,141,19)" fg:x="47692" fg:w="12"/><text x="43.2941%" y="367.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (258 samples, 0.23%)</title><rect x="42.8230%" y="501" width="0.2329%" height="15" fill="rgb(211,200,13)" fg:x="47447" fg:w="258"/><text x="43.0730%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (240 samples, 0.22%)</title><rect x="42.8392%" y="485" width="0.2166%" height="15" fill="rgb(241,121,6)" fg:x="47465" fg:w="240"/><text x="43.0892%" y="495.50"></text></g><g><title>core::mem::drop (234 samples, 0.21%)</title><rect x="42.8446%" y="469" width="0.2112%" height="15" fill="rgb(234,221,29)" fg:x="47471" fg:w="234"/><text x="43.0946%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (234 samples, 0.21%)</title><rect x="42.8446%" y="453" width="0.2112%" height="15" fill="rgb(229,136,5)" fg:x="47471" fg:w="234"/><text x="43.0946%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="43.0441%" y="437" width="0.0117%" height="15" fill="rgb(238,36,11)" fg:x="47692" fg:w="13"/><text x="43.2941%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="43.0441%" y="421" width="0.0117%" height="15" fill="rgb(251,55,41)" fg:x="47692" fg:w="13"/><text x="43.2941%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (22 samples, 0.02%)</title><rect x="43.0793%" y="405" width="0.0199%" height="15" fill="rgb(242,34,40)" fg:x="47731" fg:w="22"/><text x="43.3293%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (22 samples, 0.02%)</title><rect x="43.0793%" y="389" width="0.0199%" height="15" fill="rgb(215,42,17)" fg:x="47731" fg:w="22"/><text x="43.3293%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (22 samples, 0.02%)</title><rect x="43.0793%" y="373" width="0.0199%" height="15" fill="rgb(207,44,46)" fg:x="47731" fg:w="22"/><text x="43.3293%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (43 samples, 0.04%)</title><rect x="43.0685%" y="437" width="0.0388%" height="15" fill="rgb(211,206,28)" fg:x="47719" fg:w="43"/><text x="43.3185%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (43 samples, 0.04%)</title><rect x="43.0685%" y="421" width="0.0388%" height="15" fill="rgb(237,167,16)" fg:x="47719" fg:w="43"/><text x="43.3185%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (331 samples, 0.30%)</title><rect x="42.8167%" y="533" width="0.2987%" height="15" fill="rgb(233,66,6)" fg:x="47440" fg:w="331"/><text x="43.0667%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (331 samples, 0.30%)</title><rect x="42.8167%" y="517" width="0.2987%" height="15" fill="rgb(246,123,29)" fg:x="47440" fg:w="331"/><text x="43.0667%" y="527.50"></text></g><g><title>rust_dealloc (66 samples, 0.06%)</title><rect x="43.0558%" y="501" width="0.0596%" height="15" fill="rgb(209,62,40)" fg:x="47705" fg:w="66"/><text x="43.3058%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (60 samples, 0.05%)</title><rect x="43.0612%" y="485" width="0.0542%" height="15" fill="rgb(218,4,25)" fg:x="47711" fg:w="60"/><text x="43.3112%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (52 samples, 0.05%)</title><rect x="43.0685%" y="469" width="0.0469%" height="15" fill="rgb(253,91,49)" fg:x="47719" fg:w="52"/><text x="43.3185%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (52 samples, 0.05%)</title><rect x="43.0685%" y="453" width="0.0469%" height="15" fill="rgb(228,155,29)" fg:x="47719" fg:w="52"/><text x="43.3185%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="43.1407%" y="341" width="0.0144%" height="15" fill="rgb(243,57,37)" fg:x="47799" fg:w="16"/><text x="43.3907%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="43.1407%" y="325" width="0.0144%" height="15" fill="rgb(244,167,17)" fg:x="47799" fg:w="16"/><text x="43.3907%" y="335.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="43.1407%" y="309" width="0.0144%" height="15" fill="rgb(207,181,38)" fg:x="47799" fg:w="16"/><text x="43.3907%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="43.1407%" y="293" width="0.0144%" height="15" fill="rgb(211,8,23)" fg:x="47799" fg:w="16"/><text x="43.3907%" y="303.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (31 samples, 0.03%)</title><rect x="43.1353%" y="437" width="0.0280%" height="15" fill="rgb(235,11,44)" fg:x="47793" fg:w="31"/><text x="43.3853%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (31 samples, 0.03%)</title><rect x="43.1353%" y="421" width="0.0280%" height="15" fill="rgb(248,18,52)" fg:x="47793" fg:w="31"/><text x="43.3853%" y="431.50"></text></g><g><title>core::mem::drop (25 samples, 0.02%)</title><rect x="43.1407%" y="405" width="0.0226%" height="15" fill="rgb(208,4,7)" fg:x="47799" fg:w="25"/><text x="43.3907%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (25 samples, 0.02%)</title><rect x="43.1407%" y="389" width="0.0226%" height="15" fill="rgb(240,17,39)" fg:x="47799" fg:w="25"/><text x="43.3907%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (25 samples, 0.02%)</title><rect x="43.1407%" y="373" width="0.0226%" height="15" fill="rgb(207,170,3)" fg:x="47799" fg:w="25"/><text x="43.3907%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="43.1407%" y="357" width="0.0226%" height="15" fill="rgb(236,100,52)" fg:x="47799" fg:w="25"/><text x="43.3907%" y="367.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="43.1686%" y="421" width="0.0108%" height="15" fill="rgb(246,78,51)" fg:x="47830" fg:w="12"/><text x="43.4186%" y="431.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="43.1813%" y="405" width="0.0126%" height="15" fill="rgb(211,17,15)" fg:x="47844" fg:w="14"/><text x="43.4313%" y="415.50"></text></g><g><title>rust_dealloc (20 samples, 0.02%)</title><rect x="43.2102%" y="341" width="0.0181%" height="15" fill="rgb(209,59,46)" fg:x="47876" fg:w="20"/><text x="43.4602%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (20 samples, 0.02%)</title><rect x="43.3022%" y="309" width="0.0181%" height="15" fill="rgb(210,92,25)" fg:x="47978" fg:w="20"/><text x="43.5522%" y="319.50"></text></g><g><title> (20 samples, 0.02%)</title><rect x="43.3022%" y="293" width="0.0181%" height="15" fill="rgb(238,174,52)" fg:x="47978" fg:w="20"/><text x="43.5522%" y="303.50"></text></g><g><title>snmalloc::Remote::set_info (14 samples, 0.01%)</title><rect x="43.3203%" y="309" width="0.0126%" height="15" fill="rgb(230,73,7)" fg:x="47998" fg:w="14"/><text x="43.5703%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (124 samples, 0.11%)</title><rect x="43.2390%" y="341" width="0.1119%" height="15" fill="rgb(243,124,40)" fg:x="47908" fg:w="124"/><text x="43.4890%" y="351.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (107 samples, 0.10%)</title><rect x="43.2544%" y="325" width="0.0966%" height="15" fill="rgb(244,170,11)" fg:x="47925" fg:w="107"/><text x="43.5044%" y="335.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (20 samples, 0.02%)</title><rect x="43.3329%" y="309" width="0.0181%" height="15" fill="rgb(207,114,54)" fg:x="48012" fg:w="20"/><text x="43.5829%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (169 samples, 0.15%)</title><rect x="43.2002%" y="373" width="0.1525%" height="15" fill="rgb(205,42,20)" fg:x="47865" fg:w="169"/><text x="43.4502%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (169 samples, 0.15%)</title><rect x="43.2002%" y="357" width="0.1525%" height="15" fill="rgb(230,30,28)" fg:x="47865" fg:w="169"/><text x="43.4502%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (177 samples, 0.16%)</title><rect x="43.2002%" y="405" width="0.1598%" height="15" fill="rgb(205,73,54)" fg:x="47865" fg:w="177"/><text x="43.4502%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (177 samples, 0.16%)</title><rect x="43.2002%" y="389" width="0.1598%" height="15" fill="rgb(254,227,23)" fg:x="47865" fg:w="177"/><text x="43.4502%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (218 samples, 0.20%)</title><rect x="43.1795%" y="421" width="0.1968%" height="15" fill="rgb(228,202,34)" fg:x="47842" fg:w="218"/><text x="43.4295%" y="431.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (18 samples, 0.02%)</title><rect x="43.3600%" y="405" width="0.0162%" height="15" fill="rgb(222,225,37)" fg:x="48042" fg:w="18"/><text x="43.6100%" y="415.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (18 samples, 0.02%)</title><rect x="43.3600%" y="389" width="0.0162%" height="15" fill="rgb(221,14,54)" fg:x="48042" fg:w="18"/><text x="43.6100%" y="399.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (18 samples, 0.02%)</title><rect x="43.3600%" y="373" width="0.0162%" height="15" fill="rgb(254,102,2)" fg:x="48042" fg:w="18"/><text x="43.6100%" y="383.50"></text></g><g><title>snmalloc::bits::align_down (18 samples, 0.02%)</title><rect x="43.3600%" y="357" width="0.0162%" height="15" fill="rgb(232,104,17)" fg:x="48042" fg:w="18"/><text x="43.6100%" y="367.50"></text></g><g><title>rust_dealloc (246 samples, 0.22%)</title><rect x="43.1632%" y="437" width="0.2220%" height="15" fill="rgb(250,220,14)" fg:x="47824" fg:w="246"/><text x="43.4132%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (283 samples, 0.26%)</title><rect x="43.1307%" y="485" width="0.2554%" height="15" fill="rgb(241,158,9)" fg:x="47788" fg:w="283"/><text x="43.3807%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (283 samples, 0.26%)</title><rect x="43.1307%" y="469" width="0.2554%" height="15" fill="rgb(246,9,43)" fg:x="47788" fg:w="283"/><text x="43.3807%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (283 samples, 0.26%)</title><rect x="43.1307%" y="453" width="0.2554%" height="15" fill="rgb(206,73,33)" fg:x="47788" fg:w="283"/><text x="43.3807%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (15 samples, 0.01%)</title><rect x="43.3961%" y="421" width="0.0135%" height="15" fill="rgb(222,79,8)" fg:x="48082" fg:w="15"/><text x="43.6461%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (15 samples, 0.01%)</title><rect x="43.3961%" y="405" width="0.0135%" height="15" fill="rgb(234,8,54)" fg:x="48082" fg:w="15"/><text x="43.6461%" y="415.50"></text></g><g><title>rust_dealloc (17 samples, 0.02%)</title><rect x="44.0008%" y="277" width="0.0153%" height="15" fill="rgb(209,134,38)" fg:x="48752" fg:w="17"/><text x="44.2508%" y="287.50"></text></g><g><title>rust_dealloc (35 samples, 0.03%)</title><rect x="44.0179%" y="213" width="0.0316%" height="15" fill="rgb(230,127,29)" fg:x="48771" fg:w="35"/><text x="44.2679%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (26 samples, 0.02%)</title><rect x="44.1235%" y="181" width="0.0235%" height="15" fill="rgb(242,44,41)" fg:x="48888" fg:w="26"/><text x="44.3735%" y="191.50"></text></g><g><title> (26 samples, 0.02%)</title><rect x="44.1235%" y="165" width="0.0235%" height="15" fill="rgb(222,56,43)" fg:x="48888" fg:w="26"/><text x="44.3735%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (114 samples, 0.10%)</title><rect x="44.0568%" y="213" width="0.1029%" height="15" fill="rgb(238,39,47)" fg:x="48814" fg:w="114"/><text x="44.3068%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (107 samples, 0.10%)</title><rect x="44.0631%" y="197" width="0.0966%" height="15" fill="rgb(226,79,43)" fg:x="48821" fg:w="107"/><text x="44.3131%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (174 samples, 0.16%)</title><rect x="44.0161%" y="277" width="0.1570%" height="15" fill="rgb(242,105,53)" fg:x="48769" fg:w="174"/><text x="44.2661%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (174 samples, 0.16%)</title><rect x="44.0161%" y="261" width="0.1570%" height="15" fill="rgb(251,132,46)" fg:x="48769" fg:w="174"/><text x="44.2661%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (174 samples, 0.16%)</title><rect x="44.0161%" y="245" width="0.1570%" height="15" fill="rgb(231,77,14)" fg:x="48769" fg:w="174"/><text x="44.2661%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (174 samples, 0.16%)</title><rect x="44.0161%" y="229" width="0.1570%" height="15" fill="rgb(240,135,9)" fg:x="48769" fg:w="174"/><text x="44.2661%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (15 samples, 0.01%)</title><rect x="44.1596%" y="213" width="0.0135%" height="15" fill="rgb(248,109,14)" fg:x="48928" fg:w="15"/><text x="44.4096%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (200 samples, 0.18%)</title><rect x="43.9999%" y="293" width="0.1805%" height="15" fill="rgb(227,146,52)" fg:x="48751" fg:w="200"/><text x="44.2499%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (862 samples, 0.78%)</title><rect x="43.4096%" y="389" width="0.7780%" height="15" fill="rgb(232,54,3)" fg:x="48097" fg:w="862"/><text x="43.6596%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (860 samples, 0.78%)</title><rect x="43.4114%" y="373" width="0.7762%" height="15" fill="rgb(229,201,43)" fg:x="48099" fg:w="860"/><text x="43.6614%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (840 samples, 0.76%)</title><rect x="43.4295%" y="357" width="0.7581%" height="15" fill="rgb(252,161,33)" fg:x="48119" fg:w="840"/><text x="43.6795%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (840 samples, 0.76%)</title><rect x="43.4295%" y="341" width="0.7581%" height="15" fill="rgb(226,146,40)" fg:x="48119" fg:w="840"/><text x="43.6795%" y="351.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (840 samples, 0.76%)</title><rect x="43.4295%" y="325" width="0.7581%" height="15" fill="rgb(219,47,25)" fg:x="48119" fg:w="840"/><text x="43.6795%" y="335.50"></text></g><g><title>rust_dealloc (219 samples, 0.20%)</title><rect x="43.9900%" y="309" width="0.1977%" height="15" fill="rgb(250,135,13)" fg:x="48740" fg:w="219"/><text x="44.2400%" y="319.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (910 samples, 0.82%)</title><rect x="43.3880%" y="453" width="0.8213%" height="15" fill="rgb(219,229,18)" fg:x="48073" fg:w="910"/><text x="43.6380%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (910 samples, 0.82%)</title><rect x="43.3880%" y="437" width="0.8213%" height="15" fill="rgb(217,152,27)" fg:x="48073" fg:w="910"/><text x="43.6380%" y="447.50"></text></g><g><title>core::mem::drop (886 samples, 0.80%)</title><rect x="43.4096%" y="421" width="0.7997%" height="15" fill="rgb(225,71,47)" fg:x="48097" fg:w="886"/><text x="43.6596%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (886 samples, 0.80%)</title><rect x="43.4096%" y="405" width="0.7997%" height="15" fill="rgb(220,139,14)" fg:x="48097" fg:w="886"/><text x="43.6596%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (24 samples, 0.02%)</title><rect x="44.1876%" y="389" width="0.0217%" height="15" fill="rgb(247,54,32)" fg:x="48959" fg:w="24"/><text x="44.4376%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="44.1876%" y="373" width="0.0217%" height="15" fill="rgb(252,131,39)" fg:x="48959" fg:w="24"/><text x="44.4376%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.02%)</title><rect x="44.1876%" y="357" width="0.0217%" height="15" fill="rgb(210,108,39)" fg:x="48959" fg:w="24"/><text x="44.4376%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.02%)</title><rect x="44.1876%" y="341" width="0.0217%" height="15" fill="rgb(205,23,29)" fg:x="48959" fg:w="24"/><text x="44.4376%" y="351.50"></text></g><g><title>__rg_dealloc (24 samples, 0.02%)</title><rect x="44.1876%" y="325" width="0.0217%" height="15" fill="rgb(246,139,46)" fg:x="48959" fg:w="24"/><text x="44.4376%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (24 samples, 0.02%)</title><rect x="44.1876%" y="309" width="0.0217%" height="15" fill="rgb(250,81,26)" fg:x="48959" fg:w="24"/><text x="44.4376%" y="319.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="44.2634%" y="325" width="0.0162%" height="15" fill="rgb(214,104,7)" fg:x="49043" fg:w="18"/><text x="44.5134%" y="335.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="44.2634%" y="309" width="0.0162%" height="15" fill="rgb(233,189,8)" fg:x="49043" fg:w="18"/><text x="44.5134%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (53 samples, 0.05%)</title><rect x="44.2391%" y="357" width="0.0478%" height="15" fill="rgb(228,141,17)" fg:x="49016" fg:w="53"/><text x="44.4891%" y="367.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (43 samples, 0.04%)</title><rect x="44.2481%" y="341" width="0.0388%" height="15" fill="rgb(247,157,1)" fg:x="49026" fg:w="43"/><text x="44.4981%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (77 samples, 0.07%)</title><rect x="44.2309%" y="389" width="0.0695%" height="15" fill="rgb(249,225,5)" fg:x="49007" fg:w="77"/><text x="44.4809%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (77 samples, 0.07%)</title><rect x="44.2309%" y="373" width="0.0695%" height="15" fill="rgb(242,55,13)" fg:x="49007" fg:w="77"/><text x="44.4809%" y="383.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (15 samples, 0.01%)</title><rect x="44.2869%" y="357" width="0.0135%" height="15" fill="rgb(230,49,50)" fg:x="49069" fg:w="15"/><text x="44.5369%" y="367.50"></text></g><g><title>rust_dealloc (110 samples, 0.10%)</title><rect x="44.2093%" y="453" width="0.0993%" height="15" fill="rgb(241,111,38)" fg:x="48983" fg:w="110"/><text x="44.4593%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (99 samples, 0.09%)</title><rect x="44.2192%" y="437" width="0.0894%" height="15" fill="rgb(252,155,4)" fg:x="48994" fg:w="99"/><text x="44.4692%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (86 samples, 0.08%)</title><rect x="44.2309%" y="421" width="0.0776%" height="15" fill="rgb(212,69,32)" fg:x="49007" fg:w="86"/><text x="44.4809%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (86 samples, 0.08%)</title><rect x="44.2309%" y="405" width="0.0776%" height="15" fill="rgb(243,107,47)" fg:x="49007" fg:w="86"/><text x="44.4809%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,315 samples, 1.19%)</title><rect x="43.1226%" y="517" width="1.1868%" height="15" fill="rgb(247,130,12)" fg:x="47779" fg:w="1315"/><text x="43.3726%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,306 samples, 1.18%)</title><rect x="43.1307%" y="501" width="1.1787%" height="15" fill="rgb(233,74,16)" fg:x="47788" fg:w="1306"/><text x="43.3807%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (1,023 samples, 0.92%)</title><rect x="43.3862%" y="485" width="0.9233%" height="15" fill="rgb(208,58,18)" fg:x="48071" fg:w="1023"/><text x="43.6362%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (1,023 samples, 0.92%)</title><rect x="43.3862%" y="469" width="0.9233%" height="15" fill="rgb(242,225,1)" fg:x="48071" fg:w="1023"/><text x="43.6362%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (28 samples, 0.03%)</title><rect x="44.3095%" y="517" width="0.0253%" height="15" fill="rgb(249,39,40)" fg:x="49094" fg:w="28"/><text x="44.5595%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (28 samples, 0.03%)</title><rect x="44.3095%" y="501" width="0.0253%" height="15" fill="rgb(207,72,44)" fg:x="49094" fg:w="28"/><text x="44.5595%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (28 samples, 0.03%)</title><rect x="44.3095%" y="485" width="0.0253%" height="15" fill="rgb(215,193,12)" fg:x="49094" fg:w="28"/><text x="44.5595%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (28 samples, 0.03%)</title><rect x="44.3095%" y="469" width="0.0253%" height="15" fill="rgb(248,41,39)" fg:x="49094" fg:w="28"/><text x="44.5595%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (28 samples, 0.03%)</title><rect x="44.3095%" y="453" width="0.0253%" height="15" fill="rgb(253,85,4)" fg:x="49094" fg:w="28"/><text x="44.5595%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (14 samples, 0.01%)</title><rect x="44.3347%" y="517" width="0.0126%" height="15" fill="rgb(243,70,31)" fg:x="49122" fg:w="14"/><text x="44.5847%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (14 samples, 0.01%)</title><rect x="44.3347%" y="501" width="0.0126%" height="15" fill="rgb(253,195,26)" fg:x="49122" fg:w="14"/><text x="44.5847%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="44.3347%" y="485" width="0.0126%" height="15" fill="rgb(243,42,11)" fg:x="49122" fg:w="14"/><text x="44.5847%" y="495.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (14 samples, 0.01%)</title><rect x="44.3347%" y="469" width="0.0126%" height="15" fill="rgb(239,66,17)" fg:x="49122" fg:w="14"/><text x="44.5847%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (160 samples, 0.14%)</title><rect x="44.3790%" y="485" width="0.1444%" height="15" fill="rgb(217,132,21)" fg:x="49171" fg:w="160"/><text x="44.6290%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (160 samples, 0.14%)</title><rect x="44.3790%" y="469" width="0.1444%" height="15" fill="rgb(252,202,21)" fg:x="49171" fg:w="160"/><text x="44.6290%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (160 samples, 0.14%)</title><rect x="44.3790%" y="453" width="0.1444%" height="15" fill="rgb(233,98,36)" fg:x="49171" fg:w="160"/><text x="44.6290%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value)&gt;&gt; (160 samples, 0.14%)</title><rect x="44.3790%" y="437" width="0.1444%" height="15" fill="rgb(216,153,54)" fg:x="49171" fg:w="160"/><text x="44.6290%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 samples, 0.14%)</title><rect x="44.3790%" y="421" width="0.1444%" height="15" fill="rgb(250,99,7)" fg:x="49171" fg:w="160"/><text x="44.6290%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (156 samples, 0.14%)</title><rect x="44.3826%" y="405" width="0.1408%" height="15" fill="rgb(207,56,50)" fg:x="49175" fg:w="156"/><text x="44.6326%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (209 samples, 0.19%)</title><rect x="44.3483%" y="501" width="0.1886%" height="15" fill="rgb(244,61,34)" fg:x="49137" fg:w="209"/><text x="44.5983%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="44.5234%" y="485" width="0.0135%" height="15" fill="rgb(241,50,38)" fg:x="49331" fg:w="15"/><text x="44.7734%" y="495.50"></text></g><g><title>alloc::alloc::box_free (15 samples, 0.01%)</title><rect x="44.5234%" y="469" width="0.0135%" height="15" fill="rgb(212,166,30)" fg:x="49331" fg:w="15"/><text x="44.7734%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="44.5234%" y="453" width="0.0135%" height="15" fill="rgb(249,127,32)" fg:x="49331" fg:w="15"/><text x="44.7734%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="44.5234%" y="437" width="0.0135%" height="15" fill="rgb(209,103,0)" fg:x="49331" fg:w="15"/><text x="44.7734%" y="447.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="44.5234%" y="421" width="0.0135%" height="15" fill="rgb(238,209,51)" fg:x="49331" fg:w="15"/><text x="44.7734%" y="431.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="44.5234%" y="405" width="0.0135%" height="15" fill="rgb(237,56,23)" fg:x="49331" fg:w="15"/><text x="44.7734%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (12 samples, 0.01%)</title><rect x="44.5513%" y="437" width="0.0108%" height="15" fill="rgb(215,153,46)" fg:x="49362" fg:w="12"/><text x="44.8013%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (12 samples, 0.01%)</title><rect x="44.5513%" y="421" width="0.0108%" height="15" fill="rgb(224,49,31)" fg:x="49362" fg:w="12"/><text x="44.8013%" y="431.50"></text></g><g><title>abi_stable::std_types::arc::private::RArc&lt;T&gt;::data (462 samples, 0.42%)</title><rect x="44.6055%" y="341" width="0.4170%" height="15" fill="rgb(250,18,42)" fg:x="49422" fg:w="462"/><text x="44.8555%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::get_mut_unchecked (13 samples, 0.01%)</title><rect x="45.0315%" y="261" width="0.0117%" height="15" fill="rgb(215,176,39)" fg:x="49894" fg:w="13"/><text x="45.2815%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.02%)</title><rect x="45.0432%" y="213" width="0.0208%" height="15" fill="rgb(223,77,29)" fg:x="49907" fg:w="23"/><text x="45.2932%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.02%)</title><rect x="45.0432%" y="197" width="0.0208%" height="15" fill="rgb(234,94,52)" fg:x="49907" fg:w="23"/><text x="45.2932%" y="207.50"></text></g><g><title>__rg_dealloc (23 samples, 0.02%)</title><rect x="45.0432%" y="181" width="0.0208%" height="15" fill="rgb(220,154,50)" fg:x="49907" fg:w="23"/><text x="45.2932%" y="191.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (23 samples, 0.02%)</title><rect x="45.0432%" y="165" width="0.0208%" height="15" fill="rgb(212,11,10)" fg:x="49907" fg:w="23"/><text x="45.2932%" y="175.50"></text></g><g><title>core::mem::drop (686 samples, 0.62%)</title><rect x="45.0432%" y="261" width="0.6191%" height="15" fill="rgb(205,166,19)" fg:x="49907" fg:w="686"/><text x="45.2932%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (686 samples, 0.62%)</title><rect x="45.0432%" y="245" width="0.6191%" height="15" fill="rgb(244,198,16)" fg:x="49907" fg:w="686"/><text x="45.2932%" y="255.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (686 samples, 0.62%)</title><rect x="45.0432%" y="229" width="0.6191%" height="15" fill="rgb(219,69,12)" fg:x="49907" fg:w="686"/><text x="45.2932%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (663 samples, 0.60%)</title><rect x="45.0640%" y="213" width="0.5984%" height="15" fill="rgb(245,30,7)" fg:x="49930" fg:w="663"/><text x="45.3140%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_sub (663 samples, 0.60%)</title><rect x="45.0640%" y="197" width="0.5984%" height="15" fill="rgb(218,221,48)" fg:x="49930" fg:w="663"/><text x="45.3140%" y="207.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (13 samples, 0.01%)</title><rect x="45.6822%" y="213" width="0.0117%" height="15" fill="rgb(216,66,15)" fg:x="50615" fg:w="13"/><text x="45.9322%" y="223.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (13 samples, 0.01%)</title><rect x="45.6822%" y="197" width="0.0117%" height="15" fill="rgb(226,122,50)" fg:x="50615" fg:w="13"/><text x="45.9322%" y="207.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="45.6822%" y="181" width="0.0117%" height="15" fill="rgb(239,156,16)" fg:x="50615" fg:w="13"/><text x="45.9322%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="45.6822%" y="165" width="0.0117%" height="15" fill="rgb(224,27,38)" fg:x="50615" fg:w="13"/><text x="45.9322%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="45.6822%" y="149" width="0.0117%" height="15" fill="rgb(224,39,27)" fg:x="50615" fg:w="13"/><text x="45.9322%" y="159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="45.6822%" y="133" width="0.0117%" height="15" fill="rgb(215,92,29)" fg:x="50615" fg:w="13"/><text x="45.9322%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="45.6822%" y="117" width="0.0117%" height="15" fill="rgb(207,159,16)" fg:x="50615" fg:w="13"/><text x="45.9322%" y="127.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="45.6822%" y="101" width="0.0117%" height="15" fill="rgb(238,163,47)" fg:x="50615" fg:w="13"/><text x="45.9322%" y="111.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="45.6822%" y="85" width="0.0117%" height="15" fill="rgb(219,91,49)" fg:x="50615" fg:w="13"/><text x="45.9322%" y="95.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="45.6822%" y="69" width="0.0117%" height="15" fill="rgb(227,167,31)" fg:x="50615" fg:w="13"/><text x="45.9322%" y="79.50"></text></g><g><title>rust_dealloc (18 samples, 0.02%)</title><rect x="45.7075%" y="117" width="0.0162%" height="15" fill="rgb(234,80,54)" fg:x="50643" fg:w="18"/><text x="45.9575%" y="127.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (30 samples, 0.03%)</title><rect x="45.7788%" y="85" width="0.0271%" height="15" fill="rgb(212,114,2)" fg:x="50722" fg:w="30"/><text x="46.0288%" y="95.50"></text></g><g><title> (30 samples, 0.03%)</title><rect x="45.7788%" y="69" width="0.0271%" height="15" fill="rgb(234,50,24)" fg:x="50722" fg:w="30"/><text x="46.0288%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (105 samples, 0.09%)</title><rect x="45.7256%" y="117" width="0.0948%" height="15" fill="rgb(221,68,8)" fg:x="50663" fg:w="105"/><text x="45.9756%" y="127.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (97 samples, 0.09%)</title><rect x="45.7328%" y="101" width="0.0875%" height="15" fill="rgb(254,180,31)" fg:x="50671" fg:w="97"/><text x="45.9828%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (145 samples, 0.13%)</title><rect x="45.7075%" y="149" width="0.1309%" height="15" fill="rgb(247,130,50)" fg:x="50643" fg:w="145"/><text x="45.9575%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (145 samples, 0.13%)</title><rect x="45.7075%" y="133" width="0.1309%" height="15" fill="rgb(211,109,4)" fg:x="50643" fg:w="145"/><text x="45.9575%" y="143.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (19 samples, 0.02%)</title><rect x="45.8212%" y="117" width="0.0171%" height="15" fill="rgb(238,50,21)" fg:x="50769" fg:w="19"/><text x="46.0712%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (153 samples, 0.14%)</title><rect x="45.7075%" y="181" width="0.1381%" height="15" fill="rgb(225,57,45)" fg:x="50643" fg:w="153"/><text x="45.9575%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (153 samples, 0.14%)</title><rect x="45.7075%" y="165" width="0.1381%" height="15" fill="rgb(209,196,50)" fg:x="50643" fg:w="153"/><text x="45.9575%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (168 samples, 0.15%)</title><rect x="45.7039%" y="197" width="0.1516%" height="15" fill="rgb(242,140,13)" fg:x="50639" fg:w="168"/><text x="45.9539%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (919 samples, 0.83%)</title><rect x="45.0315%" y="277" width="0.8294%" height="15" fill="rgb(217,111,7)" fg:x="49894" fg:w="919"/><text x="45.2815%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (220 samples, 0.20%)</title><rect x="45.6624%" y="261" width="0.1986%" height="15" fill="rgb(253,193,51)" fg:x="50593" fg:w="220"/><text x="45.9124%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (220 samples, 0.20%)</title><rect x="45.6624%" y="245" width="0.1986%" height="15" fill="rgb(252,70,29)" fg:x="50593" fg:w="220"/><text x="45.9124%" y="255.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (220 samples, 0.20%)</title><rect x="45.6624%" y="229" width="0.1986%" height="15" fill="rgb(232,127,12)" fg:x="50593" fg:w="220"/><text x="45.9124%" y="239.50"></text></g><g><title>rust_dealloc (185 samples, 0.17%)</title><rect x="45.6940%" y="213" width="0.1670%" height="15" fill="rgb(211,180,21)" fg:x="50628" fg:w="185"/><text x="45.9440%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (903 samples, 0.81%)</title><rect x="45.8609%" y="277" width="0.8150%" height="15" fill="rgb(229,72,13)" fg:x="50813" fg:w="903"/><text x="46.1109%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_sub (903 samples, 0.81%)</title><rect x="45.8609%" y="261" width="0.8150%" height="15" fill="rgb(240,211,49)" fg:x="50813" fg:w="903"/><text x="46.1109%" y="271.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="46.6832%" y="245" width="0.0126%" height="15" fill="rgb(219,149,40)" fg:x="51724" fg:w="14"/><text x="46.9332%" y="255.50"></text></g><g><title>size_to_sizeclass (16 samples, 0.01%)</title><rect x="46.6958%" y="245" width="0.0144%" height="15" fill="rgb(210,127,46)" fg:x="51738" fg:w="16"/><text x="46.9458%" y="255.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (17 samples, 0.02%)</title><rect x="46.7445%" y="149" width="0.0153%" height="15" fill="rgb(220,106,7)" fg:x="51792" fg:w="17"/><text x="46.9945%" y="159.50"></text></g><g><title> (17 samples, 0.02%)</title><rect x="46.7445%" y="133" width="0.0153%" height="15" fill="rgb(249,31,22)" fg:x="51792" fg:w="17"/><text x="46.9945%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (52 samples, 0.05%)</title><rect x="46.7238%" y="181" width="0.0469%" height="15" fill="rgb(253,1,49)" fg:x="51769" fg:w="52"/><text x="46.9738%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (44 samples, 0.04%)</title><rect x="46.7310%" y="165" width="0.0397%" height="15" fill="rgb(227,144,33)" fg:x="51777" fg:w="44"/><text x="46.9810%" y="175.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="46.7599%" y="149" width="0.0108%" height="15" fill="rgb(249,163,44)" fg:x="51809" fg:w="12"/><text x="47.0099%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (101 samples, 0.09%)</title><rect x="46.6832%" y="261" width="0.0912%" height="15" fill="rgb(234,15,39)" fg:x="51724" fg:w="101"/><text x="46.9332%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (71 samples, 0.06%)</title><rect x="46.7102%" y="245" width="0.0641%" height="15" fill="rgb(207,66,16)" fg:x="51754" fg:w="71"/><text x="46.9602%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (71 samples, 0.06%)</title><rect x="46.7102%" y="229" width="0.0641%" height="15" fill="rgb(233,112,24)" fg:x="51754" fg:w="71"/><text x="46.9602%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (71 samples, 0.06%)</title><rect x="46.7102%" y="213" width="0.0641%" height="15" fill="rgb(230,90,22)" fg:x="51754" fg:w="71"/><text x="46.9602%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (71 samples, 0.06%)</title><rect x="46.7102%" y="197" width="0.0641%" height="15" fill="rgb(229,61,13)" fg:x="51754" fg:w="71"/><text x="46.9602%" y="207.50"></text></g><g><title>rust_dealloc (111 samples, 0.10%)</title><rect x="46.6759%" y="277" width="0.1002%" height="15" fill="rgb(225,57,24)" fg:x="51716" fg:w="111"/><text x="46.9259%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,455 samples, 2.22%)</title><rect x="44.5622%" y="405" width="2.2157%" height="15" fill="rgb(208,169,48)" fg:x="49374" fg:w="2455"/><text x="44.8122%" y="415.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (2,452 samples, 2.21%)</title><rect x="44.5649%" y="389" width="2.2130%" height="15" fill="rgb(244,218,51)" fg:x="49377" fg:w="2452"/><text x="44.8149%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (2,444 samples, 2.21%)</title><rect x="44.5721%" y="373" width="2.2058%" height="15" fill="rgb(214,148,10)" fg:x="49385" fg:w="2444"/><text x="44.8221%" y="383.50">c..</text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (2,444 samples, 2.21%)</title><rect x="44.5721%" y="357" width="2.2058%" height="15" fill="rgb(225,174,27)" fg:x="49385" fg:w="2444"/><text x="44.8221%" y="367.50">a..</text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (1,945 samples, 1.76%)</title><rect x="45.0225%" y="341" width="1.7554%" height="15" fill="rgb(230,96,26)" fg:x="49884" fg:w="1945"/><text x="45.2725%" y="351.50"></text></g><g><title>core::mem::drop (1,938 samples, 1.75%)</title><rect x="45.0288%" y="325" width="1.7491%" height="15" fill="rgb(232,10,30)" fg:x="49891" fg:w="1938"/><text x="45.2788%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,938 samples, 1.75%)</title><rect x="45.0288%" y="309" width="1.7491%" height="15" fill="rgb(222,8,50)" fg:x="49891" fg:w="1938"/><text x="45.2788%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,938 samples, 1.75%)</title><rect x="45.0288%" y="293" width="1.7491%" height="15" fill="rgb(213,81,27)" fg:x="49891" fg:w="1938"/><text x="45.2788%" y="303.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (2,496 samples, 2.25%)</title><rect x="44.5378%" y="469" width="2.2527%" height="15" fill="rgb(245,50,10)" fg:x="49347" fg:w="2496"/><text x="44.7878%" y="479.50">a..</text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (2,491 samples, 2.25%)</title><rect x="44.5423%" y="453" width="2.2482%" height="15" fill="rgb(216,100,18)" fg:x="49352" fg:w="2491"/><text x="44.7923%" y="463.50">a..</text></g><g><title>core::mem::drop (2,469 samples, 2.23%)</title><rect x="44.5622%" y="437" width="2.2284%" height="15" fill="rgb(236,147,54)" fg:x="49374" fg:w="2469"/><text x="44.8122%" y="447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,469 samples, 2.23%)</title><rect x="44.5622%" y="421" width="2.2284%" height="15" fill="rgb(205,143,26)" fg:x="49374" fg:w="2469"/><text x="44.8122%" y="431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="46.7779%" y="405" width="0.0126%" height="15" fill="rgb(236,26,9)" fg:x="51829" fg:w="14"/><text x="47.0279%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="46.7779%" y="389" width="0.0126%" height="15" fill="rgb(221,165,53)" fg:x="51829" fg:w="14"/><text x="47.0279%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="46.7779%" y="373" width="0.0126%" height="15" fill="rgb(214,110,17)" fg:x="51829" fg:w="14"/><text x="47.0279%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="46.7779%" y="357" width="0.0126%" height="15" fill="rgb(237,197,12)" fg:x="51829" fg:w="14"/><text x="47.0279%" y="367.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="46.7779%" y="341" width="0.0126%" height="15" fill="rgb(205,84,17)" fg:x="51829" fg:w="14"/><text x="47.0279%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="46.7779%" y="325" width="0.0126%" height="15" fill="rgb(237,18,45)" fg:x="51829" fg:w="14"/><text x="47.0279%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (57 samples, 0.05%)</title><rect x="46.8158%" y="373" width="0.0514%" height="15" fill="rgb(221,87,14)" fg:x="51871" fg:w="57"/><text x="47.0658%" y="383.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (45 samples, 0.04%)</title><rect x="46.8267%" y="357" width="0.0406%" height="15" fill="rgb(238,186,15)" fg:x="51883" fg:w="45"/><text x="47.0767%" y="367.50"></text></g><g><title>snmalloc::Remote::set_info (19 samples, 0.02%)</title><rect x="46.8501%" y="341" width="0.0171%" height="15" fill="rgb(208,115,11)" fg:x="51909" fg:w="19"/><text x="47.1001%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (72 samples, 0.06%)</title><rect x="46.8068%" y="437" width="0.0650%" height="15" fill="rgb(254,175,0)" fg:x="51861" fg:w="72"/><text x="47.0568%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (72 samples, 0.06%)</title><rect x="46.8068%" y="421" width="0.0650%" height="15" fill="rgb(227,24,42)" fg:x="51861" fg:w="72"/><text x="47.0568%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (72 samples, 0.06%)</title><rect x="46.8068%" y="405" width="0.0650%" height="15" fill="rgb(223,211,37)" fg:x="51861" fg:w="72"/><text x="47.0568%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (72 samples, 0.06%)</title><rect x="46.8068%" y="389" width="0.0650%" height="15" fill="rgb(235,49,27)" fg:x="51861" fg:w="72"/><text x="47.0568%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (94 samples, 0.08%)</title><rect x="46.8005%" y="453" width="0.0848%" height="15" fill="rgb(254,97,51)" fg:x="51854" fg:w="94"/><text x="47.0505%" y="463.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="46.8718%" y="437" width="0.0135%" height="15" fill="rgb(249,51,40)" fg:x="51933" fg:w="15"/><text x="47.1218%" y="447.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="46.8718%" y="421" width="0.0135%" height="15" fill="rgb(210,128,45)" fg:x="51933" fg:w="15"/><text x="47.1218%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (15 samples, 0.01%)</title><rect x="46.8718%" y="405" width="0.0135%" height="15" fill="rgb(224,137,50)" fg:x="51933" fg:w="15"/><text x="47.1218%" y="415.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="46.8718%" y="389" width="0.0135%" height="15" fill="rgb(242,15,9)" fg:x="51933" fg:w="15"/><text x="47.1218%" y="399.50"></text></g><g><title>rust_dealloc (116 samples, 0.10%)</title><rect x="46.7906%" y="469" width="0.1047%" height="15" fill="rgb(233,187,41)" fg:x="51843" fg:w="116"/><text x="47.0406%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,614 samples, 2.36%)</title><rect x="44.5369%" y="501" width="2.3592%" height="15" fill="rgb(227,2,29)" fg:x="49346" fg:w="2614"/><text x="44.7869%" y="511.50">c..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (2,614 samples, 2.36%)</title><rect x="44.5369%" y="485" width="2.3592%" height="15" fill="rgb(222,70,3)" fg:x="49346" fg:w="2614"/><text x="44.7869%" y="495.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (33 samples, 0.03%)</title><rect x="46.8971%" y="485" width="0.0298%" height="15" fill="rgb(213,11,42)" fg:x="51961" fg:w="33"/><text x="47.1471%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (64 samples, 0.06%)</title><rect x="46.8962%" y="501" width="0.0578%" height="15" fill="rgb(225,150,9)" fg:x="51960" fg:w="64"/><text x="47.1462%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (30 samples, 0.03%)</title><rect x="46.9268%" y="485" width="0.0271%" height="15" fill="rgb(230,162,45)" fg:x="51994" fg:w="30"/><text x="47.1768%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (18 samples, 0.02%)</title><rect x="46.9377%" y="469" width="0.0162%" height="15" fill="rgb(222,14,52)" fg:x="52006" fg:w="18"/><text x="47.1877%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="46.9377%" y="453" width="0.0162%" height="15" fill="rgb(254,198,14)" fg:x="52006" fg:w="18"/><text x="47.1877%" y="463.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (18 samples, 0.02%)</title><rect x="46.9377%" y="437" width="0.0162%" height="15" fill="rgb(220,217,30)" fg:x="52006" fg:w="18"/><text x="47.1877%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (40 samples, 0.04%)</title><rect x="46.9855%" y="405" width="0.0361%" height="15" fill="rgb(215,146,41)" fg:x="52059" fg:w="40"/><text x="47.2355%" y="415.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (35 samples, 0.03%)</title><rect x="46.9900%" y="389" width="0.0316%" height="15" fill="rgb(217,27,36)" fg:x="52064" fg:w="35"/><text x="47.2400%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (66 samples, 0.06%)</title><rect x="46.9702%" y="437" width="0.0596%" height="15" fill="rgb(219,218,39)" fg:x="52042" fg:w="66"/><text x="47.2202%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (66 samples, 0.06%)</title><rect x="46.9702%" y="421" width="0.0596%" height="15" fill="rgb(219,4,42)" fg:x="52042" fg:w="66"/><text x="47.2202%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (73 samples, 0.07%)</title><rect x="46.9702%" y="469" width="0.0659%" height="15" fill="rgb(249,119,36)" fg:x="52042" fg:w="73"/><text x="47.2202%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (73 samples, 0.07%)</title><rect x="46.9702%" y="453" width="0.0659%" height="15" fill="rgb(209,23,33)" fg:x="52042" fg:w="73"/><text x="47.2202%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (84 samples, 0.08%)</title><rect x="46.9611%" y="485" width="0.0758%" height="15" fill="rgb(211,10,0)" fg:x="52032" fg:w="84"/><text x="47.2111%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (4,348 samples, 3.92%)</title><rect x="43.1154%" y="533" width="3.9243%" height="15" fill="rgb(208,99,37)" fg:x="47771" fg:w="4348"/><text x="43.3654%" y="543.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (2,983 samples, 2.69%)</title><rect x="44.3474%" y="517" width="2.6923%" height="15" fill="rgb(213,132,31)" fg:x="49136" fg:w="2983"/><text x="44.5974%" y="527.50">co..</text></g><g><title>rust_dealloc (95 samples, 0.09%)</title><rect x="46.9539%" y="501" width="0.0857%" height="15" fill="rgb(243,129,40)" fg:x="52024" fg:w="95"/><text x="47.2039%" y="511.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (18 samples, 0.02%)</title><rect x="47.1922%" y="453" width="0.0162%" height="15" fill="rgb(210,66,33)" fg:x="52288" fg:w="18"/><text x="47.4422%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (18 samples, 0.02%)</title><rect x="47.1922%" y="437" width="0.0162%" height="15" fill="rgb(209,189,4)" fg:x="52288" fg:w="18"/><text x="47.4422%" y="447.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (48 samples, 0.04%)</title><rect x="47.1696%" y="485" width="0.0433%" height="15" fill="rgb(214,107,37)" fg:x="52263" fg:w="48"/><text x="47.4196%" y="495.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (44 samples, 0.04%)</title><rect x="47.1732%" y="469" width="0.0397%" height="15" fill="rgb(245,88,54)" fg:x="52267" fg:w="44"/><text x="47.4232%" y="479.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (191 samples, 0.17%)</title><rect x="47.0487%" y="533" width="0.1724%" height="15" fill="rgb(205,146,20)" fg:x="52129" fg:w="191"/><text x="47.2987%" y="543.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (187 samples, 0.17%)</title><rect x="47.0523%" y="517" width="0.1688%" height="15" fill="rgb(220,161,25)" fg:x="52133" fg:w="187"/><text x="47.3023%" y="527.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (187 samples, 0.17%)</title><rect x="47.0523%" y="501" width="0.1688%" height="15" fill="rgb(215,152,15)" fg:x="52133" fg:w="187"/><text x="47.3023%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (12 samples, 0.01%)</title><rect x="47.2472%" y="437" width="0.0108%" height="15" fill="rgb(233,192,44)" fg:x="52349" fg:w="12"/><text x="47.4972%" y="447.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (12 samples, 0.01%)</title><rect x="47.2897%" y="405" width="0.0108%" height="15" fill="rgb(240,170,46)" fg:x="52396" fg:w="12"/><text x="47.5397%" y="415.50"></text></g><g><title> (12 samples, 0.01%)</title><rect x="47.2897%" y="389" width="0.0108%" height="15" fill="rgb(207,104,33)" fg:x="52396" fg:w="12"/><text x="47.5397%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (58 samples, 0.05%)</title><rect x="47.2581%" y="437" width="0.0523%" height="15" fill="rgb(219,21,39)" fg:x="52361" fg:w="58"/><text x="47.5081%" y="447.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (43 samples, 0.04%)</title><rect x="47.2716%" y="421" width="0.0388%" height="15" fill="rgb(214,133,29)" fg:x="52376" fg:w="43"/><text x="47.5216%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (90 samples, 0.08%)</title><rect x="47.2409%" y="469" width="0.0812%" height="15" fill="rgb(226,93,6)" fg:x="52342" fg:w="90"/><text x="47.4909%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (90 samples, 0.08%)</title><rect x="47.2409%" y="453" width="0.0812%" height="15" fill="rgb(252,222,34)" fg:x="52342" fg:w="90"/><text x="47.4909%" y="463.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="47.3104%" y="437" width="0.0117%" height="15" fill="rgb(252,92,48)" fg:x="52419" fg:w="13"/><text x="47.5604%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (99 samples, 0.09%)</title><rect x="47.2409%" y="501" width="0.0894%" height="15" fill="rgb(245,223,24)" fg:x="52342" fg:w="99"/><text x="47.4909%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (99 samples, 0.09%)</title><rect x="47.2409%" y="485" width="0.0894%" height="15" fill="rgb(205,176,3)" fg:x="52342" fg:w="99"/><text x="47.4909%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (118 samples, 0.11%)</title><rect x="47.2265%" y="517" width="0.1065%" height="15" fill="rgb(235,151,15)" fg:x="52326" fg:w="118"/><text x="47.4765%" y="527.50"></text></g><g><title>rust_dealloc (128 samples, 0.12%)</title><rect x="47.2211%" y="533" width="0.1155%" height="15" fill="rgb(237,209,11)" fg:x="52320" fg:w="128"/><text x="47.4711%" y="543.50"></text></g><g><title>core::time::Duration::as_nanos (20 samples, 0.02%)</title><rect x="47.3565%" y="517" width="0.0181%" height="15" fill="rgb(243,227,24)" fg:x="52470" fg:w="20"/><text x="47.6065%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (69 samples, 0.06%)</title><rect x="47.4241%" y="469" width="0.0623%" height="15" fill="rgb(239,193,16)" fg:x="52545" fg:w="69"/><text x="47.6741%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::ge (69 samples, 0.06%)</title><rect x="47.4241%" y="453" width="0.0623%" height="15" fill="rgb(231,27,9)" fg:x="52545" fg:w="69"/><text x="47.6741%" y="463.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (68 samples, 0.06%)</title><rect x="47.4250%" y="437" width="0.0614%" height="15" fill="rgb(219,169,10)" fg:x="52546" fg:w="68"/><text x="47.6750%" y="447.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (68 samples, 0.06%)</title><rect x="47.4250%" y="421" width="0.0614%" height="15" fill="rgb(244,229,43)" fg:x="52546" fg:w="68"/><text x="47.6750%" y="431.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (68 samples, 0.06%)</title><rect x="47.4250%" y="405" width="0.0614%" height="15" fill="rgb(254,38,20)" fg:x="52546" fg:w="68"/><text x="47.6750%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (41 samples, 0.04%)</title><rect x="47.4494%" y="389" width="0.0370%" height="15" fill="rgb(250,47,30)" fg:x="52573" fg:w="41"/><text x="47.6994%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (141 samples, 0.13%)</title><rect x="47.3745%" y="501" width="0.1273%" height="15" fill="rgb(224,124,36)" fg:x="52490" fg:w="141"/><text x="47.6245%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (141 samples, 0.13%)</title><rect x="47.3745%" y="485" width="0.1273%" height="15" fill="rgb(246,68,51)" fg:x="52490" fg:w="141"/><text x="47.6245%" y="495.50"></text></g><g><title>core::time::Duration::new (17 samples, 0.02%)</title><rect x="47.4864%" y="469" width="0.0153%" height="15" fill="rgb(253,43,49)" fg:x="52614" fg:w="17"/><text x="47.7364%" y="479.50"></text></g><g><title>std::time::SystemTime::duration_since (148 samples, 0.13%)</title><rect x="47.3745%" y="517" width="0.1336%" height="15" fill="rgb(219,54,36)" fg:x="52490" fg:w="148"/><text x="47.6245%" y="527.50"></text></g><g><title>tremor_common::time::nanotime (913 samples, 0.82%)</title><rect x="47.3366%" y="533" width="0.8240%" height="15" fill="rgb(227,133,34)" fg:x="52448" fg:w="913"/><text x="47.5866%" y="543.50"></text></g><g><title>std::time::SystemTime::now (723 samples, 0.65%)</title><rect x="47.5081%" y="517" width="0.6525%" height="15" fill="rgb(247,227,15)" fg:x="52638" fg:w="723"/><text x="47.7581%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (723 samples, 0.65%)</title><rect x="47.5081%" y="501" width="0.6525%" height="15" fill="rgb(229,96,14)" fg:x="52638" fg:w="723"/><text x="47.7581%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::now (723 samples, 0.65%)</title><rect x="47.5081%" y="485" width="0.6525%" height="15" fill="rgb(220,79,17)" fg:x="52638" fg:w="723"/><text x="47.7581%" y="495.50"></text></g><g><title>__clock_gettime_2 (587 samples, 0.53%)</title><rect x="47.6308%" y="469" width="0.5298%" height="15" fill="rgb(205,131,53)" fg:x="52774" fg:w="587"/><text x="47.8808%" y="479.50"></text></g><g><title>__vdso_clock_gettime (568 samples, 0.51%)</title><rect x="47.6480%" y="453" width="0.5126%" height="15" fill="rgb(209,50,29)" fg:x="52793" fg:w="568"/><text x="47.8980%" y="463.50"></text></g><g><title>[[vdso]] (368 samples, 0.33%)</title><rect x="47.8285%" y="437" width="0.3321%" height="15" fill="rgb(245,86,46)" fg:x="52993" fg:w="368"/><text x="48.0785%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (206 samples, 0.19%)</title><rect x="48.1733%" y="517" width="0.1859%" height="15" fill="rgb(235,66,46)" fg:x="53375" fg:w="206"/><text x="48.4233%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (12 samples, 0.01%)</title><rect x="48.3483%" y="501" width="0.0108%" height="15" fill="rgb(232,148,31)" fg:x="53569" fg:w="12"/><text x="48.5983%" y="511.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (6,702 samples, 6.05%)</title><rect x="42.3500%" y="789" width="6.0488%" height="15" fill="rgb(217,149,8)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="799.50">tremor_r..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,702 samples, 6.05%)</title><rect x="42.3500%" y="773" width="6.0488%" height="15" fill="rgb(209,183,11)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="783.50">&lt;async_f..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,702 samples, 6.05%)</title><rect x="42.3500%" y="757" width="6.0488%" height="15" fill="rgb(208,55,20)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="767.50">&lt;async_f..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (6,702 samples, 6.05%)</title><rect x="42.3500%" y="741" width="6.0488%" height="15" fill="rgb(218,39,14)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="751.50">&lt;core::t..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,702 samples, 6.05%)</title><rect x="42.3500%" y="725" width="6.0488%" height="15" fill="rgb(216,169,33)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="735.50">&lt;async_f..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (6,702 samples, 6.05%)</title><rect x="42.3500%" y="709" width="6.0488%" height="15" fill="rgb(233,80,24)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="719.50">async_ff..</text></g><g><title>std::panic::catch_unwind (6,702 samples, 6.05%)</title><rect x="42.3500%" y="693" width="6.0488%" height="15" fill="rgb(213,179,31)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="703.50">std::pan..</text></g><g><title>std::panicking::try (6,702 samples, 6.05%)</title><rect x="42.3500%" y="677" width="6.0488%" height="15" fill="rgb(209,19,5)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="687.50">std::pan..</text></g><g><title>std::panicking::try::do_call (6,702 samples, 6.05%)</title><rect x="42.3500%" y="661" width="6.0488%" height="15" fill="rgb(219,18,35)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="671.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,702 samples, 6.05%)</title><rect x="42.3500%" y="645" width="6.0488%" height="15" fill="rgb(209,169,16)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="655.50">&lt;core::p..</text></g><g><title>core::ops::function::FnOnce::call_once (6,702 samples, 6.05%)</title><rect x="42.3500%" y="629" width="6.0488%" height="15" fill="rgb(245,90,51)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="639.50">core::op..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (6,702 samples, 6.05%)</title><rect x="42.3500%" y="613" width="6.0488%" height="15" fill="rgb(220,99,45)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="623.50">async_ff..</text></g><g><title>async_ffi::FfiContext::with_context (6,702 samples, 6.05%)</title><rect x="42.3500%" y="597" width="6.0488%" height="15" fill="rgb(249,89,25)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="607.50">async_ff..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (6,702 samples, 6.05%)</title><rect x="42.3500%" y="581" width="6.0488%" height="15" fill="rgb(239,193,0)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="591.50">async_ff..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,702 samples, 6.05%)</title><rect x="42.3500%" y="565" width="6.0488%" height="15" fill="rgb(231,126,1)" fg:x="46923" fg:w="6702"/><text x="42.6000%" y="575.50">&lt;core::f..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (6,639 samples, 5.99%)</title><rect x="42.4069%" y="549" width="5.9920%" height="15" fill="rgb(243,166,3)" fg:x="46986" fg:w="6639"/><text x="42.6569%" y="559.50">&lt;tremor_..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (264 samples, 0.24%)</title><rect x="48.1606%" y="533" width="0.2383%" height="15" fill="rgb(223,22,34)" fg:x="53361" fg:w="264"/><text x="48.4106%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::_::&lt;impl tremor_runtime::connectors::sink::EventSerializerOpaque_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::serialize (44 samples, 0.04%)</title><rect x="48.3592%" y="517" width="0.0397%" height="15" fill="rgb(251,52,51)" fg:x="53581" fg:w="44"/><text x="48.6092%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (35 samples, 0.03%)</title><rect x="48.6074%" y="757" width="0.0316%" height="15" fill="rgb(221,165,28)" fg:x="53856" fg:w="35"/><text x="48.8574%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (35 samples, 0.03%)</title><rect x="48.6074%" y="741" width="0.0316%" height="15" fill="rgb(218,121,47)" fg:x="53856" fg:w="35"/><text x="48.8574%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (35 samples, 0.03%)</title><rect x="48.6074%" y="725" width="0.0316%" height="15" fill="rgb(209,120,9)" fg:x="53856" fg:w="35"/><text x="48.8574%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (17 samples, 0.02%)</title><rect x="48.6236%" y="709" width="0.0153%" height="15" fill="rgb(236,68,12)" fg:x="53874" fg:w="17"/><text x="48.8736%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (17 samples, 0.02%)</title><rect x="48.6236%" y="693" width="0.0153%" height="15" fill="rgb(225,194,26)" fg:x="53874" fg:w="17"/><text x="48.8736%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (16 samples, 0.01%)</title><rect x="48.6669%" y="677" width="0.0144%" height="15" fill="rgb(231,84,39)" fg:x="53922" fg:w="16"/><text x="48.9169%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (16 samples, 0.01%)</title><rect x="48.6669%" y="661" width="0.0144%" height="15" fill="rgb(210,11,45)" fg:x="53922" fg:w="16"/><text x="48.9169%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (16 samples, 0.01%)</title><rect x="48.6669%" y="645" width="0.0144%" height="15" fill="rgb(224,54,52)" fg:x="53922" fg:w="16"/><text x="48.9169%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (16 samples, 0.01%)</title><rect x="48.6669%" y="629" width="0.0144%" height="15" fill="rgb(238,102,14)" fg:x="53922" fg:w="16"/><text x="48.9169%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="48.6669%" y="613" width="0.0144%" height="15" fill="rgb(243,160,52)" fg:x="53922" fg:w="16"/><text x="48.9169%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (15 samples, 0.01%)</title><rect x="48.6678%" y="597" width="0.0135%" height="15" fill="rgb(216,114,19)" fg:x="53923" fg:w="15"/><text x="48.9178%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (47 samples, 0.04%)</title><rect x="48.6462%" y="693" width="0.0424%" height="15" fill="rgb(244,166,37)" fg:x="53899" fg:w="47"/><text x="48.8962%" y="703.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="48.6886%" y="677" width="0.0108%" height="15" fill="rgb(246,29,44)" fg:x="53946" fg:w="12"/><text x="48.9386%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (34 samples, 0.03%)</title><rect x="48.7319%" y="549" width="0.0307%" height="15" fill="rgb(215,56,53)" fg:x="53994" fg:w="34"/><text x="48.9819%" y="559.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (33 samples, 0.03%)</title><rect x="48.7328%" y="533" width="0.0298%" height="15" fill="rgb(217,60,2)" fg:x="53995" fg:w="33"/><text x="48.9828%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (64 samples, 0.06%)</title><rect x="48.7184%" y="597" width="0.0578%" height="15" fill="rgb(207,26,24)" fg:x="53979" fg:w="64"/><text x="48.9684%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (64 samples, 0.06%)</title><rect x="48.7184%" y="581" width="0.0578%" height="15" fill="rgb(252,210,15)" fg:x="53979" fg:w="64"/><text x="48.9684%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (64 samples, 0.06%)</title><rect x="48.7184%" y="565" width="0.0578%" height="15" fill="rgb(253,209,26)" fg:x="53979" fg:w="64"/><text x="48.9684%" y="575.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="48.7626%" y="549" width="0.0135%" height="15" fill="rgb(238,170,14)" fg:x="54028" fg:w="15"/><text x="49.0126%" y="559.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="48.7626%" y="533" width="0.0135%" height="15" fill="rgb(216,178,15)" fg:x="54028" fg:w="15"/><text x="49.0126%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (91 samples, 0.08%)</title><rect x="48.7085%" y="629" width="0.0821%" height="15" fill="rgb(250,197,2)" fg:x="53968" fg:w="91"/><text x="48.9585%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (91 samples, 0.08%)</title><rect x="48.7085%" y="613" width="0.0821%" height="15" fill="rgb(212,70,42)" fg:x="53968" fg:w="91"/><text x="48.9585%" y="623.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (16 samples, 0.01%)</title><rect x="48.7762%" y="597" width="0.0144%" height="15" fill="rgb(227,213,9)" fg:x="54043" fg:w="16"/><text x="49.0262%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (100 samples, 0.09%)</title><rect x="48.7085%" y="661" width="0.0903%" height="15" fill="rgb(245,99,25)" fg:x="53968" fg:w="100"/><text x="48.9585%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (100 samples, 0.09%)</title><rect x="48.7085%" y="645" width="0.0903%" height="15" fill="rgb(250,82,29)" fg:x="53968" fg:w="100"/><text x="48.9585%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (113 samples, 0.10%)</title><rect x="48.6994%" y="677" width="0.1020%" height="15" fill="rgb(241,226,54)" fg:x="53958" fg:w="113"/><text x="48.9494%" y="687.50"></text></g><g><title>rust_dealloc (129 samples, 0.12%)</title><rect x="48.6886%" y="693" width="0.1164%" height="15" fill="rgb(221,99,41)" fg:x="53946" fg:w="129"/><text x="48.9386%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (7,169 samples, 6.47%)</title><rect x="42.3365%" y="821" width="6.4703%" height="15" fill="rgb(213,90,21)" fg:x="46908" fg:w="7169"/><text x="42.5865%" y="831.50">tremor_r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,169 samples, 6.47%)</title><rect x="42.3365%" y="805" width="6.4703%" height="15" fill="rgb(205,208,24)" fg:x="46908" fg:w="7169"/><text x="42.5865%" y="815.50">&lt;core::f..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (452 samples, 0.41%)</title><rect x="48.3989%" y="789" width="0.4079%" height="15" fill="rgb(246,31,12)" fg:x="53625" fg:w="452"/><text x="48.6489%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (221 samples, 0.20%)</title><rect x="48.6074%" y="773" width="0.1995%" height="15" fill="rgb(213,154,6)" fg:x="53856" fg:w="221"/><text x="48.8574%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (186 samples, 0.17%)</title><rect x="48.6390%" y="757" width="0.1679%" height="15" fill="rgb(222,163,29)" fg:x="53891" fg:w="186"/><text x="48.8890%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (186 samples, 0.17%)</title><rect x="48.6390%" y="741" width="0.1679%" height="15" fill="rgb(227,201,8)" fg:x="53891" fg:w="186"/><text x="48.8890%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (186 samples, 0.17%)</title><rect x="48.6390%" y="725" width="0.1679%" height="15" fill="rgb(233,9,32)" fg:x="53891" fg:w="186"/><text x="48.8890%" y="735.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (186 samples, 0.17%)</title><rect x="48.6390%" y="709" width="0.1679%" height="15" fill="rgb(217,54,24)" fg:x="53891" fg:w="186"/><text x="48.8890%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.01%)</title><rect x="49.7328%" y="533" width="0.0108%" height="15" fill="rgb(235,192,0)" fg:x="55103" fg:w="12"/><text x="49.9828%" y="543.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="50.4179%" y="229" width="0.0108%" height="15" fill="rgb(235,45,9)" fg:x="55862" fg:w="12"/><text x="50.6679%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="50.4386%" y="213" width="0.0397%" height="15" fill="rgb(246,42,40)" fg:x="55885" fg:w="44"/><text x="50.6886%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (44 samples, 0.04%)</title><rect x="50.4386%" y="197" width="0.0397%" height="15" fill="rgb(248,111,24)" fg:x="55885" fg:w="44"/><text x="50.6886%" y="207.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (39 samples, 0.04%)</title><rect x="50.4431%" y="181" width="0.0352%" height="15" fill="rgb(249,65,22)" fg:x="55890" fg:w="39"/><text x="50.6931%" y="191.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (30 samples, 0.03%)</title><rect x="50.4513%" y="165" width="0.0271%" height="15" fill="rgb(238,111,51)" fg:x="55899" fg:w="30"/><text x="50.7013%" y="175.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (30 samples, 0.03%)</title><rect x="50.4513%" y="149" width="0.0271%" height="15" fill="rgb(250,118,22)" fg:x="55899" fg:w="30"/><text x="50.7013%" y="159.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (30 samples, 0.03%)</title><rect x="50.4513%" y="133" width="0.0271%" height="15" fill="rgb(234,84,26)" fg:x="55899" fg:w="30"/><text x="50.7013%" y="143.50"></text></g><g><title>snmalloc::FreeListIter::empty (71 samples, 0.06%)</title><rect x="50.4856%" y="213" width="0.0641%" height="15" fill="rgb(243,172,12)" fg:x="55937" fg:w="71"/><text x="50.7356%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (71 samples, 0.06%)</title><rect x="50.4856%" y="197" width="0.0641%" height="15" fill="rgb(236,150,49)" fg:x="55937" fg:w="71"/><text x="50.7356%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (707 samples, 0.64%)</title><rect x="50.4061%" y="261" width="0.6381%" height="15" fill="rgb(225,197,26)" fg:x="55849" fg:w="707"/><text x="50.6561%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (697 samples, 0.63%)</title><rect x="50.4152%" y="245" width="0.6291%" height="15" fill="rgb(214,17,42)" fg:x="55859" fg:w="697"/><text x="50.6652%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (682 samples, 0.62%)</title><rect x="50.4287%" y="229" width="0.6155%" height="15" fill="rgb(224,165,40)" fg:x="55874" fg:w="682"/><text x="50.6787%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::take (548 samples, 0.49%)</title><rect x="50.5496%" y="213" width="0.4946%" height="15" fill="rgb(246,100,4)" fg:x="56008" fg:w="548"/><text x="50.7996%" y="223.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (548 samples, 0.49%)</title><rect x="50.5496%" y="197" width="0.4946%" height="15" fill="rgb(222,103,0)" fg:x="56008" fg:w="548"/><text x="50.7996%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (772 samples, 0.70%)</title><rect x="50.3646%" y="405" width="0.6968%" height="15" fill="rgb(227,189,26)" fg:x="55803" fg:w="772"/><text x="50.6146%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (772 samples, 0.70%)</title><rect x="50.3646%" y="389" width="0.6968%" height="15" fill="rgb(214,202,17)" fg:x="55803" fg:w="772"/><text x="50.6146%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (768 samples, 0.69%)</title><rect x="50.3682%" y="373" width="0.6932%" height="15" fill="rgb(229,111,3)" fg:x="55807" fg:w="768"/><text x="50.6182%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (768 samples, 0.69%)</title><rect x="50.3682%" y="357" width="0.6932%" height="15" fill="rgb(229,172,15)" fg:x="55807" fg:w="768"/><text x="50.6182%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (768 samples, 0.69%)</title><rect x="50.3682%" y="341" width="0.6932%" height="15" fill="rgb(230,224,35)" fg:x="55807" fg:w="768"/><text x="50.6182%" y="351.50"></text></g><g><title>alloc::alloc::alloc (742 samples, 0.67%)</title><rect x="50.3917%" y="325" width="0.6697%" height="15" fill="rgb(251,141,6)" fg:x="55833" fg:w="742"/><text x="50.6417%" y="335.50"></text></g><g><title>__rg_alloc (742 samples, 0.67%)</title><rect x="50.3917%" y="309" width="0.6697%" height="15" fill="rgb(225,208,6)" fg:x="55833" fg:w="742"/><text x="50.6417%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (742 samples, 0.67%)</title><rect x="50.3917%" y="293" width="0.6697%" height="15" fill="rgb(246,181,16)" fg:x="55833" fg:w="742"/><text x="50.6417%" y="303.50"></text></g><g><title>rust_alloc (734 samples, 0.66%)</title><rect x="50.3989%" y="277" width="0.6625%" height="15" fill="rgb(227,129,36)" fg:x="55841" fg:w="734"/><text x="50.6489%" y="287.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (19 samples, 0.02%)</title><rect x="51.0442%" y="261" width="0.0171%" height="15" fill="rgb(248,117,24)" fg:x="56556" fg:w="19"/><text x="51.2942%" y="271.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (882 samples, 0.80%)</title><rect x="50.3231%" y="517" width="0.7960%" height="15" fill="rgb(214,185,35)" fg:x="55757" fg:w="882"/><text x="50.5731%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (870 samples, 0.79%)</title><rect x="50.3339%" y="501" width="0.7852%" height="15" fill="rgb(236,150,34)" fg:x="55769" fg:w="870"/><text x="50.5839%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (836 samples, 0.75%)</title><rect x="50.3646%" y="485" width="0.7545%" height="15" fill="rgb(243,228,27)" fg:x="55803" fg:w="836"/><text x="50.6146%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (836 samples, 0.75%)</title><rect x="50.3646%" y="469" width="0.7545%" height="15" fill="rgb(245,77,44)" fg:x="55803" fg:w="836"/><text x="50.6146%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (836 samples, 0.75%)</title><rect x="50.3646%" y="453" width="0.7545%" height="15" fill="rgb(235,214,42)" fg:x="55803" fg:w="836"/><text x="50.6146%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (836 samples, 0.75%)</title><rect x="50.3646%" y="437" width="0.7545%" height="15" fill="rgb(221,74,3)" fg:x="55803" fg:w="836"/><text x="50.6146%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (836 samples, 0.75%)</title><rect x="50.3646%" y="421" width="0.7545%" height="15" fill="rgb(206,121,29)" fg:x="55803" fg:w="836"/><text x="50.6146%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (64 samples, 0.06%)</title><rect x="51.0614%" y="405" width="0.0578%" height="15" fill="rgb(249,131,53)" fg:x="56575" fg:w="64"/><text x="51.3114%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (64 samples, 0.06%)</title><rect x="51.0614%" y="389" width="0.0578%" height="15" fill="rgb(236,170,29)" fg:x="56575" fg:w="64"/><text x="51.3114%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (61 samples, 0.06%)</title><rect x="51.0641%" y="373" width="0.0551%" height="15" fill="rgb(247,96,15)" fg:x="56578" fg:w="61"/><text x="51.3141%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (19 samples, 0.02%)</title><rect x="51.1291%" y="501" width="0.0171%" height="15" fill="rgb(211,210,7)" fg:x="56650" fg:w="19"/><text x="51.3791%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (19 samples, 0.02%)</title><rect x="51.1291%" y="485" width="0.0171%" height="15" fill="rgb(240,88,50)" fg:x="56650" fg:w="19"/><text x="51.3791%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (66 samples, 0.06%)</title><rect x="51.1886%" y="117" width="0.0596%" height="15" fill="rgb(209,229,26)" fg:x="56716" fg:w="66"/><text x="51.4386%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (66 samples, 0.06%)</title><rect x="51.1886%" y="101" width="0.0596%" height="15" fill="rgb(210,68,23)" fg:x="56716" fg:w="66"/><text x="51.4386%" y="111.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (59 samples, 0.05%)</title><rect x="51.1950%" y="85" width="0.0533%" height="15" fill="rgb(229,180,13)" fg:x="56723" fg:w="59"/><text x="51.4450%" y="95.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (50 samples, 0.05%)</title><rect x="51.2031%" y="69" width="0.0451%" height="15" fill="rgb(236,53,44)" fg:x="56732" fg:w="50"/><text x="51.4531%" y="79.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (50 samples, 0.05%)</title><rect x="51.2031%" y="53" width="0.0451%" height="15" fill="rgb(244,214,29)" fg:x="56732" fg:w="50"/><text x="51.4531%" y="63.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (50 samples, 0.05%)</title><rect x="51.2031%" y="37" width="0.0451%" height="15" fill="rgb(220,75,29)" fg:x="56732" fg:w="50"/><text x="51.4531%" y="47.50"></text></g><g><title>snmalloc::FreeListIter::empty (12 samples, 0.01%)</title><rect x="51.2581%" y="117" width="0.0108%" height="15" fill="rgb(214,183,37)" fg:x="56793" fg:w="12"/><text x="51.5081%" y="127.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (12 samples, 0.01%)</title><rect x="51.2581%" y="101" width="0.0108%" height="15" fill="rgb(239,117,29)" fg:x="56793" fg:w="12"/><text x="51.5081%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (183 samples, 0.17%)</title><rect x="51.1715%" y="165" width="0.1652%" height="15" fill="rgb(237,171,35)" fg:x="56697" fg:w="183"/><text x="51.4215%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (177 samples, 0.16%)</title><rect x="51.1769%" y="149" width="0.1598%" height="15" fill="rgb(229,178,53)" fg:x="56703" fg:w="177"/><text x="51.4269%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (169 samples, 0.15%)</title><rect x="51.1841%" y="133" width="0.1525%" height="15" fill="rgb(210,102,19)" fg:x="56711" fg:w="169"/><text x="51.4341%" y="143.50"></text></g><g><title>snmalloc::FreeListIter::take (75 samples, 0.07%)</title><rect x="51.2690%" y="117" width="0.0677%" height="15" fill="rgb(235,127,22)" fg:x="56805" fg:w="75"/><text x="51.5190%" y="127.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (75 samples, 0.07%)</title><rect x="51.2690%" y="101" width="0.0677%" height="15" fill="rgb(244,31,31)" fg:x="56805" fg:w="75"/><text x="51.5190%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (211 samples, 0.19%)</title><rect x="51.1480%" y="309" width="0.1904%" height="15" fill="rgb(231,43,21)" fg:x="56671" fg:w="211"/><text x="51.3980%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (211 samples, 0.19%)</title><rect x="51.1480%" y="293" width="0.1904%" height="15" fill="rgb(217,131,35)" fg:x="56671" fg:w="211"/><text x="51.3980%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (205 samples, 0.19%)</title><rect x="51.1535%" y="277" width="0.1850%" height="15" fill="rgb(221,149,4)" fg:x="56677" fg:w="205"/><text x="51.4035%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (205 samples, 0.19%)</title><rect x="51.1535%" y="261" width="0.1850%" height="15" fill="rgb(232,170,28)" fg:x="56677" fg:w="205"/><text x="51.4035%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (205 samples, 0.19%)</title><rect x="51.1535%" y="245" width="0.1850%" height="15" fill="rgb(238,56,10)" fg:x="56677" fg:w="205"/><text x="51.4035%" y="255.50"></text></g><g><title>alloc::alloc::alloc (196 samples, 0.18%)</title><rect x="51.1616%" y="229" width="0.1769%" height="15" fill="rgb(235,196,14)" fg:x="56686" fg:w="196"/><text x="51.4116%" y="239.50"></text></g><g><title>__rg_alloc (196 samples, 0.18%)</title><rect x="51.1616%" y="213" width="0.1769%" height="15" fill="rgb(216,45,48)" fg:x="56686" fg:w="196"/><text x="51.4116%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (196 samples, 0.18%)</title><rect x="51.1616%" y="197" width="0.1769%" height="15" fill="rgb(238,213,17)" fg:x="56686" fg:w="196"/><text x="51.4116%" y="207.50"></text></g><g><title>rust_alloc (187 samples, 0.17%)</title><rect x="51.1697%" y="181" width="0.1688%" height="15" fill="rgb(212,13,2)" fg:x="56695" fg:w="187"/><text x="51.4197%" y="191.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (247 samples, 0.22%)</title><rect x="51.1462%" y="421" width="0.2229%" height="15" fill="rgb(240,114,20)" fg:x="56669" fg:w="247"/><text x="51.3962%" y="431.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (247 samples, 0.22%)</title><rect x="51.1462%" y="405" width="0.2229%" height="15" fill="rgb(228,41,40)" fg:x="56669" fg:w="247"/><text x="51.3962%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (245 samples, 0.22%)</title><rect x="51.1480%" y="389" width="0.2211%" height="15" fill="rgb(244,132,35)" fg:x="56671" fg:w="245"/><text x="51.3980%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (245 samples, 0.22%)</title><rect x="51.1480%" y="373" width="0.2211%" height="15" fill="rgb(253,189,4)" fg:x="56671" fg:w="245"/><text x="51.3980%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (245 samples, 0.22%)</title><rect x="51.1480%" y="357" width="0.2211%" height="15" fill="rgb(224,37,19)" fg:x="56671" fg:w="245"/><text x="51.3980%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (245 samples, 0.22%)</title><rect x="51.1480%" y="341" width="0.2211%" height="15" fill="rgb(235,223,18)" fg:x="56671" fg:w="245"/><text x="51.3980%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (245 samples, 0.22%)</title><rect x="51.1480%" y="325" width="0.2211%" height="15" fill="rgb(235,163,25)" fg:x="56671" fg:w="245"/><text x="51.3980%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (34 samples, 0.03%)</title><rect x="51.3385%" y="309" width="0.0307%" height="15" fill="rgb(217,145,28)" fg:x="56882" fg:w="34"/><text x="51.5885%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.03%)</title><rect x="51.3385%" y="293" width="0.0307%" height="15" fill="rgb(223,223,32)" fg:x="56882" fg:w="34"/><text x="51.5885%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned_erms (25 samples, 0.02%)</title><rect x="51.3466%" y="277" width="0.0226%" height="15" fill="rgb(227,189,39)" fg:x="56891" fg:w="25"/><text x="51.5966%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="51.3692%" y="421" width="0.0162%" height="15" fill="rgb(248,10,22)" fg:x="56916" fg:w="18"/><text x="51.6192%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="51.4089%" y="229" width="0.0271%" height="15" fill="rgb(248,46,39)" fg:x="56960" fg:w="30"/><text x="51.6589%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (30 samples, 0.03%)</title><rect x="51.4089%" y="213" width="0.0271%" height="15" fill="rgb(248,113,48)" fg:x="56960" fg:w="30"/><text x="51.6589%" y="223.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (24 samples, 0.02%)</title><rect x="51.4143%" y="197" width="0.0217%" height="15" fill="rgb(245,16,25)" fg:x="56966" fg:w="24"/><text x="51.6643%" y="207.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (20 samples, 0.02%)</title><rect x="51.4179%" y="181" width="0.0181%" height="15" fill="rgb(249,152,16)" fg:x="56970" fg:w="20"/><text x="51.6679%" y="191.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (20 samples, 0.02%)</title><rect x="51.4179%" y="165" width="0.0181%" height="15" fill="rgb(250,16,1)" fg:x="56970" fg:w="20"/><text x="51.6679%" y="175.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (20 samples, 0.02%)</title><rect x="51.4179%" y="149" width="0.0181%" height="15" fill="rgb(249,138,3)" fg:x="56970" fg:w="20"/><text x="51.6679%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (175 samples, 0.16%)</title><rect x="51.3998%" y="277" width="0.1579%" height="15" fill="rgb(227,71,41)" fg:x="56950" fg:w="175"/><text x="51.6498%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (167 samples, 0.15%)</title><rect x="51.4071%" y="261" width="0.1507%" height="15" fill="rgb(209,184,23)" fg:x="56958" fg:w="167"/><text x="51.6571%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (166 samples, 0.15%)</title><rect x="51.4080%" y="245" width="0.1498%" height="15" fill="rgb(223,215,31)" fg:x="56959" fg:w="166"/><text x="51.6580%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::take (123 samples, 0.11%)</title><rect x="51.4468%" y="229" width="0.1110%" height="15" fill="rgb(210,146,28)" fg:x="57002" fg:w="123"/><text x="51.6968%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (123 samples, 0.11%)</title><rect x="51.4468%" y="213" width="0.1110%" height="15" fill="rgb(209,183,41)" fg:x="57002" fg:w="123"/><text x="51.6968%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (194 samples, 0.18%)</title><rect x="51.3908%" y="373" width="0.1751%" height="15" fill="rgb(209,224,45)" fg:x="56940" fg:w="194"/><text x="51.6408%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (194 samples, 0.18%)</title><rect x="51.3908%" y="357" width="0.1751%" height="15" fill="rgb(224,209,51)" fg:x="56940" fg:w="194"/><text x="51.6408%" y="367.50"></text></g><g><title>alloc::alloc::alloc (190 samples, 0.17%)</title><rect x="51.3944%" y="341" width="0.1715%" height="15" fill="rgb(223,17,39)" fg:x="56944" fg:w="190"/><text x="51.6444%" y="351.50"></text></g><g><title>__rg_alloc (190 samples, 0.17%)</title><rect x="51.3944%" y="325" width="0.1715%" height="15" fill="rgb(234,204,37)" fg:x="56944" fg:w="190"/><text x="51.6444%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (190 samples, 0.17%)</title><rect x="51.3944%" y="309" width="0.1715%" height="15" fill="rgb(236,120,5)" fg:x="56944" fg:w="190"/><text x="51.6444%" y="319.50"></text></g><g><title>rust_alloc (184 samples, 0.17%)</title><rect x="51.3998%" y="293" width="0.1661%" height="15" fill="rgb(248,97,27)" fg:x="56950" fg:w="184"/><text x="51.6498%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (208 samples, 0.19%)</title><rect x="51.3899%" y="421" width="0.1877%" height="15" fill="rgb(240,66,17)" fg:x="56939" fg:w="208"/><text x="51.6399%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (208 samples, 0.19%)</title><rect x="51.3899%" y="405" width="0.1877%" height="15" fill="rgb(210,79,3)" fg:x="56939" fg:w="208"/><text x="51.6399%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (207 samples, 0.19%)</title><rect x="51.3908%" y="389" width="0.1868%" height="15" fill="rgb(214,176,27)" fg:x="56940" fg:w="207"/><text x="51.6408%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (13 samples, 0.01%)</title><rect x="51.5659%" y="373" width="0.0117%" height="15" fill="rgb(235,185,3)" fg:x="57134" fg:w="13"/><text x="51.8159%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (12 samples, 0.01%)</title><rect x="51.5668%" y="357" width="0.0108%" height="15" fill="rgb(227,24,12)" fg:x="57135" fg:w="12"/><text x="51.8168%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (12 samples, 0.01%)</title><rect x="51.5668%" y="341" width="0.0108%" height="15" fill="rgb(252,169,48)" fg:x="57135" fg:w="12"/><text x="51.8168%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (491 samples, 0.44%)</title><rect x="51.1462%" y="437" width="0.4431%" height="15" fill="rgb(212,65,1)" fg:x="56669" fg:w="491"/><text x="51.3962%" y="447.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (13 samples, 0.01%)</title><rect x="51.5776%" y="421" width="0.0117%" height="15" fill="rgb(242,39,24)" fg:x="57147" fg:w="13"/><text x="51.8276%" y="431.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (2,053 samples, 1.85%)</title><rect x="49.7437%" y="533" width="1.8529%" height="15" fill="rgb(249,32,23)" fg:x="55115" fg:w="2053"/><text x="49.9937%" y="543.50">&lt;..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (529 samples, 0.48%)</title><rect x="51.1192%" y="517" width="0.4774%" height="15" fill="rgb(251,195,23)" fg:x="56639" fg:w="529"/><text x="51.3692%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (499 samples, 0.45%)</title><rect x="51.1462%" y="501" width="0.4504%" height="15" fill="rgb(236,174,8)" fg:x="56669" fg:w="499"/><text x="51.3962%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (499 samples, 0.45%)</title><rect x="51.1462%" y="485" width="0.4504%" height="15" fill="rgb(220,197,8)" fg:x="56669" fg:w="499"/><text x="51.3962%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (499 samples, 0.45%)</title><rect x="51.1462%" y="469" width="0.4504%" height="15" fill="rgb(240,108,37)" fg:x="56669" fg:w="499"/><text x="51.3962%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (499 samples, 0.45%)</title><rect x="51.1462%" y="453" width="0.4504%" height="15" fill="rgb(232,176,24)" fg:x="56669" fg:w="499"/><text x="51.3962%" y="463.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="51.7573%" y="277" width="0.0126%" height="15" fill="rgb(243,35,29)" fg:x="57346" fg:w="14"/><text x="52.0073%" y="287.50"></text></g><g><title>size_to_sizeclass (30 samples, 0.03%)</title><rect x="51.7708%" y="245" width="0.0271%" height="15" fill="rgb(210,37,18)" fg:x="57361" fg:w="30"/><text x="52.0208%" y="255.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (20 samples, 0.02%)</title><rect x="51.8313%" y="117" width="0.0181%" height="15" fill="rgb(224,184,40)" fg:x="57428" fg:w="20"/><text x="52.0813%" y="127.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="51.8322%" y="101" width="0.0171%" height="15" fill="rgb(236,39,29)" fg:x="57429" fg:w="19"/><text x="52.0822%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (46 samples, 0.04%)</title><rect x="51.8213%" y="165" width="0.0415%" height="15" fill="rgb(232,48,39)" fg:x="57417" fg:w="46"/><text x="52.0713%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (46 samples, 0.04%)</title><rect x="51.8213%" y="149" width="0.0415%" height="15" fill="rgb(236,34,42)" fg:x="57417" fg:w="46"/><text x="52.0713%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (42 samples, 0.04%)</title><rect x="51.8249%" y="133" width="0.0379%" height="15" fill="rgb(243,106,37)" fg:x="57421" fg:w="42"/><text x="52.0749%" y="143.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="51.8493%" y="117" width="0.0135%" height="15" fill="rgb(218,96,6)" fg:x="57448" fg:w="15"/><text x="52.0993%" y="127.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="51.8493%" y="101" width="0.0135%" height="15" fill="rgb(235,130,12)" fg:x="57448" fg:w="15"/><text x="52.0993%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (54 samples, 0.05%)</title><rect x="51.8213%" y="181" width="0.0487%" height="15" fill="rgb(231,95,0)" fg:x="57417" fg:w="54"/><text x="52.0713%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (90 samples, 0.08%)</title><rect x="51.8078%" y="197" width="0.0812%" height="15" fill="rgb(228,12,23)" fg:x="57402" fg:w="90"/><text x="52.0578%" y="207.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (20 samples, 0.02%)</title><rect x="51.8710%" y="181" width="0.0181%" height="15" fill="rgb(216,12,1)" fg:x="57472" fg:w="20"/><text x="52.1210%" y="191.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (20 samples, 0.02%)</title><rect x="51.8710%" y="165" width="0.0181%" height="15" fill="rgb(219,59,3)" fg:x="57472" fg:w="20"/><text x="52.1210%" y="175.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (20 samples, 0.02%)</title><rect x="51.8710%" y="149" width="0.0181%" height="15" fill="rgb(215,208,46)" fg:x="57472" fg:w="20"/><text x="52.1210%" y="159.50"></text></g><g><title>snmalloc::bits::align_down (20 samples, 0.02%)</title><rect x="51.8710%" y="133" width="0.0181%" height="15" fill="rgb(254,224,29)" fg:x="57472" fg:w="20"/><text x="52.1210%" y="143.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (52 samples, 0.05%)</title><rect x="51.9107%" y="181" width="0.0469%" height="15" fill="rgb(232,14,29)" fg:x="57516" fg:w="52"/><text x="52.1607%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (501 samples, 0.45%)</title><rect x="51.8078%" y="229" width="0.4522%" height="15" fill="rgb(208,45,52)" fg:x="57402" fg:w="501"/><text x="52.0578%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (501 samples, 0.45%)</title><rect x="51.8078%" y="213" width="0.4522%" height="15" fill="rgb(234,191,28)" fg:x="57402" fg:w="501"/><text x="52.0578%" y="223.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (411 samples, 0.37%)</title><rect x="51.8890%" y="197" width="0.3709%" height="15" fill="rgb(244,67,43)" fg:x="57492" fg:w="411"/><text x="52.1390%" y="207.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (335 samples, 0.30%)</title><rect x="51.9576%" y="181" width="0.3024%" height="15" fill="rgb(236,189,24)" fg:x="57568" fg:w="335"/><text x="52.2076%" y="191.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (335 samples, 0.30%)</title><rect x="51.9576%" y="165" width="0.3024%" height="15" fill="rgb(239,214,33)" fg:x="57568" fg:w="335"/><text x="52.2076%" y="175.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (335 samples, 0.30%)</title><rect x="51.9576%" y="149" width="0.3024%" height="15" fill="rgb(226,176,41)" fg:x="57568" fg:w="335"/><text x="52.2076%" y="159.50"></text></g><g><title>snmalloc::FreeListIter::take (13 samples, 0.01%)</title><rect x="52.2717%" y="197" width="0.0117%" height="15" fill="rgb(248,47,8)" fg:x="57916" fg:w="13"/><text x="52.5217%" y="207.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (13 samples, 0.01%)</title><rect x="52.2717%" y="181" width="0.0117%" height="15" fill="rgb(218,81,44)" fg:x="57916" fg:w="13"/><text x="52.5217%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.02%)</title><rect x="52.2600%" y="229" width="0.0244%" height="15" fill="rgb(213,98,6)" fg:x="57903" fg:w="27"/><text x="52.5100%" y="239.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (25 samples, 0.02%)</title><rect x="52.2618%" y="213" width="0.0226%" height="15" fill="rgb(222,85,22)" fg:x="57905" fg:w="25"/><text x="52.5118%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (25 samples, 0.02%)</title><rect x="52.2861%" y="181" width="0.0226%" height="15" fill="rgb(239,46,39)" fg:x="57932" fg:w="25"/><text x="52.5361%" y="191.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (17 samples, 0.02%)</title><rect x="52.2934%" y="165" width="0.0153%" height="15" fill="rgb(237,12,29)" fg:x="57940" fg:w="17"/><text x="52.5434%" y="175.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (13 samples, 0.01%)</title><rect x="52.2970%" y="149" width="0.0117%" height="15" fill="rgb(214,77,8)" fg:x="57944" fg:w="13"/><text x="52.5470%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="52.2843%" y="229" width="0.0451%" height="15" fill="rgb(217,168,37)" fg:x="57930" fg:w="50"/><text x="52.5343%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.04%)</title><rect x="52.2852%" y="213" width="0.0442%" height="15" fill="rgb(221,217,23)" fg:x="57931" fg:w="49"/><text x="52.5352%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.04%)</title><rect x="52.2861%" y="197" width="0.0433%" height="15" fill="rgb(243,229,36)" fg:x="57932" fg:w="48"/><text x="52.5361%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="52.3087%" y="181" width="0.0208%" height="15" fill="rgb(251,163,40)" fg:x="57957" fg:w="23"/><text x="52.5587%" y="191.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (17 samples, 0.02%)</title><rect x="52.3141%" y="165" width="0.0153%" height="15" fill="rgb(237,222,12)" fg:x="57963" fg:w="17"/><text x="52.5641%" y="175.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (13 samples, 0.01%)</title><rect x="52.3177%" y="149" width="0.0117%" height="15" fill="rgb(248,132,6)" fg:x="57967" fg:w="13"/><text x="52.5677%" y="159.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="52.3177%" y="133" width="0.0117%" height="15" fill="rgb(227,167,50)" fg:x="57967" fg:w="13"/><text x="52.5677%" y="143.50"></text></g><g><title>snmalloc::FreeListIter::empty (34 samples, 0.03%)</title><rect x="52.3295%" y="229" width="0.0307%" height="15" fill="rgb(242,84,37)" fg:x="57980" fg:w="34"/><text x="52.5795%" y="239.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (34 samples, 0.03%)</title><rect x="52.3295%" y="213" width="0.0307%" height="15" fill="rgb(212,4,50)" fg:x="57980" fg:w="34"/><text x="52.5795%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (818 samples, 0.74%)</title><rect x="51.7708%" y="277" width="0.7383%" height="15" fill="rgb(230,228,32)" fg:x="57361" fg:w="818"/><text x="52.0208%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (818 samples, 0.74%)</title><rect x="51.7708%" y="261" width="0.7383%" height="15" fill="rgb(248,217,23)" fg:x="57361" fg:w="818"/><text x="52.0208%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (788 samples, 0.71%)</title><rect x="51.7979%" y="245" width="0.7112%" height="15" fill="rgb(238,197,32)" fg:x="57391" fg:w="788"/><text x="52.0479%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::take (165 samples, 0.15%)</title><rect x="52.3602%" y="229" width="0.1489%" height="15" fill="rgb(236,106,1)" fg:x="58014" fg:w="165"/><text x="52.6102%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (165 samples, 0.15%)</title><rect x="52.3602%" y="213" width="0.1489%" height="15" fill="rgb(219,228,13)" fg:x="58014" fg:w="165"/><text x="52.6102%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (859 samples, 0.78%)</title><rect x="51.7356%" y="421" width="0.7753%" height="15" fill="rgb(238,30,35)" fg:x="57322" fg:w="859"/><text x="51.9856%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (859 samples, 0.78%)</title><rect x="51.7356%" y="405" width="0.7753%" height="15" fill="rgb(236,70,23)" fg:x="57322" fg:w="859"/><text x="51.9856%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (858 samples, 0.77%)</title><rect x="51.7365%" y="389" width="0.7744%" height="15" fill="rgb(249,104,48)" fg:x="57323" fg:w="858"/><text x="51.9865%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (858 samples, 0.77%)</title><rect x="51.7365%" y="373" width="0.7744%" height="15" fill="rgb(254,117,50)" fg:x="57323" fg:w="858"/><text x="51.9865%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (858 samples, 0.77%)</title><rect x="51.7365%" y="357" width="0.7744%" height="15" fill="rgb(223,152,4)" fg:x="57323" fg:w="858"/><text x="51.9865%" y="367.50"></text></g><g><title>alloc::alloc::alloc (858 samples, 0.77%)</title><rect x="51.7365%" y="341" width="0.7744%" height="15" fill="rgb(245,6,2)" fg:x="57323" fg:w="858"/><text x="51.9865%" y="351.50"></text></g><g><title>__rg_alloc (858 samples, 0.77%)</title><rect x="51.7365%" y="325" width="0.7744%" height="15" fill="rgb(249,150,24)" fg:x="57323" fg:w="858"/><text x="51.9865%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (858 samples, 0.77%)</title><rect x="51.7365%" y="309" width="0.7744%" height="15" fill="rgb(228,185,42)" fg:x="57323" fg:w="858"/><text x="51.9865%" y="319.50"></text></g><g><title>rust_alloc (835 samples, 0.75%)</title><rect x="51.7573%" y="293" width="0.7536%" height="15" fill="rgb(226,39,33)" fg:x="57346" fg:w="835"/><text x="52.0073%" y="303.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (4,453 samples, 4.02%)</title><rect x="48.8068%" y="789" width="4.0190%" height="15" fill="rgb(221,166,19)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="799.50">trem..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,453 samples, 4.02%)</title><rect x="48.8068%" y="773" width="4.0190%" height="15" fill="rgb(209,109,2)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="783.50">&lt;asy..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,453 samples, 4.02%)</title><rect x="48.8068%" y="757" width="4.0190%" height="15" fill="rgb(252,216,26)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="767.50">&lt;asy..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (4,453 samples, 4.02%)</title><rect x="48.8068%" y="741" width="4.0190%" height="15" fill="rgb(227,173,36)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="751.50">&lt;cor..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,453 samples, 4.02%)</title><rect x="48.8068%" y="725" width="4.0190%" height="15" fill="rgb(209,90,7)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="735.50">&lt;asy..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (4,453 samples, 4.02%)</title><rect x="48.8068%" y="709" width="4.0190%" height="15" fill="rgb(250,194,11)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="719.50">asyn..</text></g><g><title>std::panic::catch_unwind (4,453 samples, 4.02%)</title><rect x="48.8068%" y="693" width="4.0190%" height="15" fill="rgb(220,72,50)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="703.50">std:..</text></g><g><title>std::panicking::try (4,453 samples, 4.02%)</title><rect x="48.8068%" y="677" width="4.0190%" height="15" fill="rgb(222,106,48)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="687.50">std:..</text></g><g><title>std::panicking::try::do_call (4,453 samples, 4.02%)</title><rect x="48.8068%" y="661" width="4.0190%" height="15" fill="rgb(216,220,45)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="671.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,453 samples, 4.02%)</title><rect x="48.8068%" y="645" width="4.0190%" height="15" fill="rgb(234,112,18)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="655.50">&lt;cor..</text></g><g><title>core::ops::function::FnOnce::call_once (4,453 samples, 4.02%)</title><rect x="48.8068%" y="629" width="4.0190%" height="15" fill="rgb(206,179,9)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="639.50">core..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (4,453 samples, 4.02%)</title><rect x="48.8068%" y="613" width="4.0190%" height="15" fill="rgb(215,115,40)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="623.50">asyn..</text></g><g><title>async_ffi::FfiContext::with_context (4,453 samples, 4.02%)</title><rect x="48.8068%" y="597" width="4.0190%" height="15" fill="rgb(222,69,34)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="607.50">asyn..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (4,453 samples, 4.02%)</title><rect x="48.8068%" y="581" width="4.0190%" height="15" fill="rgb(209,161,10)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="591.50">asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,453 samples, 4.02%)</title><rect x="48.8068%" y="565" width="4.0190%" height="15" fill="rgb(217,6,38)" fg:x="54077" fg:w="4453"/><text x="49.0568%" y="575.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (4,381 samples, 3.95%)</title><rect x="48.8718%" y="549" width="3.9540%" height="15" fill="rgb(229,229,48)" fg:x="54149" fg:w="4381"/><text x="49.1218%" y="559.50">&lt;tre..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,362 samples, 1.23%)</title><rect x="51.5966%" y="533" width="1.2293%" height="15" fill="rgb(225,21,28)" fg:x="57168" fg:w="1362"/><text x="51.8466%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (1,246 samples, 1.12%)</title><rect x="51.7013%" y="517" width="1.1246%" height="15" fill="rgb(206,33,13)" fg:x="57284" fg:w="1246"/><text x="51.9513%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (1,208 samples, 1.09%)</title><rect x="51.7356%" y="501" width="1.0903%" height="15" fill="rgb(242,178,17)" fg:x="57322" fg:w="1208"/><text x="51.9856%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,208 samples, 1.09%)</title><rect x="51.7356%" y="485" width="1.0903%" height="15" fill="rgb(220,162,5)" fg:x="57322" fg:w="1208"/><text x="51.9856%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,208 samples, 1.09%)</title><rect x="51.7356%" y="469" width="1.0903%" height="15" fill="rgb(210,33,43)" fg:x="57322" fg:w="1208"/><text x="51.9856%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1,208 samples, 1.09%)</title><rect x="51.7356%" y="453" width="1.0903%" height="15" fill="rgb(216,116,54)" fg:x="57322" fg:w="1208"/><text x="51.9856%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,208 samples, 1.09%)</title><rect x="51.7356%" y="437" width="1.0903%" height="15" fill="rgb(249,92,24)" fg:x="57322" fg:w="1208"/><text x="51.9856%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (349 samples, 0.31%)</title><rect x="52.5109%" y="421" width="0.3150%" height="15" fill="rgb(231,189,14)" fg:x="58181" fg:w="349"/><text x="52.7609%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (349 samples, 0.31%)</title><rect x="52.5109%" y="405" width="0.3150%" height="15" fill="rgb(230,8,41)" fg:x="58181" fg:w="349"/><text x="52.7609%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (343 samples, 0.31%)</title><rect x="52.5163%" y="389" width="0.3096%" height="15" fill="rgb(249,7,27)" fg:x="58187" fg:w="343"/><text x="52.7663%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.01%)</title><rect x="53.0118%" y="741" width="0.0117%" height="15" fill="rgb(232,86,5)" fg:x="58736" fg:w="13"/><text x="53.2618%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (325 samples, 0.29%)</title><rect x="53.0334%" y="741" width="0.2933%" height="15" fill="rgb(224,175,18)" fg:x="58760" fg:w="325"/><text x="53.2834%" y="751.50"></text></g><g><title>core::ptr::read (303 samples, 0.27%)</title><rect x="53.0533%" y="725" width="0.2735%" height="15" fill="rgb(220,129,12)" fg:x="58782" fg:w="303"/><text x="53.3033%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (287 samples, 0.26%)</title><rect x="53.0677%" y="709" width="0.2590%" height="15" fill="rgb(210,19,36)" fg:x="58798" fg:w="287"/><text x="53.3177%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="53.3349%" y="741" width="0.0217%" height="15" fill="rgb(219,96,14)" fg:x="59094" fg:w="24"/><text x="53.5849%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="53.3620%" y="581" width="0.0117%" height="15" fill="rgb(249,106,1)" fg:x="59124" fg:w="13"/><text x="53.6120%" y="591.50"></text></g><g><title>size_to_sizeclass (24 samples, 0.02%)</title><rect x="53.3845%" y="437" width="0.0217%" height="15" fill="rgb(249,155,20)" fg:x="59149" fg:w="24"/><text x="53.6345%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.02%)</title><rect x="53.4098%" y="421" width="0.0244%" height="15" fill="rgb(244,168,9)" fg:x="59177" fg:w="27"/><text x="53.6598%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (27 samples, 0.02%)</title><rect x="53.4098%" y="405" width="0.0244%" height="15" fill="rgb(216,23,50)" fg:x="59177" fg:w="27"/><text x="53.6598%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (20 samples, 0.02%)</title><rect x="53.4161%" y="389" width="0.0181%" height="15" fill="rgb(224,219,20)" fg:x="59184" fg:w="20"/><text x="53.6661%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (18 samples, 0.02%)</title><rect x="53.4179%" y="373" width="0.0162%" height="15" fill="rgb(222,156,15)" fg:x="59186" fg:w="18"/><text x="53.6679%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="53.4179%" y="357" width="0.0162%" height="15" fill="rgb(231,97,17)" fg:x="59186" fg:w="18"/><text x="53.6679%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="53.4179%" y="341" width="0.0162%" height="15" fill="rgb(218,70,48)" fg:x="59186" fg:w="18"/><text x="53.6679%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (50 samples, 0.05%)</title><rect x="53.4351%" y="421" width="0.0451%" height="15" fill="rgb(212,196,52)" fg:x="59205" fg:w="50"/><text x="53.6851%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (50 samples, 0.05%)</title><rect x="53.4351%" y="405" width="0.0451%" height="15" fill="rgb(243,203,18)" fg:x="59205" fg:w="50"/><text x="53.6851%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (441 samples, 0.40%)</title><rect x="53.3845%" y="469" width="0.3980%" height="15" fill="rgb(252,125,41)" fg:x="59149" fg:w="441"/><text x="53.6345%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (441 samples, 0.40%)</title><rect x="53.3845%" y="453" width="0.3980%" height="15" fill="rgb(223,180,33)" fg:x="59149" fg:w="441"/><text x="53.6345%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (417 samples, 0.38%)</title><rect x="53.4062%" y="437" width="0.3764%" height="15" fill="rgb(254,159,46)" fg:x="59173" fg:w="417"/><text x="53.6562%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (335 samples, 0.30%)</title><rect x="53.4802%" y="421" width="0.3024%" height="15" fill="rgb(254,38,10)" fg:x="59255" fg:w="335"/><text x="53.7302%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (335 samples, 0.30%)</title><rect x="53.4802%" y="405" width="0.3024%" height="15" fill="rgb(208,217,32)" fg:x="59255" fg:w="335"/><text x="53.7302%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (470 samples, 0.42%)</title><rect x="53.3620%" y="613" width="0.4242%" height="15" fill="rgb(221,120,13)" fg:x="59124" fg:w="470"/><text x="53.6120%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (470 samples, 0.42%)</title><rect x="53.3620%" y="597" width="0.4242%" height="15" fill="rgb(246,54,52)" fg:x="59124" fg:w="470"/><text x="53.6120%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (457 samples, 0.41%)</title><rect x="53.3737%" y="581" width="0.4125%" height="15" fill="rgb(242,34,25)" fg:x="59137" fg:w="457"/><text x="53.6237%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (457 samples, 0.41%)</title><rect x="53.3737%" y="565" width="0.4125%" height="15" fill="rgb(247,209,9)" fg:x="59137" fg:w="457"/><text x="53.6237%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (457 samples, 0.41%)</title><rect x="53.3737%" y="549" width="0.4125%" height="15" fill="rgb(228,71,26)" fg:x="59137" fg:w="457"/><text x="53.6237%" y="559.50"></text></g><g><title>alloc::alloc::alloc (450 samples, 0.41%)</title><rect x="53.3800%" y="533" width="0.4061%" height="15" fill="rgb(222,145,49)" fg:x="59144" fg:w="450"/><text x="53.6300%" y="543.50"></text></g><g><title>__rg_alloc (450 samples, 0.41%)</title><rect x="53.3800%" y="517" width="0.4061%" height="15" fill="rgb(218,121,17)" fg:x="59144" fg:w="450"/><text x="53.6300%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (450 samples, 0.41%)</title><rect x="53.3800%" y="501" width="0.4061%" height="15" fill="rgb(244,50,7)" fg:x="59144" fg:w="450"/><text x="53.6300%" y="511.50"></text></g><g><title>rust_alloc (450 samples, 0.41%)</title><rect x="53.3800%" y="485" width="0.4061%" height="15" fill="rgb(246,229,37)" fg:x="59144" fg:w="450"/><text x="53.6300%" y="495.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (500 samples, 0.45%)</title><rect x="53.3620%" y="741" width="0.4513%" height="15" fill="rgb(225,18,5)" fg:x="59124" fg:w="500"/><text x="53.6120%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (500 samples, 0.45%)</title><rect x="53.3620%" y="725" width="0.4513%" height="15" fill="rgb(213,204,8)" fg:x="59124" fg:w="500"/><text x="53.6120%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (500 samples, 0.45%)</title><rect x="53.3620%" y="709" width="0.4513%" height="15" fill="rgb(238,103,6)" fg:x="59124" fg:w="500"/><text x="53.6120%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (500 samples, 0.45%)</title><rect x="53.3620%" y="693" width="0.4513%" height="15" fill="rgb(222,25,35)" fg:x="59124" fg:w="500"/><text x="53.6120%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (500 samples, 0.45%)</title><rect x="53.3620%" y="677" width="0.4513%" height="15" fill="rgb(213,203,35)" fg:x="59124" fg:w="500"/><text x="53.6120%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (500 samples, 0.45%)</title><rect x="53.3620%" y="661" width="0.4513%" height="15" fill="rgb(221,79,53)" fg:x="59124" fg:w="500"/><text x="53.6120%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (500 samples, 0.45%)</title><rect x="53.3620%" y="645" width="0.4513%" height="15" fill="rgb(243,200,35)" fg:x="59124" fg:w="500"/><text x="53.6120%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (500 samples, 0.45%)</title><rect x="53.3620%" y="629" width="0.4513%" height="15" fill="rgb(248,60,25)" fg:x="59124" fg:w="500"/><text x="53.6120%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (30 samples, 0.03%)</title><rect x="53.7862%" y="613" width="0.0271%" height="15" fill="rgb(227,53,46)" fg:x="59594" fg:w="30"/><text x="54.0362%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (30 samples, 0.03%)</title><rect x="53.7862%" y="597" width="0.0271%" height="15" fill="rgb(216,120,32)" fg:x="59594" fg:w="30"/><text x="54.0362%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (25 samples, 0.02%)</title><rect x="53.7907%" y="581" width="0.0226%" height="15" fill="rgb(220,134,1)" fg:x="59599" fg:w="25"/><text x="54.0407%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (712 samples, 0.64%)</title><rect x="53.8132%" y="741" width="0.6426%" height="15" fill="rgb(237,168,5)" fg:x="59624" fg:w="712"/><text x="54.0632%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (387 samples, 0.35%)</title><rect x="54.4730%" y="725" width="0.3493%" height="15" fill="rgb(231,100,33)" fg:x="60355" fg:w="387"/><text x="54.7230%" y="735.50"></text></g><g><title>aligned_size (17 samples, 0.02%)</title><rect x="54.8268%" y="613" width="0.0153%" height="15" fill="rgb(236,177,47)" fg:x="60747" fg:w="17"/><text x="55.0768%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (23 samples, 0.02%)</title><rect x="54.8891%" y="453" width="0.0208%" height="15" fill="rgb(235,7,49)" fg:x="60816" fg:w="23"/><text x="55.1391%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (23 samples, 0.02%)</title><rect x="54.8891%" y="437" width="0.0208%" height="15" fill="rgb(232,119,22)" fg:x="60816" fg:w="23"/><text x="55.1391%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (57 samples, 0.05%)</title><rect x="54.8773%" y="501" width="0.0514%" height="15" fill="rgb(254,73,53)" fg:x="60803" fg:w="57"/><text x="55.1273%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (57 samples, 0.05%)</title><rect x="54.8773%" y="485" width="0.0514%" height="15" fill="rgb(251,35,20)" fg:x="60803" fg:w="57"/><text x="55.1273%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (50 samples, 0.05%)</title><rect x="54.8837%" y="469" width="0.0451%" height="15" fill="rgb(241,119,20)" fg:x="60810" fg:w="50"/><text x="55.1337%" y="479.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (21 samples, 0.02%)</title><rect x="54.9098%" y="453" width="0.0190%" height="15" fill="rgb(207,102,14)" fg:x="60839" fg:w="21"/><text x="55.1598%" y="463.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (21 samples, 0.02%)</title><rect x="54.9098%" y="437" width="0.0190%" height="15" fill="rgb(248,201,50)" fg:x="60839" fg:w="21"/><text x="55.1598%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (72 samples, 0.06%)</title><rect x="54.8773%" y="517" width="0.0650%" height="15" fill="rgb(222,185,44)" fg:x="60803" fg:w="72"/><text x="55.1273%" y="527.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="54.9288%" y="501" width="0.0135%" height="15" fill="rgb(218,107,18)" fg:x="60860" fg:w="15"/><text x="55.1788%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="54.9288%" y="485" width="0.0135%" height="15" fill="rgb(237,177,39)" fg:x="60860" fg:w="15"/><text x="55.1788%" y="495.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (15 samples, 0.01%)</title><rect x="54.9288%" y="469" width="0.0135%" height="15" fill="rgb(246,69,6)" fg:x="60860" fg:w="15"/><text x="55.1788%" y="479.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="54.9288%" y="453" width="0.0135%" height="15" fill="rgb(234,208,37)" fg:x="60860" fg:w="15"/><text x="55.1788%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (113 samples, 0.10%)</title><rect x="54.8566%" y="533" width="0.1020%" height="15" fill="rgb(225,4,6)" fg:x="60780" fg:w="113"/><text x="55.1066%" y="543.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="54.9432%" y="517" width="0.0153%" height="15" fill="rgb(233,45,0)" fg:x="60876" fg:w="17"/><text x="55.1932%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="54.9432%" y="501" width="0.0153%" height="15" fill="rgb(226,136,5)" fg:x="60876" fg:w="17"/><text x="55.1932%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (17 samples, 0.02%)</title><rect x="54.9432%" y="485" width="0.0153%" height="15" fill="rgb(211,91,47)" fg:x="60876" fg:w="17"/><text x="55.1932%" y="495.50"></text></g><g><title>snmalloc::bits::align_down (17 samples, 0.02%)</title><rect x="54.9432%" y="469" width="0.0153%" height="15" fill="rgb(242,88,51)" fg:x="60876" fg:w="17"/><text x="55.1932%" y="479.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (63 samples, 0.06%)</title><rect x="54.9920%" y="517" width="0.0569%" height="15" fill="rgb(230,91,28)" fg:x="60930" fg:w="63"/><text x="55.2420%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (670 samples, 0.60%)</title><rect x="54.8566%" y="565" width="0.6047%" height="15" fill="rgb(254,186,29)" fg:x="60780" fg:w="670"/><text x="55.1066%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (670 samples, 0.60%)</title><rect x="54.8566%" y="549" width="0.6047%" height="15" fill="rgb(238,6,4)" fg:x="60780" fg:w="670"/><text x="55.1066%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (557 samples, 0.50%)</title><rect x="54.9586%" y="533" width="0.5027%" height="15" fill="rgb(221,151,16)" fg:x="60893" fg:w="557"/><text x="55.2086%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (457 samples, 0.41%)</title><rect x="55.0488%" y="517" width="0.4125%" height="15" fill="rgb(251,143,52)" fg:x="60993" fg:w="457"/><text x="55.2988%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (457 samples, 0.41%)</title><rect x="55.0488%" y="501" width="0.4125%" height="15" fill="rgb(206,90,15)" fg:x="60993" fg:w="457"/><text x="55.2988%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (457 samples, 0.41%)</title><rect x="55.0488%" y="485" width="0.4125%" height="15" fill="rgb(218,35,8)" fg:x="60993" fg:w="457"/><text x="55.2988%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (26 samples, 0.02%)</title><rect x="55.4830%" y="533" width="0.0235%" height="15" fill="rgb(239,215,6)" fg:x="61474" fg:w="26"/><text x="55.7330%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (26 samples, 0.02%)</title><rect x="55.4830%" y="517" width="0.0235%" height="15" fill="rgb(245,116,39)" fg:x="61474" fg:w="26"/><text x="55.7330%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="55.4613%" y="565" width="0.0523%" height="15" fill="rgb(242,65,28)" fg:x="61450" fg:w="58"/><text x="55.7113%" y="575.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (48 samples, 0.04%)</title><rect x="55.4703%" y="549" width="0.0433%" height="15" fill="rgb(252,132,53)" fg:x="61460" fg:w="48"/><text x="55.7203%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="55.5182%" y="533" width="0.0108%" height="15" fill="rgb(224,159,50)" fg:x="61513" fg:w="12"/><text x="55.7682%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="55.5136%" y="565" width="0.0162%" height="15" fill="rgb(224,93,4)" fg:x="61508" fg:w="18"/><text x="55.7636%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="55.5154%" y="549" width="0.0144%" height="15" fill="rgb(208,81,34)" fg:x="61510" fg:w="16"/><text x="55.7654%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (929 samples, 0.84%)</title><rect x="54.8430%" y="613" width="0.8385%" height="15" fill="rgb(233,92,54)" fg:x="60765" fg:w="929"/><text x="55.0930%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (929 samples, 0.84%)</title><rect x="54.8430%" y="597" width="0.8385%" height="15" fill="rgb(237,21,14)" fg:x="60765" fg:w="929"/><text x="55.0930%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (920 samples, 0.83%)</title><rect x="54.8512%" y="581" width="0.8303%" height="15" fill="rgb(249,128,51)" fg:x="60774" fg:w="920"/><text x="55.1012%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (162 samples, 0.15%)</title><rect x="55.5353%" y="565" width="0.1462%" height="15" fill="rgb(223,129,24)" fg:x="61532" fg:w="162"/><text x="55.7853%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (162 samples, 0.15%)</title><rect x="55.5353%" y="549" width="0.1462%" height="15" fill="rgb(231,168,25)" fg:x="61532" fg:w="162"/><text x="55.7853%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,369 samples, 1.24%)</title><rect x="54.4559%" y="741" width="1.2356%" height="15" fill="rgb(224,39,20)" fg:x="60336" fg:w="1369"/><text x="54.7059%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (963 samples, 0.87%)</title><rect x="54.8223%" y="725" width="0.8691%" height="15" fill="rgb(225,152,53)" fg:x="60742" fg:w="963"/><text x="55.0723%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (963 samples, 0.87%)</title><rect x="54.8223%" y="709" width="0.8691%" height="15" fill="rgb(252,17,24)" fg:x="60742" fg:w="963"/><text x="55.0723%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (963 samples, 0.87%)</title><rect x="54.8223%" y="693" width="0.8691%" height="15" fill="rgb(250,114,30)" fg:x="60742" fg:w="963"/><text x="55.0723%" y="703.50"></text></g><g><title>alloc::alloc::alloc (963 samples, 0.87%)</title><rect x="54.8223%" y="677" width="0.8691%" height="15" fill="rgb(229,5,4)" fg:x="60742" fg:w="963"/><text x="55.0723%" y="687.50"></text></g><g><title>__rg_alloc (963 samples, 0.87%)</title><rect x="54.8223%" y="661" width="0.8691%" height="15" fill="rgb(225,176,49)" fg:x="60742" fg:w="963"/><text x="55.0723%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (963 samples, 0.87%)</title><rect x="54.8223%" y="645" width="0.8691%" height="15" fill="rgb(224,221,49)" fg:x="60742" fg:w="963"/><text x="55.0723%" y="655.50"></text></g><g><title>rust_alloc (958 samples, 0.86%)</title><rect x="54.8268%" y="629" width="0.8646%" height="15" fill="rgb(253,169,27)" fg:x="60747" fg:w="958"/><text x="55.0768%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="55.6987%" y="645" width="0.0108%" height="15" fill="rgb(211,206,16)" fg:x="61713" fg:w="12"/><text x="55.9487%" y="655.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="55.6987%" y="693" width="0.0162%" height="15" fill="rgb(244,87,35)" fg:x="61713" fg:w="18"/><text x="55.9487%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (18 samples, 0.02%)</title><rect x="55.6987%" y="677" width="0.0162%" height="15" fill="rgb(246,28,10)" fg:x="61713" fg:w="18"/><text x="55.9487%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="55.6987%" y="661" width="0.0162%" height="15" fill="rgb(229,12,44)" fg:x="61713" fg:w="18"/><text x="55.9487%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (19 samples, 0.02%)</title><rect x="55.6987%" y="709" width="0.0171%" height="15" fill="rgb(210,145,37)" fg:x="61713" fg:w="19"/><text x="55.9487%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="55.6914%" y="725" width="0.0343%" height="15" fill="rgb(227,112,52)" fg:x="61705" fg:w="38"/><text x="55.9414%" y="735.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="55.7393%" y="693" width="0.0117%" height="15" fill="rgb(238,155,34)" fg:x="61758" fg:w="13"/><text x="55.9893%" y="703.50"></text></g><g><title>rust_dealloc (18 samples, 0.02%)</title><rect x="55.7510%" y="629" width="0.0162%" height="15" fill="rgb(239,226,36)" fg:x="61771" fg:w="18"/><text x="56.0010%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (28 samples, 0.03%)</title><rect x="55.7736%" y="629" width="0.0253%" height="15" fill="rgb(230,16,23)" fg:x="61796" fg:w="28"/><text x="56.0236%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (28 samples, 0.03%)</title><rect x="55.7736%" y="613" width="0.0253%" height="15" fill="rgb(236,171,36)" fg:x="61796" fg:w="28"/><text x="56.0236%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (26 samples, 0.02%)</title><rect x="55.7754%" y="597" width="0.0235%" height="15" fill="rgb(221,22,14)" fg:x="61798" fg:w="26"/><text x="56.0254%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (71 samples, 0.06%)</title><rect x="55.7510%" y="661" width="0.0641%" height="15" fill="rgb(242,43,11)" fg:x="61771" fg:w="71"/><text x="56.0010%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (71 samples, 0.06%)</title><rect x="55.7510%" y="645" width="0.0641%" height="15" fill="rgb(232,69,23)" fg:x="61771" fg:w="71"/><text x="56.0010%" y="655.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (18 samples, 0.02%)</title><rect x="55.7988%" y="629" width="0.0162%" height="15" fill="rgb(216,180,54)" fg:x="61824" fg:w="18"/><text x="56.0488%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (80 samples, 0.07%)</title><rect x="55.7510%" y="693" width="0.0722%" height="15" fill="rgb(216,5,24)" fg:x="61771" fg:w="80"/><text x="56.0010%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (80 samples, 0.07%)</title><rect x="55.7510%" y="677" width="0.0722%" height="15" fill="rgb(225,89,9)" fg:x="61771" fg:w="80"/><text x="56.0010%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (102 samples, 0.09%)</title><rect x="55.7357%" y="709" width="0.0921%" height="15" fill="rgb(243,75,33)" fg:x="61754" fg:w="102"/><text x="55.9857%" y="719.50"></text></g><g><title>rust_dealloc (119 samples, 0.11%)</title><rect x="55.7257%" y="725" width="0.1074%" height="15" fill="rgb(247,141,45)" fg:x="61743" fg:w="119"/><text x="55.9757%" y="735.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (14 samples, 0.01%)</title><rect x="55.8386%" y="709" width="0.0126%" height="15" fill="rgb(232,177,36)" fg:x="61868" fg:w="14"/><text x="56.0886%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (186 samples, 0.17%)</title><rect x="55.6914%" y="741" width="0.1679%" height="15" fill="rgb(219,125,36)" fg:x="61705" fg:w="186"/><text x="55.9414%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (28 samples, 0.03%)</title><rect x="55.8340%" y="725" width="0.0253%" height="15" fill="rgb(227,94,9)" fg:x="61863" fg:w="28"/><text x="56.0840%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (12 samples, 0.01%)</title><rect x="55.8593%" y="741" width="0.0108%" height="15" fill="rgb(240,34,52)" fg:x="61891" fg:w="12"/><text x="56.1093%" y="751.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="55.8593%" y="725" width="0.0108%" height="15" fill="rgb(216,45,12)" fg:x="61891" fg:w="12"/><text x="56.1093%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (14 samples, 0.01%)</title><rect x="55.8747%" y="741" width="0.0126%" height="15" fill="rgb(246,21,19)" fg:x="61908" fg:w="14"/><text x="56.1247%" y="751.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (63 samples, 0.06%)</title><rect x="55.8873%" y="741" width="0.0569%" height="15" fill="rgb(213,98,42)" fg:x="61922" fg:w="63"/><text x="56.1373%" y="751.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (63 samples, 0.06%)</title><rect x="55.8873%" y="725" width="0.0569%" height="15" fill="rgb(250,136,47)" fg:x="61922" fg:w="63"/><text x="56.1373%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (63 samples, 0.06%)</title><rect x="55.8873%" y="709" width="0.0569%" height="15" fill="rgb(251,124,27)" fg:x="61922" fg:w="63"/><text x="56.1373%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (63 samples, 0.06%)</title><rect x="55.8873%" y="693" width="0.0569%" height="15" fill="rgb(229,180,14)" fg:x="61922" fg:w="63"/><text x="56.1373%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (35 samples, 0.03%)</title><rect x="55.9126%" y="677" width="0.0316%" height="15" fill="rgb(245,216,25)" fg:x="61950" fg:w="35"/><text x="56.1626%" y="687.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (35 samples, 0.03%)</title><rect x="55.9126%" y="661" width="0.0316%" height="15" fill="rgb(251,43,5)" fg:x="61950" fg:w="35"/><text x="56.1626%" y="671.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (35 samples, 0.03%)</title><rect x="55.9126%" y="645" width="0.0316%" height="15" fill="rgb(250,128,24)" fg:x="61950" fg:w="35"/><text x="56.1626%" y="655.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (35 samples, 0.03%)</title><rect x="55.9126%" y="629" width="0.0316%" height="15" fill="rgb(217,117,27)" fg:x="61950" fg:w="35"/><text x="56.1626%" y="639.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (22 samples, 0.02%)</title><rect x="55.9243%" y="613" width="0.0199%" height="15" fill="rgb(245,147,4)" fg:x="61963" fg:w="22"/><text x="56.1743%" y="623.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,969 samples, 7.19%)</title><rect x="48.8068%" y="821" width="7.1924%" height="15" fill="rgb(242,201,35)" fg:x="54077" fg:w="7969"/><text x="49.0568%" y="831.50">tremor_run..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,969 samples, 7.19%)</title><rect x="48.8068%" y="805" width="7.1924%" height="15" fill="rgb(218,181,1)" fg:x="54077" fg:w="7969"/><text x="49.0568%" y="815.50">&lt;core::fut..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,516 samples, 3.17%)</title><rect x="52.8259%" y="789" width="3.1733%" height="15" fill="rgb(222,6,29)" fg:x="58530" fg:w="3516"/><text x="53.0759%" y="799.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,516 samples, 3.17%)</title><rect x="52.8259%" y="773" width="3.1733%" height="15" fill="rgb(208,186,3)" fg:x="58530" fg:w="3516"/><text x="53.0759%" y="783.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,504 samples, 3.16%)</title><rect x="52.8367%" y="757" width="3.1625%" height="15" fill="rgb(216,36,26)" fg:x="58542" fg:w="3504"/><text x="53.0867%" y="767.50">tre..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (53 samples, 0.05%)</title><rect x="55.9514%" y="741" width="0.0478%" height="15" fill="rgb(248,201,23)" fg:x="61993" fg:w="53"/><text x="56.2014%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (53 samples, 0.05%)</title><rect x="55.9514%" y="725" width="0.0478%" height="15" fill="rgb(251,170,31)" fg:x="61993" fg:w="53"/><text x="56.2014%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (53 samples, 0.05%)</title><rect x="55.9514%" y="709" width="0.0478%" height="15" fill="rgb(207,110,25)" fg:x="61993" fg:w="53"/><text x="56.2014%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (27 samples, 0.02%)</title><rect x="55.9748%" y="693" width="0.0244%" height="15" fill="rgb(250,54,15)" fg:x="62019" fg:w="27"/><text x="56.2248%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (193 samples, 0.17%)</title><rect x="56.0290%" y="789" width="0.1742%" height="15" fill="rgb(227,68,33)" fg:x="62079" fg:w="193"/><text x="56.2790%" y="799.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (33 samples, 0.03%)</title><rect x="56.3674%" y="773" width="0.0298%" height="15" fill="rgb(238,34,41)" fg:x="62454" fg:w="33"/><text x="56.6174%" y="783.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (27 samples, 0.02%)</title><rect x="56.3972%" y="773" width="0.0244%" height="15" fill="rgb(220,11,15)" fg:x="62487" fg:w="27"/><text x="56.6472%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.04%)</title><rect x="56.4261%" y="757" width="0.0352%" height="15" fill="rgb(246,111,35)" fg:x="62519" fg:w="39"/><text x="56.6761%" y="767.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (229 samples, 0.21%)</title><rect x="56.4261%" y="773" width="0.2067%" height="15" fill="rgb(209,88,53)" fg:x="62519" fg:w="229"/><text x="56.6761%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (190 samples, 0.17%)</title><rect x="56.4613%" y="757" width="0.1715%" height="15" fill="rgb(231,185,47)" fg:x="62558" fg:w="190"/><text x="56.7113%" y="767.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (189 samples, 0.17%)</title><rect x="56.4622%" y="741" width="0.1706%" height="15" fill="rgb(233,154,1)" fg:x="62559" fg:w="189"/><text x="56.7122%" y="751.50"></text></g><g><title>core::ptr::read (189 samples, 0.17%)</title><rect x="56.4622%" y="725" width="0.1706%" height="15" fill="rgb(225,15,46)" fg:x="62559" fg:w="189"/><text x="56.7122%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (189 samples, 0.17%)</title><rect x="56.4622%" y="709" width="0.1706%" height="15" fill="rgb(211,135,41)" fg:x="62559" fg:w="189"/><text x="56.7122%" y="719.50"></text></g><g><title>size_to_sizeclass (56 samples, 0.05%)</title><rect x="56.6644%" y="469" width="0.0505%" height="15" fill="rgb(208,54,0)" fg:x="62783" fg:w="56"/><text x="56.9144%" y="479.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="56.7014%" y="453" width="0.0135%" height="15" fill="rgb(244,136,14)" fg:x="62824" fg:w="15"/><text x="56.9514%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (27 samples, 0.02%)</title><rect x="56.7221%" y="389" width="0.0244%" height="15" fill="rgb(241,56,14)" fg:x="62847" fg:w="27"/><text x="56.9721%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (27 samples, 0.02%)</title><rect x="56.7221%" y="373" width="0.0244%" height="15" fill="rgb(205,80,24)" fg:x="62847" fg:w="27"/><text x="56.9721%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (25 samples, 0.02%)</title><rect x="56.7239%" y="357" width="0.0226%" height="15" fill="rgb(220,57,4)" fg:x="62849" fg:w="25"/><text x="56.9739%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (32 samples, 0.03%)</title><rect x="56.7221%" y="405" width="0.0289%" height="15" fill="rgb(226,193,50)" fg:x="62847" fg:w="32"/><text x="56.9721%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (38 samples, 0.03%)</title><rect x="56.7194%" y="421" width="0.0343%" height="15" fill="rgb(231,168,22)" fg:x="62844" fg:w="38"/><text x="56.9694%" y="431.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (25 samples, 0.02%)</title><rect x="56.7655%" y="405" width="0.0226%" height="15" fill="rgb(254,215,14)" fg:x="62895" fg:w="25"/><text x="57.0155%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (220 samples, 0.20%)</title><rect x="56.7194%" y="453" width="0.1986%" height="15" fill="rgb(211,115,16)" fg:x="62844" fg:w="220"/><text x="56.9694%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (220 samples, 0.20%)</title><rect x="56.7194%" y="437" width="0.1986%" height="15" fill="rgb(236,210,16)" fg:x="62844" fg:w="220"/><text x="56.9694%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (182 samples, 0.16%)</title><rect x="56.7537%" y="421" width="0.1643%" height="15" fill="rgb(221,94,12)" fg:x="62882" fg:w="182"/><text x="57.0037%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (144 samples, 0.13%)</title><rect x="56.7880%" y="405" width="0.1300%" height="15" fill="rgb(235,218,49)" fg:x="62920" fg:w="144"/><text x="57.0380%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (144 samples, 0.13%)</title><rect x="56.7880%" y="389" width="0.1300%" height="15" fill="rgb(217,114,14)" fg:x="62920" fg:w="144"/><text x="57.0380%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (144 samples, 0.13%)</title><rect x="56.7880%" y="373" width="0.1300%" height="15" fill="rgb(216,145,22)" fg:x="62920" fg:w="144"/><text x="57.0380%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::empty (87 samples, 0.08%)</title><rect x="56.9216%" y="453" width="0.0785%" height="15" fill="rgb(217,112,39)" fg:x="63068" fg:w="87"/><text x="57.1716%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (87 samples, 0.08%)</title><rect x="56.9216%" y="437" width="0.0785%" height="15" fill="rgb(225,85,32)" fg:x="63068" fg:w="87"/><text x="57.1716%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (1,037 samples, 0.94%)</title><rect x="56.6626%" y="501" width="0.9359%" height="15" fill="rgb(245,209,47)" fg:x="62781" fg:w="1037"/><text x="56.9126%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (1,036 samples, 0.94%)</title><rect x="56.6635%" y="485" width="0.9350%" height="15" fill="rgb(218,220,15)" fg:x="62782" fg:w="1036"/><text x="56.9135%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (979 samples, 0.88%)</title><rect x="56.7149%" y="469" width="0.8836%" height="15" fill="rgb(222,202,31)" fg:x="62839" fg:w="979"/><text x="56.9649%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (663 samples, 0.60%)</title><rect x="57.0001%" y="453" width="0.5984%" height="15" fill="rgb(243,203,4)" fg:x="63155" fg:w="663"/><text x="57.2501%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (663 samples, 0.60%)</title><rect x="57.0001%" y="437" width="0.5984%" height="15" fill="rgb(237,92,17)" fg:x="63155" fg:w="663"/><text x="57.2501%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,075 samples, 0.97%)</title><rect x="56.6382%" y="645" width="0.9702%" height="15" fill="rgb(231,119,7)" fg:x="62754" fg:w="1075"/><text x="56.8882%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,075 samples, 0.97%)</title><rect x="56.6382%" y="629" width="0.9702%" height="15" fill="rgb(237,82,41)" fg:x="62754" fg:w="1075"/><text x="56.8882%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,069 samples, 0.96%)</title><rect x="56.6436%" y="613" width="0.9648%" height="15" fill="rgb(226,81,48)" fg:x="62760" fg:w="1069"/><text x="56.8936%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,069 samples, 0.96%)</title><rect x="56.6436%" y="597" width="0.9648%" height="15" fill="rgb(234,70,51)" fg:x="62760" fg:w="1069"/><text x="56.8936%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,069 samples, 0.96%)</title><rect x="56.6436%" y="581" width="0.9648%" height="15" fill="rgb(251,86,4)" fg:x="62760" fg:w="1069"/><text x="56.8936%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1,060 samples, 0.96%)</title><rect x="56.6517%" y="565" width="0.9567%" height="15" fill="rgb(244,144,28)" fg:x="62769" fg:w="1060"/><text x="56.9017%" y="575.50"></text></g><g><title>__rg_alloc (1,060 samples, 0.96%)</title><rect x="56.6517%" y="549" width="0.9567%" height="15" fill="rgb(232,161,39)" fg:x="62769" fg:w="1060"/><text x="56.9017%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,060 samples, 0.96%)</title><rect x="56.6517%" y="533" width="0.9567%" height="15" fill="rgb(247,34,51)" fg:x="62769" fg:w="1060"/><text x="56.9017%" y="543.50"></text></g><g><title>rust_alloc (1,059 samples, 0.96%)</title><rect x="56.6526%" y="517" width="0.9558%" height="15" fill="rgb(225,132,2)" fg:x="62770" fg:w="1059"/><text x="56.9026%" y="527.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1,109 samples, 1.00%)</title><rect x="56.6382%" y="773" width="1.0009%" height="15" fill="rgb(209,159,44)" fg:x="62754" fg:w="1109"/><text x="56.8882%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,109 samples, 1.00%)</title><rect x="56.6382%" y="757" width="1.0009%" height="15" fill="rgb(251,214,1)" fg:x="62754" fg:w="1109"/><text x="56.8882%" y="767.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,109 samples, 1.00%)</title><rect x="56.6382%" y="741" width="1.0009%" height="15" fill="rgb(247,84,47)" fg:x="62754" fg:w="1109"/><text x="56.8882%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,109 samples, 1.00%)</title><rect x="56.6382%" y="725" width="1.0009%" height="15" fill="rgb(240,111,43)" fg:x="62754" fg:w="1109"/><text x="56.8882%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,109 samples, 1.00%)</title><rect x="56.6382%" y="709" width="1.0009%" height="15" fill="rgb(215,214,35)" fg:x="62754" fg:w="1109"/><text x="56.8882%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,109 samples, 1.00%)</title><rect x="56.6382%" y="693" width="1.0009%" height="15" fill="rgb(248,207,23)" fg:x="62754" fg:w="1109"/><text x="56.8882%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1,109 samples, 1.00%)</title><rect x="56.6382%" y="677" width="1.0009%" height="15" fill="rgb(214,186,4)" fg:x="62754" fg:w="1109"/><text x="56.8882%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,109 samples, 1.00%)</title><rect x="56.6382%" y="661" width="1.0009%" height="15" fill="rgb(220,133,22)" fg:x="62754" fg:w="1109"/><text x="56.8882%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (34 samples, 0.03%)</title><rect x="57.6084%" y="645" width="0.0307%" height="15" fill="rgb(239,134,19)" fg:x="63829" fg:w="34"/><text x="57.8584%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.03%)</title><rect x="57.6084%" y="629" width="0.0307%" height="15" fill="rgb(250,140,9)" fg:x="63829" fg:w="34"/><text x="57.8584%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (25 samples, 0.02%)</title><rect x="57.6166%" y="613" width="0.0226%" height="15" fill="rgb(225,59,14)" fg:x="63838" fg:w="25"/><text x="57.8666%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (994 samples, 0.90%)</title><rect x="57.6391%" y="773" width="0.8971%" height="15" fill="rgb(214,152,51)" fg:x="63863" fg:w="994"/><text x="57.8891%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (14 samples, 0.01%)</title><rect x="58.5363%" y="773" width="0.0126%" height="15" fill="rgb(251,227,43)" fg:x="64857" fg:w="14"/><text x="58.7863%" y="783.50"></text></g><g><title>core::mem::replace (14 samples, 0.01%)</title><rect x="58.5724%" y="741" width="0.0126%" height="15" fill="rgb(241,96,17)" fg:x="64897" fg:w="14"/><text x="58.8224%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (52 samples, 0.05%)</title><rect x="58.5489%" y="773" width="0.0469%" height="15" fill="rgb(234,198,43)" fg:x="64871" fg:w="52"/><text x="58.7989%" y="783.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.05%)</title><rect x="58.5489%" y="757" width="0.0469%" height="15" fill="rgb(220,108,29)" fg:x="64871" fg:w="52"/><text x="58.7989%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (12 samples, 0.01%)</title><rect x="58.5850%" y="741" width="0.0108%" height="15" fill="rgb(226,163,33)" fg:x="64911" fg:w="12"/><text x="58.8350%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="58.5850%" y="725" width="0.0108%" height="15" fill="rgb(205,194,45)" fg:x="64911" fg:w="12"/><text x="58.8350%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (23 samples, 0.02%)</title><rect x="58.6130%" y="773" width="0.0208%" height="15" fill="rgb(206,143,44)" fg:x="64942" fg:w="23"/><text x="58.8630%" y="783.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (12 samples, 0.01%)</title><rect x="58.6491%" y="757" width="0.0108%" height="15" fill="rgb(236,136,36)" fg:x="64982" fg:w="12"/><text x="58.8991%" y="767.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (21 samples, 0.02%)</title><rect x="58.6599%" y="725" width="0.0190%" height="15" fill="rgb(249,172,42)" fg:x="64994" fg:w="21"/><text x="58.9099%" y="735.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (227 samples, 0.20%)</title><rect x="58.6599%" y="741" width="0.2049%" height="15" fill="rgb(216,139,23)" fg:x="64994" fg:w="227"/><text x="58.9099%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (206 samples, 0.19%)</title><rect x="58.6789%" y="725" width="0.1859%" height="15" fill="rgb(207,166,20)" fg:x="65015" fg:w="206"/><text x="58.9289%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (206 samples, 0.19%)</title><rect x="58.6789%" y="709" width="0.1859%" height="15" fill="rgb(210,209,22)" fg:x="65015" fg:w="206"/><text x="58.9289%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (206 samples, 0.19%)</title><rect x="58.6789%" y="693" width="0.1859%" height="15" fill="rgb(232,118,20)" fg:x="65015" fg:w="206"/><text x="58.9289%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (206 samples, 0.19%)</title><rect x="58.6789%" y="677" width="0.1859%" height="15" fill="rgb(238,113,42)" fg:x="65015" fg:w="206"/><text x="58.9289%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (206 samples, 0.19%)</title><rect x="58.6789%" y="661" width="0.1859%" height="15" fill="rgb(231,42,5)" fg:x="65015" fg:w="206"/><text x="58.9289%" y="671.50"></text></g><g><title>__memcmp_avx2_movbe (132 samples, 0.12%)</title><rect x="58.7456%" y="645" width="0.1191%" height="15" fill="rgb(243,166,24)" fg:x="65089" fg:w="132"/><text x="58.9956%" y="655.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (257 samples, 0.23%)</title><rect x="58.6337%" y="773" width="0.2320%" height="15" fill="rgb(237,226,12)" fg:x="64965" fg:w="257"/><text x="58.8837%" y="783.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (228 samples, 0.21%)</title><rect x="58.6599%" y="757" width="0.2058%" height="15" fill="rgb(229,133,24)" fg:x="64994" fg:w="228"/><text x="58.9099%" y="767.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18,372 samples, 16.58%)</title><rect x="42.3347%" y="1109" width="16.5815%" height="15" fill="rgb(238,33,43)" fg:x="46906" fg:w="18372"/><text x="42.5847%" y="1119.50">&lt;futures_lite::future::Or&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,370 samples, 16.58%)</title><rect x="42.3365%" y="1093" width="16.5797%" height="15" fill="rgb(227,59,38)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="1103.50">&lt;core::future::from_genera..</text></g><g><title>async_executor::Executor::run::{{closure}} (18,370 samples, 16.58%)</title><rect x="42.3365%" y="1077" width="16.5797%" height="15" fill="rgb(230,97,0)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="1087.50">async_executor::Executor::..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18,370 samples, 16.58%)</title><rect x="42.3365%" y="1061" width="16.5797%" height="15" fill="rgb(250,173,50)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="1071.50">&lt;futures_lite::future::Or&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,370 samples, 16.58%)</title><rect x="42.3365%" y="1045" width="16.5797%" height="15" fill="rgb(240,15,50)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="1055.50">&lt;core::future::from_genera..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (18,370 samples, 16.58%)</title><rect x="42.3365%" y="1029" width="16.5797%" height="15" fill="rgb(221,93,22)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="1039.50">async_executor::Executor::..</text></g><g><title>async_task::runnable::Runnable::run (18,370 samples, 16.58%)</title><rect x="42.3365%" y="1013" width="16.5797%" height="15" fill="rgb(245,180,53)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="1023.50">async_task::runnable::Runn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (18,370 samples, 16.58%)</title><rect x="42.3365%" y="997" width="16.5797%" height="15" fill="rgb(231,88,51)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="1007.50">async_task::raw::RawTask&lt;F..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (18,370 samples, 16.58%)</title><rect x="42.3365%" y="981" width="16.5797%" height="15" fill="rgb(240,58,21)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="991.50">&lt;core::pin::Pin&lt;P&gt; as core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,370 samples, 16.58%)</title><rect x="42.3365%" y="965" width="16.5797%" height="15" fill="rgb(237,21,10)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="975.50">&lt;core::future::from_genera..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (18,370 samples, 16.58%)</title><rect x="42.3365%" y="949" width="16.5797%" height="15" fill="rgb(218,43,11)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="959.50">async_executor::Executor::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (18,370 samples, 16.58%)</title><rect x="42.3365%" y="933" width="16.5797%" height="15" fill="rgb(218,221,29)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="943.50">&lt;async_std::task::builder:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (18,370 samples, 16.58%)</title><rect x="42.3365%" y="917" width="16.5797%" height="15" fill="rgb(214,118,42)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="927.50">async_std::task::task_loca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18,370 samples, 16.58%)</title><rect x="42.3365%" y="901" width="16.5797%" height="15" fill="rgb(251,200,26)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="911.50">std::thread::local::LocalK..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18,370 samples, 16.58%)</title><rect x="42.3365%" y="885" width="16.5797%" height="15" fill="rgb(237,101,39)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="895.50">std::thread::local::LocalK..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (18,370 samples, 16.58%)</title><rect x="42.3365%" y="869" width="16.5797%" height="15" fill="rgb(251,117,11)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="879.50">async_std::task::task_loca..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (18,370 samples, 16.58%)</title><rect x="42.3365%" y="853" width="16.5797%" height="15" fill="rgb(216,223,23)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="863.50">&lt;async_std::task::builder:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,370 samples, 16.58%)</title><rect x="42.3365%" y="837" width="16.5797%" height="15" fill="rgb(251,54,12)" fg:x="46908" fg:w="18370"/><text x="42.5865%" y="847.50">&lt;core::future::from_genera..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,232 samples, 2.92%)</title><rect x="55.9992%" y="821" width="2.9170%" height="15" fill="rgb(254,176,54)" fg:x="62046" fg:w="3232"/><text x="56.2492%" y="831.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,232 samples, 2.92%)</title><rect x="55.9992%" y="805" width="2.9170%" height="15" fill="rgb(210,32,8)" fg:x="62046" fg:w="3232"/><text x="56.2492%" y="815.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,006 samples, 2.71%)</title><rect x="56.2032%" y="789" width="2.7130%" height="15" fill="rgb(235,52,38)" fg:x="62272" fg:w="3006"/><text x="56.4532%" y="799.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (56 samples, 0.05%)</title><rect x="58.8657%" y="773" width="0.0505%" height="15" fill="rgb(231,4,44)" fg:x="65222" fg:w="56"/><text x="59.1157%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (56 samples, 0.05%)</title><rect x="58.8657%" y="757" width="0.0505%" height="15" fill="rgb(249,2,32)" fg:x="65222" fg:w="56"/><text x="59.1157%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (56 samples, 0.05%)</title><rect x="58.8657%" y="741" width="0.0505%" height="15" fill="rgb(224,65,26)" fg:x="65222" fg:w="56"/><text x="59.1157%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (44 samples, 0.04%)</title><rect x="58.8765%" y="725" width="0.0397%" height="15" fill="rgb(250,73,40)" fg:x="65234" fg:w="44"/><text x="59.1265%" y="735.50"></text></g><g><title>async_io::driver::block_on (18,376 samples, 16.59%)</title><rect x="42.3320%" y="1125" width="16.5851%" height="15" fill="rgb(253,177,16)" fg:x="46903" fg:w="18376"/><text x="42.5820%" y="1135.50">async_io::driver::block_on</text></g><g><title>__memcpy_avx_unaligned_erms (722 samples, 0.65%)</title><rect x="59.0065%" y="869" width="0.6516%" height="15" fill="rgb(217,32,34)" fg:x="65378" fg:w="722"/><text x="59.2565%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (767 samples, 0.69%)</title><rect x="58.9740%" y="885" width="0.6923%" height="15" fill="rgb(212,7,10)" fg:x="65342" fg:w="767"/><text x="59.2240%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,029 samples, 0.93%)</title><rect x="58.9262%" y="901" width="0.9287%" height="15" fill="rgb(245,89,8)" fg:x="65289" fg:w="1029"/><text x="59.1762%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (209 samples, 0.19%)</title><rect x="59.6662%" y="885" width="0.1886%" height="15" fill="rgb(237,16,53)" fg:x="66109" fg:w="209"/><text x="59.9162%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,037 samples, 0.94%)</title><rect x="58.9198%" y="933" width="0.9359%" height="15" fill="rgb(250,204,30)" fg:x="65282" fg:w="1037"/><text x="59.1698%" y="943.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,037 samples, 0.94%)</title><rect x="58.9198%" y="917" width="0.9359%" height="15" fill="rgb(208,77,27)" fg:x="65282" fg:w="1037"/><text x="59.1698%" y="927.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (20 samples, 0.02%)</title><rect x="59.8621%" y="597" width="0.0181%" height="15" fill="rgb(250,204,28)" fg:x="66326" fg:w="20"/><text x="60.1121%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::result::RResult&lt;T,E&gt; as core::convert::From&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::from (20 samples, 0.02%)</title><rect x="59.8621%" y="581" width="0.0181%" height="15" fill="rgb(244,63,21)" fg:x="66326" fg:w="20"/><text x="60.1121%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (100 samples, 0.09%)</title><rect x="59.8874%" y="597" width="0.0903%" height="15" fill="rgb(236,85,44)" fg:x="66354" fg:w="100"/><text x="60.1374%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (91 samples, 0.08%)</title><rect x="59.8955%" y="581" width="0.0821%" height="15" fill="rgb(215,98,4)" fg:x="66363" fg:w="91"/><text x="60.1455%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (86 samples, 0.08%)</title><rect x="59.9000%" y="565" width="0.0776%" height="15" fill="rgb(235,38,11)" fg:x="66368" fg:w="86"/><text x="60.1500%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (86 samples, 0.08%)</title><rect x="59.9000%" y="549" width="0.0776%" height="15" fill="rgb(254,186,25)" fg:x="66368" fg:w="86"/><text x="60.1500%" y="559.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (86 samples, 0.08%)</title><rect x="59.9000%" y="533" width="0.0776%" height="15" fill="rgb(225,55,31)" fg:x="66368" fg:w="86"/><text x="60.1500%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (35 samples, 0.03%)</title><rect x="59.9460%" y="517" width="0.0316%" height="15" fill="rgb(211,15,21)" fg:x="66419" fg:w="35"/><text x="60.1960%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (35 samples, 0.03%)</title><rect x="59.9460%" y="501" width="0.0316%" height="15" fill="rgb(215,187,41)" fg:x="66419" fg:w="35"/><text x="60.1960%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (590 samples, 0.53%)</title><rect x="59.9966%" y="581" width="0.5325%" height="15" fill="rgb(248,69,32)" fg:x="66475" fg:w="590"/><text x="60.2466%" y="591.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (1,795 samples, 1.62%)</title><rect x="58.9198%" y="949" width="1.6201%" height="15" fill="rgb(252,102,52)" fg:x="65282" fg:w="1795"/><text x="59.1698%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (758 samples, 0.68%)</title><rect x="59.8558%" y="933" width="0.6841%" height="15" fill="rgb(253,140,32)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="943.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (758 samples, 0.68%)</title><rect x="59.8558%" y="917" width="0.6841%" height="15" fill="rgb(216,56,42)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="927.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (758 samples, 0.68%)</title><rect x="59.8558%" y="901" width="0.6841%" height="15" fill="rgb(216,184,14)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (758 samples, 0.68%)</title><rect x="59.8558%" y="885" width="0.6841%" height="15" fill="rgb(237,187,27)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="895.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (758 samples, 0.68%)</title><rect x="59.8558%" y="869" width="0.6841%" height="15" fill="rgb(219,65,3)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="879.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (758 samples, 0.68%)</title><rect x="59.8558%" y="853" width="0.6841%" height="15" fill="rgb(245,83,25)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="863.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (758 samples, 0.68%)</title><rect x="59.8558%" y="837" width="0.6841%" height="15" fill="rgb(214,205,45)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="847.50"></text></g><g><title>std::panic::catch_unwind (758 samples, 0.68%)</title><rect x="59.8558%" y="821" width="0.6841%" height="15" fill="rgb(241,20,18)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="831.50"></text></g><g><title>std::panicking::try (758 samples, 0.68%)</title><rect x="59.8558%" y="805" width="0.6841%" height="15" fill="rgb(232,163,23)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="815.50"></text></g><g><title>std::panicking::try::do_call (758 samples, 0.68%)</title><rect x="59.8558%" y="789" width="0.6841%" height="15" fill="rgb(214,5,46)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (758 samples, 0.68%)</title><rect x="59.8558%" y="773" width="0.6841%" height="15" fill="rgb(229,78,17)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (758 samples, 0.68%)</title><rect x="59.8558%" y="757" width="0.6841%" height="15" fill="rgb(248,89,10)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (758 samples, 0.68%)</title><rect x="59.8558%" y="741" width="0.6841%" height="15" fill="rgb(248,54,15)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="751.50"></text></g><g><title>async_ffi::FfiContext::with_context (758 samples, 0.68%)</title><rect x="59.8558%" y="725" width="0.6841%" height="15" fill="rgb(223,116,6)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="735.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (758 samples, 0.68%)</title><rect x="59.8558%" y="709" width="0.6841%" height="15" fill="rgb(205,125,38)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (758 samples, 0.68%)</title><rect x="59.8558%" y="693" width="0.6841%" height="15" fill="rgb(251,78,38)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="703.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (758 samples, 0.68%)</title><rect x="59.8558%" y="677" width="0.6841%" height="15" fill="rgb(253,78,28)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (758 samples, 0.68%)</title><rect x="59.8558%" y="661" width="0.6841%" height="15" fill="rgb(209,120,3)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="671.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (758 samples, 0.68%)</title><rect x="59.8558%" y="645" width="0.6841%" height="15" fill="rgb(238,229,9)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="655.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (758 samples, 0.68%)</title><rect x="59.8558%" y="629" width="0.6841%" height="15" fill="rgb(253,159,18)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (758 samples, 0.68%)</title><rect x="59.8558%" y="613" width="0.6841%" height="15" fill="rgb(244,42,34)" fg:x="66319" fg:w="758"/><text x="60.1058%" y="623.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (623 samples, 0.56%)</title><rect x="59.9776%" y="597" width="0.5623%" height="15" fill="rgb(224,8,7)" fg:x="66454" fg:w="623"/><text x="60.2276%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (92 samples, 0.08%)</title><rect x="60.5634%" y="853" width="0.0830%" height="15" fill="rgb(210,201,45)" fg:x="67103" fg:w="92"/><text x="60.8134%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="60.7637%" y="821" width="0.0135%" height="15" fill="rgb(252,185,21)" fg:x="67325" fg:w="15"/><text x="61.0137%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (414 samples, 0.37%)</title><rect x="60.8874%" y="773" width="0.3737%" height="15" fill="rgb(223,131,1)" fg:x="67462" fg:w="414"/><text x="61.1374%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (414 samples, 0.37%)</title><rect x="60.8874%" y="757" width="0.3737%" height="15" fill="rgb(245,141,16)" fg:x="67462" fg:w="414"/><text x="61.1374%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (383 samples, 0.35%)</title><rect x="61.2610%" y="773" width="0.3457%" height="15" fill="rgb(229,55,45)" fg:x="67876" fg:w="383"/><text x="61.5110%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (377 samples, 0.34%)</title><rect x="61.2664%" y="757" width="0.3403%" height="15" fill="rgb(208,92,15)" fg:x="67882" fg:w="377"/><text x="61.5164%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (916 samples, 0.83%)</title><rect x="60.7881%" y="805" width="0.8267%" height="15" fill="rgb(234,185,47)" fg:x="67352" fg:w="916"/><text x="61.0381%" y="815.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (871 samples, 0.79%)</title><rect x="60.8287%" y="789" width="0.7861%" height="15" fill="rgb(253,104,50)" fg:x="67397" fg:w="871"/><text x="61.0787%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (74 samples, 0.07%)</title><rect x="61.6311%" y="789" width="0.0668%" height="15" fill="rgb(205,70,7)" fg:x="68286" fg:w="74"/><text x="61.8811%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (72 samples, 0.06%)</title><rect x="61.6329%" y="773" width="0.0650%" height="15" fill="rgb(240,178,43)" fg:x="68288" fg:w="72"/><text x="61.8829%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.06%)</title><rect x="61.6329%" y="757" width="0.0650%" height="15" fill="rgb(214,112,2)" fg:x="68288" fg:w="72"/><text x="61.8829%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (71 samples, 0.06%)</title><rect x="61.6338%" y="741" width="0.0641%" height="15" fill="rgb(206,46,17)" fg:x="68289" fg:w="71"/><text x="61.8838%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (70 samples, 0.06%)</title><rect x="61.6347%" y="725" width="0.0632%" height="15" fill="rgb(225,220,16)" fg:x="68290" fg:w="70"/><text x="61.8847%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (70 samples, 0.06%)</title><rect x="61.6347%" y="709" width="0.0632%" height="15" fill="rgb(238,65,40)" fg:x="68290" fg:w="70"/><text x="61.8847%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (33 samples, 0.03%)</title><rect x="61.6979%" y="789" width="0.0298%" height="15" fill="rgb(230,151,21)" fg:x="68360" fg:w="33"/><text x="61.9479%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (33 samples, 0.03%)</title><rect x="61.6979%" y="773" width="0.0298%" height="15" fill="rgb(218,58,49)" fg:x="68360" fg:w="33"/><text x="61.9479%" y="783.50"></text></g><g><title>event_listener::Inner::lock (184 samples, 0.17%)</title><rect x="61.7358%" y="789" width="0.1661%" height="15" fill="rgb(219,179,14)" fg:x="68402" fg:w="184"/><text x="61.9858%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (180 samples, 0.16%)</title><rect x="61.7394%" y="773" width="0.1625%" height="15" fill="rgb(223,72,1)" fg:x="68406" fg:w="180"/><text x="61.9894%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (171 samples, 0.15%)</title><rect x="61.7475%" y="757" width="0.1543%" height="15" fill="rgb(238,126,10)" fg:x="68415" fg:w="171"/><text x="61.9975%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (170 samples, 0.15%)</title><rect x="61.7484%" y="741" width="0.1534%" height="15" fill="rgb(224,206,38)" fg:x="68416" fg:w="170"/><text x="61.9984%" y="751.50"></text></g><g><title>___pthread_mutex_lock (170 samples, 0.15%)</title><rect x="61.7484%" y="725" width="0.1534%" height="15" fill="rgb(212,201,54)" fg:x="68416" fg:w="170"/><text x="61.9984%" y="735.50"></text></g><g><title>__GI___lll_lock_wait (20 samples, 0.02%)</title><rect x="61.8838%" y="709" width="0.0181%" height="15" fill="rgb(218,154,48)" fg:x="68566" fg:w="20"/><text x="62.1338%" y="719.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (21 samples, 0.02%)</title><rect x="61.9145%" y="757" width="0.0190%" height="15" fill="rgb(232,93,24)" fg:x="68600" fg:w="21"/><text x="62.1645%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (19 samples, 0.02%)</title><rect x="61.9163%" y="741" width="0.0171%" height="15" fill="rgb(245,30,21)" fg:x="68602" fg:w="19"/><text x="62.1663%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (19 samples, 0.02%)</title><rect x="61.9163%" y="725" width="0.0171%" height="15" fill="rgb(242,148,29)" fg:x="68602" fg:w="19"/><text x="62.1663%" y="735.50"></text></g><g><title>async_executor::Sleepers::notify (14 samples, 0.01%)</title><rect x="61.9361%" y="693" width="0.0126%" height="15" fill="rgb(244,153,54)" fg:x="68624" fg:w="14"/><text x="62.1861%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (66 samples, 0.06%)</title><rect x="61.9488%" y="693" width="0.0596%" height="15" fill="rgb(252,87,22)" fg:x="68638" fg:w="66"/><text x="62.1988%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.06%)</title><rect x="61.9488%" y="677" width="0.0596%" height="15" fill="rgb(210,51,29)" fg:x="68638" fg:w="66"/><text x="62.1988%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (66 samples, 0.06%)</title><rect x="61.9488%" y="661" width="0.0596%" height="15" fill="rgb(242,136,47)" fg:x="68638" fg:w="66"/><text x="62.1988%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (66 samples, 0.06%)</title><rect x="61.9488%" y="645" width="0.0596%" height="15" fill="rgb(238,68,4)" fg:x="68638" fg:w="66"/><text x="62.1988%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (66 samples, 0.06%)</title><rect x="61.9488%" y="629" width="0.0596%" height="15" fill="rgb(242,161,30)" fg:x="68638" fg:w="66"/><text x="62.1988%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (38 samples, 0.03%)</title><rect x="62.0083%" y="693" width="0.0343%" height="15" fill="rgb(218,58,44)" fg:x="68704" fg:w="38"/><text x="62.2583%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (38 samples, 0.03%)</title><rect x="62.0083%" y="677" width="0.0343%" height="15" fill="rgb(252,125,32)" fg:x="68704" fg:w="38"/><text x="62.2583%" y="687.50"></text></g><g><title>async_executor::State::notify (205 samples, 0.19%)</title><rect x="61.9361%" y="709" width="0.1850%" height="15" fill="rgb(219,178,0)" fg:x="68624" fg:w="205"/><text x="62.1861%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (87 samples, 0.08%)</title><rect x="62.0426%" y="693" width="0.0785%" height="15" fill="rgb(213,152,7)" fg:x="68742" fg:w="87"/><text x="62.2926%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (85 samples, 0.08%)</title><rect x="62.0444%" y="677" width="0.0767%" height="15" fill="rgb(249,109,34)" fg:x="68744" fg:w="85"/><text x="62.2944%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (76 samples, 0.07%)</title><rect x="62.0526%" y="661" width="0.0686%" height="15" fill="rgb(232,96,21)" fg:x="68753" fg:w="76"/><text x="62.3026%" y="671.50"></text></g><g><title>___pthread_mutex_lock (76 samples, 0.07%)</title><rect x="62.0526%" y="645" width="0.0686%" height="15" fill="rgb(228,27,39)" fg:x="68753" fg:w="76"/><text x="62.3026%" y="655.50"></text></g><g><title>__GI___lll_lock_wait (15 samples, 0.01%)</title><rect x="62.1076%" y="629" width="0.0135%" height="15" fill="rgb(211,182,52)" fg:x="68814" fg:w="15"/><text x="62.3576%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (52 samples, 0.05%)</title><rect x="62.1365%" y="677" width="0.0469%" height="15" fill="rgb(234,178,38)" fg:x="68846" fg:w="52"/><text x="62.3865%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (52 samples, 0.05%)</title><rect x="62.1365%" y="661" width="0.0469%" height="15" fill="rgb(221,111,3)" fg:x="68846" fg:w="52"/><text x="62.3865%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (27 samples, 0.02%)</title><rect x="62.1834%" y="677" width="0.0244%" height="15" fill="rgb(228,175,21)" fg:x="68898" fg:w="27"/><text x="62.4334%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_or (27 samples, 0.02%)</title><rect x="62.1834%" y="661" width="0.0244%" height="15" fill="rgb(228,174,43)" fg:x="68898" fg:w="27"/><text x="62.4334%" y="671.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (306 samples, 0.28%)</title><rect x="61.9352%" y="725" width="0.2762%" height="15" fill="rgb(211,191,0)" fg:x="68623" fg:w="306"/><text x="62.1852%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (100 samples, 0.09%)</title><rect x="62.1212%" y="709" width="0.0903%" height="15" fill="rgb(253,117,3)" fg:x="68829" fg:w="100"/><text x="62.3712%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (93 samples, 0.08%)</title><rect x="62.1275%" y="693" width="0.0839%" height="15" fill="rgb(241,127,19)" fg:x="68836" fg:w="93"/><text x="62.3775%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (67 samples, 0.06%)</title><rect x="62.2114%" y="725" width="0.0605%" height="15" fill="rgb(218,103,12)" fg:x="68929" fg:w="67"/><text x="62.4614%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (67 samples, 0.06%)</title><rect x="62.2114%" y="709" width="0.0605%" height="15" fill="rgb(236,214,43)" fg:x="68929" fg:w="67"/><text x="62.4614%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (35 samples, 0.03%)</title><rect x="62.3116%" y="661" width="0.0316%" height="15" fill="rgb(244,144,19)" fg:x="69040" fg:w="35"/><text x="62.5616%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_swap (35 samples, 0.03%)</title><rect x="62.3116%" y="645" width="0.0316%" height="15" fill="rgb(246,188,10)" fg:x="69040" fg:w="35"/><text x="62.5616%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (47 samples, 0.04%)</title><rect x="62.3432%" y="661" width="0.0424%" height="15" fill="rgb(212,193,33)" fg:x="69075" fg:w="47"/><text x="62.5932%" y="671.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (47 samples, 0.04%)</title><rect x="62.3432%" y="645" width="0.0424%" height="15" fill="rgb(241,51,29)" fg:x="69075" fg:w="47"/><text x="62.5932%" y="655.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (47 samples, 0.04%)</title><rect x="62.3432%" y="629" width="0.0424%" height="15" fill="rgb(211,58,19)" fg:x="69075" fg:w="47"/><text x="62.5932%" y="639.50"></text></g><g><title>__GI___pthread_cond_signal (47 samples, 0.04%)</title><rect x="62.3432%" y="613" width="0.0424%" height="15" fill="rgb(229,111,26)" fg:x="69075" fg:w="47"/><text x="62.5932%" y="623.50"></text></g><g><title>parking::Unparker::unpark (130 samples, 0.12%)</title><rect x="62.2917%" y="693" width="0.1173%" height="15" fill="rgb(213,115,40)" fg:x="69018" fg:w="130"/><text x="62.5417%" y="703.50"></text></g><g><title>parking::Inner::unpark (115 samples, 0.10%)</title><rect x="62.3053%" y="677" width="0.1038%" height="15" fill="rgb(209,56,44)" fg:x="69033" fg:w="115"/><text x="62.5553%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (26 samples, 0.02%)</title><rect x="62.3856%" y="661" width="0.0235%" height="15" fill="rgb(230,108,32)" fg:x="69122" fg:w="26"/><text x="62.6356%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (26 samples, 0.02%)</title><rect x="62.3856%" y="645" width="0.0235%" height="15" fill="rgb(216,165,31)" fg:x="69122" fg:w="26"/><text x="62.6356%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (25 samples, 0.02%)</title><rect x="62.3865%" y="629" width="0.0226%" height="15" fill="rgb(218,122,21)" fg:x="69123" fg:w="25"/><text x="62.6365%" y="639.50"></text></g><g><title>___pthread_mutex_lock (25 samples, 0.02%)</title><rect x="62.3865%" y="613" width="0.0226%" height="15" fill="rgb(223,224,47)" fg:x="69123" fg:w="25"/><text x="62.6365%" y="623.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (143 samples, 0.13%)</title><rect x="62.2818%" y="709" width="0.1291%" height="15" fill="rgb(238,102,44)" fg:x="69007" fg:w="143"/><text x="62.5318%" y="719.50"></text></g><g><title>event_listener::List::notify (602 samples, 0.54%)</title><rect x="61.9018%" y="789" width="0.5433%" height="15" fill="rgb(236,46,40)" fg:x="68586" fg:w="602"/><text x="62.1518%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (590 samples, 0.53%)</title><rect x="61.9127%" y="773" width="0.5325%" height="15" fill="rgb(247,202,50)" fg:x="68598" fg:w="590"/><text x="62.1627%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (567 samples, 0.51%)</title><rect x="61.9334%" y="757" width="0.5117%" height="15" fill="rgb(209,99,20)" fg:x="68621" fg:w="567"/><text x="62.1834%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (567 samples, 0.51%)</title><rect x="61.9334%" y="741" width="0.5117%" height="15" fill="rgb(252,27,34)" fg:x="68621" fg:w="567"/><text x="62.1834%" y="751.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (181 samples, 0.16%)</title><rect x="62.2818%" y="725" width="0.1634%" height="15" fill="rgb(215,206,23)" fg:x="69007" fg:w="181"/><text x="62.5318%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (38 samples, 0.03%)</title><rect x="62.4109%" y="709" width="0.0343%" height="15" fill="rgb(212,135,36)" fg:x="69150" fg:w="38"/><text x="62.6609%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="62.4109%" y="693" width="0.0343%" height="15" fill="rgb(240,189,1)" fg:x="69150" fg:w="38"/><text x="62.6609%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (37 samples, 0.03%)</title><rect x="62.4118%" y="677" width="0.0334%" height="15" fill="rgb(242,56,20)" fg:x="69151" fg:w="37"/><text x="62.6618%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (37 samples, 0.03%)</title><rect x="62.4118%" y="661" width="0.0334%" height="15" fill="rgb(247,132,33)" fg:x="69151" fg:w="37"/><text x="62.6618%" y="671.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,607 samples, 2.35%)</title><rect x="60.7773%" y="821" width="2.3529%" height="15" fill="rgb(208,149,11)" fg:x="67340" fg:w="2607"/><text x="61.0273%" y="831.50">a..</text></g><g><title>event_listener::Event::notify (1,679 samples, 1.52%)</title><rect x="61.6148%" y="805" width="1.5154%" height="15" fill="rgb(211,33,11)" fg:x="68268" fg:w="1679"/><text x="61.8648%" y="815.50"></text></g><g><title>event_listener::full_fence (759 samples, 0.69%)</title><rect x="62.4452%" y="789" width="0.6850%" height="15" fill="rgb(221,29,38)" fg:x="69188" fg:w="759"/><text x="62.6952%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (747 samples, 0.67%)</title><rect x="62.4560%" y="773" width="0.6742%" height="15" fill="rgb(206,182,49)" fg:x="69200" fg:w="747"/><text x="62.7060%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (747 samples, 0.67%)</title><rect x="62.4560%" y="757" width="0.6742%" height="15" fill="rgb(216,140,1)" fg:x="69200" fg:w="747"/><text x="62.7060%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (28 samples, 0.03%)</title><rect x="63.1302%" y="821" width="0.0253%" height="15" fill="rgb(232,57,40)" fg:x="69947" fg:w="28"/><text x="63.3802%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (13 samples, 0.01%)</title><rect x="63.1555%" y="821" width="0.0117%" height="15" fill="rgb(224,186,18)" fg:x="69975" fg:w="13"/><text x="63.4055%" y="831.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="63.1555%" y="805" width="0.0117%" height="15" fill="rgb(215,121,11)" fg:x="69975" fg:w="13"/><text x="63.4055%" y="815.50"></text></g><g><title>event_listener::Event::listen (22 samples, 0.02%)</title><rect x="63.1681%" y="821" width="0.0199%" height="15" fill="rgb(245,147,10)" fg:x="69989" fg:w="22"/><text x="63.4181%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="63.1880%" y="805" width="0.0126%" height="15" fill="rgb(238,153,13)" fg:x="70011" fg:w="14"/><text x="63.4380%" y="815.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="63.1880%" y="789" width="0.0126%" height="15" fill="rgb(233,108,0)" fg:x="70011" fg:w="14"/><text x="63.4380%" y="799.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,962 samples, 2.67%)</title><rect x="60.7294%" y="837" width="2.6733%" height="15" fill="rgb(212,157,17)" fg:x="67287" fg:w="2962"/><text x="60.9794%" y="847.50">&lt;a..</text></g><g><title>event_listener::Event::notify (238 samples, 0.21%)</title><rect x="63.1880%" y="821" width="0.2148%" height="15" fill="rgb(225,213,38)" fg:x="70011" fg:w="238"/><text x="63.4380%" y="831.50"></text></g><g><title>event_listener::full_fence (216 samples, 0.19%)</title><rect x="63.2078%" y="805" width="0.1949%" height="15" fill="rgb(248,16,11)" fg:x="70033" fg:w="216"/><text x="63.4578%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (215 samples, 0.19%)</title><rect x="63.2087%" y="789" width="0.1940%" height="15" fill="rgb(241,33,4)" fg:x="70034" fg:w="215"/><text x="63.4587%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (215 samples, 0.19%)</title><rect x="63.2087%" y="773" width="0.1940%" height="15" fill="rgb(222,26,43)" fg:x="70034" fg:w="215"/><text x="63.4587%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,196 samples, 2.88%)</title><rect x="60.5399%" y="869" width="2.8845%" height="15" fill="rgb(243,29,36)" fg:x="67077" fg:w="3196"/><text x="60.7899%" y="879.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (3,078 samples, 2.78%)</title><rect x="60.6464%" y="853" width="2.7780%" height="15" fill="rgb(241,9,27)" fg:x="67195" fg:w="3078"/><text x="60.8964%" y="863.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="63.4028%" y="837" width="0.0217%" height="15" fill="rgb(205,117,26)" fg:x="70249" fg:w="24"/><text x="63.6528%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (12 samples, 0.01%)</title><rect x="63.4136%" y="821" width="0.0108%" height="15" fill="rgb(209,80,39)" fg:x="70261" fg:w="12"/><text x="63.6636%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (12 samples, 0.01%)</title><rect x="63.4136%" y="805" width="0.0108%" height="15" fill="rgb(239,155,6)" fg:x="70261" fg:w="12"/><text x="63.6636%" y="815.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="63.4136%" y="789" width="0.0108%" height="15" fill="rgb(212,104,12)" fg:x="70261" fg:w="12"/><text x="63.6636%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,214 samples, 2.90%)</title><rect x="60.5399%" y="901" width="2.9008%" height="15" fill="rgb(234,204,3)" fg:x="67077" fg:w="3214"/><text x="60.7899%" y="911.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,214 samples, 2.90%)</title><rect x="60.5399%" y="885" width="2.9008%" height="15" fill="rgb(251,218,7)" fg:x="67077" fg:w="3214"/><text x="60.7899%" y="895.50">tr..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (18 samples, 0.02%)</title><rect x="63.4244%" y="869" width="0.0162%" height="15" fill="rgb(221,81,32)" fg:x="70273" fg:w="18"/><text x="63.6744%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="64.1925%" y="885" width="0.0262%" height="15" fill="rgb(214,152,26)" fg:x="71124" fg:w="29"/><text x="64.4425%" y="895.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="64.2187%" y="885" width="0.0144%" height="15" fill="rgb(223,22,3)" fg:x="71153" fg:w="16"/><text x="64.4687%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (22 samples, 0.02%)</title><rect x="64.8595%" y="837" width="0.0199%" height="15" fill="rgb(207,174,7)" fg:x="71863" fg:w="22"/><text x="65.1095%" y="847.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (13 samples, 0.01%)</title><rect x="64.8676%" y="821" width="0.0117%" height="15" fill="rgb(224,19,52)" fg:x="71872" fg:w="13"/><text x="65.1176%" y="831.50"></text></g><g><title>aligned_size (26 samples, 0.02%)</title><rect x="64.9046%" y="613" width="0.0235%" height="15" fill="rgb(228,24,14)" fg:x="71913" fg:w="26"/><text x="65.1546%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="64.9542%" y="565" width="0.0325%" height="15" fill="rgb(230,153,43)" fg:x="71968" fg:w="36"/><text x="65.2042%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (36 samples, 0.03%)</title><rect x="64.9542%" y="549" width="0.0325%" height="15" fill="rgb(231,106,12)" fg:x="71968" fg:w="36"/><text x="65.2042%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (31 samples, 0.03%)</title><rect x="64.9588%" y="533" width="0.0280%" height="15" fill="rgb(215,92,2)" fg:x="71973" fg:w="31"/><text x="65.2088%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (23 samples, 0.02%)</title><rect x="64.9660%" y="517" width="0.0208%" height="15" fill="rgb(249,143,25)" fg:x="71981" fg:w="23"/><text x="65.2160%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (23 samples, 0.02%)</title><rect x="64.9660%" y="501" width="0.0208%" height="15" fill="rgb(252,7,35)" fg:x="71981" fg:w="23"/><text x="65.2160%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (23 samples, 0.02%)</title><rect x="64.9660%" y="485" width="0.0208%" height="15" fill="rgb(216,69,40)" fg:x="71981" fg:w="23"/><text x="65.2160%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (248 samples, 0.22%)</title><rect x="64.9281%" y="613" width="0.2238%" height="15" fill="rgb(240,36,33)" fg:x="71939" fg:w="248"/><text x="65.1781%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (248 samples, 0.22%)</title><rect x="64.9281%" y="597" width="0.2238%" height="15" fill="rgb(231,128,14)" fg:x="71939" fg:w="248"/><text x="65.1781%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (230 samples, 0.21%)</title><rect x="64.9443%" y="581" width="0.2076%" height="15" fill="rgb(245,143,14)" fg:x="71957" fg:w="230"/><text x="65.1943%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (175 samples, 0.16%)</title><rect x="64.9940%" y="565" width="0.1579%" height="15" fill="rgb(222,130,28)" fg:x="72012" fg:w="175"/><text x="65.2440%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (175 samples, 0.16%)</title><rect x="64.9940%" y="549" width="0.1579%" height="15" fill="rgb(212,10,48)" fg:x="72012" fg:w="175"/><text x="65.2440%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (303 samples, 0.27%)</title><rect x="64.8793%" y="757" width="0.2735%" height="15" fill="rgb(254,118,45)" fg:x="71885" fg:w="303"/><text x="65.1293%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (303 samples, 0.27%)</title><rect x="64.8793%" y="741" width="0.2735%" height="15" fill="rgb(228,6,45)" fg:x="71885" fg:w="303"/><text x="65.1293%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (303 samples, 0.27%)</title><rect x="64.8793%" y="725" width="0.2735%" height="15" fill="rgb(241,18,35)" fg:x="71885" fg:w="303"/><text x="65.1293%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (303 samples, 0.27%)</title><rect x="64.8793%" y="709" width="0.2735%" height="15" fill="rgb(227,214,53)" fg:x="71885" fg:w="303"/><text x="65.1293%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (303 samples, 0.27%)</title><rect x="64.8793%" y="693" width="0.2735%" height="15" fill="rgb(224,107,51)" fg:x="71885" fg:w="303"/><text x="65.1293%" y="703.50"></text></g><g><title>alloc::alloc::alloc (293 samples, 0.26%)</title><rect x="64.8884%" y="677" width="0.2644%" height="15" fill="rgb(248,60,28)" fg:x="71895" fg:w="293"/><text x="65.1384%" y="687.50"></text></g><g><title>__rg_alloc (293 samples, 0.26%)</title><rect x="64.8884%" y="661" width="0.2644%" height="15" fill="rgb(249,101,23)" fg:x="71895" fg:w="293"/><text x="65.1384%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (293 samples, 0.26%)</title><rect x="64.8884%" y="645" width="0.2644%" height="15" fill="rgb(228,51,19)" fg:x="71895" fg:w="293"/><text x="65.1384%" y="655.50"></text></g><g><title>rust_alloc (275 samples, 0.25%)</title><rect x="64.9046%" y="629" width="0.2482%" height="15" fill="rgb(213,20,6)" fg:x="71913" fg:w="275"/><text x="65.1546%" y="639.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (403 samples, 0.36%)</title><rect x="64.8568%" y="853" width="0.3637%" height="15" fill="rgb(212,124,10)" fg:x="71860" fg:w="403"/><text x="65.1068%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (378 samples, 0.34%)</title><rect x="64.8793%" y="837" width="0.3412%" height="15" fill="rgb(248,3,40)" fg:x="71885" fg:w="378"/><text x="65.1293%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (378 samples, 0.34%)</title><rect x="64.8793%" y="821" width="0.3412%" height="15" fill="rgb(223,178,23)" fg:x="71885" fg:w="378"/><text x="65.1293%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (378 samples, 0.34%)</title><rect x="64.8793%" y="805" width="0.3412%" height="15" fill="rgb(240,132,45)" fg:x="71885" fg:w="378"/><text x="65.1293%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (378 samples, 0.34%)</title><rect x="64.8793%" y="789" width="0.3412%" height="15" fill="rgb(245,164,36)" fg:x="71885" fg:w="378"/><text x="65.1293%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (378 samples, 0.34%)</title><rect x="64.8793%" y="773" width="0.3412%" height="15" fill="rgb(231,188,53)" fg:x="71885" fg:w="378"/><text x="65.1293%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (75 samples, 0.07%)</title><rect x="65.1528%" y="757" width="0.0677%" height="15" fill="rgb(237,198,39)" fg:x="72188" fg:w="75"/><text x="65.4028%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (75 samples, 0.07%)</title><rect x="65.1528%" y="741" width="0.0677%" height="15" fill="rgb(223,120,35)" fg:x="72188" fg:w="75"/><text x="65.4028%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (61 samples, 0.06%)</title><rect x="65.1654%" y="725" width="0.0551%" height="15" fill="rgb(253,107,49)" fg:x="72202" fg:w="61"/><text x="65.4154%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (418 samples, 0.38%)</title><rect x="64.8514%" y="869" width="0.3773%" height="15" fill="rgb(216,44,31)" fg:x="71854" fg:w="418"/><text x="65.1014%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (23 samples, 0.02%)</title><rect x="65.2349%" y="853" width="0.0208%" height="15" fill="rgb(253,87,21)" fg:x="72279" fg:w="23"/><text x="65.4849%" y="863.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (23 samples, 0.02%)</title><rect x="65.2349%" y="837" width="0.0208%" height="15" fill="rgb(226,18,2)" fg:x="72279" fg:w="23"/><text x="65.4849%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (90 samples, 0.08%)</title><rect x="65.2882%" y="517" width="0.0812%" height="15" fill="rgb(216,8,46)" fg:x="72338" fg:w="90"/><text x="65.5382%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (86 samples, 0.08%)</title><rect x="65.2918%" y="501" width="0.0776%" height="15" fill="rgb(226,140,39)" fg:x="72342" fg:w="86"/><text x="65.5418%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (82 samples, 0.07%)</title><rect x="65.2954%" y="485" width="0.0740%" height="15" fill="rgb(221,194,54)" fg:x="72346" fg:w="82"/><text x="65.5454%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (73 samples, 0.07%)</title><rect x="65.3035%" y="469" width="0.0659%" height="15" fill="rgb(213,92,11)" fg:x="72355" fg:w="73"/><text x="65.5535%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (73 samples, 0.07%)</title><rect x="65.3035%" y="453" width="0.0659%" height="15" fill="rgb(229,162,46)" fg:x="72355" fg:w="73"/><text x="65.5535%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (119 samples, 0.11%)</title><rect x="65.2665%" y="661" width="0.1074%" height="15" fill="rgb(214,111,36)" fg:x="72314" fg:w="119"/><text x="65.5165%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (119 samples, 0.11%)</title><rect x="65.2665%" y="645" width="0.1074%" height="15" fill="rgb(207,6,21)" fg:x="72314" fg:w="119"/><text x="65.5165%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (119 samples, 0.11%)</title><rect x="65.2665%" y="629" width="0.1074%" height="15" fill="rgb(213,127,38)" fg:x="72314" fg:w="119"/><text x="65.5165%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (119 samples, 0.11%)</title><rect x="65.2665%" y="613" width="0.1074%" height="15" fill="rgb(238,118,32)" fg:x="72314" fg:w="119"/><text x="65.5165%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (119 samples, 0.11%)</title><rect x="65.2665%" y="597" width="0.1074%" height="15" fill="rgb(240,139,39)" fg:x="72314" fg:w="119"/><text x="65.5165%" y="607.50"></text></g><g><title>alloc::alloc::alloc (117 samples, 0.11%)</title><rect x="65.2683%" y="581" width="0.1056%" height="15" fill="rgb(235,10,37)" fg:x="72316" fg:w="117"/><text x="65.5183%" y="591.50"></text></g><g><title>__rg_alloc (117 samples, 0.11%)</title><rect x="65.2683%" y="565" width="0.1056%" height="15" fill="rgb(249,171,38)" fg:x="72316" fg:w="117"/><text x="65.5183%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (117 samples, 0.11%)</title><rect x="65.2683%" y="549" width="0.1056%" height="15" fill="rgb(242,144,32)" fg:x="72316" fg:w="117"/><text x="65.5183%" y="559.50"></text></g><g><title>rust_alloc (103 samples, 0.09%)</title><rect x="65.2810%" y="533" width="0.0930%" height="15" fill="rgb(217,117,21)" fg:x="72330" fg:w="103"/><text x="65.5310%" y="543.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (182 samples, 0.16%)</title><rect x="65.2557%" y="773" width="0.1643%" height="15" fill="rgb(249,87,1)" fg:x="72302" fg:w="182"/><text x="65.5057%" y="783.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (182 samples, 0.16%)</title><rect x="65.2557%" y="757" width="0.1643%" height="15" fill="rgb(248,196,48)" fg:x="72302" fg:w="182"/><text x="65.5057%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (170 samples, 0.15%)</title><rect x="65.2665%" y="741" width="0.1534%" height="15" fill="rgb(251,206,33)" fg:x="72314" fg:w="170"/><text x="65.5165%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (170 samples, 0.15%)</title><rect x="65.2665%" y="725" width="0.1534%" height="15" fill="rgb(232,141,28)" fg:x="72314" fg:w="170"/><text x="65.5165%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (170 samples, 0.15%)</title><rect x="65.2665%" y="709" width="0.1534%" height="15" fill="rgb(209,167,14)" fg:x="72314" fg:w="170"/><text x="65.5165%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (170 samples, 0.15%)</title><rect x="65.2665%" y="693" width="0.1534%" height="15" fill="rgb(225,11,50)" fg:x="72314" fg:w="170"/><text x="65.5165%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (170 samples, 0.15%)</title><rect x="65.2665%" y="677" width="0.1534%" height="15" fill="rgb(209,50,20)" fg:x="72314" fg:w="170"/><text x="65.5165%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (51 samples, 0.05%)</title><rect x="65.3739%" y="661" width="0.0460%" height="15" fill="rgb(212,17,46)" fg:x="72433" fg:w="51"/><text x="65.6239%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (51 samples, 0.05%)</title><rect x="65.3739%" y="645" width="0.0460%" height="15" fill="rgb(216,101,39)" fg:x="72433" fg:w="51"/><text x="65.6239%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (39 samples, 0.04%)</title><rect x="65.3848%" y="629" width="0.0352%" height="15" fill="rgb(212,228,48)" fg:x="72445" fg:w="39"/><text x="65.6348%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="65.4200%" y="773" width="0.0171%" height="15" fill="rgb(250,6,50)" fg:x="72484" fg:w="19"/><text x="65.6700%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (152 samples, 0.14%)</title><rect x="65.4660%" y="629" width="0.1372%" height="15" fill="rgb(250,160,48)" fg:x="72535" fg:w="152"/><text x="65.7160%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (152 samples, 0.14%)</title><rect x="65.4660%" y="613" width="0.1372%" height="15" fill="rgb(244,216,33)" fg:x="72535" fg:w="152"/><text x="65.7160%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (142 samples, 0.13%)</title><rect x="65.4750%" y="597" width="0.1282%" height="15" fill="rgb(207,157,5)" fg:x="72545" fg:w="142"/><text x="65.7250%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::take (135 samples, 0.12%)</title><rect x="65.4813%" y="581" width="0.1218%" height="15" fill="rgb(228,199,8)" fg:x="72552" fg:w="135"/><text x="65.7313%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (135 samples, 0.12%)</title><rect x="65.4813%" y="565" width="0.1218%" height="15" fill="rgb(227,80,20)" fg:x="72552" fg:w="135"/><text x="65.7313%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (178 samples, 0.16%)</title><rect x="65.4506%" y="725" width="0.1607%" height="15" fill="rgb(222,9,33)" fg:x="72518" fg:w="178"/><text x="65.7006%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (178 samples, 0.16%)</title><rect x="65.4506%" y="709" width="0.1607%" height="15" fill="rgb(239,44,28)" fg:x="72518" fg:w="178"/><text x="65.7006%" y="719.50"></text></g><g><title>alloc::alloc::alloc (173 samples, 0.16%)</title><rect x="65.4552%" y="693" width="0.1561%" height="15" fill="rgb(249,187,43)" fg:x="72523" fg:w="173"/><text x="65.7052%" y="703.50"></text></g><g><title>__rg_alloc (173 samples, 0.16%)</title><rect x="65.4552%" y="677" width="0.1561%" height="15" fill="rgb(216,141,28)" fg:x="72523" fg:w="173"/><text x="65.7052%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (173 samples, 0.16%)</title><rect x="65.4552%" y="661" width="0.1561%" height="15" fill="rgb(230,154,53)" fg:x="72523" fg:w="173"/><text x="65.7052%" y="671.50"></text></g><g><title>rust_alloc (170 samples, 0.15%)</title><rect x="65.4579%" y="645" width="0.1534%" height="15" fill="rgb(227,82,4)" fg:x="72526" fg:w="170"/><text x="65.7079%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (196 samples, 0.18%)</title><rect x="65.4407%" y="773" width="0.1769%" height="15" fill="rgb(220,107,16)" fg:x="72507" fg:w="196"/><text x="65.6907%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (196 samples, 0.18%)</title><rect x="65.4407%" y="757" width="0.1769%" height="15" fill="rgb(207,187,2)" fg:x="72507" fg:w="196"/><text x="65.6907%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (185 samples, 0.17%)</title><rect x="65.4506%" y="741" width="0.1670%" height="15" fill="rgb(210,162,52)" fg:x="72518" fg:w="185"/><text x="65.7006%" y="751.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,537 samples, 1.39%)</title><rect x="64.2331%" y="885" width="1.3872%" height="15" fill="rgb(217,216,49)" fg:x="71169" fg:w="1537"/><text x="64.4831%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (434 samples, 0.39%)</title><rect x="65.2286%" y="869" width="0.3917%" height="15" fill="rgb(218,146,49)" fg:x="72272" fg:w="434"/><text x="65.4786%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (404 samples, 0.36%)</title><rect x="65.2557%" y="853" width="0.3646%" height="15" fill="rgb(216,55,40)" fg:x="72302" fg:w="404"/><text x="65.5057%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (404 samples, 0.36%)</title><rect x="65.2557%" y="837" width="0.3646%" height="15" fill="rgb(208,196,21)" fg:x="72302" fg:w="404"/><text x="65.5057%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (404 samples, 0.36%)</title><rect x="65.2557%" y="821" width="0.3646%" height="15" fill="rgb(242,117,42)" fg:x="72302" fg:w="404"/><text x="65.5057%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (404 samples, 0.36%)</title><rect x="65.2557%" y="805" width="0.3646%" height="15" fill="rgb(210,11,23)" fg:x="72302" fg:w="404"/><text x="65.5057%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (404 samples, 0.36%)</title><rect x="65.2557%" y="789" width="0.3646%" height="15" fill="rgb(217,110,2)" fg:x="72302" fg:w="404"/><text x="65.5057%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (166 samples, 0.15%)</title><rect x="65.6203%" y="885" width="0.1498%" height="15" fill="rgb(229,77,54)" fg:x="72706" fg:w="166"/><text x="65.8703%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (12 samples, 0.01%)</title><rect x="65.7701%" y="885" width="0.0108%" height="15" fill="rgb(218,53,16)" fg:x="72872" fg:w="12"/><text x="66.0201%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (12 samples, 0.01%)</title><rect x="65.7701%" y="869" width="0.0108%" height="15" fill="rgb(215,38,13)" fg:x="72872" fg:w="12"/><text x="66.0201%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (384 samples, 0.35%)</title><rect x="65.7810%" y="885" width="0.3466%" height="15" fill="rgb(235,42,18)" fg:x="72884" fg:w="384"/><text x="66.0310%" y="895.50"></text></g><g><title>core::ptr::write (365 samples, 0.33%)</title><rect x="65.7981%" y="869" width="0.3294%" height="15" fill="rgb(219,66,54)" fg:x="72903" fg:w="365"/><text x="66.0481%" y="879.50"></text></g><g><title>__memcpy_avx_unaligned_erms (347 samples, 0.31%)</title><rect x="65.8144%" y="853" width="0.3132%" height="15" fill="rgb(222,205,4)" fg:x="72921" fg:w="347"/><text x="66.0644%" y="863.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (25 samples, 0.02%)</title><rect x="66.1862%" y="565" width="0.0226%" height="15" fill="rgb(227,213,46)" fg:x="73333" fg:w="25"/><text x="66.4362%" y="575.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (24 samples, 0.02%)</title><rect x="66.1871%" y="549" width="0.0217%" height="15" fill="rgb(250,145,42)" fg:x="73334" fg:w="24"/><text x="66.4371%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (43 samples, 0.04%)</title><rect x="66.1817%" y="613" width="0.0388%" height="15" fill="rgb(219,15,2)" fg:x="73328" fg:w="43"/><text x="66.4317%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (43 samples, 0.04%)</title><rect x="66.1817%" y="597" width="0.0388%" height="15" fill="rgb(231,181,52)" fg:x="73328" fg:w="43"/><text x="66.4317%" y="607.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (42 samples, 0.04%)</title><rect x="66.1826%" y="581" width="0.0379%" height="15" fill="rgb(235,1,42)" fg:x="73329" fg:w="42"/><text x="66.4326%" y="591.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="66.2088%" y="565" width="0.0117%" height="15" fill="rgb(249,88,27)" fg:x="73358" fg:w="13"/><text x="66.4588%" y="575.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="66.2088%" y="549" width="0.0117%" height="15" fill="rgb(235,145,16)" fg:x="73358" fg:w="13"/><text x="66.4588%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (64 samples, 0.06%)</title><rect x="66.1817%" y="629" width="0.0578%" height="15" fill="rgb(237,114,19)" fg:x="73328" fg:w="64"/><text x="66.4317%" y="639.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (21 samples, 0.02%)</title><rect x="66.2205%" y="613" width="0.0190%" height="15" fill="rgb(238,51,50)" fg:x="73371" fg:w="21"/><text x="66.4705%" y="623.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (21 samples, 0.02%)</title><rect x="66.2205%" y="597" width="0.0190%" height="15" fill="rgb(205,194,25)" fg:x="73371" fg:w="21"/><text x="66.4705%" y="607.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (21 samples, 0.02%)</title><rect x="66.2205%" y="581" width="0.0190%" height="15" fill="rgb(215,203,17)" fg:x="73371" fg:w="21"/><text x="66.4705%" y="591.50"></text></g><g><title>snmalloc::bits::align_down (21 samples, 0.02%)</title><rect x="66.2205%" y="565" width="0.0190%" height="15" fill="rgb(233,112,49)" fg:x="73371" fg:w="21"/><text x="66.4705%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (107 samples, 0.10%)</title><rect x="66.1655%" y="645" width="0.0966%" height="15" fill="rgb(241,130,26)" fg:x="73310" fg:w="107"/><text x="66.4155%" y="655.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (20 samples, 0.02%)</title><rect x="66.2440%" y="629" width="0.0181%" height="15" fill="rgb(252,223,19)" fg:x="73397" fg:w="20"/><text x="66.4940%" y="639.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (20 samples, 0.02%)</title><rect x="66.2440%" y="613" width="0.0181%" height="15" fill="rgb(211,95,25)" fg:x="73397" fg:w="20"/><text x="66.4940%" y="623.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (20 samples, 0.02%)</title><rect x="66.2440%" y="597" width="0.0181%" height="15" fill="rgb(251,182,27)" fg:x="73397" fg:w="20"/><text x="66.4940%" y="607.50"></text></g><g><title>snmalloc::bits::align_down (20 samples, 0.02%)</title><rect x="66.2440%" y="581" width="0.0181%" height="15" fill="rgb(238,24,4)" fg:x="73397" fg:w="20"/><text x="66.4940%" y="591.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (79 samples, 0.07%)</title><rect x="66.2954%" y="629" width="0.0713%" height="15" fill="rgb(224,220,25)" fg:x="73454" fg:w="79"/><text x="66.5454%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (619 samples, 0.56%)</title><rect x="66.1646%" y="677" width="0.5587%" height="15" fill="rgb(239,133,26)" fg:x="73309" fg:w="619"/><text x="66.4146%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (619 samples, 0.56%)</title><rect x="66.1646%" y="661" width="0.5587%" height="15" fill="rgb(211,94,48)" fg:x="73309" fg:w="619"/><text x="66.4146%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (511 samples, 0.46%)</title><rect x="66.2620%" y="645" width="0.4612%" height="15" fill="rgb(239,87,6)" fg:x="73417" fg:w="511"/><text x="66.5120%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (395 samples, 0.36%)</title><rect x="66.3667%" y="629" width="0.3565%" height="15" fill="rgb(227,62,0)" fg:x="73533" fg:w="395"/><text x="66.6167%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (395 samples, 0.36%)</title><rect x="66.3667%" y="613" width="0.3565%" height="15" fill="rgb(211,226,4)" fg:x="73533" fg:w="395"/><text x="66.6167%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (395 samples, 0.36%)</title><rect x="66.3667%" y="597" width="0.3565%" height="15" fill="rgb(253,38,52)" fg:x="73533" fg:w="395"/><text x="66.6167%" y="607.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (15 samples, 0.01%)</title><rect x="66.7268%" y="645" width="0.0135%" height="15" fill="rgb(229,126,40)" fg:x="73932" fg:w="15"/><text x="66.9768%" y="655.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (15 samples, 0.01%)</title><rect x="66.7268%" y="629" width="0.0135%" height="15" fill="rgb(229,165,44)" fg:x="73932" fg:w="15"/><text x="66.9768%" y="639.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="66.7268%" y="613" width="0.0135%" height="15" fill="rgb(247,95,47)" fg:x="73932" fg:w="15"/><text x="66.9768%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::take (25 samples, 0.02%)</title><rect x="66.7404%" y="645" width="0.0226%" height="15" fill="rgb(216,140,30)" fg:x="73947" fg:w="25"/><text x="66.9904%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (25 samples, 0.02%)</title><rect x="66.7404%" y="629" width="0.0226%" height="15" fill="rgb(246,214,8)" fg:x="73947" fg:w="25"/><text x="66.9904%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.04%)</title><rect x="66.7232%" y="677" width="0.0433%" height="15" fill="rgb(227,224,15)" fg:x="73928" fg:w="48"/><text x="66.9732%" y="687.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (48 samples, 0.04%)</title><rect x="66.7232%" y="661" width="0.0433%" height="15" fill="rgb(233,175,4)" fg:x="73928" fg:w="48"/><text x="66.9732%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (775 samples, 0.70%)</title><rect x="66.1555%" y="725" width="0.6995%" height="15" fill="rgb(221,66,45)" fg:x="73299" fg:w="775"/><text x="66.4055%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (775 samples, 0.70%)</title><rect x="66.1555%" y="709" width="0.6995%" height="15" fill="rgb(221,178,18)" fg:x="73299" fg:w="775"/><text x="66.4055%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (770 samples, 0.69%)</title><rect x="66.1600%" y="693" width="0.6950%" height="15" fill="rgb(213,81,29)" fg:x="73304" fg:w="770"/><text x="66.4100%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (92 samples, 0.08%)</title><rect x="66.7720%" y="677" width="0.0830%" height="15" fill="rgb(220,89,49)" fg:x="73982" fg:w="92"/><text x="67.0220%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (92 samples, 0.08%)</title><rect x="66.7720%" y="661" width="0.0830%" height="15" fill="rgb(227,60,33)" fg:x="73982" fg:w="92"/><text x="67.0220%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (798 samples, 0.72%)</title><rect x="66.1357%" y="821" width="0.7202%" height="15" fill="rgb(205,113,12)" fg:x="73277" fg:w="798"/><text x="66.3857%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (798 samples, 0.72%)</title><rect x="66.1357%" y="805" width="0.7202%" height="15" fill="rgb(211,32,1)" fg:x="73277" fg:w="798"/><text x="66.3857%" y="815.50"></text></g><g><title>alloc::alloc::alloc (794 samples, 0.72%)</title><rect x="66.1393%" y="789" width="0.7166%" height="15" fill="rgb(246,2,12)" fg:x="73281" fg:w="794"/><text x="66.3893%" y="799.50"></text></g><g><title>__rg_alloc (794 samples, 0.72%)</title><rect x="66.1393%" y="773" width="0.7166%" height="15" fill="rgb(243,37,27)" fg:x="73281" fg:w="794"/><text x="66.3893%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (794 samples, 0.72%)</title><rect x="66.1393%" y="757" width="0.7166%" height="15" fill="rgb(248,211,31)" fg:x="73281" fg:w="794"/><text x="66.3893%" y="767.50"></text></g><g><title>rust_alloc (785 samples, 0.71%)</title><rect x="66.1474%" y="741" width="0.7085%" height="15" fill="rgb(242,146,47)" fg:x="73290" fg:w="785"/><text x="66.3974%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (814 samples, 0.73%)</title><rect x="66.1275%" y="885" width="0.7347%" height="15" fill="rgb(206,70,20)" fg:x="73268" fg:w="814"/><text x="66.3775%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (814 samples, 0.73%)</title><rect x="66.1275%" y="869" width="0.7347%" height="15" fill="rgb(215,10,51)" fg:x="73268" fg:w="814"/><text x="66.3775%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (805 samples, 0.73%)</title><rect x="66.1357%" y="853" width="0.7265%" height="15" fill="rgb(243,178,53)" fg:x="73277" fg:w="805"/><text x="66.3857%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (805 samples, 0.73%)</title><rect x="66.1357%" y="837" width="0.7265%" height="15" fill="rgb(233,221,20)" fg:x="73277" fg:w="805"/><text x="66.3857%" y="847.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="66.9218%" y="581" width="0.0190%" height="15" fill="rgb(218,95,35)" fg:x="74148" fg:w="21"/><text x="67.1718%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="66.9245%" y="565" width="0.0162%" height="15" fill="rgb(229,13,5)" fg:x="74151" fg:w="18"/><text x="67.1745%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (57 samples, 0.05%)</title><rect x="66.8965%" y="629" width="0.0514%" height="15" fill="rgb(252,164,30)" fg:x="74120" fg:w="57"/><text x="67.1465%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (57 samples, 0.05%)</title><rect x="66.8965%" y="613" width="0.0514%" height="15" fill="rgb(232,68,36)" fg:x="74120" fg:w="57"/><text x="67.1465%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (57 samples, 0.05%)</title><rect x="66.8965%" y="597" width="0.0514%" height="15" fill="rgb(219,59,54)" fg:x="74120" fg:w="57"/><text x="67.1465%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (78 samples, 0.07%)</title><rect x="66.8848%" y="661" width="0.0704%" height="15" fill="rgb(250,92,33)" fg:x="74107" fg:w="78"/><text x="67.1348%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (78 samples, 0.07%)</title><rect x="66.8848%" y="645" width="0.0704%" height="15" fill="rgb(229,162,54)" fg:x="74107" fg:w="78"/><text x="67.1348%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (85 samples, 0.08%)</title><rect x="66.8848%" y="693" width="0.0767%" height="15" fill="rgb(244,114,52)" fg:x="74107" fg:w="85"/><text x="67.1348%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (85 samples, 0.08%)</title><rect x="66.8848%" y="677" width="0.0767%" height="15" fill="rgb(212,211,43)" fg:x="74107" fg:w="85"/><text x="67.1348%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (104 samples, 0.09%)</title><rect x="66.8785%" y="709" width="0.0939%" height="15" fill="rgb(226,147,8)" fg:x="74100" fg:w="104"/><text x="67.1285%" y="719.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="66.9615%" y="693" width="0.0108%" height="15" fill="rgb(226,23,13)" fg:x="74192" fg:w="12"/><text x="67.2115%" y="703.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="66.9615%" y="677" width="0.0108%" height="15" fill="rgb(240,63,4)" fg:x="74192" fg:w="12"/><text x="67.2115%" y="687.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="66.9615%" y="661" width="0.0108%" height="15" fill="rgb(221,1,32)" fg:x="74192" fg:w="12"/><text x="67.2115%" y="671.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="66.9615%" y="645" width="0.0108%" height="15" fill="rgb(242,117,10)" fg:x="74192" fg:w="12"/><text x="67.2115%" y="655.50"></text></g><g><title>rust_dealloc (126 samples, 0.11%)</title><rect x="66.8676%" y="725" width="0.1137%" height="15" fill="rgb(249,172,44)" fg:x="74088" fg:w="126"/><text x="67.1176%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (128 samples, 0.12%)</title><rect x="66.8667%" y="789" width="0.1155%" height="15" fill="rgb(244,46,45)" fg:x="74087" fg:w="128"/><text x="67.1167%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (128 samples, 0.12%)</title><rect x="66.8667%" y="773" width="0.1155%" height="15" fill="rgb(206,43,17)" fg:x="74087" fg:w="128"/><text x="67.1167%" y="783.50"></text></g><g><title>__rg_dealloc (128 samples, 0.12%)</title><rect x="66.8667%" y="757" width="0.1155%" height="15" fill="rgb(239,218,39)" fg:x="74087" fg:w="128"/><text x="67.1167%" y="767.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (128 samples, 0.12%)</title><rect x="66.8667%" y="741" width="0.1155%" height="15" fill="rgb(208,169,54)" fg:x="74087" fg:w="128"/><text x="67.1167%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (144 samples, 0.13%)</title><rect x="66.8658%" y="853" width="0.1300%" height="15" fill="rgb(247,25,42)" fg:x="74086" fg:w="144"/><text x="67.1158%" y="863.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (144 samples, 0.13%)</title><rect x="66.8658%" y="837" width="0.1300%" height="15" fill="rgb(226,23,31)" fg:x="74086" fg:w="144"/><text x="67.1158%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (143 samples, 0.13%)</title><rect x="66.8667%" y="821" width="0.1291%" height="15" fill="rgb(247,16,28)" fg:x="74087" fg:w="143"/><text x="67.1167%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (143 samples, 0.13%)</title><rect x="66.8667%" y="805" width="0.1291%" height="15" fill="rgb(231,147,38)" fg:x="74087" fg:w="143"/><text x="67.1167%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.01%)</title><rect x="66.9823%" y="789" width="0.0135%" height="15" fill="rgb(253,81,48)" fg:x="74215" fg:w="15"/><text x="67.2323%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (158 samples, 0.14%)</title><rect x="66.8622%" y="885" width="0.1426%" height="15" fill="rgb(249,222,43)" fg:x="74082" fg:w="158"/><text x="67.1122%" y="895.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (158 samples, 0.14%)</title><rect x="66.8622%" y="869" width="0.1426%" height="15" fill="rgb(221,3,27)" fg:x="74082" fg:w="158"/><text x="67.1122%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (24 samples, 0.02%)</title><rect x="67.0175%" y="821" width="0.0217%" height="15" fill="rgb(228,180,5)" fg:x="74254" fg:w="24"/><text x="67.2675%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (24 samples, 0.02%)</title><rect x="67.0175%" y="805" width="0.0217%" height="15" fill="rgb(227,131,42)" fg:x="74254" fg:w="24"/><text x="67.2675%" y="815.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="67.0265%" y="789" width="0.0126%" height="15" fill="rgb(212,3,39)" fg:x="74264" fg:w="14"/><text x="67.2765%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="67.0265%" y="773" width="0.0126%" height="15" fill="rgb(226,45,5)" fg:x="74264" fg:w="14"/><text x="67.2765%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="67.0265%" y="757" width="0.0126%" height="15" fill="rgb(215,167,45)" fg:x="74264" fg:w="14"/><text x="67.2765%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="67.0265%" y="741" width="0.0126%" height="15" fill="rgb(250,218,53)" fg:x="74264" fg:w="14"/><text x="67.2765%" y="751.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="67.0427%" y="805" width="0.0108%" height="15" fill="rgb(207,140,0)" fg:x="74282" fg:w="12"/><text x="67.2927%" y="815.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (28 samples, 0.03%)</title><rect x="67.1032%" y="677" width="0.0253%" height="15" fill="rgb(238,133,51)" fg:x="74349" fg:w="28"/><text x="67.3532%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="67.1104%" y="661" width="0.0181%" height="15" fill="rgb(218,203,53)" fg:x="74357" fg:w="20"/><text x="67.3604%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (53 samples, 0.05%)</title><rect x="67.0879%" y="725" width="0.0478%" height="15" fill="rgb(226,184,25)" fg:x="74332" fg:w="53"/><text x="67.3379%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (53 samples, 0.05%)</title><rect x="67.0879%" y="709" width="0.0478%" height="15" fill="rgb(231,121,21)" fg:x="74332" fg:w="53"/><text x="67.3379%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (53 samples, 0.05%)</title><rect x="67.0879%" y="693" width="0.0478%" height="15" fill="rgb(251,14,34)" fg:x="74332" fg:w="53"/><text x="67.3379%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (80 samples, 0.07%)</title><rect x="67.0716%" y="757" width="0.0722%" height="15" fill="rgb(249,193,11)" fg:x="74314" fg:w="80"/><text x="67.3216%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (80 samples, 0.07%)</title><rect x="67.0716%" y="741" width="0.0722%" height="15" fill="rgb(220,172,37)" fg:x="74314" fg:w="80"/><text x="67.3216%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (90 samples, 0.08%)</title><rect x="67.0716%" y="789" width="0.0812%" height="15" fill="rgb(231,229,43)" fg:x="74314" fg:w="90"/><text x="67.3216%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (90 samples, 0.08%)</title><rect x="67.0716%" y="773" width="0.0812%" height="15" fill="rgb(250,161,5)" fg:x="74314" fg:w="90"/><text x="67.3216%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (111 samples, 0.10%)</title><rect x="67.0590%" y="805" width="0.1002%" height="15" fill="rgb(218,225,18)" fg:x="74300" fg:w="111"/><text x="67.3090%" y="815.50"></text></g><g><title>rust_dealloc (141 samples, 0.13%)</title><rect x="67.0391%" y="821" width="0.1273%" height="15" fill="rgb(245,45,42)" fg:x="74278" fg:w="141"/><text x="67.2891%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (189 samples, 0.17%)</title><rect x="67.0048%" y="869" width="0.1706%" height="15" fill="rgb(211,115,1)" fg:x="74240" fg:w="189"/><text x="67.2548%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (189 samples, 0.17%)</title><rect x="67.0048%" y="853" width="0.1706%" height="15" fill="rgb(248,133,52)" fg:x="74240" fg:w="189"/><text x="67.2548%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (189 samples, 0.17%)</title><rect x="67.0048%" y="837" width="0.1706%" height="15" fill="rgb(238,100,21)" fg:x="74240" fg:w="189"/><text x="67.2548%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (21 samples, 0.02%)</title><rect x="67.2151%" y="693" width="0.0190%" height="15" fill="rgb(247,144,11)" fg:x="74473" fg:w="21"/><text x="67.4651%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (21 samples, 0.02%)</title><rect x="67.2151%" y="677" width="0.0190%" height="15" fill="rgb(206,164,16)" fg:x="74473" fg:w="21"/><text x="67.4651%" y="687.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="67.2214%" y="661" width="0.0126%" height="15" fill="rgb(222,34,3)" fg:x="74480" fg:w="14"/><text x="67.4714%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="67.2214%" y="645" width="0.0126%" height="15" fill="rgb(248,82,4)" fg:x="74480" fg:w="14"/><text x="67.4714%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="67.2214%" y="629" width="0.0126%" height="15" fill="rgb(228,81,46)" fg:x="74480" fg:w="14"/><text x="67.4714%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="67.2214%" y="613" width="0.0126%" height="15" fill="rgb(227,67,47)" fg:x="74480" fg:w="14"/><text x="67.4714%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="67.2747%" y="549" width="0.0190%" height="15" fill="rgb(215,93,53)" fg:x="74539" fg:w="21"/><text x="67.5247%" y="559.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="67.2774%" y="533" width="0.0162%" height="15" fill="rgb(248,194,39)" fg:x="74542" fg:w="18"/><text x="67.5274%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (41 samples, 0.04%)</title><rect x="67.2638%" y="597" width="0.0370%" height="15" fill="rgb(215,5,19)" fg:x="74527" fg:w="41"/><text x="67.5138%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (41 samples, 0.04%)</title><rect x="67.2638%" y="581" width="0.0370%" height="15" fill="rgb(226,215,51)" fg:x="74527" fg:w="41"/><text x="67.5138%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (41 samples, 0.04%)</title><rect x="67.2638%" y="565" width="0.0370%" height="15" fill="rgb(225,56,26)" fg:x="74527" fg:w="41"/><text x="67.5138%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (62 samples, 0.06%)</title><rect x="67.2485%" y="629" width="0.0560%" height="15" fill="rgb(222,75,29)" fg:x="74510" fg:w="62"/><text x="67.4985%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (62 samples, 0.06%)</title><rect x="67.2485%" y="613" width="0.0560%" height="15" fill="rgb(236,139,6)" fg:x="74510" fg:w="62"/><text x="67.4985%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (66 samples, 0.06%)</title><rect x="67.2485%" y="661" width="0.0596%" height="15" fill="rgb(223,137,36)" fg:x="74510" fg:w="66"/><text x="67.4985%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (66 samples, 0.06%)</title><rect x="67.2485%" y="645" width="0.0596%" height="15" fill="rgb(226,99,2)" fg:x="74510" fg:w="66"/><text x="67.4985%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (82 samples, 0.07%)</title><rect x="67.2431%" y="677" width="0.0740%" height="15" fill="rgb(206,133,23)" fg:x="74504" fg:w="82"/><text x="67.4931%" y="687.50"></text></g><g><title>rust_dealloc (97 samples, 0.09%)</title><rect x="67.2341%" y="693" width="0.0875%" height="15" fill="rgb(243,173,15)" fg:x="74494" fg:w="97"/><text x="67.4841%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (149 samples, 0.13%)</title><rect x="67.1971%" y="773" width="0.1345%" height="15" fill="rgb(228,69,28)" fg:x="74453" fg:w="149"/><text x="67.4471%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (147 samples, 0.13%)</title><rect x="67.1989%" y="757" width="0.1327%" height="15" fill="rgb(212,51,22)" fg:x="74455" fg:w="147"/><text x="67.4489%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (136 samples, 0.12%)</title><rect x="67.2088%" y="741" width="0.1227%" height="15" fill="rgb(227,113,0)" fg:x="74466" fg:w="136"/><text x="67.4588%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (136 samples, 0.12%)</title><rect x="67.2088%" y="725" width="0.1227%" height="15" fill="rgb(252,84,27)" fg:x="74466" fg:w="136"/><text x="67.4588%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (136 samples, 0.12%)</title><rect x="67.2088%" y="709" width="0.1227%" height="15" fill="rgb(223,145,39)" fg:x="74466" fg:w="136"/><text x="67.4588%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (181 samples, 0.16%)</title><rect x="67.1790%" y="837" width="0.1634%" height="15" fill="rgb(239,219,30)" fg:x="74433" fg:w="181"/><text x="67.4290%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (175 samples, 0.16%)</title><rect x="67.1844%" y="821" width="0.1579%" height="15" fill="rgb(224,196,39)" fg:x="74439" fg:w="175"/><text x="67.4344%" y="831.50"></text></g><g><title>core::mem::drop (161 samples, 0.15%)</title><rect x="67.1971%" y="805" width="0.1453%" height="15" fill="rgb(205,35,43)" fg:x="74453" fg:w="161"/><text x="67.4471%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (161 samples, 0.15%)</title><rect x="67.1971%" y="789" width="0.1453%" height="15" fill="rgb(228,201,21)" fg:x="74453" fg:w="161"/><text x="67.4471%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (12 samples, 0.01%)</title><rect x="67.3315%" y="773" width="0.0108%" height="15" fill="rgb(237,118,16)" fg:x="74602" fg:w="12"/><text x="67.5815%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="67.3315%" y="757" width="0.0108%" height="15" fill="rgb(241,17,19)" fg:x="74602" fg:w="12"/><text x="67.5815%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="67.3315%" y="741" width="0.0108%" height="15" fill="rgb(214,10,25)" fg:x="74602" fg:w="12"/><text x="67.5815%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="67.3315%" y="725" width="0.0108%" height="15" fill="rgb(238,37,29)" fg:x="74602" fg:w="12"/><text x="67.5815%" y="735.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="67.3315%" y="709" width="0.0108%" height="15" fill="rgb(253,83,25)" fg:x="74602" fg:w="12"/><text x="67.5815%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="67.3315%" y="693" width="0.0108%" height="15" fill="rgb(234,192,12)" fg:x="74602" fg:w="12"/><text x="67.5815%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (22 samples, 0.02%)</title><rect x="67.3713%" y="741" width="0.0199%" height="15" fill="rgb(241,216,45)" fg:x="74646" fg:w="22"/><text x="67.6213%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (22 samples, 0.02%)</title><rect x="67.3713%" y="725" width="0.0199%" height="15" fill="rgb(242,22,33)" fg:x="74646" fg:w="22"/><text x="67.6213%" y="735.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (22 samples, 0.02%)</title><rect x="67.3713%" y="709" width="0.0199%" height="15" fill="rgb(231,105,49)" fg:x="74646" fg:w="22"/><text x="67.6213%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (45 samples, 0.04%)</title><rect x="67.3604%" y="773" width="0.0406%" height="15" fill="rgb(218,204,15)" fg:x="74634" fg:w="45"/><text x="67.6104%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (45 samples, 0.04%)</title><rect x="67.3604%" y="757" width="0.0406%" height="15" fill="rgb(235,138,41)" fg:x="74634" fg:w="45"/><text x="67.6104%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (61 samples, 0.06%)</title><rect x="67.3514%" y="821" width="0.0551%" height="15" fill="rgb(246,0,9)" fg:x="74624" fg:w="61"/><text x="67.6014%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (51 samples, 0.05%)</title><rect x="67.3604%" y="805" width="0.0460%" height="15" fill="rgb(210,74,4)" fg:x="74634" fg:w="51"/><text x="67.6104%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (51 samples, 0.05%)</title><rect x="67.3604%" y="789" width="0.0460%" height="15" fill="rgb(250,60,41)" fg:x="74634" fg:w="51"/><text x="67.6104%" y="799.50"></text></g><g><title>rust_dealloc (73 samples, 0.07%)</title><rect x="67.3424%" y="837" width="0.0659%" height="15" fill="rgb(220,115,12)" fg:x="74614" fg:w="73"/><text x="67.5924%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (261 samples, 0.24%)</title><rect x="67.1754%" y="853" width="0.2356%" height="15" fill="rgb(237,100,13)" fg:x="74429" fg:w="261"/><text x="67.4254%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (454 samples, 0.41%)</title><rect x="67.0048%" y="885" width="0.4098%" height="15" fill="rgb(213,55,26)" fg:x="74240" fg:w="454"/><text x="67.2548%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (265 samples, 0.24%)</title><rect x="67.1754%" y="869" width="0.2392%" height="15" fill="rgb(216,17,4)" fg:x="74429" fg:w="265"/><text x="67.4254%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (21 samples, 0.02%)</title><rect x="67.4146%" y="885" width="0.0190%" height="15" fill="rgb(220,153,47)" fg:x="74694" fg:w="21"/><text x="67.6646%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,648 samples, 6.90%)</title><rect x="60.5399%" y="949" width="6.9027%" height="15" fill="rgb(215,131,9)" fg:x="67077" fg:w="7648"/><text x="60.7899%" y="959.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,648 samples, 6.90%)</title><rect x="60.5399%" y="933" width="6.9027%" height="15" fill="rgb(233,46,42)" fg:x="67077" fg:w="7648"/><text x="60.7899%" y="943.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (7,648 samples, 6.90%)</title><rect x="60.5399%" y="917" width="6.9027%" height="15" fill="rgb(226,86,7)" fg:x="67077" fg:w="7648"/><text x="60.7899%" y="927.50">tremor_ru..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,434 samples, 4.00%)</title><rect x="63.4407%" y="901" width="4.0019%" height="15" fill="rgb(239,226,21)" fg:x="70291" fg:w="4434"/><text x="63.6907%" y="911.50">trem..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (13 samples, 0.01%)</title><rect x="67.5554%" y="885" width="0.0117%" height="15" fill="rgb(244,137,22)" fg:x="74850" fg:w="13"/><text x="67.8054%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,360 samples, 1.23%)</title><rect x="67.4823%" y="901" width="1.2275%" height="15" fill="rgb(211,139,35)" fg:x="74769" fg:w="1360"/><text x="67.7323%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,266 samples, 1.14%)</title><rect x="67.5671%" y="885" width="1.1426%" height="15" fill="rgb(214,62,50)" fg:x="74863" fg:w="1266"/><text x="67.8171%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (11,260 samples, 10.16%)</title><rect x="58.9198%" y="1125" width="10.1626%" height="15" fill="rgb(212,113,44)" fg:x="65282" fg:w="11260"/><text x="59.1698%" y="1135.50">async_task::raw..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11,260 samples, 10.16%)</title><rect x="58.9198%" y="1109" width="10.1626%" height="15" fill="rgb(226,150,43)" fg:x="65282" fg:w="11260"/><text x="59.1698%" y="1119.50">&lt;core::pin::Pin..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,260 samples, 10.16%)</title><rect x="58.9198%" y="1093" width="10.1626%" height="15" fill="rgb(250,71,37)" fg:x="65282" fg:w="11260"/><text x="59.1698%" y="1103.50">&lt;core::future::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (11,260 samples, 10.16%)</title><rect x="58.9198%" y="1077" width="10.1626%" height="15" fill="rgb(219,76,19)" fg:x="65282" fg:w="11260"/><text x="59.1698%" y="1087.50">async_executor:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (11,260 samples, 10.16%)</title><rect x="58.9198%" y="1061" width="10.1626%" height="15" fill="rgb(250,39,11)" fg:x="65282" fg:w="11260"/><text x="59.1698%" y="1071.50">&lt;async_std::tas..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (11,260 samples, 10.16%)</title><rect x="58.9198%" y="1045" width="10.1626%" height="15" fill="rgb(230,64,31)" fg:x="65282" fg:w="11260"/><text x="59.1698%" y="1055.50">async_std::task..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,260 samples, 10.16%)</title><rect x="58.9198%" y="1029" width="10.1626%" height="15" fill="rgb(208,222,23)" fg:x="65282" fg:w="11260"/><text x="59.1698%" y="1039.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,260 samples, 10.16%)</title><rect x="58.9198%" y="1013" width="10.1626%" height="15" fill="rgb(227,125,18)" fg:x="65282" fg:w="11260"/><text x="59.1698%" y="1023.50">std::thread::lo..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (11,260 samples, 10.16%)</title><rect x="58.9198%" y="997" width="10.1626%" height="15" fill="rgb(234,210,9)" fg:x="65282" fg:w="11260"/><text x="59.1698%" y="1007.50">async_std::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (11,260 samples, 10.16%)</title><rect x="58.9198%" y="981" width="10.1626%" height="15" fill="rgb(217,127,24)" fg:x="65282" fg:w="11260"/><text x="59.1698%" y="991.50">&lt;async_std::tas..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,260 samples, 10.16%)</title><rect x="58.9198%" y="965" width="10.1626%" height="15" fill="rgb(239,141,48)" fg:x="65282" fg:w="11260"/><text x="59.1698%" y="975.50">&lt;core::future::..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,817 samples, 1.64%)</title><rect x="67.4426%" y="949" width="1.6399%" height="15" fill="rgb(227,109,8)" fg:x="74725" fg:w="1817"/><text x="67.6926%" y="959.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,817 samples, 1.64%)</title><rect x="67.4426%" y="933" width="1.6399%" height="15" fill="rgb(235,184,23)" fg:x="74725" fg:w="1817"/><text x="67.6926%" y="943.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,817 samples, 1.64%)</title><rect x="67.4426%" y="917" width="1.6399%" height="15" fill="rgb(227,226,48)" fg:x="74725" fg:w="1817"/><text x="67.6926%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (413 samples, 0.37%)</title><rect x="68.7097%" y="901" width="0.3728%" height="15" fill="rgb(206,150,11)" fg:x="76129" fg:w="413"/><text x="68.9597%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (22 samples, 0.02%)</title><rect x="69.0825%" y="1125" width="0.0199%" height="15" fill="rgb(254,2,33)" fg:x="76542" fg:w="22"/><text x="69.3325%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (63 samples, 0.06%)</title><rect x="69.1023%" y="1125" width="0.0569%" height="15" fill="rgb(243,160,20)" fg:x="76564" fg:w="63"/><text x="69.3523%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.01%)</title><rect x="69.1655%" y="1125" width="0.0135%" height="15" fill="rgb(218,208,30)" fg:x="76634" fg:w="15"/><text x="69.4155%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="69.1998%" y="1125" width="0.0126%" height="15" fill="rgb(224,120,49)" fg:x="76672" fg:w="14"/><text x="69.4498%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="69.2124%" y="1125" width="0.0171%" height="15" fill="rgb(246,12,2)" fg:x="76686" fg:w="19"/><text x="69.4624%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="69.2386%" y="1125" width="0.0199%" height="15" fill="rgb(236,117,3)" fg:x="76715" fg:w="22"/><text x="69.4886%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (14 samples, 0.01%)</title><rect x="69.2594%" y="1125" width="0.0126%" height="15" fill="rgb(216,128,52)" fg:x="76738" fg:w="14"/><text x="69.5094%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (14 samples, 0.01%)</title><rect x="69.2594%" y="1109" width="0.0126%" height="15" fill="rgb(246,145,19)" fg:x="76738" fg:w="14"/><text x="69.5094%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (14 samples, 0.01%)</title><rect x="69.2594%" y="1093" width="0.0126%" height="15" fill="rgb(222,11,46)" fg:x="76738" fg:w="14"/><text x="69.5094%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="69.2594%" y="1077" width="0.0126%" height="15" fill="rgb(245,82,36)" fg:x="76738" fg:w="14"/><text x="69.5094%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (14 samples, 0.01%)</title><rect x="69.2594%" y="1061" width="0.0126%" height="15" fill="rgb(250,73,51)" fg:x="76738" fg:w="14"/><text x="69.5094%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (33 samples, 0.03%)</title><rect x="69.2720%" y="1125" width="0.0298%" height="15" fill="rgb(221,189,23)" fg:x="76752" fg:w="33"/><text x="69.5220%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (26 samples, 0.02%)</title><rect x="69.2783%" y="1109" width="0.0235%" height="15" fill="rgb(210,33,7)" fg:x="76759" fg:w="26"/><text x="69.5283%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (26 samples, 0.02%)</title><rect x="69.2783%" y="1093" width="0.0235%" height="15" fill="rgb(210,107,22)" fg:x="76759" fg:w="26"/><text x="69.5283%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="69.2783%" y="1077" width="0.0235%" height="15" fill="rgb(222,116,37)" fg:x="76759" fg:w="26"/><text x="69.5283%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (26 samples, 0.02%)</title><rect x="69.2783%" y="1061" width="0.0235%" height="15" fill="rgb(254,17,48)" fg:x="76759" fg:w="26"/><text x="69.5283%" y="1071.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (17 samples, 0.02%)</title><rect x="69.3135%" y="1125" width="0.0153%" height="15" fill="rgb(224,36,32)" fg:x="76798" fg:w="17"/><text x="69.5635%" y="1135.50"></text></g><g><title>polling::epoll::Poller::wait (31 samples, 0.03%)</title><rect x="69.3415%" y="1125" width="0.0280%" height="15" fill="rgb(232,90,46)" fg:x="76829" fg:w="31"/><text x="69.5915%" y="1135.50"></text></g><g><title>rust_alloc (88 samples, 0.08%)</title><rect x="69.3695%" y="1125" width="0.0794%" height="15" fill="rgb(241,66,40)" fg:x="76860" fg:w="88"/><text x="69.6195%" y="1135.50"></text></g><g><title>rust_dealloc (18 samples, 0.02%)</title><rect x="69.4489%" y="1125" width="0.0162%" height="15" fill="rgb(249,184,29)" fg:x="76948" fg:w="18"/><text x="69.6989%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (16 samples, 0.01%)</title><rect x="69.4507%" y="1109" width="0.0144%" height="15" fill="rgb(231,181,1)" fg:x="76950" fg:w="16"/><text x="69.7007%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (16 samples, 0.01%)</title><rect x="69.4507%" y="1093" width="0.0144%" height="15" fill="rgb(224,94,2)" fg:x="76950" fg:w="16"/><text x="69.7007%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (16 samples, 0.01%)</title><rect x="69.4507%" y="1077" width="0.0144%" height="15" fill="rgb(229,170,15)" fg:x="76950" fg:w="16"/><text x="69.7007%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (16 samples, 0.01%)</title><rect x="69.4507%" y="1061" width="0.0144%" height="15" fill="rgb(240,127,35)" fg:x="76950" fg:w="16"/><text x="69.7007%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (16 samples, 0.01%)</title><rect x="69.4507%" y="1045" width="0.0144%" height="15" fill="rgb(248,196,34)" fg:x="76950" fg:w="16"/><text x="69.7007%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (16 samples, 0.01%)</title><rect x="69.4507%" y="1029" width="0.0144%" height="15" fill="rgb(236,137,7)" fg:x="76950" fg:w="16"/><text x="69.7007%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (16 samples, 0.01%)</title><rect x="69.4507%" y="1013" width="0.0144%" height="15" fill="rgb(235,127,16)" fg:x="76950" fg:w="16"/><text x="69.7007%" y="1023.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (16 samples, 0.01%)</title><rect x="69.4507%" y="997" width="0.0144%" height="15" fill="rgb(250,192,54)" fg:x="76950" fg:w="16"/><text x="69.7007%" y="1007.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (32 samples, 0.03%)</title><rect x="69.4922%" y="1125" width="0.0289%" height="15" fill="rgb(218,98,20)" fg:x="76996" fg:w="32"/><text x="69.7422%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (59 samples, 0.05%)</title><rect x="69.5996%" y="933" width="0.0533%" height="15" fill="rgb(230,176,47)" fg:x="77115" fg:w="59"/><text x="69.8496%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (58 samples, 0.05%)</title><rect x="69.6005%" y="917" width="0.0523%" height="15" fill="rgb(244,2,33)" fg:x="77116" fg:w="58"/><text x="69.8505%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (58 samples, 0.05%)</title><rect x="69.6005%" y="901" width="0.0523%" height="15" fill="rgb(231,100,17)" fg:x="77116" fg:w="58"/><text x="69.8505%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (43 samples, 0.04%)</title><rect x="69.6141%" y="885" width="0.0388%" height="15" fill="rgb(245,23,12)" fg:x="77131" fg:w="43"/><text x="69.8641%" y="895.50"></text></g><g><title>___pthread_mutex_lock (43 samples, 0.04%)</title><rect x="69.6141%" y="869" width="0.0388%" height="15" fill="rgb(249,55,22)" fg:x="77131" fg:w="43"/><text x="69.8641%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (102 samples, 0.09%)</title><rect x="69.5726%" y="949" width="0.0921%" height="15" fill="rgb(207,134,9)" fg:x="77085" fg:w="102"/><text x="69.8226%" y="959.50"></text></g><g><title>event_listener::List::remove (13 samples, 0.01%)</title><rect x="69.6529%" y="933" width="0.0117%" height="15" fill="rgb(218,134,0)" fg:x="77174" fg:w="13"/><text x="69.9029%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (838 samples, 0.76%)</title><rect x="69.6646%" y="949" width="0.7563%" height="15" fill="rgb(213,212,33)" fg:x="77187" fg:w="838"/><text x="69.9146%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (684 samples, 0.62%)</title><rect x="70.4525%" y="933" width="0.6173%" height="15" fill="rgb(252,106,18)" fg:x="78060" fg:w="684"/><text x="70.7025%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (80 samples, 0.07%)</title><rect x="71.0699%" y="933" width="0.0722%" height="15" fill="rgb(208,126,42)" fg:x="78744" fg:w="80"/><text x="71.3199%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (35 samples, 0.03%)</title><rect x="71.1493%" y="917" width="0.0316%" height="15" fill="rgb(246,175,29)" fg:x="78832" fg:w="35"/><text x="71.3993%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (35 samples, 0.03%)</title><rect x="71.1493%" y="901" width="0.0316%" height="15" fill="rgb(215,13,50)" fg:x="78832" fg:w="35"/><text x="71.3993%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="71.1493%" y="885" width="0.0316%" height="15" fill="rgb(216,172,15)" fg:x="78832" fg:w="35"/><text x="71.3993%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (33 samples, 0.03%)</title><rect x="71.1511%" y="869" width="0.0298%" height="15" fill="rgb(212,103,13)" fg:x="78834" fg:w="33"/><text x="71.4011%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (32 samples, 0.03%)</title><rect x="71.1520%" y="853" width="0.0289%" height="15" fill="rgb(231,171,36)" fg:x="78835" fg:w="32"/><text x="71.4020%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (32 samples, 0.03%)</title><rect x="71.1520%" y="837" width="0.0289%" height="15" fill="rgb(250,123,20)" fg:x="78835" fg:w="32"/><text x="71.4020%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (22 samples, 0.02%)</title><rect x="71.1809%" y="917" width="0.0199%" height="15" fill="rgb(212,53,50)" fg:x="78867" fg:w="22"/><text x="71.4309%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.02%)</title><rect x="71.1809%" y="901" width="0.0199%" height="15" fill="rgb(243,54,12)" fg:x="78867" fg:w="22"/><text x="71.4309%" y="911.50"></text></g><g><title>event_listener::Inner::lock (68 samples, 0.06%)</title><rect x="71.2044%" y="917" width="0.0614%" height="15" fill="rgb(234,101,34)" fg:x="78893" fg:w="68"/><text x="71.4544%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (66 samples, 0.06%)</title><rect x="71.2062%" y="901" width="0.0596%" height="15" fill="rgb(254,67,22)" fg:x="78895" fg:w="66"/><text x="71.4562%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (66 samples, 0.06%)</title><rect x="71.2062%" y="885" width="0.0596%" height="15" fill="rgb(250,35,47)" fg:x="78895" fg:w="66"/><text x="71.4562%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (65 samples, 0.06%)</title><rect x="71.2071%" y="869" width="0.0587%" height="15" fill="rgb(226,126,38)" fg:x="78896" fg:w="65"/><text x="71.4571%" y="879.50"></text></g><g><title>___pthread_mutex_lock (65 samples, 0.06%)</title><rect x="71.2071%" y="853" width="0.0587%" height="15" fill="rgb(216,138,53)" fg:x="78896" fg:w="65"/><text x="71.4571%" y="863.50"></text></g><g><title>async_executor::Sleepers::notify (13 samples, 0.01%)</title><rect x="71.2838%" y="821" width="0.0117%" height="15" fill="rgb(246,199,43)" fg:x="78981" fg:w="13"/><text x="71.5338%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (13 samples, 0.01%)</title><rect x="71.2838%" y="805" width="0.0117%" height="15" fill="rgb(232,125,11)" fg:x="78981" fg:w="13"/><text x="71.5338%" y="815.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="71.2847%" y="789" width="0.0108%" height="15" fill="rgb(218,219,45)" fg:x="78982" fg:w="12"/><text x="71.5347%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (27 samples, 0.02%)</title><rect x="71.2955%" y="821" width="0.0244%" height="15" fill="rgb(216,102,54)" fg:x="78994" fg:w="27"/><text x="71.5455%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="71.2955%" y="805" width="0.0244%" height="15" fill="rgb(250,228,7)" fg:x="78994" fg:w="27"/><text x="71.5455%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (27 samples, 0.02%)</title><rect x="71.2955%" y="789" width="0.0244%" height="15" fill="rgb(226,125,25)" fg:x="78994" fg:w="27"/><text x="71.5455%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (27 samples, 0.02%)</title><rect x="71.2955%" y="773" width="0.0244%" height="15" fill="rgb(224,165,27)" fg:x="78994" fg:w="27"/><text x="71.5455%" y="783.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (27 samples, 0.02%)</title><rect x="71.2955%" y="757" width="0.0244%" height="15" fill="rgb(233,86,3)" fg:x="78994" fg:w="27"/><text x="71.5455%" y="767.50"></text></g><g><title>async_executor::State::notify (79 samples, 0.07%)</title><rect x="71.2838%" y="837" width="0.0713%" height="15" fill="rgb(228,116,20)" fg:x="78981" fg:w="79"/><text x="71.5338%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.02%)</title><rect x="71.3307%" y="821" width="0.0244%" height="15" fill="rgb(209,192,17)" fg:x="79033" fg:w="27"/><text x="71.5807%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (25 samples, 0.02%)</title><rect x="71.3325%" y="805" width="0.0226%" height="15" fill="rgb(224,88,34)" fg:x="79035" fg:w="25"/><text x="71.5825%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (21 samples, 0.02%)</title><rect x="71.3361%" y="789" width="0.0190%" height="15" fill="rgb(233,38,6)" fg:x="79039" fg:w="21"/><text x="71.5861%" y="799.50"></text></g><g><title>___pthread_mutex_lock (21 samples, 0.02%)</title><rect x="71.3361%" y="773" width="0.0190%" height="15" fill="rgb(212,59,30)" fg:x="79039" fg:w="21"/><text x="71.5861%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (38 samples, 0.03%)</title><rect x="71.3641%" y="805" width="0.0343%" height="15" fill="rgb(213,80,3)" fg:x="79070" fg:w="38"/><text x="71.6141%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (38 samples, 0.03%)</title><rect x="71.3641%" y="789" width="0.0343%" height="15" fill="rgb(251,178,7)" fg:x="79070" fg:w="38"/><text x="71.6141%" y="799.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (138 samples, 0.12%)</title><rect x="71.2829%" y="853" width="0.1246%" height="15" fill="rgb(213,154,26)" fg:x="78980" fg:w="138"/><text x="71.5329%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (58 samples, 0.05%)</title><rect x="71.3551%" y="837" width="0.0523%" height="15" fill="rgb(238,165,49)" fg:x="79060" fg:w="58"/><text x="71.6051%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (54 samples, 0.05%)</title><rect x="71.3587%" y="821" width="0.0487%" height="15" fill="rgb(248,91,46)" fg:x="79064" fg:w="54"/><text x="71.6087%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (28 samples, 0.03%)</title><rect x="71.4074%" y="853" width="0.0253%" height="15" fill="rgb(244,21,52)" fg:x="79118" fg:w="28"/><text x="71.6574%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (28 samples, 0.03%)</title><rect x="71.4074%" y="837" width="0.0253%" height="15" fill="rgb(247,122,20)" fg:x="79118" fg:w="28"/><text x="71.6574%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (16 samples, 0.01%)</title><rect x="71.4489%" y="789" width="0.0144%" height="15" fill="rgb(218,27,9)" fg:x="79164" fg:w="16"/><text x="71.6989%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_swap (16 samples, 0.01%)</title><rect x="71.4489%" y="773" width="0.0144%" height="15" fill="rgb(246,7,6)" fg:x="79164" fg:w="16"/><text x="71.6989%" y="783.50"></text></g><g><title>parking::Inner::unpark (40 samples, 0.04%)</title><rect x="71.4453%" y="805" width="0.0361%" height="15" fill="rgb(227,135,54)" fg:x="79160" fg:w="40"/><text x="71.6953%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="71.4634%" y="789" width="0.0181%" height="15" fill="rgb(247,14,11)" fg:x="79180" fg:w="20"/><text x="71.7134%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="71.4634%" y="773" width="0.0181%" height="15" fill="rgb(206,149,34)" fg:x="79180" fg:w="20"/><text x="71.7134%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.02%)</title><rect x="71.4634%" y="757" width="0.0181%" height="15" fill="rgb(227,228,4)" fg:x="79180" fg:w="20"/><text x="71.7134%" y="767.50"></text></g><g><title>___pthread_mutex_lock (20 samples, 0.02%)</title><rect x="71.4634%" y="741" width="0.0181%" height="15" fill="rgb(238,218,28)" fg:x="79180" fg:w="20"/><text x="71.7134%" y="751.50"></text></g><g><title>parking::Unparker::unpark (46 samples, 0.04%)</title><rect x="71.4408%" y="821" width="0.0415%" height="15" fill="rgb(252,86,40)" fg:x="79155" fg:w="46"/><text x="71.6908%" y="831.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (55 samples, 0.05%)</title><rect x="71.4354%" y="837" width="0.0496%" height="15" fill="rgb(251,225,11)" fg:x="79149" fg:w="55"/><text x="71.6854%" y="847.50"></text></g><g><title>event_listener::List::notify (257 samples, 0.23%)</title><rect x="71.2657%" y="917" width="0.2320%" height="15" fill="rgb(206,46,49)" fg:x="78961" fg:w="257"/><text x="71.5157%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (247 samples, 0.22%)</title><rect x="71.2748%" y="901" width="0.2229%" height="15" fill="rgb(245,128,24)" fg:x="78971" fg:w="247"/><text x="71.5248%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (238 samples, 0.21%)</title><rect x="71.2829%" y="885" width="0.2148%" height="15" fill="rgb(219,177,34)" fg:x="78980" fg:w="238"/><text x="71.5329%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (238 samples, 0.21%)</title><rect x="71.2829%" y="869" width="0.2148%" height="15" fill="rgb(218,60,48)" fg:x="78980" fg:w="238"/><text x="71.5329%" y="879.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (69 samples, 0.06%)</title><rect x="71.4354%" y="853" width="0.0623%" height="15" fill="rgb(221,11,5)" fg:x="79149" fg:w="69"/><text x="71.6854%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="71.4850%" y="837" width="0.0126%" height="15" fill="rgb(220,148,13)" fg:x="79204" fg:w="14"/><text x="71.7350%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="71.4850%" y="821" width="0.0126%" height="15" fill="rgb(210,16,3)" fg:x="79204" fg:w="14"/><text x="71.7350%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.01%)</title><rect x="71.4850%" y="805" width="0.0126%" height="15" fill="rgb(236,80,2)" fg:x="79204" fg:w="14"/><text x="71.7350%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.01%)</title><rect x="71.4850%" y="789" width="0.0126%" height="15" fill="rgb(239,129,19)" fg:x="79204" fg:w="14"/><text x="71.7350%" y="799.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,499 samples, 1.35%)</title><rect x="70.4209%" y="949" width="1.3529%" height="15" fill="rgb(220,106,35)" fg:x="78025" fg:w="1499"/><text x="70.6709%" y="959.50"></text></g><g><title>event_listener::Event::notify (700 samples, 0.63%)</title><rect x="71.1421%" y="933" width="0.6318%" height="15" fill="rgb(252,139,45)" fg:x="78824" fg:w="700"/><text x="71.3921%" y="943.50"></text></g><g><title>event_listener::full_fence (306 samples, 0.28%)</title><rect x="71.4977%" y="917" width="0.2762%" height="15" fill="rgb(229,8,36)" fg:x="79218" fg:w="306"/><text x="71.7477%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (300 samples, 0.27%)</title><rect x="71.5031%" y="901" width="0.2708%" height="15" fill="rgb(230,126,33)" fg:x="79224" fg:w="300"/><text x="71.7531%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (300 samples, 0.27%)</title><rect x="71.5031%" y="885" width="0.2708%" height="15" fill="rgb(239,140,21)" fg:x="79224" fg:w="300"/><text x="71.7531%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (30 samples, 0.03%)</title><rect x="71.7739%" y="949" width="0.0271%" height="15" fill="rgb(254,104,9)" fg:x="79524" fg:w="30"/><text x="72.0239%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (25 samples, 0.02%)</title><rect x="71.8009%" y="949" width="0.0226%" height="15" fill="rgb(239,52,14)" fg:x="79554" fg:w="25"/><text x="72.0509%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="71.8244%" y="933" width="0.0190%" height="15" fill="rgb(208,227,44)" fg:x="79580" fg:w="21"/><text x="72.0744%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (21 samples, 0.02%)</title><rect x="71.8244%" y="917" width="0.0190%" height="15" fill="rgb(246,18,19)" fg:x="79580" fg:w="21"/><text x="72.0744%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (21 samples, 0.02%)</title><rect x="71.8244%" y="901" width="0.0190%" height="15" fill="rgb(235,228,25)" fg:x="79580" fg:w="21"/><text x="72.0744%" y="911.50"></text></g><g><title>event_listener::Inner::lock (15 samples, 0.01%)</title><rect x="71.8542%" y="933" width="0.0135%" height="15" fill="rgb(240,156,20)" fg:x="79613" fg:w="15"/><text x="72.1042%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="71.8542%" y="917" width="0.0135%" height="15" fill="rgb(224,8,20)" fg:x="79613" fg:w="15"/><text x="72.1042%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="71.8551%" y="901" width="0.0126%" height="15" fill="rgb(214,12,52)" fg:x="79614" fg:w="14"/><text x="72.1051%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="71.8551%" y="885" width="0.0126%" height="15" fill="rgb(211,220,47)" fg:x="79614" fg:w="14"/><text x="72.1051%" y="895.50"></text></g><g><title>___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="71.8560%" y="869" width="0.0117%" height="15" fill="rgb(250,173,5)" fg:x="79615" fg:w="13"/><text x="72.1060%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,611 samples, 2.36%)</title><rect x="69.5211%" y="1029" width="2.3565%" height="15" fill="rgb(250,125,52)" fg:x="77028" fg:w="2611"/><text x="69.7711%" y="1039.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,611 samples, 2.36%)</title><rect x="69.5211%" y="1013" width="2.3565%" height="15" fill="rgb(209,133,18)" fg:x="77028" fg:w="2611"/><text x="69.7711%" y="1023.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,611 samples, 2.36%)</title><rect x="69.5211%" y="997" width="2.3565%" height="15" fill="rgb(216,173,22)" fg:x="77028" fg:w="2611"/><text x="69.7711%" y="1007.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,611 samples, 2.36%)</title><rect x="69.5211%" y="981" width="2.3565%" height="15" fill="rgb(205,3,22)" fg:x="77028" fg:w="2611"/><text x="69.7711%" y="991.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,611 samples, 2.36%)</title><rect x="69.5211%" y="965" width="2.3565%" height="15" fill="rgb(248,22,20)" fg:x="77028" fg:w="2611"/><text x="69.7711%" y="975.50">&lt;..</text></g><g><title>event_listener::Event::listen (60 samples, 0.05%)</title><rect x="71.8235%" y="949" width="0.0542%" height="15" fill="rgb(233,6,29)" fg:x="79579" fg:w="60"/><text x="72.0735%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (259 samples, 0.23%)</title><rect x="72.0708%" y="549" width="0.2338%" height="15" fill="rgb(240,22,54)" fg:x="79853" fg:w="259"/><text x="72.3208%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (259 samples, 0.23%)</title><rect x="72.0708%" y="533" width="0.2338%" height="15" fill="rgb(231,133,32)" fg:x="79853" fg:w="259"/><text x="72.3208%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (248 samples, 0.22%)</title><rect x="72.0807%" y="517" width="0.2238%" height="15" fill="rgb(248,193,4)" fg:x="79864" fg:w="248"/><text x="72.3307%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (225 samples, 0.20%)</title><rect x="72.1015%" y="501" width="0.2031%" height="15" fill="rgb(211,178,46)" fg:x="79887" fg:w="225"/><text x="72.3515%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (225 samples, 0.20%)</title><rect x="72.1015%" y="485" width="0.2031%" height="15" fill="rgb(224,5,42)" fg:x="79887" fg:w="225"/><text x="72.3515%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (279 samples, 0.25%)</title><rect x="72.0582%" y="661" width="0.2518%" height="15" fill="rgb(239,176,25)" fg:x="79839" fg:w="279"/><text x="72.3082%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (279 samples, 0.25%)</title><rect x="72.0582%" y="645" width="0.2518%" height="15" fill="rgb(245,187,50)" fg:x="79839" fg:w="279"/><text x="72.3082%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (279 samples, 0.25%)</title><rect x="72.0582%" y="629" width="0.2518%" height="15" fill="rgb(248,24,15)" fg:x="79839" fg:w="279"/><text x="72.3082%" y="639.50"></text></g><g><title>alloc::alloc::alloc (278 samples, 0.25%)</title><rect x="72.0591%" y="613" width="0.2509%" height="15" fill="rgb(205,166,13)" fg:x="79840" fg:w="278"/><text x="72.3091%" y="623.50"></text></g><g><title>__rg_alloc (278 samples, 0.25%)</title><rect x="72.0591%" y="597" width="0.2509%" height="15" fill="rgb(208,114,23)" fg:x="79840" fg:w="278"/><text x="72.3091%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (278 samples, 0.25%)</title><rect x="72.0591%" y="581" width="0.2509%" height="15" fill="rgb(239,127,18)" fg:x="79840" fg:w="278"/><text x="72.3091%" y="591.50"></text></g><g><title>rust_alloc (278 samples, 0.25%)</title><rect x="72.0591%" y="565" width="0.2509%" height="15" fill="rgb(219,154,28)" fg:x="79840" fg:w="278"/><text x="72.3091%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (13 samples, 0.01%)</title><rect x="72.3100%" y="661" width="0.0117%" height="15" fill="rgb(225,157,23)" fg:x="80118" fg:w="13"/><text x="72.5600%" y="671.50"></text></g><g><title>alloc::slice::hack::into_vec (13 samples, 0.01%)</title><rect x="72.3100%" y="645" width="0.0117%" height="15" fill="rgb(219,8,6)" fg:x="80118" fg:w="13"/><text x="72.5600%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (13 samples, 0.01%)</title><rect x="72.3100%" y="629" width="0.0117%" height="15" fill="rgb(212,47,6)" fg:x="80118" fg:w="13"/><text x="72.5600%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="72.3217%" y="661" width="0.0117%" height="15" fill="rgb(224,190,4)" fg:x="80131" fg:w="13"/><text x="72.5717%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="72.3334%" y="661" width="0.0108%" height="15" fill="rgb(239,183,29)" fg:x="80144" fg:w="12"/><text x="72.5834%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="72.3334%" y="645" width="0.0108%" height="15" fill="rgb(213,57,7)" fg:x="80144" fg:w="12"/><text x="72.5834%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="72.3334%" y="629" width="0.0108%" height="15" fill="rgb(216,148,1)" fg:x="80144" fg:w="12"/><text x="72.5834%" y="639.50"></text></g><g><title>core::time::Duration::as_nanos (17 samples, 0.02%)</title><rect x="72.3750%" y="645" width="0.0153%" height="15" fill="rgb(236,182,29)" fg:x="80190" fg:w="17"/><text x="72.6250%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (53 samples, 0.05%)</title><rect x="72.4381%" y="597" width="0.0478%" height="15" fill="rgb(244,120,48)" fg:x="80260" fg:w="53"/><text x="72.6881%" y="607.50"></text></g><g><title>core::cmp::PartialOrd::ge (53 samples, 0.05%)</title><rect x="72.4381%" y="581" width="0.0478%" height="15" fill="rgb(206,71,34)" fg:x="80260" fg:w="53"/><text x="72.6881%" y="591.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (52 samples, 0.05%)</title><rect x="72.4390%" y="565" width="0.0469%" height="15" fill="rgb(242,32,6)" fg:x="80261" fg:w="52"/><text x="72.6890%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (52 samples, 0.05%)</title><rect x="72.4390%" y="549" width="0.0469%" height="15" fill="rgb(241,35,3)" fg:x="80261" fg:w="52"/><text x="72.6890%" y="559.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (52 samples, 0.05%)</title><rect x="72.4390%" y="533" width="0.0469%" height="15" fill="rgb(222,62,19)" fg:x="80261" fg:w="52"/><text x="72.6890%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (26 samples, 0.02%)</title><rect x="72.4625%" y="517" width="0.0235%" height="15" fill="rgb(223,110,41)" fg:x="80287" fg:w="26"/><text x="72.7125%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (120 samples, 0.11%)</title><rect x="72.3903%" y="629" width="0.1083%" height="15" fill="rgb(208,224,4)" fg:x="80207" fg:w="120"/><text x="72.6403%" y="639.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (120 samples, 0.11%)</title><rect x="72.3903%" y="613" width="0.1083%" height="15" fill="rgb(241,137,19)" fg:x="80207" fg:w="120"/><text x="72.6403%" y="623.50"></text></g><g><title>core::time::Duration::new (14 samples, 0.01%)</title><rect x="72.4860%" y="597" width="0.0126%" height="15" fill="rgb(244,24,17)" fg:x="80313" fg:w="14"/><text x="72.7360%" y="607.50"></text></g><g><title>std::time::SystemTime::duration_since (125 samples, 0.11%)</title><rect x="72.3903%" y="645" width="0.1128%" height="15" fill="rgb(245,178,49)" fg:x="80207" fg:w="125"/><text x="72.6403%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (3,873 samples, 3.50%)</title><rect x="69.5211%" y="1045" width="3.4956%" height="15" fill="rgb(219,160,38)" fg:x="77028" fg:w="3873"/><text x="69.7711%" y="1055.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,262 samples, 1.14%)</title><rect x="71.8777%" y="1029" width="1.1390%" height="15" fill="rgb(228,137,14)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,262 samples, 1.14%)</title><rect x="71.8777%" y="1013" width="1.1390%" height="15" fill="rgb(237,134,11)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="1023.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,262 samples, 1.14%)</title><rect x="71.8777%" y="997" width="1.1390%" height="15" fill="rgb(211,126,44)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="1007.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,262 samples, 1.14%)</title><rect x="71.8777%" y="981" width="1.1390%" height="15" fill="rgb(226,171,33)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="991.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,262 samples, 1.14%)</title><rect x="71.8777%" y="965" width="1.1390%" height="15" fill="rgb(253,99,13)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="975.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,262 samples, 1.14%)</title><rect x="71.8777%" y="949" width="1.1390%" height="15" fill="rgb(244,48,7)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="959.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,262 samples, 1.14%)</title><rect x="71.8777%" y="933" width="1.1390%" height="15" fill="rgb(244,217,54)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1,262 samples, 1.14%)</title><rect x="71.8777%" y="917" width="1.1390%" height="15" fill="rgb(224,15,18)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="927.50"></text></g><g><title>std::panicking::try (1,262 samples, 1.14%)</title><rect x="71.8777%" y="901" width="1.1390%" height="15" fill="rgb(244,99,12)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1,262 samples, 1.14%)</title><rect x="71.8777%" y="885" width="1.1390%" height="15" fill="rgb(233,226,8)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="895.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,262 samples, 1.14%)</title><rect x="71.8777%" y="869" width="1.1390%" height="15" fill="rgb(229,211,3)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,262 samples, 1.14%)</title><rect x="71.8777%" y="853" width="1.1390%" height="15" fill="rgb(216,140,21)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="863.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,262 samples, 1.14%)</title><rect x="71.8777%" y="837" width="1.1390%" height="15" fill="rgb(234,122,30)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="847.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,262 samples, 1.14%)</title><rect x="71.8777%" y="821" width="1.1390%" height="15" fill="rgb(236,25,46)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="831.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,262 samples, 1.14%)</title><rect x="71.8777%" y="805" width="1.1390%" height="15" fill="rgb(217,52,54)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,262 samples, 1.14%)</title><rect x="71.8777%" y="789" width="1.1390%" height="15" fill="rgb(222,29,26)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="799.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,262 samples, 1.14%)</title><rect x="71.8777%" y="773" width="1.1390%" height="15" fill="rgb(216,177,29)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="783.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,262 samples, 1.14%)</title><rect x="71.8777%" y="757" width="1.1390%" height="15" fill="rgb(247,136,51)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="767.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,262 samples, 1.14%)</title><rect x="71.8777%" y="741" width="1.1390%" height="15" fill="rgb(231,47,47)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="751.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,262 samples, 1.14%)</title><rect x="71.8777%" y="725" width="1.1390%" height="15" fill="rgb(211,192,36)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,262 samples, 1.14%)</title><rect x="71.8777%" y="709" width="1.1390%" height="15" fill="rgb(229,156,32)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="719.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,262 samples, 1.14%)</title><rect x="71.8777%" y="693" width="1.1390%" height="15" fill="rgb(248,213,20)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="703.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (1,262 samples, 1.14%)</title><rect x="71.8777%" y="677" width="1.1390%" height="15" fill="rgb(217,64,7)" fg:x="79639" fg:w="1262"/><text x="72.1277%" y="687.50"></text></g><g><title>tremor_common::time::nanotime (737 samples, 0.67%)</title><rect x="72.3515%" y="661" width="0.6652%" height="15" fill="rgb(232,142,8)" fg:x="80164" fg:w="737"/><text x="72.6015%" y="671.50"></text></g><g><title>std::time::SystemTime::now (569 samples, 0.51%)</title><rect x="72.5031%" y="645" width="0.5135%" height="15" fill="rgb(224,92,44)" fg:x="80332" fg:w="569"/><text x="72.7531%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (569 samples, 0.51%)</title><rect x="72.5031%" y="629" width="0.5135%" height="15" fill="rgb(214,169,17)" fg:x="80332" fg:w="569"/><text x="72.7531%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::now (569 samples, 0.51%)</title><rect x="72.5031%" y="613" width="0.5135%" height="15" fill="rgb(210,59,37)" fg:x="80332" fg:w="569"/><text x="72.7531%" y="623.50"></text></g><g><title>__clock_gettime_2 (466 samples, 0.42%)</title><rect x="72.5961%" y="597" width="0.4206%" height="15" fill="rgb(214,116,48)" fg:x="80435" fg:w="466"/><text x="72.8461%" y="607.50"></text></g><g><title>__vdso_clock_gettime (458 samples, 0.41%)</title><rect x="72.6033%" y="581" width="0.4134%" height="15" fill="rgb(244,191,6)" fg:x="80443" fg:w="458"/><text x="72.8533%" y="591.50"></text></g><g><title>[[vdso]] (313 samples, 0.28%)</title><rect x="72.7342%" y="565" width="0.2825%" height="15" fill="rgb(241,50,52)" fg:x="80588" fg:w="313"/><text x="72.9842%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="73.6069%" y="917" width="0.0108%" height="15" fill="rgb(236,75,39)" fg:x="81555" fg:w="12"/><text x="73.8569%" y="927.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (12 samples, 0.01%)</title><rect x="73.6069%" y="901" width="0.0108%" height="15" fill="rgb(236,99,0)" fg:x="81555" fg:w="12"/><text x="73.8569%" y="911.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::default::Default&gt;::default (22 samples, 0.02%)</title><rect x="73.6042%" y="949" width="0.0199%" height="15" fill="rgb(207,202,15)" fg:x="81552" fg:w="22"/><text x="73.8542%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::default::Default for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::default (19 samples, 0.02%)</title><rect x="73.6069%" y="933" width="0.0171%" height="15" fill="rgb(233,207,14)" fg:x="81555" fg:w="19"/><text x="73.8569%" y="943.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (16 samples, 0.01%)</title><rect x="73.6385%" y="853" width="0.0144%" height="15" fill="rgb(226,27,51)" fg:x="81590" fg:w="16"/><text x="73.8885%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (24 samples, 0.02%)</title><rect x="73.6385%" y="917" width="0.0217%" height="15" fill="rgb(206,104,42)" fg:x="81590" fg:w="24"/><text x="73.8885%" y="927.50"></text></g><g><title>std::collections::hash::map::RandomState::new (24 samples, 0.02%)</title><rect x="73.6385%" y="901" width="0.0217%" height="15" fill="rgb(212,225,4)" fg:x="81590" fg:w="24"/><text x="73.8885%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24 samples, 0.02%)</title><rect x="73.6385%" y="885" width="0.0217%" height="15" fill="rgb(233,96,42)" fg:x="81590" fg:w="24"/><text x="73.8885%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24 samples, 0.02%)</title><rect x="73.6385%" y="869" width="0.0217%" height="15" fill="rgb(229,21,32)" fg:x="81590" fg:w="24"/><text x="73.8885%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (68 samples, 0.06%)</title><rect x="73.7062%" y="677" width="0.0614%" height="15" fill="rgb(226,216,24)" fg:x="81665" fg:w="68"/><text x="73.9562%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (68 samples, 0.06%)</title><rect x="73.7062%" y="661" width="0.0614%" height="15" fill="rgb(221,163,17)" fg:x="81665" fg:w="68"/><text x="73.9562%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (58 samples, 0.05%)</title><rect x="73.7152%" y="645" width="0.0523%" height="15" fill="rgb(216,216,42)" fg:x="81675" fg:w="58"/><text x="73.9652%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (46 samples, 0.04%)</title><rect x="73.7261%" y="629" width="0.0415%" height="15" fill="rgb(240,118,7)" fg:x="81687" fg:w="46"/><text x="73.9761%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (46 samples, 0.04%)</title><rect x="73.7261%" y="613" width="0.0415%" height="15" fill="rgb(221,67,37)" fg:x="81687" fg:w="46"/><text x="73.9761%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (46 samples, 0.04%)</title><rect x="73.7261%" y="597" width="0.0415%" height="15" fill="rgb(241,32,44)" fg:x="81687" fg:w="46"/><text x="73.9761%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="73.7730%" y="677" width="0.0352%" height="15" fill="rgb(235,204,43)" fg:x="81739" fg:w="39"/><text x="74.0230%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="73.7730%" y="661" width="0.0352%" height="15" fill="rgb(213,116,10)" fg:x="81739" fg:w="39"/><text x="74.0230%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="73.7739%" y="645" width="0.0343%" height="15" fill="rgb(239,15,48)" fg:x="81740" fg:w="38"/><text x="74.0239%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="73.7748%" y="629" width="0.0334%" height="15" fill="rgb(207,123,36)" fg:x="81741" fg:w="37"/><text x="74.0248%" y="639.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (37 samples, 0.03%)</title><rect x="73.7748%" y="613" width="0.0334%" height="15" fill="rgb(209,103,30)" fg:x="81741" fg:w="37"/><text x="74.0248%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (17 samples, 0.02%)</title><rect x="73.7928%" y="597" width="0.0153%" height="15" fill="rgb(238,100,19)" fg:x="81761" fg:w="17"/><text x="74.0428%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="73.7928%" y="581" width="0.0153%" height="15" fill="rgb(244,30,14)" fg:x="81761" fg:w="17"/><text x="74.0428%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (232 samples, 0.21%)</title><rect x="73.6602%" y="853" width="0.2094%" height="15" fill="rgb(249,174,6)" fg:x="81614" fg:w="232"/><text x="73.9102%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (216 samples, 0.19%)</title><rect x="73.6746%" y="837" width="0.1949%" height="15" fill="rgb(235,213,41)" fg:x="81630" fg:w="216"/><text x="73.9246%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (216 samples, 0.19%)</title><rect x="73.6746%" y="821" width="0.1949%" height="15" fill="rgb(213,118,6)" fg:x="81630" fg:w="216"/><text x="73.9246%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (216 samples, 0.19%)</title><rect x="73.6746%" y="805" width="0.1949%" height="15" fill="rgb(235,44,51)" fg:x="81630" fg:w="216"/><text x="73.9246%" y="815.50"></text></g><g><title>alloc::alloc::alloc (216 samples, 0.19%)</title><rect x="73.6746%" y="789" width="0.1949%" height="15" fill="rgb(217,9,53)" fg:x="81630" fg:w="216"/><text x="73.9246%" y="799.50"></text></g><g><title>__rg_alloc (216 samples, 0.19%)</title><rect x="73.6746%" y="773" width="0.1949%" height="15" fill="rgb(237,172,34)" fg:x="81630" fg:w="216"/><text x="73.9246%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (216 samples, 0.19%)</title><rect x="73.6746%" y="757" width="0.1949%" height="15" fill="rgb(206,206,11)" fg:x="81630" fg:w="216"/><text x="73.9246%" y="767.50"></text></g><g><title>rust_alloc (203 samples, 0.18%)</title><rect x="73.6863%" y="741" width="0.1832%" height="15" fill="rgb(214,149,29)" fg:x="81643" fg:w="203"/><text x="73.9363%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (200 samples, 0.18%)</title><rect x="73.6891%" y="725" width="0.1805%" height="15" fill="rgb(208,123,3)" fg:x="81646" fg:w="200"/><text x="73.9391%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (200 samples, 0.18%)</title><rect x="73.6891%" y="709" width="0.1805%" height="15" fill="rgb(229,126,4)" fg:x="81646" fg:w="200"/><text x="73.9391%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (191 samples, 0.17%)</title><rect x="73.6972%" y="693" width="0.1724%" height="15" fill="rgb(222,92,36)" fg:x="81655" fg:w="191"/><text x="73.9472%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (68 samples, 0.06%)</title><rect x="73.8082%" y="677" width="0.0614%" height="15" fill="rgb(216,39,41)" fg:x="81778" fg:w="68"/><text x="74.0582%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (68 samples, 0.06%)</title><rect x="73.8082%" y="661" width="0.0614%" height="15" fill="rgb(253,127,28)" fg:x="81778" fg:w="68"/><text x="74.0582%" y="671.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (283 samples, 0.26%)</title><rect x="73.6241%" y="949" width="0.2554%" height="15" fill="rgb(249,152,51)" fg:x="81574" fg:w="283"/><text x="73.8741%" y="959.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (267 samples, 0.24%)</title><rect x="73.6385%" y="933" width="0.2410%" height="15" fill="rgb(209,123,42)" fg:x="81590" fg:w="267"/><text x="73.8885%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (243 samples, 0.22%)</title><rect x="73.6602%" y="917" width="0.2193%" height="15" fill="rgb(241,118,22)" fg:x="81614" fg:w="243"/><text x="73.9102%" y="927.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (243 samples, 0.22%)</title><rect x="73.6602%" y="901" width="0.2193%" height="15" fill="rgb(208,25,7)" fg:x="81614" fg:w="243"/><text x="73.9102%" y="911.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (243 samples, 0.22%)</title><rect x="73.6602%" y="885" width="0.2193%" height="15" fill="rgb(243,144,39)" fg:x="81614" fg:w="243"/><text x="73.9102%" y="895.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (243 samples, 0.22%)</title><rect x="73.6602%" y="869" width="0.2193%" height="15" fill="rgb(250,50,5)" fg:x="81614" fg:w="243"/><text x="73.9102%" y="879.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (12 samples, 0.01%)</title><rect x="74.1846%" y="789" width="0.0108%" height="15" fill="rgb(207,67,11)" fg:x="82195" fg:w="12"/><text x="74.4346%" y="799.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (15 samples, 0.01%)</title><rect x="74.1954%" y="773" width="0.0135%" height="15" fill="rgb(245,204,40)" fg:x="82207" fg:w="15"/><text x="74.4454%" y="783.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (28 samples, 0.03%)</title><rect x="74.1954%" y="789" width="0.0253%" height="15" fill="rgb(238,228,24)" fg:x="82207" fg:w="28"/><text x="74.4454%" y="799.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="74.2089%" y="773" width="0.0117%" height="15" fill="rgb(217,116,22)" fg:x="82222" fg:w="13"/><text x="74.4589%" y="783.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (18 samples, 0.02%)</title><rect x="74.3407%" y="773" width="0.0162%" height="15" fill="rgb(234,98,12)" fg:x="82368" fg:w="18"/><text x="74.5907%" y="783.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (18 samples, 0.02%)</title><rect x="74.3407%" y="757" width="0.0162%" height="15" fill="rgb(242,170,50)" fg:x="82368" fg:w="18"/><text x="74.5907%" y="767.50"></text></g><g><title>core::mem::replace (18 samples, 0.02%)</title><rect x="74.3407%" y="741" width="0.0162%" height="15" fill="rgb(235,7,5)" fg:x="82368" fg:w="18"/><text x="74.5907%" y="751.50"></text></g><g><title>core::ptr::write (18 samples, 0.02%)</title><rect x="74.3407%" y="725" width="0.0162%" height="15" fill="rgb(241,114,28)" fg:x="82368" fg:w="18"/><text x="74.5907%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (216 samples, 0.19%)</title><rect x="74.1846%" y="853" width="0.1949%" height="15" fill="rgb(246,112,42)" fg:x="82195" fg:w="216"/><text x="74.4346%" y="863.50"></text></g><g><title>std::collections::hash::map::RandomState::new (216 samples, 0.19%)</title><rect x="74.1846%" y="837" width="0.1949%" height="15" fill="rgb(248,228,14)" fg:x="82195" fg:w="216"/><text x="74.4346%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (216 samples, 0.19%)</title><rect x="74.1846%" y="821" width="0.1949%" height="15" fill="rgb(208,133,18)" fg:x="82195" fg:w="216"/><text x="74.4346%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (216 samples, 0.19%)</title><rect x="74.1846%" y="805" width="0.1949%" height="15" fill="rgb(207,35,49)" fg:x="82195" fg:w="216"/><text x="74.4346%" y="815.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (176 samples, 0.16%)</title><rect x="74.2207%" y="789" width="0.1588%" height="15" fill="rgb(205,68,36)" fg:x="82235" fg:w="176"/><text x="74.4707%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (25 samples, 0.02%)</title><rect x="74.3569%" y="773" width="0.0226%" height="15" fill="rgb(245,62,40)" fg:x="82386" fg:w="25"/><text x="74.6069%" y="783.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (12 samples, 0.01%)</title><rect x="74.4634%" y="501" width="0.0108%" height="15" fill="rgb(228,27,24)" fg:x="82504" fg:w="12"/><text x="74.7134%" y="511.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="74.4634%" y="485" width="0.0108%" height="15" fill="rgb(253,19,12)" fg:x="82504" fg:w="12"/><text x="74.7134%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (28 samples, 0.03%)</title><rect x="74.4589%" y="549" width="0.0253%" height="15" fill="rgb(232,28,20)" fg:x="82499" fg:w="28"/><text x="74.7089%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (28 samples, 0.03%)</title><rect x="74.4589%" y="533" width="0.0253%" height="15" fill="rgb(218,35,51)" fg:x="82499" fg:w="28"/><text x="74.7089%" y="543.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (27 samples, 0.02%)</title><rect x="74.4598%" y="517" width="0.0244%" height="15" fill="rgb(212,90,40)" fg:x="82500" fg:w="27"/><text x="74.7098%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (36 samples, 0.03%)</title><rect x="74.4589%" y="565" width="0.0325%" height="15" fill="rgb(220,172,12)" fg:x="82499" fg:w="36"/><text x="74.7089%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (64 samples, 0.06%)</title><rect x="74.4463%" y="581" width="0.0578%" height="15" fill="rgb(226,159,20)" fg:x="82485" fg:w="64"/><text x="74.6963%" y="591.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (39 samples, 0.04%)</title><rect x="74.5239%" y="565" width="0.0352%" height="15" fill="rgb(234,205,16)" fg:x="82571" fg:w="39"/><text x="74.7739%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (394 samples, 0.36%)</title><rect x="74.4463%" y="613" width="0.3556%" height="15" fill="rgb(207,9,39)" fg:x="82485" fg:w="394"/><text x="74.6963%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (394 samples, 0.36%)</title><rect x="74.4463%" y="597" width="0.3556%" height="15" fill="rgb(249,143,15)" fg:x="82485" fg:w="394"/><text x="74.6963%" y="607.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (330 samples, 0.30%)</title><rect x="74.5041%" y="581" width="0.2978%" height="15" fill="rgb(253,133,29)" fg:x="82549" fg:w="330"/><text x="74.7541%" y="591.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (269 samples, 0.24%)</title><rect x="74.5591%" y="565" width="0.2428%" height="15" fill="rgb(221,187,0)" fg:x="82610" fg:w="269"/><text x="74.8091%" y="575.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (269 samples, 0.24%)</title><rect x="74.5591%" y="549" width="0.2428%" height="15" fill="rgb(205,204,26)" fg:x="82610" fg:w="269"/><text x="74.8091%" y="559.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (269 samples, 0.24%)</title><rect x="74.5591%" y="533" width="0.2428%" height="15" fill="rgb(224,68,54)" fg:x="82610" fg:w="269"/><text x="74.8091%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::take (13 samples, 0.01%)</title><rect x="74.8136%" y="581" width="0.0117%" height="15" fill="rgb(209,67,4)" fg:x="82892" fg:w="13"/><text x="75.0636%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (13 samples, 0.01%)</title><rect x="74.8136%" y="565" width="0.0117%" height="15" fill="rgb(228,229,18)" fg:x="82892" fg:w="13"/><text x="75.0636%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="74.8019%" y="613" width="0.0262%" height="15" fill="rgb(231,89,13)" fg:x="82879" fg:w="29"/><text x="75.0519%" y="623.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (29 samples, 0.03%)</title><rect x="74.8019%" y="597" width="0.0262%" height="15" fill="rgb(210,182,18)" fg:x="82879" fg:w="29"/><text x="75.0519%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="74.8281%" y="613" width="0.0117%" height="15" fill="rgb(240,105,2)" fg:x="82908" fg:w="13"/><text x="75.0781%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="74.8281%" y="597" width="0.0117%" height="15" fill="rgb(207,170,50)" fg:x="82908" fg:w="13"/><text x="75.0781%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="74.8281%" y="581" width="0.0117%" height="15" fill="rgb(232,133,24)" fg:x="82908" fg:w="13"/><text x="75.0781%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="74.8281%" y="565" width="0.0117%" height="15" fill="rgb(235,166,27)" fg:x="82908" fg:w="13"/><text x="75.0781%" y="575.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (13 samples, 0.01%)</title><rect x="74.8281%" y="549" width="0.0117%" height="15" fill="rgb(209,19,13)" fg:x="82908" fg:w="13"/><text x="75.0781%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::empty (12 samples, 0.01%)</title><rect x="74.8398%" y="613" width="0.0108%" height="15" fill="rgb(226,79,39)" fg:x="82921" fg:w="12"/><text x="75.0898%" y="623.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (12 samples, 0.01%)</title><rect x="74.8398%" y="597" width="0.0108%" height="15" fill="rgb(222,163,10)" fg:x="82921" fg:w="12"/><text x="75.0898%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (718 samples, 0.65%)</title><rect x="74.4328%" y="661" width="0.6480%" height="15" fill="rgb(214,44,19)" fg:x="82470" fg:w="718"/><text x="74.6828%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (713 samples, 0.64%)</title><rect x="74.4373%" y="645" width="0.6435%" height="15" fill="rgb(210,217,13)" fg:x="82475" fg:w="713"/><text x="74.6873%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (708 samples, 0.64%)</title><rect x="74.4418%" y="629" width="0.6390%" height="15" fill="rgb(237,61,54)" fg:x="82480" fg:w="708"/><text x="74.6918%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::take (255 samples, 0.23%)</title><rect x="74.8506%" y="613" width="0.2301%" height="15" fill="rgb(226,184,24)" fg:x="82933" fg:w="255"/><text x="75.1006%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (255 samples, 0.23%)</title><rect x="74.8506%" y="597" width="0.2301%" height="15" fill="rgb(223,226,4)" fg:x="82933" fg:w="255"/><text x="75.1006%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (1,015 samples, 0.92%)</title><rect x="74.1846%" y="885" width="0.9161%" height="15" fill="rgb(210,26,41)" fg:x="82195" fg:w="1015"/><text x="74.4346%" y="895.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1,015 samples, 0.92%)</title><rect x="74.1846%" y="869" width="0.9161%" height="15" fill="rgb(220,221,6)" fg:x="82195" fg:w="1015"/><text x="74.4346%" y="879.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (799 samples, 0.72%)</title><rect x="74.3795%" y="853" width="0.7211%" height="15" fill="rgb(225,89,49)" fg:x="82411" fg:w="799"/><text x="74.6295%" y="863.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (799 samples, 0.72%)</title><rect x="74.3795%" y="837" width="0.7211%" height="15" fill="rgb(218,70,45)" fg:x="82411" fg:w="799"/><text x="74.6295%" y="847.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (799 samples, 0.72%)</title><rect x="74.3795%" y="821" width="0.7211%" height="15" fill="rgb(238,166,21)" fg:x="82411" fg:w="799"/><text x="74.6295%" y="831.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (799 samples, 0.72%)</title><rect x="74.3795%" y="805" width="0.7211%" height="15" fill="rgb(224,141,44)" fg:x="82411" fg:w="799"/><text x="74.6295%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (789 samples, 0.71%)</title><rect x="74.3885%" y="789" width="0.7121%" height="15" fill="rgb(230,12,49)" fg:x="82421" fg:w="789"/><text x="74.6385%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (764 samples, 0.69%)</title><rect x="74.4111%" y="773" width="0.6895%" height="15" fill="rgb(212,174,12)" fg:x="82446" fg:w="764"/><text x="74.6611%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (764 samples, 0.69%)</title><rect x="74.4111%" y="757" width="0.6895%" height="15" fill="rgb(246,67,9)" fg:x="82446" fg:w="764"/><text x="74.6611%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (764 samples, 0.69%)</title><rect x="74.4111%" y="741" width="0.6895%" height="15" fill="rgb(239,35,23)" fg:x="82446" fg:w="764"/><text x="74.6611%" y="751.50"></text></g><g><title>alloc::alloc::alloc (761 samples, 0.69%)</title><rect x="74.4138%" y="725" width="0.6868%" height="15" fill="rgb(211,167,0)" fg:x="82449" fg:w="761"/><text x="74.6638%" y="735.50"></text></g><g><title>__rg_alloc (761 samples, 0.69%)</title><rect x="74.4138%" y="709" width="0.6868%" height="15" fill="rgb(225,119,45)" fg:x="82449" fg:w="761"/><text x="74.6638%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (761 samples, 0.69%)</title><rect x="74.4138%" y="693" width="0.6868%" height="15" fill="rgb(210,162,6)" fg:x="82449" fg:w="761"/><text x="74.6638%" y="703.50"></text></g><g><title>rust_alloc (752 samples, 0.68%)</title><rect x="74.4219%" y="677" width="0.6787%" height="15" fill="rgb(208,118,35)" fg:x="82458" fg:w="752"/><text x="74.6719%" y="687.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (22 samples, 0.02%)</title><rect x="75.0808%" y="661" width="0.0199%" height="15" fill="rgb(239,4,53)" fg:x="83188" fg:w="22"/><text x="75.3308%" y="671.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (1,115 samples, 1.01%)</title><rect x="74.1160%" y="933" width="1.0063%" height="15" fill="rgb(213,130,21)" fg:x="82119" fg:w="1115"/><text x="74.3660%" y="943.50"></text></g><g><title>value_trait::Builder::object (1,039 samples, 0.94%)</title><rect x="74.1846%" y="917" width="0.9377%" height="15" fill="rgb(235,148,0)" fg:x="82195" fg:w="1039"/><text x="74.4346%" y="927.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (1,039 samples, 0.94%)</title><rect x="74.1846%" y="901" width="0.9377%" height="15" fill="rgb(244,224,18)" fg:x="82195" fg:w="1039"/><text x="74.4346%" y="911.50"></text></g><g><title>tremor_value::value::Value::Object (24 samples, 0.02%)</title><rect x="75.1006%" y="885" width="0.0217%" height="15" fill="rgb(211,214,4)" fg:x="83210" fg:w="24"/><text x="75.3506%" y="895.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,779 samples, 1.61%)</title><rect x="73.5248%" y="965" width="1.6056%" height="15" fill="rgb(206,119,25)" fg:x="81464" fg:w="1779"/><text x="73.7748%" y="975.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (1,386 samples, 1.25%)</title><rect x="73.8795%" y="949" width="1.2509%" height="15" fill="rgb(243,93,47)" fg:x="81857" fg:w="1386"/><text x="74.1295%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (39 samples, 0.04%)</title><rect x="75.1349%" y="965" width="0.0352%" height="15" fill="rgb(224,194,6)" fg:x="83248" fg:w="39"/><text x="75.3849%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (39 samples, 0.04%)</title><rect x="75.1349%" y="949" width="0.0352%" height="15" fill="rgb(243,229,6)" fg:x="83248" fg:w="39"/><text x="75.3849%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (39 samples, 0.04%)</title><rect x="75.1349%" y="933" width="0.0352%" height="15" fill="rgb(207,23,50)" fg:x="83248" fg:w="39"/><text x="75.3849%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (13 samples, 0.01%)</title><rect x="75.1584%" y="917" width="0.0117%" height="15" fill="rgb(253,192,32)" fg:x="83274" fg:w="13"/><text x="75.4084%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (13 samples, 0.01%)</title><rect x="75.1584%" y="901" width="0.0117%" height="15" fill="rgb(213,21,6)" fg:x="83274" fg:w="13"/><text x="75.4084%" y="911.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="75.1584%" y="885" width="0.0117%" height="15" fill="rgb(243,151,13)" fg:x="83274" fg:w="13"/><text x="75.4084%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (13 samples, 0.01%)</title><rect x="75.1584%" y="869" width="0.0117%" height="15" fill="rgb(233,165,41)" fg:x="83274" fg:w="13"/><text x="75.4084%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (13 samples, 0.01%)</title><rect x="75.1584%" y="853" width="0.0117%" height="15" fill="rgb(246,176,45)" fg:x="83274" fg:w="13"/><text x="75.4084%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="75.1584%" y="837" width="0.0117%" height="15" fill="rgb(217,170,52)" fg:x="83274" fg:w="13"/><text x="75.4084%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="75.1584%" y="821" width="0.0117%" height="15" fill="rgb(214,203,54)" fg:x="83274" fg:w="13"/><text x="75.4084%" y="831.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (23 samples, 0.02%)</title><rect x="75.1828%" y="949" width="0.0208%" height="15" fill="rgb(248,215,49)" fg:x="83301" fg:w="23"/><text x="75.4328%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (45 samples, 0.04%)</title><rect x="75.2035%" y="949" width="0.0406%" height="15" fill="rgb(208,46,10)" fg:x="83324" fg:w="45"/><text x="75.4535%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (45 samples, 0.04%)</title><rect x="75.2035%" y="933" width="0.0406%" height="15" fill="rgb(254,5,31)" fg:x="83324" fg:w="45"/><text x="75.4535%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (29 samples, 0.03%)</title><rect x="75.2180%" y="917" width="0.0262%" height="15" fill="rgb(222,104,33)" fg:x="83340" fg:w="29"/><text x="75.4680%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (28 samples, 0.03%)</title><rect x="75.2189%" y="901" width="0.0253%" height="15" fill="rgb(248,49,16)" fg:x="83341" fg:w="28"/><text x="75.4689%" y="911.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="75.2324%" y="885" width="0.0117%" height="15" fill="rgb(232,198,41)" fg:x="83356" fg:w="13"/><text x="75.4824%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="75.2324%" y="869" width="0.0117%" height="15" fill="rgb(214,125,3)" fg:x="83356" fg:w="13"/><text x="75.4824%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (33 samples, 0.03%)</title><rect x="75.2441%" y="933" width="0.0298%" height="15" fill="rgb(229,220,28)" fg:x="83369" fg:w="33"/><text x="75.4941%" y="943.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (13 samples, 0.01%)</title><rect x="75.3064%" y="869" width="0.0117%" height="15" fill="rgb(222,64,37)" fg:x="83438" fg:w="13"/><text x="75.5564%" y="879.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (12 samples, 0.01%)</title><rect x="75.3669%" y="725" width="0.0108%" height="15" fill="rgb(249,184,13)" fg:x="83505" fg:w="12"/><text x="75.6169%" y="735.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="75.3669%" y="709" width="0.0108%" height="15" fill="rgb(252,176,6)" fg:x="83505" fg:w="12"/><text x="75.6169%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (32 samples, 0.03%)</title><rect x="75.3570%" y="773" width="0.0289%" height="15" fill="rgb(228,153,7)" fg:x="83494" fg:w="32"/><text x="75.6070%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (32 samples, 0.03%)</title><rect x="75.3570%" y="757" width="0.0289%" height="15" fill="rgb(242,193,5)" fg:x="83494" fg:w="32"/><text x="75.6070%" y="767.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (29 samples, 0.03%)</title><rect x="75.3597%" y="741" width="0.0262%" height="15" fill="rgb(232,140,9)" fg:x="83497" fg:w="29"/><text x="75.6097%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (78 samples, 0.07%)</title><rect x="75.3245%" y="853" width="0.0704%" height="15" fill="rgb(213,222,16)" fg:x="83458" fg:w="78"/><text x="75.5745%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (61 samples, 0.06%)</title><rect x="75.3398%" y="837" width="0.0551%" height="15" fill="rgb(222,75,50)" fg:x="83475" fg:w="61"/><text x="75.5898%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (61 samples, 0.06%)</title><rect x="75.3398%" y="821" width="0.0551%" height="15" fill="rgb(205,180,2)" fg:x="83475" fg:w="61"/><text x="75.5898%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (61 samples, 0.06%)</title><rect x="75.3398%" y="805" width="0.0551%" height="15" fill="rgb(216,34,7)" fg:x="83475" fg:w="61"/><text x="75.5898%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (61 samples, 0.06%)</title><rect x="75.3398%" y="789" width="0.0551%" height="15" fill="rgb(253,16,32)" fg:x="83475" fg:w="61"/><text x="75.5898%" y="799.50"></text></g><g><title>rust_dealloc (86 samples, 0.08%)</title><rect x="75.3181%" y="869" width="0.0776%" height="15" fill="rgb(208,97,28)" fg:x="83451" fg:w="86"/><text x="75.5681%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (174 samples, 0.16%)</title><rect x="75.2441%" y="949" width="0.1570%" height="15" fill="rgb(225,92,11)" fg:x="83369" fg:w="174"/><text x="75.4941%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (141 samples, 0.13%)</title><rect x="75.2739%" y="933" width="0.1273%" height="15" fill="rgb(243,38,12)" fg:x="83402" fg:w="141"/><text x="75.5239%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (119 samples, 0.11%)</title><rect x="75.2938%" y="917" width="0.1074%" height="15" fill="rgb(208,139,16)" fg:x="83424" fg:w="119"/><text x="75.5438%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (119 samples, 0.11%)</title><rect x="75.2938%" y="901" width="0.1074%" height="15" fill="rgb(227,24,9)" fg:x="83424" fg:w="119"/><text x="75.5438%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (119 samples, 0.11%)</title><rect x="75.2938%" y="885" width="0.1074%" height="15" fill="rgb(206,62,11)" fg:x="83424" fg:w="119"/><text x="75.5438%" y="895.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="75.4265%" y="805" width="0.0126%" height="15" fill="rgb(228,134,27)" fg:x="83571" fg:w="14"/><text x="75.6765%" y="815.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="75.4274%" y="789" width="0.0117%" height="15" fill="rgb(205,55,33)" fg:x="83572" fg:w="13"/><text x="75.6774%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (33 samples, 0.03%)</title><rect x="75.4174%" y="853" width="0.0298%" height="15" fill="rgb(243,75,43)" fg:x="83561" fg:w="33"/><text x="75.6674%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (33 samples, 0.03%)</title><rect x="75.4174%" y="837" width="0.0298%" height="15" fill="rgb(223,27,42)" fg:x="83561" fg:w="33"/><text x="75.6674%" y="847.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (33 samples, 0.03%)</title><rect x="75.4174%" y="821" width="0.0298%" height="15" fill="rgb(232,189,33)" fg:x="83561" fg:w="33"/><text x="75.6674%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (44 samples, 0.04%)</title><rect x="75.4093%" y="917" width="0.0397%" height="15" fill="rgb(210,9,39)" fg:x="83552" fg:w="44"/><text x="75.6593%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (44 samples, 0.04%)</title><rect x="75.4093%" y="901" width="0.0397%" height="15" fill="rgb(242,85,26)" fg:x="83552" fg:w="44"/><text x="75.6593%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (44 samples, 0.04%)</title><rect x="75.4093%" y="885" width="0.0397%" height="15" fill="rgb(248,44,4)" fg:x="83552" fg:w="44"/><text x="75.6593%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (44 samples, 0.04%)</title><rect x="75.4093%" y="869" width="0.0397%" height="15" fill="rgb(250,96,46)" fg:x="83552" fg:w="44"/><text x="75.6593%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (56 samples, 0.05%)</title><rect x="75.4057%" y="933" width="0.0505%" height="15" fill="rgb(229,116,26)" fg:x="83548" fg:w="56"/><text x="75.6557%" y="943.50"></text></g><g><title>rust_dealloc (67 samples, 0.06%)</title><rect x="75.4012%" y="949" width="0.0605%" height="15" fill="rgb(246,94,34)" fg:x="83543" fg:w="67"/><text x="75.6512%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (336 samples, 0.30%)</title><rect x="75.1701%" y="965" width="0.3033%" height="15" fill="rgb(251,73,21)" fg:x="83287" fg:w="336"/><text x="75.4201%" y="975.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (13 samples, 0.01%)</title><rect x="75.4617%" y="949" width="0.0117%" height="15" fill="rgb(254,121,25)" fg:x="83610" fg:w="13"/><text x="75.7117%" y="959.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (12 samples, 0.01%)</title><rect x="75.4626%" y="933" width="0.0108%" height="15" fill="rgb(215,161,49)" fg:x="83611" fg:w="12"/><text x="75.7126%" y="943.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (2,745 samples, 2.48%)</title><rect x="73.0167%" y="981" width="2.4775%" height="15" fill="rgb(221,43,13)" fg:x="80901" fg:w="2745"/><text x="73.2667%" y="991.50">tr..</text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (23 samples, 0.02%)</title><rect x="75.4734%" y="965" width="0.0208%" height="15" fill="rgb(249,5,37)" fg:x="83623" fg:w="23"/><text x="75.7234%" y="975.50"></text></g><g><title>tremor_pipeline::EventId::new (19 samples, 0.02%)</title><rect x="75.4770%" y="949" width="0.0171%" height="15" fill="rgb(226,25,44)" fg:x="83627" fg:w="19"/><text x="75.7270%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (35 samples, 0.03%)</title><rect x="75.9066%" y="805" width="0.0316%" height="15" fill="rgb(238,189,16)" fg:x="84103" fg:w="35"/><text x="76.1566%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (35 samples, 0.03%)</title><rect x="75.9066%" y="789" width="0.0316%" height="15" fill="rgb(251,186,8)" fg:x="84103" fg:w="35"/><text x="76.1566%" y="799.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (25 samples, 0.02%)</title><rect x="75.9156%" y="773" width="0.0226%" height="15" fill="rgb(254,34,31)" fg:x="84113" fg:w="25"/><text x="76.1656%" y="783.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (17 samples, 0.02%)</title><rect x="75.9229%" y="757" width="0.0153%" height="15" fill="rgb(225,215,27)" fg:x="84121" fg:w="17"/><text x="76.1729%" y="767.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="75.9229%" y="741" width="0.0153%" height="15" fill="rgb(221,192,48)" fg:x="84121" fg:w="17"/><text x="76.1729%" y="751.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="75.9229%" y="725" width="0.0153%" height="15" fill="rgb(219,137,20)" fg:x="84121" fg:w="17"/><text x="76.1729%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (202 samples, 0.18%)</title><rect x="75.8985%" y="853" width="0.1823%" height="15" fill="rgb(219,84,11)" fg:x="84094" fg:w="202"/><text x="76.1485%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (201 samples, 0.18%)</title><rect x="75.8994%" y="837" width="0.1814%" height="15" fill="rgb(224,10,23)" fg:x="84095" fg:w="201"/><text x="76.1494%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (193 samples, 0.17%)</title><rect x="75.9066%" y="821" width="0.1742%" height="15" fill="rgb(248,22,39)" fg:x="84103" fg:w="193"/><text x="76.1566%" y="831.50"></text></g><g><title>snmalloc::FreeListIter::take (148 samples, 0.13%)</title><rect x="75.9472%" y="805" width="0.1336%" height="15" fill="rgb(212,154,20)" fg:x="84148" fg:w="148"/><text x="76.1972%" y="815.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (148 samples, 0.13%)</title><rect x="75.9472%" y="789" width="0.1336%" height="15" fill="rgb(236,199,50)" fg:x="84148" fg:w="148"/><text x="76.1972%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (227 samples, 0.20%)</title><rect x="75.8813%" y="965" width="0.2049%" height="15" fill="rgb(211,9,17)" fg:x="84075" fg:w="227"/><text x="76.1313%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (227 samples, 0.20%)</title><rect x="75.8813%" y="949" width="0.2049%" height="15" fill="rgb(243,216,36)" fg:x="84075" fg:w="227"/><text x="76.1313%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (227 samples, 0.20%)</title><rect x="75.8813%" y="933" width="0.2049%" height="15" fill="rgb(250,2,10)" fg:x="84075" fg:w="227"/><text x="76.1313%" y="943.50"></text></g><g><title>alloc::alloc::alloc (227 samples, 0.20%)</title><rect x="75.8813%" y="917" width="0.2049%" height="15" fill="rgb(226,50,48)" fg:x="84075" fg:w="227"/><text x="76.1313%" y="927.50"></text></g><g><title>__rg_alloc (227 samples, 0.20%)</title><rect x="75.8813%" y="901" width="0.2049%" height="15" fill="rgb(243,81,16)" fg:x="84075" fg:w="227"/><text x="76.1313%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (227 samples, 0.20%)</title><rect x="75.8813%" y="885" width="0.2049%" height="15" fill="rgb(250,14,2)" fg:x="84075" fg:w="227"/><text x="76.1313%" y="895.50"></text></g><g><title>rust_alloc (219 samples, 0.20%)</title><rect x="75.8886%" y="869" width="0.1977%" height="15" fill="rgb(233,135,29)" fg:x="84083" fg:w="219"/><text x="76.1386%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (12 samples, 0.01%)</title><rect x="76.0862%" y="965" width="0.0108%" height="15" fill="rgb(224,64,43)" fg:x="84302" fg:w="12"/><text x="76.3362%" y="975.50"></text></g><g><title>alloc::slice::hack::into_vec (12 samples, 0.01%)</title><rect x="76.0862%" y="949" width="0.0108%" height="15" fill="rgb(238,84,13)" fg:x="84302" fg:w="12"/><text x="76.3362%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (12 samples, 0.01%)</title><rect x="76.0862%" y="933" width="0.0108%" height="15" fill="rgb(253,48,26)" fg:x="84302" fg:w="12"/><text x="76.3362%" y="943.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (684 samples, 0.62%)</title><rect x="75.4941%" y="981" width="0.6173%" height="15" fill="rgb(205,223,31)" fg:x="83646" fg:w="684"/><text x="75.7441%" y="991.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="76.1151%" y="725" width="0.0117%" height="15" fill="rgb(221,41,32)" fg:x="84334" fg:w="13"/><text x="76.3651%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (19 samples, 0.02%)</title><rect x="76.1115%" y="741" width="0.0171%" height="15" fill="rgb(213,158,31)" fg:x="84330" fg:w="19"/><text x="76.3615%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (69 samples, 0.06%)</title><rect x="76.1115%" y="773" width="0.0623%" height="15" fill="rgb(245,126,43)" fg:x="84330" fg:w="69"/><text x="76.3615%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (69 samples, 0.06%)</title><rect x="76.1115%" y="757" width="0.0623%" height="15" fill="rgb(227,7,22)" fg:x="84330" fg:w="69"/><text x="76.3615%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (50 samples, 0.05%)</title><rect x="76.1286%" y="741" width="0.0451%" height="15" fill="rgb(252,90,44)" fg:x="84349" fg:w="50"/><text x="76.3786%" y="751.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (40 samples, 0.04%)</title><rect x="76.1377%" y="725" width="0.0361%" height="15" fill="rgb(253,91,0)" fg:x="84359" fg:w="40"/><text x="76.3877%" y="735.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (40 samples, 0.04%)</title><rect x="76.1377%" y="709" width="0.0361%" height="15" fill="rgb(252,175,49)" fg:x="84359" fg:w="40"/><text x="76.3877%" y="719.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (40 samples, 0.04%)</title><rect x="76.1377%" y="693" width="0.0361%" height="15" fill="rgb(246,150,1)" fg:x="84359" fg:w="40"/><text x="76.3877%" y="703.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (71 samples, 0.06%)</title><rect x="76.1115%" y="965" width="0.0641%" height="15" fill="rgb(241,192,25)" fg:x="84330" fg:w="71"/><text x="76.3615%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (71 samples, 0.06%)</title><rect x="76.1115%" y="949" width="0.0641%" height="15" fill="rgb(239,187,11)" fg:x="84330" fg:w="71"/><text x="76.3615%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (71 samples, 0.06%)</title><rect x="76.1115%" y="933" width="0.0641%" height="15" fill="rgb(218,202,51)" fg:x="84330" fg:w="71"/><text x="76.3615%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (71 samples, 0.06%)</title><rect x="76.1115%" y="917" width="0.0641%" height="15" fill="rgb(225,176,8)" fg:x="84330" fg:w="71"/><text x="76.3615%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (71 samples, 0.06%)</title><rect x="76.1115%" y="901" width="0.0641%" height="15" fill="rgb(219,122,41)" fg:x="84330" fg:w="71"/><text x="76.3615%" y="911.50"></text></g><g><title>alloc::alloc::alloc (71 samples, 0.06%)</title><rect x="76.1115%" y="885" width="0.0641%" height="15" fill="rgb(248,140,20)" fg:x="84330" fg:w="71"/><text x="76.3615%" y="895.50"></text></g><g><title>__rg_alloc (71 samples, 0.06%)</title><rect x="76.1115%" y="869" width="0.0641%" height="15" fill="rgb(245,41,37)" fg:x="84330" fg:w="71"/><text x="76.3615%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (71 samples, 0.06%)</title><rect x="76.1115%" y="853" width="0.0641%" height="15" fill="rgb(235,82,39)" fg:x="84330" fg:w="71"/><text x="76.3615%" y="863.50"></text></g><g><title>rust_alloc (71 samples, 0.06%)</title><rect x="76.1115%" y="837" width="0.0641%" height="15" fill="rgb(230,108,42)" fg:x="84330" fg:w="71"/><text x="76.3615%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (71 samples, 0.06%)</title><rect x="76.1115%" y="821" width="0.0641%" height="15" fill="rgb(215,150,50)" fg:x="84330" fg:w="71"/><text x="76.3615%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (71 samples, 0.06%)</title><rect x="76.1115%" y="805" width="0.0641%" height="15" fill="rgb(233,212,5)" fg:x="84330" fg:w="71"/><text x="76.3615%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (71 samples, 0.06%)</title><rect x="76.1115%" y="789" width="0.0641%" height="15" fill="rgb(245,80,22)" fg:x="84330" fg:w="71"/><text x="76.3615%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="76.1756%" y="805" width="0.0397%" height="15" fill="rgb(238,129,16)" fg:x="84401" fg:w="44"/><text x="76.4256%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (44 samples, 0.04%)</title><rect x="76.1756%" y="789" width="0.0397%" height="15" fill="rgb(240,19,0)" fg:x="84401" fg:w="44"/><text x="76.4256%" y="799.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (34 samples, 0.03%)</title><rect x="76.1846%" y="773" width="0.0307%" height="15" fill="rgb(232,42,35)" fg:x="84411" fg:w="34"/><text x="76.4346%" y="783.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (26 samples, 0.02%)</title><rect x="76.1918%" y="757" width="0.0235%" height="15" fill="rgb(223,130,24)" fg:x="84419" fg:w="26"/><text x="76.4418%" y="767.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="76.1918%" y="741" width="0.0235%" height="15" fill="rgb(237,16,22)" fg:x="84419" fg:w="26"/><text x="76.4418%" y="751.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="76.1918%" y="725" width="0.0235%" height="15" fill="rgb(248,192,20)" fg:x="84419" fg:w="26"/><text x="76.4418%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (46 samples, 0.04%)</title><rect x="76.1756%" y="965" width="0.0415%" height="15" fill="rgb(233,167,2)" fg:x="84401" fg:w="46"/><text x="76.4256%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (46 samples, 0.04%)</title><rect x="76.1756%" y="949" width="0.0415%" height="15" fill="rgb(252,71,44)" fg:x="84401" fg:w="46"/><text x="76.4256%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (46 samples, 0.04%)</title><rect x="76.1756%" y="933" width="0.0415%" height="15" fill="rgb(238,37,47)" fg:x="84401" fg:w="46"/><text x="76.4256%" y="943.50"></text></g><g><title>alloc::alloc::alloc (46 samples, 0.04%)</title><rect x="76.1756%" y="917" width="0.0415%" height="15" fill="rgb(214,202,54)" fg:x="84401" fg:w="46"/><text x="76.4256%" y="927.50"></text></g><g><title>__rg_alloc (46 samples, 0.04%)</title><rect x="76.1756%" y="901" width="0.0415%" height="15" fill="rgb(254,165,40)" fg:x="84401" fg:w="46"/><text x="76.4256%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (46 samples, 0.04%)</title><rect x="76.1756%" y="885" width="0.0415%" height="15" fill="rgb(246,173,38)" fg:x="84401" fg:w="46"/><text x="76.4256%" y="895.50"></text></g><g><title>rust_alloc (46 samples, 0.04%)</title><rect x="76.1756%" y="869" width="0.0415%" height="15" fill="rgb(215,3,27)" fg:x="84401" fg:w="46"/><text x="76.4256%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (46 samples, 0.04%)</title><rect x="76.1756%" y="853" width="0.0415%" height="15" fill="rgb(239,169,51)" fg:x="84401" fg:w="46"/><text x="76.4256%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (46 samples, 0.04%)</title><rect x="76.1756%" y="837" width="0.0415%" height="15" fill="rgb(212,5,25)" fg:x="84401" fg:w="46"/><text x="76.4256%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (46 samples, 0.04%)</title><rect x="76.1756%" y="821" width="0.0415%" height="15" fill="rgb(243,45,17)" fg:x="84401" fg:w="46"/><text x="76.4256%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (62 samples, 0.06%)</title><rect x="76.2405%" y="629" width="0.0560%" height="15" fill="rgb(242,97,9)" fg:x="84473" fg:w="62"/><text x="76.4905%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (62 samples, 0.06%)</title><rect x="76.2405%" y="613" width="0.0560%" height="15" fill="rgb(228,71,31)" fg:x="84473" fg:w="62"/><text x="76.4905%" y="623.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (52 samples, 0.05%)</title><rect x="76.2496%" y="597" width="0.0469%" height="15" fill="rgb(252,184,16)" fg:x="84483" fg:w="52"/><text x="76.4996%" y="607.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (43 samples, 0.04%)</title><rect x="76.2577%" y="581" width="0.0388%" height="15" fill="rgb(236,169,46)" fg:x="84492" fg:w="43"/><text x="76.5077%" y="591.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (43 samples, 0.04%)</title><rect x="76.2577%" y="565" width="0.0388%" height="15" fill="rgb(207,17,47)" fg:x="84492" fg:w="43"/><text x="76.5077%" y="575.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (43 samples, 0.04%)</title><rect x="76.2577%" y="549" width="0.0388%" height="15" fill="rgb(206,201,28)" fg:x="84492" fg:w="43"/><text x="76.5077%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="76.3001%" y="629" width="0.0126%" height="15" fill="rgb(224,184,23)" fg:x="84539" fg:w="14"/><text x="76.5501%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="76.3001%" y="613" width="0.0126%" height="15" fill="rgb(208,139,48)" fg:x="84539" fg:w="14"/><text x="76.5501%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="76.3001%" y="597" width="0.0126%" height="15" fill="rgb(208,130,10)" fg:x="84539" fg:w="14"/><text x="76.5501%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="76.3001%" y="581" width="0.0126%" height="15" fill="rgb(211,213,45)" fg:x="84539" fg:w="14"/><text x="76.5501%" y="591.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (14 samples, 0.01%)</title><rect x="76.3001%" y="565" width="0.0126%" height="15" fill="rgb(235,100,30)" fg:x="84539" fg:w="14"/><text x="76.5501%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (157 samples, 0.14%)</title><rect x="76.2333%" y="677" width="0.1417%" height="15" fill="rgb(206,144,31)" fg:x="84465" fg:w="157"/><text x="76.4833%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (157 samples, 0.14%)</title><rect x="76.2333%" y="661" width="0.1417%" height="15" fill="rgb(224,200,26)" fg:x="84465" fg:w="157"/><text x="76.4833%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (150 samples, 0.14%)</title><rect x="76.2396%" y="645" width="0.1354%" height="15" fill="rgb(247,104,53)" fg:x="84472" fg:w="150"/><text x="76.4896%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::take (68 samples, 0.06%)</title><rect x="76.3137%" y="629" width="0.0614%" height="15" fill="rgb(220,14,17)" fg:x="84554" fg:w="68"/><text x="76.5637%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (68 samples, 0.06%)</title><rect x="76.3137%" y="613" width="0.0614%" height="15" fill="rgb(230,140,40)" fg:x="84554" fg:w="68"/><text x="76.5637%" y="623.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (181 samples, 0.16%)</title><rect x="76.2171%" y="837" width="0.1634%" height="15" fill="rgb(229,2,41)" fg:x="84447" fg:w="181"/><text x="76.4671%" y="847.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (177 samples, 0.16%)</title><rect x="76.2207%" y="821" width="0.1598%" height="15" fill="rgb(232,89,16)" fg:x="84451" fg:w="177"/><text x="76.4707%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (177 samples, 0.16%)</title><rect x="76.2207%" y="805" width="0.1598%" height="15" fill="rgb(247,59,52)" fg:x="84451" fg:w="177"/><text x="76.4707%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (168 samples, 0.15%)</title><rect x="76.2288%" y="789" width="0.1516%" height="15" fill="rgb(226,110,21)" fg:x="84460" fg:w="168"/><text x="76.4788%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (167 samples, 0.15%)</title><rect x="76.2297%" y="773" width="0.1507%" height="15" fill="rgb(224,176,43)" fg:x="84461" fg:w="167"/><text x="76.4797%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (167 samples, 0.15%)</title><rect x="76.2297%" y="757" width="0.1507%" height="15" fill="rgb(221,73,6)" fg:x="84461" fg:w="167"/><text x="76.4797%" y="767.50"></text></g><g><title>alloc::alloc::alloc (167 samples, 0.15%)</title><rect x="76.2297%" y="741" width="0.1507%" height="15" fill="rgb(232,78,19)" fg:x="84461" fg:w="167"/><text x="76.4797%" y="751.50"></text></g><g><title>__rg_alloc (167 samples, 0.15%)</title><rect x="76.2297%" y="725" width="0.1507%" height="15" fill="rgb(233,112,48)" fg:x="84461" fg:w="167"/><text x="76.4797%" y="735.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (167 samples, 0.15%)</title><rect x="76.2297%" y="709" width="0.1507%" height="15" fill="rgb(243,131,47)" fg:x="84461" fg:w="167"/><text x="76.4797%" y="719.50"></text></g><g><title>rust_alloc (167 samples, 0.15%)</title><rect x="76.2297%" y="693" width="0.1507%" height="15" fill="rgb(226,51,1)" fg:x="84461" fg:w="167"/><text x="76.4797%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="76.3877%" y="789" width="0.0153%" height="15" fill="rgb(247,58,7)" fg:x="84636" fg:w="17"/><text x="76.6377%" y="799.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (213 samples, 0.19%)</title><rect x="76.2171%" y="917" width="0.1922%" height="15" fill="rgb(209,7,32)" fg:x="84447" fg:w="213"/><text x="76.4671%" y="927.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (213 samples, 0.19%)</title><rect x="76.2171%" y="901" width="0.1922%" height="15" fill="rgb(209,39,41)" fg:x="84447" fg:w="213"/><text x="76.4671%" y="911.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (213 samples, 0.19%)</title><rect x="76.2171%" y="885" width="0.1922%" height="15" fill="rgb(226,182,46)" fg:x="84447" fg:w="213"/><text x="76.4671%" y="895.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (213 samples, 0.19%)</title><rect x="76.2171%" y="869" width="0.1922%" height="15" fill="rgb(230,219,10)" fg:x="84447" fg:w="213"/><text x="76.4671%" y="879.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (213 samples, 0.19%)</title><rect x="76.2171%" y="853" width="0.1922%" height="15" fill="rgb(227,175,30)" fg:x="84447" fg:w="213"/><text x="76.4671%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (32 samples, 0.03%)</title><rect x="76.3804%" y="837" width="0.0289%" height="15" fill="rgb(217,2,50)" fg:x="84628" fg:w="32"/><text x="76.6304%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (32 samples, 0.03%)</title><rect x="76.3804%" y="821" width="0.0289%" height="15" fill="rgb(229,160,0)" fg:x="84628" fg:w="32"/><text x="76.6304%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (32 samples, 0.03%)</title><rect x="76.3804%" y="805" width="0.0289%" height="15" fill="rgb(207,78,37)" fg:x="84628" fg:w="32"/><text x="76.6304%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (21 samples, 0.02%)</title><rect x="76.7081%" y="869" width="0.0190%" height="15" fill="rgb(225,57,0)" fg:x="84991" fg:w="21"/><text x="76.9581%" y="879.50"></text></g><g><title>std::collections::hash::map::RandomState::new (21 samples, 0.02%)</title><rect x="76.7081%" y="853" width="0.0190%" height="15" fill="rgb(232,154,2)" fg:x="84991" fg:w="21"/><text x="76.9581%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (21 samples, 0.02%)</title><rect x="76.7081%" y="837" width="0.0190%" height="15" fill="rgb(241,212,25)" fg:x="84991" fg:w="21"/><text x="76.9581%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (21 samples, 0.02%)</title><rect x="76.7081%" y="821" width="0.0190%" height="15" fill="rgb(226,69,20)" fg:x="84991" fg:w="21"/><text x="76.9581%" y="831.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (15 samples, 0.01%)</title><rect x="76.7135%" y="805" width="0.0135%" height="15" fill="rgb(247,184,54)" fg:x="84997" fg:w="15"/><text x="76.9635%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (79 samples, 0.07%)</title><rect x="76.7721%" y="677" width="0.0713%" height="15" fill="rgb(210,145,0)" fg:x="85062" fg:w="79"/><text x="77.0221%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (79 samples, 0.07%)</title><rect x="76.7721%" y="661" width="0.0713%" height="15" fill="rgb(253,82,12)" fg:x="85062" fg:w="79"/><text x="77.0221%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (71 samples, 0.06%)</title><rect x="76.7794%" y="645" width="0.0641%" height="15" fill="rgb(245,42,11)" fg:x="85070" fg:w="71"/><text x="77.0294%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::take (58 samples, 0.05%)</title><rect x="76.7911%" y="629" width="0.0523%" height="15" fill="rgb(219,147,32)" fg:x="85083" fg:w="58"/><text x="77.0411%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (58 samples, 0.05%)</title><rect x="76.7911%" y="613" width="0.0523%" height="15" fill="rgb(246,12,7)" fg:x="85083" fg:w="58"/><text x="77.0411%" y="623.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (153 samples, 0.14%)</title><rect x="76.7081%" y="885" width="0.1381%" height="15" fill="rgb(243,50,9)" fg:x="84991" fg:w="153"/><text x="76.9581%" y="895.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (132 samples, 0.12%)</title><rect x="76.7270%" y="869" width="0.1191%" height="15" fill="rgb(219,149,6)" fg:x="85012" fg:w="132"/><text x="76.9770%" y="879.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (132 samples, 0.12%)</title><rect x="76.7270%" y="853" width="0.1191%" height="15" fill="rgb(241,51,42)" fg:x="85012" fg:w="132"/><text x="76.9770%" y="863.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (121 samples, 0.11%)</title><rect x="76.7369%" y="837" width="0.1092%" height="15" fill="rgb(226,128,27)" fg:x="85023" fg:w="121"/><text x="76.9869%" y="847.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (121 samples, 0.11%)</title><rect x="76.7369%" y="821" width="0.1092%" height="15" fill="rgb(244,144,4)" fg:x="85023" fg:w="121"/><text x="76.9869%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (121 samples, 0.11%)</title><rect x="76.7369%" y="805" width="0.1092%" height="15" fill="rgb(221,4,13)" fg:x="85023" fg:w="121"/><text x="76.9869%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (101 samples, 0.09%)</title><rect x="76.7550%" y="789" width="0.0912%" height="15" fill="rgb(208,170,28)" fg:x="85043" fg:w="101"/><text x="77.0050%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (92 samples, 0.08%)</title><rect x="76.7631%" y="773" width="0.0830%" height="15" fill="rgb(226,131,13)" fg:x="85052" fg:w="92"/><text x="77.0131%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (92 samples, 0.08%)</title><rect x="76.7631%" y="757" width="0.0830%" height="15" fill="rgb(215,72,41)" fg:x="85052" fg:w="92"/><text x="77.0131%" y="767.50"></text></g><g><title>alloc::alloc::alloc (92 samples, 0.08%)</title><rect x="76.7631%" y="741" width="0.0830%" height="15" fill="rgb(243,108,20)" fg:x="85052" fg:w="92"/><text x="77.0131%" y="751.50"></text></g><g><title>__rg_alloc (92 samples, 0.08%)</title><rect x="76.7631%" y="725" width="0.0830%" height="15" fill="rgb(230,189,17)" fg:x="85052" fg:w="92"/><text x="77.0131%" y="735.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (92 samples, 0.08%)</title><rect x="76.7631%" y="709" width="0.0830%" height="15" fill="rgb(220,50,17)" fg:x="85052" fg:w="92"/><text x="77.0131%" y="719.50"></text></g><g><title>rust_alloc (92 samples, 0.08%)</title><rect x="76.7631%" y="693" width="0.0830%" height="15" fill="rgb(248,152,48)" fg:x="85052" fg:w="92"/><text x="77.0131%" y="703.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (14 samples, 0.01%)</title><rect x="76.8750%" y="837" width="0.0126%" height="15" fill="rgb(244,91,11)" fg:x="85176" fg:w="14"/><text x="77.1250%" y="847.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="76.8750%" y="821" width="0.0126%" height="15" fill="rgb(220,157,5)" fg:x="85176" fg:w="14"/><text x="77.1250%" y="831.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (14 samples, 0.01%)</title><rect x="76.8750%" y="805" width="0.0126%" height="15" fill="rgb(253,137,8)" fg:x="85176" fg:w="14"/><text x="77.1250%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="76.9039%" y="805" width="0.0181%" height="15" fill="rgb(217,137,51)" fg:x="85208" fg:w="20"/><text x="77.1539%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="76.9039%" y="789" width="0.0181%" height="15" fill="rgb(218,209,53)" fg:x="85208" fg:w="20"/><text x="77.1539%" y="799.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="76.9039%" y="773" width="0.0181%" height="15" fill="rgb(249,137,25)" fg:x="85208" fg:w="20"/><text x="77.1539%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="76.9039%" y="757" width="0.0181%" height="15" fill="rgb(239,155,26)" fg:x="85208" fg:w="20"/><text x="77.1539%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="76.9039%" y="741" width="0.0181%" height="15" fill="rgb(227,85,46)" fg:x="85208" fg:w="20"/><text x="77.1539%" y="751.50"></text></g><g><title>abi_stable::erased_types::iterator::next (27 samples, 0.02%)</title><rect x="76.8985%" y="837" width="0.0244%" height="15" fill="rgb(251,107,43)" fg:x="85202" fg:w="27"/><text x="77.1485%" y="847.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (21 samples, 0.02%)</title><rect x="76.9039%" y="821" width="0.0190%" height="15" fill="rgb(234,170,33)" fg:x="85208" fg:w="21"/><text x="77.1539%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.08%)</title><rect x="76.8642%" y="869" width="0.0758%" height="15" fill="rgb(206,29,35)" fg:x="85164" fg:w="84"/><text x="77.1142%" y="879.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (84 samples, 0.08%)</title><rect x="76.8642%" y="853" width="0.0758%" height="15" fill="rgb(227,138,25)" fg:x="85164" fg:w="84"/><text x="77.1142%" y="863.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (19 samples, 0.02%)</title><rect x="76.9229%" y="837" width="0.0171%" height="15" fill="rgb(249,131,35)" fg:x="85229" fg:w="19"/><text x="77.1729%" y="847.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (19 samples, 0.02%)</title><rect x="76.9229%" y="821" width="0.0171%" height="15" fill="rgb(239,6,40)" fg:x="85229" fg:w="19"/><text x="77.1729%" y="831.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (52 samples, 0.05%)</title><rect x="76.9545%" y="837" width="0.0469%" height="15" fill="rgb(246,136,47)" fg:x="85264" fg:w="52"/><text x="77.2045%" y="847.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (31 samples, 0.03%)</title><rect x="76.9734%" y="821" width="0.0280%" height="15" fill="rgb(253,58,26)" fg:x="85285" fg:w="31"/><text x="77.2234%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (20 samples, 0.02%)</title><rect x="76.9833%" y="805" width="0.0181%" height="15" fill="rgb(237,141,10)" fg:x="85296" fg:w="20"/><text x="77.2333%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (20 samples, 0.02%)</title><rect x="76.9833%" y="789" width="0.0181%" height="15" fill="rgb(234,156,12)" fg:x="85296" fg:w="20"/><text x="77.2333%" y="799.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (20 samples, 0.02%)</title><rect x="76.9833%" y="773" width="0.0181%" height="15" fill="rgb(243,224,36)" fg:x="85296" fg:w="20"/><text x="77.2333%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (20 samples, 0.02%)</title><rect x="76.9833%" y="757" width="0.0181%" height="15" fill="rgb(205,229,51)" fg:x="85296" fg:w="20"/><text x="77.2333%" y="767.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.01%)</title><rect x="77.0014%" y="805" width="0.0144%" height="15" fill="rgb(223,189,4)" fg:x="85316" fg:w="16"/><text x="77.2514%" y="815.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (16 samples, 0.01%)</title><rect x="77.0014%" y="789" width="0.0144%" height="15" fill="rgb(249,167,54)" fg:x="85316" fg:w="16"/><text x="77.2514%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (94 samples, 0.08%)</title><rect x="76.9400%" y="869" width="0.0848%" height="15" fill="rgb(218,34,28)" fg:x="85248" fg:w="94"/><text x="77.1900%" y="879.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (94 samples, 0.08%)</title><rect x="76.9400%" y="853" width="0.0848%" height="15" fill="rgb(232,109,42)" fg:x="85248" fg:w="94"/><text x="77.1900%" y="863.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (26 samples, 0.02%)</title><rect x="77.0014%" y="837" width="0.0235%" height="15" fill="rgb(248,214,46)" fg:x="85316" fg:w="26"/><text x="77.2514%" y="847.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (26 samples, 0.02%)</title><rect x="77.0014%" y="821" width="0.0235%" height="15" fill="rgb(244,216,40)" fg:x="85316" fg:w="26"/><text x="77.2514%" y="831.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (14 samples, 0.01%)</title><rect x="77.0555%" y="757" width="0.0126%" height="15" fill="rgb(231,226,31)" fg:x="85376" fg:w="14"/><text x="77.3055%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="77.0573%" y="741" width="0.0108%" height="15" fill="rgb(238,38,43)" fg:x="85378" fg:w="12"/><text x="77.3073%" y="751.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="77.0573%" y="725" width="0.0108%" height="15" fill="rgb(208,88,43)" fg:x="85378" fg:w="12"/><text x="77.3073%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="77.0573%" y="709" width="0.0108%" height="15" fill="rgb(205,136,37)" fg:x="85378" fg:w="12"/><text x="77.3073%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="77.0573%" y="693" width="0.0108%" height="15" fill="rgb(237,34,14)" fg:x="85378" fg:w="12"/><text x="77.3073%" y="703.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="77.0573%" y="677" width="0.0108%" height="15" fill="rgb(236,193,44)" fg:x="85378" fg:w="12"/><text x="77.3073%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="77.0573%" y="661" width="0.0108%" height="15" fill="rgb(231,48,10)" fg:x="85378" fg:w="12"/><text x="77.3073%" y="671.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="77.0790%" y="661" width="0.0135%" height="15" fill="rgb(213,141,34)" fg:x="85402" fg:w="15"/><text x="77.3290%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (20 samples, 0.02%)</title><rect x="77.1115%" y="613" width="0.0181%" height="15" fill="rgb(249,130,34)" fg:x="85438" fg:w="20"/><text x="77.3615%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="77.1133%" y="597" width="0.0162%" height="15" fill="rgb(219,42,41)" fg:x="85440" fg:w="18"/><text x="77.3633%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (42 samples, 0.04%)</title><rect x="77.0998%" y="661" width="0.0379%" height="15" fill="rgb(224,100,54)" fg:x="85425" fg:w="42"/><text x="77.3498%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (42 samples, 0.04%)</title><rect x="77.0998%" y="645" width="0.0379%" height="15" fill="rgb(229,200,27)" fg:x="85425" fg:w="42"/><text x="77.3498%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (41 samples, 0.04%)</title><rect x="77.1007%" y="629" width="0.0370%" height="15" fill="rgb(217,118,10)" fg:x="85426" fg:w="41"/><text x="77.3507%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (84 samples, 0.08%)</title><rect x="77.0790%" y="693" width="0.0758%" height="15" fill="rgb(206,22,3)" fg:x="85402" fg:w="84"/><text x="77.3290%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (84 samples, 0.08%)</title><rect x="77.0790%" y="677" width="0.0758%" height="15" fill="rgb(232,163,46)" fg:x="85402" fg:w="84"/><text x="77.3290%" y="687.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (19 samples, 0.02%)</title><rect x="77.1377%" y="661" width="0.0171%" height="15" fill="rgb(206,95,13)" fg:x="85467" fg:w="19"/><text x="77.3877%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (92 samples, 0.08%)</title><rect x="77.0790%" y="725" width="0.0830%" height="15" fill="rgb(253,154,18)" fg:x="85402" fg:w="92"/><text x="77.3290%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (92 samples, 0.08%)</title><rect x="77.0790%" y="709" width="0.0830%" height="15" fill="rgb(219,32,23)" fg:x="85402" fg:w="92"/><text x="77.3290%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (101 samples, 0.09%)</title><rect x="77.0745%" y="741" width="0.0912%" height="15" fill="rgb(230,191,45)" fg:x="85397" fg:w="101"/><text x="77.3245%" y="751.50"></text></g><g><title>rust_dealloc (114 samples, 0.10%)</title><rect x="77.0682%" y="757" width="0.1029%" height="15" fill="rgb(229,64,36)" fg:x="85390" fg:w="114"/><text x="77.3182%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (363 samples, 0.33%)</title><rect x="76.8462%" y="885" width="0.3276%" height="15" fill="rgb(205,129,25)" fg:x="85144" fg:w="363"/><text x="77.0962%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (156 samples, 0.14%)</title><rect x="77.0330%" y="869" width="0.1408%" height="15" fill="rgb(254,112,7)" fg:x="85351" fg:w="156"/><text x="77.2830%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (156 samples, 0.14%)</title><rect x="77.0330%" y="853" width="0.1408%" height="15" fill="rgb(226,53,48)" fg:x="85351" fg:w="156"/><text x="77.2830%" y="863.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (156 samples, 0.14%)</title><rect x="77.0330%" y="837" width="0.1408%" height="15" fill="rgb(214,153,38)" fg:x="85351" fg:w="156"/><text x="77.2830%" y="847.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (147 samples, 0.13%)</title><rect x="77.0411%" y="821" width="0.1327%" height="15" fill="rgb(243,101,7)" fg:x="85360" fg:w="147"/><text x="77.2911%" y="831.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (139 samples, 0.13%)</title><rect x="77.0483%" y="805" width="0.1255%" height="15" fill="rgb(240,140,22)" fg:x="85368" fg:w="139"/><text x="77.2983%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (139 samples, 0.13%)</title><rect x="77.0483%" y="789" width="0.1255%" height="15" fill="rgb(235,114,2)" fg:x="85368" fg:w="139"/><text x="77.2983%" y="799.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (139 samples, 0.13%)</title><rect x="77.0483%" y="773" width="0.1255%" height="15" fill="rgb(242,59,12)" fg:x="85368" fg:w="139"/><text x="77.2983%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (518 samples, 0.47%)</title><rect x="76.7081%" y="901" width="0.4675%" height="15" fill="rgb(252,134,9)" fg:x="84991" fg:w="518"/><text x="76.9581%" y="911.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (4,611 samples, 4.16%)</title><rect x="73.0167%" y="1045" width="4.1616%" height="15" fill="rgb(236,4,44)" fg:x="80901" fg:w="4611"/><text x="73.2667%" y="1055.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,611 samples, 4.16%)</title><rect x="73.0167%" y="1029" width="4.1616%" height="15" fill="rgb(254,172,41)" fg:x="80901" fg:w="4611"/><text x="73.2667%" y="1039.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (4,611 samples, 4.16%)</title><rect x="73.0167%" y="1013" width="4.1616%" height="15" fill="rgb(244,63,20)" fg:x="80901" fg:w="4611"/><text x="73.2667%" y="1023.50">tremo..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,611 samples, 4.16%)</title><rect x="73.0167%" y="997" width="4.1616%" height="15" fill="rgb(250,73,31)" fg:x="80901" fg:w="4611"/><text x="73.2667%" y="1007.50">tremo..</text></g><g><title>tremor_script::srs::EventPayload::try_new (1,182 samples, 1.07%)</title><rect x="76.1115%" y="981" width="1.0668%" height="15" fill="rgb(241,38,36)" fg:x="84330" fg:w="1182"/><text x="76.3615%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (1,065 samples, 0.96%)</title><rect x="76.2171%" y="965" width="0.9612%" height="15" fill="rgb(245,211,2)" fg:x="84447" fg:w="1065"/><text x="76.4671%" y="975.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (1,065 samples, 0.96%)</title><rect x="76.2171%" y="949" width="0.9612%" height="15" fill="rgb(206,120,28)" fg:x="84447" fg:w="1065"/><text x="76.4671%" y="959.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,065 samples, 0.96%)</title><rect x="76.2171%" y="933" width="0.9612%" height="15" fill="rgb(211,59,34)" fg:x="84447" fg:w="1065"/><text x="76.4671%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (852 samples, 0.77%)</title><rect x="76.4093%" y="917" width="0.7690%" height="15" fill="rgb(233,168,5)" fg:x="84660" fg:w="852"/><text x="76.6593%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (18 samples, 0.02%)</title><rect x="77.1783%" y="901" width="0.0162%" height="15" fill="rgb(234,33,13)" fg:x="85512" fg:w="18"/><text x="77.4283%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (18 samples, 0.02%)</title><rect x="77.1783%" y="885" width="0.0162%" height="15" fill="rgb(231,150,26)" fg:x="85512" fg:w="18"/><text x="77.4283%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="77.1783%" y="869" width="0.0162%" height="15" fill="rgb(217,191,4)" fg:x="85512" fg:w="18"/><text x="77.4283%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (18 samples, 0.02%)</title><rect x="77.1783%" y="853" width="0.0162%" height="15" fill="rgb(246,198,38)" fg:x="85512" fg:w="18"/><text x="77.4283%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (18 samples, 0.02%)</title><rect x="77.1783%" y="837" width="0.0162%" height="15" fill="rgb(245,64,37)" fg:x="85512" fg:w="18"/><text x="77.4283%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (18 samples, 0.02%)</title><rect x="77.1783%" y="821" width="0.0162%" height="15" fill="rgb(250,30,36)" fg:x="85512" fg:w="18"/><text x="77.4283%" y="831.50"></text></g><g><title>event_listener::Inner::lock (28 samples, 0.03%)</title><rect x="77.1945%" y="901" width="0.0253%" height="15" fill="rgb(217,86,53)" fg:x="85530" fg:w="28"/><text x="77.4445%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (28 samples, 0.03%)</title><rect x="77.1945%" y="885" width="0.0253%" height="15" fill="rgb(228,157,16)" fg:x="85530" fg:w="28"/><text x="77.4445%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (28 samples, 0.03%)</title><rect x="77.1945%" y="869" width="0.0253%" height="15" fill="rgb(217,59,31)" fg:x="85530" fg:w="28"/><text x="77.4445%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (28 samples, 0.03%)</title><rect x="77.1945%" y="853" width="0.0253%" height="15" fill="rgb(237,138,41)" fg:x="85530" fg:w="28"/><text x="77.4445%" y="863.50"></text></g><g><title>___pthread_mutex_lock (28 samples, 0.03%)</title><rect x="77.1945%" y="837" width="0.0253%" height="15" fill="rgb(227,91,49)" fg:x="85530" fg:w="28"/><text x="77.4445%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,532 samples, 7.70%)</title><rect x="69.5211%" y="1125" width="7.7005%" height="15" fill="rgb(247,21,44)" fg:x="77028" fg:w="8532"/><text x="69.7711%" y="1135.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,532 samples, 7.70%)</title><rect x="69.5211%" y="1109" width="7.7005%" height="15" fill="rgb(219,210,51)" fg:x="77028" fg:w="8532"/><text x="69.7711%" y="1119.50">std::thread..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,532 samples, 7.70%)</title><rect x="69.5211%" y="1093" width="7.7005%" height="15" fill="rgb(209,140,6)" fg:x="77028" fg:w="8532"/><text x="69.7711%" y="1103.50">async_std::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,532 samples, 7.70%)</title><rect x="69.5211%" y="1077" width="7.7005%" height="15" fill="rgb(221,188,24)" fg:x="77028" fg:w="8532"/><text x="69.7711%" y="1087.50">&lt;async_std:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,532 samples, 7.70%)</title><rect x="69.5211%" y="1061" width="7.7005%" height="15" fill="rgb(232,154,20)" fg:x="77028" fg:w="8532"/><text x="69.7711%" y="1071.50">&lt;core::futu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (48 samples, 0.04%)</title><rect x="77.1783%" y="1045" width="0.0433%" height="15" fill="rgb(244,137,50)" fg:x="85512" fg:w="48"/><text x="77.4283%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (48 samples, 0.04%)</title><rect x="77.1783%" y="1029" width="0.0433%" height="15" fill="rgb(225,185,43)" fg:x="85512" fg:w="48"/><text x="77.4283%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (48 samples, 0.04%)</title><rect x="77.1783%" y="1013" width="0.0433%" height="15" fill="rgb(213,205,38)" fg:x="85512" fg:w="48"/><text x="77.4283%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (48 samples, 0.04%)</title><rect x="77.1783%" y="997" width="0.0433%" height="15" fill="rgb(236,73,12)" fg:x="85512" fg:w="48"/><text x="77.4283%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (48 samples, 0.04%)</title><rect x="77.1783%" y="981" width="0.0433%" height="15" fill="rgb(235,219,13)" fg:x="85512" fg:w="48"/><text x="77.4283%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (48 samples, 0.04%)</title><rect x="77.1783%" y="965" width="0.0433%" height="15" fill="rgb(218,59,36)" fg:x="85512" fg:w="48"/><text x="77.4283%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (48 samples, 0.04%)</title><rect x="77.1783%" y="949" width="0.0433%" height="15" fill="rgb(205,110,39)" fg:x="85512" fg:w="48"/><text x="77.4283%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (48 samples, 0.04%)</title><rect x="77.1783%" y="933" width="0.0433%" height="15" fill="rgb(218,206,42)" fg:x="85512" fg:w="48"/><text x="77.4283%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (48 samples, 0.04%)</title><rect x="77.1783%" y="917" width="0.0433%" height="15" fill="rgb(248,125,24)" fg:x="85512" fg:w="48"/><text x="77.4283%" y="927.50"></text></g><g><title>tremor_common::time::nanotime (23 samples, 0.02%)</title><rect x="77.2216%" y="1125" width="0.0208%" height="15" fill="rgb(242,28,27)" fg:x="85560" fg:w="23"/><text x="77.4716%" y="1135.50"></text></g><g><title>std::time::SystemTime::now (21 samples, 0.02%)</title><rect x="77.2234%" y="1109" width="0.0190%" height="15" fill="rgb(216,228,15)" fg:x="85562" fg:w="21"/><text x="77.4734%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (21 samples, 0.02%)</title><rect x="77.2234%" y="1093" width="0.0190%" height="15" fill="rgb(235,116,46)" fg:x="85562" fg:w="21"/><text x="77.4734%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::now (21 samples, 0.02%)</title><rect x="77.2234%" y="1077" width="0.0190%" height="15" fill="rgb(224,18,32)" fg:x="85562" fg:w="21"/><text x="77.4734%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (12 samples, 0.01%)</title><rect x="77.2424%" y="1125" width="0.0108%" height="15" fill="rgb(252,5,12)" fg:x="85583" fg:w="12"/><text x="77.4924%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (27 samples, 0.02%)</title><rect x="77.2532%" y="1125" width="0.0244%" height="15" fill="rgb(251,36,5)" fg:x="85595" fg:w="27"/><text x="77.5032%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (397 samples, 0.36%)</title><rect x="77.4536%" y="981" width="0.3583%" height="15" fill="rgb(217,53,14)" fg:x="85817" fg:w="397"/><text x="77.7036%" y="991.50"></text></g><g><title>concurrent_queue::full_fence (27 samples, 0.02%)</title><rect x="77.8119%" y="981" width="0.0244%" height="15" fill="rgb(215,86,45)" fg:x="86214" fg:w="27"/><text x="78.0619%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (25 samples, 0.02%)</title><rect x="77.8137%" y="965" width="0.0226%" height="15" fill="rgb(242,169,11)" fg:x="86216" fg:w="25"/><text x="78.0637%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (25 samples, 0.02%)</title><rect x="77.8137%" y="949" width="0.0226%" height="15" fill="rgb(211,213,45)" fg:x="86216" fg:w="25"/><text x="78.0637%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (25 samples, 0.02%)</title><rect x="77.8137%" y="933" width="0.0226%" height="15" fill="rgb(205,88,11)" fg:x="86216" fg:w="25"/><text x="78.0637%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (526 samples, 0.47%)</title><rect x="77.8362%" y="981" width="0.4747%" height="15" fill="rgb(252,69,26)" fg:x="86241" fg:w="526"/><text x="78.0862%" y="991.50"></text></g><g><title>core::ptr::read (526 samples, 0.47%)</title><rect x="77.8362%" y="965" width="0.4747%" height="15" fill="rgb(246,123,37)" fg:x="86241" fg:w="526"/><text x="78.0862%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (526 samples, 0.47%)</title><rect x="77.8362%" y="949" width="0.4747%" height="15" fill="rgb(212,205,5)" fg:x="86241" fg:w="526"/><text x="78.0862%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (602 samples, 0.54%)</title><rect x="78.3110%" y="981" width="0.5433%" height="15" fill="rgb(253,148,0)" fg:x="86767" fg:w="602"/><text x="78.5610%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (602 samples, 0.54%)</title><rect x="78.3110%" y="965" width="0.5433%" height="15" fill="rgb(239,22,4)" fg:x="86767" fg:w="602"/><text x="78.5610%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (388 samples, 0.35%)</title><rect x="78.8543%" y="981" width="0.3502%" height="15" fill="rgb(226,26,53)" fg:x="87369" fg:w="388"/><text x="79.1043%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (387 samples, 0.35%)</title><rect x="78.8552%" y="965" width="0.3493%" height="15" fill="rgb(225,229,45)" fg:x="87370" fg:w="387"/><text x="79.1052%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,139 samples, 1.93%)</title><rect x="77.2776%" y="1013" width="1.9305%" height="15" fill="rgb(220,60,37)" fg:x="85622" fg:w="2139"/><text x="77.5276%" y="1023.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,139 samples, 1.93%)</title><rect x="77.2776%" y="997" width="1.9305%" height="15" fill="rgb(217,180,35)" fg:x="85622" fg:w="2139"/><text x="77.5276%" y="1007.50">c..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (2,177 samples, 1.96%)</title><rect x="77.2776%" y="1125" width="1.9648%" height="15" fill="rgb(229,7,53)" fg:x="85622" fg:w="2177"/><text x="77.5276%" y="1135.50">t..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,177 samples, 1.96%)</title><rect x="77.2776%" y="1109" width="1.9648%" height="15" fill="rgb(254,137,3)" fg:x="85622" fg:w="2177"/><text x="77.5276%" y="1119.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,177 samples, 1.96%)</title><rect x="77.2776%" y="1093" width="1.9648%" height="15" fill="rgb(215,140,41)" fg:x="85622" fg:w="2177"/><text x="77.5276%" y="1103.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,177 samples, 1.96%)</title><rect x="77.2776%" y="1077" width="1.9648%" height="15" fill="rgb(250,80,15)" fg:x="85622" fg:w="2177"/><text x="77.5276%" y="1087.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,177 samples, 1.96%)</title><rect x="77.2776%" y="1061" width="1.9648%" height="15" fill="rgb(252,191,6)" fg:x="85622" fg:w="2177"/><text x="77.5276%" y="1071.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,177 samples, 1.96%)</title><rect x="77.2776%" y="1045" width="1.9648%" height="15" fill="rgb(246,217,18)" fg:x="85622" fg:w="2177"/><text x="77.5276%" y="1055.50">&lt;..</text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,177 samples, 1.96%)</title><rect x="77.2776%" y="1029" width="1.9648%" height="15" fill="rgb(223,93,7)" fg:x="85622" fg:w="2177"/><text x="77.5276%" y="1039.50">a..</text></g><g><title>event_listener::Event::notify (38 samples, 0.03%)</title><rect x="79.2081%" y="1013" width="0.0343%" height="15" fill="rgb(225,55,52)" fg:x="87761" fg:w="38"/><text x="79.4581%" y="1023.50"></text></g><g><title>event_listener::List::notify (38 samples, 0.03%)</title><rect x="79.2081%" y="997" width="0.0343%" height="15" fill="rgb(240,31,24)" fg:x="87761" fg:w="38"/><text x="79.4581%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (38 samples, 0.03%)</title><rect x="79.2081%" y="981" width="0.0343%" height="15" fill="rgb(205,56,52)" fg:x="87761" fg:w="38"/><text x="79.4581%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (38 samples, 0.03%)</title><rect x="79.2081%" y="965" width="0.0343%" height="15" fill="rgb(246,146,12)" fg:x="87761" fg:w="38"/><text x="79.4581%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (38 samples, 0.03%)</title><rect x="79.2081%" y="949" width="0.0343%" height="15" fill="rgb(239,84,36)" fg:x="87761" fg:w="38"/><text x="79.4581%" y="959.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (38 samples, 0.03%)</title><rect x="79.2081%" y="933" width="0.0343%" height="15" fill="rgb(207,41,40)" fg:x="87761" fg:w="38"/><text x="79.4581%" y="943.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (38 samples, 0.03%)</title><rect x="79.2081%" y="917" width="0.0343%" height="15" fill="rgb(241,179,25)" fg:x="87761" fg:w="38"/><text x="79.4581%" y="927.50"></text></g><g><title>parking::Unparker::unpark (34 samples, 0.03%)</title><rect x="79.2117%" y="901" width="0.0307%" height="15" fill="rgb(210,0,34)" fg:x="87765" fg:w="34"/><text x="79.4617%" y="911.50"></text></g><g><title>parking::Inner::unpark (34 samples, 0.03%)</title><rect x="79.2117%" y="885" width="0.0307%" height="15" fill="rgb(225,217,29)" fg:x="87765" fg:w="34"/><text x="79.4617%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (34 samples, 0.03%)</title><rect x="79.2117%" y="869" width="0.0307%" height="15" fill="rgb(216,191,38)" fg:x="87765" fg:w="34"/><text x="79.4617%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (34 samples, 0.03%)</title><rect x="79.2117%" y="853" width="0.0307%" height="15" fill="rgb(232,140,52)" fg:x="87765" fg:w="34"/><text x="79.4617%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (34 samples, 0.03%)</title><rect x="79.2117%" y="837" width="0.0307%" height="15" fill="rgb(223,158,51)" fg:x="87765" fg:w="34"/><text x="79.4617%" y="847.50"></text></g><g><title>__GI___pthread_cond_signal (34 samples, 0.03%)</title><rect x="79.2117%" y="821" width="0.0307%" height="15" fill="rgb(235,29,51)" fg:x="87765" fg:w="34"/><text x="79.4617%" y="831.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (15 samples, 0.01%)</title><rect x="79.2424%" y="1125" width="0.0135%" height="15" fill="rgb(215,181,18)" fg:x="87799" fg:w="15"/><text x="79.4924%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (24 samples, 0.02%)</title><rect x="79.2559%" y="1125" width="0.0217%" height="15" fill="rgb(227,125,34)" fg:x="87814" fg:w="24"/><text x="79.5059%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="79.5240%" y="981" width="0.0117%" height="15" fill="rgb(230,197,49)" fg:x="88111" fg:w="13"/><text x="79.7740%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (35 samples, 0.03%)</title><rect x="79.5366%" y="949" width="0.0316%" height="15" fill="rgb(239,141,16)" fg:x="88125" fg:w="35"/><text x="79.7866%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (35 samples, 0.03%)</title><rect x="79.5366%" y="933" width="0.0316%" height="15" fill="rgb(225,105,43)" fg:x="88125" fg:w="35"/><text x="79.7866%" y="943.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (37 samples, 0.03%)</title><rect x="79.5357%" y="981" width="0.0334%" height="15" fill="rgb(214,131,14)" fg:x="88124" fg:w="37"/><text x="79.7857%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (37 samples, 0.03%)</title><rect x="79.5357%" y="965" width="0.0334%" height="15" fill="rgb(229,177,11)" fg:x="88124" fg:w="37"/><text x="79.7857%" y="975.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="79.5691%" y="981" width="0.0126%" height="15" fill="rgb(231,180,14)" fg:x="88161" fg:w="14"/><text x="79.8191%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (18 samples, 0.02%)</title><rect x="79.5818%" y="981" width="0.0162%" height="15" fill="rgb(232,88,2)" fg:x="88175" fg:w="18"/><text x="79.8318%" y="991.50"></text></g><g><title>core::mem::replace (18 samples, 0.02%)</title><rect x="79.5818%" y="965" width="0.0162%" height="15" fill="rgb(205,220,8)" fg:x="88175" fg:w="18"/><text x="79.8318%" y="975.50"></text></g><g><title>core::ptr::read (18 samples, 0.02%)</title><rect x="79.5818%" y="949" width="0.0162%" height="15" fill="rgb(225,23,53)" fg:x="88175" fg:w="18"/><text x="79.8318%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (193 samples, 0.17%)</title><rect x="79.6657%" y="965" width="0.1742%" height="15" fill="rgb(213,62,29)" fg:x="88268" fg:w="193"/><text x="79.9157%" y="975.50"></text></g><g><title>core::mem::replace (193 samples, 0.17%)</title><rect x="79.6657%" y="949" width="0.1742%" height="15" fill="rgb(227,75,7)" fg:x="88268" fg:w="193"/><text x="79.9157%" y="959.50"></text></g><g><title>core::ptr::read (192 samples, 0.17%)</title><rect x="79.6666%" y="933" width="0.1733%" height="15" fill="rgb(207,105,14)" fg:x="88269" fg:w="192"/><text x="79.9166%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (328 samples, 0.30%)</title><rect x="79.5980%" y="981" width="0.2960%" height="15" fill="rgb(245,62,29)" fg:x="88193" fg:w="328"/><text x="79.8480%" y="991.50"></text></g><g><title>core::mem::drop (60 samples, 0.05%)</title><rect x="79.8399%" y="965" width="0.0542%" height="15" fill="rgb(236,202,4)" fg:x="88461" fg:w="60"/><text x="80.0899%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (60 samples, 0.05%)</title><rect x="79.8399%" y="949" width="0.0542%" height="15" fill="rgb(250,67,1)" fg:x="88461" fg:w="60"/><text x="80.0899%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (38 samples, 0.03%)</title><rect x="79.8958%" y="885" width="0.0343%" height="15" fill="rgb(253,115,44)" fg:x="88523" fg:w="38"/><text x="80.1458%" y="895.50"></text></g><g><title>core::mem::drop (41 samples, 0.04%)</title><rect x="79.8940%" y="981" width="0.0370%" height="15" fill="rgb(251,139,18)" fg:x="88521" fg:w="41"/><text x="80.1440%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (41 samples, 0.04%)</title><rect x="79.8940%" y="965" width="0.0370%" height="15" fill="rgb(218,22,32)" fg:x="88521" fg:w="41"/><text x="80.1440%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (39 samples, 0.04%)</title><rect x="79.8958%" y="949" width="0.0352%" height="15" fill="rgb(243,53,5)" fg:x="88523" fg:w="39"/><text x="80.1458%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="79.8958%" y="933" width="0.0352%" height="15" fill="rgb(227,56,16)" fg:x="88523" fg:w="39"/><text x="80.1458%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (39 samples, 0.04%)</title><rect x="79.8958%" y="917" width="0.0352%" height="15" fill="rgb(245,53,0)" fg:x="88523" fg:w="39"/><text x="80.1458%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (39 samples, 0.04%)</title><rect x="79.8958%" y="901" width="0.0352%" height="15" fill="rgb(216,170,35)" fg:x="88523" fg:w="39"/><text x="80.1458%" y="911.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="79.9310%" y="965" width="0.0153%" height="15" fill="rgb(211,200,8)" fg:x="88562" fg:w="17"/><text x="80.1810%" y="975.50"></text></g><g><title>std::sync::poison::Flag::done (17 samples, 0.02%)</title><rect x="79.9563%" y="933" width="0.0153%" height="15" fill="rgb(228,204,44)" fg:x="88590" fg:w="17"/><text x="80.2063%" y="943.50"></text></g><g><title>std::thread::panicking (16 samples, 0.01%)</title><rect x="79.9572%" y="917" width="0.0144%" height="15" fill="rgb(214,121,17)" fg:x="88591" fg:w="16"/><text x="80.2072%" y="927.50"></text></g><g><title>std::panicking::panicking (16 samples, 0.01%)</title><rect x="79.9572%" y="901" width="0.0144%" height="15" fill="rgb(233,64,38)" fg:x="88591" fg:w="16"/><text x="80.2072%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (16 samples, 0.01%)</title><rect x="79.9572%" y="885" width="0.0144%" height="15" fill="rgb(253,54,19)" fg:x="88591" fg:w="16"/><text x="80.2072%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (350 samples, 0.32%)</title><rect x="79.9780%" y="901" width="0.3159%" height="15" fill="rgb(253,94,18)" fg:x="88614" fg:w="350"/><text x="80.2280%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (418 samples, 0.38%)</title><rect x="79.9310%" y="981" width="0.3773%" height="15" fill="rgb(227,57,52)" fg:x="88562" fg:w="418"/><text x="80.1810%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (401 samples, 0.36%)</title><rect x="79.9464%" y="965" width="0.3619%" height="15" fill="rgb(230,228,50)" fg:x="88579" fg:w="401"/><text x="80.1964%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (401 samples, 0.36%)</title><rect x="79.9464%" y="949" width="0.3619%" height="15" fill="rgb(217,205,27)" fg:x="88579" fg:w="401"/><text x="80.1964%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (373 samples, 0.34%)</title><rect x="79.9717%" y="933" width="0.3366%" height="15" fill="rgb(252,71,50)" fg:x="88607" fg:w="373"/><text x="80.2217%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (366 samples, 0.33%)</title><rect x="79.9780%" y="917" width="0.3303%" height="15" fill="rgb(209,86,4)" fg:x="88614" fg:w="366"/><text x="80.2280%" y="927.50"></text></g><g><title>___pthread_mutex_unlock (16 samples, 0.01%)</title><rect x="80.2939%" y="901" width="0.0144%" height="15" fill="rgb(229,94,0)" fg:x="88964" fg:w="16"/><text x="80.5439%" y="911.50"></text></g><g><title>core::task::wake::Waker::will_wake (50 samples, 0.05%)</title><rect x="80.3110%" y="981" width="0.0451%" height="15" fill="rgb(252,223,21)" fg:x="88983" fg:w="50"/><text x="80.5610%" y="991.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (50 samples, 0.05%)</title><rect x="80.3110%" y="965" width="0.0451%" height="15" fill="rgb(230,210,4)" fg:x="88983" fg:w="50"/><text x="80.5610%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (39 samples, 0.04%)</title><rect x="80.3209%" y="949" width="0.0352%" height="15" fill="rgb(240,149,38)" fg:x="88994" fg:w="39"/><text x="80.5709%" y="959.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (39 samples, 0.04%)</title><rect x="80.3209%" y="933" width="0.0352%" height="15" fill="rgb(254,105,20)" fg:x="88994" fg:w="39"/><text x="80.5709%" y="943.50"></text></g><g><title>std::sync::poison::Flag::get (14 samples, 0.01%)</title><rect x="80.3643%" y="917" width="0.0126%" height="15" fill="rgb(253,87,46)" fg:x="89042" fg:w="14"/><text x="80.6143%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (14 samples, 0.01%)</title><rect x="80.3643%" y="901" width="0.0126%" height="15" fill="rgb(253,116,33)" fg:x="89042" fg:w="14"/><text x="80.6143%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="80.3643%" y="885" width="0.0126%" height="15" fill="rgb(229,198,5)" fg:x="89042" fg:w="14"/><text x="80.6143%" y="895.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (33 samples, 0.03%)</title><rect x="80.3643%" y="949" width="0.0298%" height="15" fill="rgb(242,38,37)" fg:x="89042" fg:w="33"/><text x="80.6143%" y="959.50"></text></g><g><title>std::sync::poison::Flag::borrow (33 samples, 0.03%)</title><rect x="80.3643%" y="933" width="0.0298%" height="15" fill="rgb(242,69,53)" fg:x="89042" fg:w="33"/><text x="80.6143%" y="943.50"></text></g><g><title>std::thread::panicking (19 samples, 0.02%)</title><rect x="80.3769%" y="917" width="0.0171%" height="15" fill="rgb(249,80,16)" fg:x="89056" fg:w="19"/><text x="80.6269%" y="927.50"></text></g><g><title>std::panicking::panicking (19 samples, 0.02%)</title><rect x="80.3769%" y="901" width="0.0171%" height="15" fill="rgb(206,128,11)" fg:x="89056" fg:w="19"/><text x="80.6269%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (19 samples, 0.02%)</title><rect x="80.3769%" y="885" width="0.0171%" height="15" fill="rgb(212,35,20)" fg:x="89056" fg:w="19"/><text x="80.6269%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (19 samples, 0.02%)</title><rect x="80.3769%" y="869" width="0.0171%" height="15" fill="rgb(236,79,13)" fg:x="89056" fg:w="19"/><text x="80.6269%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.02%)</title><rect x="80.3769%" y="853" width="0.0171%" height="15" fill="rgb(233,123,3)" fg:x="89056" fg:w="19"/><text x="80.6269%" y="863.50"></text></g><g><title>event_listener::Inner::lock (792 samples, 0.71%)</title><rect x="80.3561%" y="981" width="0.7148%" height="15" fill="rgb(214,93,52)" fg:x="89033" fg:w="792"/><text x="80.6061%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (783 samples, 0.71%)</title><rect x="80.3643%" y="965" width="0.7067%" height="15" fill="rgb(251,37,40)" fg:x="89042" fg:w="783"/><text x="80.6143%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (750 samples, 0.68%)</title><rect x="80.3941%" y="949" width="0.6769%" height="15" fill="rgb(227,80,54)" fg:x="89075" fg:w="750"/><text x="80.6441%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (720 samples, 0.65%)</title><rect x="80.4211%" y="933" width="0.6498%" height="15" fill="rgb(254,48,11)" fg:x="89105" fg:w="720"/><text x="80.6711%" y="943.50"></text></g><g><title>___pthread_mutex_lock (720 samples, 0.65%)</title><rect x="80.4211%" y="917" width="0.6498%" height="15" fill="rgb(235,193,26)" fg:x="89105" fg:w="720"/><text x="80.6711%" y="927.50"></text></g><g><title>__GI___lll_lock_wait (85 samples, 0.08%)</title><rect x="80.9942%" y="901" width="0.0767%" height="15" fill="rgb(229,99,21)" fg:x="89740" fg:w="85"/><text x="81.2442%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,857 samples, 1.68%)</title><rect x="79.4482%" y="997" width="1.6760%" height="15" fill="rgb(211,140,41)" fg:x="88027" fg:w="1857"/><text x="79.6982%" y="1007.50"></text></g><g><title>event_listener::List::remove (59 samples, 0.05%)</title><rect x="81.0710%" y="981" width="0.0533%" height="15" fill="rgb(240,227,30)" fg:x="89825" fg:w="59"/><text x="81.3210%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (44 samples, 0.04%)</title><rect x="81.0845%" y="965" width="0.0397%" height="15" fill="rgb(215,224,45)" fg:x="89840" fg:w="44"/><text x="81.3345%" y="975.50"></text></g><g><title>core::mem::replace (44 samples, 0.04%)</title><rect x="81.0845%" y="949" width="0.0397%" height="15" fill="rgb(206,123,31)" fg:x="89840" fg:w="44"/><text x="81.3345%" y="959.50"></text></g><g><title>core::ptr::read (44 samples, 0.04%)</title><rect x="81.0845%" y="933" width="0.0397%" height="15" fill="rgb(210,138,16)" fg:x="89840" fg:w="44"/><text x="81.3345%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (100 samples, 0.09%)</title><rect x="81.2840%" y="949" width="0.0903%" height="15" fill="rgb(228,57,28)" fg:x="90061" fg:w="100"/><text x="81.5340%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (100 samples, 0.09%)</title><rect x="81.2840%" y="933" width="0.0903%" height="15" fill="rgb(242,170,10)" fg:x="90061" fg:w="100"/><text x="81.5340%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (100 samples, 0.09%)</title><rect x="81.2840%" y="917" width="0.0903%" height="15" fill="rgb(228,214,39)" fg:x="90061" fg:w="100"/><text x="81.5340%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (100 samples, 0.09%)</title><rect x="81.2840%" y="901" width="0.0903%" height="15" fill="rgb(218,179,33)" fg:x="90061" fg:w="100"/><text x="81.5340%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (197 samples, 0.18%)</title><rect x="81.3787%" y="949" width="0.1778%" height="15" fill="rgb(235,193,39)" fg:x="90166" fg:w="197"/><text x="81.6287%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (197 samples, 0.18%)</title><rect x="81.3787%" y="933" width="0.1778%" height="15" fill="rgb(219,221,36)" fg:x="90166" fg:w="197"/><text x="81.6287%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (399 samples, 0.36%)</title><rect x="81.5565%" y="949" width="0.3601%" height="15" fill="rgb(248,218,19)" fg:x="90363" fg:w="399"/><text x="81.8065%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (391 samples, 0.35%)</title><rect x="81.5637%" y="933" width="0.3529%" height="15" fill="rgb(205,50,9)" fg:x="90371" fg:w="391"/><text x="81.8137%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (874 samples, 0.79%)</title><rect x="81.1359%" y="981" width="0.7888%" height="15" fill="rgb(238,81,28)" fg:x="89897" fg:w="874"/><text x="81.3859%" y="991.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (845 samples, 0.76%)</title><rect x="81.1621%" y="965" width="0.7626%" height="15" fill="rgb(235,110,19)" fg:x="89926" fg:w="845"/><text x="81.4121%" y="975.50"></text></g><g><title>async_executor::State::notify (16 samples, 0.01%)</title><rect x="81.9509%" y="885" width="0.0144%" height="15" fill="rgb(214,7,14)" fg:x="90800" fg:w="16"/><text x="82.2009%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (15 samples, 0.01%)</title><rect x="81.9717%" y="853" width="0.0135%" height="15" fill="rgb(211,77,3)" fg:x="90823" fg:w="15"/><text x="82.2217%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.01%)</title><rect x="81.9717%" y="837" width="0.0135%" height="15" fill="rgb(229,5,9)" fg:x="90823" fg:w="15"/><text x="82.2217%" y="847.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (45 samples, 0.04%)</title><rect x="81.9509%" y="901" width="0.0406%" height="15" fill="rgb(225,90,11)" fg:x="90800" fg:w="45"/><text x="82.2009%" y="911.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (29 samples, 0.03%)</title><rect x="81.9654%" y="885" width="0.0262%" height="15" fill="rgb(242,56,8)" fg:x="90816" fg:w="29"/><text x="82.2154%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (28 samples, 0.03%)</title><rect x="81.9663%" y="869" width="0.0253%" height="15" fill="rgb(249,212,39)" fg:x="90817" fg:w="28"/><text x="82.2163%" y="879.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (15 samples, 0.01%)</title><rect x="82.0159%" y="837" width="0.0135%" height="15" fill="rgb(236,90,9)" fg:x="90872" fg:w="15"/><text x="82.2659%" y="847.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (15 samples, 0.01%)</title><rect x="82.0159%" y="821" width="0.0135%" height="15" fill="rgb(206,88,35)" fg:x="90872" fg:w="15"/><text x="82.2659%" y="831.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (15 samples, 0.01%)</title><rect x="82.0159%" y="805" width="0.0135%" height="15" fill="rgb(205,126,30)" fg:x="90872" fg:w="15"/><text x="82.2659%" y="815.50"></text></g><g><title>__GI___pthread_cond_signal (15 samples, 0.01%)</title><rect x="82.0159%" y="789" width="0.0135%" height="15" fill="rgb(230,176,12)" fg:x="90872" fg:w="15"/><text x="82.2659%" y="799.50"></text></g><g><title>parking::Inner::unpark (36 samples, 0.03%)</title><rect x="82.0051%" y="853" width="0.0325%" height="15" fill="rgb(243,19,9)" fg:x="90860" fg:w="36"/><text x="82.2551%" y="863.50"></text></g><g><title>parking::Unparker::unpark (41 samples, 0.04%)</title><rect x="82.0015%" y="869" width="0.0370%" height="15" fill="rgb(245,171,17)" fg:x="90856" fg:w="41"/><text x="82.2515%" y="879.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (44 samples, 0.04%)</title><rect x="81.9997%" y="885" width="0.0397%" height="15" fill="rgb(227,52,21)" fg:x="90854" fg:w="44"/><text x="82.2497%" y="895.50"></text></g><g><title>event_listener::List::notify (103 samples, 0.09%)</title><rect x="81.9500%" y="965" width="0.0930%" height="15" fill="rgb(238,69,14)" fg:x="90799" fg:w="103"/><text x="82.2000%" y="975.50"></text></g><g><title>core::task::wake::Waker::wake (103 samples, 0.09%)</title><rect x="81.9500%" y="949" width="0.0930%" height="15" fill="rgb(241,156,39)" fg:x="90799" fg:w="103"/><text x="82.2000%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (103 samples, 0.09%)</title><rect x="81.9500%" y="933" width="0.0930%" height="15" fill="rgb(212,227,28)" fg:x="90799" fg:w="103"/><text x="82.2000%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (103 samples, 0.09%)</title><rect x="81.9500%" y="917" width="0.0930%" height="15" fill="rgb(209,118,27)" fg:x="90799" fg:w="103"/><text x="82.2000%" y="927.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (48 samples, 0.04%)</title><rect x="81.9997%" y="901" width="0.0433%" height="15" fill="rgb(226,102,5)" fg:x="90854" fg:w="48"/><text x="82.2497%" y="911.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,735 samples, 1.57%)</title><rect x="81.1242%" y="997" width="1.5659%" height="15" fill="rgb(223,34,3)" fg:x="89884" fg:w="1735"/><text x="81.3742%" y="1007.50"></text></g><g><title>event_listener::Event::notify (848 samples, 0.77%)</title><rect x="81.9248%" y="981" width="0.7654%" height="15" fill="rgb(221,81,38)" fg:x="90771" fg:w="848"/><text x="82.1748%" y="991.50"></text></g><g><title>event_listener::full_fence (717 samples, 0.65%)</title><rect x="82.0430%" y="965" width="0.6471%" height="15" fill="rgb(236,219,28)" fg:x="90902" fg:w="717"/><text x="82.2930%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (708 samples, 0.64%)</title><rect x="82.0511%" y="949" width="0.6390%" height="15" fill="rgb(213,200,14)" fg:x="90911" fg:w="708"/><text x="82.3011%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (708 samples, 0.64%)</title><rect x="82.0511%" y="933" width="0.6390%" height="15" fill="rgb(240,33,19)" fg:x="90911" fg:w="708"/><text x="82.3011%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (23 samples, 0.02%)</title><rect x="82.6901%" y="997" width="0.0208%" height="15" fill="rgb(233,113,27)" fg:x="91619" fg:w="23"/><text x="82.9401%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (41 samples, 0.04%)</title><rect x="82.7362%" y="869" width="0.0370%" height="15" fill="rgb(220,221,18)" fg:x="91670" fg:w="41"/><text x="82.9862%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (47 samples, 0.04%)</title><rect x="82.7334%" y="949" width="0.0424%" height="15" fill="rgb(238,92,8)" fg:x="91667" fg:w="47"/><text x="82.9834%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (47 samples, 0.04%)</title><rect x="82.7334%" y="933" width="0.0424%" height="15" fill="rgb(222,164,16)" fg:x="91667" fg:w="47"/><text x="82.9834%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="82.7334%" y="917" width="0.0424%" height="15" fill="rgb(241,119,3)" fg:x="91667" fg:w="47"/><text x="82.9834%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (47 samples, 0.04%)</title><rect x="82.7334%" y="901" width="0.0424%" height="15" fill="rgb(241,44,8)" fg:x="91667" fg:w="47"/><text x="82.9834%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (44 samples, 0.04%)</title><rect x="82.7362%" y="885" width="0.0397%" height="15" fill="rgb(230,36,40)" fg:x="91670" fg:w="44"/><text x="82.9862%" y="895.50"></text></g><g><title>event_listener::Inner::lock (70 samples, 0.06%)</title><rect x="82.7768%" y="949" width="0.0632%" height="15" fill="rgb(243,16,36)" fg:x="91715" fg:w="70"/><text x="83.0268%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (70 samples, 0.06%)</title><rect x="82.7768%" y="933" width="0.0632%" height="15" fill="rgb(231,4,26)" fg:x="91715" fg:w="70"/><text x="83.0268%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (63 samples, 0.06%)</title><rect x="82.7831%" y="917" width="0.0569%" height="15" fill="rgb(240,9,31)" fg:x="91722" fg:w="63"/><text x="83.0331%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (57 samples, 0.05%)</title><rect x="82.7885%" y="901" width="0.0514%" height="15" fill="rgb(207,173,15)" fg:x="91728" fg:w="57"/><text x="83.0385%" y="911.50"></text></g><g><title>___pthread_mutex_lock (57 samples, 0.05%)</title><rect x="82.7885%" y="885" width="0.0514%" height="15" fill="rgb(224,192,53)" fg:x="91728" fg:w="57"/><text x="83.0385%" y="895.50"></text></g><g><title>__GI___lll_lock_wait (18 samples, 0.02%)</title><rect x="82.8237%" y="869" width="0.0162%" height="15" fill="rgb(223,67,28)" fg:x="91767" fg:w="18"/><text x="83.0737%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (128 samples, 0.12%)</title><rect x="82.7316%" y="965" width="0.1155%" height="15" fill="rgb(211,20,47)" fg:x="91665" fg:w="128"/><text x="82.9816%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (196 samples, 0.18%)</title><rect x="82.7109%" y="997" width="0.1769%" height="15" fill="rgb(240,228,2)" fg:x="91642" fg:w="196"/><text x="82.9609%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (176 samples, 0.16%)</title><rect x="82.7289%" y="981" width="0.1588%" height="15" fill="rgb(248,151,12)" fg:x="91662" fg:w="176"/><text x="82.9789%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (45 samples, 0.04%)</title><rect x="82.8472%" y="965" width="0.0406%" height="15" fill="rgb(244,8,39)" fg:x="91793" fg:w="45"/><text x="83.0972%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="82.8472%" y="949" width="0.0406%" height="15" fill="rgb(222,26,8)" fg:x="91793" fg:w="45"/><text x="83.0972%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (45 samples, 0.04%)</title><rect x="82.8472%" y="933" width="0.0406%" height="15" fill="rgb(213,106,44)" fg:x="91793" fg:w="45"/><text x="83.0972%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (45 samples, 0.04%)</title><rect x="82.8472%" y="917" width="0.0406%" height="15" fill="rgb(214,129,20)" fg:x="91793" fg:w="45"/><text x="83.0972%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="82.8896%" y="981" width="0.0280%" height="15" fill="rgb(212,32,13)" fg:x="91840" fg:w="31"/><text x="83.1396%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (31 samples, 0.03%)</title><rect x="82.8896%" y="965" width="0.0280%" height="15" fill="rgb(208,168,33)" fg:x="91840" fg:w="31"/><text x="83.1396%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (31 samples, 0.03%)</title><rect x="82.8896%" y="949" width="0.0280%" height="15" fill="rgb(231,207,8)" fg:x="91840" fg:w="31"/><text x="83.1396%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (49 samples, 0.04%)</title><rect x="82.9212%" y="901" width="0.0442%" height="15" fill="rgb(235,219,23)" fg:x="91875" fg:w="49"/><text x="83.1712%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (55 samples, 0.05%)</title><rect x="82.9176%" y="981" width="0.0496%" height="15" fill="rgb(226,216,26)" fg:x="91871" fg:w="55"/><text x="83.1676%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (53 samples, 0.05%)</title><rect x="82.9194%" y="965" width="0.0478%" height="15" fill="rgb(239,137,16)" fg:x="91873" fg:w="53"/><text x="83.1694%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.05%)</title><rect x="82.9194%" y="949" width="0.0478%" height="15" fill="rgb(207,12,36)" fg:x="91873" fg:w="53"/><text x="83.1694%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (51 samples, 0.05%)</title><rect x="82.9212%" y="933" width="0.0460%" height="15" fill="rgb(210,214,24)" fg:x="91875" fg:w="51"/><text x="83.1712%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (51 samples, 0.05%)</title><rect x="82.9212%" y="917" width="0.0460%" height="15" fill="rgb(206,56,30)" fg:x="91875" fg:w="51"/><text x="83.1712%" y="927.50"></text></g><g><title>event_listener::Inner::lock (44 samples, 0.04%)</title><rect x="82.9681%" y="981" width="0.0397%" height="15" fill="rgb(228,143,26)" fg:x="91927" fg:w="44"/><text x="83.2181%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (44 samples, 0.04%)</title><rect x="82.9681%" y="965" width="0.0397%" height="15" fill="rgb(216,218,46)" fg:x="91927" fg:w="44"/><text x="83.2181%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (43 samples, 0.04%)</title><rect x="82.9690%" y="949" width="0.0388%" height="15" fill="rgb(206,6,19)" fg:x="91928" fg:w="43"/><text x="83.2190%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (43 samples, 0.04%)</title><rect x="82.9690%" y="933" width="0.0388%" height="15" fill="rgb(239,177,51)" fg:x="91928" fg:w="43"/><text x="83.2190%" y="943.50"></text></g><g><title>___pthread_mutex_lock (41 samples, 0.04%)</title><rect x="82.9708%" y="917" width="0.0370%" height="15" fill="rgb(216,55,25)" fg:x="91930" fg:w="41"/><text x="83.2208%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,070 samples, 3.67%)</title><rect x="79.3796%" y="1013" width="3.6734%" height="15" fill="rgb(231,163,29)" fg:x="87951" fg:w="4070"/><text x="79.6296%" y="1023.50">&lt;asy..</text></g><g><title>event_listener::Event::listen (183 samples, 0.17%)</title><rect x="82.8878%" y="997" width="0.1652%" height="15" fill="rgb(232,149,50)" fg:x="91838" fg:w="183"/><text x="83.1378%" y="1007.50"></text></g><g><title>event_listener::full_fence (41 samples, 0.04%)</title><rect x="83.0159%" y="981" width="0.0370%" height="15" fill="rgb(223,142,48)" fg:x="91980" fg:w="41"/><text x="83.2659%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (40 samples, 0.04%)</title><rect x="83.0168%" y="965" width="0.0361%" height="15" fill="rgb(245,83,23)" fg:x="91981" fg:w="40"/><text x="83.2668%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (40 samples, 0.04%)</title><rect x="83.0168%" y="949" width="0.0361%" height="15" fill="rgb(224,63,2)" fg:x="91981" fg:w="40"/><text x="83.2668%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (314 samples, 0.28%)</title><rect x="83.0719%" y="997" width="0.2834%" height="15" fill="rgb(218,65,53)" fg:x="92042" fg:w="314"/><text x="83.3219%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,147 samples, 1.04%)</title><rect x="83.3553%" y="965" width="1.0352%" height="15" fill="rgb(221,84,29)" fg:x="92356" fg:w="1147"/><text x="83.6053%" y="975.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (53 samples, 0.05%)</title><rect x="84.4438%" y="789" width="0.0478%" height="15" fill="rgb(234,0,32)" fg:x="93562" fg:w="53"/><text x="84.6938%" y="799.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (40 samples, 0.04%)</title><rect x="84.4555%" y="773" width="0.0361%" height="15" fill="rgb(206,20,16)" fg:x="93575" fg:w="40"/><text x="84.7055%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (84 samples, 0.08%)</title><rect x="84.4212%" y="821" width="0.0758%" height="15" fill="rgb(244,172,18)" fg:x="93537" fg:w="84"/><text x="84.6712%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (84 samples, 0.08%)</title><rect x="84.4212%" y="805" width="0.0758%" height="15" fill="rgb(254,133,1)" fg:x="93537" fg:w="84"/><text x="84.6712%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (87 samples, 0.08%)</title><rect x="84.4212%" y="853" width="0.0785%" height="15" fill="rgb(222,206,41)" fg:x="93537" fg:w="87"/><text x="84.6712%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (87 samples, 0.08%)</title><rect x="84.4212%" y="837" width="0.0785%" height="15" fill="rgb(212,3,42)" fg:x="93537" fg:w="87"/><text x="84.6712%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (105 samples, 0.09%)</title><rect x="84.4095%" y="869" width="0.0948%" height="15" fill="rgb(241,11,4)" fg:x="93524" fg:w="105"/><text x="84.6595%" y="879.50"></text></g><g><title>rust_dealloc (126 samples, 0.11%)</title><rect x="84.3977%" y="885" width="0.1137%" height="15" fill="rgb(205,19,26)" fg:x="93511" fg:w="126"/><text x="84.6477%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,799 samples, 5.23%)</title><rect x="79.2785%" y="1109" width="5.2338%" height="15" fill="rgb(210,179,32)" fg:x="87839" fg:w="5799"/><text x="79.5285%" y="1119.50">&lt;async..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (5,799 samples, 5.23%)</title><rect x="79.2785%" y="1093" width="5.2338%" height="15" fill="rgb(227,116,49)" fg:x="87839" fg:w="5799"/><text x="79.5285%" y="1103.50">&lt;tremo..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,799 samples, 5.23%)</title><rect x="79.2785%" y="1077" width="5.2338%" height="15" fill="rgb(211,146,6)" fg:x="87839" fg:w="5799"/><text x="79.5285%" y="1087.50">&lt;async..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (5,799 samples, 5.23%)</title><rect x="79.2785%" y="1061" width="5.2338%" height="15" fill="rgb(219,44,39)" fg:x="87839" fg:w="5799"/><text x="79.5285%" y="1071.50">&lt;tremo..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,761 samples, 5.20%)</title><rect x="79.3128%" y="1045" width="5.1996%" height="15" fill="rgb(234,128,11)" fg:x="87877" fg:w="5761"/><text x="79.5628%" y="1055.50">&lt;async..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,722 samples, 5.16%)</title><rect x="79.3480%" y="1029" width="5.1644%" height="15" fill="rgb(220,183,53)" fg:x="87916" fg:w="5722"/><text x="79.5980%" y="1039.50">&lt;async..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,617 samples, 1.46%)</title><rect x="83.0529%" y="1013" width="1.4594%" height="15" fill="rgb(213,219,32)" fg:x="92021" fg:w="1617"/><text x="83.3029%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,282 samples, 1.16%)</title><rect x="83.3553%" y="997" width="1.1571%" height="15" fill="rgb(232,156,16)" fg:x="92356" fg:w="1282"/><text x="83.6053%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (1,282 samples, 1.16%)</title><rect x="83.3553%" y="981" width="1.1571%" height="15" fill="rgb(246,135,34)" fg:x="92356" fg:w="1282"/><text x="83.6053%" y="991.50"></text></g><g><title>alloc::alloc::box_free (135 samples, 0.12%)</title><rect x="84.3905%" y="965" width="0.1218%" height="15" fill="rgb(241,99,0)" fg:x="93503" fg:w="135"/><text x="84.6405%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (135 samples, 0.12%)</title><rect x="84.3905%" y="949" width="0.1218%" height="15" fill="rgb(222,103,45)" fg:x="93503" fg:w="135"/><text x="84.6405%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (135 samples, 0.12%)</title><rect x="84.3905%" y="933" width="0.1218%" height="15" fill="rgb(212,57,4)" fg:x="93503" fg:w="135"/><text x="84.6405%" y="943.50"></text></g><g><title>__rg_dealloc (135 samples, 0.12%)</title><rect x="84.3905%" y="917" width="0.1218%" height="15" fill="rgb(215,68,47)" fg:x="93503" fg:w="135"/><text x="84.6405%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (135 samples, 0.12%)</title><rect x="84.3905%" y="901" width="0.1218%" height="15" fill="rgb(230,84,2)" fg:x="93503" fg:w="135"/><text x="84.6405%" y="911.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.03%)</title><rect x="84.6216%" y="1029" width="0.0325%" height="15" fill="rgb(220,102,14)" fg:x="93759" fg:w="36"/><text x="84.8716%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="84.6685%" y="933" width="0.0108%" height="15" fill="rgb(240,10,32)" fg:x="93811" fg:w="12"/><text x="84.9185%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (15 samples, 0.01%)</title><rect x="84.6667%" y="1013" width="0.0135%" height="15" fill="rgb(215,47,27)" fg:x="93809" fg:w="15"/><text x="84.9167%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (15 samples, 0.01%)</title><rect x="84.6667%" y="997" width="0.0135%" height="15" fill="rgb(233,188,43)" fg:x="93809" fg:w="15"/><text x="84.9167%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="84.6667%" y="981" width="0.0135%" height="15" fill="rgb(253,190,1)" fg:x="93809" fg:w="15"/><text x="84.9167%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="84.6685%" y="965" width="0.0117%" height="15" fill="rgb(206,114,52)" fg:x="93811" fg:w="13"/><text x="84.9185%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="84.6685%" y="949" width="0.0117%" height="15" fill="rgb(233,120,37)" fg:x="93811" fg:w="13"/><text x="84.9185%" y="959.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (44 samples, 0.04%)</title><rect x="84.6541%" y="1029" width="0.0397%" height="15" fill="rgb(214,52,39)" fg:x="93795" fg:w="44"/><text x="84.9041%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (15 samples, 0.01%)</title><rect x="84.6802%" y="1013" width="0.0135%" height="15" fill="rgb(223,80,29)" fg:x="93824" fg:w="15"/><text x="84.9302%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="84.6802%" y="997" width="0.0135%" height="15" fill="rgb(230,101,40)" fg:x="93824" fg:w="15"/><text x="84.9302%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="84.6802%" y="981" width="0.0135%" height="15" fill="rgb(219,211,8)" fg:x="93824" fg:w="15"/><text x="84.9302%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="84.6802%" y="965" width="0.0135%" height="15" fill="rgb(252,126,28)" fg:x="93824" fg:w="15"/><text x="84.9302%" y="975.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="84.6802%" y="949" width="0.0135%" height="15" fill="rgb(215,56,38)" fg:x="93824" fg:w="15"/><text x="84.9302%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (36 samples, 0.03%)</title><rect x="84.6947%" y="1029" width="0.0325%" height="15" fill="rgb(249,55,44)" fg:x="93840" fg:w="36"/><text x="84.9447%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (21 samples, 0.02%)</title><rect x="84.7506%" y="1013" width="0.0190%" height="15" fill="rgb(220,221,32)" fg:x="93902" fg:w="21"/><text x="85.0006%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (298 samples, 0.27%)</title><rect x="84.9853%" y="997" width="0.2690%" height="15" fill="rgb(212,216,41)" fg:x="94162" fg:w="298"/><text x="85.2353%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (23 samples, 0.02%)</title><rect x="85.3436%" y="981" width="0.0208%" height="15" fill="rgb(228,213,43)" fg:x="94559" fg:w="23"/><text x="85.5936%" y="991.50"></text></g><g><title>concurrent_queue::full_fence (22 samples, 0.02%)</title><rect x="85.3644%" y="981" width="0.0199%" height="15" fill="rgb(211,31,26)" fg:x="94582" fg:w="22"/><text x="85.6144%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (22 samples, 0.02%)</title><rect x="85.3644%" y="965" width="0.0199%" height="15" fill="rgb(229,202,19)" fg:x="94582" fg:w="22"/><text x="85.6144%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (22 samples, 0.02%)</title><rect x="85.3644%" y="949" width="0.0199%" height="15" fill="rgb(229,105,46)" fg:x="94582" fg:w="22"/><text x="85.6144%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.02%)</title><rect x="85.3644%" y="933" width="0.0199%" height="15" fill="rgb(235,108,1)" fg:x="94582" fg:w="22"/><text x="85.6144%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (15 samples, 0.01%)</title><rect x="85.3842%" y="981" width="0.0135%" height="15" fill="rgb(245,111,35)" fg:x="94604" fg:w="15"/><text x="85.6342%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (224 samples, 0.20%)</title><rect x="85.3978%" y="981" width="0.2022%" height="15" fill="rgb(219,185,31)" fg:x="94619" fg:w="224"/><text x="85.6478%" y="991.50"></text></g><g><title>core::ptr::write (224 samples, 0.20%)</title><rect x="85.3978%" y="965" width="0.2022%" height="15" fill="rgb(214,4,43)" fg:x="94619" fg:w="224"/><text x="85.6478%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (210 samples, 0.19%)</title><rect x="85.4104%" y="949" width="0.1895%" height="15" fill="rgb(235,227,40)" fg:x="94633" fg:w="210"/><text x="85.6604%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (303 samples, 0.27%)</title><rect x="85.5999%" y="981" width="0.2735%" height="15" fill="rgb(230,88,30)" fg:x="94843" fg:w="303"/><text x="85.8499%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (303 samples, 0.27%)</title><rect x="85.5999%" y="965" width="0.2735%" height="15" fill="rgb(216,217,1)" fg:x="94843" fg:w="303"/><text x="85.8499%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (287 samples, 0.26%)</title><rect x="85.8734%" y="981" width="0.2590%" height="15" fill="rgb(248,139,50)" fg:x="95146" fg:w="287"/><text x="86.1234%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (282 samples, 0.25%)</title><rect x="85.8779%" y="965" width="0.2545%" height="15" fill="rgb(233,1,21)" fg:x="95151" fg:w="282"/><text x="86.1279%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,518 samples, 1.37%)</title><rect x="84.7696%" y="1013" width="1.3701%" height="15" fill="rgb(215,183,12)" fg:x="93923" fg:w="1518"/><text x="85.0196%" y="1023.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (981 samples, 0.89%)</title><rect x="85.2542%" y="997" width="0.8854%" height="15" fill="rgb(229,104,42)" fg:x="94460" fg:w="981"/><text x="85.5042%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="86.1667%" y="917" width="0.0117%" height="15" fill="rgb(243,34,48)" fg:x="95471" fg:w="13"/><text x="86.4167%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (15 samples, 0.01%)</title><rect x="86.1658%" y="997" width="0.0135%" height="15" fill="rgb(239,11,44)" fg:x="95470" fg:w="15"/><text x="86.4158%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (14 samples, 0.01%)</title><rect x="86.1667%" y="981" width="0.0126%" height="15" fill="rgb(231,98,35)" fg:x="95471" fg:w="14"/><text x="86.4167%" y="991.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="86.1667%" y="965" width="0.0126%" height="15" fill="rgb(233,28,25)" fg:x="95471" fg:w="14"/><text x="86.4167%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="86.1667%" y="949" width="0.0126%" height="15" fill="rgb(234,123,11)" fg:x="95471" fg:w="14"/><text x="86.4167%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (14 samples, 0.01%)</title><rect x="86.1667%" y="933" width="0.0126%" height="15" fill="rgb(220,69,3)" fg:x="95471" fg:w="14"/><text x="86.4167%" y="943.50"></text></g><g><title>event_listener::Inner::lock (39 samples, 0.04%)</title><rect x="86.1848%" y="997" width="0.0352%" height="15" fill="rgb(214,64,36)" fg:x="95491" fg:w="39"/><text x="86.4348%" y="1007.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (38 samples, 0.03%)</title><rect x="86.1857%" y="981" width="0.0343%" height="15" fill="rgb(211,138,32)" fg:x="95492" fg:w="38"/><text x="86.4357%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (37 samples, 0.03%)</title><rect x="86.1866%" y="965" width="0.0334%" height="15" fill="rgb(213,118,47)" fg:x="95493" fg:w="37"/><text x="86.4366%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (37 samples, 0.03%)</title><rect x="86.1866%" y="949" width="0.0334%" height="15" fill="rgb(243,124,49)" fg:x="95493" fg:w="37"/><text x="86.4366%" y="959.50"></text></g><g><title>___pthread_mutex_lock (37 samples, 0.03%)</title><rect x="86.1866%" y="933" width="0.0334%" height="15" fill="rgb(221,30,28)" fg:x="95493" fg:w="37"/><text x="86.4366%" y="943.50"></text></g><g><title>async_executor::State::notify (38 samples, 0.03%)</title><rect x="86.2380%" y="917" width="0.0343%" height="15" fill="rgb(246,37,13)" fg:x="95550" fg:w="38"/><text x="86.4880%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="86.2579%" y="901" width="0.0144%" height="15" fill="rgb(249,66,14)" fg:x="95572" fg:w="16"/><text x="86.5079%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="86.2588%" y="885" width="0.0135%" height="15" fill="rgb(213,166,5)" fg:x="95573" fg:w="15"/><text x="86.5088%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="86.2588%" y="869" width="0.0135%" height="15" fill="rgb(221,66,24)" fg:x="95573" fg:w="15"/><text x="86.5088%" y="879.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="86.2588%" y="853" width="0.0135%" height="15" fill="rgb(210,132,17)" fg:x="95573" fg:w="15"/><text x="86.5088%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (13 samples, 0.01%)</title><rect x="86.2877%" y="885" width="0.0117%" height="15" fill="rgb(243,202,5)" fg:x="95605" fg:w="13"/><text x="86.5377%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_or (13 samples, 0.01%)</title><rect x="86.2877%" y="869" width="0.0117%" height="15" fill="rgb(233,70,48)" fg:x="95605" fg:w="13"/><text x="86.5377%" y="879.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (70 samples, 0.06%)</title><rect x="86.2380%" y="933" width="0.0632%" height="15" fill="rgb(238,41,26)" fg:x="95550" fg:w="70"/><text x="86.4880%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (32 samples, 0.03%)</title><rect x="86.2723%" y="917" width="0.0289%" height="15" fill="rgb(241,19,31)" fg:x="95588" fg:w="32"/><text x="86.5223%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (31 samples, 0.03%)</title><rect x="86.2732%" y="901" width="0.0280%" height="15" fill="rgb(214,76,10)" fg:x="95589" fg:w="31"/><text x="86.5232%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (30 samples, 0.03%)</title><rect x="86.3012%" y="933" width="0.0271%" height="15" fill="rgb(254,202,22)" fg:x="95620" fg:w="30"/><text x="86.5512%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30 samples, 0.03%)</title><rect x="86.3012%" y="917" width="0.0271%" height="15" fill="rgb(214,72,24)" fg:x="95620" fg:w="30"/><text x="86.5512%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="86.3283%" y="933" width="0.0108%" height="15" fill="rgb(221,92,46)" fg:x="95650" fg:w="12"/><text x="86.5783%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="86.3283%" y="917" width="0.0108%" height="15" fill="rgb(246,13,50)" fg:x="95650" fg:w="12"/><text x="86.5783%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (12 samples, 0.01%)</title><rect x="86.3563%" y="869" width="0.0108%" height="15" fill="rgb(240,165,38)" fg:x="95681" fg:w="12"/><text x="86.6063%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_swap (12 samples, 0.01%)</title><rect x="86.3563%" y="853" width="0.0108%" height="15" fill="rgb(241,24,51)" fg:x="95681" fg:w="12"/><text x="86.6063%" y="863.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (22 samples, 0.02%)</title><rect x="86.3671%" y="869" width="0.0199%" height="15" fill="rgb(227,51,44)" fg:x="95693" fg:w="22"/><text x="86.6171%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (22 samples, 0.02%)</title><rect x="86.3671%" y="853" width="0.0199%" height="15" fill="rgb(231,121,3)" fg:x="95693" fg:w="22"/><text x="86.6171%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (22 samples, 0.02%)</title><rect x="86.3671%" y="837" width="0.0199%" height="15" fill="rgb(245,3,41)" fg:x="95693" fg:w="22"/><text x="86.6171%" y="847.50"></text></g><g><title>__GI___pthread_cond_signal (22 samples, 0.02%)</title><rect x="86.3671%" y="821" width="0.0199%" height="15" fill="rgb(214,13,26)" fg:x="95693" fg:w="22"/><text x="86.6171%" y="831.50"></text></g><g><title>parking::Unparker::unpark (66 samples, 0.06%)</title><rect x="86.3436%" y="901" width="0.0596%" height="15" fill="rgb(252,75,11)" fg:x="95667" fg:w="66"/><text x="86.5936%" y="911.50"></text></g><g><title>parking::Inner::unpark (57 samples, 0.05%)</title><rect x="86.3517%" y="885" width="0.0514%" height="15" fill="rgb(218,226,17)" fg:x="95676" fg:w="57"/><text x="86.6017%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.02%)</title><rect x="86.3869%" y="869" width="0.0162%" height="15" fill="rgb(248,89,38)" fg:x="95715" fg:w="18"/><text x="86.6369%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (18 samples, 0.02%)</title><rect x="86.3869%" y="853" width="0.0162%" height="15" fill="rgb(237,73,46)" fg:x="95715" fg:w="18"/><text x="86.6369%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (18 samples, 0.02%)</title><rect x="86.3869%" y="837" width="0.0162%" height="15" fill="rgb(242,78,33)" fg:x="95715" fg:w="18"/><text x="86.6369%" y="847.50"></text></g><g><title>___pthread_mutex_lock (18 samples, 0.02%)</title><rect x="86.3869%" y="821" width="0.0162%" height="15" fill="rgb(235,60,3)" fg:x="95715" fg:w="18"/><text x="86.6369%" y="831.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (75 samples, 0.07%)</title><rect x="86.3391%" y="917" width="0.0677%" height="15" fill="rgb(216,172,19)" fg:x="95662" fg:w="75"/><text x="86.5891%" y="927.50"></text></g><g><title>event_listener::List::notify (217 samples, 0.20%)</title><rect x="86.2200%" y="997" width="0.1959%" height="15" fill="rgb(227,6,42)" fg:x="95530" fg:w="217"/><text x="86.4700%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (213 samples, 0.19%)</title><rect x="86.2236%" y="981" width="0.1922%" height="15" fill="rgb(223,207,42)" fg:x="95534" fg:w="213"/><text x="86.4736%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (202 samples, 0.18%)</title><rect x="86.2335%" y="965" width="0.1823%" height="15" fill="rgb(246,138,30)" fg:x="95545" fg:w="202"/><text x="86.4835%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (201 samples, 0.18%)</title><rect x="86.2344%" y="949" width="0.1814%" height="15" fill="rgb(251,199,47)" fg:x="95546" fg:w="201"/><text x="86.4844%" y="959.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (85 samples, 0.08%)</title><rect x="86.3391%" y="933" width="0.0767%" height="15" fill="rgb(228,218,44)" fg:x="95662" fg:w="85"/><text x="86.5891%" y="943.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (3,055 samples, 2.76%)</title><rect x="84.7272%" y="1029" width="2.7573%" height="15" fill="rgb(220,68,6)" fg:x="93876" fg:w="3055"/><text x="84.9772%" y="1039.50">as..</text></g><g><title>event_listener::Event::notify (1,490 samples, 1.34%)</title><rect x="86.1396%" y="1013" width="1.3448%" height="15" fill="rgb(240,60,26)" fg:x="95441" fg:w="1490"/><text x="86.3896%" y="1023.50"></text></g><g><title>event_listener::full_fence (1,184 samples, 1.07%)</title><rect x="86.4158%" y="997" width="1.0686%" height="15" fill="rgb(211,200,19)" fg:x="95747" fg:w="1184"/><text x="86.6658%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,184 samples, 1.07%)</title><rect x="86.4158%" y="981" width="1.0686%" height="15" fill="rgb(242,145,30)" fg:x="95747" fg:w="1184"/><text x="86.6658%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,184 samples, 1.07%)</title><rect x="86.4158%" y="965" width="1.0686%" height="15" fill="rgb(225,64,13)" fg:x="95747" fg:w="1184"/><text x="86.6658%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (18 samples, 0.02%)</title><rect x="87.4844%" y="1029" width="0.0162%" height="15" fill="rgb(218,103,35)" fg:x="96931" fg:w="18"/><text x="87.7344%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (411 samples, 0.37%)</title><rect x="87.5007%" y="1029" width="0.3709%" height="15" fill="rgb(216,93,46)" fg:x="96949" fg:w="411"/><text x="87.7507%" y="1039.50"></text></g><g><title>core::mem::replace (411 samples, 0.37%)</title><rect x="87.5007%" y="1013" width="0.3709%" height="15" fill="rgb(225,159,27)" fg:x="96949" fg:w="411"/><text x="87.7507%" y="1023.50"></text></g><g><title>core::ptr::read (411 samples, 0.37%)</title><rect x="87.5007%" y="997" width="0.3709%" height="15" fill="rgb(225,204,11)" fg:x="96949" fg:w="411"/><text x="87.7507%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (388 samples, 0.35%)</title><rect x="87.5214%" y="981" width="0.3502%" height="15" fill="rgb(205,56,4)" fg:x="96972" fg:w="388"/><text x="87.7714%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (319 samples, 0.29%)</title><rect x="87.8716%" y="1029" width="0.2879%" height="15" fill="rgb(206,6,35)" fg:x="97360" fg:w="319"/><text x="88.1216%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (297 samples, 0.27%)</title><rect x="87.8915%" y="1013" width="0.2681%" height="15" fill="rgb(247,73,52)" fg:x="97382" fg:w="297"/><text x="88.1415%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="88.1613%" y="1013" width="0.0388%" height="15" fill="rgb(246,97,4)" fg:x="97681" fg:w="43"/><text x="88.4113%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (43 samples, 0.04%)</title><rect x="88.1613%" y="997" width="0.0388%" height="15" fill="rgb(212,37,15)" fg:x="97681" fg:w="43"/><text x="88.4113%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (43 samples, 0.04%)</title><rect x="88.1613%" y="981" width="0.0388%" height="15" fill="rgb(208,130,40)" fg:x="97681" fg:w="43"/><text x="88.4113%" y="991.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (20 samples, 0.02%)</title><rect x="88.2020%" y="933" width="0.0181%" height="15" fill="rgb(236,55,29)" fg:x="97726" fg:w="20"/><text x="88.4520%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (23 samples, 0.02%)</title><rect x="88.2001%" y="1013" width="0.0208%" height="15" fill="rgb(209,156,45)" fg:x="97724" fg:w="23"/><text x="88.4501%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (23 samples, 0.02%)</title><rect x="88.2001%" y="997" width="0.0208%" height="15" fill="rgb(249,107,4)" fg:x="97724" fg:w="23"/><text x="88.4501%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="88.2001%" y="981" width="0.0208%" height="15" fill="rgb(227,7,13)" fg:x="97724" fg:w="23"/><text x="88.4501%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (21 samples, 0.02%)</title><rect x="88.2020%" y="965" width="0.0190%" height="15" fill="rgb(250,129,14)" fg:x="97726" fg:w="21"/><text x="88.4520%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (21 samples, 0.02%)</title><rect x="88.2020%" y="949" width="0.0190%" height="15" fill="rgb(229,92,13)" fg:x="97726" fg:w="21"/><text x="88.4520%" y="959.50"></text></g><g><title>event_listener::Inner::lock (19 samples, 0.02%)</title><rect x="88.2218%" y="1013" width="0.0171%" height="15" fill="rgb(245,98,39)" fg:x="97748" fg:w="19"/><text x="88.4718%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (19 samples, 0.02%)</title><rect x="88.2218%" y="997" width="0.0171%" height="15" fill="rgb(234,135,48)" fg:x="97748" fg:w="19"/><text x="88.4718%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="88.2236%" y="981" width="0.0153%" height="15" fill="rgb(230,98,28)" fg:x="97750" fg:w="17"/><text x="88.4736%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (17 samples, 0.02%)</title><rect x="88.2236%" y="965" width="0.0153%" height="15" fill="rgb(223,121,0)" fg:x="97750" fg:w="17"/><text x="88.4736%" y="975.50"></text></g><g><title>___pthread_mutex_lock (16 samples, 0.01%)</title><rect x="88.2245%" y="949" width="0.0144%" height="15" fill="rgb(234,173,33)" fg:x="97751" fg:w="16"/><text x="88.4745%" y="959.50"></text></g><g><title>event_listener::Event::listen (100 samples, 0.09%)</title><rect x="88.1604%" y="1029" width="0.0903%" height="15" fill="rgb(245,47,8)" fg:x="97680" fg:w="100"/><text x="88.4104%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (20 samples, 0.02%)</title><rect x="88.2579%" y="933" width="0.0181%" height="15" fill="rgb(205,17,20)" fg:x="97788" fg:w="20"/><text x="88.5079%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (23 samples, 0.02%)</title><rect x="88.2579%" y="1013" width="0.0208%" height="15" fill="rgb(232,151,16)" fg:x="97788" fg:w="23"/><text x="88.5079%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (23 samples, 0.02%)</title><rect x="88.2579%" y="997" width="0.0208%" height="15" fill="rgb(208,30,32)" fg:x="97788" fg:w="23"/><text x="88.5079%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="88.2579%" y="981" width="0.0208%" height="15" fill="rgb(254,26,3)" fg:x="97788" fg:w="23"/><text x="88.5079%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (23 samples, 0.02%)</title><rect x="88.2579%" y="965" width="0.0208%" height="15" fill="rgb(240,177,30)" fg:x="97788" fg:w="23"/><text x="88.5079%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (23 samples, 0.02%)</title><rect x="88.2579%" y="949" width="0.0208%" height="15" fill="rgb(248,76,44)" fg:x="97788" fg:w="23"/><text x="88.5079%" y="959.50"></text></g><g><title>event_listener::Inner::lock (53 samples, 0.05%)</title><rect x="88.2859%" y="1013" width="0.0478%" height="15" fill="rgb(241,186,54)" fg:x="97819" fg:w="53"/><text x="88.5359%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (52 samples, 0.05%)</title><rect x="88.2868%" y="997" width="0.0469%" height="15" fill="rgb(249,171,29)" fg:x="97820" fg:w="52"/><text x="88.5368%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (46 samples, 0.04%)</title><rect x="88.2922%" y="981" width="0.0415%" height="15" fill="rgb(237,151,44)" fg:x="97826" fg:w="46"/><text x="88.5422%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (46 samples, 0.04%)</title><rect x="88.2922%" y="965" width="0.0415%" height="15" fill="rgb(228,174,30)" fg:x="97826" fg:w="46"/><text x="88.5422%" y="975.50"></text></g><g><title>___pthread_mutex_lock (46 samples, 0.04%)</title><rect x="88.2922%" y="949" width="0.0415%" height="15" fill="rgb(252,14,37)" fg:x="97826" fg:w="46"/><text x="88.5422%" y="959.50"></text></g><g><title>__GI___lll_lock_wait (31 samples, 0.03%)</title><rect x="88.3057%" y="933" width="0.0280%" height="15" fill="rgb(207,111,40)" fg:x="97841" fg:w="31"/><text x="88.5557%" y="943.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (10,283 samples, 9.28%)</title><rect x="79.2785%" y="1125" width="9.2809%" height="15" fill="rgb(248,171,54)" fg:x="87839" fg:w="10283"/><text x="79.5285%" y="1135.50">tremor_runtim..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,484 samples, 4.05%)</title><rect x="84.5124%" y="1109" width="4.0470%" height="15" fill="rgb(211,127,2)" fg:x="93638" fg:w="4484"/><text x="84.7624%" y="1119.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (4,484 samples, 4.05%)</title><rect x="84.5124%" y="1093" width="4.0470%" height="15" fill="rgb(236,87,47)" fg:x="93638" fg:w="4484"/><text x="84.7624%" y="1103.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,484 samples, 4.05%)</title><rect x="84.5124%" y="1077" width="4.0470%" height="15" fill="rgb(223,190,45)" fg:x="93638" fg:w="4484"/><text x="84.7624%" y="1087.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (4,484 samples, 4.05%)</title><rect x="84.5124%" y="1061" width="4.0470%" height="15" fill="rgb(215,5,16)" fg:x="93638" fg:w="4484"/><text x="84.7624%" y="1071.50">trem..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (4,484 samples, 4.05%)</title><rect x="84.5124%" y="1045" width="4.0470%" height="15" fill="rgb(252,82,33)" fg:x="93638" fg:w="4484"/><text x="84.7624%" y="1055.50">&lt;asy..</text></g><g><title>event_listener::Event::notify (342 samples, 0.31%)</title><rect x="88.2507%" y="1029" width="0.3087%" height="15" fill="rgb(247,213,44)" fg:x="97780" fg:w="342"/><text x="88.5007%" y="1039.50"></text></g><g><title>event_listener::full_fence (248 samples, 0.22%)</title><rect x="88.3355%" y="1013" width="0.2238%" height="15" fill="rgb(205,196,44)" fg:x="97874" fg:w="248"/><text x="88.5855%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (232 samples, 0.21%)</title><rect x="88.3500%" y="997" width="0.2094%" height="15" fill="rgb(237,96,54)" fg:x="97890" fg:w="232"/><text x="88.6000%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (232 samples, 0.21%)</title><rect x="88.3500%" y="981" width="0.2094%" height="15" fill="rgb(230,113,34)" fg:x="97890" fg:w="232"/><text x="88.6000%" y="991.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (86 samples, 0.08%)</title><rect x="88.5594%" y="1125" width="0.0776%" height="15" fill="rgb(221,224,12)" fg:x="98122" fg:w="86"/><text x="88.8094%" y="1135.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (43 samples, 0.04%)</title><rect x="88.6370%" y="1125" width="0.0388%" height="15" fill="rgb(219,112,44)" fg:x="98208" fg:w="43"/><text x="88.8870%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.01%)</title><rect x="88.6632%" y="1109" width="0.0126%" height="15" fill="rgb(210,31,13)" fg:x="98237" fg:w="14"/><text x="88.9132%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="88.6632%" y="1093" width="0.0126%" height="15" fill="rgb(230,25,16)" fg:x="98237" fg:w="14"/><text x="88.9132%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="88.6632%" y="1077" width="0.0126%" height="15" fill="rgb(246,108,53)" fg:x="98237" fg:w="14"/><text x="88.9132%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="88.6632%" y="1061" width="0.0126%" height="15" fill="rgb(241,172,50)" fg:x="98237" fg:w="14"/><text x="88.9132%" y="1071.50"></text></g><g><title>__rg_alloc (14 samples, 0.01%)</title><rect x="88.6632%" y="1045" width="0.0126%" height="15" fill="rgb(235,141,10)" fg:x="98237" fg:w="14"/><text x="88.9132%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.01%)</title><rect x="88.6632%" y="1029" width="0.0126%" height="15" fill="rgb(220,174,43)" fg:x="98237" fg:w="14"/><text x="88.9132%" y="1039.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (21 samples, 0.02%)</title><rect x="88.6785%" y="1125" width="0.0190%" height="15" fill="rgb(215,181,40)" fg:x="98254" fg:w="21"/><text x="88.9285%" y="1135.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (13 samples, 0.01%)</title><rect x="88.7119%" y="1061" width="0.0117%" height="15" fill="rgb(230,97,2)" fg:x="98291" fg:w="13"/><text x="88.9619%" y="1071.50"></text></g><g><title>std::collections::hash::map::RandomState::new (13 samples, 0.01%)</title><rect x="88.7119%" y="1045" width="0.0117%" height="15" fill="rgb(211,25,27)" fg:x="98291" fg:w="13"/><text x="88.9619%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.01%)</title><rect x="88.7119%" y="1029" width="0.0117%" height="15" fill="rgb(230,87,26)" fg:x="98291" fg:w="13"/><text x="88.9619%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.01%)</title><rect x="88.7119%" y="1013" width="0.0117%" height="15" fill="rgb(227,160,17)" fg:x="98291" fg:w="13"/><text x="88.9619%" y="1023.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (20 samples, 0.02%)</title><rect x="88.7119%" y="1077" width="0.0181%" height="15" fill="rgb(244,85,34)" fg:x="98291" fg:w="20"/><text x="88.9619%" y="1087.50"></text></g><g><title>value_trait::Builder::object (46 samples, 0.04%)</title><rect x="88.6974%" y="1125" width="0.0415%" height="15" fill="rgb(207,70,0)" fg:x="98275" fg:w="46"/><text x="88.9474%" y="1135.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (30 samples, 0.03%)</title><rect x="88.7119%" y="1109" width="0.0271%" height="15" fill="rgb(223,129,7)" fg:x="98291" fg:w="30"/><text x="88.9619%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (30 samples, 0.03%)</title><rect x="88.7119%" y="1093" width="0.0271%" height="15" fill="rgb(246,105,7)" fg:x="98291" fg:w="30"/><text x="88.9619%" y="1103.50"></text></g><g><title>[unknown] (92,944 samples, 83.89%)</title><rect x="4.8557%" y="1141" width="83.8860%" height="15" fill="rgb(215,154,42)" fg:x="5380" fg:w="92944"/><text x="5.1057%" y="1151.50">[unknown]</text></g><g><title>snmalloc::AllocPool&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt;::acquire (17 samples, 0.02%)</title><rect x="88.7507%" y="677" width="0.0153%" height="15" fill="rgb(220,215,30)" fg:x="98334" fg:w="17"/><text x="89.0007%" y="687.50"></text></g><g><title>snmalloc::Pool&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt; &gt;::acquire&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (17 samples, 0.02%)</title><rect x="88.7507%" y="661" width="0.0153%" height="15" fill="rgb(228,81,51)" fg:x="98334" fg:w="17"/><text x="89.0007%" y="671.50"></text></g><g><title>snmalloc::Pool&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt; &gt;::acquire&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (17 samples, 0.02%)</title><rect x="88.7507%" y="645" width="0.0153%" height="15" fill="rgb(247,71,54)" fg:x="98334" fg:w="17"/><text x="89.0007%" y="655.50"></text></g><g><title>snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;::alloc_chunk&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, 4096ul, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (17 samples, 0.02%)</title><rect x="88.7507%" y="629" width="0.0153%" height="15" fill="rgb(234,176,34)" fg:x="98334" fg:w="17"/><text x="89.0007%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::Allocator (17 samples, 0.02%)</title><rect x="88.7507%" y="613" width="0.0153%" height="15" fill="rgb(241,103,54)" fg:x="98334" fg:w="17"/><text x="89.0007%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::init_message_queue (17 samples, 0.02%)</title><rect x="88.7507%" y="597" width="0.0153%" height="15" fill="rgb(228,22,34)" fg:x="98334" fg:w="17"/><text x="89.0007%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)1&gt; (17 samples, 0.02%)</title><rect x="88.7507%" y="581" width="0.0153%" height="15" fill="rgb(241,179,48)" fg:x="98334" fg:w="17"/><text x="89.0007%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)1&gt; (17 samples, 0.02%)</title><rect x="88.7507%" y="565" width="0.0153%" height="15" fill="rgb(235,167,37)" fg:x="98334" fg:w="17"/><text x="89.0007%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)1&gt; (17 samples, 0.02%)</title><rect x="88.7507%" y="549" width="0.0153%" height="15" fill="rgb(213,109,30)" fg:x="98334" fg:w="17"/><text x="89.0007%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)1&gt; (17 samples, 0.02%)</title><rect x="88.7507%" y="533" width="0.0153%" height="15" fill="rgb(222,172,16)" fg:x="98334" fg:w="17"/><text x="89.0007%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)1&gt; (17 samples, 0.02%)</title><rect x="88.7507%" y="517" width="0.0153%" height="15" fill="rgb(233,192,5)" fg:x="98334" fg:w="17"/><text x="89.0007%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)1&gt; (17 samples, 0.02%)</title><rect x="88.7507%" y="501" width="0.0153%" height="15" fill="rgb(247,189,41)" fg:x="98334" fg:w="17"/><text x="89.0007%" y="511.50"></text></g><g><title>async_channel::bounded (36 samples, 0.03%)</title><rect x="88.7507%" y="901" width="0.0325%" height="15" fill="rgb(218,134,47)" fg:x="98334" fg:w="36"/><text x="89.0007%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (36 samples, 0.03%)</title><rect x="88.7507%" y="885" width="0.0325%" height="15" fill="rgb(216,29,3)" fg:x="98334" fg:w="36"/><text x="89.0007%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (36 samples, 0.03%)</title><rect x="88.7507%" y="869" width="0.0325%" height="15" fill="rgb(246,140,12)" fg:x="98334" fg:w="36"/><text x="89.0007%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.03%)</title><rect x="88.7507%" y="853" width="0.0325%" height="15" fill="rgb(230,136,11)" fg:x="98334" fg:w="36"/><text x="89.0007%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.03%)</title><rect x="88.7507%" y="837" width="0.0325%" height="15" fill="rgb(247,22,47)" fg:x="98334" fg:w="36"/><text x="89.0007%" y="847.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.03%)</title><rect x="88.7507%" y="821" width="0.0325%" height="15" fill="rgb(218,84,22)" fg:x="98334" fg:w="36"/><text x="89.0007%" y="831.50"></text></g><g><title>__rg_alloc (36 samples, 0.03%)</title><rect x="88.7507%" y="805" width="0.0325%" height="15" fill="rgb(216,87,39)" fg:x="98334" fg:w="36"/><text x="89.0007%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (36 samples, 0.03%)</title><rect x="88.7507%" y="789" width="0.0325%" height="15" fill="rgb(221,178,8)" fg:x="98334" fg:w="36"/><text x="89.0007%" y="799.50"></text></g><g><title>rust_alloc (36 samples, 0.03%)</title><rect x="88.7507%" y="773" width="0.0325%" height="15" fill="rgb(230,42,11)" fg:x="98334" fg:w="36"/><text x="89.0007%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="88.7507%" y="757" width="0.0325%" height="15" fill="rgb(237,229,4)" fg:x="98334" fg:w="36"/><text x="89.0007%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="88.7507%" y="741" width="0.0325%" height="15" fill="rgb(222,31,33)" fg:x="98334" fg:w="36"/><text x="89.0007%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="88.7507%" y="725" width="0.0325%" height="15" fill="rgb(210,17,39)" fg:x="98334" fg:w="36"/><text x="89.0007%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="88.7507%" y="709" width="0.0325%" height="15" fill="rgb(244,93,20)" fg:x="98334" fg:w="36"/><text x="89.0007%" y="719.50"></text></g><g><title>snmalloc::init_thread_allocator (36 samples, 0.03%)</title><rect x="88.7507%" y="693" width="0.0325%" height="15" fill="rgb(210,40,47)" fg:x="98334" fg:w="36"/><text x="89.0007%" y="703.50"></text></g><g><title>snmalloc::function_ref&lt;void* (void*)&gt;::operator (16 samples, 0.01%)</title><rect x="88.7688%" y="677" width="0.0144%" height="15" fill="rgb(239,211,47)" fg:x="98354" fg:w="16"/><text x="89.0188%" y="687.50"></text></g><g><title>snmalloc::function_ref&lt;void* (void*)&gt;::execute&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long, unsigned long)::{lambda(void*)#1}&gt; (16 samples, 0.01%)</title><rect x="88.7688%" y="661" width="0.0144%" height="15" fill="rgb(251,223,49)" fg:x="98354" fg:w="16"/><text x="89.0188%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="88.7688%" y="645" width="0.0144%" height="15" fill="rgb(221,149,5)" fg:x="98354" fg:w="16"/><text x="89.0188%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="88.7688%" y="629" width="0.0144%" height="15" fill="rgb(219,224,51)" fg:x="98354" fg:w="16"/><text x="89.0188%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="88.7688%" y="613" width="0.0144%" height="15" fill="rgb(223,7,8)" fg:x="98354" fg:w="16"/><text x="89.0188%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="88.7688%" y="597" width="0.0144%" height="15" fill="rgb(241,217,22)" fg:x="98354" fg:w="16"/><text x="89.0188%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="88.7688%" y="581" width="0.0144%" height="15" fill="rgb(248,209,0)" fg:x="98354" fg:w="16"/><text x="89.0188%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="88.7688%" y="565" width="0.0144%" height="15" fill="rgb(217,205,4)" fg:x="98354" fg:w="16"/><text x="89.0188%" y="575.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (16 samples, 0.01%)</title><rect x="88.7688%" y="549" width="0.0144%" height="15" fill="rgb(228,124,39)" fg:x="98354" fg:w="16"/><text x="89.0188%" y="559.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (16 samples, 0.01%)</title><rect x="88.7688%" y="533" width="0.0144%" height="15" fill="rgb(250,116,42)" fg:x="98354" fg:w="16"/><text x="89.0188%" y="543.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="88.7688%" y="517" width="0.0144%" height="15" fill="rgb(223,202,9)" fg:x="98354" fg:w="16"/><text x="89.0188%" y="527.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="88.8680%" y="549" width="0.0117%" height="15" fill="rgb(242,222,40)" fg:x="98464" fg:w="13"/><text x="89.1180%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.01%)</title><rect x="89.0197%" y="533" width="0.0135%" height="15" fill="rgb(229,99,46)" fg:x="98632" fg:w="15"/><text x="89.2697%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (34 samples, 0.03%)</title><rect x="89.1325%" y="437" width="0.0307%" height="15" fill="rgb(225,56,46)" fg:x="98757" fg:w="34"/><text x="89.3825%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (32 samples, 0.03%)</title><rect x="89.1343%" y="421" width="0.0289%" height="15" fill="rgb(227,94,5)" fg:x="98759" fg:w="32"/><text x="89.3843%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (19 samples, 0.02%)</title><rect x="89.1460%" y="405" width="0.0171%" height="15" fill="rgb(205,112,38)" fg:x="98772" fg:w="19"/><text x="89.3960%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="89.1632%" y="437" width="0.0181%" height="15" fill="rgb(231,133,46)" fg:x="98791" fg:w="20"/><text x="89.4132%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (41 samples, 0.04%)</title><rect x="89.1812%" y="437" width="0.0370%" height="15" fill="rgb(217,16,9)" fg:x="98811" fg:w="41"/><text x="89.4312%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (216 samples, 0.19%)</title><rect x="89.0937%" y="469" width="0.1949%" height="15" fill="rgb(249,173,9)" fg:x="98714" fg:w="216"/><text x="89.3437%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (188 samples, 0.17%)</title><rect x="89.1189%" y="453" width="0.1697%" height="15" fill="rgb(205,163,53)" fg:x="98742" fg:w="188"/><text x="89.3689%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (78 samples, 0.07%)</title><rect x="89.2182%" y="437" width="0.0704%" height="15" fill="rgb(217,54,41)" fg:x="98852" fg:w="78"/><text x="89.4682%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (78 samples, 0.07%)</title><rect x="89.2182%" y="421" width="0.0704%" height="15" fill="rgb(228,216,12)" fg:x="98852" fg:w="78"/><text x="89.4682%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (40 samples, 0.04%)</title><rect x="89.2525%" y="405" width="0.0361%" height="15" fill="rgb(244,228,15)" fg:x="98890" fg:w="40"/><text x="89.5025%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (40 samples, 0.04%)</title><rect x="89.2525%" y="389" width="0.0361%" height="15" fill="rgb(221,176,53)" fg:x="98890" fg:w="40"/><text x="89.5025%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (255 samples, 0.23%)</title><rect x="89.0594%" y="485" width="0.2301%" height="15" fill="rgb(205,94,34)" fg:x="98676" fg:w="255"/><text x="89.3094%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (297 samples, 0.27%)</title><rect x="89.0332%" y="533" width="0.2681%" height="15" fill="rgb(213,110,48)" fg:x="98647" fg:w="297"/><text x="89.2832%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (297 samples, 0.27%)</title><rect x="89.0332%" y="517" width="0.2681%" height="15" fill="rgb(236,142,28)" fg:x="98647" fg:w="297"/><text x="89.2832%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (297 samples, 0.27%)</title><rect x="89.0332%" y="501" width="0.2681%" height="15" fill="rgb(225,135,29)" fg:x="98647" fg:w="297"/><text x="89.2832%" y="511.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (12 samples, 0.01%)</title><rect x="89.2904%" y="485" width="0.0108%" height="15" fill="rgb(252,45,31)" fg:x="98932" fg:w="12"/><text x="89.5404%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (535 samples, 0.48%)</title><rect x="89.5585%" y="501" width="0.4829%" height="15" fill="rgb(211,187,50)" fg:x="99229" fg:w="535"/><text x="89.8085%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (382 samples, 0.34%)</title><rect x="89.6966%" y="485" width="0.3448%" height="15" fill="rgb(229,109,7)" fg:x="99382" fg:w="382"/><text x="89.9466%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (382 samples, 0.34%)</title><rect x="89.6966%" y="469" width="0.3448%" height="15" fill="rgb(251,131,51)" fg:x="99382" fg:w="382"/><text x="89.9466%" y="479.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (767 samples, 0.69%)</title><rect x="89.3563%" y="517" width="0.6923%" height="15" fill="rgb(251,180,35)" fg:x="99005" fg:w="767"/><text x="89.6063%" y="527.50"></text></g><g><title>async_executor::steal (829 samples, 0.75%)</title><rect x="89.3013%" y="533" width="0.7482%" height="15" fill="rgb(211,46,32)" fg:x="98944" fg:w="829"/><text x="89.5513%" y="543.50"></text></g><g><title>concurrent_queue::full_fence (893 samples, 0.81%)</title><rect x="90.5061%" y="501" width="0.8060%" height="15" fill="rgb(248,123,17)" fg:x="100279" fg:w="893"/><text x="90.7561%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (893 samples, 0.81%)</title><rect x="90.5061%" y="485" width="0.8060%" height="15" fill="rgb(227,141,18)" fg:x="100279" fg:w="893"/><text x="90.7561%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (893 samples, 0.81%)</title><rect x="90.5061%" y="469" width="0.8060%" height="15" fill="rgb(216,102,9)" fg:x="100279" fg:w="893"/><text x="90.7561%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (893 samples, 0.81%)</title><rect x="90.5061%" y="453" width="0.8060%" height="15" fill="rgb(253,47,13)" fg:x="100279" fg:w="893"/><text x="90.7561%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,317 samples, 1.19%)</title><rect x="90.2074%" y="517" width="1.1886%" height="15" fill="rgb(226,93,23)" fg:x="99948" fg:w="1317"/><text x="90.4574%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (93 samples, 0.08%)</title><rect x="91.3121%" y="501" width="0.0839%" height="15" fill="rgb(247,104,17)" fg:x="101172" fg:w="93"/><text x="91.5621%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (69 samples, 0.06%)</title><rect x="91.3338%" y="485" width="0.0623%" height="15" fill="rgb(233,203,26)" fg:x="101196" fg:w="69"/><text x="91.5838%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (319 samples, 0.29%)</title><rect x="91.4520%" y="501" width="0.2879%" height="15" fill="rgb(244,98,49)" fg:x="101327" fg:w="319"/><text x="91.7020%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (309 samples, 0.28%)</title><rect x="91.4610%" y="485" width="0.2789%" height="15" fill="rgb(235,134,22)" fg:x="101337" fg:w="309"/><text x="91.7110%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (309 samples, 0.28%)</title><rect x="91.4610%" y="469" width="0.2789%" height="15" fill="rgb(221,70,32)" fg:x="101337" fg:w="309"/><text x="91.7110%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (309 samples, 0.28%)</title><rect x="91.4610%" y="453" width="0.2789%" height="15" fill="rgb(238,15,50)" fg:x="101337" fg:w="309"/><text x="91.7110%" y="463.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (21 samples, 0.02%)</title><rect x="91.7408%" y="501" width="0.0190%" height="15" fill="rgb(215,221,48)" fg:x="101647" fg:w="21"/><text x="91.9908%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="91.7408%" y="485" width="0.0190%" height="15" fill="rgb(236,73,3)" fg:x="101647" fg:w="21"/><text x="91.9908%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="91.7408%" y="469" width="0.0190%" height="15" fill="rgb(250,107,11)" fg:x="101647" fg:w="21"/><text x="91.9908%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (13 samples, 0.01%)</title><rect x="91.7688%" y="501" width="0.0117%" height="15" fill="rgb(242,39,14)" fg:x="101678" fg:w="13"/><text x="92.0188%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="91.7688%" y="485" width="0.0117%" height="15" fill="rgb(248,164,37)" fg:x="101678" fg:w="13"/><text x="92.0188%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (73 samples, 0.07%)</title><rect x="91.7805%" y="501" width="0.0659%" height="15" fill="rgb(217,60,12)" fg:x="101691" fg:w="73"/><text x="92.0305%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (73 samples, 0.07%)</title><rect x="91.7805%" y="485" width="0.0659%" height="15" fill="rgb(240,125,29)" fg:x="101691" fg:w="73"/><text x="92.0305%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (124 samples, 0.11%)</title><rect x="91.8464%" y="501" width="0.1119%" height="15" fill="rgb(208,207,28)" fg:x="101764" fg:w="124"/><text x="92.0964%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_or (124 samples, 0.11%)</title><rect x="91.8464%" y="485" width="0.1119%" height="15" fill="rgb(209,159,27)" fg:x="101764" fg:w="124"/><text x="92.0964%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,355 samples, 2.13%)</title><rect x="90.0495%" y="533" width="2.1255%" height="15" fill="rgb(251,176,53)" fg:x="99773" fg:w="2355"/><text x="90.2995%" y="543.50">c..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (863 samples, 0.78%)</title><rect x="91.3961%" y="517" width="0.7789%" height="15" fill="rgb(211,85,7)" fg:x="101265" fg:w="863"/><text x="91.6461%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (240 samples, 0.22%)</title><rect x="91.9583%" y="501" width="0.2166%" height="15" fill="rgb(216,64,54)" fg:x="101888" fg:w="240"/><text x="92.2083%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (240 samples, 0.22%)</title><rect x="91.9583%" y="485" width="0.2166%" height="15" fill="rgb(217,54,24)" fg:x="101888" fg:w="240"/><text x="92.2083%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (264 samples, 0.24%)</title><rect x="92.1948%" y="469" width="0.2383%" height="15" fill="rgb(208,206,53)" fg:x="102150" fg:w="264"/><text x="92.4448%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (264 samples, 0.24%)</title><rect x="92.1948%" y="453" width="0.2383%" height="15" fill="rgb(251,74,39)" fg:x="102150" fg:w="264"/><text x="92.4448%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (515 samples, 0.46%)</title><rect x="92.1749%" y="533" width="0.4648%" height="15" fill="rgb(226,47,5)" fg:x="102128" fg:w="515"/><text x="92.4249%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (515 samples, 0.46%)</title><rect x="92.1749%" y="517" width="0.4648%" height="15" fill="rgb(234,111,33)" fg:x="102128" fg:w="515"/><text x="92.4249%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (515 samples, 0.46%)</title><rect x="92.1749%" y="501" width="0.4648%" height="15" fill="rgb(251,14,10)" fg:x="102128" fg:w="515"/><text x="92.4249%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (496 samples, 0.45%)</title><rect x="92.1921%" y="485" width="0.4477%" height="15" fill="rgb(232,43,0)" fg:x="102147" fg:w="496"/><text x="92.4421%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (229 samples, 0.21%)</title><rect x="92.4331%" y="469" width="0.2067%" height="15" fill="rgb(222,68,43)" fg:x="102414" fg:w="229"/><text x="92.6831%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (229 samples, 0.21%)</title><rect x="92.4331%" y="453" width="0.2067%" height="15" fill="rgb(217,24,23)" fg:x="102414" fg:w="229"/><text x="92.6831%" y="463.50"></text></g><g><title>fastrand::RNG::__getit (12 samples, 0.01%)</title><rect x="92.6452%" y="485" width="0.0108%" height="15" fill="rgb(229,209,14)" fg:x="102649" fg:w="12"/><text x="92.8952%" y="495.50"></text></g><g><title>fastrand::Rng::usize (14 samples, 0.01%)</title><rect x="92.6560%" y="469" width="0.0126%" height="15" fill="rgb(250,149,48)" fg:x="102661" fg:w="14"/><text x="92.9060%" y="479.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (13 samples, 0.01%)</title><rect x="92.6569%" y="453" width="0.0117%" height="15" fill="rgb(210,120,37)" fg:x="102662" fg:w="13"/><text x="92.9069%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28 samples, 0.03%)</title><rect x="92.6452%" y="501" width="0.0253%" height="15" fill="rgb(210,21,8)" fg:x="102649" fg:w="28"/><text x="92.8952%" y="511.50"></text></g><g><title>fastrand::usize::{{closure}} (16 samples, 0.01%)</title><rect x="92.6560%" y="485" width="0.0144%" height="15" fill="rgb(243,145,7)" fg:x="102661" fg:w="16"/><text x="92.9060%" y="495.50"></text></g><g><title>fastrand::usize (40 samples, 0.04%)</title><rect x="92.6398%" y="533" width="0.0361%" height="15" fill="rgb(238,178,32)" fg:x="102643" fg:w="40"/><text x="92.8898%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (34 samples, 0.03%)</title><rect x="92.6452%" y="517" width="0.0307%" height="15" fill="rgb(222,4,10)" fg:x="102649" fg:w="34"/><text x="92.8952%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="92.6759%" y="517" width="0.0162%" height="15" fill="rgb(239,7,37)" fg:x="102683" fg:w="18"/><text x="92.9259%" y="527.50"></text></g><g><title>std::sync::poison::Flag::borrow (18 samples, 0.02%)</title><rect x="92.6759%" y="501" width="0.0162%" height="15" fill="rgb(215,31,37)" fg:x="102683" fg:w="18"/><text x="92.9259%" y="511.50"></text></g><g><title>___pthread_rwlock_rdlock (204 samples, 0.18%)</title><rect x="92.7029%" y="485" width="0.1841%" height="15" fill="rgb(224,83,33)" fg:x="102713" fg:w="204"/><text x="92.9529%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (4,569 samples, 4.12%)</title><rect x="88.8798%" y="549" width="4.1237%" height="15" fill="rgb(239,55,3)" fg:x="98477" fg:w="4569"/><text x="89.1298%" y="559.50">asyn..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (363 samples, 0.33%)</title><rect x="92.6759%" y="533" width="0.3276%" height="15" fill="rgb(247,92,11)" fg:x="102683" fg:w="363"/><text x="92.9259%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (345 samples, 0.31%)</title><rect x="92.6921%" y="517" width="0.3114%" height="15" fill="rgb(239,200,7)" fg:x="102701" fg:w="345"/><text x="92.9421%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (337 samples, 0.30%)</title><rect x="92.6993%" y="501" width="0.3042%" height="15" fill="rgb(227,115,8)" fg:x="102709" fg:w="337"/><text x="92.9493%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (129 samples, 0.12%)</title><rect x="92.8871%" y="485" width="0.1164%" height="15" fill="rgb(215,189,27)" fg:x="102917" fg:w="129"/><text x="93.1371%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (129 samples, 0.12%)</title><rect x="92.8871%" y="469" width="0.1164%" height="15" fill="rgb(251,216,39)" fg:x="102917" fg:w="129"/><text x="93.1371%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (34 samples, 0.03%)</title><rect x="93.0161%" y="469" width="0.0307%" height="15" fill="rgb(207,29,47)" fg:x="103060" fg:w="34"/><text x="93.2661%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (43 samples, 0.04%)</title><rect x="93.0116%" y="533" width="0.0388%" height="15" fill="rgb(210,71,34)" fg:x="103055" fg:w="43"/><text x="93.2616%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="93.0116%" y="517" width="0.0388%" height="15" fill="rgb(253,217,51)" fg:x="103055" fg:w="43"/><text x="93.2616%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (40 samples, 0.04%)</title><rect x="93.0143%" y="501" width="0.0361%" height="15" fill="rgb(222,117,46)" fg:x="103058" fg:w="40"/><text x="93.2643%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (38 samples, 0.03%)</title><rect x="93.0161%" y="485" width="0.0343%" height="15" fill="rgb(226,132,6)" fg:x="103060" fg:w="38"/><text x="93.2661%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (70 samples, 0.06%)</title><rect x="93.0504%" y="533" width="0.0632%" height="15" fill="rgb(254,145,51)" fg:x="103098" fg:w="70"/><text x="93.3004%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (70 samples, 0.06%)</title><rect x="93.0504%" y="517" width="0.0632%" height="15" fill="rgb(231,199,27)" fg:x="103098" fg:w="70"/><text x="93.3004%" y="527.50"></text></g><g><title>async_executor::State::notify (172 samples, 0.16%)</title><rect x="93.0035%" y="549" width="0.1552%" height="15" fill="rgb(245,158,14)" fg:x="103046" fg:w="172"/><text x="93.2535%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.05%)</title><rect x="93.1136%" y="533" width="0.0451%" height="15" fill="rgb(240,113,14)" fg:x="103168" fg:w="50"/><text x="93.3636%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (46 samples, 0.04%)</title><rect x="93.1172%" y="517" width="0.0415%" height="15" fill="rgb(210,20,13)" fg:x="103172" fg:w="46"/><text x="93.3672%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (45 samples, 0.04%)</title><rect x="93.1181%" y="501" width="0.0406%" height="15" fill="rgb(241,144,13)" fg:x="103173" fg:w="45"/><text x="93.3681%" y="511.50"></text></g><g><title>___pthread_mutex_lock (45 samples, 0.04%)</title><rect x="93.1181%" y="485" width="0.0406%" height="15" fill="rgb(235,43,34)" fg:x="103173" fg:w="45"/><text x="93.3681%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (115 samples, 0.10%)</title><rect x="93.1804%" y="517" width="0.1038%" height="15" fill="rgb(208,36,20)" fg:x="103242" fg:w="115"/><text x="93.4304%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (114 samples, 0.10%)</title><rect x="93.1813%" y="501" width="0.1029%" height="15" fill="rgb(239,204,10)" fg:x="103243" fg:w="114"/><text x="93.4313%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (112 samples, 0.10%)</title><rect x="93.1831%" y="485" width="0.1011%" height="15" fill="rgb(217,84,43)" fg:x="103245" fg:w="112"/><text x="93.4331%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (112 samples, 0.10%)</title><rect x="93.1831%" y="469" width="0.1011%" height="15" fill="rgb(241,170,50)" fg:x="103245" fg:w="112"/><text x="93.4331%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (112 samples, 0.10%)</title><rect x="93.1831%" y="453" width="0.1011%" height="15" fill="rgb(226,205,29)" fg:x="103245" fg:w="112"/><text x="93.4331%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (112 samples, 0.10%)</title><rect x="93.1831%" y="437" width="0.1011%" height="15" fill="rgb(233,113,1)" fg:x="103245" fg:w="112"/><text x="93.4331%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (36 samples, 0.03%)</title><rect x="93.2842%" y="517" width="0.0325%" height="15" fill="rgb(253,98,13)" fg:x="103357" fg:w="36"/><text x="93.5342%" y="527.50"></text></g><g><title>async_executor::Sleepers::insert (168 samples, 0.15%)</title><rect x="93.1777%" y="533" width="0.1516%" height="15" fill="rgb(211,115,12)" fg:x="103239" fg:w="168"/><text x="93.4277%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.01%)</title><rect x="93.3167%" y="517" width="0.0126%" height="15" fill="rgb(208,12,16)" fg:x="103393" fg:w="14"/><text x="93.5667%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (59 samples, 0.05%)</title><rect x="93.3844%" y="517" width="0.0533%" height="15" fill="rgb(237,193,54)" fg:x="103468" fg:w="59"/><text x="93.6344%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (57 samples, 0.05%)</title><rect x="93.3862%" y="501" width="0.0514%" height="15" fill="rgb(243,22,42)" fg:x="103470" fg:w="57"/><text x="93.6362%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (54 samples, 0.05%)</title><rect x="93.3889%" y="485" width="0.0487%" height="15" fill="rgb(233,151,36)" fg:x="103473" fg:w="54"/><text x="93.6389%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (54 samples, 0.05%)</title><rect x="93.3889%" y="469" width="0.0487%" height="15" fill="rgb(237,57,45)" fg:x="103473" fg:w="54"/><text x="93.6389%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (54 samples, 0.05%)</title><rect x="93.3889%" y="453" width="0.0487%" height="15" fill="rgb(221,88,17)" fg:x="103473" fg:w="54"/><text x="93.6389%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (54 samples, 0.05%)</title><rect x="93.3889%" y="437" width="0.0487%" height="15" fill="rgb(230,79,15)" fg:x="103473" fg:w="54"/><text x="93.6389%" y="447.50"></text></g><g><title>async_executor::Sleepers::update (126 samples, 0.11%)</title><rect x="93.3320%" y="533" width="0.1137%" height="15" fill="rgb(213,57,13)" fg:x="103410" fg:w="126"/><text x="93.5820%" y="543.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (211 samples, 0.19%)</title><rect x="93.4593%" y="469" width="0.1904%" height="15" fill="rgb(222,116,39)" fg:x="103551" fg:w="211"/><text x="93.7093%" y="479.50"></text></g><g><title>__GI___lll_lock_wake (14 samples, 0.01%)</title><rect x="93.6371%" y="453" width="0.0126%" height="15" fill="rgb(245,107,2)" fg:x="103748" fg:w="14"/><text x="93.8871%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (232 samples, 0.21%)</title><rect x="93.4457%" y="533" width="0.2094%" height="15" fill="rgb(238,1,10)" fg:x="103536" fg:w="232"/><text x="93.6957%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (232 samples, 0.21%)</title><rect x="93.4457%" y="517" width="0.2094%" height="15" fill="rgb(249,4,48)" fg:x="103536" fg:w="232"/><text x="93.6957%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (222 samples, 0.20%)</title><rect x="93.4548%" y="501" width="0.2004%" height="15" fill="rgb(223,151,18)" fg:x="103546" fg:w="222"/><text x="93.7048%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (217 samples, 0.20%)</title><rect x="93.4593%" y="485" width="0.1959%" height="15" fill="rgb(227,65,43)" fg:x="103551" fg:w="217"/><text x="93.7093%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (173 samples, 0.16%)</title><rect x="93.6551%" y="533" width="0.1561%" height="15" fill="rgb(218,40,45)" fg:x="103768" fg:w="173"/><text x="93.9051%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (173 samples, 0.16%)</title><rect x="93.6551%" y="517" width="0.1561%" height="15" fill="rgb(252,121,31)" fg:x="103768" fg:w="173"/><text x="93.9051%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (100 samples, 0.09%)</title><rect x="93.8113%" y="533" width="0.0903%" height="15" fill="rgb(219,158,43)" fg:x="103941" fg:w="100"/><text x="94.0613%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_store (100 samples, 0.09%)</title><rect x="93.8113%" y="517" width="0.0903%" height="15" fill="rgb(231,162,42)" fg:x="103941" fg:w="100"/><text x="94.0613%" y="527.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="93.9015%" y="517" width="0.0153%" height="15" fill="rgb(217,179,25)" fg:x="104041" fg:w="17"/><text x="94.1515%" y="527.50"></text></g><g><title>std::sync::poison::Flag::borrow (16 samples, 0.01%)</title><rect x="93.9024%" y="501" width="0.0144%" height="15" fill="rgb(206,212,31)" fg:x="104042" fg:w="16"/><text x="94.1524%" y="511.50"></text></g><g><title>async_executor::Ticker::sleep (1,278 samples, 1.15%)</title><rect x="93.1587%" y="549" width="1.1535%" height="15" fill="rgb(235,144,12)" fg:x="103218" fg:w="1278"/><text x="93.4087%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (455 samples, 0.41%)</title><rect x="93.9015%" y="533" width="0.4107%" height="15" fill="rgb(213,51,10)" fg:x="104041" fg:w="455"/><text x="94.1515%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (438 samples, 0.40%)</title><rect x="93.9169%" y="517" width="0.3953%" height="15" fill="rgb(231,145,14)" fg:x="104058" fg:w="438"/><text x="94.1669%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (417 samples, 0.38%)</title><rect x="93.9358%" y="501" width="0.3764%" height="15" fill="rgb(235,15,28)" fg:x="104079" fg:w="417"/><text x="94.1858%" y="511.50"></text></g><g><title>___pthread_mutex_lock (417 samples, 0.38%)</title><rect x="93.9358%" y="485" width="0.3764%" height="15" fill="rgb(237,206,10)" fg:x="104079" fg:w="417"/><text x="94.1858%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (52 samples, 0.05%)</title><rect x="94.2652%" y="469" width="0.0469%" height="15" fill="rgb(236,227,27)" fg:x="104444" fg:w="52"/><text x="94.5152%" y="479.50"></text></g><g><title>async_executor::Sleepers::remove (56 samples, 0.05%)</title><rect x="94.3221%" y="533" width="0.0505%" height="15" fill="rgb(246,83,35)" fg:x="104507" fg:w="56"/><text x="94.5721%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (37 samples, 0.03%)</title><rect x="94.3392%" y="517" width="0.0334%" height="15" fill="rgb(220,136,24)" fg:x="104526" fg:w="37"/><text x="94.5892%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (37 samples, 0.03%)</title><rect x="94.3392%" y="501" width="0.0334%" height="15" fill="rgb(217,3,25)" fg:x="104526" fg:w="37"/><text x="94.5892%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="94.3392%" y="485" width="0.0334%" height="15" fill="rgb(239,24,14)" fg:x="104526" fg:w="37"/><text x="94.5892%" y="495.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (37 samples, 0.03%)</title><rect x="94.3392%" y="469" width="0.0334%" height="15" fill="rgb(244,16,53)" fg:x="104526" fg:w="37"/><text x="94.5892%" y="479.50"></text></g><g><title>core::mem::drop (36 samples, 0.03%)</title><rect x="94.3402%" y="453" width="0.0325%" height="15" fill="rgb(208,175,44)" fg:x="104527" fg:w="36"/><text x="94.5902%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (36 samples, 0.03%)</title><rect x="94.3402%" y="437" width="0.0325%" height="15" fill="rgb(252,18,48)" fg:x="104527" fg:w="36"/><text x="94.5902%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="94.3402%" y="421" width="0.0325%" height="15" fill="rgb(234,199,32)" fg:x="104527" fg:w="36"/><text x="94.5902%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (36 samples, 0.03%)</title><rect x="94.3402%" y="405" width="0.0325%" height="15" fill="rgb(225,77,54)" fg:x="104527" fg:w="36"/><text x="94.5902%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (36 samples, 0.03%)</title><rect x="94.3402%" y="389" width="0.0325%" height="15" fill="rgb(225,42,25)" fg:x="104527" fg:w="36"/><text x="94.5902%" y="399.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (40 samples, 0.04%)</title><rect x="94.3763%" y="469" width="0.0361%" height="15" fill="rgb(242,227,46)" fg:x="104567" fg:w="40"/><text x="94.6263%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (45 samples, 0.04%)</title><rect x="94.3726%" y="533" width="0.0406%" height="15" fill="rgb(246,197,35)" fg:x="104563" fg:w="45"/><text x="94.6226%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="94.3726%" y="517" width="0.0406%" height="15" fill="rgb(215,159,26)" fg:x="104563" fg:w="45"/><text x="94.6226%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (41 samples, 0.04%)</title><rect x="94.3763%" y="501" width="0.0370%" height="15" fill="rgb(212,194,50)" fg:x="104567" fg:w="41"/><text x="94.6263%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (41 samples, 0.04%)</title><rect x="94.3763%" y="485" width="0.0370%" height="15" fill="rgb(246,132,1)" fg:x="104567" fg:w="41"/><text x="94.6263%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (57 samples, 0.05%)</title><rect x="94.4133%" y="533" width="0.0514%" height="15" fill="rgb(217,71,7)" fg:x="104608" fg:w="57"/><text x="94.6633%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (57 samples, 0.05%)</title><rect x="94.4133%" y="517" width="0.0514%" height="15" fill="rgb(252,59,32)" fg:x="104608" fg:w="57"/><text x="94.6633%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (70 samples, 0.06%)</title><rect x="94.4647%" y="533" width="0.0632%" height="15" fill="rgb(253,204,25)" fg:x="104665" fg:w="70"/><text x="94.7147%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (70 samples, 0.06%)</title><rect x="94.4647%" y="517" width="0.0632%" height="15" fill="rgb(232,21,16)" fg:x="104665" fg:w="70"/><text x="94.7147%" y="527.50"></text></g><g><title>async_executor::Ticker::wake (471 samples, 0.43%)</title><rect x="94.3122%" y="549" width="0.4251%" height="15" fill="rgb(248,90,29)" fg:x="104496" fg:w="471"/><text x="94.5622%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (232 samples, 0.21%)</title><rect x="94.5279%" y="533" width="0.2094%" height="15" fill="rgb(249,223,7)" fg:x="104735" fg:w="232"/><text x="94.7779%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (224 samples, 0.20%)</title><rect x="94.5351%" y="517" width="0.2022%" height="15" fill="rgb(231,119,42)" fg:x="104743" fg:w="224"/><text x="94.7851%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (187 samples, 0.17%)</title><rect x="94.5685%" y="501" width="0.1688%" height="15" fill="rgb(215,41,35)" fg:x="104780" fg:w="187"/><text x="94.8185%" y="511.50"></text></g><g><title>___pthread_mutex_lock (187 samples, 0.17%)</title><rect x="94.5685%" y="485" width="0.1688%" height="15" fill="rgb(220,44,45)" fg:x="104780" fg:w="187"/><text x="94.8185%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (17 samples, 0.02%)</title><rect x="94.7219%" y="469" width="0.0153%" height="15" fill="rgb(253,197,36)" fg:x="104950" fg:w="17"/><text x="94.9719%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (16 samples, 0.01%)</title><rect x="94.7454%" y="485" width="0.0144%" height="15" fill="rgb(245,225,54)" fg:x="104976" fg:w="16"/><text x="94.9954%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.01%)</title><rect x="94.7454%" y="469" width="0.0144%" height="15" fill="rgb(239,94,37)" fg:x="104976" fg:w="16"/><text x="94.9954%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::notify (36 samples, 0.03%)</title><rect x="94.7445%" y="517" width="0.0325%" height="15" fill="rgb(242,217,10)" fg:x="104975" fg:w="36"/><text x="94.9945%" y="527.50"></text></g><g><title>polling::Poller::notify (36 samples, 0.03%)</title><rect x="94.7445%" y="501" width="0.0325%" height="15" fill="rgb(250,193,7)" fg:x="104975" fg:w="36"/><text x="94.9945%" y="511.50"></text></g><g><title>polling::epoll::Poller::notify (18 samples, 0.02%)</title><rect x="94.7607%" y="485" width="0.0162%" height="15" fill="rgb(230,104,19)" fg:x="104993" fg:w="18"/><text x="95.0107%" y="495.50"></text></g><g><title>__GI___write (18 samples, 0.02%)</title><rect x="94.7607%" y="469" width="0.0162%" height="15" fill="rgb(230,181,4)" fg:x="104993" fg:w="18"/><text x="95.0107%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (73 samples, 0.07%)</title><rect x="94.8059%" y="485" width="0.0659%" height="15" fill="rgb(216,219,49)" fg:x="105043" fg:w="73"/><text x="95.0559%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (73 samples, 0.07%)</title><rect x="94.8059%" y="469" width="0.0659%" height="15" fill="rgb(254,144,0)" fg:x="105043" fg:w="73"/><text x="95.0559%" y="479.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (119 samples, 0.11%)</title><rect x="94.8717%" y="485" width="0.1074%" height="15" fill="rgb(205,209,38)" fg:x="105116" fg:w="119"/><text x="95.1217%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (119 samples, 0.11%)</title><rect x="94.8717%" y="469" width="0.1074%" height="15" fill="rgb(240,21,42)" fg:x="105116" fg:w="119"/><text x="95.1217%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (119 samples, 0.11%)</title><rect x="94.8717%" y="453" width="0.1074%" height="15" fill="rgb(241,132,3)" fg:x="105116" fg:w="119"/><text x="95.1217%" y="463.50"></text></g><g><title>__GI___pthread_cond_signal (119 samples, 0.11%)</title><rect x="94.8717%" y="437" width="0.1074%" height="15" fill="rgb(225,14,2)" fg:x="105116" fg:w="119"/><text x="95.1217%" y="447.50"></text></g><g><title>parking::Inner::unpark (287 samples, 0.26%)</title><rect x="94.7950%" y="501" width="0.2590%" height="15" fill="rgb(210,141,35)" fg:x="105031" fg:w="287"/><text x="95.0450%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (83 samples, 0.07%)</title><rect x="94.9792%" y="485" width="0.0749%" height="15" fill="rgb(251,14,44)" fg:x="105235" fg:w="83"/><text x="95.2292%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (81 samples, 0.07%)</title><rect x="94.9810%" y="469" width="0.0731%" height="15" fill="rgb(247,48,18)" fg:x="105237" fg:w="81"/><text x="95.2310%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (81 samples, 0.07%)</title><rect x="94.9810%" y="453" width="0.0731%" height="15" fill="rgb(225,0,40)" fg:x="105237" fg:w="81"/><text x="95.2310%" y="463.50"></text></g><g><title>___pthread_mutex_lock (81 samples, 0.07%)</title><rect x="94.9810%" y="437" width="0.0731%" height="15" fill="rgb(221,31,33)" fg:x="105237" fg:w="81"/><text x="95.2310%" y="447.50"></text></g><g><title>parking::Unparker::unpark (302 samples, 0.27%)</title><rect x="94.7833%" y="517" width="0.2726%" height="15" fill="rgb(237,42,40)" fg:x="105018" fg:w="302"/><text x="95.0333%" y="527.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (357 samples, 0.32%)</title><rect x="94.7409%" y="533" width="0.3222%" height="15" fill="rgb(233,51,29)" fg:x="104971" fg:w="357"/><text x="94.9909%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,956 samples, 6.28%)</title><rect x="88.8491%" y="613" width="6.2781%" height="15" fill="rgb(226,58,20)" fg:x="98443" fg:w="6956"/><text x="89.0991%" y="623.50">&lt;core::f..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (6,951 samples, 6.27%)</title><rect x="88.8536%" y="597" width="6.2736%" height="15" fill="rgb(208,98,7)" fg:x="98448" fg:w="6951"/><text x="89.1036%" y="607.50">async_ex..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (6,944 samples, 6.27%)</title><rect x="88.8599%" y="581" width="6.2673%" height="15" fill="rgb(228,143,44)" fg:x="98455" fg:w="6944"/><text x="89.1099%" y="591.50">&lt;futures..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (6,938 samples, 6.26%)</title><rect x="88.8653%" y="565" width="6.2618%" height="15" fill="rgb(246,55,38)" fg:x="98461" fg:w="6938"/><text x="89.1153%" y="575.50">async_ex..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (429 samples, 0.39%)</title><rect x="94.7400%" y="549" width="0.3872%" height="15" fill="rgb(247,87,16)" fg:x="104970" fg:w="429"/><text x="94.9900%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (71 samples, 0.06%)</title><rect x="95.0631%" y="533" width="0.0641%" height="15" fill="rgb(234,129,42)" fg:x="105328" fg:w="71"/><text x="95.3131%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.06%)</title><rect x="95.0631%" y="517" width="0.0641%" height="15" fill="rgb(220,82,16)" fg:x="105328" fg:w="71"/><text x="95.3131%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (69 samples, 0.06%)</title><rect x="95.0649%" y="501" width="0.0623%" height="15" fill="rgb(211,88,4)" fg:x="105330" fg:w="69"/><text x="95.3149%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (69 samples, 0.06%)</title><rect x="95.0649%" y="485" width="0.0623%" height="15" fill="rgb(248,151,21)" fg:x="105330" fg:w="69"/><text x="95.3149%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,034 samples, 6.35%)</title><rect x="88.8256%" y="645" width="6.3485%" height="15" fill="rgb(238,163,6)" fg:x="98417" fg:w="7034"/><text x="89.0756%" y="655.50">&lt;core::f..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (7,030 samples, 6.34%)</title><rect x="88.8292%" y="629" width="6.3449%" height="15" fill="rgb(209,183,11)" fg:x="98421" fg:w="7030"/><text x="89.0792%" y="639.50">async_ex..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (52 samples, 0.05%)</title><rect x="95.1272%" y="613" width="0.0469%" height="15" fill="rgb(219,37,20)" fg:x="105399" fg:w="52"/><text x="95.3772%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (52 samples, 0.05%)</title><rect x="95.1272%" y="597" width="0.0469%" height="15" fill="rgb(210,158,4)" fg:x="105399" fg:w="52"/><text x="95.3772%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (59 samples, 0.05%)</title><rect x="95.2851%" y="517" width="0.0533%" height="15" fill="rgb(221,167,53)" fg:x="105574" fg:w="59"/><text x="95.5351%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (56 samples, 0.05%)</title><rect x="95.2878%" y="501" width="0.0505%" height="15" fill="rgb(237,151,45)" fg:x="105577" fg:w="56"/><text x="95.5378%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (36 samples, 0.03%)</title><rect x="95.3384%" y="501" width="0.0325%" height="15" fill="rgb(231,39,3)" fg:x="105633" fg:w="36"/><text x="95.5884%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (49 samples, 0.04%)</title><rect x="95.3384%" y="517" width="0.0442%" height="15" fill="rgb(212,167,28)" fg:x="105633" fg:w="49"/><text x="95.5884%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (170 samples, 0.15%)</title><rect x="95.2301%" y="597" width="0.1534%" height="15" fill="rgb(232,178,8)" fg:x="105513" fg:w="170"/><text x="95.4801%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (162 samples, 0.15%)</title><rect x="95.2373%" y="581" width="0.1462%" height="15" fill="rgb(225,151,20)" fg:x="105521" fg:w="162"/><text x="95.4873%" y="591.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (119 samples, 0.11%)</title><rect x="95.2761%" y="565" width="0.1074%" height="15" fill="rgb(238,3,37)" fg:x="105564" fg:w="119"/><text x="95.5261%" y="575.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (119 samples, 0.11%)</title><rect x="95.2761%" y="549" width="0.1074%" height="15" fill="rgb(251,147,42)" fg:x="105564" fg:w="119"/><text x="95.5261%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (116 samples, 0.10%)</title><rect x="95.2788%" y="533" width="0.1047%" height="15" fill="rgb(208,173,10)" fg:x="105567" fg:w="116"/><text x="95.5288%" y="543.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (173 samples, 0.16%)</title><rect x="95.2301%" y="613" width="0.1561%" height="15" fill="rgb(246,225,4)" fg:x="105513" fg:w="173"/><text x="95.4801%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (34 samples, 0.03%)</title><rect x="95.3862%" y="613" width="0.0307%" height="15" fill="rgb(248,102,6)" fg:x="105686" fg:w="34"/><text x="95.6362%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (33 samples, 0.03%)</title><rect x="95.3871%" y="597" width="0.0298%" height="15" fill="rgb(232,6,21)" fg:x="105687" fg:w="33"/><text x="95.6371%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (33 samples, 0.03%)</title><rect x="95.3871%" y="581" width="0.0298%" height="15" fill="rgb(221,179,22)" fg:x="105687" fg:w="33"/><text x="95.6371%" y="591.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (22 samples, 0.02%)</title><rect x="95.4187%" y="597" width="0.0199%" height="15" fill="rgb(252,50,20)" fg:x="105722" fg:w="22"/><text x="95.6687%" y="607.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (20 samples, 0.02%)</title><rect x="95.4404%" y="581" width="0.0181%" height="15" fill="rgb(222,56,38)" fg:x="105746" fg:w="20"/><text x="95.6904%" y="591.50"></text></g><g><title>parking::Unparker::unpark (15 samples, 0.01%)</title><rect x="95.4449%" y="565" width="0.0135%" height="15" fill="rgb(206,193,29)" fg:x="105751" fg:w="15"/><text x="95.6949%" y="575.50"></text></g><g><title>parking::Inner::unpark (14 samples, 0.01%)</title><rect x="95.4458%" y="549" width="0.0126%" height="15" fill="rgb(239,192,45)" fg:x="105752" fg:w="14"/><text x="95.6958%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (48 samples, 0.04%)</title><rect x="95.4187%" y="613" width="0.0433%" height="15" fill="rgb(254,18,36)" fg:x="105722" fg:w="48"/><text x="95.6687%" y="623.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (24 samples, 0.02%)</title><rect x="95.4404%" y="597" width="0.0217%" height="15" fill="rgb(221,127,11)" fg:x="105746" fg:w="24"/><text x="95.6904%" y="607.50"></text></g><g><title>async_task::runnable::Runnable::run (522 samples, 0.47%)</title><rect x="95.1750%" y="645" width="0.4711%" height="15" fill="rgb(234,146,35)" fg:x="105452" fg:w="522"/><text x="95.4250%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (507 samples, 0.46%)</title><rect x="95.1885%" y="629" width="0.4576%" height="15" fill="rgb(254,201,37)" fg:x="105467" fg:w="507"/><text x="95.4385%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (204 samples, 0.18%)</title><rect x="95.4620%" y="613" width="0.1841%" height="15" fill="rgb(211,202,23)" fg:x="105770" fg:w="204"/><text x="95.7120%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (204 samples, 0.18%)</title><rect x="95.4620%" y="597" width="0.1841%" height="15" fill="rgb(237,91,2)" fg:x="105770" fg:w="204"/><text x="95.7120%" y="607.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (7,575 samples, 6.84%)</title><rect x="88.8175%" y="709" width="6.8368%" height="15" fill="rgb(226,228,36)" fg:x="98408" fg:w="7575"/><text x="89.0675%" y="719.50">async_exe..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (7,573 samples, 6.83%)</title><rect x="88.8193%" y="693" width="6.8350%" height="15" fill="rgb(213,63,50)" fg:x="98410" fg:w="7573"/><text x="89.0693%" y="703.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,573 samples, 6.83%)</title><rect x="88.8193%" y="677" width="6.8350%" height="15" fill="rgb(235,194,19)" fg:x="98410" fg:w="7573"/><text x="89.0693%" y="687.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (7,571 samples, 6.83%)</title><rect x="88.8211%" y="661" width="6.8332%" height="15" fill="rgb(207,204,18)" fg:x="98412" fg:w="7571"/><text x="89.0711%" y="671.50">async_exe..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.02%)</title><rect x="95.7445%" y="453" width="0.0171%" height="15" fill="rgb(248,8,7)" fg:x="106083" fg:w="19"/><text x="95.9945%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.02%)</title><rect x="95.7445%" y="437" width="0.0171%" height="15" fill="rgb(223,145,47)" fg:x="106083" fg:w="19"/><text x="95.9945%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.02%)</title><rect x="95.7454%" y="421" width="0.0162%" height="15" fill="rgb(228,84,11)" fg:x="106084" fg:w="18"/><text x="95.9954%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14 samples, 0.01%)</title><rect x="95.7490%" y="405" width="0.0126%" height="15" fill="rgb(218,76,45)" fg:x="106088" fg:w="14"/><text x="95.9990%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (14 samples, 0.01%)</title><rect x="95.7490%" y="389" width="0.0126%" height="15" fill="rgb(223,80,15)" fg:x="106088" fg:w="14"/><text x="95.9990%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (12 samples, 0.01%)</title><rect x="95.7508%" y="373" width="0.0108%" height="15" fill="rgb(219,218,33)" fg:x="106090" fg:w="12"/><text x="96.0008%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.01%)</title><rect x="95.7508%" y="357" width="0.0108%" height="15" fill="rgb(208,51,11)" fg:x="106090" fg:w="12"/><text x="96.0008%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="95.7436%" y="501" width="0.0217%" height="15" fill="rgb(229,165,39)" fg:x="106082" fg:w="24"/><text x="95.9936%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (24 samples, 0.02%)</title><rect x="95.7436%" y="485" width="0.0217%" height="15" fill="rgb(241,100,24)" fg:x="106082" fg:w="24"/><text x="95.9936%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.02%)</title><rect x="95.7436%" y="469" width="0.0217%" height="15" fill="rgb(228,14,23)" fg:x="106082" fg:w="24"/><text x="95.9936%" y="479.50"></text></g><g><title>concurrent_queue::full_fence (44 samples, 0.04%)</title><rect x="95.8302%" y="469" width="0.0397%" height="15" fill="rgb(247,116,52)" fg:x="106178" fg:w="44"/><text x="96.0802%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (44 samples, 0.04%)</title><rect x="95.8302%" y="453" width="0.0397%" height="15" fill="rgb(216,149,33)" fg:x="106178" fg:w="44"/><text x="96.0802%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (44 samples, 0.04%)</title><rect x="95.8302%" y="437" width="0.0397%" height="15" fill="rgb(238,142,29)" fg:x="106178" fg:w="44"/><text x="96.0802%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (44 samples, 0.04%)</title><rect x="95.8302%" y="421" width="0.0397%" height="15" fill="rgb(224,83,40)" fg:x="106178" fg:w="44"/><text x="96.0802%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (176 samples, 0.16%)</title><rect x="95.7987%" y="485" width="0.1588%" height="15" fill="rgb(234,165,11)" fg:x="106143" fg:w="176"/><text x="96.0487%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (97 samples, 0.09%)</title><rect x="95.8700%" y="469" width="0.0875%" height="15" fill="rgb(215,96,23)" fg:x="106222" fg:w="97"/><text x="96.1200%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (97 samples, 0.09%)</title><rect x="95.8700%" y="453" width="0.0875%" height="15" fill="rgb(233,179,26)" fg:x="106222" fg:w="97"/><text x="96.1200%" y="463.50"></text></g><g><title>concurrent_queue::full_fence (44 samples, 0.04%)</title><rect x="95.9620%" y="469" width="0.0397%" height="15" fill="rgb(225,129,33)" fg:x="106324" fg:w="44"/><text x="96.2120%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (41 samples, 0.04%)</title><rect x="95.9647%" y="453" width="0.0370%" height="15" fill="rgb(237,49,13)" fg:x="106327" fg:w="41"/><text x="96.2147%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (41 samples, 0.04%)</title><rect x="95.9647%" y="437" width="0.0370%" height="15" fill="rgb(211,3,31)" fg:x="106327" fg:w="41"/><text x="96.2147%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (41 samples, 0.04%)</title><rect x="95.9647%" y="421" width="0.0370%" height="15" fill="rgb(216,152,19)" fg:x="106327" fg:w="41"/><text x="96.2147%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (284 samples, 0.26%)</title><rect x="95.7662%" y="501" width="0.2563%" height="15" fill="rgb(251,121,35)" fg:x="106107" fg:w="284"/><text x="96.0162%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (72 samples, 0.06%)</title><rect x="95.9575%" y="485" width="0.0650%" height="15" fill="rgb(210,217,47)" fg:x="106319" fg:w="72"/><text x="96.2075%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.02%)</title><rect x="96.0062%" y="469" width="0.0162%" height="15" fill="rgb(244,116,22)" fg:x="106373" fg:w="18"/><text x="96.2562%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.02%)</title><rect x="96.0062%" y="453" width="0.0162%" height="15" fill="rgb(228,17,21)" fg:x="106373" fg:w="18"/><text x="96.2562%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (35 samples, 0.03%)</title><rect x="96.0252%" y="437" width="0.0316%" height="15" fill="rgb(240,149,34)" fg:x="106394" fg:w="35"/><text x="96.2752%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (35 samples, 0.03%)</title><rect x="96.0252%" y="421" width="0.0316%" height="15" fill="rgb(208,125,47)" fg:x="106394" fg:w="35"/><text x="96.2752%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (90 samples, 0.08%)</title><rect x="96.0225%" y="501" width="0.0812%" height="15" fill="rgb(249,186,39)" fg:x="106391" fg:w="90"/><text x="96.2725%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (90 samples, 0.08%)</title><rect x="96.0225%" y="485" width="0.0812%" height="15" fill="rgb(240,220,33)" fg:x="106391" fg:w="90"/><text x="96.2725%" y="495.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (90 samples, 0.08%)</title><rect x="96.0225%" y="469" width="0.0812%" height="15" fill="rgb(243,110,23)" fg:x="106391" fg:w="90"/><text x="96.2725%" y="479.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (90 samples, 0.08%)</title><rect x="96.0225%" y="453" width="0.0812%" height="15" fill="rgb(219,163,46)" fg:x="106391" fg:w="90"/><text x="96.2725%" y="463.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (52 samples, 0.05%)</title><rect x="96.0568%" y="437" width="0.0469%" height="15" fill="rgb(216,126,30)" fg:x="106429" fg:w="52"/><text x="96.3068%" y="447.50"></text></g><g><title>___pthread_rwlock_unlock (52 samples, 0.05%)</title><rect x="96.0568%" y="421" width="0.0469%" height="15" fill="rgb(208,139,11)" fg:x="106429" fg:w="52"/><text x="96.3068%" y="431.50"></text></g><g><title>fastrand::usize (22 samples, 0.02%)</title><rect x="96.1037%" y="501" width="0.0199%" height="15" fill="rgb(213,118,36)" fg:x="106481" fg:w="22"/><text x="96.3537%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.02%)</title><rect x="96.1037%" y="485" width="0.0199%" height="15" fill="rgb(226,43,17)" fg:x="106481" fg:w="22"/><text x="96.3537%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.02%)</title><rect x="96.1037%" y="469" width="0.0199%" height="15" fill="rgb(254,217,4)" fg:x="106481" fg:w="22"/><text x="96.3537%" y="479.50"></text></g><g><title>___pthread_rwlock_rdlock (46 samples, 0.04%)</title><rect x="96.1299%" y="453" width="0.0415%" height="15" fill="rgb(210,134,47)" fg:x="106510" fg:w="46"/><text x="96.3799%" y="463.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (513 samples, 0.46%)</title><rect x="95.7391%" y="517" width="0.4630%" height="15" fill="rgb(237,24,49)" fg:x="106077" fg:w="513"/><text x="95.9891%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (87 samples, 0.08%)</title><rect x="96.1236%" y="501" width="0.0785%" height="15" fill="rgb(251,39,46)" fg:x="106503" fg:w="87"/><text x="96.3736%" y="511.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (84 samples, 0.08%)</title><rect x="96.1263%" y="485" width="0.0758%" height="15" fill="rgb(251,220,3)" fg:x="106506" fg:w="84"/><text x="96.3763%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (84 samples, 0.08%)</title><rect x="96.1263%" y="469" width="0.0758%" height="15" fill="rgb(228,105,12)" fg:x="106506" fg:w="84"/><text x="96.3763%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (34 samples, 0.03%)</title><rect x="96.1714%" y="453" width="0.0307%" height="15" fill="rgb(215,196,1)" fg:x="106556" fg:w="34"/><text x="96.4214%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (34 samples, 0.03%)</title><rect x="96.1714%" y="437" width="0.0307%" height="15" fill="rgb(214,33,39)" fg:x="106556" fg:w="34"/><text x="96.4214%" y="447.50"></text></g><g><title>async_executor::Sleepers::update (13 samples, 0.01%)</title><rect x="96.2021%" y="501" width="0.0117%" height="15" fill="rgb(220,19,52)" fg:x="106590" fg:w="13"/><text x="96.4521%" y="511.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (57 samples, 0.05%)</title><rect x="96.2192%" y="437" width="0.0514%" height="15" fill="rgb(221,78,38)" fg:x="106609" fg:w="57"/><text x="96.4692%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (66 samples, 0.06%)</title><rect x="96.2138%" y="501" width="0.0596%" height="15" fill="rgb(253,30,16)" fg:x="106603" fg:w="66"/><text x="96.4638%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.06%)</title><rect x="96.2138%" y="485" width="0.0596%" height="15" fill="rgb(242,65,0)" fg:x="106603" fg:w="66"/><text x="96.4638%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (64 samples, 0.06%)</title><rect x="96.2156%" y="469" width="0.0578%" height="15" fill="rgb(235,201,12)" fg:x="106605" fg:w="64"/><text x="96.4656%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (60 samples, 0.05%)</title><rect x="96.2192%" y="453" width="0.0542%" height="15" fill="rgb(233,161,9)" fg:x="106609" fg:w="60"/><text x="96.4692%" y="463.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (703 samples, 0.63%)</title><rect x="95.7039%" y="629" width="0.6345%" height="15" fill="rgb(241,207,41)" fg:x="106038" fg:w="703"/><text x="95.9539%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (694 samples, 0.63%)</title><rect x="95.7120%" y="613" width="0.6264%" height="15" fill="rgb(212,69,46)" fg:x="106047" fg:w="694"/><text x="95.9620%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (690 samples, 0.62%)</title><rect x="95.7156%" y="597" width="0.6228%" height="15" fill="rgb(239,69,45)" fg:x="106051" fg:w="690"/><text x="95.9656%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (683 samples, 0.62%)</title><rect x="95.7219%" y="581" width="0.6164%" height="15" fill="rgb(242,117,48)" fg:x="106058" fg:w="683"/><text x="95.9719%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (679 samples, 0.61%)</title><rect x="95.7256%" y="565" width="0.6128%" height="15" fill="rgb(228,41,36)" fg:x="106062" fg:w="679"/><text x="95.9756%" y="575.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (677 samples, 0.61%)</title><rect x="95.7274%" y="549" width="0.6110%" height="15" fill="rgb(212,3,32)" fg:x="106064" fg:w="677"/><text x="95.9774%" y="559.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (669 samples, 0.60%)</title><rect x="95.7346%" y="533" width="0.6038%" height="15" fill="rgb(233,41,49)" fg:x="106072" fg:w="669"/><text x="95.9846%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (151 samples, 0.14%)</title><rect x="96.2021%" y="517" width="0.1363%" height="15" fill="rgb(252,170,49)" fg:x="106590" fg:w="151"/><text x="96.4521%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (72 samples, 0.06%)</title><rect x="96.2734%" y="501" width="0.0650%" height="15" fill="rgb(229,53,26)" fg:x="106669" fg:w="72"/><text x="96.5234%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (69 samples, 0.06%)</title><rect x="96.2761%" y="485" width="0.0623%" height="15" fill="rgb(217,157,12)" fg:x="106672" fg:w="69"/><text x="96.5261%" y="495.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (69 samples, 0.06%)</title><rect x="96.2761%" y="469" width="0.0623%" height="15" fill="rgb(227,17,9)" fg:x="106672" fg:w="69"/><text x="96.5261%" y="479.50"></text></g><g><title>___pthread_mutex_lock (69 samples, 0.06%)</title><rect x="96.2761%" y="453" width="0.0623%" height="15" fill="rgb(218,84,12)" fg:x="106672" fg:w="69"/><text x="96.5261%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (38 samples, 0.03%)</title><rect x="96.4007%" y="565" width="0.0343%" height="15" fill="rgb(212,79,24)" fg:x="106810" fg:w="38"/><text x="96.6507%" y="575.50"></text></g><g><title>core::mem::replace (38 samples, 0.03%)</title><rect x="96.4007%" y="549" width="0.0343%" height="15" fill="rgb(217,222,37)" fg:x="106810" fg:w="38"/><text x="96.6507%" y="559.50"></text></g><g><title>core::ptr::read (37 samples, 0.03%)</title><rect x="96.4016%" y="533" width="0.0334%" height="15" fill="rgb(246,208,8)" fg:x="106811" fg:w="37"/><text x="96.6516%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (60 samples, 0.05%)</title><rect x="96.3880%" y="581" width="0.0542%" height="15" fill="rgb(244,133,10)" fg:x="106796" fg:w="60"/><text x="96.6380%" y="591.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (44 samples, 0.04%)</title><rect x="96.4485%" y="501" width="0.0397%" height="15" fill="rgb(209,219,41)" fg:x="106863" fg:w="44"/><text x="96.6985%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (53 samples, 0.05%)</title><rect x="96.4422%" y="581" width="0.0478%" height="15" fill="rgb(253,175,45)" fg:x="106856" fg:w="53"/><text x="96.6922%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (51 samples, 0.05%)</title><rect x="96.4440%" y="565" width="0.0460%" height="15" fill="rgb(235,100,37)" fg:x="106858" fg:w="51"/><text x="96.6940%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="96.4440%" y="549" width="0.0460%" height="15" fill="rgb(225,87,19)" fg:x="106858" fg:w="51"/><text x="96.6940%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (46 samples, 0.04%)</title><rect x="96.4485%" y="533" width="0.0415%" height="15" fill="rgb(217,152,17)" fg:x="106863" fg:w="46"/><text x="96.6985%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (46 samples, 0.04%)</title><rect x="96.4485%" y="517" width="0.0415%" height="15" fill="rgb(235,72,13)" fg:x="106863" fg:w="46"/><text x="96.6985%" y="527.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (314 samples, 0.28%)</title><rect x="96.3664%" y="597" width="0.2834%" height="15" fill="rgb(233,140,18)" fg:x="106772" fg:w="314"/><text x="96.6164%" y="607.50"></text></g><g><title>event_listener::Inner::lock (168 samples, 0.15%)</title><rect x="96.4981%" y="581" width="0.1516%" height="15" fill="rgb(207,212,28)" fg:x="106918" fg:w="168"/><text x="96.7481%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (162 samples, 0.15%)</title><rect x="96.5035%" y="565" width="0.1462%" height="15" fill="rgb(220,130,25)" fg:x="106924" fg:w="162"/><text x="96.7535%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (161 samples, 0.15%)</title><rect x="96.5044%" y="549" width="0.1453%" height="15" fill="rgb(205,55,34)" fg:x="106925" fg:w="161"/><text x="96.7544%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (142 samples, 0.13%)</title><rect x="96.5216%" y="533" width="0.1282%" height="15" fill="rgb(237,54,35)" fg:x="106944" fg:w="142"/><text x="96.7716%" y="543.50"></text></g><g><title>___pthread_mutex_lock (142 samples, 0.13%)</title><rect x="96.5216%" y="517" width="0.1282%" height="15" fill="rgb(208,67,23)" fg:x="106944" fg:w="142"/><text x="96.7716%" y="527.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (105 samples, 0.09%)</title><rect x="96.6498%" y="597" width="0.0948%" height="15" fill="rgb(206,207,50)" fg:x="107086" fg:w="105"/><text x="96.8998%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (104 samples, 0.09%)</title><rect x="96.6507%" y="581" width="0.0939%" height="15" fill="rgb(213,211,42)" fg:x="107087" fg:w="104"/><text x="96.9007%" y="591.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (72 samples, 0.06%)</title><rect x="96.6795%" y="565" width="0.0650%" height="15" fill="rgb(252,197,50)" fg:x="107119" fg:w="72"/><text x="96.9295%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (71 samples, 0.06%)</title><rect x="96.6804%" y="549" width="0.0641%" height="15" fill="rgb(251,211,41)" fg:x="107120" fg:w="71"/><text x="96.9304%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (71 samples, 0.06%)</title><rect x="96.6804%" y="533" width="0.0641%" height="15" fill="rgb(229,211,5)" fg:x="107120" fg:w="71"/><text x="96.9304%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (71 samples, 0.06%)</title><rect x="96.6804%" y="517" width="0.0641%" height="15" fill="rgb(239,36,31)" fg:x="107120" fg:w="71"/><text x="96.9304%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,160 samples, 1.05%)</title><rect x="95.6985%" y="645" width="1.0470%" height="15" fill="rgb(248,67,31)" fg:x="106032" fg:w="1160"/><text x="95.9485%" y="655.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (451 samples, 0.41%)</title><rect x="96.3384%" y="629" width="0.4070%" height="15" fill="rgb(249,55,44)" fg:x="106741" fg:w="451"/><text x="96.5884%" y="639.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (434 samples, 0.39%)</title><rect x="96.3537%" y="613" width="0.3917%" height="15" fill="rgb(216,82,12)" fg:x="106758" fg:w="434"/><text x="96.6037%" y="623.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,164 samples, 1.05%)</title><rect x="95.6958%" y="661" width="1.0506%" height="15" fill="rgb(242,174,1)" fg:x="106029" fg:w="1164"/><text x="95.9458%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,798 samples, 7.94%)</title><rect x="88.8112%" y="725" width="7.9406%" height="15" fill="rgb(208,120,29)" fg:x="98401" fg:w="8798"/><text x="89.0612%" y="735.50">&lt;core::futu..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,216 samples, 1.10%)</title><rect x="95.6543%" y="709" width="1.0975%" height="15" fill="rgb(221,105,43)" fg:x="105983" fg:w="1216"/><text x="95.9043%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,176 samples, 1.06%)</title><rect x="95.6904%" y="693" width="1.0614%" height="15" fill="rgb(234,124,22)" fg:x="106023" fg:w="1176"/><text x="95.9404%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,172 samples, 1.06%)</title><rect x="95.6940%" y="677" width="1.0578%" height="15" fill="rgb(212,23,30)" fg:x="106027" fg:w="1172"/><text x="95.9440%" y="687.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,807 samples, 7.95%)</title><rect x="88.8039%" y="741" width="7.9487%" height="15" fill="rgb(219,122,53)" fg:x="98393" fg:w="8807"/><text x="89.0539%" y="751.50">&lt;futures_li..</text></g><g><title>async_io::reactor::Reactor::get (12 samples, 0.01%)</title><rect x="96.7526%" y="741" width="0.0108%" height="15" fill="rgb(248,84,24)" fg:x="107200" fg:w="12"/><text x="97.0026%" y="751.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.01%)</title><rect x="96.7526%" y="725" width="0.0108%" height="15" fill="rgb(245,115,18)" fg:x="107200" fg:w="12"/><text x="97.0026%" y="735.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (12 samples, 0.01%)</title><rect x="96.7526%" y="709" width="0.0108%" height="15" fill="rgb(227,176,51)" fg:x="107200" fg:w="12"/><text x="97.0026%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (12 samples, 0.01%)</title><rect x="96.7526%" y="693" width="0.0108%" height="15" fill="rgb(229,63,42)" fg:x="107200" fg:w="12"/><text x="97.0026%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (12 samples, 0.01%)</title><rect x="96.7526%" y="677" width="0.0108%" height="15" fill="rgb(247,202,24)" fg:x="107200" fg:w="12"/><text x="97.0026%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (202 samples, 0.18%)</title><rect x="96.7635%" y="741" width="0.1823%" height="15" fill="rgb(244,173,20)" fg:x="107212" fg:w="202"/><text x="97.0135%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (202 samples, 0.18%)</title><rect x="96.7635%" y="725" width="0.1823%" height="15" fill="rgb(242,81,47)" fg:x="107212" fg:w="202"/><text x="97.0135%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (200 samples, 0.18%)</title><rect x="96.7653%" y="709" width="0.1805%" height="15" fill="rgb(231,185,54)" fg:x="107214" fg:w="200"/><text x="97.0153%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (192 samples, 0.17%)</title><rect x="96.7725%" y="693" width="0.1733%" height="15" fill="rgb(243,55,32)" fg:x="107222" fg:w="192"/><text x="97.0225%" y="703.50"></text></g><g><title>__GI___pthread_mutex_trylock (192 samples, 0.17%)</title><rect x="96.7725%" y="677" width="0.1733%" height="15" fill="rgb(208,167,19)" fg:x="107222" fg:w="192"/><text x="97.0225%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (40 samples, 0.04%)</title><rect x="97.0018%" y="549" width="0.0361%" height="15" fill="rgb(231,72,35)" fg:x="107476" fg:w="40"/><text x="97.2518%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (36 samples, 0.03%)</title><rect x="97.0054%" y="533" width="0.0325%" height="15" fill="rgb(250,173,51)" fg:x="107480" fg:w="36"/><text x="97.2554%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (36 samples, 0.03%)</title><rect x="97.0054%" y="517" width="0.0325%" height="15" fill="rgb(209,5,22)" fg:x="107480" fg:w="36"/><text x="97.2554%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (36 samples, 0.03%)</title><rect x="97.0054%" y="501" width="0.0325%" height="15" fill="rgb(250,174,19)" fg:x="107480" fg:w="36"/><text x="97.2554%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (36 samples, 0.03%)</title><rect x="97.0054%" y="485" width="0.0325%" height="15" fill="rgb(217,3,49)" fg:x="107480" fg:w="36"/><text x="97.2554%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="97.0252%" y="469" width="0.0126%" height="15" fill="rgb(218,225,5)" fg:x="107502" fg:w="14"/><text x="97.2752%" y="479.50"></text></g><g><title>rust_dealloc (44 samples, 0.04%)</title><rect x="96.9990%" y="565" width="0.0397%" height="15" fill="rgb(236,89,11)" fg:x="107473" fg:w="44"/><text x="97.2490%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (55 samples, 0.05%)</title><rect x="96.9927%" y="661" width="0.0496%" height="15" fill="rgb(206,33,28)" fg:x="107466" fg:w="55"/><text x="97.2427%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (54 samples, 0.05%)</title><rect x="96.9936%" y="645" width="0.0487%" height="15" fill="rgb(241,56,42)" fg:x="107467" fg:w="54"/><text x="97.2436%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (52 samples, 0.05%)</title><rect x="96.9954%" y="629" width="0.0469%" height="15" fill="rgb(222,44,11)" fg:x="107469" fg:w="52"/><text x="97.2454%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (52 samples, 0.05%)</title><rect x="96.9954%" y="613" width="0.0469%" height="15" fill="rgb(234,111,20)" fg:x="107469" fg:w="52"/><text x="97.2454%" y="623.50"></text></g><g><title>__rg_dealloc (52 samples, 0.05%)</title><rect x="96.9954%" y="597" width="0.0469%" height="15" fill="rgb(237,77,6)" fg:x="107469" fg:w="52"/><text x="97.2454%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (50 samples, 0.05%)</title><rect x="96.9972%" y="581" width="0.0451%" height="15" fill="rgb(235,111,23)" fg:x="107471" fg:w="50"/><text x="97.2472%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.06%)</title><rect x="96.9909%" y="709" width="0.0551%" height="15" fill="rgb(251,135,29)" fg:x="107464" fg:w="61"/><text x="97.2409%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (59 samples, 0.05%)</title><rect x="96.9927%" y="693" width="0.0533%" height="15" fill="rgb(217,57,1)" fg:x="107466" fg:w="59"/><text x="97.2427%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (59 samples, 0.05%)</title><rect x="96.9927%" y="677" width="0.0533%" height="15" fill="rgb(249,119,31)" fg:x="107466" fg:w="59"/><text x="97.2427%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="97.0460%" y="709" width="0.0171%" height="15" fill="rgb(233,164,33)" fg:x="107525" fg:w="19"/><text x="97.2960%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="97.0460%" y="693" width="0.0171%" height="15" fill="rgb(250,217,43)" fg:x="107525" fg:w="19"/><text x="97.2960%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (17 samples, 0.02%)</title><rect x="97.0478%" y="677" width="0.0153%" height="15" fill="rgb(232,154,50)" fg:x="107527" fg:w="17"/><text x="97.2978%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (17 samples, 0.02%)</title><rect x="97.0776%" y="677" width="0.0153%" height="15" fill="rgb(227,190,8)" fg:x="107560" fg:w="17"/><text x="97.3276%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (18 samples, 0.02%)</title><rect x="97.0938%" y="677" width="0.0162%" height="15" fill="rgb(209,217,32)" fg:x="107578" fg:w="18"/><text x="97.3438%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (18 samples, 0.02%)</title><rect x="97.0938%" y="661" width="0.0162%" height="15" fill="rgb(243,203,50)" fg:x="107578" fg:w="18"/><text x="97.3438%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (20 samples, 0.02%)</title><rect x="97.1191%" y="357" width="0.0181%" height="15" fill="rgb(232,152,27)" fg:x="107606" fg:w="20"/><text x="97.3691%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (20 samples, 0.02%)</title><rect x="97.1191%" y="341" width="0.0181%" height="15" fill="rgb(240,34,29)" fg:x="107606" fg:w="20"/><text x="97.3691%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (18 samples, 0.02%)</title><rect x="97.1209%" y="325" width="0.0162%" height="15" fill="rgb(215,185,52)" fg:x="107608" fg:w="18"/><text x="97.3709%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (29 samples, 0.03%)</title><rect x="97.1191%" y="373" width="0.0262%" height="15" fill="rgb(240,89,49)" fg:x="107606" fg:w="29"/><text x="97.3691%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (41 samples, 0.04%)</title><rect x="97.1155%" y="389" width="0.0370%" height="15" fill="rgb(225,12,52)" fg:x="107602" fg:w="41"/><text x="97.3655%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (20 samples, 0.02%)</title><rect x="97.1633%" y="373" width="0.0181%" height="15" fill="rgb(239,128,45)" fg:x="107655" fg:w="20"/><text x="97.4133%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (249 samples, 0.22%)</title><rect x="97.1155%" y="421" width="0.2247%" height="15" fill="rgb(211,78,47)" fg:x="107602" fg:w="249"/><text x="97.3655%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (249 samples, 0.22%)</title><rect x="97.1155%" y="405" width="0.2247%" height="15" fill="rgb(232,31,21)" fg:x="107602" fg:w="249"/><text x="97.3655%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (208 samples, 0.19%)</title><rect x="97.1525%" y="389" width="0.1877%" height="15" fill="rgb(222,168,14)" fg:x="107643" fg:w="208"/><text x="97.4025%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (176 samples, 0.16%)</title><rect x="97.1814%" y="373" width="0.1588%" height="15" fill="rgb(209,128,24)" fg:x="107675" fg:w="176"/><text x="97.4314%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (176 samples, 0.16%)</title><rect x="97.1814%" y="357" width="0.1588%" height="15" fill="rgb(249,35,13)" fg:x="107675" fg:w="176"/><text x="97.4314%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (176 samples, 0.16%)</title><rect x="97.1814%" y="341" width="0.1588%" height="15" fill="rgb(218,7,2)" fg:x="107675" fg:w="176"/><text x="97.4314%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (16 samples, 0.01%)</title><rect x="97.3501%" y="421" width="0.0144%" height="15" fill="rgb(238,107,27)" fg:x="107862" fg:w="16"/><text x="97.6001%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (16 samples, 0.01%)</title><rect x="97.3501%" y="405" width="0.0144%" height="15" fill="rgb(217,88,38)" fg:x="107862" fg:w="16"/><text x="97.6001%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (350 samples, 0.32%)</title><rect x="97.1110%" y="469" width="0.3159%" height="15" fill="rgb(230,207,0)" fg:x="107597" fg:w="350"/><text x="97.3610%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (350 samples, 0.32%)</title><rect x="97.1110%" y="453" width="0.3159%" height="15" fill="rgb(249,64,54)" fg:x="107597" fg:w="350"/><text x="97.3610%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (349 samples, 0.31%)</title><rect x="97.1119%" y="437" width="0.3150%" height="15" fill="rgb(231,7,11)" fg:x="107598" fg:w="349"/><text x="97.3619%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (69 samples, 0.06%)</title><rect x="97.3646%" y="421" width="0.0623%" height="15" fill="rgb(205,149,21)" fg:x="107878" fg:w="69"/><text x="97.6146%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (69 samples, 0.06%)</title><rect x="97.3646%" y="405" width="0.0623%" height="15" fill="rgb(215,126,34)" fg:x="107878" fg:w="69"/><text x="97.6146%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (354 samples, 0.32%)</title><rect x="97.1101%" y="613" width="0.3195%" height="15" fill="rgb(241,132,45)" fg:x="107596" fg:w="354"/><text x="97.3601%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (354 samples, 0.32%)</title><rect x="97.1101%" y="597" width="0.3195%" height="15" fill="rgb(252,69,32)" fg:x="107596" fg:w="354"/><text x="97.3601%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (354 samples, 0.32%)</title><rect x="97.1101%" y="581" width="0.3195%" height="15" fill="rgb(232,204,19)" fg:x="107596" fg:w="354"/><text x="97.3601%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (354 samples, 0.32%)</title><rect x="97.1101%" y="565" width="0.3195%" height="15" fill="rgb(249,15,47)" fg:x="107596" fg:w="354"/><text x="97.3601%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (354 samples, 0.32%)</title><rect x="97.1101%" y="549" width="0.3195%" height="15" fill="rgb(209,227,23)" fg:x="107596" fg:w="354"/><text x="97.3601%" y="559.50"></text></g><g><title>alloc::alloc::alloc (354 samples, 0.32%)</title><rect x="97.1101%" y="533" width="0.3195%" height="15" fill="rgb(248,92,24)" fg:x="107596" fg:w="354"/><text x="97.3601%" y="543.50"></text></g><g><title>__rg_alloc (354 samples, 0.32%)</title><rect x="97.1101%" y="517" width="0.3195%" height="15" fill="rgb(247,59,2)" fg:x="107596" fg:w="354"/><text x="97.3601%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (354 samples, 0.32%)</title><rect x="97.1101%" y="501" width="0.3195%" height="15" fill="rgb(221,30,5)" fg:x="107596" fg:w="354"/><text x="97.3601%" y="511.50"></text></g><g><title>rust_alloc (354 samples, 0.32%)</title><rect x="97.1101%" y="485" width="0.3195%" height="15" fill="rgb(208,108,53)" fg:x="107596" fg:w="354"/><text x="97.3601%" y="495.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (355 samples, 0.32%)</title><rect x="97.1101%" y="677" width="0.3204%" height="15" fill="rgb(211,183,26)" fg:x="107596" fg:w="355"/><text x="97.3601%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (355 samples, 0.32%)</title><rect x="97.1101%" y="661" width="0.3204%" height="15" fill="rgb(232,132,4)" fg:x="107596" fg:w="355"/><text x="97.3601%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (355 samples, 0.32%)</title><rect x="97.1101%" y="645" width="0.3204%" height="15" fill="rgb(253,128,37)" fg:x="107596" fg:w="355"/><text x="97.3601%" y="655.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (355 samples, 0.32%)</title><rect x="97.1101%" y="629" width="0.3204%" height="15" fill="rgb(221,58,24)" fg:x="107596" fg:w="355"/><text x="97.3601%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (408 samples, 0.37%)</title><rect x="97.0640%" y="709" width="0.3682%" height="15" fill="rgb(230,54,45)" fg:x="107545" fg:w="408"/><text x="97.3140%" y="719.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (401 samples, 0.36%)</title><rect x="97.0703%" y="693" width="0.3619%" height="15" fill="rgb(254,21,18)" fg:x="107552" fg:w="401"/><text x="97.3203%" y="703.50"></text></g><g><title>concurrent_queue::full_fence (30 samples, 0.03%)</title><rect x="97.4620%" y="661" width="0.0271%" height="15" fill="rgb(221,108,0)" fg:x="107986" fg:w="30"/><text x="97.7120%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (29 samples, 0.03%)</title><rect x="97.4630%" y="645" width="0.0262%" height="15" fill="rgb(206,95,1)" fg:x="107987" fg:w="29"/><text x="97.7130%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (29 samples, 0.03%)</title><rect x="97.4630%" y="629" width="0.0262%" height="15" fill="rgb(237,52,5)" fg:x="107987" fg:w="29"/><text x="97.7130%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (29 samples, 0.03%)</title><rect x="97.4630%" y="613" width="0.0262%" height="15" fill="rgb(218,150,34)" fg:x="107987" fg:w="29"/><text x="97.7130%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (68 samples, 0.06%)</title><rect x="97.4431%" y="693" width="0.0614%" height="15" fill="rgb(235,194,28)" fg:x="107965" fg:w="68"/><text x="97.6931%" y="703.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (59 samples, 0.05%)</title><rect x="97.4512%" y="677" width="0.0533%" height="15" fill="rgb(245,92,18)" fg:x="107974" fg:w="59"/><text x="97.7012%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17 samples, 0.02%)</title><rect x="97.4891%" y="661" width="0.0153%" height="15" fill="rgb(253,203,53)" fg:x="108016" fg:w="17"/><text x="97.7391%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.02%)</title><rect x="97.4891%" y="645" width="0.0153%" height="15" fill="rgb(249,185,47)" fg:x="108016" fg:w="17"/><text x="97.7391%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (81 samples, 0.07%)</title><rect x="97.4323%" y="709" width="0.0731%" height="15" fill="rgb(252,194,52)" fg:x="107953" fg:w="81"/><text x="97.6823%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (86 samples, 0.08%)</title><rect x="97.5090%" y="629" width="0.0776%" height="15" fill="rgb(210,53,36)" fg:x="108038" fg:w="86"/><text x="97.7590%" y="639.50"></text></g><g><title>core::mem::drop (91 samples, 0.08%)</title><rect x="97.5054%" y="709" width="0.0821%" height="15" fill="rgb(237,37,25)" fg:x="108034" fg:w="91"/><text x="97.7554%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (91 samples, 0.08%)</title><rect x="97.5054%" y="693" width="0.0821%" height="15" fill="rgb(242,116,27)" fg:x="108034" fg:w="91"/><text x="97.7554%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 0.08%)</title><rect x="97.5054%" y="677" width="0.0821%" height="15" fill="rgb(213,185,26)" fg:x="108034" fg:w="91"/><text x="97.7554%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (91 samples, 0.08%)</title><rect x="97.5054%" y="661" width="0.0821%" height="15" fill="rgb(225,204,8)" fg:x="108034" fg:w="91"/><text x="97.7554%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (87 samples, 0.08%)</title><rect x="97.5090%" y="645" width="0.0785%" height="15" fill="rgb(254,111,37)" fg:x="108038" fg:w="87"/><text x="97.7590%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.01%)</title><rect x="97.5920%" y="709" width="0.0135%" height="15" fill="rgb(242,35,9)" fg:x="108130" fg:w="15"/><text x="97.8420%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::process_timers::{{closure}} (14 samples, 0.01%)</title><rect x="97.5929%" y="693" width="0.0126%" height="15" fill="rgb(232,138,49)" fg:x="108131" fg:w="14"/><text x="97.8429%" y="703.50"></text></g><g><title>std::time::Instant::saturating_duration_since (14 samples, 0.01%)</title><rect x="97.5929%" y="677" width="0.0126%" height="15" fill="rgb(247,56,4)" fg:x="108131" fg:w="14"/><text x="97.8429%" y="687.50"></text></g><g><title>std::time::Instant::checked_duration_since (14 samples, 0.01%)</title><rect x="97.5929%" y="661" width="0.0126%" height="15" fill="rgb(226,179,17)" fg:x="108131" fg:w="14"/><text x="97.8429%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (14 samples, 0.01%)</title><rect x="97.5929%" y="645" width="0.0126%" height="15" fill="rgb(216,163,45)" fg:x="108131" fg:w="14"/><text x="97.8429%" y="655.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="97.6074%" y="709" width="0.0208%" height="15" fill="rgb(211,157,3)" fg:x="108147" fg:w="23"/><text x="97.8574%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (23 samples, 0.02%)</title><rect x="97.6074%" y="693" width="0.0208%" height="15" fill="rgb(234,44,20)" fg:x="108147" fg:w="23"/><text x="97.8574%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (23 samples, 0.02%)</title><rect x="97.6074%" y="677" width="0.0208%" height="15" fill="rgb(254,138,23)" fg:x="108147" fg:w="23"/><text x="97.8574%" y="687.50"></text></g><g><title>___pthread_mutex_lock (23 samples, 0.02%)</title><rect x="97.6074%" y="661" width="0.0208%" height="15" fill="rgb(206,119,39)" fg:x="108147" fg:w="23"/><text x="97.8574%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (798 samples, 0.72%)</title><rect x="96.9729%" y="725" width="0.7202%" height="15" fill="rgb(231,105,52)" fg:x="107444" fg:w="798"/><text x="97.2229%" y="735.50"></text></g><g><title>std::time::Instant::now (72 samples, 0.06%)</title><rect x="97.6281%" y="709" width="0.0650%" height="15" fill="rgb(250,20,5)" fg:x="108170" fg:w="72"/><text x="97.8781%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (72 samples, 0.06%)</title><rect x="97.6281%" y="693" width="0.0650%" height="15" fill="rgb(215,198,30)" fg:x="108170" fg:w="72"/><text x="97.8781%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::now (72 samples, 0.06%)</title><rect x="97.6281%" y="677" width="0.0650%" height="15" fill="rgb(246,142,8)" fg:x="108170" fg:w="72"/><text x="97.8781%" y="687.50"></text></g><g><title>__clock_gettime_2 (69 samples, 0.06%)</title><rect x="97.6308%" y="661" width="0.0623%" height="15" fill="rgb(243,26,38)" fg:x="108173" fg:w="69"/><text x="97.8808%" y="671.50"></text></g><g><title>__vdso_clock_gettime (61 samples, 0.06%)</title><rect x="97.6380%" y="645" width="0.0551%" height="15" fill="rgb(205,133,28)" fg:x="108181" fg:w="61"/><text x="97.8880%" y="655.50"></text></g><g><title>[[vdso]] (42 samples, 0.04%)</title><rect x="97.6552%" y="629" width="0.0379%" height="15" fill="rgb(212,34,0)" fg:x="108200" fg:w="42"/><text x="97.9052%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.02%)</title><rect x="97.6994%" y="725" width="0.0226%" height="15" fill="rgb(251,226,22)" fg:x="108249" fg:w="25"/><text x="97.9494%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.02%)</title><rect x="97.6994%" y="709" width="0.0226%" height="15" fill="rgb(252,119,9)" fg:x="108249" fg:w="25"/><text x="97.9494%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (56 samples, 0.05%)</title><rect x="97.7436%" y="645" width="0.0505%" height="15" fill="rgb(213,150,50)" fg:x="108298" fg:w="56"/><text x="97.9936%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (64 samples, 0.06%)</title><rect x="97.7400%" y="709" width="0.0578%" height="15" fill="rgb(212,24,39)" fg:x="108294" fg:w="64"/><text x="97.9900%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.06%)</title><rect x="97.7400%" y="693" width="0.0578%" height="15" fill="rgb(213,46,39)" fg:x="108294" fg:w="64"/><text x="97.9900%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (61 samples, 0.06%)</title><rect x="97.7427%" y="677" width="0.0551%" height="15" fill="rgb(239,106,12)" fg:x="108297" fg:w="61"/><text x="97.9927%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (60 samples, 0.05%)</title><rect x="97.7436%" y="661" width="0.0542%" height="15" fill="rgb(249,229,21)" fg:x="108298" fg:w="60"/><text x="97.9936%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (50 samples, 0.05%)</title><rect x="97.7978%" y="709" width="0.0451%" height="15" fill="rgb(212,158,3)" fg:x="108358" fg:w="50"/><text x="98.0478%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (50 samples, 0.05%)</title><rect x="97.7978%" y="693" width="0.0451%" height="15" fill="rgb(253,26,48)" fg:x="108358" fg:w="50"/><text x="98.0478%" y="703.50"></text></g><g><title>__libc_read (64 samples, 0.06%)</title><rect x="97.8799%" y="693" width="0.0578%" height="15" fill="rgb(238,178,20)" fg:x="108449" fg:w="64"/><text x="98.1299%" y="703.50"></text></g><g><title>epoll_wait (85 samples, 0.08%)</title><rect x="97.9377%" y="693" width="0.0767%" height="15" fill="rgb(208,86,15)" fg:x="108513" fg:w="85"/><text x="98.1877%" y="703.50"></text></g><g><title>__GI_epoll_ctl (63 samples, 0.06%)</title><rect x="98.0297%" y="661" width="0.0569%" height="15" fill="rgb(239,42,53)" fg:x="108615" fg:w="63"/><text x="98.2797%" y="671.50"></text></g><g><title>polling::epoll::Poller::ctl (71 samples, 0.06%)</title><rect x="98.0261%" y="677" width="0.0641%" height="15" fill="rgb(245,226,8)" fg:x="108611" fg:w="71"/><text x="98.2761%" y="687.50"></text></g><g><title>polling::epoll::Poller::modify (83 samples, 0.07%)</title><rect x="98.0189%" y="693" width="0.0749%" height="15" fill="rgb(216,176,32)" fg:x="108603" fg:w="83"/><text x="98.2689%" y="703.50"></text></g><g><title>polling::epoll::Poller::wait (306 samples, 0.28%)</title><rect x="97.8456%" y="709" width="0.2762%" height="15" fill="rgb(231,186,21)" fg:x="108411" fg:w="306"/><text x="98.0956%" y="719.50"></text></g><g><title>syscall (30 samples, 0.03%)</title><rect x="98.0947%" y="693" width="0.0271%" height="15" fill="rgb(205,95,49)" fg:x="108687" fg:w="30"/><text x="98.3447%" y="703.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,347 samples, 1.22%)</title><rect x="96.9458%" y="741" width="1.2157%" height="15" fill="rgb(217,145,8)" fg:x="107414" fg:w="1347"/><text x="97.1958%" y="751.50"></text></g><g><title>polling::Poller::wait (487 samples, 0.44%)</title><rect x="97.7220%" y="725" width="0.4395%" height="15" fill="rgb(239,144,48)" fg:x="108274" fg:w="487"/><text x="97.9720%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (44 samples, 0.04%)</title><rect x="98.1218%" y="709" width="0.0397%" height="15" fill="rgb(214,189,23)" fg:x="108717" fg:w="44"/><text x="98.3718%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (43 samples, 0.04%)</title><rect x="98.1227%" y="693" width="0.0388%" height="15" fill="rgb(229,157,17)" fg:x="108718" fg:w="43"/><text x="98.3727%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (41 samples, 0.04%)</title><rect x="98.1245%" y="677" width="0.0370%" height="15" fill="rgb(230,5,48)" fg:x="108720" fg:w="41"/><text x="98.3745%" y="687.50"></text></g><g><title>__GI___pthread_mutex_trylock (41 samples, 0.04%)</title><rect x="98.1245%" y="661" width="0.0370%" height="15" fill="rgb(224,156,48)" fg:x="108720" fg:w="41"/><text x="98.3745%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (22 samples, 0.02%)</title><rect x="98.1615%" y="693" width="0.0199%" height="15" fill="rgb(223,14,29)" fg:x="108761" fg:w="22"/><text x="98.4115%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_store (22 samples, 0.02%)</title><rect x="98.1615%" y="677" width="0.0199%" height="15" fill="rgb(229,96,36)" fg:x="108761" fg:w="22"/><text x="98.4115%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (24 samples, 0.02%)</title><rect x="98.1615%" y="741" width="0.0217%" height="15" fill="rgb(231,102,53)" fg:x="108761" fg:w="24"/><text x="98.4115%" y="751.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="98.1615%" y="725" width="0.0217%" height="15" fill="rgb(210,77,38)" fg:x="108761" fg:w="24"/><text x="98.4115%" y="735.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (24 samples, 0.02%)</title><rect x="98.1615%" y="709" width="0.0217%" height="15" fill="rgb(235,131,6)" fg:x="108761" fg:w="24"/><text x="98.4115%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::reactor::ReactorLock&gt; (19 samples, 0.02%)</title><rect x="98.1832%" y="741" width="0.0171%" height="15" fill="rgb(252,55,38)" fg:x="108785" fg:w="19"/><text x="98.4332%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;polling::Event&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="98.1832%" y="725" width="0.0171%" height="15" fill="rgb(246,38,14)" fg:x="108785" fg:w="19"/><text x="98.4332%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="98.1832%" y="709" width="0.0171%" height="15" fill="rgb(242,27,5)" fg:x="108785" fg:w="19"/><text x="98.4332%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (18 samples, 0.02%)</title><rect x="98.1841%" y="693" width="0.0162%" height="15" fill="rgb(228,65,35)" fg:x="108786" fg:w="18"/><text x="98.4341%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (17 samples, 0.02%)</title><rect x="98.1850%" y="677" width="0.0153%" height="15" fill="rgb(245,93,11)" fg:x="108787" fg:w="17"/><text x="98.4350%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (17 samples, 0.02%)</title><rect x="98.1850%" y="661" width="0.0153%" height="15" fill="rgb(213,1,31)" fg:x="108787" fg:w="17"/><text x="98.4350%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (14 samples, 0.01%)</title><rect x="98.2039%" y="741" width="0.0126%" height="15" fill="rgb(237,205,14)" fg:x="108808" fg:w="14"/><text x="98.4539%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_store (14 samples, 0.01%)</title><rect x="98.2039%" y="725" width="0.0126%" height="15" fill="rgb(232,118,45)" fg:x="108808" fg:w="14"/><text x="98.4539%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (64 samples, 0.06%)</title><rect x="98.2319%" y="709" width="0.0578%" height="15" fill="rgb(218,5,6)" fg:x="108839" fg:w="64"/><text x="98.4819%" y="719.50"></text></g><g><title>__GI___lll_lock_wake (31 samples, 0.03%)</title><rect x="98.2617%" y="693" width="0.0280%" height="15" fill="rgb(251,87,51)" fg:x="108872" fg:w="31"/><text x="98.5117%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (81 samples, 0.07%)</title><rect x="98.2969%" y="709" width="0.0731%" height="15" fill="rgb(207,225,20)" fg:x="108911" fg:w="81"/><text x="98.5469%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (81 samples, 0.07%)</title><rect x="98.2969%" y="693" width="0.0731%" height="15" fill="rgb(222,78,54)" fg:x="108911" fg:w="81"/><text x="98.5469%" y="703.50"></text></g><g><title>std::sync::poison::Flag::get (12 samples, 0.01%)</title><rect x="98.3700%" y="693" width="0.0108%" height="15" fill="rgb(232,85,16)" fg:x="108992" fg:w="12"/><text x="98.6200%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (12 samples, 0.01%)</title><rect x="98.3700%" y="677" width="0.0108%" height="15" fill="rgb(244,25,33)" fg:x="108992" fg:w="12"/><text x="98.6200%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (20 samples, 0.02%)</title><rect x="98.5000%" y="645" width="0.0181%" height="15" fill="rgb(233,24,36)" fg:x="109136" fg:w="20"/><text x="98.7500%" y="655.50"></text></g><g><title>__condvar_confirm_wakeup (31 samples, 0.03%)</title><rect x="98.5180%" y="645" width="0.0280%" height="15" fill="rgb(253,49,54)" fg:x="109156" fg:w="31"/><text x="98.7680%" y="655.50"></text></g><g><title>__condvar_dec_grefs (156 samples, 0.14%)</title><rect x="98.5460%" y="645" width="0.1408%" height="15" fill="rgb(245,12,22)" fg:x="109187" fg:w="156"/><text x="98.7960%" y="655.50"></text></g><g><title>__GI___pthread_disable_asynccancel (24 samples, 0.02%)</title><rect x="98.8781%" y="629" width="0.0217%" height="15" fill="rgb(253,141,28)" fg:x="109555" fg:w="24"/><text x="99.1281%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common (244 samples, 0.22%)</title><rect x="98.6868%" y="645" width="0.2202%" height="15" fill="rgb(225,207,27)" fg:x="109343" fg:w="244"/><text x="98.9368%" y="655.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (616 samples, 0.56%)</title><rect x="98.3808%" y="677" width="0.5560%" height="15" fill="rgb(220,84,2)" fg:x="109004" fg:w="616"/><text x="98.6308%" y="687.50"></text></g><g><title>__GI___pthread_cond_wait (616 samples, 0.56%)</title><rect x="98.3808%" y="661" width="0.5560%" height="15" fill="rgb(224,37,37)" fg:x="109004" fg:w="616"/><text x="98.6308%" y="671.50"></text></g><g><title>__pthread_mutex_cond_lock (22 samples, 0.02%)</title><rect x="98.9169%" y="645" width="0.0199%" height="15" fill="rgb(220,143,18)" fg:x="109598" fg:w="22"/><text x="99.1669%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::wait (650 samples, 0.59%)</title><rect x="98.3700%" y="709" width="0.5867%" height="15" fill="rgb(210,88,33)" fg:x="108992" fg:w="650"/><text x="98.6200%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (638 samples, 0.58%)</title><rect x="98.3808%" y="693" width="0.5758%" height="15" fill="rgb(219,87,51)" fg:x="109004" fg:w="638"/><text x="98.6308%" y="703.50"></text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (22 samples, 0.02%)</title><rect x="98.9368%" y="677" width="0.0199%" height="15" fill="rgb(211,7,35)" fg:x="109620" fg:w="22"/><text x="99.1868%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (20 samples, 0.02%)</title><rect x="98.9386%" y="661" width="0.0181%" height="15" fill="rgb(232,77,2)" fg:x="109622" fg:w="20"/><text x="99.1886%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.02%)</title><rect x="98.9386%" y="645" width="0.0181%" height="15" fill="rgb(249,94,25)" fg:x="109622" fg:w="20"/><text x="99.1886%" y="655.50"></text></g><g><title>parking::Parker::park (844 samples, 0.76%)</title><rect x="98.2229%" y="741" width="0.7617%" height="15" fill="rgb(215,112,2)" fg:x="108829" fg:w="844"/><text x="98.4729%" y="751.50"></text></g><g><title>parking::Inner::park (844 samples, 0.76%)</title><rect x="98.2229%" y="725" width="0.7617%" height="15" fill="rgb(226,115,48)" fg:x="108829" fg:w="844"/><text x="98.4729%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 0.03%)</title><rect x="98.9567%" y="709" width="0.0280%" height="15" fill="rgb(249,196,10)" fg:x="109642" fg:w="31"/><text x="99.2067%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (31 samples, 0.03%)</title><rect x="98.9567%" y="693" width="0.0280%" height="15" fill="rgb(237,109,14)" fg:x="109642" fg:w="31"/><text x="99.2067%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (31 samples, 0.03%)</title><rect x="98.9567%" y="677" width="0.0280%" height="15" fill="rgb(217,103,53)" fg:x="109642" fg:w="31"/><text x="99.2067%" y="687.50"></text></g><g><title>___pthread_mutex_lock (31 samples, 0.03%)</title><rect x="98.9567%" y="661" width="0.0280%" height="15" fill="rgb(244,137,9)" fg:x="109642" fg:w="31"/><text x="99.2067%" y="671.50"></text></g><g><title>parking::Parker::park_timeout (189 samples, 0.17%)</title><rect x="98.9846%" y="741" width="0.1706%" height="15" fill="rgb(227,201,3)" fg:x="109673" fg:w="189"/><text x="99.2346%" y="751.50"></text></g><g><title>parking::Inner::park (181 samples, 0.16%)</title><rect x="98.9919%" y="725" width="0.1634%" height="15" fill="rgb(243,94,6)" fg:x="109681" fg:w="181"/><text x="99.2419%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (164 samples, 0.15%)</title><rect x="99.0072%" y="709" width="0.1480%" height="15" fill="rgb(235,118,5)" fg:x="109698" fg:w="164"/><text x="99.2572%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (164 samples, 0.15%)</title><rect x="99.0072%" y="693" width="0.1480%" height="15" fill="rgb(247,10,30)" fg:x="109698" fg:w="164"/><text x="99.2572%" y="703.50"></text></g><g><title>parking::pair (13 samples, 0.01%)</title><rect x="99.1552%" y="741" width="0.0117%" height="15" fill="rgb(205,26,28)" fg:x="109862" fg:w="13"/><text x="99.4052%" y="751.50"></text></g><g><title>parking::Parker::new (13 samples, 0.01%)</title><rect x="99.1552%" y="725" width="0.0117%" height="15" fill="rgb(206,99,35)" fg:x="109862" fg:w="13"/><text x="99.4052%" y="735.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (11,538 samples, 10.41%)</title><rect x="88.7832%" y="773" width="10.4135%" height="15" fill="rgb(238,130,40)" fg:x="98370" fg:w="11538"/><text x="89.0332%" y="783.50">async_global_ex..</text></g><g><title>async_io::driver::block_on (11,538 samples, 10.41%)</title><rect x="88.7832%" y="757" width="10.4135%" height="15" fill="rgb(224,126,31)" fg:x="98370" fg:w="11538"/><text x="89.0332%" y="767.50">async_io::drive..</text></g><g><title>std::time::Instant::now (33 samples, 0.03%)</title><rect x="99.1670%" y="741" width="0.0298%" height="15" fill="rgb(254,105,17)" fg:x="109875" fg:w="33"/><text x="99.4170%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (33 samples, 0.03%)</title><rect x="99.1670%" y="725" width="0.0298%" height="15" fill="rgb(216,87,36)" fg:x="109875" fg:w="33"/><text x="99.4170%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (33 samples, 0.03%)</title><rect x="99.1670%" y="709" width="0.0298%" height="15" fill="rgb(240,21,12)" fg:x="109875" fg:w="33"/><text x="99.4170%" y="719.50"></text></g><g><title>__clock_gettime_2 (28 samples, 0.03%)</title><rect x="99.1715%" y="693" width="0.0253%" height="15" fill="rgb(245,192,34)" fg:x="109880" fg:w="28"/><text x="99.4215%" y="703.50"></text></g><g><title>__vdso_clock_gettime (26 samples, 0.02%)</title><rect x="99.1733%" y="677" width="0.0235%" height="15" fill="rgb(226,100,49)" fg:x="109882" fg:w="26"/><text x="99.4233%" y="687.50"></text></g><g><title>[[vdso]] (18 samples, 0.02%)</title><rect x="99.1805%" y="661" width="0.0162%" height="15" fill="rgb(245,188,27)" fg:x="109890" fg:w="18"/><text x="99.4305%" y="671.50"></text></g><g><title>std::panic::catch_unwind (11,543 samples, 10.42%)</title><rect x="88.7832%" y="901" width="10.4181%" height="15" fill="rgb(212,170,8)" fg:x="98370" fg:w="11543"/><text x="89.0332%" y="911.50">std::panic::cat..</text></g><g><title>std::panicking::try (11,543 samples, 10.42%)</title><rect x="88.7832%" y="885" width="10.4181%" height="15" fill="rgb(217,113,29)" fg:x="98370" fg:w="11543"/><text x="89.0332%" y="895.50">std::panicking:..</text></g><g><title>std::panicking::try::do_call (11,543 samples, 10.42%)</title><rect x="88.7832%" y="869" width="10.4181%" height="15" fill="rgb(237,30,3)" fg:x="98370" fg:w="11543"/><text x="89.0332%" y="879.50">std::panicking:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (11,543 samples, 10.42%)</title><rect x="88.7832%" y="853" width="10.4181%" height="15" fill="rgb(227,19,28)" fg:x="98370" fg:w="11543"/><text x="89.0332%" y="863.50">async_global_ex..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,543 samples, 10.42%)</title><rect x="88.7832%" y="837" width="10.4181%" height="15" fill="rgb(239,172,45)" fg:x="98370" fg:w="11543"/><text x="89.0332%" y="847.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,543 samples, 10.42%)</title><rect x="88.7832%" y="821" width="10.4181%" height="15" fill="rgb(254,55,39)" fg:x="98370" fg:w="11543"/><text x="89.0332%" y="831.50">std::thread::lo..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (11,543 samples, 10.42%)</title><rect x="88.7832%" y="805" width="10.4181%" height="15" fill="rgb(249,208,12)" fg:x="98370" fg:w="11543"/><text x="89.0332%" y="815.50">async_global_ex..</text></g><g><title>async_global_executor::reactor::block_on (11,543 samples, 10.42%)</title><rect x="88.7832%" y="789" width="10.4181%" height="15" fill="rgb(240,52,13)" fg:x="98370" fg:w="11543"/><text x="89.0332%" y="799.50">async_global_ex..</text></g><g><title>std::panic::catch_unwind (11,580 samples, 10.45%)</title><rect x="88.7507%" y="1029" width="10.4515%" height="15" fill="rgb(252,149,13)" fg:x="98334" fg:w="11580"/><text x="89.0007%" y="1039.50">std::panic::cat..</text></g><g><title>std::panicking::try (11,580 samples, 10.45%)</title><rect x="88.7507%" y="1013" width="10.4515%" height="15" fill="rgb(232,81,48)" fg:x="98334" fg:w="11580"/><text x="89.0007%" y="1023.50">std::panicking:..</text></g><g><title>std::panicking::try::do_call (11,580 samples, 10.45%)</title><rect x="88.7507%" y="997" width="10.4515%" height="15" fill="rgb(222,144,2)" fg:x="98334" fg:w="11580"/><text x="89.0007%" y="1007.50">std::panicking:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11,580 samples, 10.45%)</title><rect x="88.7507%" y="981" width="10.4515%" height="15" fill="rgb(216,81,32)" fg:x="98334" fg:w="11580"/><text x="89.0007%" y="991.50">&lt;core::panic::u..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (11,580 samples, 10.45%)</title><rect x="88.7507%" y="965" width="10.4515%" height="15" fill="rgb(244,78,51)" fg:x="98334" fg:w="11580"/><text x="89.0007%" y="975.50">std::thread::Bu..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11,580 samples, 10.45%)</title><rect x="88.7507%" y="949" width="10.4515%" height="15" fill="rgb(217,66,21)" fg:x="98334" fg:w="11580"/><text x="89.0007%" y="959.50">std::sys_common..</text></g><g><title>core::ops::function::FnOnce::call_once (11,580 samples, 10.45%)</title><rect x="88.7507%" y="933" width="10.4515%" height="15" fill="rgb(247,101,42)" fg:x="98334" fg:w="11580"/><text x="89.0007%" y="943.50">core::ops::func..</text></g><g><title>async_global_executor::threading::thread_main_loop (11,580 samples, 10.45%)</title><rect x="88.7507%" y="917" width="10.4515%" height="15" fill="rgb(227,81,39)" fg:x="98334" fg:w="11580"/><text x="89.0007%" y="927.50">async_global_ex..</text></g><g><title>__GI___clone (11,597 samples, 10.47%)</title><rect x="88.7417%" y="1141" width="10.4668%" height="15" fill="rgb(220,223,44)" fg:x="98324" fg:w="11597"/><text x="88.9917%" y="1151.50">__GI___clone</text></g><g><title>start_thread (11,587 samples, 10.46%)</title><rect x="88.7507%" y="1125" width="10.4578%" height="15" fill="rgb(205,218,2)" fg:x="98334" fg:w="11587"/><text x="89.0007%" y="1135.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (11,587 samples, 10.46%)</title><rect x="88.7507%" y="1109" width="10.4578%" height="15" fill="rgb(212,207,28)" fg:x="98334" fg:w="11587"/><text x="89.0007%" y="1119.50">std::sys::unix:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11,587 samples, 10.46%)</title><rect x="88.7507%" y="1093" width="10.4578%" height="15" fill="rgb(224,12,41)" fg:x="98334" fg:w="11587"/><text x="89.0007%" y="1103.50">&lt;alloc::boxed::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11,587 samples, 10.46%)</title><rect x="88.7507%" y="1077" width="10.4578%" height="15" fill="rgb(216,118,12)" fg:x="98334" fg:w="11587"/><text x="89.0007%" y="1087.50">&lt;alloc::boxed::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (11,587 samples, 10.46%)</title><rect x="88.7507%" y="1061" width="10.4578%" height="15" fill="rgb(252,97,46)" fg:x="98334" fg:w="11587"/><text x="89.0007%" y="1071.50">core::ops::func..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (11,587 samples, 10.46%)</title><rect x="88.7507%" y="1045" width="10.4578%" height="15" fill="rgb(244,206,19)" fg:x="98334" fg:w="11587"/><text x="89.0007%" y="1055.50">std::thread::Bu..</text></g><g><title>__memcpy_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="99.2247%" y="1141" width="0.0108%" height="15" fill="rgb(231,84,31)" fg:x="109939" fg:w="12"/><text x="99.4747%" y="1151.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (15 samples, 0.01%)</title><rect x="99.2410%" y="1125" width="0.0135%" height="15" fill="rgb(244,133,0)" fg:x="109957" fg:w="15"/><text x="99.4910%" y="1135.50"></text></g><g><title>abi_stable::globals::GLOBALS (27 samples, 0.02%)</title><rect x="99.2410%" y="1141" width="0.0244%" height="15" fill="rgb(223,15,50)" fg:x="109957" fg:w="27"/><text x="99.4910%" y="1151.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (12 samples, 0.01%)</title><rect x="99.2545%" y="1125" width="0.0108%" height="15" fill="rgb(250,118,49)" fg:x="109972" fg:w="12"/><text x="99.5045%" y="1135.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (14 samples, 0.01%)</title><rect x="99.2653%" y="1141" width="0.0126%" height="15" fill="rgb(248,25,38)" fg:x="109984" fg:w="14"/><text x="99.5153%" y="1151.50"></text></g><g><title>anon.15bd0fe339b87353facb7fa6054e91c4.35.llvm.17255142514906886635 (18 samples, 0.02%)</title><rect x="99.2843%" y="1141" width="0.0162%" height="15" fill="rgb(215,70,14)" fg:x="110005" fg:w="18"/><text x="99.5343%" y="1151.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (17 samples, 0.02%)</title><rect x="99.2852%" y="1125" width="0.0153%" height="15" fill="rgb(215,28,15)" fg:x="110006" fg:w="17"/><text x="99.5352%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="99.3005%" y="1125" width="0.0153%" height="15" fill="rgb(243,6,28)" fg:x="110023" fg:w="17"/><text x="99.5505%" y="1135.50"></text></g><g><title>anon.15bd0fe339b87353facb7fa6054e91c4.39.llvm.17255142514906886635 (32 samples, 0.03%)</title><rect x="99.3005%" y="1141" width="0.0289%" height="15" fill="rgb(222,130,1)" fg:x="110023" fg:w="32"/><text x="99.5505%" y="1151.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="99.3168%" y="1125" width="0.0126%" height="15" fill="rgb(236,166,44)" fg:x="110041" fg:w="14"/><text x="99.5668%" y="1135.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (27 samples, 0.02%)</title><rect x="99.3294%" y="1125" width="0.0244%" height="15" fill="rgb(221,108,14)" fg:x="110055" fg:w="27"/><text x="99.5794%" y="1135.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="99.3538%" y="1125" width="0.0199%" height="15" fill="rgb(252,3,45)" fg:x="110082" fg:w="22"/><text x="99.6038%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (29 samples, 0.03%)</title><rect x="99.3736%" y="1125" width="0.0262%" height="15" fill="rgb(237,68,30)" fg:x="110104" fg:w="29"/><text x="99.6236%" y="1135.50"></text></g><g><title>anon.3e072c7a2ec79f78eaac3a2352ad9487.30.llvm.7980048246584792993 (82 samples, 0.07%)</title><rect x="99.3294%" y="1141" width="0.0740%" height="15" fill="rgb(211,79,22)" fg:x="110055" fg:w="82"/><text x="99.5794%" y="1151.50"></text></g><g><title>anon.443be95476efe27dbcc9706629bb0f90.140.llvm.3148280617290107537 (14 samples, 0.01%)</title><rect x="99.4034%" y="1141" width="0.0126%" height="15" fill="rgb(252,185,21)" fg:x="110137" fg:w="14"/><text x="99.6534%" y="1151.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (14 samples, 0.01%)</title><rect x="99.4034%" y="1125" width="0.0126%" height="15" fill="rgb(225,189,26)" fg:x="110137" fg:w="14"/><text x="99.6534%" y="1135.50"></text></g><g><title>anon.443be95476efe27dbcc9706629bb0f90.154.llvm.3148280617290107537 (14 samples, 0.01%)</title><rect x="99.4161%" y="1141" width="0.0126%" height="15" fill="rgb(241,30,40)" fg:x="110151" fg:w="14"/><text x="99.6661%" y="1151.50"></text></g><g><title>anon.e3014b8b5d1afa4bb4931e3c4a33ddab.328.llvm.16598046268827245174 (20 samples, 0.02%)</title><rect x="99.4756%" y="1141" width="0.0181%" height="15" fill="rgb(235,215,44)" fg:x="110217" fg:w="20"/><text x="99.7256%" y="1151.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (44 samples, 0.04%)</title><rect x="99.5027%" y="1141" width="0.0397%" height="15" fill="rgb(205,8,29)" fg:x="110247" fg:w="44"/><text x="99.7527%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="99.5478%" y="1141" width="0.0208%" height="15" fill="rgb(241,137,42)" fg:x="110297" fg:w="23"/><text x="99.7978%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (23 samples, 0.02%)</title><rect x="99.5478%" y="1125" width="0.0208%" height="15" fill="rgb(237,155,2)" fg:x="110297" fg:w="23"/><text x="99.7978%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (17 samples, 0.02%)</title><rect x="99.5767%" y="1093" width="0.0153%" height="15" fill="rgb(245,29,42)" fg:x="110329" fg:w="17"/><text x="99.8267%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="99.5767%" y="1077" width="0.0153%" height="15" fill="rgb(234,101,35)" fg:x="110329" fg:w="17"/><text x="99.8267%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (17 samples, 0.02%)</title><rect x="99.5767%" y="1061" width="0.0153%" height="15" fill="rgb(228,64,37)" fg:x="110329" fg:w="17"/><text x="99.8267%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (26 samples, 0.02%)</title><rect x="99.5767%" y="1125" width="0.0235%" height="15" fill="rgb(217,214,36)" fg:x="110329" fg:w="26"/><text x="99.8267%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (26 samples, 0.02%)</title><rect x="99.5767%" y="1109" width="0.0235%" height="15" fill="rgb(243,70,3)" fg:x="110329" fg:w="26"/><text x="99.8267%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (23 samples, 0.02%)</title><rect x="99.6002%" y="1125" width="0.0208%" height="15" fill="rgb(253,158,52)" fg:x="110355" fg:w="23"/><text x="99.8502%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (23 samples, 0.02%)</title><rect x="99.6002%" y="1109" width="0.0208%" height="15" fill="rgb(234,111,54)" fg:x="110355" fg:w="23"/><text x="99.8502%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (23 samples, 0.02%)</title><rect x="99.6002%" y="1093" width="0.0208%" height="15" fill="rgb(217,70,32)" fg:x="110355" fg:w="23"/><text x="99.8502%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (107 samples, 0.10%)</title><rect x="99.5686%" y="1141" width="0.0966%" height="15" fill="rgb(234,18,33)" fg:x="110320" fg:w="107"/><text x="99.8186%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (49 samples, 0.04%)</title><rect x="99.6209%" y="1125" width="0.0442%" height="15" fill="rgb(234,12,49)" fg:x="110378" fg:w="49"/><text x="99.8709%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (34 samples, 0.03%)</title><rect x="99.6345%" y="1109" width="0.0307%" height="15" fill="rgb(236,10,21)" fg:x="110393" fg:w="34"/><text x="99.8845%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (34 samples, 0.03%)</title><rect x="99.6345%" y="1093" width="0.0307%" height="15" fill="rgb(248,182,45)" fg:x="110393" fg:w="34"/><text x="99.8845%" y="1103.50"></text></g><g><title>rust_alloc (22 samples, 0.02%)</title><rect x="99.6760%" y="1141" width="0.0199%" height="15" fill="rgb(217,95,36)" fg:x="110439" fg:w="22"/><text x="99.9260%" y="1151.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (16 samples, 0.01%)</title><rect x="99.6986%" y="1141" width="0.0144%" height="15" fill="rgb(212,110,31)" fg:x="110464" fg:w="16"/><text x="99.9486%" y="1151.50"></text></g><g><title>tremor_common::time::nanotime (12 samples, 0.01%)</title><rect x="99.7148%" y="1141" width="0.0108%" height="15" fill="rgb(206,32,53)" fg:x="110482" fg:w="12"/><text x="99.9648%" y="1151.50"></text></g><g><title>std::time::SystemTime::now (12 samples, 0.01%)</title><rect x="99.7148%" y="1125" width="0.0108%" height="15" fill="rgb(246,141,37)" fg:x="110482" fg:w="12"/><text x="99.9648%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (12 samples, 0.01%)</title><rect x="99.7148%" y="1109" width="0.0108%" height="15" fill="rgb(219,16,7)" fg:x="110482" fg:w="12"/><text x="99.9648%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::now (12 samples, 0.01%)</title><rect x="99.7148%" y="1093" width="0.0108%" height="15" fill="rgb(230,205,45)" fg:x="110482" fg:w="12"/><text x="99.9648%" y="1103.50"></text></g><g><title>async-std/runti (110,443 samples, 99.68%)</title><rect x="0.0505%" y="1157" width="99.6796%" height="15" fill="rgb(231,43,49)" fg:x="56" fg:w="110443"/><text x="0.3005%" y="1167.50">async-std/runti</text></g><g><title>__futex_abstimed_wait_common (19 samples, 0.02%)</title><rect x="99.7374%" y="837" width="0.0171%" height="15" fill="rgb(212,106,34)" fg:x="110507" fg:w="19"/><text x="99.9874%" y="847.50"></text></g><g><title>blocking-1 (28 samples, 0.03%)</title><rect x="99.7301%" y="1157" width="0.0253%" height="15" fill="rgb(206,83,17)" fg:x="110499" fg:w="28"/><text x="99.9801%" y="1167.50"></text></g><g><title>__GI___clone (27 samples, 0.02%)</title><rect x="99.7310%" y="1141" width="0.0244%" height="15" fill="rgb(244,154,49)" fg:x="110500" fg:w="27"/><text x="99.9810%" y="1151.50"></text></g><g><title>start_thread (23 samples, 0.02%)</title><rect x="99.7347%" y="1125" width="0.0208%" height="15" fill="rgb(244,149,49)" fg:x="110504" fg:w="23"/><text x="99.9847%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (22 samples, 0.02%)</title><rect x="99.7356%" y="1109" width="0.0199%" height="15" fill="rgb(227,134,18)" fg:x="110505" fg:w="22"/><text x="99.9856%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (22 samples, 0.02%)</title><rect x="99.7356%" y="1093" width="0.0199%" height="15" fill="rgb(237,116,36)" fg:x="110505" fg:w="22"/><text x="99.9856%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (22 samples, 0.02%)</title><rect x="99.7356%" y="1077" width="0.0199%" height="15" fill="rgb(205,129,40)" fg:x="110505" fg:w="22"/><text x="99.9856%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (22 samples, 0.02%)</title><rect x="99.7356%" y="1061" width="0.0199%" height="15" fill="rgb(236,178,4)" fg:x="110505" fg:w="22"/><text x="99.9856%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (22 samples, 0.02%)</title><rect x="99.7356%" y="1045" width="0.0199%" height="15" fill="rgb(251,76,53)" fg:x="110505" fg:w="22"/><text x="99.9856%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.02%)</title><rect x="99.7356%" y="1029" width="0.0199%" height="15" fill="rgb(242,92,40)" fg:x="110505" fg:w="22"/><text x="99.9856%" y="1039.50"></text></g><g><title>std::panicking::try (22 samples, 0.02%)</title><rect x="99.7356%" y="1013" width="0.0199%" height="15" fill="rgb(209,45,30)" fg:x="110505" fg:w="22"/><text x="99.9856%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.02%)</title><rect x="99.7356%" y="997" width="0.0199%" height="15" fill="rgb(218,157,36)" fg:x="110505" fg:w="22"/><text x="99.9856%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.02%)</title><rect x="99.7356%" y="981" width="0.0199%" height="15" fill="rgb(222,186,16)" fg:x="110505" fg:w="22"/><text x="99.9856%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (22 samples, 0.02%)</title><rect x="99.7356%" y="965" width="0.0199%" height="15" fill="rgb(254,72,35)" fg:x="110505" fg:w="22"/><text x="99.9856%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (22 samples, 0.02%)</title><rect x="99.7356%" y="949" width="0.0199%" height="15" fill="rgb(224,25,35)" fg:x="110505" fg:w="22"/><text x="99.9856%" y="959.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (22 samples, 0.02%)</title><rect x="99.7356%" y="933" width="0.0199%" height="15" fill="rgb(206,135,52)" fg:x="110505" fg:w="22"/><text x="99.9856%" y="943.50"></text></g><g><title>blocking::Executor::main_loop (22 samples, 0.02%)</title><rect x="99.7356%" y="917" width="0.0199%" height="15" fill="rgb(229,174,47)" fg:x="110505" fg:w="22"/><text x="99.9856%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (21 samples, 0.02%)</title><rect x="99.7365%" y="901" width="0.0190%" height="15" fill="rgb(242,184,21)" fg:x="110506" fg:w="21"/><text x="99.9865%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (21 samples, 0.02%)</title><rect x="99.7365%" y="885" width="0.0190%" height="15" fill="rgb(213,22,45)" fg:x="110506" fg:w="21"/><text x="99.9865%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (21 samples, 0.02%)</title><rect x="99.7365%" y="869" width="0.0190%" height="15" fill="rgb(237,81,54)" fg:x="110506" fg:w="21"/><text x="99.9865%" y="879.50"></text></g><g><title>___pthread_cond_timedwait (21 samples, 0.02%)</title><rect x="99.7365%" y="853" width="0.0190%" height="15" fill="rgb(248,177,18)" fg:x="110506" fg:w="21"/><text x="99.9865%" y="863.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (66 samples, 0.06%)</title><rect x="99.7626%" y="901" width="0.0596%" height="15" fill="rgb(254,31,16)" fg:x="110535" fg:w="66"/><text x="100.0126%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (66 samples, 0.06%)</title><rect x="99.7626%" y="885" width="0.0596%" height="15" fill="rgb(235,20,31)" fg:x="110535" fg:w="66"/><text x="100.0126%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (63 samples, 0.06%)</title><rect x="99.7653%" y="869" width="0.0569%" height="15" fill="rgb(240,56,43)" fg:x="110538" fg:w="63"/><text x="100.0153%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (63 samples, 0.06%)</title><rect x="99.7653%" y="853" width="0.0569%" height="15" fill="rgb(237,197,51)" fg:x="110538" fg:w="63"/><text x="100.0153%" y="863.50"></text></g><g><title>___pthread_mutex_lock (63 samples, 0.06%)</title><rect x="99.7653%" y="837" width="0.0569%" height="15" fill="rgb(241,162,44)" fg:x="110538" fg:w="63"/><text x="100.0153%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (63 samples, 0.06%)</title><rect x="99.7653%" y="821" width="0.0569%" height="15" fill="rgb(224,23,20)" fg:x="110538" fg:w="63"/><text x="100.0153%" y="831.50"></text></g><g><title>std::panic::catch_unwind (67 samples, 0.06%)</title><rect x="99.7626%" y="1029" width="0.0605%" height="15" fill="rgb(250,109,34)" fg:x="110535" fg:w="67"/><text x="100.0126%" y="1039.50"></text></g><g><title>std::panicking::try (67 samples, 0.06%)</title><rect x="99.7626%" y="1013" width="0.0605%" height="15" fill="rgb(214,175,50)" fg:x="110535" fg:w="67"/><text x="100.0126%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (67 samples, 0.06%)</title><rect x="99.7626%" y="997" width="0.0605%" height="15" fill="rgb(213,182,5)" fg:x="110535" fg:w="67"/><text x="100.0126%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (67 samples, 0.06%)</title><rect x="99.7626%" y="981" width="0.0605%" height="15" fill="rgb(209,199,19)" fg:x="110535" fg:w="67"/><text x="100.0126%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (67 samples, 0.06%)</title><rect x="99.7626%" y="965" width="0.0605%" height="15" fill="rgb(236,224,42)" fg:x="110535" fg:w="67"/><text x="100.0126%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (67 samples, 0.06%)</title><rect x="99.7626%" y="949" width="0.0605%" height="15" fill="rgb(246,226,29)" fg:x="110535" fg:w="67"/><text x="100.0126%" y="959.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (67 samples, 0.06%)</title><rect x="99.7626%" y="933" width="0.0605%" height="15" fill="rgb(227,223,11)" fg:x="110535" fg:w="67"/><text x="100.0126%" y="943.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (67 samples, 0.06%)</title><rect x="99.7626%" y="917" width="0.0605%" height="15" fill="rgb(219,7,51)" fg:x="110535" fg:w="67"/><text x="100.0126%" y="927.50"></text></g><g><title>tokio-runtime-w (70 samples, 0.06%)</title><rect x="99.7617%" y="1157" width="0.0632%" height="15" fill="rgb(245,167,10)" fg:x="110534" fg:w="70"/><text x="100.0117%" y="1167.50"></text></g><g><title>__GI___clone (69 samples, 0.06%)</title><rect x="99.7626%" y="1141" width="0.0623%" height="15" fill="rgb(237,224,16)" fg:x="110535" fg:w="69"/><text x="100.0126%" y="1151.50"></text></g><g><title>start_thread (69 samples, 0.06%)</title><rect x="99.7626%" y="1125" width="0.0623%" height="15" fill="rgb(226,132,13)" fg:x="110535" fg:w="69"/><text x="100.0126%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (69 samples, 0.06%)</title><rect x="99.7626%" y="1109" width="0.0623%" height="15" fill="rgb(214,140,3)" fg:x="110535" fg:w="69"/><text x="100.0126%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69 samples, 0.06%)</title><rect x="99.7626%" y="1093" width="0.0623%" height="15" fill="rgb(221,177,4)" fg:x="110535" fg:w="69"/><text x="100.0126%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69 samples, 0.06%)</title><rect x="99.7626%" y="1077" width="0.0623%" height="15" fill="rgb(238,139,3)" fg:x="110535" fg:w="69"/><text x="100.0126%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (69 samples, 0.06%)</title><rect x="99.7626%" y="1061" width="0.0623%" height="15" fill="rgb(216,17,39)" fg:x="110535" fg:w="69"/><text x="100.0126%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (69 samples, 0.06%)</title><rect x="99.7626%" y="1045" width="0.0623%" height="15" fill="rgb(238,120,9)" fg:x="110535" fg:w="69"/><text x="100.0126%" y="1055.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="99.8267%" y="1141" width="0.0162%" height="15" fill="rgb(244,92,53)" fg:x="110606" fg:w="18"/><text x="100.0767%" y="1151.50"></text></g><g><title>__GI___clone (160 samples, 0.14%)</title><rect x="99.8430%" y="1141" width="0.1444%" height="15" fill="rgb(224,148,33)" fg:x="110624" fg:w="160"/><text x="100.0930%" y="1151.50"></text></g><g><title>start_thread (21 samples, 0.02%)</title><rect x="99.9684%" y="1125" width="0.0190%" height="15" fill="rgb(243,6,36)" fg:x="110763" fg:w="21"/><text x="100.2184%" y="1135.50"></text></g><g><title>all (110,798 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(230,102,11)" fg:x="0" fg:w="110798"/><text x="0.2500%" y="1183.50"></text></g><g><title>tremor-pdk-nobo (194 samples, 0.18%)</title><rect x="99.8249%" y="1157" width="0.1751%" height="15" fill="rgb(234,148,36)" fg:x="110604" fg:w="194"/><text x="100.0749%" y="1167.50"></text></g><g><title>_start (14 samples, 0.01%)</title><rect x="99.9874%" y="1141" width="0.0126%" height="15" fill="rgb(251,153,25)" fg:x="110784" fg:w="14"/><text x="100.2374%" y="1151.50"></text></g></svg></svg>