<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="112316"><g><title>__futex_abstimed_wait_common (21 samples, 0.02%)</title><rect x="0.0151%" y="805" width="0.0187%" height="15" fill="rgb(227,0,7)" fg:x="17" fg:w="21"/><text x="0.2651%" y="815.50"></text></g><g><title>___pthread_cond_timedwait (25 samples, 0.02%)</title><rect x="0.0125%" y="821" width="0.0223%" height="15" fill="rgb(217,0,24)" fg:x="14" fg:w="25"/><text x="0.2625%" y="831.50"></text></g><g><title>__GI___clone (37 samples, 0.03%)</title><rect x="0.0036%" y="1141" width="0.0329%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="37"/><text x="0.2536%" y="1151.50"></text></g><g><title>start_thread (37 samples, 0.03%)</title><rect x="0.0036%" y="1125" width="0.0329%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="37"/><text x="0.2536%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (37 samples, 0.03%)</title><rect x="0.0036%" y="1109" width="0.0329%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="37"/><text x="0.2536%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (37 samples, 0.03%)</title><rect x="0.0036%" y="1093" width="0.0329%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="37"/><text x="0.2536%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (37 samples, 0.03%)</title><rect x="0.0036%" y="1077" width="0.0329%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="37"/><text x="0.2536%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (37 samples, 0.03%)</title><rect x="0.0036%" y="1061" width="0.0329%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="37"/><text x="0.2536%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (37 samples, 0.03%)</title><rect x="0.0036%" y="1045" width="0.0329%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="37"/><text x="0.2536%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (37 samples, 0.03%)</title><rect x="0.0036%" y="1029" width="0.0329%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="37"/><text x="0.2536%" y="1039.50"></text></g><g><title>std::panicking::try (37 samples, 0.03%)</title><rect x="0.0036%" y="1013" width="0.0329%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="37"/><text x="0.2536%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (37 samples, 0.03%)</title><rect x="0.0036%" y="997" width="0.0329%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="37"/><text x="0.2536%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (37 samples, 0.03%)</title><rect x="0.0036%" y="981" width="0.0329%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="37"/><text x="0.2536%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (37 samples, 0.03%)</title><rect x="0.0036%" y="965" width="0.0329%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="37"/><text x="0.2536%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (37 samples, 0.03%)</title><rect x="0.0036%" y="949" width="0.0329%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="37"/><text x="0.2536%" y="959.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (37 samples, 0.03%)</title><rect x="0.0036%" y="933" width="0.0329%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="37"/><text x="0.2536%" y="943.50"></text></g><g><title>async_io::driver::main_loop (37 samples, 0.03%)</title><rect x="0.0036%" y="917" width="0.0329%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="37"/><text x="0.2536%" y="927.50"></text></g><g><title>parking::Parker::park_timeout (29 samples, 0.03%)</title><rect x="0.0107%" y="901" width="0.0258%" height="15" fill="rgb(210,31,41)" fg:x="12" fg:w="29"/><text x="0.2607%" y="911.50"></text></g><g><title>parking::Inner::park (29 samples, 0.03%)</title><rect x="0.0107%" y="885" width="0.0258%" height="15" fill="rgb(221,200,47)" fg:x="12" fg:w="29"/><text x="0.2607%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (28 samples, 0.02%)</title><rect x="0.0116%" y="869" width="0.0249%" height="15" fill="rgb(226,26,5)" fg:x="13" fg:w="28"/><text x="0.2616%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (28 samples, 0.02%)</title><rect x="0.0116%" y="853" width="0.0249%" height="15" fill="rgb(249,33,26)" fg:x="13" fg:w="28"/><text x="0.2616%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (28 samples, 0.02%)</title><rect x="0.0116%" y="837" width="0.0249%" height="15" fill="rgb(235,183,28)" fg:x="13" fg:w="28"/><text x="0.2616%" y="847.50"></text></g><g><title>async-io (40 samples, 0.04%)</title><rect x="0.0018%" y="1157" width="0.0356%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="40"/><text x="0.2518%" y="1167.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (63 samples, 0.06%)</title><rect x="0.4256%" y="1141" width="0.0561%" height="15" fill="rgb(247,18,42)" fg:x="478" fg:w="63"/><text x="0.6756%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.02%)</title><rect x="0.4817%" y="1141" width="0.0249%" height="15" fill="rgb(241,131,45)" fg:x="541" fg:w="28"/><text x="0.7317%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (21 samples, 0.02%)</title><rect x="0.4879%" y="1125" width="0.0187%" height="15" fill="rgb(249,31,29)" fg:x="548" fg:w="21"/><text x="0.7379%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="0.4879%" y="1109" width="0.0187%" height="15" fill="rgb(225,111,53)" fg:x="548" fg:w="21"/><text x="0.7379%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="0.5066%" y="1141" width="0.0134%" height="15" fill="rgb(238,160,17)" fg:x="569" fg:w="15"/><text x="0.7566%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="0.5200%" y="1141" width="0.0392%" height="15" fill="rgb(214,148,48)" fg:x="584" fg:w="44"/><text x="0.7700%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (42 samples, 0.04%)</title><rect x="0.5217%" y="1125" width="0.0374%" height="15" fill="rgb(232,36,49)" fg:x="586" fg:w="42"/><text x="0.7717%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (55 samples, 0.05%)</title><rect x="0.5591%" y="1125" width="0.0490%" height="15" fill="rgb(209,103,24)" fg:x="628" fg:w="55"/><text x="0.8091%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="0.6224%" y="1125" width="0.0338%" height="15" fill="rgb(229,88,8)" fg:x="699" fg:w="38"/><text x="0.8724%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="0.6562%" y="1125" width="0.0231%" height="15" fill="rgb(213,181,19)" fg:x="737" fg:w="26"/><text x="0.9062%" y="1135.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (102 samples, 0.09%)</title><rect x="0.6793%" y="1125" width="0.0908%" height="15" fill="rgb(254,191,54)" fg:x="763" fg:w="102"/><text x="0.9293%" y="1135.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="0.7701%" y="1125" width="0.0169%" height="15" fill="rgb(241,83,37)" fg:x="865" fg:w="19"/><text x="1.0201%" y="1135.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (13 samples, 0.01%)</title><rect x="0.8565%" y="1093" width="0.0116%" height="15" fill="rgb(233,36,39)" fg:x="962" fg:w="13"/><text x="1.1065%" y="1103.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (22 samples, 0.02%)</title><rect x="0.8556%" y="1109" width="0.0196%" height="15" fill="rgb(226,3,54)" fg:x="961" fg:w="22"/><text x="1.1056%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (48 samples, 0.04%)</title><rect x="0.8752%" y="1109" width="0.0427%" height="15" fill="rgb(245,192,40)" fg:x="983" fg:w="48"/><text x="1.1252%" y="1119.50"></text></g><g><title>core::mem::replace (48 samples, 0.04%)</title><rect x="0.8752%" y="1093" width="0.0427%" height="15" fill="rgb(238,167,29)" fg:x="983" fg:w="48"/><text x="1.1252%" y="1103.50"></text></g><g><title>core::ptr::read (48 samples, 0.04%)</title><rect x="0.8752%" y="1077" width="0.0427%" height="15" fill="rgb(232,182,51)" fg:x="983" fg:w="48"/><text x="1.1252%" y="1087.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (156 samples, 0.14%)</title><rect x="0.7871%" y="1125" width="0.1389%" height="15" fill="rgb(231,60,39)" fg:x="884" fg:w="156"/><text x="1.0371%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (38 samples, 0.03%)</title><rect x="1.2696%" y="1093" width="0.0338%" height="15" fill="rgb(208,69,12)" fg:x="1426" fg:w="38"/><text x="1.5196%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (38 samples, 0.03%)</title><rect x="1.2696%" y="1077" width="0.0338%" height="15" fill="rgb(235,93,37)" fg:x="1426" fg:w="38"/><text x="1.5196%" y="1087.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (123 samples, 0.11%)</title><rect x="1.2091%" y="1109" width="0.1095%" height="15" fill="rgb(213,116,39)" fg:x="1358" fg:w="123"/><text x="1.4591%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (17 samples, 0.02%)</title><rect x="1.3035%" y="1093" width="0.0151%" height="15" fill="rgb(222,207,29)" fg:x="1464" fg:w="17"/><text x="1.5535%" y="1103.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (37 samples, 0.03%)</title><rect x="1.3186%" y="1093" width="0.0329%" height="15" fill="rgb(206,96,30)" fg:x="1481" fg:w="37"/><text x="1.5686%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="1.3284%" y="1077" width="0.0231%" height="15" fill="rgb(218,138,4)" fg:x="1492" fg:w="26"/><text x="1.5784%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (26 samples, 0.02%)</title><rect x="1.3284%" y="1061" width="0.0231%" height="15" fill="rgb(250,191,14)" fg:x="1492" fg:w="26"/><text x="1.5784%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (26 samples, 0.02%)</title><rect x="1.3284%" y="1045" width="0.0231%" height="15" fill="rgb(239,60,40)" fg:x="1492" fg:w="26"/><text x="1.5784%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (26 samples, 0.02%)</title><rect x="1.3284%" y="1029" width="0.0231%" height="15" fill="rgb(206,27,48)" fg:x="1492" fg:w="26"/><text x="1.5784%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26 samples, 0.02%)</title><rect x="1.3284%" y="1013" width="0.0231%" height="15" fill="rgb(225,35,8)" fg:x="1492" fg:w="26"/><text x="1.5784%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.02%)</title><rect x="1.3284%" y="997" width="0.0231%" height="15" fill="rgb(250,213,24)" fg:x="1492" fg:w="26"/><text x="1.5784%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26 samples, 0.02%)</title><rect x="1.3284%" y="981" width="0.0231%" height="15" fill="rgb(247,123,22)" fg:x="1492" fg:w="26"/><text x="1.5784%" y="991.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (24 samples, 0.02%)</title><rect x="1.3302%" y="965" width="0.0214%" height="15" fill="rgb(231,138,38)" fg:x="1494" fg:w="24"/><text x="1.5802%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24 samples, 0.02%)</title><rect x="1.3302%" y="949" width="0.0214%" height="15" fill="rgb(231,145,46)" fg:x="1494" fg:w="24"/><text x="1.5802%" y="959.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (54 samples, 0.05%)</title><rect x="1.3186%" y="1109" width="0.0481%" height="15" fill="rgb(251,118,11)" fg:x="1481" fg:w="54"/><text x="1.5686%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (17 samples, 0.02%)</title><rect x="1.3515%" y="1093" width="0.0151%" height="15" fill="rgb(217,147,25)" fg:x="1518" fg:w="17"/><text x="1.6015%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (17 samples, 0.02%)</title><rect x="1.3515%" y="1077" width="0.0151%" height="15" fill="rgb(247,81,37)" fg:x="1518" fg:w="17"/><text x="1.6015%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (17 samples, 0.02%)</title><rect x="1.3515%" y="1061" width="0.0151%" height="15" fill="rgb(209,12,38)" fg:x="1518" fg:w="17"/><text x="1.6015%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (17 samples, 0.02%)</title><rect x="1.3515%" y="1045" width="0.0151%" height="15" fill="rgb(227,1,9)" fg:x="1518" fg:w="17"/><text x="1.6015%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="1.3515%" y="1029" width="0.0151%" height="15" fill="rgb(248,47,43)" fg:x="1518" fg:w="17"/><text x="1.6015%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="1.3515%" y="1013" width="0.0151%" height="15" fill="rgb(221,10,30)" fg:x="1518" fg:w="17"/><text x="1.6015%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="1.3515%" y="997" width="0.0151%" height="15" fill="rgb(210,229,1)" fg:x="1518" fg:w="17"/><text x="1.6015%" y="1007.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="1.3667%" y="1109" width="0.0169%" height="15" fill="rgb(222,148,37)" fg:x="1535" fg:w="19"/><text x="1.6167%" y="1119.50"></text></g><g><title>async_task::runnable::Runnable::run (19 samples, 0.02%)</title><rect x="1.3667%" y="1093" width="0.0169%" height="15" fill="rgb(234,67,33)" fg:x="1535" fg:w="19"/><text x="1.6167%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="1.4379%" y="1093" width="0.0169%" height="15" fill="rgb(247,98,35)" fg:x="1615" fg:w="19"/><text x="1.6879%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (85 samples, 0.08%)</title><rect x="1.3916%" y="1109" width="0.0757%" height="15" fill="rgb(247,138,52)" fg:x="1563" fg:w="85"/><text x="1.6416%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (14 samples, 0.01%)</title><rect x="1.4548%" y="1093" width="0.0125%" height="15" fill="rgb(213,79,30)" fg:x="1634" fg:w="14"/><text x="1.7048%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (16 samples, 0.01%)</title><rect x="1.4673%" y="1109" width="0.0142%" height="15" fill="rgb(246,177,23)" fg:x="1648" fg:w="16"/><text x="1.7173%" y="1119.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (52 samples, 0.05%)</title><rect x="1.4815%" y="1109" width="0.0463%" height="15" fill="rgb(230,62,27)" fg:x="1664" fg:w="52"/><text x="1.7315%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="1.5804%" y="1093" width="0.0116%" height="15" fill="rgb(216,154,8)" fg:x="1775" fg:w="13"/><text x="1.8304%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="1.5804%" y="1077" width="0.0116%" height="15" fill="rgb(244,35,45)" fg:x="1775" fg:w="13"/><text x="1.8304%" y="1087.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (13 samples, 0.01%)</title><rect x="1.5804%" y="1061" width="0.0116%" height="15" fill="rgb(251,115,12)" fg:x="1775" fg:w="13"/><text x="1.8304%" y="1071.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="1.5804%" y="1045" width="0.0116%" height="15" fill="rgb(240,54,50)" fg:x="1775" fg:w="13"/><text x="1.8304%" y="1055.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (14 samples, 0.01%)</title><rect x="1.5919%" y="1093" width="0.0125%" height="15" fill="rgb(233,84,52)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="1103.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (14 samples, 0.01%)</title><rect x="1.5919%" y="1077" width="0.0125%" height="15" fill="rgb(207,117,47)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="1087.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (14 samples, 0.01%)</title><rect x="1.5919%" y="1061" width="0.0125%" height="15" fill="rgb(249,43,39)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (14 samples, 0.01%)</title><rect x="1.5919%" y="1045" width="0.0125%" height="15" fill="rgb(209,38,44)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 0.01%)</title><rect x="1.5919%" y="1029" width="0.0125%" height="15" fill="rgb(236,212,23)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.01%)</title><rect x="1.5919%" y="1013" width="0.0125%" height="15" fill="rgb(242,79,21)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.01%)</title><rect x="1.5919%" y="997" width="0.0125%" height="15" fill="rgb(211,96,35)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.01%)</title><rect x="1.5919%" y="981" width="0.0125%" height="15" fill="rgb(253,215,40)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="1.5919%" y="965" width="0.0125%" height="15" fill="rgb(211,81,21)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="1.5919%" y="949" width="0.0125%" height="15" fill="rgb(208,190,38)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="1.5919%" y="933" width="0.0125%" height="15" fill="rgb(235,213,38)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="1.5919%" y="917" width="0.0125%" height="15" fill="rgb(237,122,38)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="1.5919%" y="901" width="0.0125%" height="15" fill="rgb(244,218,35)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="911.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="1.5919%" y="885" width="0.0125%" height="15" fill="rgb(240,68,47)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="895.50"></text></g><g><title>__rg_alloc (14 samples, 0.01%)</title><rect x="1.5919%" y="869" width="0.0125%" height="15" fill="rgb(210,16,53)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.01%)</title><rect x="1.5919%" y="853" width="0.0125%" height="15" fill="rgb(235,124,12)" fg:x="1788" fg:w="14"/><text x="1.8419%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (773 samples, 0.69%)</title><rect x="0.9260%" y="1125" width="0.6882%" height="15" fill="rgb(224,169,11)" fg:x="1040" fg:w="773"/><text x="1.1760%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (97 samples, 0.09%)</title><rect x="1.5278%" y="1109" width="0.0864%" height="15" fill="rgb(250,166,2)" fg:x="1716" fg:w="97"/><text x="1.7778%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (33 samples, 0.03%)</title><rect x="1.6979%" y="1109" width="0.0294%" height="15" fill="rgb(242,216,29)" fg:x="1907" fg:w="33"/><text x="1.9479%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (33 samples, 0.03%)</title><rect x="1.6979%" y="1093" width="0.0294%" height="15" fill="rgb(230,116,27)" fg:x="1907" fg:w="33"/><text x="1.9479%" y="1103.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="1.6979%" y="1077" width="0.0294%" height="15" fill="rgb(228,99,48)" fg:x="1907" fg:w="33"/><text x="1.9479%" y="1087.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (33 samples, 0.03%)</title><rect x="1.6979%" y="1061" width="0.0294%" height="15" fill="rgb(253,11,6)" fg:x="1907" fg:w="33"/><text x="1.9479%" y="1071.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (33 samples, 0.03%)</title><rect x="1.6979%" y="1045" width="0.0294%" height="15" fill="rgb(247,143,39)" fg:x="1907" fg:w="33"/><text x="1.9479%" y="1055.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (156 samples, 0.14%)</title><rect x="1.6142%" y="1125" width="0.1389%" height="15" fill="rgb(236,97,10)" fg:x="1813" fg:w="156"/><text x="1.8642%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (29 samples, 0.03%)</title><rect x="1.7273%" y="1109" width="0.0258%" height="15" fill="rgb(233,208,19)" fg:x="1940" fg:w="29"/><text x="1.9773%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.03%)</title><rect x="1.7273%" y="1093" width="0.0258%" height="15" fill="rgb(216,164,2)" fg:x="1940" fg:w="29"/><text x="1.9773%" y="1103.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (29 samples, 0.03%)</title><rect x="1.7273%" y="1077" width="0.0258%" height="15" fill="rgb(220,129,5)" fg:x="1940" fg:w="29"/><text x="1.9773%" y="1087.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (29 samples, 0.03%)</title><rect x="1.7273%" y="1061" width="0.0258%" height="15" fill="rgb(242,17,10)" fg:x="1940" fg:w="29"/><text x="1.9773%" y="1071.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="1.7531%" y="1125" width="0.0151%" height="15" fill="rgb(242,107,0)" fg:x="1969" fg:w="17"/><text x="2.0031%" y="1135.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (58 samples, 0.05%)</title><rect x="1.7682%" y="1125" width="0.0516%" height="15" fill="rgb(251,28,31)" fg:x="1986" fg:w="58"/><text x="2.0182%" y="1135.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (35 samples, 0.03%)</title><rect x="1.7887%" y="1109" width="0.0312%" height="15" fill="rgb(233,223,10)" fg:x="2009" fg:w="35"/><text x="2.0387%" y="1119.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (25 samples, 0.02%)</title><rect x="1.7976%" y="1093" width="0.0223%" height="15" fill="rgb(215,21,27)" fg:x="2019" fg:w="25"/><text x="2.0476%" y="1103.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (31 samples, 0.03%)</title><rect x="1.8208%" y="1125" width="0.0276%" height="15" fill="rgb(232,23,21)" fg:x="2045" fg:w="31"/><text x="2.0708%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (173 samples, 0.15%)</title><rect x="1.8484%" y="1125" width="0.1540%" height="15" fill="rgb(244,5,23)" fg:x="2076" fg:w="173"/><text x="2.0984%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (113 samples, 0.10%)</title><rect x="1.9018%" y="1109" width="0.1006%" height="15" fill="rgb(226,81,46)" fg:x="2136" fg:w="113"/><text x="2.1518%" y="1119.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (78 samples, 0.07%)</title><rect x="1.9329%" y="1093" width="0.0694%" height="15" fill="rgb(247,70,30)" fg:x="2171" fg:w="78"/><text x="2.1829%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (36 samples, 0.03%)</title><rect x="1.9703%" y="1077" width="0.0321%" height="15" fill="rgb(212,68,19)" fg:x="2213" fg:w="36"/><text x="2.2203%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (36 samples, 0.03%)</title><rect x="1.9703%" y="1061" width="0.0321%" height="15" fill="rgb(240,187,13)" fg:x="2213" fg:w="36"/><text x="2.2203%" y="1071.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (36 samples, 0.03%)</title><rect x="1.9703%" y="1045" width="0.0321%" height="15" fill="rgb(223,113,26)" fg:x="2213" fg:w="36"/><text x="2.2203%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (21 samples, 0.02%)</title><rect x="1.9837%" y="1029" width="0.0187%" height="15" fill="rgb(206,192,2)" fg:x="2228" fg:w="21"/><text x="2.2337%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.02%)</title><rect x="1.9837%" y="1013" width="0.0187%" height="15" fill="rgb(241,108,4)" fg:x="2228" fg:w="21"/><text x="2.2337%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.02%)</title><rect x="1.9837%" y="997" width="0.0187%" height="15" fill="rgb(247,173,49)" fg:x="2228" fg:w="21"/><text x="2.2337%" y="1007.50"></text></g><g><title>__rg_dealloc (21 samples, 0.02%)</title><rect x="1.9837%" y="981" width="0.0187%" height="15" fill="rgb(224,114,35)" fg:x="2228" fg:w="21"/><text x="2.2337%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (21 samples, 0.02%)</title><rect x="1.9837%" y="965" width="0.0187%" height="15" fill="rgb(245,159,27)" fg:x="2228" fg:w="21"/><text x="2.2337%" y="975.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="2.0371%" y="1077" width="0.0116%" height="15" fill="rgb(245,172,44)" fg:x="2288" fg:w="13"/><text x="2.2871%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="2.0371%" y="1061" width="0.0116%" height="15" fill="rgb(236,23,11)" fg:x="2288" fg:w="13"/><text x="2.2871%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="2.0371%" y="1045" width="0.0116%" height="15" fill="rgb(205,117,38)" fg:x="2288" fg:w="13"/><text x="2.2871%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="2.0371%" y="1029" width="0.0116%" height="15" fill="rgb(237,72,25)" fg:x="2288" fg:w="13"/><text x="2.2871%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="2.0371%" y="1013" width="0.0116%" height="15" fill="rgb(244,70,9)" fg:x="2288" fg:w="13"/><text x="2.2871%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="2.0371%" y="997" width="0.0116%" height="15" fill="rgb(217,125,39)" fg:x="2288" fg:w="13"/><text x="2.2871%" y="1007.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="2.0371%" y="981" width="0.0116%" height="15" fill="rgb(235,36,10)" fg:x="2288" fg:w="13"/><text x="2.2871%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="2.0371%" y="965" width="0.0116%" height="15" fill="rgb(251,123,47)" fg:x="2288" fg:w="13"/><text x="2.2871%" y="975.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (63 samples, 0.06%)</title><rect x="2.0024%" y="1125" width="0.0561%" height="15" fill="rgb(221,13,13)" fg:x="2249" fg:w="63"/><text x="2.2524%" y="1135.50"></text></g><g><title>value_trait::Builder::object (24 samples, 0.02%)</title><rect x="2.0371%" y="1109" width="0.0214%" height="15" fill="rgb(238,131,9)" fg:x="2288" fg:w="24"/><text x="2.2871%" y="1119.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (24 samples, 0.02%)</title><rect x="2.0371%" y="1093" width="0.0214%" height="15" fill="rgb(211,50,8)" fg:x="2288" fg:w="24"/><text x="2.2871%" y="1103.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (17 samples, 0.02%)</title><rect x="2.0834%" y="1125" width="0.0151%" height="15" fill="rgb(245,182,24)" fg:x="2340" fg:w="17"/><text x="2.3334%" y="1135.50"></text></g><g><title>___pthread_mutex_lock (46 samples, 0.04%)</title><rect x="2.0994%" y="1125" width="0.0410%" height="15" fill="rgb(242,14,37)" fg:x="2358" fg:w="46"/><text x="2.3494%" y="1135.50"></text></g><g><title>___pthread_rwlock_unlock (14 samples, 0.01%)</title><rect x="2.1475%" y="1125" width="0.0125%" height="15" fill="rgb(246,228,12)" fg:x="2412" fg:w="14"/><text x="2.3975%" y="1135.50"></text></g><g><title>__clock_gettime_2 (75 samples, 0.07%)</title><rect x="2.1600%" y="1125" width="0.0668%" height="15" fill="rgb(213,55,15)" fg:x="2426" fg:w="75"/><text x="2.4100%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (53 samples, 0.05%)</title><rect x="2.2410%" y="1125" width="0.0472%" height="15" fill="rgb(209,9,3)" fg:x="2517" fg:w="53"/><text x="2.4910%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.02%)</title><rect x="2.2953%" y="1125" width="0.0169%" height="15" fill="rgb(230,59,30)" fg:x="2578" fg:w="19"/><text x="2.5453%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (26 samples, 0.02%)</title><rect x="2.3122%" y="1125" width="0.0231%" height="15" fill="rgb(209,121,21)" fg:x="2597" fg:w="26"/><text x="2.5622%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (31 samples, 0.03%)</title><rect x="2.4057%" y="1109" width="0.0276%" height="15" fill="rgb(220,109,13)" fg:x="2702" fg:w="31"/><text x="2.6557%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (31 samples, 0.03%)</title><rect x="2.4057%" y="1093" width="0.0276%" height="15" fill="rgb(232,18,1)" fg:x="2702" fg:w="31"/><text x="2.6557%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (31 samples, 0.03%)</title><rect x="2.4057%" y="1077" width="0.0276%" height="15" fill="rgb(215,41,42)" fg:x="2702" fg:w="31"/><text x="2.6557%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="2.4333%" y="1109" width="0.0151%" height="15" fill="rgb(224,123,36)" fg:x="2733" fg:w="17"/><text x="2.6833%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (17 samples, 0.02%)</title><rect x="2.4333%" y="1093" width="0.0151%" height="15" fill="rgb(240,125,3)" fg:x="2733" fg:w="17"/><text x="2.6833%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="2.4333%" y="1077" width="0.0151%" height="15" fill="rgb(205,98,50)" fg:x="2733" fg:w="17"/><text x="2.6833%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="2.4333%" y="1061" width="0.0151%" height="15" fill="rgb(205,185,37)" fg:x="2733" fg:w="17"/><text x="2.6833%" y="1071.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="2.4333%" y="1045" width="0.0151%" height="15" fill="rgb(238,207,15)" fg:x="2733" fg:w="17"/><text x="2.6833%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="2.4333%" y="1029" width="0.0151%" height="15" fill="rgb(213,199,42)" fg:x="2733" fg:w="17"/><text x="2.6833%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (121 samples, 0.11%)</title><rect x="2.3478%" y="1125" width="0.1077%" height="15" fill="rgb(235,201,11)" fg:x="2637" fg:w="121"/><text x="2.5978%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (93 samples, 0.08%)</title><rect x="2.4556%" y="1125" width="0.0828%" height="15" fill="rgb(207,46,11)" fg:x="2758" fg:w="93"/><text x="2.7056%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (25 samples, 0.02%)</title><rect x="2.5161%" y="1109" width="0.0223%" height="15" fill="rgb(241,35,35)" fg:x="2826" fg:w="25"/><text x="2.7661%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (25 samples, 0.02%)</title><rect x="2.5161%" y="1093" width="0.0223%" height="15" fill="rgb(243,32,47)" fg:x="2826" fg:w="25"/><text x="2.7661%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (25 samples, 0.02%)</title><rect x="2.5161%" y="1077" width="0.0223%" height="15" fill="rgb(247,202,23)" fg:x="2826" fg:w="25"/><text x="2.7661%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (25 samples, 0.02%)</title><rect x="2.5161%" y="1061" width="0.0223%" height="15" fill="rgb(219,102,11)" fg:x="2826" fg:w="25"/><text x="2.7661%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (25 samples, 0.02%)</title><rect x="2.5161%" y="1045" width="0.0223%" height="15" fill="rgb(243,110,44)" fg:x="2826" fg:w="25"/><text x="2.7661%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (25 samples, 0.02%)</title><rect x="2.5161%" y="1029" width="0.0223%" height="15" fill="rgb(222,74,54)" fg:x="2826" fg:w="25"/><text x="2.7661%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (25 samples, 0.02%)</title><rect x="2.5161%" y="1013" width="0.0223%" height="15" fill="rgb(216,99,12)" fg:x="2826" fg:w="25"/><text x="2.7661%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.02%)</title><rect x="2.5161%" y="997" width="0.0223%" height="15" fill="rgb(226,22,26)" fg:x="2826" fg:w="25"/><text x="2.7661%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.02%)</title><rect x="2.5161%" y="981" width="0.0223%" height="15" fill="rgb(217,163,10)" fg:x="2826" fg:w="25"/><text x="2.7661%" y="991.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.02%)</title><rect x="2.5161%" y="965" width="0.0223%" height="15" fill="rgb(213,25,53)" fg:x="2826" fg:w="25"/><text x="2.7661%" y="975.50"></text></g><g><title>__rg_alloc (25 samples, 0.02%)</title><rect x="2.5161%" y="949" width="0.0223%" height="15" fill="rgb(252,105,26)" fg:x="2826" fg:w="25"/><text x="2.7661%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (25 samples, 0.02%)</title><rect x="2.5161%" y="933" width="0.0223%" height="15" fill="rgb(220,39,43)" fg:x="2826" fg:w="25"/><text x="2.7661%" y="943.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (37 samples, 0.03%)</title><rect x="2.5384%" y="1125" width="0.0329%" height="15" fill="rgb(229,68,48)" fg:x="2851" fg:w="37"/><text x="2.7884%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (26 samples, 0.02%)</title><rect x="2.5482%" y="1109" width="0.0231%" height="15" fill="rgb(252,8,32)" fg:x="2862" fg:w="26"/><text x="2.7982%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (26 samples, 0.02%)</title><rect x="2.5482%" y="1093" width="0.0231%" height="15" fill="rgb(223,20,43)" fg:x="2862" fg:w="26"/><text x="2.7982%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (26 samples, 0.02%)</title><rect x="2.5482%" y="1077" width="0.0231%" height="15" fill="rgb(229,81,49)" fg:x="2862" fg:w="26"/><text x="2.7982%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (16 samples, 0.01%)</title><rect x="2.5767%" y="1125" width="0.0142%" height="15" fill="rgb(236,28,36)" fg:x="2894" fg:w="16"/><text x="2.8267%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (13 samples, 0.01%)</title><rect x="2.5909%" y="1125" width="0.0116%" height="15" fill="rgb(249,185,26)" fg:x="2910" fg:w="13"/><text x="2.8409%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (107 samples, 0.10%)</title><rect x="2.6888%" y="1061" width="0.0953%" height="15" fill="rgb(249,174,33)" fg:x="3020" fg:w="107"/><text x="2.9388%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (107 samples, 0.10%)</title><rect x="2.6888%" y="1045" width="0.0953%" height="15" fill="rgb(233,201,37)" fg:x="3020" fg:w="107"/><text x="2.9388%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (107 samples, 0.10%)</title><rect x="2.6888%" y="1029" width="0.0953%" height="15" fill="rgb(221,78,26)" fg:x="3020" fg:w="107"/><text x="2.9388%" y="1039.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (107 samples, 0.10%)</title><rect x="2.6888%" y="1013" width="0.0953%" height="15" fill="rgb(250,127,30)" fg:x="3020" fg:w="107"/><text x="2.9388%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (120 samples, 0.11%)</title><rect x="2.6888%" y="1077" width="0.1068%" height="15" fill="rgb(230,49,44)" fg:x="3020" fg:w="120"/><text x="2.9388%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="2.7841%" y="1061" width="0.0116%" height="15" fill="rgb(229,67,23)" fg:x="3127" fg:w="13"/><text x="3.0341%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="2.7841%" y="1045" width="0.0116%" height="15" fill="rgb(249,83,47)" fg:x="3127" fg:w="13"/><text x="3.0341%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="2.7841%" y="1029" width="0.0116%" height="15" fill="rgb(215,43,3)" fg:x="3127" fg:w="13"/><text x="3.0341%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="2.7841%" y="1013" width="0.0116%" height="15" fill="rgb(238,154,13)" fg:x="3127" fg:w="13"/><text x="3.0341%" y="1023.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="2.7841%" y="997" width="0.0116%" height="15" fill="rgb(219,56,2)" fg:x="3127" fg:w="13"/><text x="3.0341%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="2.7841%" y="981" width="0.0116%" height="15" fill="rgb(233,0,4)" fg:x="3127" fg:w="13"/><text x="3.0341%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.06%)</title><rect x="2.7957%" y="1061" width="0.0597%" height="15" fill="rgb(235,30,7)" fg:x="3140" fg:w="67"/><text x="3.0457%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (67 samples, 0.06%)</title><rect x="2.7957%" y="1045" width="0.0597%" height="15" fill="rgb(250,79,13)" fg:x="3140" fg:w="67"/><text x="3.0457%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (67 samples, 0.06%)</title><rect x="2.7957%" y="1029" width="0.0597%" height="15" fill="rgb(211,146,34)" fg:x="3140" fg:w="67"/><text x="3.0457%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (67 samples, 0.06%)</title><rect x="2.7957%" y="1013" width="0.0597%" height="15" fill="rgb(228,22,38)" fg:x="3140" fg:w="67"/><text x="3.0457%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (67 samples, 0.06%)</title><rect x="2.7957%" y="997" width="0.0597%" height="15" fill="rgb(235,168,5)" fg:x="3140" fg:w="67"/><text x="3.0457%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (81 samples, 0.07%)</title><rect x="2.7957%" y="1077" width="0.0721%" height="15" fill="rgb(221,155,16)" fg:x="3140" fg:w="81"/><text x="3.0457%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (14 samples, 0.01%)</title><rect x="2.8553%" y="1061" width="0.0125%" height="15" fill="rgb(215,215,53)" fg:x="3207" fg:w="14"/><text x="3.1053%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="2.8553%" y="1045" width="0.0125%" height="15" fill="rgb(223,4,10)" fg:x="3207" fg:w="14"/><text x="3.1053%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="2.8553%" y="1029" width="0.0125%" height="15" fill="rgb(234,103,6)" fg:x="3207" fg:w="14"/><text x="3.1053%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="2.8553%" y="1013" width="0.0125%" height="15" fill="rgb(227,97,0)" fg:x="3207" fg:w="14"/><text x="3.1053%" y="1023.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="2.8553%" y="997" width="0.0125%" height="15" fill="rgb(234,150,53)" fg:x="3207" fg:w="14"/><text x="3.1053%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="2.8553%" y="981" width="0.0125%" height="15" fill="rgb(228,201,54)" fg:x="3207" fg:w="14"/><text x="3.1053%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (310 samples, 0.28%)</title><rect x="2.6051%" y="1125" width="0.2760%" height="15" fill="rgb(222,22,37)" fg:x="2926" fg:w="310"/><text x="2.8551%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (216 samples, 0.19%)</title><rect x="2.6888%" y="1109" width="0.1923%" height="15" fill="rgb(237,53,32)" fg:x="3020" fg:w="216"/><text x="2.9388%" y="1119.50"></text></g><g><title>core::mem::drop (216 samples, 0.19%)</title><rect x="2.6888%" y="1093" width="0.1923%" height="15" fill="rgb(233,25,53)" fg:x="3020" fg:w="216"/><text x="2.9388%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="2.8678%" y="1077" width="0.0134%" height="15" fill="rgb(210,40,34)" fg:x="3221" fg:w="15"/><text x="3.1178%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="2.8678%" y="1061" width="0.0134%" height="15" fill="rgb(241,220,44)" fg:x="3221" fg:w="15"/><text x="3.1178%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (15 samples, 0.01%)</title><rect x="2.8678%" y="1045" width="0.0134%" height="15" fill="rgb(235,28,35)" fg:x="3221" fg:w="15"/><text x="3.1178%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="2.8678%" y="1029" width="0.0134%" height="15" fill="rgb(210,56,17)" fg:x="3221" fg:w="15"/><text x="3.1178%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (15 samples, 0.01%)</title><rect x="2.8678%" y="1013" width="0.0134%" height="15" fill="rgb(224,130,29)" fg:x="3221" fg:w="15"/><text x="3.1178%" y="1023.50"></text></g><g><title>async_executor::State::notify (13 samples, 0.01%)</title><rect x="2.8892%" y="1125" width="0.0116%" height="15" fill="rgb(235,212,8)" fg:x="3245" fg:w="13"/><text x="3.1392%" y="1135.50"></text></g><g><title>async_executor::Ticker::sleep (39 samples, 0.03%)</title><rect x="2.9007%" y="1125" width="0.0347%" height="15" fill="rgb(223,33,50)" fg:x="3258" fg:w="39"/><text x="3.1507%" y="1135.50"></text></g><g><title>async_executor::Ticker::wake (23 samples, 0.02%)</title><rect x="2.9355%" y="1125" width="0.0205%" height="15" fill="rgb(219,149,13)" fg:x="3297" fg:w="23"/><text x="3.1855%" y="1135.50"></text></g><g><title>async_executor::steal (167 samples, 0.15%)</title><rect x="2.9559%" y="1125" width="0.1487%" height="15" fill="rgb(250,156,29)" fg:x="3320" fg:w="167"/><text x="3.2059%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (31 samples, 0.03%)</title><rect x="3.1100%" y="1125" width="0.0276%" height="15" fill="rgb(216,193,19)" fg:x="3493" fg:w="31"/><text x="3.3600%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (18 samples, 0.02%)</title><rect x="3.1376%" y="1125" width="0.0160%" height="15" fill="rgb(216,135,14)" fg:x="3524" fg:w="18"/><text x="3.3876%" y="1135.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (12 samples, 0.01%)</title><rect x="3.1572%" y="1125" width="0.0107%" height="15" fill="rgb(241,47,5)" fg:x="3546" fg:w="12"/><text x="3.4072%" y="1135.50"></text></g><g><title>async_io::reactor::ReactorLock::react (18 samples, 0.02%)</title><rect x="3.1678%" y="1125" width="0.0160%" height="15" fill="rgb(233,42,35)" fg:x="3558" fg:w="18"/><text x="3.4178%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (19 samples, 0.02%)</title><rect x="3.1883%" y="1125" width="0.0169%" height="15" fill="rgb(231,13,6)" fg:x="3581" fg:w="19"/><text x="3.4383%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (136 samples, 0.12%)</title><rect x="3.2124%" y="1125" width="0.1211%" height="15" fill="rgb(207,181,40)" fg:x="3608" fg:w="136"/><text x="3.4624%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (117 samples, 0.10%)</title><rect x="3.3335%" y="1125" width="0.1042%" height="15" fill="rgb(254,173,49)" fg:x="3744" fg:w="117"/><text x="3.5835%" y="1135.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (40 samples, 0.04%)</title><rect x="3.4376%" y="1125" width="0.0356%" height="15" fill="rgb(221,1,38)" fg:x="3861" fg:w="40"/><text x="3.6876%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (22 samples, 0.02%)</title><rect x="3.4839%" y="1125" width="0.0196%" height="15" fill="rgb(206,124,46)" fg:x="3913" fg:w="22"/><text x="3.7339%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (25 samples, 0.02%)</title><rect x="3.5035%" y="1125" width="0.0223%" height="15" fill="rgb(249,21,11)" fg:x="3935" fg:w="25"/><text x="3.7535%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt; (25 samples, 0.02%)</title><rect x="3.5035%" y="1109" width="0.0223%" height="15" fill="rgb(222,201,40)" fg:x="3935" fg:w="25"/><text x="3.7535%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="3.5258%" y="1125" width="0.0205%" height="15" fill="rgb(235,61,29)" fg:x="3960" fg:w="23"/><text x="3.7758%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="3.5462%" y="1125" width="0.0142%" height="15" fill="rgb(219,207,3)" fg:x="3983" fg:w="16"/><text x="3.7962%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="3.5605%" y="1125" width="0.0187%" height="15" fill="rgb(222,56,46)" fg:x="3999" fg:w="21"/><text x="3.8105%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (21 samples, 0.02%)</title><rect x="3.5605%" y="1109" width="0.0187%" height="15" fill="rgb(239,76,54)" fg:x="3999" fg:w="21"/><text x="3.8105%" y="1119.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (41 samples, 0.04%)</title><rect x="3.6219%" y="1125" width="0.0365%" height="15" fill="rgb(231,124,27)" fg:x="4068" fg:w="41"/><text x="3.8719%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIter&lt;T&gt;::drop_elements (13 samples, 0.01%)</title><rect x="3.6584%" y="1125" width="0.0116%" height="15" fill="rgb(249,195,6)" fg:x="4109" fg:w="13"/><text x="3.9084%" y="1135.50"></text></g><g><title>parking::Inner::park (53 samples, 0.05%)</title><rect x="3.6700%" y="1125" width="0.0472%" height="15" fill="rgb(237,174,47)" fg:x="4122" fg:w="53"/><text x="3.9200%" y="1135.50"></text></g><g><title>parking::Unparker::unpark (18 samples, 0.02%)</title><rect x="3.7172%" y="1125" width="0.0160%" height="15" fill="rgb(206,201,31)" fg:x="4175" fg:w="18"/><text x="3.9672%" y="1135.50"></text></g><g><title>rust_alloc (47 samples, 0.04%)</title><rect x="3.7501%" y="1125" width="0.0418%" height="15" fill="rgb(231,57,52)" fg:x="4212" fg:w="47"/><text x="4.0001%" y="1135.50"></text></g><g><title>rust_dealloc (23 samples, 0.02%)</title><rect x="3.7920%" y="1125" width="0.0205%" height="15" fill="rgb(248,177,22)" fg:x="4259" fg:w="23"/><text x="4.0420%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (22 samples, 0.02%)</title><rect x="3.7929%" y="1109" width="0.0196%" height="15" fill="rgb(215,211,37)" fg:x="4260" fg:w="22"/><text x="4.0429%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (22 samples, 0.02%)</title><rect x="3.7929%" y="1093" width="0.0196%" height="15" fill="rgb(241,128,51)" fg:x="4260" fg:w="22"/><text x="4.0429%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (22 samples, 0.02%)</title><rect x="3.7929%" y="1077" width="0.0196%" height="15" fill="rgb(227,165,31)" fg:x="4260" fg:w="22"/><text x="4.0429%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (22 samples, 0.02%)</title><rect x="3.7929%" y="1061" width="0.0196%" height="15" fill="rgb(228,167,24)" fg:x="4260" fg:w="22"/><text x="4.0429%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (22 samples, 0.02%)</title><rect x="3.7929%" y="1045" width="0.0196%" height="15" fill="rgb(228,143,12)" fg:x="4260" fg:w="22"/><text x="4.0429%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (22 samples, 0.02%)</title><rect x="3.7929%" y="1029" width="0.0196%" height="15" fill="rgb(249,149,8)" fg:x="4260" fg:w="22"/><text x="4.0429%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (22 samples, 0.02%)</title><rect x="3.7929%" y="1013" width="0.0196%" height="15" fill="rgb(243,35,44)" fg:x="4260" fg:w="22"/><text x="4.0429%" y="1023.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (22 samples, 0.02%)</title><rect x="3.7929%" y="997" width="0.0196%" height="15" fill="rgb(246,89,9)" fg:x="4260" fg:w="22"/><text x="4.0429%" y="1007.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (62 samples, 0.06%)</title><rect x="3.8294%" y="1125" width="0.0552%" height="15" fill="rgb(233,213,13)" fg:x="4301" fg:w="62"/><text x="4.0794%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (53 samples, 0.05%)</title><rect x="3.8864%" y="1125" width="0.0472%" height="15" fill="rgb(233,141,41)" fg:x="4365" fg:w="53"/><text x="4.1364%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (37 samples, 0.03%)</title><rect x="3.9335%" y="1125" width="0.0329%" height="15" fill="rgb(239,167,4)" fg:x="4418" fg:w="37"/><text x="4.1835%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.02%)</title><rect x="3.9514%" y="1109" width="0.0151%" height="15" fill="rgb(209,217,16)" fg:x="4438" fg:w="17"/><text x="4.2014%" y="1119.50"></text></g><g><title>tremor_common::time::nanotime (51 samples, 0.05%)</title><rect x="3.9665%" y="1125" width="0.0454%" height="15" fill="rgb(219,88,35)" fg:x="4455" fg:w="51"/><text x="4.2165%" y="1135.50"></text></g><g><title>std::time::SystemTime::now (51 samples, 0.05%)</title><rect x="3.9665%" y="1109" width="0.0454%" height="15" fill="rgb(220,193,23)" fg:x="4455" fg:w="51"/><text x="4.2165%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (51 samples, 0.05%)</title><rect x="3.9665%" y="1093" width="0.0454%" height="15" fill="rgb(230,90,52)" fg:x="4455" fg:w="51"/><text x="4.2165%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::now (51 samples, 0.05%)</title><rect x="3.9665%" y="1077" width="0.0454%" height="15" fill="rgb(252,106,19)" fg:x="4455" fg:w="51"/><text x="4.2165%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="4.0831%" y="1109" width="0.0294%" height="15" fill="rgb(206,74,20)" fg:x="4586" fg:w="33"/><text x="4.3331%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (33 samples, 0.03%)</title><rect x="4.0831%" y="1093" width="0.0294%" height="15" fill="rgb(230,138,44)" fg:x="4586" fg:w="33"/><text x="4.3331%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (13 samples, 0.01%)</title><rect x="4.1009%" y="1077" width="0.0116%" height="15" fill="rgb(235,182,43)" fg:x="4606" fg:w="13"/><text x="4.3509%" y="1087.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="4.1134%" y="1093" width="0.0107%" height="15" fill="rgb(242,16,51)" fg:x="4620" fg:w="12"/><text x="4.3634%" y="1103.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (13 samples, 0.01%)</title><rect x="4.1134%" y="1109" width="0.0116%" height="15" fill="rgb(248,9,4)" fg:x="4620" fg:w="13"/><text x="4.3634%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (15 samples, 0.01%)</title><rect x="4.1348%" y="1093" width="0.0134%" height="15" fill="rgb(210,31,22)" fg:x="4644" fg:w="15"/><text x="4.3848%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (162 samples, 0.14%)</title><rect x="4.0137%" y="1125" width="0.1442%" height="15" fill="rgb(239,54,39)" fg:x="4508" fg:w="162"/><text x="4.2637%" y="1135.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (26 samples, 0.02%)</title><rect x="4.1348%" y="1109" width="0.0231%" height="15" fill="rgb(230,99,41)" fg:x="4644" fg:w="26"/><text x="4.3848%" y="1119.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="4.2336%" y="1109" width="0.0205%" height="15" fill="rgb(253,106,12)" fg:x="4755" fg:w="23"/><text x="4.4836%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="4.2336%" y="1093" width="0.0205%" height="15" fill="rgb(213,46,41)" fg:x="4755" fg:w="23"/><text x="4.4836%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (23 samples, 0.02%)</title><rect x="4.2336%" y="1077" width="0.0205%" height="15" fill="rgb(215,133,35)" fg:x="4755" fg:w="23"/><text x="4.4836%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (23 samples, 0.02%)</title><rect x="4.2336%" y="1061" width="0.0205%" height="15" fill="rgb(213,28,5)" fg:x="4755" fg:w="23"/><text x="4.4836%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (23 samples, 0.02%)</title><rect x="4.2336%" y="1045" width="0.0205%" height="15" fill="rgb(215,77,49)" fg:x="4755" fg:w="23"/><text x="4.4836%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.02%)</title><rect x="4.2336%" y="1029" width="0.0205%" height="15" fill="rgb(248,100,22)" fg:x="4755" fg:w="23"/><text x="4.4836%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.02%)</title><rect x="4.2336%" y="1013" width="0.0205%" height="15" fill="rgb(208,67,9)" fg:x="4755" fg:w="23"/><text x="4.4836%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.02%)</title><rect x="4.2336%" y="997" width="0.0205%" height="15" fill="rgb(219,133,21)" fg:x="4755" fg:w="23"/><text x="4.4836%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (13 samples, 0.01%)</title><rect x="4.2425%" y="981" width="0.0116%" height="15" fill="rgb(246,46,29)" fg:x="4765" fg:w="13"/><text x="4.4925%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="4.2425%" y="965" width="0.0116%" height="15" fill="rgb(246,185,52)" fg:x="4765" fg:w="13"/><text x="4.4925%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.02%)</title><rect x="4.2541%" y="1109" width="0.0151%" height="15" fill="rgb(252,136,11)" fg:x="4778" fg:w="17"/><text x="4.5041%" y="1119.50"></text></g><g><title>core::ptr::write (17 samples, 0.02%)</title><rect x="4.2541%" y="1093" width="0.0151%" height="15" fill="rgb(219,138,53)" fg:x="4778" fg:w="17"/><text x="4.5041%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (25 samples, 0.02%)</title><rect x="4.2763%" y="1093" width="0.0223%" height="15" fill="rgb(211,51,23)" fg:x="4803" fg:w="25"/><text x="4.5263%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (25 samples, 0.02%)</title><rect x="4.2763%" y="1077" width="0.0223%" height="15" fill="rgb(247,221,28)" fg:x="4803" fg:w="25"/><text x="4.5263%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (25 samples, 0.02%)</title><rect x="4.2763%" y="1061" width="0.0223%" height="15" fill="rgb(251,222,45)" fg:x="4803" fg:w="25"/><text x="4.5263%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (157 samples, 0.14%)</title><rect x="4.1677%" y="1125" width="0.1398%" height="15" fill="rgb(217,162,53)" fg:x="4681" fg:w="157"/><text x="4.4177%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (35 samples, 0.03%)</title><rect x="4.2763%" y="1109" width="0.0312%" height="15" fill="rgb(229,93,14)" fg:x="4803" fg:w="35"/><text x="4.5263%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (47 samples, 0.04%)</title><rect x="4.3075%" y="1125" width="0.0418%" height="15" fill="rgb(209,67,49)" fg:x="4838" fg:w="47"/><text x="4.5575%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (120 samples, 0.11%)</title><rect x="4.3511%" y="1125" width="0.1068%" height="15" fill="rgb(213,87,29)" fg:x="4887" fg:w="120"/><text x="4.6011%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.03%)</title><rect x="4.4268%" y="1109" width="0.0312%" height="15" fill="rgb(205,151,52)" fg:x="4972" fg:w="35"/><text x="4.6768%" y="1119.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (35 samples, 0.03%)</title><rect x="4.4268%" y="1093" width="0.0312%" height="15" fill="rgb(253,215,39)" fg:x="4972" fg:w="35"/><text x="4.6768%" y="1103.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (43 samples, 0.04%)</title><rect x="4.4580%" y="1125" width="0.0383%" height="15" fill="rgb(221,220,41)" fg:x="5007" fg:w="43"/><text x="4.7080%" y="1135.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (77 samples, 0.07%)</title><rect x="4.4962%" y="1125" width="0.0686%" height="15" fill="rgb(218,133,21)" fg:x="5050" fg:w="77"/><text x="4.7462%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (32 samples, 0.03%)</title><rect x="4.5363%" y="1109" width="0.0285%" height="15" fill="rgb(221,193,43)" fg:x="5095" fg:w="32"/><text x="4.7863%" y="1119.50"></text></g><g><title>[anon] (4,510 samples, 4.02%)</title><rect x="0.5591%" y="1141" width="4.0155%" height="15" fill="rgb(240,128,52)" fg:x="628" fg:w="4510"/><text x="0.8091%" y="1151.50">[ano..</text></g><g><title>[libc.so.6] (38 samples, 0.03%)</title><rect x="4.5746%" y="1141" width="0.0338%" height="15" fill="rgb(253,114,12)" fg:x="5138" fg:w="38"/><text x="4.8246%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="4.6138%" y="1125" width="0.0312%" height="15" fill="rgb(215,223,47)" fg:x="5182" fg:w="35"/><text x="4.8638%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (13 samples, 0.01%)</title><rect x="4.6752%" y="1109" width="0.0116%" height="15" fill="rgb(248,225,23)" fg:x="5251" fg:w="13"/><text x="4.9252%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (78 samples, 0.07%)</title><rect x="4.6449%" y="1125" width="0.0694%" height="15" fill="rgb(250,108,0)" fg:x="5217" fg:w="78"/><text x="4.8949%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (23 samples, 0.02%)</title><rect x="4.6939%" y="1109" width="0.0205%" height="15" fill="rgb(228,208,7)" fg:x="5272" fg:w="23"/><text x="4.9439%" y="1119.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (82 samples, 0.07%)</title><rect x="4.7153%" y="1125" width="0.0730%" height="15" fill="rgb(244,45,10)" fg:x="5296" fg:w="82"/><text x="4.9653%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (82 samples, 0.07%)</title><rect x="4.7153%" y="1109" width="0.0730%" height="15" fill="rgb(207,125,25)" fg:x="5296" fg:w="82"/><text x="4.9653%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (82 samples, 0.07%)</title><rect x="4.7153%" y="1093" width="0.0730%" height="15" fill="rgb(210,195,18)" fg:x="5296" fg:w="82"/><text x="4.9653%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (82 samples, 0.07%)</title><rect x="4.7153%" y="1077" width="0.0730%" height="15" fill="rgb(249,80,12)" fg:x="5296" fg:w="82"/><text x="4.9653%" y="1087.50"></text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (16 samples, 0.01%)</title><rect x="4.7883%" y="1125" width="0.0142%" height="15" fill="rgb(221,65,9)" fg:x="5378" fg:w="16"/><text x="5.0383%" y="1135.50"></text></g><g><title>core::mem::drop (16 samples, 0.01%)</title><rect x="4.7883%" y="1109" width="0.0142%" height="15" fill="rgb(235,49,36)" fg:x="5378" fg:w="16"/><text x="5.0383%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="4.7883%" y="1093" width="0.0142%" height="15" fill="rgb(225,32,20)" fg:x="5378" fg:w="16"/><text x="5.0383%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="4.7883%" y="1077" width="0.0142%" height="15" fill="rgb(215,141,46)" fg:x="5378" fg:w="16"/><text x="5.0383%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (49 samples, 0.04%)</title><rect x="4.8221%" y="1109" width="0.0436%" height="15" fill="rgb(250,160,47)" fg:x="5416" fg:w="49"/><text x="5.0721%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (49 samples, 0.04%)</title><rect x="4.8221%" y="1093" width="0.0436%" height="15" fill="rgb(216,222,40)" fg:x="5416" fg:w="49"/><text x="5.0721%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (49 samples, 0.04%)</title><rect x="4.8221%" y="1077" width="0.0436%" height="15" fill="rgb(234,217,39)" fg:x="5416" fg:w="49"/><text x="5.0721%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (36 samples, 0.03%)</title><rect x="4.8657%" y="1109" width="0.0321%" height="15" fill="rgb(207,178,40)" fg:x="5465" fg:w="36"/><text x="5.1157%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (36 samples, 0.03%)</title><rect x="4.8657%" y="1093" width="0.0321%" height="15" fill="rgb(221,136,13)" fg:x="5465" fg:w="36"/><text x="5.1157%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (36 samples, 0.03%)</title><rect x="4.8657%" y="1077" width="0.0321%" height="15" fill="rgb(249,199,10)" fg:x="5465" fg:w="36"/><text x="5.1157%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (36 samples, 0.03%)</title><rect x="4.8657%" y="1061" width="0.0321%" height="15" fill="rgb(249,222,13)" fg:x="5465" fg:w="36"/><text x="5.1157%" y="1071.50"></text></g><g><title>__rg_dealloc (36 samples, 0.03%)</title><rect x="4.8657%" y="1045" width="0.0321%" height="15" fill="rgb(244,185,38)" fg:x="5465" fg:w="36"/><text x="5.1157%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (36 samples, 0.03%)</title><rect x="4.8657%" y="1029" width="0.0321%" height="15" fill="rgb(236,202,9)" fg:x="5465" fg:w="36"/><text x="5.1157%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (118 samples, 0.11%)</title><rect x="4.8025%" y="1125" width="0.1051%" height="15" fill="rgb(250,229,37)" fg:x="5394" fg:w="118"/><text x="5.0525%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (23 samples, 0.02%)</title><rect x="4.9076%" y="1125" width="0.0205%" height="15" fill="rgb(206,174,23)" fg:x="5512" fg:w="23"/><text x="5.1576%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (16 samples, 0.01%)</title><rect x="4.9281%" y="1125" width="0.0142%" height="15" fill="rgb(211,33,43)" fg:x="5535" fg:w="16"/><text x="5.1781%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIter&lt;T&gt;::drop_elements (18 samples, 0.02%)</title><rect x="4.9423%" y="1125" width="0.0160%" height="15" fill="rgb(245,58,50)" fg:x="5551" fg:w="18"/><text x="5.1923%" y="1135.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (17 samples, 0.02%)</title><rect x="4.9583%" y="1125" width="0.0151%" height="15" fill="rgb(244,68,36)" fg:x="5569" fg:w="17"/><text x="5.2083%" y="1135.50"></text></g><g><title>[tremor-pdk-box] (458 samples, 0.41%)</title><rect x="4.6084%" y="1141" width="0.4078%" height="15" fill="rgb(232,229,15)" fg:x="5176" fg:w="458"/><text x="4.8584%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (35 samples, 0.03%)</title><rect x="4.9850%" y="1125" width="0.0312%" height="15" fill="rgb(254,30,23)" fg:x="5599" fg:w="35"/><text x="5.2350%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (20 samples, 0.02%)</title><rect x="4.9984%" y="1109" width="0.0178%" height="15" fill="rgb(235,160,14)" fg:x="5614" fg:w="20"/><text x="5.2484%" y="1119.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (20 samples, 0.02%)</title><rect x="4.9984%" y="1093" width="0.0178%" height="15" fill="rgb(212,155,44)" fg:x="5614" fg:w="20"/><text x="5.2484%" y="1103.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="4.9984%" y="1077" width="0.0178%" height="15" fill="rgb(226,2,50)" fg:x="5614" fg:w="20"/><text x="5.2484%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="4.9984%" y="1061" width="0.0178%" height="15" fill="rgb(234,177,6)" fg:x="5614" fg:w="20"/><text x="5.2484%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="4.9984%" y="1045" width="0.0178%" height="15" fill="rgb(217,24,9)" fg:x="5614" fg:w="20"/><text x="5.2484%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="5.0046%" y="1029" width="0.0116%" height="15" fill="rgb(220,13,46)" fg:x="5621" fg:w="13"/><text x="5.2546%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="5.0046%" y="1013" width="0.0116%" height="15" fill="rgb(239,221,27)" fg:x="5621" fg:w="13"/><text x="5.2546%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="5.0046%" y="997" width="0.0116%" height="15" fill="rgb(222,198,25)" fg:x="5621" fg:w="13"/><text x="5.2546%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="5.0046%" y="981" width="0.0116%" height="15" fill="rgb(211,99,13)" fg:x="5621" fg:w="13"/><text x="5.2546%" y="991.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="5.0046%" y="965" width="0.0116%" height="15" fill="rgb(232,111,31)" fg:x="5621" fg:w="13"/><text x="5.2546%" y="975.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="5.0046%" y="949" width="0.0116%" height="15" fill="rgb(245,82,37)" fg:x="5621" fg:w="13"/><text x="5.2546%" y="959.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (25 samples, 0.02%)</title><rect x="5.1070%" y="1109" width="0.0223%" height="15" fill="rgb(227,149,46)" fg:x="5736" fg:w="25"/><text x="5.3570%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (18 samples, 0.02%)</title><rect x="5.1293%" y="1077" width="0.0160%" height="15" fill="rgb(218,36,50)" fg:x="5761" fg:w="18"/><text x="5.3793%" y="1087.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (18 samples, 0.02%)</title><rect x="5.1293%" y="1061" width="0.0160%" height="15" fill="rgb(226,80,48)" fg:x="5761" fg:w="18"/><text x="5.3793%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (18 samples, 0.02%)</title><rect x="5.1293%" y="1045" width="0.0160%" height="15" fill="rgb(238,224,15)" fg:x="5761" fg:w="18"/><text x="5.3793%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (18 samples, 0.02%)</title><rect x="5.1293%" y="1029" width="0.0160%" height="15" fill="rgb(241,136,10)" fg:x="5761" fg:w="18"/><text x="5.3793%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="5.1293%" y="1013" width="0.0160%" height="15" fill="rgb(208,32,45)" fg:x="5761" fg:w="18"/><text x="5.3793%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="5.1293%" y="997" width="0.0160%" height="15" fill="rgb(207,135,9)" fg:x="5761" fg:w="18"/><text x="5.3793%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (18 samples, 0.02%)</title><rect x="5.1293%" y="981" width="0.0160%" height="15" fill="rgb(206,86,44)" fg:x="5761" fg:w="18"/><text x="5.3793%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="5.1293%" y="965" width="0.0160%" height="15" fill="rgb(245,177,15)" fg:x="5761" fg:w="18"/><text x="5.3793%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="5.1293%" y="949" width="0.0160%" height="15" fill="rgb(206,64,50)" fg:x="5761" fg:w="18"/><text x="5.3793%" y="959.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="5.1293%" y="933" width="0.0160%" height="15" fill="rgb(234,36,40)" fg:x="5761" fg:w="18"/><text x="5.3793%" y="943.50"></text></g><g><title>__rg_alloc (18 samples, 0.02%)</title><rect x="5.1293%" y="917" width="0.0160%" height="15" fill="rgb(213,64,8)" fg:x="5761" fg:w="18"/><text x="5.3793%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (18 samples, 0.02%)</title><rect x="5.1293%" y="901" width="0.0160%" height="15" fill="rgb(210,75,36)" fg:x="5761" fg:w="18"/><text x="5.3793%" y="911.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (177 samples, 0.16%)</title><rect x="5.0162%" y="1125" width="0.1576%" height="15" fill="rgb(229,88,21)" fg:x="5634" fg:w="177"/><text x="5.2662%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (50 samples, 0.04%)</title><rect x="5.1293%" y="1109" width="0.0445%" height="15" fill="rgb(252,204,47)" fg:x="5761" fg:w="50"/><text x="5.3793%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (50 samples, 0.04%)</title><rect x="5.1293%" y="1093" width="0.0445%" height="15" fill="rgb(208,77,27)" fg:x="5761" fg:w="50"/><text x="5.3793%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (32 samples, 0.03%)</title><rect x="5.1453%" y="1077" width="0.0285%" height="15" fill="rgb(221,76,26)" fg:x="5779" fg:w="32"/><text x="5.3953%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (24 samples, 0.02%)</title><rect x="5.1524%" y="1061" width="0.0214%" height="15" fill="rgb(225,139,18)" fg:x="5787" fg:w="24"/><text x="5.4024%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="5.1524%" y="1045" width="0.0214%" height="15" fill="rgb(230,137,11)" fg:x="5787" fg:w="24"/><text x="5.4024%" y="1055.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="5.1524%" y="1029" width="0.0214%" height="15" fill="rgb(212,28,1)" fg:x="5787" fg:w="24"/><text x="5.4024%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (36 samples, 0.03%)</title><rect x="5.1952%" y="1109" width="0.0321%" height="15" fill="rgb(248,164,17)" fg:x="5835" fg:w="36"/><text x="5.4452%" y="1119.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (36 samples, 0.03%)</title><rect x="5.1952%" y="1093" width="0.0321%" height="15" fill="rgb(222,171,42)" fg:x="5835" fg:w="36"/><text x="5.4452%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (36 samples, 0.03%)</title><rect x="5.1952%" y="1077" width="0.0321%" height="15" fill="rgb(243,84,45)" fg:x="5835" fg:w="36"/><text x="5.4452%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (36 samples, 0.03%)</title><rect x="5.1952%" y="1061" width="0.0321%" height="15" fill="rgb(252,49,23)" fg:x="5835" fg:w="36"/><text x="5.4452%" y="1071.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (66 samples, 0.06%)</title><rect x="5.1738%" y="1125" width="0.0588%" height="15" fill="rgb(215,19,7)" fg:x="5811" fg:w="66"/><text x="5.4238%" y="1135.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (13 samples, 0.01%)</title><rect x="5.3314%" y="1093" width="0.0116%" height="15" fill="rgb(238,81,41)" fg:x="5988" fg:w="13"/><text x="5.5814%" y="1103.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (38 samples, 0.03%)</title><rect x="5.3145%" y="1109" width="0.0338%" height="15" fill="rgb(210,199,37)" fg:x="5969" fg:w="38"/><text x="5.5645%" y="1119.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (128 samples, 0.11%)</title><rect x="5.2361%" y="1125" width="0.1140%" height="15" fill="rgb(244,192,49)" fg:x="5881" fg:w="128"/><text x="5.4861%" y="1135.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="5.3501%" y="1125" width="0.0116%" height="15" fill="rgb(226,211,11)" fg:x="6009" fg:w="13"/><text x="5.6001%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (25 samples, 0.02%)</title><rect x="5.5112%" y="533" width="0.0223%" height="15" fill="rgb(236,162,54)" fg:x="6190" fg:w="25"/><text x="5.7612%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (28 samples, 0.02%)</title><rect x="5.6403%" y="469" width="0.0249%" height="15" fill="rgb(220,229,9)" fg:x="6335" fg:w="28"/><text x="5.8903%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="5.6777%" y="421" width="0.0160%" height="15" fill="rgb(250,87,22)" fg:x="6377" fg:w="18"/><text x="5.9277%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="5.7579%" y="117" width="0.0160%" height="15" fill="rgb(239,43,17)" fg:x="6467" fg:w="18"/><text x="6.0079%" y="127.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="5.7579%" y="101" width="0.0160%" height="15" fill="rgb(231,177,25)" fg:x="6467" fg:w="18"/><text x="6.0079%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (32 samples, 0.03%)</title><rect x="5.7525%" y="165" width="0.0285%" height="15" fill="rgb(219,179,1)" fg:x="6461" fg:w="32"/><text x="6.0025%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (32 samples, 0.03%)</title><rect x="5.7525%" y="149" width="0.0285%" height="15" fill="rgb(238,219,53)" fg:x="6461" fg:w="32"/><text x="6.0025%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (32 samples, 0.03%)</title><rect x="5.7525%" y="133" width="0.0285%" height="15" fill="rgb(232,167,36)" fg:x="6461" fg:w="32"/><text x="6.0025%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (56 samples, 0.05%)</title><rect x="5.7409%" y="197" width="0.0499%" height="15" fill="rgb(244,19,51)" fg:x="6448" fg:w="56"/><text x="5.9909%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (56 samples, 0.05%)</title><rect x="5.7409%" y="181" width="0.0499%" height="15" fill="rgb(224,6,22)" fg:x="6448" fg:w="56"/><text x="5.9909%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (69 samples, 0.06%)</title><rect x="5.7365%" y="245" width="0.0614%" height="15" fill="rgb(224,145,5)" fg:x="6443" fg:w="69"/><text x="5.9865%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (64 samples, 0.06%)</title><rect x="5.7409%" y="229" width="0.0570%" height="15" fill="rgb(234,130,49)" fg:x="6448" fg:w="64"/><text x="5.9909%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (64 samples, 0.06%)</title><rect x="5.7409%" y="213" width="0.0570%" height="15" fill="rgb(254,6,2)" fg:x="6448" fg:w="64"/><text x="5.9909%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (95 samples, 0.08%)</title><rect x="5.7151%" y="389" width="0.0846%" height="15" fill="rgb(208,96,46)" fg:x="6419" fg:w="95"/><text x="5.9651%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (95 samples, 0.08%)</title><rect x="5.7151%" y="373" width="0.0846%" height="15" fill="rgb(239,3,39)" fg:x="6419" fg:w="95"/><text x="5.9651%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (95 samples, 0.08%)</title><rect x="5.7151%" y="357" width="0.0846%" height="15" fill="rgb(233,210,1)" fg:x="6419" fg:w="95"/><text x="5.9651%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (95 samples, 0.08%)</title><rect x="5.7151%" y="341" width="0.0846%" height="15" fill="rgb(244,137,37)" fg:x="6419" fg:w="95"/><text x="5.9651%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (95 samples, 0.08%)</title><rect x="5.7151%" y="325" width="0.0846%" height="15" fill="rgb(240,136,2)" fg:x="6419" fg:w="95"/><text x="5.9651%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (86 samples, 0.08%)</title><rect x="5.7231%" y="309" width="0.0766%" height="15" fill="rgb(239,18,37)" fg:x="6428" fg:w="86"/><text x="5.9731%" y="319.50"></text></g><g><title>__rg_dealloc (86 samples, 0.08%)</title><rect x="5.7231%" y="293" width="0.0766%" height="15" fill="rgb(218,185,22)" fg:x="6428" fg:w="86"/><text x="5.9731%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (86 samples, 0.08%)</title><rect x="5.7231%" y="277" width="0.0766%" height="15" fill="rgb(225,218,4)" fg:x="6428" fg:w="86"/><text x="5.9731%" y="287.50"></text></g><g><title>rust_dealloc (80 samples, 0.07%)</title><rect x="5.7285%" y="261" width="0.0712%" height="15" fill="rgb(230,182,32)" fg:x="6434" fg:w="80"/><text x="5.9785%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (157 samples, 0.14%)</title><rect x="5.6662%" y="469" width="0.1398%" height="15" fill="rgb(242,56,43)" fg:x="6364" fg:w="157"/><text x="5.9162%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (155 samples, 0.14%)</title><rect x="5.6679%" y="453" width="0.1380%" height="15" fill="rgb(233,99,24)" fg:x="6366" fg:w="155"/><text x="5.9179%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (144 samples, 0.13%)</title><rect x="5.6777%" y="437" width="0.1282%" height="15" fill="rgb(234,209,42)" fg:x="6377" fg:w="144"/><text x="5.9277%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (109 samples, 0.10%)</title><rect x="5.7089%" y="421" width="0.0970%" height="15" fill="rgb(227,7,12)" fg:x="6412" fg:w="109"/><text x="5.9589%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (109 samples, 0.10%)</title><rect x="5.7089%" y="405" width="0.0970%" height="15" fill="rgb(245,203,43)" fg:x="6412" fg:w="109"/><text x="5.9589%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (193 samples, 0.17%)</title><rect x="5.6403%" y="485" width="0.1718%" height="15" fill="rgb(238,205,33)" fg:x="6335" fg:w="193"/><text x="5.8903%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (87 samples, 0.08%)</title><rect x="5.8122%" y="485" width="0.0775%" height="15" fill="rgb(231,56,7)" fg:x="6528" fg:w="87"/><text x="6.0622%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (60 samples, 0.05%)</title><rect x="5.8362%" y="469" width="0.0534%" height="15" fill="rgb(244,186,29)" fg:x="6555" fg:w="60"/><text x="6.0862%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (60 samples, 0.05%)</title><rect x="5.8362%" y="453" width="0.0534%" height="15" fill="rgb(234,111,31)" fg:x="6555" fg:w="60"/><text x="6.0862%" y="463.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="5.9404%" y="293" width="0.0107%" height="15" fill="rgb(241,149,10)" fg:x="6672" fg:w="12"/><text x="6.1904%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::empty (37 samples, 0.03%)</title><rect x="5.9715%" y="277" width="0.0329%" height="15" fill="rgb(249,206,44)" fg:x="6707" fg:w="37"/><text x="6.2215%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (37 samples, 0.03%)</title><rect x="5.9715%" y="261" width="0.0329%" height="15" fill="rgb(251,153,30)" fg:x="6707" fg:w="37"/><text x="6.2215%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (483 samples, 0.43%)</title><rect x="5.9359%" y="325" width="0.4300%" height="15" fill="rgb(239,152,38)" fg:x="6667" fg:w="483"/><text x="6.1859%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (478 samples, 0.43%)</title><rect x="5.9404%" y="309" width="0.4256%" height="15" fill="rgb(249,139,47)" fg:x="6672" fg:w="478"/><text x="6.1904%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (462 samples, 0.41%)</title><rect x="5.9546%" y="293" width="0.4113%" height="15" fill="rgb(244,64,35)" fg:x="6688" fg:w="462"/><text x="6.2046%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (406 samples, 0.36%)</title><rect x="6.0045%" y="277" width="0.3615%" height="15" fill="rgb(216,46,15)" fg:x="6744" fg:w="406"/><text x="6.2545%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (406 samples, 0.36%)</title><rect x="6.0045%" y="261" width="0.3615%" height="15" fill="rgb(250,74,19)" fg:x="6744" fg:w="406"/><text x="6.2545%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (521 samples, 0.46%)</title><rect x="5.9092%" y="421" width="0.4639%" height="15" fill="rgb(249,42,33)" fg:x="6637" fg:w="521"/><text x="6.1592%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (521 samples, 0.46%)</title><rect x="5.9092%" y="405" width="0.4639%" height="15" fill="rgb(242,149,17)" fg:x="6637" fg:w="521"/><text x="6.1592%" y="415.50"></text></g><g><title>alloc::alloc::alloc (508 samples, 0.45%)</title><rect x="5.9208%" y="389" width="0.4523%" height="15" fill="rgb(244,29,21)" fg:x="6650" fg:w="508"/><text x="6.1708%" y="399.50"></text></g><g><title>__rg_alloc (508 samples, 0.45%)</title><rect x="5.9208%" y="373" width="0.4523%" height="15" fill="rgb(220,130,37)" fg:x="6650" fg:w="508"/><text x="6.1708%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (508 samples, 0.45%)</title><rect x="5.9208%" y="357" width="0.4523%" height="15" fill="rgb(211,67,2)" fg:x="6650" fg:w="508"/><text x="6.1708%" y="367.50"></text></g><g><title>rust_alloc (494 samples, 0.44%)</title><rect x="5.9333%" y="341" width="0.4398%" height="15" fill="rgb(235,68,52)" fg:x="6664" fg:w="494"/><text x="6.1833%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (984 samples, 0.88%)</title><rect x="5.5068%" y="629" width="0.8761%" height="15" fill="rgb(246,142,3)" fg:x="6185" fg:w="984"/><text x="5.7568%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (984 samples, 0.88%)</title><rect x="5.5068%" y="613" width="0.8761%" height="15" fill="rgb(241,25,7)" fg:x="6185" fg:w="984"/><text x="5.7568%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (984 samples, 0.88%)</title><rect x="5.5068%" y="597" width="0.8761%" height="15" fill="rgb(242,119,39)" fg:x="6185" fg:w="984"/><text x="5.7568%" y="607.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (984 samples, 0.88%)</title><rect x="5.5068%" y="581" width="0.8761%" height="15" fill="rgb(241,98,45)" fg:x="6185" fg:w="984"/><text x="5.7568%" y="591.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (979 samples, 0.87%)</title><rect x="5.5112%" y="565" width="0.8716%" height="15" fill="rgb(254,28,30)" fg:x="6190" fg:w="979"/><text x="5.7612%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (979 samples, 0.87%)</title><rect x="5.5112%" y="549" width="0.8716%" height="15" fill="rgb(241,142,54)" fg:x="6190" fg:w="979"/><text x="5.7612%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (954 samples, 0.85%)</title><rect x="5.5335%" y="533" width="0.8494%" height="15" fill="rgb(222,85,15)" fg:x="6215" fg:w="954"/><text x="5.7835%" y="543.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (954 samples, 0.85%)</title><rect x="5.5335%" y="517" width="0.8494%" height="15" fill="rgb(210,85,47)" fg:x="6215" fg:w="954"/><text x="5.7835%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (834 samples, 0.74%)</title><rect x="5.6403%" y="501" width="0.7425%" height="15" fill="rgb(224,206,25)" fg:x="6335" fg:w="834"/><text x="5.8903%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (549 samples, 0.49%)</title><rect x="5.8941%" y="485" width="0.4888%" height="15" fill="rgb(243,201,19)" fg:x="6620" fg:w="549"/><text x="6.1441%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (549 samples, 0.49%)</title><rect x="5.8941%" y="469" width="0.4888%" height="15" fill="rgb(236,59,4)" fg:x="6620" fg:w="549"/><text x="6.1441%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (538 samples, 0.48%)</title><rect x="5.9039%" y="453" width="0.4790%" height="15" fill="rgb(254,179,45)" fg:x="6631" fg:w="538"/><text x="6.1539%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (532 samples, 0.47%)</title><rect x="5.9092%" y="437" width="0.4737%" height="15" fill="rgb(226,14,10)" fg:x="6637" fg:w="532"/><text x="6.1592%" y="447.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,010 samples, 0.90%)</title><rect x="6.4185%" y="597" width="0.8992%" height="15" fill="rgb(244,27,41)" fg:x="7209" fg:w="1010"/><text x="6.6685%" y="607.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="7.3186%" y="549" width="0.0116%" height="15" fill="rgb(235,35,32)" fg:x="8220" fg:w="13"/><text x="7.5686%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (12 samples, 0.01%)</title><rect x="7.3382%" y="533" width="0.0107%" height="15" fill="rgb(218,68,31)" fg:x="8242" fg:w="12"/><text x="7.5882%" y="543.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (12 samples, 0.01%)</title><rect x="7.3382%" y="517" width="0.0107%" height="15" fill="rgb(207,120,37)" fg:x="8242" fg:w="12"/><text x="7.5882%" y="527.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (12 samples, 0.01%)</title><rect x="7.3382%" y="501" width="0.0107%" height="15" fill="rgb(227,98,0)" fg:x="8242" fg:w="12"/><text x="7.5882%" y="511.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="7.3382%" y="485" width="0.0107%" height="15" fill="rgb(207,7,3)" fg:x="8242" fg:w="12"/><text x="7.5882%" y="495.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="7.3382%" y="469" width="0.0107%" height="15" fill="rgb(206,98,19)" fg:x="8242" fg:w="12"/><text x="7.5882%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (12 samples, 0.01%)</title><rect x="7.3543%" y="469" width="0.0107%" height="15" fill="rgb(217,5,26)" fg:x="8260" fg:w="12"/><text x="7.6043%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (12 samples, 0.01%)</title><rect x="7.3543%" y="453" width="0.0107%" height="15" fill="rgb(235,190,38)" fg:x="8260" fg:w="12"/><text x="7.6043%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (12 samples, 0.01%)</title><rect x="7.3543%" y="437" width="0.0107%" height="15" fill="rgb(247,86,24)" fg:x="8260" fg:w="12"/><text x="7.6043%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (14 samples, 0.01%)</title><rect x="7.3534%" y="485" width="0.0125%" height="15" fill="rgb(205,101,16)" fg:x="8259" fg:w="14"/><text x="7.6034%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (24 samples, 0.02%)</title><rect x="7.3489%" y="501" width="0.0214%" height="15" fill="rgb(246,168,33)" fg:x="8254" fg:w="24"/><text x="7.5989%" y="511.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (14 samples, 0.01%)</title><rect x="7.3774%" y="485" width="0.0125%" height="15" fill="rgb(231,114,1)" fg:x="8286" fg:w="14"/><text x="7.6274%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (142 samples, 0.13%)</title><rect x="7.3489%" y="533" width="0.1264%" height="15" fill="rgb(207,184,53)" fg:x="8254" fg:w="142"/><text x="7.5989%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (142 samples, 0.13%)</title><rect x="7.3489%" y="517" width="0.1264%" height="15" fill="rgb(224,95,51)" fg:x="8254" fg:w="142"/><text x="7.5989%" y="527.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (118 samples, 0.11%)</title><rect x="7.3703%" y="501" width="0.1051%" height="15" fill="rgb(212,188,45)" fg:x="8278" fg:w="118"/><text x="7.6203%" y="511.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (96 samples, 0.09%)</title><rect x="7.3899%" y="485" width="0.0855%" height="15" fill="rgb(223,154,38)" fg:x="8300" fg:w="96"/><text x="7.6399%" y="495.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (96 samples, 0.09%)</title><rect x="7.3899%" y="469" width="0.0855%" height="15" fill="rgb(251,22,52)" fg:x="8300" fg:w="96"/><text x="7.6399%" y="479.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (96 samples, 0.09%)</title><rect x="7.3899%" y="453" width="0.0855%" height="15" fill="rgb(229,209,22)" fg:x="8300" fg:w="96"/><text x="7.6399%" y="463.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (15 samples, 0.01%)</title><rect x="7.4834%" y="501" width="0.0134%" height="15" fill="rgb(234,138,34)" fg:x="8405" fg:w="15"/><text x="7.7334%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (15 samples, 0.01%)</title><rect x="7.4834%" y="485" width="0.0134%" height="15" fill="rgb(212,95,11)" fg:x="8405" fg:w="15"/><text x="7.7334%" y="495.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="7.4834%" y="469" width="0.0134%" height="15" fill="rgb(240,179,47)" fg:x="8405" fg:w="15"/><text x="7.7334%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="7.4753%" y="533" width="0.0321%" height="15" fill="rgb(240,163,11)" fg:x="8396" fg:w="36"/><text x="7.7253%" y="543.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (29 samples, 0.03%)</title><rect x="7.4816%" y="517" width="0.0258%" height="15" fill="rgb(236,37,12)" fg:x="8403" fg:w="29"/><text x="7.7316%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (15 samples, 0.01%)</title><rect x="7.5181%" y="485" width="0.0134%" height="15" fill="rgb(232,164,16)" fg:x="8444" fg:w="15"/><text x="7.7681%" y="495.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (14 samples, 0.01%)</title><rect x="7.5190%" y="469" width="0.0125%" height="15" fill="rgb(244,205,15)" fg:x="8445" fg:w="14"/><text x="7.7690%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.03%)</title><rect x="7.5074%" y="533" width="0.0347%" height="15" fill="rgb(223,117,47)" fg:x="8432" fg:w="39"/><text x="7.7574%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="7.5083%" y="517" width="0.0338%" height="15" fill="rgb(244,107,35)" fg:x="8433" fg:w="38"/><text x="7.7583%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (32 samples, 0.03%)</title><rect x="7.5136%" y="501" width="0.0285%" height="15" fill="rgb(205,140,8)" fg:x="8439" fg:w="32"/><text x="7.7636%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (21 samples, 0.02%)</title><rect x="7.5421%" y="533" width="0.0187%" height="15" fill="rgb(228,84,46)" fg:x="8471" fg:w="21"/><text x="7.7921%" y="543.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (21 samples, 0.02%)</title><rect x="7.5421%" y="517" width="0.0187%" height="15" fill="rgb(254,188,9)" fg:x="8471" fg:w="21"/><text x="7.7921%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (531 samples, 0.47%)</title><rect x="7.3186%" y="581" width="0.4728%" height="15" fill="rgb(206,112,54)" fg:x="8220" fg:w="531"/><text x="7.5686%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (531 samples, 0.47%)</title><rect x="7.3186%" y="565" width="0.4728%" height="15" fill="rgb(216,84,49)" fg:x="8220" fg:w="531"/><text x="7.5686%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (513 samples, 0.46%)</title><rect x="7.3347%" y="549" width="0.4567%" height="15" fill="rgb(214,194,35)" fg:x="8238" fg:w="513"/><text x="7.5847%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::take (259 samples, 0.23%)</title><rect x="7.5608%" y="533" width="0.2306%" height="15" fill="rgb(249,28,3)" fg:x="8492" fg:w="259"/><text x="7.8108%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (259 samples, 0.23%)</title><rect x="7.5608%" y="517" width="0.2306%" height="15" fill="rgb(222,56,52)" fg:x="8492" fg:w="259"/><text x="7.8108%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (2,574 samples, 2.29%)</title><rect x="5.5068%" y="981" width="2.2917%" height="15" fill="rgb(245,217,50)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="991.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,574 samples, 2.29%)</title><rect x="5.5068%" y="965" width="2.2917%" height="15" fill="rgb(213,201,24)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="975.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (2,574 samples, 2.29%)</title><rect x="5.5068%" y="949" width="2.2917%" height="15" fill="rgb(248,116,28)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="959.50">t..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,574 samples, 2.29%)</title><rect x="5.5068%" y="933" width="2.2917%" height="15" fill="rgb(219,72,43)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="943.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,574 samples, 2.29%)</title><rect x="5.5068%" y="917" width="2.2917%" height="15" fill="rgb(209,138,14)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="927.50">&lt;..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (2,574 samples, 2.29%)</title><rect x="5.5068%" y="901" width="2.2917%" height="15" fill="rgb(222,18,33)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="911.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,574 samples, 2.29%)</title><rect x="5.5068%" y="885" width="2.2917%" height="15" fill="rgb(213,199,7)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="895.50">&lt;..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (2,574 samples, 2.29%)</title><rect x="5.5068%" y="869" width="2.2917%" height="15" fill="rgb(250,110,10)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="879.50">a..</text></g><g><title>std::panic::catch_unwind (2,574 samples, 2.29%)</title><rect x="5.5068%" y="853" width="2.2917%" height="15" fill="rgb(248,123,6)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="863.50">s..</text></g><g><title>std::panicking::try (2,574 samples, 2.29%)</title><rect x="5.5068%" y="837" width="2.2917%" height="15" fill="rgb(206,91,31)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="847.50">s..</text></g><g><title>std::panicking::try::do_call (2,574 samples, 2.29%)</title><rect x="5.5068%" y="821" width="2.2917%" height="15" fill="rgb(211,154,13)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="831.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,574 samples, 2.29%)</title><rect x="5.5068%" y="805" width="2.2917%" height="15" fill="rgb(225,148,7)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="815.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once (2,574 samples, 2.29%)</title><rect x="5.5068%" y="789" width="2.2917%" height="15" fill="rgb(220,160,43)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="799.50">c..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (2,574 samples, 2.29%)</title><rect x="5.5068%" y="773" width="2.2917%" height="15" fill="rgb(213,52,39)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="783.50">a..</text></g><g><title>async_ffi::FfiContext::with_context (2,574 samples, 2.29%)</title><rect x="5.5068%" y="757" width="2.2917%" height="15" fill="rgb(243,137,7)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="767.50">a..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (2,574 samples, 2.29%)</title><rect x="5.5068%" y="741" width="2.2917%" height="15" fill="rgb(230,79,13)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="751.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,574 samples, 2.29%)</title><rect x="5.5068%" y="725" width="2.2917%" height="15" fill="rgb(247,105,23)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="735.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (2,574 samples, 2.29%)</title><rect x="5.5068%" y="709" width="2.2917%" height="15" fill="rgb(223,179,41)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="719.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (2,574 samples, 2.29%)</title><rect x="5.5068%" y="693" width="2.2917%" height="15" fill="rgb(218,9,34)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="703.50">t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (2,574 samples, 2.29%)</title><rect x="5.5068%" y="677" width="2.2917%" height="15" fill="rgb(222,106,8)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="687.50">t..</text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (2,574 samples, 2.29%)</title><rect x="5.5068%" y="661" width="2.2917%" height="15" fill="rgb(211,220,0)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="671.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (2,574 samples, 2.29%)</title><rect x="5.5068%" y="645" width="2.2917%" height="15" fill="rgb(229,52,16)" fg:x="6185" fg:w="2574"/><text x="5.7568%" y="655.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,590 samples, 1.42%)</title><rect x="6.3829%" y="629" width="1.4156%" height="15" fill="rgb(212,155,18)" fg:x="7169" fg:w="1590"/><text x="6.6329%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (1,590 samples, 1.42%)</title><rect x="6.3829%" y="613" width="1.4156%" height="15" fill="rgb(242,21,14)" fg:x="7169" fg:w="1590"/><text x="6.6329%" y="623.50"></text></g><g><title>rust_alloc (540 samples, 0.48%)</title><rect x="7.3177%" y="597" width="0.4808%" height="15" fill="rgb(222,19,48)" fg:x="8219" fg:w="540"/><text x="7.5677%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="7.7985%" y="933" width="0.0107%" height="15" fill="rgb(232,45,27)" fg:x="8759" fg:w="12"/><text x="8.0485%" y="943.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (12 samples, 0.01%)</title><rect x="7.7985%" y="917" width="0.0107%" height="15" fill="rgb(249,103,42)" fg:x="8759" fg:w="12"/><text x="8.0485%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="7.7985%" y="901" width="0.0107%" height="15" fill="rgb(246,81,33)" fg:x="8759" fg:w="12"/><text x="8.0485%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (12 samples, 0.01%)</title><rect x="7.7985%" y="885" width="0.0107%" height="15" fill="rgb(252,33,42)" fg:x="8759" fg:w="12"/><text x="8.0485%" y="895.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="7.7985%" y="869" width="0.0107%" height="15" fill="rgb(209,212,41)" fg:x="8759" fg:w="12"/><text x="8.0485%" y="879.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (12 samples, 0.01%)</title><rect x="7.7985%" y="853" width="0.0107%" height="15" fill="rgb(207,154,6)" fg:x="8759" fg:w="12"/><text x="8.0485%" y="863.50"></text></g><g><title>event_listener::Event::notify (12 samples, 0.01%)</title><rect x="7.7985%" y="837" width="0.0107%" height="15" fill="rgb(223,64,47)" fg:x="8759" fg:w="12"/><text x="8.0485%" y="847.50"></text></g><g><title>event_listener::List::notify (12 samples, 0.01%)</title><rect x="7.7985%" y="821" width="0.0107%" height="15" fill="rgb(211,161,38)" fg:x="8759" fg:w="12"/><text x="8.0485%" y="831.50"></text></g><g><title>core::task::wake::Waker::wake (12 samples, 0.01%)</title><rect x="7.7985%" y="805" width="0.0107%" height="15" fill="rgb(219,138,40)" fg:x="8759" fg:w="12"/><text x="8.0485%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (12 samples, 0.01%)</title><rect x="7.7985%" y="789" width="0.0107%" height="15" fill="rgb(241,228,46)" fg:x="8759" fg:w="12"/><text x="8.0485%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (12 samples, 0.01%)</title><rect x="7.7985%" y="773" width="0.0107%" height="15" fill="rgb(223,209,38)" fg:x="8759" fg:w="12"/><text x="8.0485%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (47 samples, 0.04%)</title><rect x="7.8092%" y="901" width="0.0418%" height="15" fill="rgb(236,164,45)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (47 samples, 0.04%)</title><rect x="7.8092%" y="885" width="0.0418%" height="15" fill="rgb(231,15,5)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (47 samples, 0.04%)</title><rect x="7.8092%" y="869" width="0.0418%" height="15" fill="rgb(252,35,15)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (47 samples, 0.04%)</title><rect x="7.8092%" y="853" width="0.0418%" height="15" fill="rgb(248,181,18)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47 samples, 0.04%)</title><rect x="7.8092%" y="837" width="0.0418%" height="15" fill="rgb(233,39,42)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (47 samples, 0.04%)</title><rect x="7.8092%" y="821" width="0.0418%" height="15" fill="rgb(238,110,33)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47 samples, 0.04%)</title><rect x="7.8092%" y="805" width="0.0418%" height="15" fill="rgb(233,195,10)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (47 samples, 0.04%)</title><rect x="7.8092%" y="789" width="0.0418%" height="15" fill="rgb(254,105,3)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (47 samples, 0.04%)</title><rect x="7.8092%" y="773" width="0.0418%" height="15" fill="rgb(221,225,9)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (47 samples, 0.04%)</title><rect x="7.8092%" y="757" width="0.0418%" height="15" fill="rgb(224,227,45)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (47 samples, 0.04%)</title><rect x="7.8092%" y="741" width="0.0418%" height="15" fill="rgb(229,198,43)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (47 samples, 0.04%)</title><rect x="7.8092%" y="725" width="0.0418%" height="15" fill="rgb(206,209,35)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="735.50"></text></g><g><title>alloc::alloc::alloc (47 samples, 0.04%)</title><rect x="7.8092%" y="709" width="0.0418%" height="15" fill="rgb(245,195,53)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="719.50"></text></g><g><title>__rg_alloc (47 samples, 0.04%)</title><rect x="7.8092%" y="693" width="0.0418%" height="15" fill="rgb(240,92,26)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="703.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (47 samples, 0.04%)</title><rect x="7.8092%" y="677" width="0.0418%" height="15" fill="rgb(207,40,23)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="687.50"></text></g><g><title>rust_alloc (47 samples, 0.04%)</title><rect x="7.8092%" y="661" width="0.0418%" height="15" fill="rgb(223,111,35)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="7.8092%" y="645" width="0.0418%" height="15" fill="rgb(229,147,28)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="7.8092%" y="629" width="0.0418%" height="15" fill="rgb(211,29,28)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="7.8092%" y="613" width="0.0418%" height="15" fill="rgb(228,72,33)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="7.8092%" y="597" width="0.0418%" height="15" fill="rgb(205,214,31)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (47 samples, 0.04%)</title><rect x="7.8092%" y="581" width="0.0418%" height="15" fill="rgb(224,111,15)" fg:x="8771" fg:w="47"/><text x="8.0592%" y="591.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (37 samples, 0.03%)</title><rect x="7.8181%" y="565" width="0.0329%" height="15" fill="rgb(253,21,26)" fg:x="8781" fg:w="37"/><text x="8.0681%" y="575.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (31 samples, 0.03%)</title><rect x="7.8235%" y="549" width="0.0276%" height="15" fill="rgb(245,139,43)" fg:x="8787" fg:w="31"/><text x="8.0735%" y="559.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (31 samples, 0.03%)</title><rect x="7.8235%" y="533" width="0.0276%" height="15" fill="rgb(252,170,7)" fg:x="8787" fg:w="31"/><text x="8.0735%" y="543.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (31 samples, 0.03%)</title><rect x="7.8235%" y="517" width="0.0276%" height="15" fill="rgb(231,118,14)" fg:x="8787" fg:w="31"/><text x="8.0735%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (70 samples, 0.06%)</title><rect x="7.8511%" y="501" width="0.0623%" height="15" fill="rgb(238,83,0)" fg:x="8818" fg:w="70"/><text x="8.1011%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (70 samples, 0.06%)</title><rect x="7.8511%" y="485" width="0.0623%" height="15" fill="rgb(221,39,39)" fg:x="8818" fg:w="70"/><text x="8.1011%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (59 samples, 0.05%)</title><rect x="7.8609%" y="469" width="0.0525%" height="15" fill="rgb(222,119,46)" fg:x="8829" fg:w="59"/><text x="8.1109%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (50 samples, 0.04%)</title><rect x="7.8689%" y="453" width="0.0445%" height="15" fill="rgb(222,165,49)" fg:x="8838" fg:w="50"/><text x="8.1189%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (50 samples, 0.04%)</title><rect x="7.8689%" y="437" width="0.0445%" height="15" fill="rgb(219,113,52)" fg:x="8838" fg:w="50"/><text x="8.1189%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (50 samples, 0.04%)</title><rect x="7.8689%" y="421" width="0.0445%" height="15" fill="rgb(214,7,15)" fg:x="8838" fg:w="50"/><text x="8.1189%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (81 samples, 0.07%)</title><rect x="7.8511%" y="805" width="0.0721%" height="15" fill="rgb(235,32,4)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="815.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (81 samples, 0.07%)</title><rect x="7.8511%" y="789" width="0.0721%" height="15" fill="rgb(238,90,54)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (81 samples, 0.07%)</title><rect x="7.8511%" y="773" width="0.0721%" height="15" fill="rgb(213,208,19)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (81 samples, 0.07%)</title><rect x="7.8511%" y="757" width="0.0721%" height="15" fill="rgb(233,156,4)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (81 samples, 0.07%)</title><rect x="7.8511%" y="741" width="0.0721%" height="15" fill="rgb(207,194,5)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (81 samples, 0.07%)</title><rect x="7.8511%" y="725" width="0.0721%" height="15" fill="rgb(206,111,30)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (81 samples, 0.07%)</title><rect x="7.8511%" y="709" width="0.0721%" height="15" fill="rgb(243,70,54)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (81 samples, 0.07%)</title><rect x="7.8511%" y="693" width="0.0721%" height="15" fill="rgb(242,28,8)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (81 samples, 0.07%)</title><rect x="7.8511%" y="677" width="0.0721%" height="15" fill="rgb(219,106,18)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (81 samples, 0.07%)</title><rect x="7.8511%" y="661" width="0.0721%" height="15" fill="rgb(244,222,10)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (81 samples, 0.07%)</title><rect x="7.8511%" y="645" width="0.0721%" height="15" fill="rgb(236,179,52)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (81 samples, 0.07%)</title><rect x="7.8511%" y="629" width="0.0721%" height="15" fill="rgb(213,23,39)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="639.50"></text></g><g><title>alloc::alloc::alloc (81 samples, 0.07%)</title><rect x="7.8511%" y="613" width="0.0721%" height="15" fill="rgb(238,48,10)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="623.50"></text></g><g><title>__rg_alloc (81 samples, 0.07%)</title><rect x="7.8511%" y="597" width="0.0721%" height="15" fill="rgb(251,196,23)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (81 samples, 0.07%)</title><rect x="7.8511%" y="581" width="0.0721%" height="15" fill="rgb(250,152,24)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="591.50"></text></g><g><title>rust_alloc (81 samples, 0.07%)</title><rect x="7.8511%" y="565" width="0.0721%" height="15" fill="rgb(209,150,17)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.07%)</title><rect x="7.8511%" y="549" width="0.0721%" height="15" fill="rgb(234,202,34)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.07%)</title><rect x="7.8511%" y="533" width="0.0721%" height="15" fill="rgb(253,148,53)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.07%)</title><rect x="7.8511%" y="517" width="0.0721%" height="15" fill="rgb(218,129,16)" fg:x="8818" fg:w="81"/><text x="8.1011%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="7.9232%" y="613" width="0.0338%" height="15" fill="rgb(216,85,19)" fg:x="8899" fg:w="38"/><text x="8.1732%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (38 samples, 0.03%)</title><rect x="7.9232%" y="597" width="0.0338%" height="15" fill="rgb(235,228,7)" fg:x="8899" fg:w="38"/><text x="8.1732%" y="607.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (35 samples, 0.03%)</title><rect x="7.9259%" y="581" width="0.0312%" height="15" fill="rgb(245,175,0)" fg:x="8902" fg:w="35"/><text x="8.1759%" y="591.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (26 samples, 0.02%)</title><rect x="7.9339%" y="565" width="0.0231%" height="15" fill="rgb(208,168,36)" fg:x="8911" fg:w="26"/><text x="8.1839%" y="575.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="7.9339%" y="549" width="0.0231%" height="15" fill="rgb(246,171,24)" fg:x="8911" fg:w="26"/><text x="8.1839%" y="559.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="7.9339%" y="533" width="0.0231%" height="15" fill="rgb(215,142,24)" fg:x="8911" fg:w="26"/><text x="8.1839%" y="543.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (168 samples, 0.15%)</title><rect x="7.8092%" y="917" width="0.1496%" height="15" fill="rgb(250,187,7)" fg:x="8771" fg:w="168"/><text x="8.0592%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (121 samples, 0.11%)</title><rect x="7.8511%" y="901" width="0.1077%" height="15" fill="rgb(228,66,33)" fg:x="8818" fg:w="121"/><text x="8.1011%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (121 samples, 0.11%)</title><rect x="7.8511%" y="885" width="0.1077%" height="15" fill="rgb(234,215,21)" fg:x="8818" fg:w="121"/><text x="8.1011%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (121 samples, 0.11%)</title><rect x="7.8511%" y="869" width="0.1077%" height="15" fill="rgb(222,191,20)" fg:x="8818" fg:w="121"/><text x="8.1011%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (121 samples, 0.11%)</title><rect x="7.8511%" y="853" width="0.1077%" height="15" fill="rgb(245,79,54)" fg:x="8818" fg:w="121"/><text x="8.1011%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (121 samples, 0.11%)</title><rect x="7.8511%" y="837" width="0.1077%" height="15" fill="rgb(240,10,37)" fg:x="8818" fg:w="121"/><text x="8.1011%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (121 samples, 0.11%)</title><rect x="7.8511%" y="821" width="0.1077%" height="15" fill="rgb(214,192,32)" fg:x="8818" fg:w="121"/><text x="8.1011%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (40 samples, 0.04%)</title><rect x="7.9232%" y="805" width="0.0356%" height="15" fill="rgb(209,36,54)" fg:x="8899" fg:w="40"/><text x="8.1732%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (40 samples, 0.04%)</title><rect x="7.9232%" y="789" width="0.0356%" height="15" fill="rgb(220,10,11)" fg:x="8899" fg:w="40"/><text x="8.1732%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (40 samples, 0.04%)</title><rect x="7.9232%" y="773" width="0.0356%" height="15" fill="rgb(221,106,17)" fg:x="8899" fg:w="40"/><text x="8.1732%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.04%)</title><rect x="7.9232%" y="757" width="0.0356%" height="15" fill="rgb(251,142,44)" fg:x="8899" fg:w="40"/><text x="8.1732%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.04%)</title><rect x="7.9232%" y="741" width="0.0356%" height="15" fill="rgb(238,13,15)" fg:x="8899" fg:w="40"/><text x="8.1732%" y="751.50"></text></g><g><title>alloc::alloc::alloc (40 samples, 0.04%)</title><rect x="7.9232%" y="725" width="0.0356%" height="15" fill="rgb(208,107,27)" fg:x="8899" fg:w="40"/><text x="8.1732%" y="735.50"></text></g><g><title>__rg_alloc (40 samples, 0.04%)</title><rect x="7.9232%" y="709" width="0.0356%" height="15" fill="rgb(205,136,37)" fg:x="8899" fg:w="40"/><text x="8.1732%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (40 samples, 0.04%)</title><rect x="7.9232%" y="693" width="0.0356%" height="15" fill="rgb(250,205,27)" fg:x="8899" fg:w="40"/><text x="8.1732%" y="703.50"></text></g><g><title>rust_alloc (40 samples, 0.04%)</title><rect x="7.9232%" y="677" width="0.0356%" height="15" fill="rgb(210,80,43)" fg:x="8899" fg:w="40"/><text x="8.1732%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="7.9232%" y="661" width="0.0356%" height="15" fill="rgb(247,160,36)" fg:x="8899" fg:w="40"/><text x="8.1732%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="7.9232%" y="645" width="0.0356%" height="15" fill="rgb(234,13,49)" fg:x="8899" fg:w="40"/><text x="8.1732%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="7.9232%" y="629" width="0.0356%" height="15" fill="rgb(234,122,0)" fg:x="8899" fg:w="40"/><text x="8.1732%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (12 samples, 0.01%)</title><rect x="7.9793%" y="597" width="0.0107%" height="15" fill="rgb(207,146,38)" fg:x="8962" fg:w="12"/><text x="8.2293%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="7.9793%" y="581" width="0.0107%" height="15" fill="rgb(207,177,25)" fg:x="8962" fg:w="12"/><text x="8.2293%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (37 samples, 0.03%)</title><rect x="7.9704%" y="645" width="0.0329%" height="15" fill="rgb(211,178,42)" fg:x="8952" fg:w="37"/><text x="8.2204%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (37 samples, 0.03%)</title><rect x="7.9704%" y="629" width="0.0329%" height="15" fill="rgb(230,69,54)" fg:x="8952" fg:w="37"/><text x="8.2204%" y="639.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (32 samples, 0.03%)</title><rect x="7.9748%" y="613" width="0.0285%" height="15" fill="rgb(214,135,41)" fg:x="8957" fg:w="32"/><text x="8.2248%" y="623.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="7.9900%" y="597" width="0.0134%" height="15" fill="rgb(237,67,25)" fg:x="8974" fg:w="15"/><text x="8.2400%" y="607.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="7.9900%" y="581" width="0.0134%" height="15" fill="rgb(222,189,50)" fg:x="8974" fg:w="15"/><text x="8.2400%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (44 samples, 0.04%)</title><rect x="7.9704%" y="661" width="0.0392%" height="15" fill="rgb(245,148,34)" fg:x="8952" fg:w="44"/><text x="8.2204%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (72 samples, 0.06%)</title><rect x="7.9588%" y="677" width="0.0641%" height="15" fill="rgb(222,29,6)" fg:x="8939" fg:w="72"/><text x="8.2088%" y="687.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="8.0122%" y="661" width="0.0107%" height="15" fill="rgb(221,189,43)" fg:x="8999" fg:w="12"/><text x="8.2622%" y="671.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="8.0122%" y="645" width="0.0107%" height="15" fill="rgb(207,36,27)" fg:x="8999" fg:w="12"/><text x="8.2622%" y="655.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="8.0122%" y="629" width="0.0107%" height="15" fill="rgb(217,90,24)" fg:x="8999" fg:w="12"/><text x="8.2622%" y="639.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="8.0122%" y="613" width="0.0107%" height="15" fill="rgb(224,66,35)" fg:x="8999" fg:w="12"/><text x="8.2622%" y="623.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (73 samples, 0.06%)</title><rect x="8.0683%" y="661" width="0.0650%" height="15" fill="rgb(221,13,50)" fg:x="9062" fg:w="73"/><text x="8.3183%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (589 samples, 0.52%)</title><rect x="7.9588%" y="709" width="0.5244%" height="15" fill="rgb(236,68,49)" fg:x="8939" fg:w="589"/><text x="8.2088%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (589 samples, 0.52%)</title><rect x="7.9588%" y="693" width="0.5244%" height="15" fill="rgb(229,146,28)" fg:x="8939" fg:w="589"/><text x="8.2088%" y="703.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (517 samples, 0.46%)</title><rect x="8.0229%" y="677" width="0.4603%" height="15" fill="rgb(225,31,38)" fg:x="9011" fg:w="517"/><text x="8.2729%" y="687.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (393 samples, 0.35%)</title><rect x="8.1333%" y="661" width="0.3499%" height="15" fill="rgb(250,208,3)" fg:x="9135" fg:w="393"/><text x="8.3833%" y="671.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (393 samples, 0.35%)</title><rect x="8.1333%" y="645" width="0.3499%" height="15" fill="rgb(246,54,23)" fg:x="9135" fg:w="393"/><text x="8.3833%" y="655.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (393 samples, 0.35%)</title><rect x="8.1333%" y="629" width="0.3499%" height="15" fill="rgb(243,76,11)" fg:x="9135" fg:w="393"/><text x="8.3833%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (591 samples, 0.53%)</title><rect x="7.9588%" y="917" width="0.5262%" height="15" fill="rgb(245,21,50)" fg:x="8939" fg:w="591"/><text x="8.2088%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (591 samples, 0.53%)</title><rect x="7.9588%" y="901" width="0.5262%" height="15" fill="rgb(228,9,43)" fg:x="8939" fg:w="591"/><text x="8.2088%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (591 samples, 0.53%)</title><rect x="7.9588%" y="885" width="0.5262%" height="15" fill="rgb(208,100,47)" fg:x="8939" fg:w="591"/><text x="8.2088%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (591 samples, 0.53%)</title><rect x="7.9588%" y="869" width="0.5262%" height="15" fill="rgb(232,26,8)" fg:x="8939" fg:w="591"/><text x="8.2088%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (591 samples, 0.53%)</title><rect x="7.9588%" y="853" width="0.5262%" height="15" fill="rgb(216,166,38)" fg:x="8939" fg:w="591"/><text x="8.2088%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (591 samples, 0.53%)</title><rect x="7.9588%" y="837" width="0.5262%" height="15" fill="rgb(251,202,51)" fg:x="8939" fg:w="591"/><text x="8.2088%" y="847.50"></text></g><g><title>alloc::alloc::alloc (591 samples, 0.53%)</title><rect x="7.9588%" y="821" width="0.5262%" height="15" fill="rgb(254,216,34)" fg:x="8939" fg:w="591"/><text x="8.2088%" y="831.50"></text></g><g><title>__rg_alloc (591 samples, 0.53%)</title><rect x="7.9588%" y="805" width="0.5262%" height="15" fill="rgb(251,32,27)" fg:x="8939" fg:w="591"/><text x="8.2088%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (591 samples, 0.53%)</title><rect x="7.9588%" y="789" width="0.5262%" height="15" fill="rgb(208,127,28)" fg:x="8939" fg:w="591"/><text x="8.2088%" y="799.50"></text></g><g><title>rust_alloc (591 samples, 0.53%)</title><rect x="7.9588%" y="773" width="0.5262%" height="15" fill="rgb(224,137,22)" fg:x="8939" fg:w="591"/><text x="8.2088%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (591 samples, 0.53%)</title><rect x="7.9588%" y="757" width="0.5262%" height="15" fill="rgb(254,70,32)" fg:x="8939" fg:w="591"/><text x="8.2088%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (591 samples, 0.53%)</title><rect x="7.9588%" y="741" width="0.5262%" height="15" fill="rgb(229,75,37)" fg:x="8939" fg:w="591"/><text x="8.2088%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (591 samples, 0.53%)</title><rect x="7.9588%" y="725" width="0.5262%" height="15" fill="rgb(252,64,23)" fg:x="8939" fg:w="591"/><text x="8.2088%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (312 samples, 0.28%)</title><rect x="8.7156%" y="901" width="0.2778%" height="15" fill="rgb(232,162,48)" fg:x="9789" fg:w="312"/><text x="8.9656%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="9.0156%" y="757" width="0.0418%" height="15" fill="rgb(246,160,12)" fg:x="10126" fg:w="47"/><text x="9.2656%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="9.0201%" y="741" width="0.0374%" height="15" fill="rgb(247,166,0)" fg:x="10131" fg:w="42"/><text x="9.2701%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.03%)</title><rect x="9.0228%" y="725" width="0.0347%" height="15" fill="rgb(249,219,21)" fg:x="10134" fg:w="39"/><text x="9.2728%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::take (26 samples, 0.02%)</title><rect x="9.0343%" y="709" width="0.0231%" height="15" fill="rgb(205,209,3)" fg:x="10147" fg:w="26"/><text x="9.2843%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (26 samples, 0.02%)</title><rect x="9.0343%" y="693" width="0.0231%" height="15" fill="rgb(243,44,1)" fg:x="10147" fg:w="26"/><text x="9.2843%" y="703.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (76 samples, 0.07%)</title><rect x="8.9934%" y="901" width="0.0677%" height="15" fill="rgb(206,159,16)" fg:x="10101" fg:w="76"/><text x="9.2434%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (76 samples, 0.07%)</title><rect x="8.9934%" y="885" width="0.0677%" height="15" fill="rgb(244,77,30)" fg:x="10101" fg:w="76"/><text x="9.2434%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (63 samples, 0.06%)</title><rect x="9.0050%" y="869" width="0.0561%" height="15" fill="rgb(218,69,12)" fg:x="10114" fg:w="63"/><text x="9.2550%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (63 samples, 0.06%)</title><rect x="9.0050%" y="853" width="0.0561%" height="15" fill="rgb(212,87,7)" fg:x="10114" fg:w="63"/><text x="9.2550%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (63 samples, 0.06%)</title><rect x="9.0050%" y="837" width="0.0561%" height="15" fill="rgb(245,114,25)" fg:x="10114" fg:w="63"/><text x="9.2550%" y="847.50"></text></g><g><title>alloc::alloc::alloc (63 samples, 0.06%)</title><rect x="9.0050%" y="821" width="0.0561%" height="15" fill="rgb(210,61,42)" fg:x="10114" fg:w="63"/><text x="9.2550%" y="831.50"></text></g><g><title>__rg_alloc (63 samples, 0.06%)</title><rect x="9.0050%" y="805" width="0.0561%" height="15" fill="rgb(211,52,33)" fg:x="10114" fg:w="63"/><text x="9.2550%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (63 samples, 0.06%)</title><rect x="9.0050%" y="789" width="0.0561%" height="15" fill="rgb(234,58,33)" fg:x="10114" fg:w="63"/><text x="9.2550%" y="799.50"></text></g><g><title>rust_alloc (53 samples, 0.05%)</title><rect x="9.0139%" y="773" width="0.0472%" height="15" fill="rgb(220,115,36)" fg:x="10124" fg:w="53"/><text x="9.2639%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (71 samples, 0.06%)</title><rect x="9.0610%" y="901" width="0.0632%" height="15" fill="rgb(243,153,54)" fg:x="10177" fg:w="71"/><text x="9.3110%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (71 samples, 0.06%)</title><rect x="9.0610%" y="885" width="0.0632%" height="15" fill="rgb(251,47,18)" fg:x="10177" fg:w="71"/><text x="9.3110%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (71 samples, 0.06%)</title><rect x="9.0610%" y="869" width="0.0632%" height="15" fill="rgb(242,102,42)" fg:x="10177" fg:w="71"/><text x="9.3110%" y="879.50"></text></g><g><title>alloc::alloc::alloc (71 samples, 0.06%)</title><rect x="9.0610%" y="853" width="0.0632%" height="15" fill="rgb(234,31,38)" fg:x="10177" fg:w="71"/><text x="9.3110%" y="863.50"></text></g><g><title>__rg_alloc (71 samples, 0.06%)</title><rect x="9.0610%" y="837" width="0.0632%" height="15" fill="rgb(221,117,51)" fg:x="10177" fg:w="71"/><text x="9.3110%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (71 samples, 0.06%)</title><rect x="9.0610%" y="821" width="0.0632%" height="15" fill="rgb(212,20,18)" fg:x="10177" fg:w="71"/><text x="9.3110%" y="831.50"></text></g><g><title>rust_alloc (65 samples, 0.06%)</title><rect x="9.0664%" y="805" width="0.0579%" height="15" fill="rgb(245,133,36)" fg:x="10183" fg:w="65"/><text x="9.3164%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="9.0726%" y="789" width="0.0516%" height="15" fill="rgb(212,6,19)" fg:x="10190" fg:w="58"/><text x="9.3226%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="9.0726%" y="773" width="0.0516%" height="15" fill="rgb(218,1,36)" fg:x="10190" fg:w="58"/><text x="9.3226%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (52 samples, 0.05%)</title><rect x="9.0780%" y="757" width="0.0463%" height="15" fill="rgb(246,84,54)" fg:x="10196" fg:w="52"/><text x="9.3280%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (40 samples, 0.04%)</title><rect x="9.0886%" y="741" width="0.0356%" height="15" fill="rgb(242,110,6)" fg:x="10208" fg:w="40"/><text x="9.3386%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (40 samples, 0.04%)</title><rect x="9.0886%" y="725" width="0.0356%" height="15" fill="rgb(214,47,5)" fg:x="10208" fg:w="40"/><text x="9.3386%" y="735.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="9.3923%" y="885" width="0.0258%" height="15" fill="rgb(218,159,25)" fg:x="10549" fg:w="29"/><text x="9.6423%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (344 samples, 0.31%)</title><rect x="9.1243%" y="901" width="0.3063%" height="15" fill="rgb(215,211,28)" fg:x="10248" fg:w="344"/><text x="9.3743%" y="911.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (14 samples, 0.01%)</title><rect x="9.4181%" y="885" width="0.0125%" height="15" fill="rgb(238,59,32)" fg:x="10578" fg:w="14"/><text x="9.6681%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (1,846 samples, 1.64%)</title><rect x="7.7985%" y="981" width="1.6436%" height="15" fill="rgb(226,82,3)" fg:x="8759" fg:w="1846"/><text x="8.0485%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,846 samples, 1.64%)</title><rect x="7.7985%" y="965" width="1.6436%" height="15" fill="rgb(240,164,32)" fg:x="8759" fg:w="1846"/><text x="8.0485%" y="975.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (1,846 samples, 1.64%)</title><rect x="7.7985%" y="949" width="1.6436%" height="15" fill="rgb(232,46,7)" fg:x="8759" fg:w="1846"/><text x="8.0485%" y="959.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (1,834 samples, 1.63%)</title><rect x="7.8092%" y="933" width="1.6329%" height="15" fill="rgb(229,129,53)" fg:x="8771" fg:w="1834"/><text x="8.0592%" y="943.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (1,073 samples, 0.96%)</title><rect x="8.4868%" y="917" width="0.9553%" height="15" fill="rgb(234,188,29)" fg:x="9532" fg:w="1073"/><text x="8.7368%" y="927.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (13 samples, 0.01%)</title><rect x="9.4305%" y="901" width="0.0116%" height="15" fill="rgb(246,141,4)" fg:x="10592" fg:w="13"/><text x="9.6805%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="9.5507%" y="869" width="0.0125%" height="15" fill="rgb(229,23,39)" fg:x="10727" fg:w="14"/><text x="9.8007%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (197 samples, 0.18%)</title><rect x="9.6291%" y="853" width="0.1754%" height="15" fill="rgb(206,12,3)" fg:x="10815" fg:w="197"/><text x="9.8791%" y="863.50"></text></g><g><title>core::mem::replace (197 samples, 0.18%)</title><rect x="9.6291%" y="837" width="0.1754%" height="15" fill="rgb(252,226,20)" fg:x="10815" fg:w="197"/><text x="9.8791%" y="847.50"></text></g><g><title>core::ptr::read (197 samples, 0.18%)</title><rect x="9.6291%" y="821" width="0.1754%" height="15" fill="rgb(216,123,35)" fg:x="10815" fg:w="197"/><text x="9.8791%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (314 samples, 0.28%)</title><rect x="9.5810%" y="869" width="0.2796%" height="15" fill="rgb(212,68,40)" fg:x="10761" fg:w="314"/><text x="9.8310%" y="879.50"></text></g><g><title>core::mem::drop (63 samples, 0.06%)</title><rect x="9.8045%" y="853" width="0.0561%" height="15" fill="rgb(254,125,32)" fg:x="11012" fg:w="63"/><text x="10.0545%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (63 samples, 0.06%)</title><rect x="9.8045%" y="837" width="0.0561%" height="15" fill="rgb(253,97,22)" fg:x="11012" fg:w="63"/><text x="10.0545%" y="847.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="9.8606%" y="853" width="0.0125%" height="15" fill="rgb(241,101,14)" fg:x="11075" fg:w="14"/><text x="10.1106%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="9.8908%" y="805" width="0.0107%" height="15" fill="rgb(238,103,29)" fg:x="11109" fg:w="12"/><text x="10.1408%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (292 samples, 0.26%)</title><rect x="9.9015%" y="789" width="0.2600%" height="15" fill="rgb(233,195,47)" fg:x="11121" fg:w="292"/><text x="10.1515%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (353 samples, 0.31%)</title><rect x="9.8606%" y="869" width="0.3143%" height="15" fill="rgb(246,218,30)" fg:x="11075" fg:w="353"/><text x="10.1106%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (339 samples, 0.30%)</title><rect x="9.8730%" y="853" width="0.3018%" height="15" fill="rgb(219,145,47)" fg:x="11089" fg:w="339"/><text x="10.1230%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (339 samples, 0.30%)</title><rect x="9.8730%" y="837" width="0.3018%" height="15" fill="rgb(243,12,26)" fg:x="11089" fg:w="339"/><text x="10.1230%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (319 samples, 0.28%)</title><rect x="9.8908%" y="821" width="0.2840%" height="15" fill="rgb(214,87,16)" fg:x="11109" fg:w="319"/><text x="10.1408%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (307 samples, 0.27%)</title><rect x="9.9015%" y="805" width="0.2733%" height="15" fill="rgb(208,99,42)" fg:x="11121" fg:w="307"/><text x="10.1515%" y="815.50"></text></g><g><title>___pthread_mutex_unlock (15 samples, 0.01%)</title><rect x="10.1615%" y="789" width="0.0134%" height="15" fill="rgb(253,99,2)" fg:x="11413" fg:w="15"/><text x="10.4115%" y="799.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (39 samples, 0.03%)</title><rect x="10.1820%" y="821" width="0.0347%" height="15" fill="rgb(220,168,23)" fg:x="11436" fg:w="39"/><text x="10.4320%" y="831.50"></text></g><g><title>core::task::wake::Waker::will_wake (48 samples, 0.04%)</title><rect x="10.1749%" y="869" width="0.0427%" height="15" fill="rgb(242,38,24)" fg:x="11428" fg:w="48"/><text x="10.4249%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (48 samples, 0.04%)</title><rect x="10.1749%" y="853" width="0.0427%" height="15" fill="rgb(225,182,9)" fg:x="11428" fg:w="48"/><text x="10.4249%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (40 samples, 0.04%)</title><rect x="10.1820%" y="837" width="0.0356%" height="15" fill="rgb(243,178,37)" fg:x="11436" fg:w="40"/><text x="10.4320%" y="847.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="10.2283%" y="837" width="0.0125%" height="15" fill="rgb(232,139,19)" fg:x="11488" fg:w="14"/><text x="10.4783%" y="847.50"></text></g><g><title>std::sync::poison::Flag::borrow (14 samples, 0.01%)</title><rect x="10.2283%" y="821" width="0.0125%" height="15" fill="rgb(225,201,24)" fg:x="11488" fg:w="14"/><text x="10.4783%" y="831.50"></text></g><g><title>std::thread::panicking (12 samples, 0.01%)</title><rect x="10.2301%" y="805" width="0.0107%" height="15" fill="rgb(221,47,46)" fg:x="11490" fg:w="12"/><text x="10.4801%" y="815.50"></text></g><g><title>std::panicking::panicking (12 samples, 0.01%)</title><rect x="10.2301%" y="789" width="0.0107%" height="15" fill="rgb(249,23,13)" fg:x="11490" fg:w="12"/><text x="10.4801%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (12 samples, 0.01%)</title><rect x="10.2301%" y="773" width="0.0107%" height="15" fill="rgb(219,9,5)" fg:x="11490" fg:w="12"/><text x="10.4801%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="10.2301%" y="757" width="0.0107%" height="15" fill="rgb(254,171,16)" fg:x="11490" fg:w="12"/><text x="10.4801%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="10.2301%" y="741" width="0.0107%" height="15" fill="rgb(230,171,20)" fg:x="11490" fg:w="12"/><text x="10.4801%" y="751.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,920 samples, 1.71%)</title><rect x="9.4991%" y="885" width="1.7095%" height="15" fill="rgb(210,71,41)" fg:x="10669" fg:w="1920"/><text x="9.7491%" y="895.50"></text></g><g><title>event_listener::Inner::lock (1,113 samples, 0.99%)</title><rect x="10.2176%" y="869" width="0.9910%" height="15" fill="rgb(206,173,20)" fg:x="11476" fg:w="1113"/><text x="10.4676%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,101 samples, 0.98%)</title><rect x="10.2283%" y="853" width="0.9803%" height="15" fill="rgb(233,88,34)" fg:x="11488" fg:w="1101"/><text x="10.4783%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,087 samples, 0.97%)</title><rect x="10.2407%" y="837" width="0.9678%" height="15" fill="rgb(223,209,46)" fg:x="11502" fg:w="1087"/><text x="10.4907%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1,007 samples, 0.90%)</title><rect x="10.3120%" y="821" width="0.8966%" height="15" fill="rgb(250,43,18)" fg:x="11582" fg:w="1007"/><text x="10.5620%" y="831.50"></text></g><g><title>___pthread_mutex_lock (1,007 samples, 0.90%)</title><rect x="10.3120%" y="805" width="0.8966%" height="15" fill="rgb(208,13,10)" fg:x="11582" fg:w="1007"/><text x="10.5620%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,996 samples, 1.78%)</title><rect x="9.4421%" y="965" width="1.7771%" height="15" fill="rgb(212,200,36)" fg:x="10605" fg:w="1996"/><text x="9.6921%" y="975.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,996 samples, 1.78%)</title><rect x="9.4421%" y="949" width="1.7771%" height="15" fill="rgb(225,90,30)" fg:x="10605" fg:w="1996"/><text x="9.6921%" y="959.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,996 samples, 1.78%)</title><rect x="9.4421%" y="933" width="1.7771%" height="15" fill="rgb(236,182,39)" fg:x="10605" fg:w="1996"/><text x="9.6921%" y="943.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,996 samples, 1.78%)</title><rect x="9.4421%" y="917" width="1.7771%" height="15" fill="rgb(212,144,35)" fg:x="10605" fg:w="1996"/><text x="9.6921%" y="927.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,996 samples, 1.78%)</title><rect x="9.4421%" y="901" width="1.7771%" height="15" fill="rgb(228,63,44)" fg:x="10605" fg:w="1996"/><text x="9.6921%" y="911.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (12 samples, 0.01%)</title><rect x="11.2086%" y="885" width="0.0107%" height="15" fill="rgb(228,109,6)" fg:x="12589" fg:w="12"/><text x="11.4586%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="11.2335%" y="917" width="0.0214%" height="15" fill="rgb(238,117,24)" fg:x="12617" fg:w="24"/><text x="11.4835%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (164 samples, 0.15%)</title><rect x="11.2549%" y="917" width="0.1460%" height="15" fill="rgb(242,26,26)" fg:x="12641" fg:w="164"/><text x="11.5049%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.01%)</title><rect x="11.5059%" y="901" width="0.0116%" height="15" fill="rgb(221,92,48)" fg:x="12923" fg:w="13"/><text x="11.7559%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (720 samples, 0.64%)</title><rect x="11.5175%" y="901" width="0.6410%" height="15" fill="rgb(209,209,32)" fg:x="12936" fg:w="720"/><text x="11.7675%" y="911.50"></text></g><g><title>event_listener::Inner::lock (15 samples, 0.01%)</title><rect x="12.1737%" y="837" width="0.0134%" height="15" fill="rgb(221,70,22)" fg:x="13673" fg:w="15"/><text x="12.4237%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="12.1737%" y="821" width="0.0134%" height="15" fill="rgb(248,145,5)" fg:x="13673" fg:w="15"/><text x="12.4237%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="12.1737%" y="805" width="0.0134%" height="15" fill="rgb(226,116,26)" fg:x="13673" fg:w="15"/><text x="12.4237%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="12.1755%" y="789" width="0.0116%" height="15" fill="rgb(244,5,17)" fg:x="13675" fg:w="13"/><text x="12.4255%" y="799.50"></text></g><g><title>___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="12.1755%" y="773" width="0.0116%" height="15" fill="rgb(252,159,33)" fg:x="13675" fg:w="13"/><text x="12.4255%" y="783.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="12.1621%" y="853" width="0.0294%" height="15" fill="rgb(206,71,0)" fg:x="13660" fg:w="33"/><text x="12.4121%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (47 samples, 0.04%)</title><rect x="12.1612%" y="885" width="0.0418%" height="15" fill="rgb(233,118,54)" fg:x="13659" fg:w="47"/><text x="12.4112%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (46 samples, 0.04%)</title><rect x="12.1621%" y="869" width="0.0410%" height="15" fill="rgb(234,83,48)" fg:x="13660" fg:w="46"/><text x="12.4121%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (13 samples, 0.01%)</title><rect x="12.1915%" y="853" width="0.0116%" height="15" fill="rgb(228,3,54)" fg:x="13693" fg:w="13"/><text x="12.4415%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="12.1915%" y="837" width="0.0116%" height="15" fill="rgb(226,155,13)" fg:x="13693" fg:w="13"/><text x="12.4415%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.01%)</title><rect x="12.1915%" y="821" width="0.0116%" height="15" fill="rgb(241,28,37)" fg:x="13693" fg:w="13"/><text x="12.4415%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.01%)</title><rect x="12.1915%" y="805" width="0.0116%" height="15" fill="rgb(233,93,10)" fg:x="13693" fg:w="13"/><text x="12.4415%" y="815.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (7,529 samples, 6.70%)</title><rect x="5.5068%" y="1109" width="6.7034%" height="15" fill="rgb(225,113,19)" fg:x="6185" fg:w="7529"/><text x="5.7568%" y="1119.50">async_exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (7,529 samples, 6.70%)</title><rect x="5.5068%" y="1093" width="6.7034%" height="15" fill="rgb(241,2,18)" fg:x="6185" fg:w="7529"/><text x="5.7568%" y="1103.50">&lt;async_st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (7,529 samples, 6.70%)</title><rect x="5.5068%" y="1077" width="6.7034%" height="15" fill="rgb(228,207,21)" fg:x="6185" fg:w="7529"/><text x="5.7568%" y="1087.50">async_std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7,529 samples, 6.70%)</title><rect x="5.5068%" y="1061" width="6.7034%" height="15" fill="rgb(213,211,35)" fg:x="6185" fg:w="7529"/><text x="5.7568%" y="1071.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,529 samples, 6.70%)</title><rect x="5.5068%" y="1045" width="6.7034%" height="15" fill="rgb(209,83,10)" fg:x="6185" fg:w="7529"/><text x="5.7568%" y="1055.50">std::thre..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (7,529 samples, 6.70%)</title><rect x="5.5068%" y="1029" width="6.7034%" height="15" fill="rgb(209,164,1)" fg:x="6185" fg:w="7529"/><text x="5.7568%" y="1039.50">async_std..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (7,529 samples, 6.70%)</title><rect x="5.5068%" y="1013" width="6.7034%" height="15" fill="rgb(213,184,43)" fg:x="6185" fg:w="7529"/><text x="5.7568%" y="1023.50">&lt;async_st..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,529 samples, 6.70%)</title><rect x="5.5068%" y="997" width="6.7034%" height="15" fill="rgb(231,61,34)" fg:x="6185" fg:w="7529"/><text x="5.7568%" y="1007.50">&lt;core::fu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,109 samples, 2.77%)</title><rect x="9.4421%" y="981" width="2.7681%" height="15" fill="rgb(235,75,3)" fg:x="10605" fg:w="3109"/><text x="9.6921%" y="991.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,113 samples, 0.99%)</title><rect x="11.2192%" y="965" width="0.9910%" height="15" fill="rgb(220,106,47)" fg:x="12601" fg:w="1113"/><text x="11.4692%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,113 samples, 0.99%)</title><rect x="11.2192%" y="949" width="0.9910%" height="15" fill="rgb(210,196,33)" fg:x="12601" fg:w="1113"/><text x="11.4692%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,113 samples, 0.99%)</title><rect x="11.2192%" y="933" width="0.9910%" height="15" fill="rgb(229,154,42)" fg:x="12601" fg:w="1113"/><text x="11.4692%" y="943.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (909 samples, 0.81%)</title><rect x="11.4009%" y="917" width="0.8093%" height="15" fill="rgb(228,114,26)" fg:x="12805" fg:w="909"/><text x="11.6509%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (58 samples, 0.05%)</title><rect x="12.1586%" y="901" width="0.0516%" height="15" fill="rgb(208,144,1)" fg:x="13656" fg:w="58"/><text x="12.4086%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (103 samples, 0.09%)</title><rect x="12.2102%" y="1077" width="0.0917%" height="15" fill="rgb(239,112,37)" fg:x="13714" fg:w="103"/><text x="12.4602%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (103 samples, 0.09%)</title><rect x="12.2102%" y="1061" width="0.0917%" height="15" fill="rgb(210,96,50)" fg:x="13714" fg:w="103"/><text x="12.4602%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (103 samples, 0.09%)</title><rect x="12.2102%" y="1045" width="0.0917%" height="15" fill="rgb(222,178,2)" fg:x="13714" fg:w="103"/><text x="12.4602%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (104 samples, 0.09%)</title><rect x="12.2102%" y="1109" width="0.0926%" height="15" fill="rgb(226,74,18)" fg:x="13714" fg:w="104"/><text x="12.4602%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (104 samples, 0.09%)</title><rect x="12.2102%" y="1093" width="0.0926%" height="15" fill="rgb(225,67,54)" fg:x="13714" fg:w="104"/><text x="12.4602%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="12.3037%" y="725" width="0.0107%" height="15" fill="rgb(251,92,32)" fg:x="13819" fg:w="12"/><text x="12.5537%" y="735.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="12.3197%" y="709" width="0.0107%" height="15" fill="rgb(228,149,22)" fg:x="13837" fg:w="12"/><text x="12.5697%" y="719.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (91 samples, 0.08%)</title><rect x="12.3037%" y="949" width="0.0810%" height="15" fill="rgb(243,54,13)" fg:x="13819" fg:w="91"/><text x="12.5537%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (91 samples, 0.08%)</title><rect x="12.3037%" y="933" width="0.0810%" height="15" fill="rgb(243,180,28)" fg:x="13819" fg:w="91"/><text x="12.5537%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (91 samples, 0.08%)</title><rect x="12.3037%" y="917" width="0.0810%" height="15" fill="rgb(208,167,24)" fg:x="13819" fg:w="91"/><text x="12.5537%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (91 samples, 0.08%)</title><rect x="12.3037%" y="901" width="0.0810%" height="15" fill="rgb(245,73,45)" fg:x="13819" fg:w="91"/><text x="12.5537%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (91 samples, 0.08%)</title><rect x="12.3037%" y="885" width="0.0810%" height="15" fill="rgb(237,203,48)" fg:x="13819" fg:w="91"/><text x="12.5537%" y="895.50"></text></g><g><title>alloc::alloc::alloc (91 samples, 0.08%)</title><rect x="12.3037%" y="869" width="0.0810%" height="15" fill="rgb(211,197,16)" fg:x="13819" fg:w="91"/><text x="12.5537%" y="879.50"></text></g><g><title>__rg_alloc (91 samples, 0.08%)</title><rect x="12.3037%" y="853" width="0.0810%" height="15" fill="rgb(243,99,51)" fg:x="13819" fg:w="91"/><text x="12.5537%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (91 samples, 0.08%)</title><rect x="12.3037%" y="837" width="0.0810%" height="15" fill="rgb(215,123,29)" fg:x="13819" fg:w="91"/><text x="12.5537%" y="847.50"></text></g><g><title>rust_alloc (91 samples, 0.08%)</title><rect x="12.3037%" y="821" width="0.0810%" height="15" fill="rgb(239,186,37)" fg:x="13819" fg:w="91"/><text x="12.5537%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.08%)</title><rect x="12.3037%" y="805" width="0.0810%" height="15" fill="rgb(252,136,39)" fg:x="13819" fg:w="91"/><text x="12.5537%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.08%)</title><rect x="12.3037%" y="789" width="0.0810%" height="15" fill="rgb(223,213,32)" fg:x="13819" fg:w="91"/><text x="12.5537%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.08%)</title><rect x="12.3037%" y="773" width="0.0810%" height="15" fill="rgb(233,115,5)" fg:x="13819" fg:w="91"/><text x="12.5537%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.08%)</title><rect x="12.3037%" y="757" width="0.0810%" height="15" fill="rgb(207,226,44)" fg:x="13819" fg:w="91"/><text x="12.5537%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (91 samples, 0.08%)</title><rect x="12.3037%" y="741" width="0.0810%" height="15" fill="rgb(208,126,0)" fg:x="13819" fg:w="91"/><text x="12.5537%" y="751.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (79 samples, 0.07%)</title><rect x="12.3144%" y="725" width="0.0703%" height="15" fill="rgb(244,66,21)" fg:x="13831" fg:w="79"/><text x="12.5644%" y="735.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (61 samples, 0.05%)</title><rect x="12.3304%" y="709" width="0.0543%" height="15" fill="rgb(222,97,12)" fg:x="13849" fg:w="61"/><text x="12.5804%" y="719.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (61 samples, 0.05%)</title><rect x="12.3304%" y="693" width="0.0543%" height="15" fill="rgb(219,213,19)" fg:x="13849" fg:w="61"/><text x="12.5804%" y="703.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (61 samples, 0.05%)</title><rect x="12.3304%" y="677" width="0.0543%" height="15" fill="rgb(252,169,30)" fg:x="13849" fg:w="61"/><text x="12.5804%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="12.4034%" y="565" width="0.0187%" height="15" fill="rgb(206,32,51)" fg:x="13931" fg:w="21"/><text x="12.6534%" y="575.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="12.4034%" y="549" width="0.0187%" height="15" fill="rgb(250,172,42)" fg:x="13931" fg:w="21"/><text x="12.6534%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (38 samples, 0.03%)</title><rect x="12.3972%" y="613" width="0.0338%" height="15" fill="rgb(209,34,43)" fg:x="13924" fg:w="38"/><text x="12.6472%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (38 samples, 0.03%)</title><rect x="12.3972%" y="597" width="0.0338%" height="15" fill="rgb(223,11,35)" fg:x="13924" fg:w="38"/><text x="12.6472%" y="607.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (37 samples, 0.03%)</title><rect x="12.3981%" y="581" width="0.0329%" height="15" fill="rgb(251,219,26)" fg:x="13925" fg:w="37"/><text x="12.6481%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (49 samples, 0.04%)</title><rect x="12.3972%" y="629" width="0.0436%" height="15" fill="rgb(231,119,3)" fg:x="13924" fg:w="49"/><text x="12.6472%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (74 samples, 0.07%)</title><rect x="12.3847%" y="645" width="0.0659%" height="15" fill="rgb(216,97,11)" fg:x="13910" fg:w="74"/><text x="12.6347%" y="655.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (42 samples, 0.04%)</title><rect x="12.4657%" y="629" width="0.0374%" height="15" fill="rgb(223,59,9)" fg:x="14001" fg:w="42"/><text x="12.7157%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (362 samples, 0.32%)</title><rect x="12.3847%" y="677" width="0.3223%" height="15" fill="rgb(233,93,31)" fg:x="13910" fg:w="362"/><text x="12.6347%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (362 samples, 0.32%)</title><rect x="12.3847%" y="661" width="0.3223%" height="15" fill="rgb(239,81,33)" fg:x="13910" fg:w="362"/><text x="12.6347%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (288 samples, 0.26%)</title><rect x="12.4506%" y="645" width="0.2564%" height="15" fill="rgb(213,120,34)" fg:x="13984" fg:w="288"/><text x="12.7006%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (229 samples, 0.20%)</title><rect x="12.5031%" y="629" width="0.2039%" height="15" fill="rgb(243,49,53)" fg:x="14043" fg:w="229"/><text x="12.7531%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (229 samples, 0.20%)</title><rect x="12.5031%" y="613" width="0.2039%" height="15" fill="rgb(247,216,33)" fg:x="14043" fg:w="229"/><text x="12.7531%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (229 samples, 0.20%)</title><rect x="12.5031%" y="597" width="0.2039%" height="15" fill="rgb(226,26,14)" fg:x="14043" fg:w="229"/><text x="12.7531%" y="607.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (455 samples, 0.41%)</title><rect x="12.3028%" y="1045" width="0.4051%" height="15" fill="rgb(215,49,53)" fg:x="13818" fg:w="455"/><text x="12.5528%" y="1055.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (455 samples, 0.41%)</title><rect x="12.3028%" y="1029" width="0.4051%" height="15" fill="rgb(245,162,40)" fg:x="13818" fg:w="455"/><text x="12.5528%" y="1039.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (454 samples, 0.40%)</title><rect x="12.3037%" y="1013" width="0.4042%" height="15" fill="rgb(229,68,17)" fg:x="13819" fg:w="454"/><text x="12.5537%" y="1023.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (454 samples, 0.40%)</title><rect x="12.3037%" y="997" width="0.4042%" height="15" fill="rgb(213,182,10)" fg:x="13819" fg:w="454"/><text x="12.5537%" y="1007.50"></text></g><g><title>value_trait::Builder::object (454 samples, 0.40%)</title><rect x="12.3037%" y="981" width="0.4042%" height="15" fill="rgb(245,125,30)" fg:x="13819" fg:w="454"/><text x="12.5537%" y="991.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (454 samples, 0.40%)</title><rect x="12.3037%" y="965" width="0.4042%" height="15" fill="rgb(232,202,2)" fg:x="13819" fg:w="454"/><text x="12.5537%" y="975.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (363 samples, 0.32%)</title><rect x="12.3847%" y="949" width="0.3232%" height="15" fill="rgb(237,140,51)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="959.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (363 samples, 0.32%)</title><rect x="12.3847%" y="933" width="0.3232%" height="15" fill="rgb(236,157,25)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (363 samples, 0.32%)</title><rect x="12.3847%" y="917" width="0.3232%" height="15" fill="rgb(219,209,0)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="927.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (363 samples, 0.32%)</title><rect x="12.3847%" y="901" width="0.3232%" height="15" fill="rgb(240,116,54)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="911.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (363 samples, 0.32%)</title><rect x="12.3847%" y="885" width="0.3232%" height="15" fill="rgb(216,10,36)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="895.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (363 samples, 0.32%)</title><rect x="12.3847%" y="869" width="0.3232%" height="15" fill="rgb(222,72,44)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (363 samples, 0.32%)</title><rect x="12.3847%" y="853" width="0.3232%" height="15" fill="rgb(232,159,9)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (363 samples, 0.32%)</title><rect x="12.3847%" y="837" width="0.3232%" height="15" fill="rgb(210,39,32)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (363 samples, 0.32%)</title><rect x="12.3847%" y="821" width="0.3232%" height="15" fill="rgb(216,194,45)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (363 samples, 0.32%)</title><rect x="12.3847%" y="805" width="0.3232%" height="15" fill="rgb(218,18,35)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="815.50"></text></g><g><title>alloc::alloc::alloc (363 samples, 0.32%)</title><rect x="12.3847%" y="789" width="0.3232%" height="15" fill="rgb(207,83,51)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="799.50"></text></g><g><title>__rg_alloc (363 samples, 0.32%)</title><rect x="12.3847%" y="773" width="0.3232%" height="15" fill="rgb(225,63,43)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (363 samples, 0.32%)</title><rect x="12.3847%" y="757" width="0.3232%" height="15" fill="rgb(207,57,36)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="767.50"></text></g><g><title>rust_alloc (363 samples, 0.32%)</title><rect x="12.3847%" y="741" width="0.3232%" height="15" fill="rgb(216,99,33)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (363 samples, 0.32%)</title><rect x="12.3847%" y="725" width="0.3232%" height="15" fill="rgb(225,42,16)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (363 samples, 0.32%)</title><rect x="12.3847%" y="709" width="0.3232%" height="15" fill="rgb(220,201,45)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (363 samples, 0.32%)</title><rect x="12.3847%" y="693" width="0.3232%" height="15" fill="rgb(225,33,4)" fg:x="13910" fg:w="363"/><text x="12.6347%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (12 samples, 0.01%)</title><rect x="12.7079%" y="917" width="0.0107%" height="15" fill="rgb(224,33,50)" fg:x="14273" fg:w="12"/><text x="12.9579%" y="927.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (12 samples, 0.01%)</title><rect x="12.7079%" y="901" width="0.0107%" height="15" fill="rgb(246,198,51)" fg:x="14273" fg:w="12"/><text x="12.9579%" y="911.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (12 samples, 0.01%)</title><rect x="12.7079%" y="885" width="0.0107%" height="15" fill="rgb(205,22,4)" fg:x="14273" fg:w="12"/><text x="12.9579%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,263 samples, 7.36%)</title><rect x="5.3643%" y="1125" width="7.3569%" height="15" fill="rgb(206,3,8)" fg:x="6025" fg:w="8263"/><text x="5.6143%" y="1135.50">&lt;core::fut..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (470 samples, 0.42%)</title><rect x="12.3028%" y="1109" width="0.4185%" height="15" fill="rgb(251,23,15)" fg:x="13818" fg:w="470"/><text x="12.5528%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (470 samples, 0.42%)</title><rect x="12.3028%" y="1093" width="0.4185%" height="15" fill="rgb(252,88,28)" fg:x="13818" fg:w="470"/><text x="12.5528%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (470 samples, 0.42%)</title><rect x="12.3028%" y="1077" width="0.4185%" height="15" fill="rgb(212,127,14)" fg:x="13818" fg:w="470"/><text x="12.5528%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (470 samples, 0.42%)</title><rect x="12.3028%" y="1061" width="0.4185%" height="15" fill="rgb(247,145,37)" fg:x="13818" fg:w="470"/><text x="12.5528%" y="1071.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (15 samples, 0.01%)</title><rect x="12.7079%" y="1045" width="0.0134%" height="15" fill="rgb(209,117,53)" fg:x="14273" fg:w="15"/><text x="12.9579%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (15 samples, 0.01%)</title><rect x="12.7079%" y="1029" width="0.0134%" height="15" fill="rgb(212,90,42)" fg:x="14273" fg:w="15"/><text x="12.9579%" y="1039.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="12.7079%" y="1013" width="0.0134%" height="15" fill="rgb(218,164,37)" fg:x="14273" fg:w="15"/><text x="12.9579%" y="1023.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::clone::Clone for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::clone (15 samples, 0.01%)</title><rect x="12.7079%" y="997" width="0.0134%" height="15" fill="rgb(246,65,34)" fg:x="14273" fg:w="15"/><text x="12.9579%" y="1007.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="12.7079%" y="981" width="0.0134%" height="15" fill="rgb(231,100,33)" fg:x="14273" fg:w="15"/><text x="12.9579%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.01%)</title><rect x="12.7079%" y="965" width="0.0134%" height="15" fill="rgb(228,126,14)" fg:x="14273" fg:w="15"/><text x="12.9579%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (15 samples, 0.01%)</title><rect x="12.7079%" y="949" width="0.0134%" height="15" fill="rgb(215,173,21)" fg:x="14273" fg:w="15"/><text x="12.9579%" y="959.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (15 samples, 0.01%)</title><rect x="12.7079%" y="933" width="0.0134%" height="15" fill="rgb(210,6,40)" fg:x="14273" fg:w="15"/><text x="12.9579%" y="943.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (31 samples, 0.03%)</title><rect x="12.7373%" y="1125" width="0.0276%" height="15" fill="rgb(212,48,18)" fg:x="14306" fg:w="31"/><text x="12.9873%" y="1135.50"></text></g><g><title>__clock_gettime_2 (23 samples, 0.02%)</title><rect x="12.7925%" y="1125" width="0.0205%" height="15" fill="rgb(230,214,11)" fg:x="14368" fg:w="23"/><text x="13.0425%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (115 samples, 0.10%)</title><rect x="12.8138%" y="1125" width="0.1024%" height="15" fill="rgb(254,105,39)" fg:x="14392" fg:w="115"/><text x="13.0638%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (14 samples, 0.01%)</title><rect x="12.9189%" y="1125" width="0.0125%" height="15" fill="rgb(245,158,5)" fg:x="14510" fg:w="14"/><text x="13.1689%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (13 samples, 0.01%)</title><rect x="12.9314%" y="1125" width="0.0116%" height="15" fill="rgb(249,208,11)" fg:x="14524" fg:w="13"/><text x="13.1814%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="12.9563%" y="1109" width="0.0276%" height="15" fill="rgb(210,39,28)" fg:x="14552" fg:w="31"/><text x="13.2063%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.02%)</title><rect x="12.9625%" y="1093" width="0.0214%" height="15" fill="rgb(211,56,53)" fg:x="14559" fg:w="24"/><text x="13.2125%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (24 samples, 0.02%)</title><rect x="12.9625%" y="1077" width="0.0214%" height="15" fill="rgb(226,201,30)" fg:x="14559" fg:w="24"/><text x="13.2125%" y="1087.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (12 samples, 0.01%)</title><rect x="12.9732%" y="1061" width="0.0107%" height="15" fill="rgb(239,101,34)" fg:x="14571" fg:w="12"/><text x="13.2232%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (12 samples, 0.01%)</title><rect x="12.9732%" y="1045" width="0.0107%" height="15" fill="rgb(226,209,5)" fg:x="14571" fg:w="12"/><text x="13.2232%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (12 samples, 0.01%)</title><rect x="12.9732%" y="1029" width="0.0107%" height="15" fill="rgb(250,105,47)" fg:x="14571" fg:w="12"/><text x="13.2232%" y="1039.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (12 samples, 0.01%)</title><rect x="12.9732%" y="1013" width="0.0107%" height="15" fill="rgb(230,72,3)" fg:x="14571" fg:w="12"/><text x="13.2232%" y="1023.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="12.9732%" y="997" width="0.0107%" height="15" fill="rgb(232,218,39)" fg:x="14571" fg:w="12"/><text x="13.2232%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="12.9732%" y="981" width="0.0107%" height="15" fill="rgb(248,166,6)" fg:x="14571" fg:w="12"/><text x="13.2232%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="12.9732%" y="965" width="0.0107%" height="15" fill="rgb(247,89,20)" fg:x="14571" fg:w="12"/><text x="13.2232%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="12.9732%" y="949" width="0.0107%" height="15" fill="rgb(248,130,54)" fg:x="14571" fg:w="12"/><text x="13.2232%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="12.9732%" y="933" width="0.0107%" height="15" fill="rgb(234,196,4)" fg:x="14571" fg:w="12"/><text x="13.2232%" y="943.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="12.9732%" y="917" width="0.0107%" height="15" fill="rgb(250,143,31)" fg:x="14571" fg:w="12"/><text x="13.2232%" y="927.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="12.9732%" y="901" width="0.0107%" height="15" fill="rgb(211,110,34)" fg:x="14571" fg:w="12"/><text x="13.2232%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="12.9732%" y="885" width="0.0107%" height="15" fill="rgb(215,124,48)" fg:x="14571" fg:w="12"/><text x="13.2232%" y="895.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::clone::Clone for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::clone (57 samples, 0.05%)</title><rect x="12.9510%" y="1125" width="0.0507%" height="15" fill="rgb(216,46,13)" fg:x="14546" fg:w="57"/><text x="13.2010%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (25 samples, 0.02%)</title><rect x="13.0347%" y="1109" width="0.0223%" height="15" fill="rgb(205,184,25)" fg:x="14640" fg:w="25"/><text x="13.2847%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (25 samples, 0.02%)</title><rect x="13.0347%" y="1093" width="0.0223%" height="15" fill="rgb(228,1,10)" fg:x="14640" fg:w="25"/><text x="13.2847%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.02%)</title><rect x="13.0347%" y="1077" width="0.0223%" height="15" fill="rgb(213,116,27)" fg:x="14640" fg:w="25"/><text x="13.2847%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.02%)</title><rect x="13.0347%" y="1061" width="0.0223%" height="15" fill="rgb(241,95,50)" fg:x="14640" fg:w="25"/><text x="13.2847%" y="1071.50"></text></g><g><title>__rg_dealloc (25 samples, 0.02%)</title><rect x="13.0347%" y="1045" width="0.0223%" height="15" fill="rgb(238,48,32)" fg:x="14640" fg:w="25"/><text x="13.2847%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (25 samples, 0.02%)</title><rect x="13.0347%" y="1029" width="0.0223%" height="15" fill="rgb(235,113,49)" fg:x="14640" fg:w="25"/><text x="13.2847%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (64 samples, 0.06%)</title><rect x="13.0017%" y="1125" width="0.0570%" height="15" fill="rgb(205,127,43)" fg:x="14603" fg:w="64"/><text x="13.2517%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (18 samples, 0.02%)</title><rect x="13.0605%" y="1125" width="0.0160%" height="15" fill="rgb(250,162,2)" fg:x="14669" fg:w="18"/><text x="13.3105%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="13.1486%" y="1029" width="0.0151%" height="15" fill="rgb(220,13,41)" fg:x="14768" fg:w="17"/><text x="13.3986%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (17 samples, 0.02%)</title><rect x="13.1486%" y="1013" width="0.0151%" height="15" fill="rgb(249,221,25)" fg:x="14768" fg:w="17"/><text x="13.3986%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (17 samples, 0.02%)</title><rect x="13.1486%" y="997" width="0.0151%" height="15" fill="rgb(215,208,19)" fg:x="14768" fg:w="17"/><text x="13.3986%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (17 samples, 0.02%)</title><rect x="13.1486%" y="981" width="0.0151%" height="15" fill="rgb(236,175,2)" fg:x="14768" fg:w="17"/><text x="13.3986%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="13.1486%" y="965" width="0.0151%" height="15" fill="rgb(241,52,2)" fg:x="14768" fg:w="17"/><text x="13.3986%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="13.1486%" y="949" width="0.0151%" height="15" fill="rgb(248,140,14)" fg:x="14768" fg:w="17"/><text x="13.3986%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="13.1486%" y="933" width="0.0151%" height="15" fill="rgb(253,22,42)" fg:x="14768" fg:w="17"/><text x="13.3986%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (97 samples, 0.09%)</title><rect x="13.0854%" y="1125" width="0.0864%" height="15" fill="rgb(234,61,47)" fg:x="14697" fg:w="97"/><text x="13.3354%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (26 samples, 0.02%)</title><rect x="13.1486%" y="1109" width="0.0231%" height="15" fill="rgb(208,226,15)" fg:x="14768" fg:w="26"/><text x="13.3986%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (26 samples, 0.02%)</title><rect x="13.1486%" y="1093" width="0.0231%" height="15" fill="rgb(217,221,4)" fg:x="14768" fg:w="26"/><text x="13.3986%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26 samples, 0.02%)</title><rect x="13.1486%" y="1077" width="0.0231%" height="15" fill="rgb(212,174,34)" fg:x="14768" fg:w="26"/><text x="13.3986%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.02%)</title><rect x="13.1486%" y="1061" width="0.0231%" height="15" fill="rgb(253,83,4)" fg:x="14768" fg:w="26"/><text x="13.3986%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26 samples, 0.02%)</title><rect x="13.1486%" y="1045" width="0.0231%" height="15" fill="rgb(250,195,49)" fg:x="14768" fg:w="26"/><text x="13.3986%" y="1055.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (43 samples, 0.04%)</title><rect x="13.1718%" y="1125" width="0.0383%" height="15" fill="rgb(241,192,25)" fg:x="14794" fg:w="43"/><text x="13.4218%" y="1135.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (43 samples, 0.04%)</title><rect x="13.1718%" y="1109" width="0.0383%" height="15" fill="rgb(208,124,10)" fg:x="14794" fg:w="43"/><text x="13.4218%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (43 samples, 0.04%)</title><rect x="13.1718%" y="1093" width="0.0383%" height="15" fill="rgb(222,33,0)" fg:x="14794" fg:w="43"/><text x="13.4218%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (43 samples, 0.04%)</title><rect x="13.1718%" y="1077" width="0.0383%" height="15" fill="rgb(234,209,28)" fg:x="14794" fg:w="43"/><text x="13.4218%" y="1087.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (43 samples, 0.04%)</title><rect x="13.1718%" y="1061" width="0.0383%" height="15" fill="rgb(224,11,23)" fg:x="14794" fg:w="43"/><text x="13.4218%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="13.1994%" y="1045" width="0.0107%" height="15" fill="rgb(232,99,1)" fg:x="14825" fg:w="12"/><text x="13.4494%" y="1055.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (24 samples, 0.02%)</title><rect x="13.2101%" y="1125" width="0.0214%" height="15" fill="rgb(237,95,45)" fg:x="14837" fg:w="24"/><text x="13.4601%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (15 samples, 0.01%)</title><rect x="13.2181%" y="1109" width="0.0134%" height="15" fill="rgb(208,109,11)" fg:x="14846" fg:w="15"/><text x="13.4681%" y="1119.50"></text></g><g><title>core::mem::drop (15 samples, 0.01%)</title><rect x="13.2181%" y="1093" width="0.0134%" height="15" fill="rgb(216,190,48)" fg:x="14846" fg:w="15"/><text x="13.4681%" y="1103.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (22 samples, 0.02%)</title><rect x="13.2350%" y="1125" width="0.0196%" height="15" fill="rgb(251,171,36)" fg:x="14865" fg:w="22"/><text x="13.4850%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="13.2368%" y="1109" width="0.0178%" height="15" fill="rgb(230,62,22)" fg:x="14867" fg:w="20"/><text x="13.4868%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (20 samples, 0.02%)</title><rect x="13.2368%" y="1093" width="0.0178%" height="15" fill="rgb(225,114,35)" fg:x="14867" fg:w="20"/><text x="13.4868%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (20 samples, 0.02%)</title><rect x="13.2368%" y="1077" width="0.0178%" height="15" fill="rgb(215,118,42)" fg:x="14867" fg:w="20"/><text x="13.4868%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (14 samples, 0.01%)</title><rect x="13.2608%" y="1125" width="0.0125%" height="15" fill="rgb(243,119,21)" fg:x="14894" fg:w="14"/><text x="13.5108%" y="1135.50"></text></g><g><title>async_ffi::DropBomb::with (14 samples, 0.01%)</title><rect x="13.2608%" y="1109" width="0.0125%" height="15" fill="rgb(252,177,53)" fg:x="14894" fg:w="14"/><text x="13.5108%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (14 samples, 0.01%)</title><rect x="13.2608%" y="1093" width="0.0125%" height="15" fill="rgb(237,209,29)" fg:x="14894" fg:w="14"/><text x="13.5108%" y="1103.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="13.2608%" y="1077" width="0.0125%" height="15" fill="rgb(212,65,23)" fg:x="14894" fg:w="14"/><text x="13.5108%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (22 samples, 0.02%)</title><rect x="13.2733%" y="1125" width="0.0196%" height="15" fill="rgb(230,222,46)" fg:x="14908" fg:w="22"/><text x="13.5233%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="13.2929%" y="789" width="0.0125%" height="15" fill="rgb(215,135,32)" fg:x="14930" fg:w="14"/><text x="13.5429%" y="799.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (75 samples, 0.07%)</title><rect x="13.3053%" y="789" width="0.0668%" height="15" fill="rgb(246,101,22)" fg:x="14944" fg:w="75"/><text x="13.5553%" y="799.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (1,063 samples, 0.95%)</title><rect x="13.6071%" y="773" width="0.9464%" height="15" fill="rgb(206,107,13)" fg:x="15283" fg:w="1063"/><text x="13.8571%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (957 samples, 0.85%)</title><rect x="13.7015%" y="757" width="0.8521%" height="15" fill="rgb(250,100,44)" fg:x="15389" fg:w="957"/><text x="13.9515%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::ops::deref::Deref&gt;::deref (15 samples, 0.01%)</title><rect x="14.5536%" y="773" width="0.0134%" height="15" fill="rgb(231,147,38)" fg:x="16346" fg:w="15"/><text x="14.8036%" y="783.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (15 samples, 0.01%)</title><rect x="14.5536%" y="757" width="0.0134%" height="15" fill="rgb(229,8,40)" fg:x="16346" fg:w="15"/><text x="14.8036%" y="767.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (720 samples, 0.64%)</title><rect x="15.2828%" y="741" width="0.6410%" height="15" fill="rgb(221,135,30)" fg:x="17165" fg:w="720"/><text x="15.5328%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (83 samples, 0.07%)</title><rect x="15.9238%" y="741" width="0.0739%" height="15" fill="rgb(249,193,18)" fg:x="17885" fg:w="83"/><text x="16.1738%" y="751.50"></text></g><g><title>abi_stable::std_types::result::&lt;impl core::convert::From&lt;abi_stable::std_types::result::RResult&lt;T,E&gt;&gt; for core::result::Result&lt;T,E&gt;&gt;::from (31 samples, 0.03%)</title><rect x="15.9701%" y="725" width="0.0276%" height="15" fill="rgb(209,133,39)" fg:x="17937" fg:w="31"/><text x="16.2201%" y="735.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (199 samples, 0.18%)</title><rect x="15.9977%" y="709" width="0.1772%" height="15" fill="rgb(232,100,14)" fg:x="17968" fg:w="199"/><text x="16.2477%" y="719.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (193 samples, 0.17%)</title><rect x="16.0031%" y="693" width="0.1718%" height="15" fill="rgb(224,185,1)" fg:x="17974" fg:w="193"/><text x="16.2531%" y="703.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (193 samples, 0.17%)</title><rect x="16.0031%" y="677" width="0.1718%" height="15" fill="rgb(223,139,8)" fg:x="17974" fg:w="193"/><text x="16.2531%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (64 samples, 0.06%)</title><rect x="16.2185%" y="661" width="0.0570%" height="15" fill="rgb(232,213,38)" fg:x="18216" fg:w="64"/><text x="16.4685%" y="671.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (64 samples, 0.06%)</title><rect x="16.2185%" y="645" width="0.0570%" height="15" fill="rgb(207,94,22)" fg:x="18216" fg:w="64"/><text x="16.4685%" y="655.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (64 samples, 0.06%)</title><rect x="16.2185%" y="629" width="0.0570%" height="15" fill="rgb(219,183,54)" fg:x="18216" fg:w="64"/><text x="16.4685%" y="639.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,909 samples, 1.70%)</title><rect x="16.1749%" y="709" width="1.6997%" height="15" fill="rgb(216,185,54)" fg:x="18167" fg:w="1909"/><text x="16.4249%" y="719.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,892 samples, 1.68%)</title><rect x="16.1900%" y="693" width="1.6845%" height="15" fill="rgb(254,217,39)" fg:x="18184" fg:w="1892"/><text x="16.4400%" y="703.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,876 samples, 1.67%)</title><rect x="16.2043%" y="677" width="1.6703%" height="15" fill="rgb(240,178,23)" fg:x="18200" fg:w="1876"/><text x="16.4543%" y="687.50"></text></g><g><title>std::panic::catch_unwind (1,796 samples, 1.60%)</title><rect x="16.2755%" y="661" width="1.5991%" height="15" fill="rgb(218,11,47)" fg:x="18280" fg:w="1796"/><text x="16.5255%" y="671.50"></text></g><g><title>std::panicking::try (1,796 samples, 1.60%)</title><rect x="16.2755%" y="645" width="1.5991%" height="15" fill="rgb(218,51,51)" fg:x="18280" fg:w="1796"/><text x="16.5255%" y="655.50"></text></g><g><title>std::panicking::try::do_call (1,796 samples, 1.60%)</title><rect x="16.2755%" y="629" width="1.5991%" height="15" fill="rgb(238,126,27)" fg:x="18280" fg:w="1796"/><text x="16.5255%" y="639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (21 samples, 0.02%)</title><rect x="17.8559%" y="613" width="0.0187%" height="15" fill="rgb(249,202,22)" fg:x="20055" fg:w="21"/><text x="18.1059%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (21 samples, 0.02%)</title><rect x="17.8559%" y="597" width="0.0187%" height="15" fill="rgb(254,195,49)" fg:x="20055" fg:w="21"/><text x="18.1059%" y="607.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (21 samples, 0.02%)</title><rect x="17.8559%" y="581" width="0.0187%" height="15" fill="rgb(208,123,14)" fg:x="20055" fg:w="21"/><text x="18.1059%" y="591.50"></text></g><g><title>async_ffi::FfiContext::with_context (15 samples, 0.01%)</title><rect x="17.8612%" y="565" width="0.0134%" height="15" fill="rgb(224,200,8)" fg:x="20061" fg:w="15"/><text x="18.1112%" y="575.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,298 samples, 2.05%)</title><rect x="15.9977%" y="741" width="2.0460%" height="15" fill="rgb(217,61,36)" fg:x="17968" fg:w="2298"/><text x="16.2477%" y="751.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,298 samples, 2.05%)</title><rect x="15.9977%" y="725" width="2.0460%" height="15" fill="rgb(206,35,45)" fg:x="17968" fg:w="2298"/><text x="16.2477%" y="735.50">&lt;..</text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (190 samples, 0.17%)</title><rect x="17.8746%" y="709" width="0.1692%" height="15" fill="rgb(217,65,33)" fg:x="20076" fg:w="190"/><text x="18.1246%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (562 samples, 0.50%)</title><rect x="18.0437%" y="741" width="0.5004%" height="15" fill="rgb(222,158,48)" fg:x="20266" fg:w="562"/><text x="18.2937%" y="751.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (54 samples, 0.05%)</title><rect x="18.5441%" y="741" width="0.0481%" height="15" fill="rgb(254,2,54)" fg:x="20828" fg:w="54"/><text x="18.7941%" y="751.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (19 samples, 0.02%)</title><rect x="18.5922%" y="693" width="0.0169%" height="15" fill="rgb(250,143,38)" fg:x="20882" fg:w="19"/><text x="18.8422%" y="703.50"></text></g><g><title>async_ffi::DropBomb::with (19 samples, 0.02%)</title><rect x="18.5922%" y="677" width="0.0169%" height="15" fill="rgb(248,25,0)" fg:x="20882" fg:w="19"/><text x="18.8422%" y="687.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (12 samples, 0.01%)</title><rect x="18.5984%" y="661" width="0.0107%" height="15" fill="rgb(206,152,27)" fg:x="20889" fg:w="12"/><text x="18.8484%" y="671.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="18.5984%" y="645" width="0.0107%" height="15" fill="rgb(240,77,30)" fg:x="20889" fg:w="12"/><text x="18.8484%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}}&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="18.5984%" y="629" width="0.0107%" height="15" fill="rgb(231,5,3)" fg:x="20889" fg:w="12"/><text x="18.8484%" y="639.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="18.5984%" y="613" width="0.0107%" height="15" fill="rgb(207,226,32)" fg:x="20889" fg:w="12"/><text x="18.8484%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="18.5984%" y="597" width="0.0107%" height="15" fill="rgb(222,207,47)" fg:x="20889" fg:w="12"/><text x="18.8484%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="18.5984%" y="581" width="0.0107%" height="15" fill="rgb(229,115,45)" fg:x="20889" fg:w="12"/><text x="18.8484%" y="591.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="18.5984%" y="565" width="0.0107%" height="15" fill="rgb(224,191,6)" fg:x="20889" fg:w="12"/><text x="18.8484%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="18.5984%" y="549" width="0.0107%" height="15" fill="rgb(230,227,24)" fg:x="20889" fg:w="12"/><text x="18.8484%" y="559.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="18.6314%" y="549" width="0.0116%" height="15" fill="rgb(228,80,19)" fg:x="20926" fg:w="13"/><text x="18.8814%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="18.6189%" y="597" width="0.0276%" height="15" fill="rgb(247,229,0)" fg:x="20912" fg:w="31"/><text x="18.8689%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="18.6189%" y="581" width="0.0276%" height="15" fill="rgb(237,194,15)" fg:x="20912" fg:w="31"/><text x="18.8689%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (30 samples, 0.03%)</title><rect x="18.6198%" y="565" width="0.0267%" height="15" fill="rgb(219,203,20)" fg:x="20913" fg:w="30"/><text x="18.8698%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (40 samples, 0.04%)</title><rect x="18.6118%" y="629" width="0.0356%" height="15" fill="rgb(234,128,8)" fg:x="20904" fg:w="40"/><text x="18.8618%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (40 samples, 0.04%)</title><rect x="18.6118%" y="613" width="0.0356%" height="15" fill="rgb(248,202,8)" fg:x="20904" fg:w="40"/><text x="18.8618%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (47 samples, 0.04%)</title><rect x="18.6118%" y="661" width="0.0418%" height="15" fill="rgb(206,104,37)" fg:x="20904" fg:w="47"/><text x="18.8618%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (47 samples, 0.04%)</title><rect x="18.6118%" y="645" width="0.0418%" height="15" fill="rgb(223,8,27)" fg:x="20904" fg:w="47"/><text x="18.8618%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (55 samples, 0.05%)</title><rect x="18.6118%" y="677" width="0.0490%" height="15" fill="rgb(216,217,28)" fg:x="20904" fg:w="55"/><text x="18.8618%" y="687.50"></text></g><g><title>rust_dealloc (67 samples, 0.06%)</title><rect x="18.6091%" y="693" width="0.0597%" height="15" fill="rgb(249,199,1)" fg:x="20901" fg:w="67"/><text x="18.8591%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (106 samples, 0.09%)</title><rect x="18.5922%" y="741" width="0.0944%" height="15" fill="rgb(240,85,17)" fg:x="20882" fg:w="106"/><text x="18.8422%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (106 samples, 0.09%)</title><rect x="18.5922%" y="725" width="0.0944%" height="15" fill="rgb(206,108,45)" fg:x="20882" fg:w="106"/><text x="18.8422%" y="735.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 0.09%)</title><rect x="18.5922%" y="709" width="0.0944%" height="15" fill="rgb(245,210,41)" fg:x="20882" fg:w="106"/><text x="18.8422%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (20 samples, 0.02%)</title><rect x="18.6688%" y="693" width="0.0178%" height="15" fill="rgb(206,13,37)" fg:x="20968" fg:w="20"/><text x="18.9188%" y="703.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (16 samples, 0.01%)</title><rect x="18.6723%" y="677" width="0.0142%" height="15" fill="rgb(250,61,18)" fg:x="20972" fg:w="16"/><text x="18.9223%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned_erms (165 samples, 0.15%)</title><rect x="19.1246%" y="725" width="0.1469%" height="15" fill="rgb(235,172,48)" fg:x="21480" fg:w="165"/><text x="19.3746%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (230 samples, 0.20%)</title><rect x="19.3160%" y="629" width="0.2048%" height="15" fill="rgb(249,201,17)" fg:x="21695" fg:w="230"/><text x="19.5660%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (15 samples, 0.01%)</title><rect x="19.5520%" y="469" width="0.0134%" height="15" fill="rgb(219,208,6)" fg:x="21960" fg:w="15"/><text x="19.8020%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (15 samples, 0.01%)</title><rect x="19.5520%" y="453" width="0.0134%" height="15" fill="rgb(248,31,23)" fg:x="21960" fg:w="15"/><text x="19.8020%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (15 samples, 0.01%)</title><rect x="19.5520%" y="437" width="0.0134%" height="15" fill="rgb(245,15,42)" fg:x="21960" fg:w="15"/><text x="19.8020%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="19.5520%" y="421" width="0.0134%" height="15" fill="rgb(222,217,39)" fg:x="21960" fg:w="15"/><text x="19.8020%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="19.5520%" y="405" width="0.0134%" height="15" fill="rgb(210,219,27)" fg:x="21960" fg:w="15"/><text x="19.8020%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (18 samples, 0.02%)</title><rect x="19.5698%" y="405" width="0.0160%" height="15" fill="rgb(252,166,36)" fg:x="21980" fg:w="18"/><text x="19.8198%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (18 samples, 0.02%)</title><rect x="19.5698%" y="389" width="0.0160%" height="15" fill="rgb(245,132,34)" fg:x="21980" fg:w="18"/><text x="19.8198%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (17 samples, 0.02%)</title><rect x="19.5707%" y="373" width="0.0151%" height="15" fill="rgb(236,54,3)" fg:x="21981" fg:w="17"/><text x="19.8207%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (22 samples, 0.02%)</title><rect x="19.5698%" y="421" width="0.0196%" height="15" fill="rgb(241,173,43)" fg:x="21980" fg:w="22"/><text x="19.8198%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (33 samples, 0.03%)</title><rect x="19.5653%" y="437" width="0.0294%" height="15" fill="rgb(215,190,9)" fg:x="21975" fg:w="33"/><text x="19.8153%" y="447.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (13 samples, 0.01%)</title><rect x="19.6036%" y="421" width="0.0116%" height="15" fill="rgb(242,101,16)" fg:x="22018" fg:w="13"/><text x="19.8536%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (184 samples, 0.16%)</title><rect x="19.5653%" y="469" width="0.1638%" height="15" fill="rgb(223,190,21)" fg:x="21975" fg:w="184"/><text x="19.8153%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (184 samples, 0.16%)</title><rect x="19.5653%" y="453" width="0.1638%" height="15" fill="rgb(215,228,25)" fg:x="21975" fg:w="184"/><text x="19.8153%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (151 samples, 0.13%)</title><rect x="19.5947%" y="437" width="0.1344%" height="15" fill="rgb(225,36,22)" fg:x="22008" fg:w="151"/><text x="19.8447%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (128 samples, 0.11%)</title><rect x="19.6152%" y="421" width="0.1140%" height="15" fill="rgb(251,106,46)" fg:x="22031" fg:w="128"/><text x="19.8652%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (128 samples, 0.11%)</title><rect x="19.6152%" y="405" width="0.1140%" height="15" fill="rgb(208,90,1)" fg:x="22031" fg:w="128"/><text x="19.8652%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (128 samples, 0.11%)</title><rect x="19.6152%" y="389" width="0.1140%" height="15" fill="rgb(243,10,4)" fg:x="22031" fg:w="128"/><text x="19.8652%" y="399.50"></text></g><g><title>snmalloc::CDLLNodeBase&lt;snmalloc::CDLLNode&lt;snmalloc::CapPtrCBChunk&gt;, snmalloc::CapPtrCBChunk&gt;::is_empty (12 samples, 0.01%)</title><rect x="19.7300%" y="453" width="0.0107%" height="15" fill="rgb(212,137,27)" fg:x="22160" fg:w="12"/><text x="19.9800%" y="463.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (37 samples, 0.03%)</title><rect x="19.7407%" y="437" width="0.0329%" height="15" fill="rgb(231,220,49)" fg:x="22172" fg:w="37"/><text x="19.9907%" y="447.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (37 samples, 0.03%)</title><rect x="19.7407%" y="421" width="0.0329%" height="15" fill="rgb(237,96,20)" fg:x="22172" fg:w="37"/><text x="19.9907%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (37 samples, 0.03%)</title><rect x="19.7407%" y="405" width="0.0329%" height="15" fill="rgb(239,229,30)" fg:x="22172" fg:w="37"/><text x="19.9907%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (29 samples, 0.03%)</title><rect x="19.7737%" y="437" width="0.0258%" height="15" fill="rgb(219,65,33)" fg:x="22209" fg:w="29"/><text x="20.0237%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (29 samples, 0.03%)</title><rect x="19.7737%" y="421" width="0.0258%" height="15" fill="rgb(243,134,7)" fg:x="22209" fg:w="29"/><text x="20.0237%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (83 samples, 0.07%)</title><rect x="19.7292%" y="469" width="0.0739%" height="15" fill="rgb(216,177,54)" fg:x="22159" fg:w="83"/><text x="19.9792%" y="479.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (70 samples, 0.06%)</title><rect x="19.7407%" y="453" width="0.0623%" height="15" fill="rgb(211,160,20)" fg:x="22172" fg:w="70"/><text x="19.9907%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="19.8031%" y="469" width="0.0107%" height="15" fill="rgb(239,85,39)" fg:x="22242" fg:w="12"/><text x="20.0531%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="19.8031%" y="453" width="0.0107%" height="15" fill="rgb(232,125,22)" fg:x="22242" fg:w="12"/><text x="20.0531%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::empty (30 samples, 0.03%)</title><rect x="19.8137%" y="469" width="0.0267%" height="15" fill="rgb(244,57,34)" fg:x="22254" fg:w="30"/><text x="20.0637%" y="479.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (30 samples, 0.03%)</title><rect x="19.8137%" y="453" width="0.0267%" height="15" fill="rgb(214,203,32)" fg:x="22254" fg:w="30"/><text x="20.0637%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (924 samples, 0.82%)</title><rect x="19.5279%" y="517" width="0.8227%" height="15" fill="rgb(207,58,43)" fg:x="21933" fg:w="924"/><text x="19.7779%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (924 samples, 0.82%)</title><rect x="19.5279%" y="501" width="0.8227%" height="15" fill="rgb(215,193,15)" fg:x="21933" fg:w="924"/><text x="19.7779%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (908 samples, 0.81%)</title><rect x="19.5422%" y="485" width="0.8084%" height="15" fill="rgb(232,15,44)" fg:x="21949" fg:w="908"/><text x="19.7922%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (573 samples, 0.51%)</title><rect x="19.8405%" y="469" width="0.5102%" height="15" fill="rgb(212,3,48)" fg:x="22284" fg:w="573"/><text x="20.0905%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (573 samples, 0.51%)</title><rect x="19.8405%" y="453" width="0.5102%" height="15" fill="rgb(218,128,7)" fg:x="22284" fg:w="573"/><text x="20.0905%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,204 samples, 1.07%)</title><rect x="19.2929%" y="645" width="1.0720%" height="15" fill="rgb(226,216,39)" fg:x="21669" fg:w="1204"/><text x="19.5429%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (948 samples, 0.84%)</title><rect x="19.5208%" y="629" width="0.8440%" height="15" fill="rgb(243,47,51)" fg:x="21925" fg:w="948"/><text x="19.7708%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (948 samples, 0.84%)</title><rect x="19.5208%" y="613" width="0.8440%" height="15" fill="rgb(241,183,40)" fg:x="21925" fg:w="948"/><text x="19.7708%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (948 samples, 0.84%)</title><rect x="19.5208%" y="597" width="0.8440%" height="15" fill="rgb(231,217,32)" fg:x="21925" fg:w="948"/><text x="19.7708%" y="607.50"></text></g><g><title>alloc::alloc::alloc (948 samples, 0.84%)</title><rect x="19.5208%" y="581" width="0.8440%" height="15" fill="rgb(229,61,38)" fg:x="21925" fg:w="948"/><text x="19.7708%" y="591.50"></text></g><g><title>__rg_alloc (948 samples, 0.84%)</title><rect x="19.5208%" y="565" width="0.8440%" height="15" fill="rgb(225,210,5)" fg:x="21925" fg:w="948"/><text x="19.7708%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (948 samples, 0.84%)</title><rect x="19.5208%" y="549" width="0.8440%" height="15" fill="rgb(231,79,45)" fg:x="21925" fg:w="948"/><text x="19.7708%" y="559.50"></text></g><g><title>rust_alloc (948 samples, 0.84%)</title><rect x="19.5208%" y="533" width="0.8440%" height="15" fill="rgb(224,100,7)" fg:x="21925" fg:w="948"/><text x="19.7708%" y="543.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (16 samples, 0.01%)</title><rect x="20.3506%" y="517" width="0.0142%" height="15" fill="rgb(241,198,18)" fg:x="22857" fg:w="16"/><text x="20.6006%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (1,234 samples, 1.10%)</title><rect x="19.2715%" y="725" width="1.0987%" height="15" fill="rgb(252,97,53)" fg:x="21645" fg:w="1234"/><text x="19.5215%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (1,210 samples, 1.08%)</title><rect x="19.2929%" y="709" width="1.0773%" height="15" fill="rgb(220,88,7)" fg:x="21669" fg:w="1210"/><text x="19.5429%" y="719.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (1,210 samples, 1.08%)</title><rect x="19.2929%" y="693" width="1.0773%" height="15" fill="rgb(213,176,14)" fg:x="21669" fg:w="1210"/><text x="19.5429%" y="703.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (1,210 samples, 1.08%)</title><rect x="19.2929%" y="677" width="1.0773%" height="15" fill="rgb(246,73,7)" fg:x="21669" fg:w="1210"/><text x="19.5429%" y="687.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (1,210 samples, 1.08%)</title><rect x="19.2929%" y="661" width="1.0773%" height="15" fill="rgb(245,64,36)" fg:x="21669" fg:w="1210"/><text x="19.5429%" y="671.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::_::&lt;impl tremor_runtime::connectors::sink::RawSink_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::on_event (53 samples, 0.05%)</title><rect x="20.3711%" y="725" width="0.0472%" height="15" fill="rgb(245,80,10)" fg:x="22880" fg:w="53"/><text x="20.6211%" y="735.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (1,946 samples, 1.73%)</title><rect x="18.6866%" y="741" width="1.7326%" height="15" fill="rgb(232,107,50)" fg:x="20988" fg:w="1946"/><text x="18.9366%" y="751.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (6,165 samples, 5.49%)</title><rect x="14.9311%" y="757" width="5.4890%" height="15" fill="rgb(253,3,0)" fg:x="16770" fg:w="6165"/><text x="15.1811%" y="767.50">tremor_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,556 samples, 5.84%)</title><rect x="14.5874%" y="773" width="5.8371%" height="15" fill="rgb(212,99,53)" fg:x="16384" fg:w="6556"/><text x="14.8374%" y="783.50">&lt;core::..</text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (21 samples, 0.02%)</title><rect x="20.4548%" y="645" width="0.0187%" height="15" fill="rgb(249,111,54)" fg:x="22974" fg:w="21"/><text x="20.7048%" y="655.50"></text></g><g><title>aligned_size (19 samples, 0.02%)</title><rect x="20.4904%" y="501" width="0.0169%" height="15" fill="rgb(249,55,30)" fg:x="23014" fg:w="19"/><text x="20.7404%" y="511.50"></text></g><g><title>rust_alloc (16 samples, 0.01%)</title><rect x="20.5073%" y="469" width="0.0142%" height="15" fill="rgb(237,47,42)" fg:x="23033" fg:w="16"/><text x="20.7573%" y="479.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (287 samples, 0.26%)</title><rect x="20.4548%" y="661" width="0.2555%" height="15" fill="rgb(211,20,18)" fg:x="22974" fg:w="287"/><text x="20.7048%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (266 samples, 0.24%)</title><rect x="20.4735%" y="645" width="0.2368%" height="15" fill="rgb(231,203,46)" fg:x="22995" fg:w="266"/><text x="20.7235%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (266 samples, 0.24%)</title><rect x="20.4735%" y="629" width="0.2368%" height="15" fill="rgb(237,142,3)" fg:x="22995" fg:w="266"/><text x="20.7235%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (258 samples, 0.23%)</title><rect x="20.4806%" y="613" width="0.2297%" height="15" fill="rgb(241,107,1)" fg:x="23003" fg:w="258"/><text x="20.7306%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (258 samples, 0.23%)</title><rect x="20.4806%" y="597" width="0.2297%" height="15" fill="rgb(229,83,13)" fg:x="23003" fg:w="258"/><text x="20.7306%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (258 samples, 0.23%)</title><rect x="20.4806%" y="581" width="0.2297%" height="15" fill="rgb(241,91,40)" fg:x="23003" fg:w="258"/><text x="20.7306%" y="591.50"></text></g><g><title>alloc::alloc::alloc (258 samples, 0.23%)</title><rect x="20.4806%" y="565" width="0.2297%" height="15" fill="rgb(225,3,45)" fg:x="23003" fg:w="258"/><text x="20.7306%" y="575.50"></text></g><g><title>__rg_alloc (258 samples, 0.23%)</title><rect x="20.4806%" y="549" width="0.2297%" height="15" fill="rgb(244,223,14)" fg:x="23003" fg:w="258"/><text x="20.7306%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (258 samples, 0.23%)</title><rect x="20.4806%" y="533" width="0.2297%" height="15" fill="rgb(224,124,37)" fg:x="23003" fg:w="258"/><text x="20.7306%" y="543.50"></text></g><g><title>rust_alloc (247 samples, 0.22%)</title><rect x="20.4904%" y="517" width="0.2199%" height="15" fill="rgb(251,171,30)" fg:x="23014" fg:w="247"/><text x="20.7404%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (228 samples, 0.20%)</title><rect x="20.5073%" y="501" width="0.2030%" height="15" fill="rgb(236,46,54)" fg:x="23033" fg:w="228"/><text x="20.7573%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (228 samples, 0.20%)</title><rect x="20.5073%" y="485" width="0.2030%" height="15" fill="rgb(245,213,5)" fg:x="23033" fg:w="228"/><text x="20.7573%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (211 samples, 0.19%)</title><rect x="20.5225%" y="469" width="0.1879%" height="15" fill="rgb(230,144,27)" fg:x="23050" fg:w="211"/><text x="20.7725%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (197 samples, 0.18%)</title><rect x="20.5349%" y="453" width="0.1754%" height="15" fill="rgb(220,86,6)" fg:x="23064" fg:w="197"/><text x="20.7849%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (197 samples, 0.18%)</title><rect x="20.5349%" y="437" width="0.1754%" height="15" fill="rgb(240,20,13)" fg:x="23064" fg:w="197"/><text x="20.7849%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (12 samples, 0.01%)</title><rect x="20.7183%" y="597" width="0.0107%" height="15" fill="rgb(217,89,34)" fg:x="23270" fg:w="12"/><text x="20.9683%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (12 samples, 0.01%)</title><rect x="20.7183%" y="581" width="0.0107%" height="15" fill="rgb(229,13,5)" fg:x="23270" fg:w="12"/><text x="20.9683%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (35 samples, 0.03%)</title><rect x="20.7183%" y="613" width="0.0312%" height="15" fill="rgb(244,67,35)" fg:x="23270" fg:w="35"/><text x="20.9683%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (12 samples, 0.01%)</title><rect x="20.7388%" y="597" width="0.0107%" height="15" fill="rgb(221,40,2)" fg:x="23293" fg:w="12"/><text x="20.9888%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (340 samples, 0.30%)</title><rect x="20.4494%" y="741" width="0.3027%" height="15" fill="rgb(237,157,21)" fg:x="22968" fg:w="340"/><text x="20.6994%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (335 samples, 0.30%)</title><rect x="20.4539%" y="725" width="0.2983%" height="15" fill="rgb(222,94,11)" fg:x="22973" fg:w="335"/><text x="20.7039%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (334 samples, 0.30%)</title><rect x="20.4548%" y="709" width="0.2974%" height="15" fill="rgb(249,113,6)" fg:x="22974" fg:w="334"/><text x="20.7048%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (334 samples, 0.30%)</title><rect x="20.4548%" y="693" width="0.2974%" height="15" fill="rgb(238,137,36)" fg:x="22974" fg:w="334"/><text x="20.7048%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (334 samples, 0.30%)</title><rect x="20.4548%" y="677" width="0.2974%" height="15" fill="rgb(210,102,26)" fg:x="22974" fg:w="334"/><text x="20.7048%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (47 samples, 0.04%)</title><rect x="20.7103%" y="661" width="0.0418%" height="15" fill="rgb(218,30,30)" fg:x="23261" fg:w="47"/><text x="20.9603%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (47 samples, 0.04%)</title><rect x="20.7103%" y="645" width="0.0418%" height="15" fill="rgb(214,67,26)" fg:x="23261" fg:w="47"/><text x="20.9603%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (47 samples, 0.04%)</title><rect x="20.7103%" y="629" width="0.0418%" height="15" fill="rgb(251,9,53)" fg:x="23261" fg:w="47"/><text x="20.9603%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="21.0869%" y="613" width="0.0116%" height="15" fill="rgb(228,204,25)" fg:x="23684" fg:w="13"/><text x="21.3369%" y="623.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (14 samples, 0.01%)</title><rect x="21.0869%" y="629" width="0.0125%" height="15" fill="rgb(207,153,8)" fg:x="23684" fg:w="14"/><text x="21.3369%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (34 samples, 0.03%)</title><rect x="21.0869%" y="693" width="0.0303%" height="15" fill="rgb(242,9,16)" fg:x="23684" fg:w="34"/><text x="21.3369%" y="703.50"></text></g><g><title>std::collections::hash::map::RandomState::new (34 samples, 0.03%)</title><rect x="21.0869%" y="677" width="0.0303%" height="15" fill="rgb(217,211,10)" fg:x="23684" fg:w="34"/><text x="21.3369%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (34 samples, 0.03%)</title><rect x="21.0869%" y="661" width="0.0303%" height="15" fill="rgb(219,228,52)" fg:x="23684" fg:w="34"/><text x="21.3369%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34 samples, 0.03%)</title><rect x="21.0869%" y="645" width="0.0303%" height="15" fill="rgb(231,92,29)" fg:x="23684" fg:w="34"/><text x="21.3369%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (20 samples, 0.02%)</title><rect x="21.0994%" y="629" width="0.0178%" height="15" fill="rgb(232,8,23)" fg:x="23698" fg:w="20"/><text x="21.3494%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (13 samples, 0.01%)</title><rect x="21.1056%" y="613" width="0.0116%" height="15" fill="rgb(216,211,34)" fg:x="23705" fg:w="13"/><text x="21.3556%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (13 samples, 0.01%)</title><rect x="21.1056%" y="597" width="0.0116%" height="15" fill="rgb(236,151,0)" fg:x="23705" fg:w="13"/><text x="21.3556%" y="607.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="21.1056%" y="581" width="0.0116%" height="15" fill="rgb(209,168,3)" fg:x="23705" fg:w="13"/><text x="21.3556%" y="591.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="21.1056%" y="565" width="0.0116%" height="15" fill="rgb(208,129,28)" fg:x="23705" fg:w="13"/><text x="21.3556%" y="575.50"></text></g><g><title>size_to_sizeclass (20 samples, 0.02%)</title><rect x="21.1537%" y="469" width="0.0178%" height="15" fill="rgb(229,78,22)" fg:x="23759" fg:w="20"/><text x="21.4037%" y="479.50"></text></g><g><title>rust_alloc (20 samples, 0.02%)</title><rect x="21.1537%" y="453" width="0.0178%" height="15" fill="rgb(228,187,13)" fg:x="23759" fg:w="20"/><text x="21.4037%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="21.1724%" y="453" width="0.0258%" height="15" fill="rgb(240,119,24)" fg:x="23780" fg:w="29"/><text x="21.4224%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (29 samples, 0.03%)</title><rect x="21.1724%" y="437" width="0.0258%" height="15" fill="rgb(209,194,42)" fg:x="23780" fg:w="29"/><text x="21.4224%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (26 samples, 0.02%)</title><rect x="21.1751%" y="421" width="0.0231%" height="15" fill="rgb(247,200,46)" fg:x="23783" fg:w="26"/><text x="21.4251%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (16 samples, 0.01%)</title><rect x="21.1840%" y="405" width="0.0142%" height="15" fill="rgb(218,76,16)" fg:x="23793" fg:w="16"/><text x="21.4340%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (16 samples, 0.01%)</title><rect x="21.1840%" y="389" width="0.0142%" height="15" fill="rgb(225,21,48)" fg:x="23793" fg:w="16"/><text x="21.4340%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (16 samples, 0.01%)</title><rect x="21.1840%" y="373" width="0.0142%" height="15" fill="rgb(239,223,50)" fg:x="23793" fg:w="16"/><text x="21.4340%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (105 samples, 0.09%)</title><rect x="21.1537%" y="501" width="0.0935%" height="15" fill="rgb(244,45,21)" fg:x="23759" fg:w="105"/><text x="21.4037%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (105 samples, 0.09%)</title><rect x="21.1537%" y="485" width="0.0935%" height="15" fill="rgb(232,33,43)" fg:x="23759" fg:w="105"/><text x="21.4037%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (85 samples, 0.08%)</title><rect x="21.1715%" y="469" width="0.0757%" height="15" fill="rgb(209,8,3)" fg:x="23779" fg:w="85"/><text x="21.4215%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (50 samples, 0.04%)</title><rect x="21.2027%" y="453" width="0.0445%" height="15" fill="rgb(214,25,53)" fg:x="23814" fg:w="50"/><text x="21.4527%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (50 samples, 0.04%)</title><rect x="21.2027%" y="437" width="0.0445%" height="15" fill="rgb(254,186,54)" fg:x="23814" fg:w="50"/><text x="21.4527%" y="447.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (190 samples, 0.17%)</title><rect x="21.0869%" y="709" width="0.1692%" height="15" fill="rgb(208,174,49)" fg:x="23684" fg:w="190"/><text x="21.3369%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (156 samples, 0.14%)</title><rect x="21.1172%" y="693" width="0.1389%" height="15" fill="rgb(233,191,51)" fg:x="23718" fg:w="156"/><text x="21.3672%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (156 samples, 0.14%)</title><rect x="21.1172%" y="677" width="0.1389%" height="15" fill="rgb(222,134,10)" fg:x="23718" fg:w="156"/><text x="21.3672%" y="687.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (143 samples, 0.13%)</title><rect x="21.1288%" y="661" width="0.1273%" height="15" fill="rgb(230,226,20)" fg:x="23731" fg:w="143"/><text x="21.3788%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (143 samples, 0.13%)</title><rect x="21.1288%" y="645" width="0.1273%" height="15" fill="rgb(251,111,25)" fg:x="23731" fg:w="143"/><text x="21.3788%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (141 samples, 0.13%)</title><rect x="21.1306%" y="629" width="0.1255%" height="15" fill="rgb(224,40,46)" fg:x="23733" fg:w="141"/><text x="21.3806%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (127 samples, 0.11%)</title><rect x="21.1430%" y="613" width="0.1131%" height="15" fill="rgb(236,108,47)" fg:x="23747" fg:w="127"/><text x="21.3930%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (127 samples, 0.11%)</title><rect x="21.1430%" y="597" width="0.1131%" height="15" fill="rgb(234,93,0)" fg:x="23747" fg:w="127"/><text x="21.3930%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (127 samples, 0.11%)</title><rect x="21.1430%" y="581" width="0.1131%" height="15" fill="rgb(224,213,32)" fg:x="23747" fg:w="127"/><text x="21.3930%" y="591.50"></text></g><g><title>alloc::alloc::alloc (124 samples, 0.11%)</title><rect x="21.1457%" y="565" width="0.1104%" height="15" fill="rgb(251,11,48)" fg:x="23750" fg:w="124"/><text x="21.3957%" y="575.50"></text></g><g><title>__rg_alloc (124 samples, 0.11%)</title><rect x="21.1457%" y="549" width="0.1104%" height="15" fill="rgb(236,173,5)" fg:x="23750" fg:w="124"/><text x="21.3957%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (124 samples, 0.11%)</title><rect x="21.1457%" y="533" width="0.1104%" height="15" fill="rgb(230,95,12)" fg:x="23750" fg:w="124"/><text x="21.3957%" y="543.50"></text></g><g><title>rust_alloc (124 samples, 0.11%)</title><rect x="21.1457%" y="517" width="0.1104%" height="15" fill="rgb(232,209,1)" fg:x="23750" fg:w="124"/><text x="21.3957%" y="527.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (12 samples, 0.01%)</title><rect x="21.2899%" y="661" width="0.0107%" height="15" fill="rgb(232,6,1)" fg:x="23912" fg:w="12"/><text x="21.5399%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="21.2899%" y="645" width="0.0107%" height="15" fill="rgb(210,224,50)" fg:x="23912" fg:w="12"/><text x="21.5399%" y="655.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (12 samples, 0.01%)</title><rect x="21.2899%" y="629" width="0.0107%" height="15" fill="rgb(228,127,35)" fg:x="23912" fg:w="12"/><text x="21.5399%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.3273%" y="629" width="0.0187%" height="15" fill="rgb(245,102,45)" fg:x="23954" fg:w="21"/><text x="21.5773%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.3273%" y="613" width="0.0187%" height="15" fill="rgb(214,1,49)" fg:x="23954" fg:w="21"/><text x="21.5773%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.3273%" y="597" width="0.0187%" height="15" fill="rgb(226,163,40)" fg:x="23954" fg:w="21"/><text x="21.5773%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.3273%" y="581" width="0.0187%" height="15" fill="rgb(239,212,28)" fg:x="23954" fg:w="21"/><text x="21.5773%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.3273%" y="565" width="0.0187%" height="15" fill="rgb(220,20,13)" fg:x="23954" fg:w="21"/><text x="21.5773%" y="575.50"></text></g><g><title>abi_stable::erased_types::iterator::next (34 samples, 0.03%)</title><rect x="21.3166%" y="661" width="0.0303%" height="15" fill="rgb(210,164,35)" fg:x="23942" fg:w="34"/><text x="21.5666%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (22 samples, 0.02%)</title><rect x="21.3273%" y="645" width="0.0196%" height="15" fill="rgb(248,109,41)" fg:x="23954" fg:w="22"/><text x="21.5773%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 samples, 0.09%)</title><rect x="21.2739%" y="693" width="0.0944%" height="15" fill="rgb(238,23,50)" fg:x="23894" fg:w="106"/><text x="21.5239%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (106 samples, 0.09%)</title><rect x="21.2739%" y="677" width="0.0944%" height="15" fill="rgb(211,48,49)" fg:x="23894" fg:w="106"/><text x="21.5239%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (24 samples, 0.02%)</title><rect x="21.3469%" y="661" width="0.0214%" height="15" fill="rgb(223,36,21)" fg:x="23976" fg:w="24"/><text x="21.5969%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (23 samples, 0.02%)</title><rect x="21.3478%" y="645" width="0.0205%" height="15" fill="rgb(207,123,46)" fg:x="23977" fg:w="23"/><text x="21.5978%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (14 samples, 0.01%)</title><rect x="21.3558%" y="629" width="0.0125%" height="15" fill="rgb(240,218,32)" fg:x="23986" fg:w="14"/><text x="21.6058%" y="639.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (22 samples, 0.02%)</title><rect x="21.3825%" y="661" width="0.0196%" height="15" fill="rgb(252,5,43)" fg:x="24016" fg:w="22"/><text x="21.6325%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (16 samples, 0.01%)</title><rect x="21.3879%" y="645" width="0.0142%" height="15" fill="rgb(252,84,19)" fg:x="24022" fg:w="16"/><text x="21.6379%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="21.4021%" y="629" width="0.0134%" height="15" fill="rgb(243,152,39)" fg:x="24038" fg:w="15"/><text x="21.6521%" y="639.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (15 samples, 0.01%)</title><rect x="21.4021%" y="613" width="0.0134%" height="15" fill="rgb(234,160,15)" fg:x="24038" fg:w="15"/><text x="21.6521%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (61 samples, 0.05%)</title><rect x="21.3683%" y="693" width="0.0543%" height="15" fill="rgb(237,34,20)" fg:x="24000" fg:w="61"/><text x="21.6183%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (61 samples, 0.05%)</title><rect x="21.3683%" y="677" width="0.0543%" height="15" fill="rgb(229,97,13)" fg:x="24000" fg:w="61"/><text x="21.6183%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (23 samples, 0.02%)</title><rect x="21.4021%" y="661" width="0.0205%" height="15" fill="rgb(234,71,50)" fg:x="24038" fg:w="23"/><text x="21.6521%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (23 samples, 0.02%)</title><rect x="21.4021%" y="645" width="0.0205%" height="15" fill="rgb(253,155,4)" fg:x="24038" fg:w="23"/><text x="21.6521%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (18 samples, 0.02%)</title><rect x="21.4511%" y="581" width="0.0160%" height="15" fill="rgb(222,185,37)" fg:x="24093" fg:w="18"/><text x="21.7011%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="21.4511%" y="565" width="0.0160%" height="15" fill="rgb(251,177,13)" fg:x="24093" fg:w="18"/><text x="21.7011%" y="575.50"></text></g><g><title>alloc::alloc::box_free (18 samples, 0.02%)</title><rect x="21.4511%" y="549" width="0.0160%" height="15" fill="rgb(250,179,40)" fg:x="24093" fg:w="18"/><text x="21.7011%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="21.4511%" y="533" width="0.0160%" height="15" fill="rgb(242,44,2)" fg:x="24093" fg:w="18"/><text x="21.7011%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="21.4511%" y="517" width="0.0160%" height="15" fill="rgb(216,177,13)" fg:x="24093" fg:w="18"/><text x="21.7011%" y="527.50"></text></g><g><title>__rg_dealloc (18 samples, 0.02%)</title><rect x="21.4511%" y="501" width="0.0160%" height="15" fill="rgb(216,106,43)" fg:x="24093" fg:w="18"/><text x="21.7011%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.02%)</title><rect x="21.4511%" y="485" width="0.0160%" height="15" fill="rgb(216,183,2)" fg:x="24093" fg:w="18"/><text x="21.7011%" y="495.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="21.4725%" y="485" width="0.0125%" height="15" fill="rgb(249,75,3)" fg:x="24117" fg:w="14"/><text x="21.7225%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="21.4974%" y="437" width="0.0134%" height="15" fill="rgb(219,67,39)" fg:x="24145" fg:w="15"/><text x="21.7474%" y="447.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="21.4983%" y="421" width="0.0125%" height="15" fill="rgb(253,228,2)" fg:x="24146" fg:w="14"/><text x="21.7483%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (39 samples, 0.03%)</title><rect x="21.4867%" y="485" width="0.0347%" height="15" fill="rgb(235,138,27)" fg:x="24133" fg:w="39"/><text x="21.7367%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (39 samples, 0.03%)</title><rect x="21.4867%" y="469" width="0.0347%" height="15" fill="rgb(236,97,51)" fg:x="24133" fg:w="39"/><text x="21.7367%" y="479.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (39 samples, 0.03%)</title><rect x="21.4867%" y="453" width="0.0347%" height="15" fill="rgb(240,80,30)" fg:x="24133" fg:w="39"/><text x="21.7367%" y="463.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="21.5107%" y="437" width="0.0107%" height="15" fill="rgb(230,178,19)" fg:x="24160" fg:w="12"/><text x="21.7607%" y="447.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="21.5107%" y="421" width="0.0107%" height="15" fill="rgb(210,190,27)" fg:x="24160" fg:w="12"/><text x="21.7607%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (61 samples, 0.05%)</title><rect x="21.4725%" y="517" width="0.0543%" height="15" fill="rgb(222,107,31)" fg:x="24117" fg:w="61"/><text x="21.7225%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (61 samples, 0.05%)</title><rect x="21.4725%" y="501" width="0.0543%" height="15" fill="rgb(216,127,34)" fg:x="24117" fg:w="61"/><text x="21.7225%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (68 samples, 0.06%)</title><rect x="21.4725%" y="549" width="0.0605%" height="15" fill="rgb(234,116,52)" fg:x="24117" fg:w="68"/><text x="21.7225%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (68 samples, 0.06%)</title><rect x="21.4725%" y="533" width="0.0605%" height="15" fill="rgb(222,124,15)" fg:x="24117" fg:w="68"/><text x="21.7225%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (73 samples, 0.06%)</title><rect x="21.4716%" y="565" width="0.0650%" height="15" fill="rgb(231,179,28)" fg:x="24116" fg:w="73"/><text x="21.7216%" y="575.50"></text></g><g><title>rust_dealloc (81 samples, 0.07%)</title><rect x="21.4671%" y="581" width="0.0721%" height="15" fill="rgb(226,93,45)" fg:x="24111" fg:w="81"/><text x="21.7171%" y="591.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,253 samples, 1.12%)</title><rect x="20.4245%" y="773" width="1.1156%" height="15" fill="rgb(215,8,51)" fg:x="22940" fg:w="1253"/><text x="20.6745%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,232 samples, 1.10%)</title><rect x="20.4432%" y="757" width="1.0969%" height="15" fill="rgb(223,106,5)" fg:x="22961" fg:w="1232"/><text x="20.6932%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (885 samples, 0.79%)</title><rect x="20.7522%" y="741" width="0.7880%" height="15" fill="rgb(250,191,5)" fg:x="23308" fg:w="885"/><text x="21.0022%" y="751.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (509 samples, 0.45%)</title><rect x="21.0869%" y="725" width="0.4532%" height="15" fill="rgb(242,132,44)" fg:x="23684" fg:w="509"/><text x="21.3369%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (319 samples, 0.28%)</title><rect x="21.2561%" y="709" width="0.2840%" height="15" fill="rgb(251,152,29)" fg:x="23874" fg:w="319"/><text x="21.5061%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (124 samples, 0.11%)</title><rect x="21.4297%" y="693" width="0.1104%" height="15" fill="rgb(218,179,5)" fg:x="24069" fg:w="124"/><text x="21.6797%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (124 samples, 0.11%)</title><rect x="21.4297%" y="677" width="0.1104%" height="15" fill="rgb(227,67,19)" fg:x="24069" fg:w="124"/><text x="21.6797%" y="687.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (124 samples, 0.11%)</title><rect x="21.4297%" y="661" width="0.1104%" height="15" fill="rgb(233,119,31)" fg:x="24069" fg:w="124"/><text x="21.6797%" y="671.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (124 samples, 0.11%)</title><rect x="21.4297%" y="645" width="0.1104%" height="15" fill="rgb(241,120,22)" fg:x="24069" fg:w="124"/><text x="21.6797%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (109 samples, 0.10%)</title><rect x="21.4431%" y="629" width="0.0970%" height="15" fill="rgb(224,102,30)" fg:x="24084" fg:w="109"/><text x="21.6931%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (109 samples, 0.10%)</title><rect x="21.4431%" y="613" width="0.0970%" height="15" fill="rgb(210,164,37)" fg:x="24084" fg:w="109"/><text x="21.6931%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (109 samples, 0.10%)</title><rect x="21.4431%" y="597" width="0.0970%" height="15" fill="rgb(226,191,16)" fg:x="24084" fg:w="109"/><text x="21.6931%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="21.6069%" y="725" width="0.0107%" height="15" fill="rgb(214,40,45)" fg:x="24268" fg:w="12"/><text x="21.8569%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (12 samples, 0.01%)</title><rect x="21.6069%" y="709" width="0.0107%" height="15" fill="rgb(244,29,26)" fg:x="24268" fg:w="12"/><text x="21.8569%" y="719.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (98 samples, 0.09%)</title><rect x="21.5481%" y="757" width="0.0873%" height="15" fill="rgb(216,16,5)" fg:x="24202" fg:w="98"/><text x="21.7981%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (59 samples, 0.05%)</title><rect x="21.5829%" y="741" width="0.0525%" height="15" fill="rgb(249,76,35)" fg:x="24241" fg:w="59"/><text x="21.8329%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (20 samples, 0.02%)</title><rect x="21.6176%" y="725" width="0.0178%" height="15" fill="rgb(207,11,44)" fg:x="24280" fg:w="20"/><text x="21.8676%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (20 samples, 0.02%)</title><rect x="21.6176%" y="709" width="0.0178%" height="15" fill="rgb(228,190,49)" fg:x="24280" fg:w="20"/><text x="21.8676%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.02%)</title><rect x="21.6176%" y="693" width="0.0178%" height="15" fill="rgb(214,173,12)" fg:x="24280" fg:w="20"/><text x="21.8676%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.02%)</title><rect x="21.6176%" y="677" width="0.0178%" height="15" fill="rgb(218,26,35)" fg:x="24280" fg:w="20"/><text x="21.8676%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.02%)</title><rect x="21.6176%" y="661" width="0.0178%" height="15" fill="rgb(220,200,19)" fg:x="24280" fg:w="20"/><text x="21.8676%" y="671.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (21 samples, 0.02%)</title><rect x="21.6835%" y="629" width="0.0187%" height="15" fill="rgb(239,95,49)" fg:x="24354" fg:w="21"/><text x="21.9335%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="21.7324%" y="437" width="0.0178%" height="15" fill="rgb(235,85,53)" fg:x="24409" fg:w="20"/><text x="21.9824%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (20 samples, 0.02%)</title><rect x="21.7324%" y="421" width="0.0178%" height="15" fill="rgb(233,133,31)" fg:x="24409" fg:w="20"/><text x="21.9824%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (18 samples, 0.02%)</title><rect x="21.7342%" y="405" width="0.0160%" height="15" fill="rgb(218,25,20)" fg:x="24411" fg:w="18"/><text x="21.9842%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (17 samples, 0.02%)</title><rect x="21.7351%" y="389" width="0.0151%" height="15" fill="rgb(252,210,38)" fg:x="24412" fg:w="17"/><text x="21.9851%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="21.7351%" y="373" width="0.0151%" height="15" fill="rgb(242,134,21)" fg:x="24412" fg:w="17"/><text x="21.9851%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="21.7351%" y="357" width="0.0151%" height="15" fill="rgb(213,28,48)" fg:x="24412" fg:w="17"/><text x="21.9851%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (247 samples, 0.22%)</title><rect x="21.7155%" y="485" width="0.2199%" height="15" fill="rgb(250,196,2)" fg:x="24390" fg:w="247"/><text x="21.9655%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (241 samples, 0.21%)</title><rect x="21.7209%" y="469" width="0.2146%" height="15" fill="rgb(227,5,17)" fg:x="24396" fg:w="241"/><text x="21.9709%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (235 samples, 0.21%)</title><rect x="21.7262%" y="453" width="0.2092%" height="15" fill="rgb(221,226,24)" fg:x="24402" fg:w="235"/><text x="21.9762%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (203 samples, 0.18%)</title><rect x="21.7547%" y="437" width="0.1807%" height="15" fill="rgb(211,5,48)" fg:x="24434" fg:w="203"/><text x="22.0047%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (203 samples, 0.18%)</title><rect x="21.7547%" y="421" width="0.1807%" height="15" fill="rgb(219,150,6)" fg:x="24434" fg:w="203"/><text x="22.0047%" y="431.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (285 samples, 0.25%)</title><rect x="21.6835%" y="645" width="0.2537%" height="15" fill="rgb(251,46,16)" fg:x="24354" fg:w="285"/><text x="21.9335%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (264 samples, 0.24%)</title><rect x="21.7022%" y="629" width="0.2351%" height="15" fill="rgb(220,204,40)" fg:x="24375" fg:w="264"/><text x="21.9522%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (264 samples, 0.24%)</title><rect x="21.7022%" y="613" width="0.2351%" height="15" fill="rgb(211,85,2)" fg:x="24375" fg:w="264"/><text x="21.9522%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (260 samples, 0.23%)</title><rect x="21.7057%" y="597" width="0.2315%" height="15" fill="rgb(229,17,7)" fg:x="24379" fg:w="260"/><text x="21.9557%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (260 samples, 0.23%)</title><rect x="21.7057%" y="581" width="0.2315%" height="15" fill="rgb(239,72,28)" fg:x="24379" fg:w="260"/><text x="21.9557%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (260 samples, 0.23%)</title><rect x="21.7057%" y="565" width="0.2315%" height="15" fill="rgb(230,47,54)" fg:x="24379" fg:w="260"/><text x="21.9557%" y="575.50"></text></g><g><title>alloc::alloc::alloc (260 samples, 0.23%)</title><rect x="21.7057%" y="549" width="0.2315%" height="15" fill="rgb(214,50,8)" fg:x="24379" fg:w="260"/><text x="21.9557%" y="559.50"></text></g><g><title>__rg_alloc (260 samples, 0.23%)</title><rect x="21.7057%" y="533" width="0.2315%" height="15" fill="rgb(216,198,43)" fg:x="24379" fg:w="260"/><text x="21.9557%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (260 samples, 0.23%)</title><rect x="21.7057%" y="517" width="0.2315%" height="15" fill="rgb(234,20,35)" fg:x="24379" fg:w="260"/><text x="21.9557%" y="527.50"></text></g><g><title>rust_alloc (260 samples, 0.23%)</title><rect x="21.7057%" y="501" width="0.2315%" height="15" fill="rgb(254,45,19)" fg:x="24379" fg:w="260"/><text x="21.9557%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (98 samples, 0.09%)</title><rect x="21.9835%" y="581" width="0.0873%" height="15" fill="rgb(219,14,44)" fg:x="24691" fg:w="98"/><text x="22.2335%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (98 samples, 0.09%)</title><rect x="21.9835%" y="565" width="0.0873%" height="15" fill="rgb(217,220,26)" fg:x="24691" fg:w="98"/><text x="22.2335%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (117 samples, 0.10%)</title><rect x="21.9755%" y="597" width="0.1042%" height="15" fill="rgb(213,158,28)" fg:x="24682" fg:w="117"/><text x="22.2255%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (642 samples, 0.57%)</title><rect x="21.6808%" y="725" width="0.5716%" height="15" fill="rgb(252,51,52)" fg:x="24351" fg:w="642"/><text x="21.9308%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (640 samples, 0.57%)</title><rect x="21.6826%" y="709" width="0.5698%" height="15" fill="rgb(246,89,16)" fg:x="24353" fg:w="640"/><text x="21.9326%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (639 samples, 0.57%)</title><rect x="21.6835%" y="693" width="0.5689%" height="15" fill="rgb(216,158,49)" fg:x="24354" fg:w="639"/><text x="21.9335%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (639 samples, 0.57%)</title><rect x="21.6835%" y="677" width="0.5689%" height="15" fill="rgb(236,107,19)" fg:x="24354" fg:w="639"/><text x="21.9335%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (639 samples, 0.57%)</title><rect x="21.6835%" y="661" width="0.5689%" height="15" fill="rgb(228,185,30)" fg:x="24354" fg:w="639"/><text x="21.9335%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (354 samples, 0.32%)</title><rect x="21.9372%" y="645" width="0.3152%" height="15" fill="rgb(246,134,8)" fg:x="24639" fg:w="354"/><text x="22.1872%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (354 samples, 0.32%)</title><rect x="21.9372%" y="629" width="0.3152%" height="15" fill="rgb(214,143,50)" fg:x="24639" fg:w="354"/><text x="22.1872%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (354 samples, 0.32%)</title><rect x="21.9372%" y="613" width="0.3152%" height="15" fill="rgb(228,75,8)" fg:x="24639" fg:w="354"/><text x="22.1872%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (194 samples, 0.17%)</title><rect x="22.0797%" y="597" width="0.1727%" height="15" fill="rgb(207,175,4)" fg:x="24799" fg:w="194"/><text x="22.3297%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (32 samples, 0.03%)</title><rect x="22.5987%" y="677" width="0.0285%" height="15" fill="rgb(205,108,24)" fg:x="25382" fg:w="32"/><text x="22.8487%" y="687.50"></text></g><g><title>std::collections::hash::map::RandomState::new (32 samples, 0.03%)</title><rect x="22.5987%" y="661" width="0.0285%" height="15" fill="rgb(244,120,49)" fg:x="25382" fg:w="32"/><text x="22.8487%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32 samples, 0.03%)</title><rect x="22.5987%" y="645" width="0.0285%" height="15" fill="rgb(223,47,38)" fg:x="25382" fg:w="32"/><text x="22.8487%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (32 samples, 0.03%)</title><rect x="22.5987%" y="629" width="0.0285%" height="15" fill="rgb(229,179,11)" fg:x="25382" fg:w="32"/><text x="22.8487%" y="639.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (23 samples, 0.02%)</title><rect x="22.6068%" y="613" width="0.0205%" height="15" fill="rgb(231,122,1)" fg:x="25391" fg:w="23"/><text x="22.8568%" y="623.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="22.6628%" y="453" width="0.0134%" height="15" fill="rgb(245,119,9)" fg:x="25454" fg:w="15"/><text x="22.9128%" y="463.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="22.6628%" y="437" width="0.0134%" height="15" fill="rgb(241,163,25)" fg:x="25454" fg:w="15"/><text x="22.9128%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="22.6771%" y="437" width="0.0160%" height="15" fill="rgb(217,214,3)" fg:x="25470" fg:w="18"/><text x="22.9271%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (18 samples, 0.02%)</title><rect x="22.6771%" y="421" width="0.0160%" height="15" fill="rgb(240,86,28)" fg:x="25470" fg:w="18"/><text x="22.9271%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (14 samples, 0.01%)</title><rect x="22.6807%" y="405" width="0.0125%" height="15" fill="rgb(215,47,9)" fg:x="25474" fg:w="14"/><text x="22.9307%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (13 samples, 0.01%)</title><rect x="22.6815%" y="389" width="0.0116%" height="15" fill="rgb(252,25,45)" fg:x="25475" fg:w="13"/><text x="22.9315%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (13 samples, 0.01%)</title><rect x="22.6815%" y="373" width="0.0116%" height="15" fill="rgb(251,164,9)" fg:x="25475" fg:w="13"/><text x="22.9315%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (13 samples, 0.01%)</title><rect x="22.6815%" y="357" width="0.0116%" height="15" fill="rgb(233,194,0)" fg:x="25475" fg:w="13"/><text x="22.9315%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (78 samples, 0.07%)</title><rect x="22.6620%" y="485" width="0.0694%" height="15" fill="rgb(249,111,24)" fg:x="25453" fg:w="78"/><text x="22.9120%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (78 samples, 0.07%)</title><rect x="22.6620%" y="469" width="0.0694%" height="15" fill="rgb(250,223,3)" fg:x="25453" fg:w="78"/><text x="22.9120%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (62 samples, 0.06%)</title><rect x="22.6762%" y="453" width="0.0552%" height="15" fill="rgb(236,178,37)" fg:x="25469" fg:w="62"/><text x="22.9262%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (42 samples, 0.04%)</title><rect x="22.6940%" y="437" width="0.0374%" height="15" fill="rgb(241,158,50)" fg:x="25489" fg:w="42"/><text x="22.9440%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (42 samples, 0.04%)</title><rect x="22.6940%" y="421" width="0.0374%" height="15" fill="rgb(213,121,41)" fg:x="25489" fg:w="42"/><text x="22.9440%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (158 samples, 0.14%)</title><rect x="22.5987%" y="693" width="0.1407%" height="15" fill="rgb(240,92,3)" fg:x="25382" fg:w="158"/><text x="22.8487%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (126 samples, 0.11%)</title><rect x="22.6272%" y="677" width="0.1122%" height="15" fill="rgb(205,123,3)" fg:x="25414" fg:w="126"/><text x="22.8772%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (126 samples, 0.11%)</title><rect x="22.6272%" y="661" width="0.1122%" height="15" fill="rgb(205,97,47)" fg:x="25414" fg:w="126"/><text x="22.8772%" y="671.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (120 samples, 0.11%)</title><rect x="22.6326%" y="645" width="0.1068%" height="15" fill="rgb(247,152,14)" fg:x="25420" fg:w="120"/><text x="22.8826%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (120 samples, 0.11%)</title><rect x="22.6326%" y="629" width="0.1068%" height="15" fill="rgb(248,195,53)" fg:x="25420" fg:w="120"/><text x="22.8826%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (120 samples, 0.11%)</title><rect x="22.6326%" y="613" width="0.1068%" height="15" fill="rgb(226,201,16)" fg:x="25420" fg:w="120"/><text x="22.8826%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (105 samples, 0.09%)</title><rect x="22.6459%" y="597" width="0.0935%" height="15" fill="rgb(205,98,0)" fg:x="25435" fg:w="105"/><text x="22.8959%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (105 samples, 0.09%)</title><rect x="22.6459%" y="581" width="0.0935%" height="15" fill="rgb(214,191,48)" fg:x="25435" fg:w="105"/><text x="22.8959%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (105 samples, 0.09%)</title><rect x="22.6459%" y="565" width="0.0935%" height="15" fill="rgb(237,112,39)" fg:x="25435" fg:w="105"/><text x="22.8959%" y="575.50"></text></g><g><title>alloc::alloc::alloc (98 samples, 0.09%)</title><rect x="22.6522%" y="549" width="0.0873%" height="15" fill="rgb(247,203,27)" fg:x="25442" fg:w="98"/><text x="22.9022%" y="559.50"></text></g><g><title>__rg_alloc (98 samples, 0.09%)</title><rect x="22.6522%" y="533" width="0.0873%" height="15" fill="rgb(235,124,28)" fg:x="25442" fg:w="98"/><text x="22.9022%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (98 samples, 0.09%)</title><rect x="22.6522%" y="517" width="0.0873%" height="15" fill="rgb(208,207,46)" fg:x="25442" fg:w="98"/><text x="22.9022%" y="527.50"></text></g><g><title>rust_alloc (98 samples, 0.09%)</title><rect x="22.6522%" y="501" width="0.0873%" height="15" fill="rgb(234,176,4)" fg:x="25442" fg:w="98"/><text x="22.9022%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="22.8017%" y="613" width="0.0214%" height="15" fill="rgb(230,133,28)" fg:x="25610" fg:w="24"/><text x="23.0517%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="22.8017%" y="597" width="0.0214%" height="15" fill="rgb(211,137,40)" fg:x="25610" fg:w="24"/><text x="23.0517%" y="607.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="22.8017%" y="581" width="0.0214%" height="15" fill="rgb(254,35,13)" fg:x="25610" fg:w="24"/><text x="23.0517%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="22.8017%" y="565" width="0.0214%" height="15" fill="rgb(225,49,51)" fg:x="25610" fg:w="24"/><text x="23.0517%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="22.8017%" y="549" width="0.0214%" height="15" fill="rgb(251,10,15)" fg:x="25610" fg:w="24"/><text x="23.0517%" y="559.50"></text></g><g><title>abi_stable::erased_types::iterator::next (40 samples, 0.04%)</title><rect x="22.7893%" y="645" width="0.0356%" height="15" fill="rgb(228,207,15)" fg:x="25596" fg:w="40"/><text x="23.0393%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (26 samples, 0.02%)</title><rect x="22.8017%" y="629" width="0.0231%" height="15" fill="rgb(241,99,19)" fg:x="25610" fg:w="26"/><text x="23.0517%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.07%)</title><rect x="22.7581%" y="677" width="0.0730%" height="15" fill="rgb(207,104,49)" fg:x="25561" fg:w="82"/><text x="23.0081%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (82 samples, 0.07%)</title><rect x="22.7581%" y="661" width="0.0730%" height="15" fill="rgb(234,99,18)" fg:x="25561" fg:w="82"/><text x="23.0081%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (30 samples, 0.03%)</title><rect x="22.8454%" y="645" width="0.0267%" height="15" fill="rgb(213,191,49)" fg:x="25659" fg:w="30"/><text x="23.0954%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (21 samples, 0.02%)</title><rect x="22.8534%" y="629" width="0.0187%" height="15" fill="rgb(210,226,19)" fg:x="25668" fg:w="21"/><text x="23.1034%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="22.8721%" y="613" width="0.0125%" height="15" fill="rgb(229,97,18)" fg:x="25689" fg:w="14"/><text x="23.1221%" y="623.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (14 samples, 0.01%)</title><rect x="22.8721%" y="597" width="0.0125%" height="15" fill="rgb(211,167,15)" fg:x="25689" fg:w="14"/><text x="23.1221%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (71 samples, 0.06%)</title><rect x="22.8311%" y="677" width="0.0632%" height="15" fill="rgb(210,169,34)" fg:x="25643" fg:w="71"/><text x="23.0811%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (71 samples, 0.06%)</title><rect x="22.8311%" y="661" width="0.0632%" height="15" fill="rgb(241,121,31)" fg:x="25643" fg:w="71"/><text x="23.0811%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (25 samples, 0.02%)</title><rect x="22.8721%" y="645" width="0.0223%" height="15" fill="rgb(232,40,11)" fg:x="25689" fg:w="25"/><text x="23.1221%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (25 samples, 0.02%)</title><rect x="22.8721%" y="629" width="0.0223%" height="15" fill="rgb(205,86,26)" fg:x="25689" fg:w="25"/><text x="23.1221%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (62 samples, 0.06%)</title><rect x="22.9780%" y="421" width="0.0552%" height="15" fill="rgb(231,126,28)" fg:x="25808" fg:w="62"/><text x="23.2280%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (60 samples, 0.05%)</title><rect x="22.9798%" y="405" width="0.0534%" height="15" fill="rgb(219,221,18)" fg:x="25810" fg:w="60"/><text x="23.2298%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (112 samples, 0.10%)</title><rect x="22.9460%" y="469" width="0.0997%" height="15" fill="rgb(211,40,0)" fg:x="25772" fg:w="112"/><text x="23.1960%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (112 samples, 0.10%)</title><rect x="22.9460%" y="453" width="0.0997%" height="15" fill="rgb(239,85,43)" fg:x="25772" fg:w="112"/><text x="23.1960%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (112 samples, 0.10%)</title><rect x="22.9460%" y="437" width="0.0997%" height="15" fill="rgb(231,55,21)" fg:x="25772" fg:w="112"/><text x="23.1960%" y="447.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="23.0332%" y="421" width="0.0125%" height="15" fill="rgb(225,184,43)" fg:x="25870" fg:w="14"/><text x="23.2832%" y="431.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="23.0332%" y="405" width="0.0125%" height="15" fill="rgb(251,158,41)" fg:x="25870" fg:w="14"/><text x="23.2832%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (150 samples, 0.13%)</title><rect x="22.9406%" y="501" width="0.1336%" height="15" fill="rgb(234,159,37)" fg:x="25766" fg:w="150"/><text x="23.1906%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (150 samples, 0.13%)</title><rect x="22.9406%" y="485" width="0.1336%" height="15" fill="rgb(216,204,22)" fg:x="25766" fg:w="150"/><text x="23.1906%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (32 samples, 0.03%)</title><rect x="23.0457%" y="469" width="0.0285%" height="15" fill="rgb(214,17,3)" fg:x="25884" fg:w="32"/><text x="23.2957%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (155 samples, 0.14%)</title><rect x="22.9406%" y="533" width="0.1380%" height="15" fill="rgb(212,111,17)" fg:x="25766" fg:w="155"/><text x="23.1906%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (155 samples, 0.14%)</title><rect x="22.9406%" y="517" width="0.1380%" height="15" fill="rgb(221,157,24)" fg:x="25766" fg:w="155"/><text x="23.1906%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (162 samples, 0.14%)</title><rect x="22.9380%" y="549" width="0.1442%" height="15" fill="rgb(252,16,13)" fg:x="25763" fg:w="162"/><text x="23.1880%" y="559.50"></text></g><g><title>rust_dealloc (180 samples, 0.16%)</title><rect x="22.9308%" y="565" width="0.1603%" height="15" fill="rgb(221,62,2)" fg:x="25755" fg:w="180"/><text x="23.1808%" y="575.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,638 samples, 1.46%)</title><rect x="21.6354%" y="757" width="1.4584%" height="15" fill="rgb(247,87,22)" fg:x="24300" fg:w="1638"/><text x="21.8854%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,587 samples, 1.41%)</title><rect x="21.6808%" y="741" width="1.4130%" height="15" fill="rgb(215,73,9)" fg:x="24351" fg:w="1587"/><text x="21.9308%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (945 samples, 0.84%)</title><rect x="22.2524%" y="725" width="0.8414%" height="15" fill="rgb(207,175,33)" fg:x="24993" fg:w="945"/><text x="22.5024%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (566 samples, 0.50%)</title><rect x="22.5898%" y="709" width="0.5039%" height="15" fill="rgb(243,129,54)" fg:x="25372" fg:w="566"/><text x="22.8398%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (398 samples, 0.35%)</title><rect x="22.7394%" y="693" width="0.3544%" height="15" fill="rgb(227,119,45)" fg:x="25540" fg:w="398"/><text x="22.9894%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (219 samples, 0.19%)</title><rect x="22.8988%" y="677" width="0.1950%" height="15" fill="rgb(205,109,36)" fg:x="25719" fg:w="219"/><text x="23.1488%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (219 samples, 0.19%)</title><rect x="22.8988%" y="661" width="0.1950%" height="15" fill="rgb(205,6,39)" fg:x="25719" fg:w="219"/><text x="23.1488%" y="671.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (219 samples, 0.19%)</title><rect x="22.8988%" y="645" width="0.1950%" height="15" fill="rgb(221,32,16)" fg:x="25719" fg:w="219"/><text x="23.1488%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (219 samples, 0.19%)</title><rect x="22.8988%" y="629" width="0.1950%" height="15" fill="rgb(228,144,50)" fg:x="25719" fg:w="219"/><text x="23.1488%" y="639.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (201 samples, 0.18%)</title><rect x="22.9148%" y="613" width="0.1790%" height="15" fill="rgb(229,201,53)" fg:x="25737" fg:w="201"/><text x="23.1648%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (201 samples, 0.18%)</title><rect x="22.9148%" y="597" width="0.1790%" height="15" fill="rgb(249,153,27)" fg:x="25737" fg:w="201"/><text x="23.1648%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (201 samples, 0.18%)</title><rect x="22.9148%" y="581" width="0.1790%" height="15" fill="rgb(227,106,25)" fg:x="25737" fg:w="201"/><text x="23.1648%" y="591.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (1,765 samples, 1.57%)</title><rect x="21.5401%" y="773" width="1.5715%" height="15" fill="rgb(230,65,29)" fg:x="24193" fg:w="1765"/><text x="21.7901%" y="783.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (20 samples, 0.02%)</title><rect x="23.0938%" y="757" width="0.0178%" height="15" fill="rgb(221,57,46)" fg:x="25938" fg:w="20"/><text x="23.3438%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,726 samples, 1.54%)</title><rect x="23.1116%" y="773" width="1.5367%" height="15" fill="rgb(229,161,17)" fg:x="25958" fg:w="1726"/><text x="23.3616%" y="783.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (55 samples, 0.05%)</title><rect x="24.8237%" y="485" width="0.0490%" height="15" fill="rgb(222,213,11)" fg:x="27881" fg:w="55"/><text x="25.0737%" y="495.50"></text></g><g><title> (55 samples, 0.05%)</title><rect x="24.8237%" y="469" width="0.0490%" height="15" fill="rgb(235,35,13)" fg:x="27881" fg:w="55"/><text x="25.0737%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (203 samples, 0.18%)</title><rect x="24.7053%" y="517" width="0.1807%" height="15" fill="rgb(233,158,34)" fg:x="27748" fg:w="203"/><text x="24.9553%" y="527.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (187 samples, 0.17%)</title><rect x="24.7195%" y="501" width="0.1665%" height="15" fill="rgb(215,151,48)" fg:x="27764" fg:w="187"/><text x="24.9695%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (278 samples, 0.25%)</title><rect x="24.6884%" y="549" width="0.2475%" height="15" fill="rgb(229,84,14)" fg:x="27729" fg:w="278"/><text x="24.9384%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (278 samples, 0.25%)</title><rect x="24.6884%" y="533" width="0.2475%" height="15" fill="rgb(229,68,14)" fg:x="27729" fg:w="278"/><text x="24.9384%" y="543.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (53 samples, 0.05%)</title><rect x="24.8887%" y="517" width="0.0472%" height="15" fill="rgb(243,106,26)" fg:x="27954" fg:w="53"/><text x="25.1387%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (280 samples, 0.25%)</title><rect x="24.6884%" y="581" width="0.2493%" height="15" fill="rgb(206,45,38)" fg:x="27729" fg:w="280"/><text x="24.9384%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (280 samples, 0.25%)</title><rect x="24.6884%" y="565" width="0.2493%" height="15" fill="rgb(226,6,15)" fg:x="27729" fg:w="280"/><text x="24.9384%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (300 samples, 0.27%)</title><rect x="24.6715%" y="597" width="0.2671%" height="15" fill="rgb(232,22,54)" fg:x="27710" fg:w="300"/><text x="24.9215%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (328 samples, 0.29%)</title><rect x="24.6483%" y="773" width="0.2920%" height="15" fill="rgb(229,222,32)" fg:x="27684" fg:w="328"/><text x="24.8983%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (328 samples, 0.29%)</title><rect x="24.6483%" y="757" width="0.2920%" height="15" fill="rgb(228,62,29)" fg:x="27684" fg:w="328"/><text x="24.8983%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (314 samples, 0.28%)</title><rect x="24.6608%" y="741" width="0.2796%" height="15" fill="rgb(251,103,34)" fg:x="27698" fg:w="314"/><text x="24.9108%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (314 samples, 0.28%)</title><rect x="24.6608%" y="725" width="0.2796%" height="15" fill="rgb(233,12,30)" fg:x="27698" fg:w="314"/><text x="24.9108%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (314 samples, 0.28%)</title><rect x="24.6608%" y="709" width="0.2796%" height="15" fill="rgb(238,52,0)" fg:x="27698" fg:w="314"/><text x="24.9108%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (314 samples, 0.28%)</title><rect x="24.6608%" y="693" width="0.2796%" height="15" fill="rgb(223,98,5)" fg:x="27698" fg:w="314"/><text x="24.9108%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (314 samples, 0.28%)</title><rect x="24.6608%" y="677" width="0.2796%" height="15" fill="rgb(228,75,37)" fg:x="27698" fg:w="314"/><text x="24.9108%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (314 samples, 0.28%)</title><rect x="24.6608%" y="661" width="0.2796%" height="15" fill="rgb(205,115,49)" fg:x="27698" fg:w="314"/><text x="24.9108%" y="671.50"></text></g><g><title>__rg_dealloc (314 samples, 0.28%)</title><rect x="24.6608%" y="645" width="0.2796%" height="15" fill="rgb(250,154,43)" fg:x="27698" fg:w="314"/><text x="24.9108%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (314 samples, 0.28%)</title><rect x="24.6608%" y="629" width="0.2796%" height="15" fill="rgb(226,43,29)" fg:x="27698" fg:w="314"/><text x="24.9108%" y="639.50"></text></g><g><title>rust_dealloc (314 samples, 0.28%)</title><rect x="24.6608%" y="613" width="0.2796%" height="15" fill="rgb(249,228,39)" fg:x="27698" fg:w="314"/><text x="24.9108%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (32 samples, 0.03%)</title><rect x="24.9403%" y="757" width="0.0285%" height="15" fill="rgb(216,79,43)" fg:x="28012" fg:w="32"/><text x="25.1903%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (72 samples, 0.06%)</title><rect x="24.9403%" y="773" width="0.0641%" height="15" fill="rgb(228,95,12)" fg:x="28012" fg:w="72"/><text x="25.1903%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (40 samples, 0.04%)</title><rect x="24.9688%" y="757" width="0.0356%" height="15" fill="rgb(249,221,15)" fg:x="28044" fg:w="40"/><text x="25.2188%" y="767.50"></text></g><g><title>core::time::Duration::as_nanos (19 samples, 0.02%)</title><rect x="25.0614%" y="757" width="0.0169%" height="15" fill="rgb(233,34,13)" fg:x="28148" fg:w="19"/><text x="25.3114%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (132 samples, 0.12%)</title><rect x="25.2057%" y="709" width="0.1175%" height="15" fill="rgb(214,103,39)" fg:x="28310" fg:w="132"/><text x="25.4557%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::ge (132 samples, 0.12%)</title><rect x="25.2057%" y="693" width="0.1175%" height="15" fill="rgb(251,126,39)" fg:x="28310" fg:w="132"/><text x="25.4557%" y="703.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (128 samples, 0.11%)</title><rect x="25.2092%" y="677" width="0.1140%" height="15" fill="rgb(214,216,36)" fg:x="28314" fg:w="128"/><text x="25.4592%" y="687.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (128 samples, 0.11%)</title><rect x="25.2092%" y="661" width="0.1140%" height="15" fill="rgb(220,221,8)" fg:x="28314" fg:w="128"/><text x="25.4592%" y="671.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (128 samples, 0.11%)</title><rect x="25.2092%" y="645" width="0.1140%" height="15" fill="rgb(240,216,3)" fg:x="28314" fg:w="128"/><text x="25.4592%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (71 samples, 0.06%)</title><rect x="25.2600%" y="629" width="0.0632%" height="15" fill="rgb(232,218,17)" fg:x="28371" fg:w="71"/><text x="25.5100%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (316 samples, 0.28%)</title><rect x="25.0784%" y="741" width="0.2813%" height="15" fill="rgb(229,163,45)" fg:x="28167" fg:w="316"/><text x="25.3284%" y="751.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (316 samples, 0.28%)</title><rect x="25.0784%" y="725" width="0.2813%" height="15" fill="rgb(231,110,42)" fg:x="28167" fg:w="316"/><text x="25.3284%" y="735.50"></text></g><g><title>core::time::Duration::new (41 samples, 0.04%)</title><rect x="25.3232%" y="709" width="0.0365%" height="15" fill="rgb(208,170,48)" fg:x="28442" fg:w="41"/><text x="25.5732%" y="719.50"></text></g><g><title>std::time::SystemTime::duration_since (334 samples, 0.30%)</title><rect x="25.0784%" y="757" width="0.2974%" height="15" fill="rgb(239,116,25)" fg:x="28167" fg:w="334"/><text x="25.3284%" y="767.50"></text></g><g><title>tremor_common::time::nanotime (18 samples, 0.02%)</title><rect x="25.3597%" y="741" width="0.0160%" height="15" fill="rgb(219,200,50)" fg:x="28483" fg:w="18"/><text x="25.6097%" y="751.50"></text></g><g><title>__clock_gettime_2 (1,112 samples, 0.99%)</title><rect x="25.6500%" y="709" width="0.9901%" height="15" fill="rgb(245,200,0)" fg:x="28809" fg:w="1112"/><text x="25.9000%" y="719.50"></text></g><g><title>__vdso_clock_gettime (1,050 samples, 0.93%)</title><rect x="25.7052%" y="693" width="0.9349%" height="15" fill="rgb(245,119,33)" fg:x="28871" fg:w="1050"/><text x="25.9552%" y="703.50"></text></g><g><title>[[vdso]] (721 samples, 0.64%)</title><rect x="25.9981%" y="677" width="0.6419%" height="15" fill="rgb(231,125,12)" fg:x="29200" fg:w="721"/><text x="26.2481%" y="687.50"></text></g><g><title>tremor_common::time::nanotime (1,838 samples, 1.64%)</title><rect x="25.0045%" y="773" width="1.6365%" height="15" fill="rgb(216,96,41)" fg:x="28084" fg:w="1838"/><text x="25.2545%" y="783.50"></text></g><g><title>std::time::SystemTime::now (1,421 samples, 1.27%)</title><rect x="25.3757%" y="757" width="1.2652%" height="15" fill="rgb(248,43,45)" fg:x="28501" fg:w="1421"/><text x="25.6257%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,421 samples, 1.27%)</title><rect x="25.3757%" y="741" width="1.2652%" height="15" fill="rgb(217,222,7)" fg:x="28501" fg:w="1421"/><text x="25.6257%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::now (1,421 samples, 1.27%)</title><rect x="25.3757%" y="725" width="1.2652%" height="15" fill="rgb(233,28,6)" fg:x="28501" fg:w="1421"/><text x="25.6257%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (17 samples, 0.02%)</title><rect x="26.6738%" y="661" width="0.0151%" height="15" fill="rgb(231,218,15)" fg:x="29959" fg:w="17"/><text x="26.9238%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (17 samples, 0.02%)</title><rect x="26.6738%" y="645" width="0.0151%" height="15" fill="rgb(226,171,48)" fg:x="29959" fg:w="17"/><text x="26.9238%" y="655.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (17 samples, 0.02%)</title><rect x="26.6738%" y="629" width="0.0151%" height="15" fill="rgb(235,201,9)" fg:x="29959" fg:w="17"/><text x="26.9238%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="26.7041%" y="629" width="0.0196%" height="15" fill="rgb(217,80,15)" fg:x="29993" fg:w="22"/><text x="26.9541%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="26.7041%" y="613" width="0.0196%" height="15" fill="rgb(219,152,8)" fg:x="29993" fg:w="22"/><text x="26.9541%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="26.7041%" y="597" width="0.0196%" height="15" fill="rgb(243,107,38)" fg:x="29993" fg:w="22"/><text x="26.9541%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="26.7041%" y="581" width="0.0196%" height="15" fill="rgb(231,17,5)" fg:x="29993" fg:w="22"/><text x="26.9541%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="26.7041%" y="565" width="0.0196%" height="15" fill="rgb(209,25,54)" fg:x="29993" fg:w="22"/><text x="26.9541%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="26.7041%" y="549" width="0.0196%" height="15" fill="rgb(219,0,2)" fg:x="29993" fg:w="22"/><text x="26.9541%" y="559.50"></text></g><g><title>abi_stable::erased_types::iterator::next (46 samples, 0.04%)</title><rect x="26.6890%" y="661" width="0.0410%" height="15" fill="rgb(246,9,5)" fg:x="29976" fg:w="46"/><text x="26.9390%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (29 samples, 0.03%)</title><rect x="26.7041%" y="645" width="0.0258%" height="15" fill="rgb(226,159,4)" fg:x="29993" fg:w="29"/><text x="26.9541%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.07%)</title><rect x="26.6649%" y="725" width="0.0748%" height="15" fill="rgb(219,175,34)" fg:x="29949" fg:w="84"/><text x="26.9149%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.07%)</title><rect x="26.6649%" y="709" width="0.0748%" height="15" fill="rgb(236,10,46)" fg:x="29949" fg:w="84"/><text x="26.9149%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.07%)</title><rect x="26.6649%" y="693" width="0.0748%" height="15" fill="rgb(240,211,16)" fg:x="29949" fg:w="84"/><text x="26.9149%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (84 samples, 0.07%)</title><rect x="26.6649%" y="677" width="0.0748%" height="15" fill="rgb(205,3,43)" fg:x="29949" fg:w="84"/><text x="26.9149%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_ref (12 samples, 0.01%)</title><rect x="26.7558%" y="661" width="0.0107%" height="15" fill="rgb(245,7,22)" fg:x="30051" fg:w="12"/><text x="27.0058%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (48 samples, 0.04%)</title><rect x="26.7397%" y="725" width="0.0427%" height="15" fill="rgb(239,132,32)" fg:x="30033" fg:w="48"/><text x="26.9897%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (48 samples, 0.04%)</title><rect x="26.7397%" y="709" width="0.0427%" height="15" fill="rgb(228,202,34)" fg:x="30033" fg:w="48"/><text x="26.9897%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (48 samples, 0.04%)</title><rect x="26.7397%" y="693" width="0.0427%" height="15" fill="rgb(254,200,22)" fg:x="30033" fg:w="48"/><text x="26.9897%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (48 samples, 0.04%)</title><rect x="26.7397%" y="677" width="0.0427%" height="15" fill="rgb(219,10,39)" fg:x="30033" fg:w="48"/><text x="26.9897%" y="687.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;abi_stable::std_types::tuple::Tuple2&lt;K,V&gt;&gt;&gt;::extend (186 samples, 0.17%)</title><rect x="26.6409%" y="757" width="0.1656%" height="15" fill="rgb(226,210,39)" fg:x="29922" fg:w="186"/><text x="26.8909%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (179 samples, 0.16%)</title><rect x="26.6471%" y="741" width="0.1594%" height="15" fill="rgb(208,219,16)" fg:x="29929" fg:w="179"/><text x="26.8971%" y="751.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (27 samples, 0.02%)</title><rect x="26.7825%" y="725" width="0.0240%" height="15" fill="rgb(216,158,51)" fg:x="30081" fg:w="27"/><text x="27.0325%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (18 samples, 0.02%)</title><rect x="26.7905%" y="709" width="0.0160%" height="15" fill="rgb(233,14,44)" fg:x="30090" fg:w="18"/><text x="27.0405%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (18 samples, 0.02%)</title><rect x="26.7905%" y="693" width="0.0160%" height="15" fill="rgb(237,97,39)" fg:x="30090" fg:w="18"/><text x="27.0405%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (18 samples, 0.02%)</title><rect x="26.7905%" y="677" width="0.0160%" height="15" fill="rgb(218,198,43)" fg:x="30090" fg:w="18"/><text x="27.0405%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (18 samples, 0.02%)</title><rect x="26.7905%" y="661" width="0.0160%" height="15" fill="rgb(231,104,20)" fg:x="30090" fg:w="18"/><text x="27.0405%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (18 samples, 0.02%)</title><rect x="26.7905%" y="645" width="0.0160%" height="15" fill="rgb(254,36,13)" fg:x="30090" fg:w="18"/><text x="27.0405%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (18 samples, 0.02%)</title><rect x="26.7905%" y="629" width="0.0160%" height="15" fill="rgb(248,14,50)" fg:x="30090" fg:w="18"/><text x="27.0405%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="26.7905%" y="613" width="0.0160%" height="15" fill="rgb(217,107,29)" fg:x="30090" fg:w="18"/><text x="27.0405%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (25 samples, 0.02%)</title><rect x="27.3176%" y="629" width="0.0223%" height="15" fill="rgb(251,169,33)" fg:x="30682" fg:w="25"/><text x="27.5676%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (57 samples, 0.05%)</title><rect x="27.3425%" y="597" width="0.0507%" height="15" fill="rgb(217,108,32)" fg:x="30710" fg:w="57"/><text x="27.5925%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (57 samples, 0.05%)</title><rect x="27.3425%" y="581" width="0.0507%" height="15" fill="rgb(219,66,42)" fg:x="30710" fg:w="57"/><text x="27.5925%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (77 samples, 0.07%)</title><rect x="27.3425%" y="613" width="0.0686%" height="15" fill="rgb(206,180,7)" fg:x="30710" fg:w="77"/><text x="27.5925%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (20 samples, 0.02%)</title><rect x="27.3932%" y="597" width="0.0178%" height="15" fill="rgb(208,226,31)" fg:x="30767" fg:w="20"/><text x="27.6432%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (13 samples, 0.01%)</title><rect x="27.3995%" y="581" width="0.0116%" height="15" fill="rgb(218,26,49)" fg:x="30774" fg:w="13"/><text x="27.6495%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.01%)</title><rect x="27.3995%" y="565" width="0.0116%" height="15" fill="rgb(233,197,48)" fg:x="30774" fg:w="13"/><text x="27.6495%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (676 samples, 0.60%)</title><rect x="26.8252%" y="677" width="0.6019%" height="15" fill="rgb(252,181,51)" fg:x="30129" fg:w="676"/><text x="27.0752%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (619 samples, 0.55%)</title><rect x="26.8760%" y="661" width="0.5511%" height="15" fill="rgb(253,90,19)" fg:x="30186" fg:w="619"/><text x="27.1260%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (137 samples, 0.12%)</title><rect x="27.3051%" y="645" width="0.1220%" height="15" fill="rgb(215,171,30)" fg:x="30668" fg:w="137"/><text x="27.5551%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (98 samples, 0.09%)</title><rect x="27.3398%" y="629" width="0.0873%" height="15" fill="rgb(214,222,9)" fg:x="30707" fg:w="98"/><text x="27.5898%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (18 samples, 0.02%)</title><rect x="27.4111%" y="613" width="0.0160%" height="15" fill="rgb(223,3,22)" fg:x="30787" fg:w="18"/><text x="27.6611%" y="623.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="27.4529%" y="517" width="0.0116%" height="15" fill="rgb(225,196,46)" fg:x="30834" fg:w="13"/><text x="27.7029%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (71 samples, 0.06%)</title><rect x="27.4645%" y="517" width="0.0632%" height="15" fill="rgb(209,110,37)" fg:x="30847" fg:w="71"/><text x="27.7145%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (71 samples, 0.06%)</title><rect x="27.4645%" y="501" width="0.0632%" height="15" fill="rgb(249,89,12)" fg:x="30847" fg:w="71"/><text x="27.7145%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (68 samples, 0.06%)</title><rect x="27.4671%" y="485" width="0.0605%" height="15" fill="rgb(226,27,33)" fg:x="30850" fg:w="68"/><text x="27.7171%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (56 samples, 0.05%)</title><rect x="27.4778%" y="469" width="0.0499%" height="15" fill="rgb(213,82,22)" fg:x="30862" fg:w="56"/><text x="27.7278%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (56 samples, 0.05%)</title><rect x="27.4778%" y="453" width="0.0499%" height="15" fill="rgb(248,140,0)" fg:x="30862" fg:w="56"/><text x="27.7278%" y="463.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (120 samples, 0.11%)</title><rect x="27.4271%" y="677" width="0.1068%" height="15" fill="rgb(228,106,3)" fg:x="30805" fg:w="120"/><text x="27.6771%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (120 samples, 0.11%)</title><rect x="27.4271%" y="661" width="0.1068%" height="15" fill="rgb(209,23,37)" fg:x="30805" fg:w="120"/><text x="27.6771%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (120 samples, 0.11%)</title><rect x="27.4271%" y="645" width="0.1068%" height="15" fill="rgb(241,93,50)" fg:x="30805" fg:w="120"/><text x="27.6771%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (110 samples, 0.10%)</title><rect x="27.4360%" y="629" width="0.0979%" height="15" fill="rgb(253,46,43)" fg:x="30815" fg:w="110"/><text x="27.6860%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (110 samples, 0.10%)</title><rect x="27.4360%" y="613" width="0.0979%" height="15" fill="rgb(226,206,43)" fg:x="30815" fg:w="110"/><text x="27.6860%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (110 samples, 0.10%)</title><rect x="27.4360%" y="597" width="0.0979%" height="15" fill="rgb(217,54,7)" fg:x="30815" fg:w="110"/><text x="27.6860%" y="607.50"></text></g><g><title>alloc::alloc::alloc (100 samples, 0.09%)</title><rect x="27.4449%" y="581" width="0.0890%" height="15" fill="rgb(223,5,52)" fg:x="30825" fg:w="100"/><text x="27.6949%" y="591.50"></text></g><g><title>__rg_alloc (100 samples, 0.09%)</title><rect x="27.4449%" y="565" width="0.0890%" height="15" fill="rgb(206,52,46)" fg:x="30825" fg:w="100"/><text x="27.6949%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (100 samples, 0.09%)</title><rect x="27.4449%" y="549" width="0.0890%" height="15" fill="rgb(253,136,11)" fg:x="30825" fg:w="100"/><text x="27.6949%" y="559.50"></text></g><g><title>rust_alloc (91 samples, 0.08%)</title><rect x="27.4529%" y="533" width="0.0810%" height="15" fill="rgb(208,106,33)" fg:x="30834" fg:w="91"/><text x="27.7029%" y="543.50"></text></g><g><title>abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt;::new (14 samples, 0.01%)</title><rect x="27.5339%" y="677" width="0.0125%" height="15" fill="rgb(206,54,4)" fg:x="30925" fg:w="14"/><text x="27.7839%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (30 samples, 0.03%)</title><rect x="27.5633%" y="613" width="0.0267%" height="15" fill="rgb(213,3,15)" fg:x="30958" fg:w="30"/><text x="27.8133%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="27.5793%" y="597" width="0.0107%" height="15" fill="rgb(252,211,39)" fg:x="30976" fg:w="12"/><text x="27.8293%" y="607.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="27.5793%" y="581" width="0.0107%" height="15" fill="rgb(223,6,36)" fg:x="30976" fg:w="12"/><text x="27.8293%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="27.5793%" y="565" width="0.0107%" height="15" fill="rgb(252,169,45)" fg:x="30976" fg:w="12"/><text x="27.8293%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="27.5793%" y="549" width="0.0107%" height="15" fill="rgb(212,48,26)" fg:x="30976" fg:w="12"/><text x="27.8293%" y="559.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="27.5793%" y="533" width="0.0107%" height="15" fill="rgb(251,102,48)" fg:x="30976" fg:w="12"/><text x="27.8293%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="27.5793%" y="517" width="0.0107%" height="15" fill="rgb(243,208,16)" fg:x="30976" fg:w="12"/><text x="27.8293%" y="527.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="27.6132%" y="517" width="0.0116%" height="15" fill="rgb(219,96,24)" fg:x="31014" fg:w="13"/><text x="27.8632%" y="527.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="27.6523%" y="469" width="0.0169%" height="15" fill="rgb(219,33,29)" fg:x="31058" fg:w="19"/><text x="27.9023%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="27.6523%" y="453" width="0.0169%" height="15" fill="rgb(223,176,5)" fg:x="31058" fg:w="19"/><text x="27.9023%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (50 samples, 0.04%)</title><rect x="27.6336%" y="517" width="0.0445%" height="15" fill="rgb(228,140,14)" fg:x="31037" fg:w="50"/><text x="27.8836%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (50 samples, 0.04%)</title><rect x="27.6336%" y="501" width="0.0445%" height="15" fill="rgb(217,179,31)" fg:x="31037" fg:w="50"/><text x="27.8836%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (50 samples, 0.04%)</title><rect x="27.6336%" y="485" width="0.0445%" height="15" fill="rgb(230,9,30)" fg:x="31037" fg:w="50"/><text x="27.8836%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (92 samples, 0.08%)</title><rect x="27.6123%" y="549" width="0.0819%" height="15" fill="rgb(230,136,20)" fg:x="31013" fg:w="92"/><text x="27.8623%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (92 samples, 0.08%)</title><rect x="27.6123%" y="533" width="0.0819%" height="15" fill="rgb(215,210,22)" fg:x="31013" fg:w="92"/><text x="27.8623%" y="543.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (18 samples, 0.02%)</title><rect x="27.6782%" y="517" width="0.0160%" height="15" fill="rgb(218,43,5)" fg:x="31087" fg:w="18"/><text x="27.9282%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (107 samples, 0.10%)</title><rect x="27.6123%" y="581" width="0.0953%" height="15" fill="rgb(216,11,5)" fg:x="31013" fg:w="107"/><text x="27.8623%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (107 samples, 0.10%)</title><rect x="27.6123%" y="565" width="0.0953%" height="15" fill="rgb(209,82,29)" fg:x="31013" fg:w="107"/><text x="27.8623%" y="575.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="27.6942%" y="549" width="0.0134%" height="15" fill="rgb(244,115,12)" fg:x="31105" fg:w="15"/><text x="27.9442%" y="559.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="27.6942%" y="533" width="0.0134%" height="15" fill="rgb(222,82,18)" fg:x="31105" fg:w="15"/><text x="27.9442%" y="543.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (15 samples, 0.01%)</title><rect x="27.6942%" y="517" width="0.0134%" height="15" fill="rgb(249,227,8)" fg:x="31105" fg:w="15"/><text x="27.9442%" y="527.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="27.6942%" y="501" width="0.0134%" height="15" fill="rgb(253,141,45)" fg:x="31105" fg:w="15"/><text x="27.9442%" y="511.50"></text></g><g><title>rust_dealloc (133 samples, 0.12%)</title><rect x="27.5900%" y="613" width="0.1184%" height="15" fill="rgb(234,184,4)" fg:x="30988" fg:w="133"/><text x="27.8400%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (123 samples, 0.11%)</title><rect x="27.5989%" y="597" width="0.1095%" height="15" fill="rgb(218,194,23)" fg:x="30998" fg:w="123"/><text x="27.8489%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (188 samples, 0.17%)</title><rect x="27.5464%" y="629" width="0.1674%" height="15" fill="rgb(235,66,41)" fg:x="30939" fg:w="188"/><text x="27.7964%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,065 samples, 0.95%)</title><rect x="26.8065%" y="757" width="0.9482%" height="15" fill="rgb(245,217,1)" fg:x="30108" fg:w="1065"/><text x="27.0565%" y="767.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (1,065 samples, 0.95%)</title><rect x="26.8065%" y="741" width="0.9482%" height="15" fill="rgb(229,91,1)" fg:x="30108" fg:w="1065"/><text x="27.0565%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (1,049 samples, 0.93%)</title><rect x="26.8208%" y="725" width="0.9340%" height="15" fill="rgb(207,101,30)" fg:x="30124" fg:w="1049"/><text x="27.0708%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (1,044 samples, 0.93%)</title><rect x="26.8252%" y="709" width="0.9295%" height="15" fill="rgb(223,82,49)" fg:x="30129" fg:w="1044"/><text x="27.0752%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (1,044 samples, 0.93%)</title><rect x="26.8252%" y="693" width="0.9295%" height="15" fill="rgb(218,167,17)" fg:x="30129" fg:w="1044"/><text x="27.0752%" y="703.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (234 samples, 0.21%)</title><rect x="27.5464%" y="677" width="0.2083%" height="15" fill="rgb(208,103,14)" fg:x="30939" fg:w="234"/><text x="27.7964%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (234 samples, 0.21%)</title><rect x="27.5464%" y="661" width="0.2083%" height="15" fill="rgb(238,20,8)" fg:x="30939" fg:w="234"/><text x="27.7964%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (234 samples, 0.21%)</title><rect x="27.5464%" y="645" width="0.2083%" height="15" fill="rgb(218,80,54)" fg:x="30939" fg:w="234"/><text x="27.7964%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (46 samples, 0.04%)</title><rect x="27.7138%" y="629" width="0.0410%" height="15" fill="rgb(240,144,17)" fg:x="31127" fg:w="46"/><text x="27.9638%" y="639.50"></text></g><g><title>core::ptr::read (46 samples, 0.04%)</title><rect x="27.7138%" y="613" width="0.0410%" height="15" fill="rgb(245,27,50)" fg:x="31127" fg:w="46"/><text x="27.9638%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="27.7814%" y="629" width="0.0151%" height="15" fill="rgb(251,51,7)" fg:x="31203" fg:w="17"/><text x="28.0314%" y="639.50"></text></g><g><title>alloc::alloc::box_free (17 samples, 0.02%)</title><rect x="27.7814%" y="613" width="0.0151%" height="15" fill="rgb(245,217,29)" fg:x="31203" fg:w="17"/><text x="28.0314%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="27.7814%" y="597" width="0.0151%" height="15" fill="rgb(221,176,29)" fg:x="31203" fg:w="17"/><text x="28.0314%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="27.7814%" y="581" width="0.0151%" height="15" fill="rgb(212,180,24)" fg:x="31203" fg:w="17"/><text x="28.0314%" y="591.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="27.7814%" y="565" width="0.0151%" height="15" fill="rgb(254,24,2)" fg:x="31203" fg:w="17"/><text x="28.0314%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="27.7814%" y="549" width="0.0151%" height="15" fill="rgb(230,100,2)" fg:x="31203" fg:w="17"/><text x="28.0314%" y="559.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (61 samples, 0.05%)</title><rect x="27.7681%" y="645" width="0.0543%" height="15" fill="rgb(219,142,25)" fg:x="31188" fg:w="61"/><text x="28.0181%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (29 samples, 0.03%)</title><rect x="27.7966%" y="629" width="0.0258%" height="15" fill="rgb(240,73,43)" fg:x="31220" fg:w="29"/><text x="28.0466%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (29 samples, 0.03%)</title><rect x="27.7966%" y="613" width="0.0258%" height="15" fill="rgb(214,114,15)" fg:x="31220" fg:w="29"/><text x="28.0466%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (29 samples, 0.03%)</title><rect x="27.7966%" y="597" width="0.0258%" height="15" fill="rgb(207,130,4)" fg:x="31220" fg:w="29"/><text x="28.0466%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (29 samples, 0.03%)</title><rect x="27.7966%" y="581" width="0.0258%" height="15" fill="rgb(221,25,40)" fg:x="31220" fg:w="29"/><text x="28.0466%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="27.7966%" y="565" width="0.0258%" height="15" fill="rgb(241,184,7)" fg:x="31220" fg:w="29"/><text x="28.0466%" y="575.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="27.8224%" y="629" width="0.0107%" height="15" fill="rgb(235,159,4)" fg:x="31249" fg:w="12"/><text x="28.0724%" y="639.50"></text></g><g><title>rust_dealloc (16 samples, 0.01%)</title><rect x="27.8357%" y="549" width="0.0142%" height="15" fill="rgb(214,87,48)" fg:x="31264" fg:w="16"/><text x="28.0857%" y="559.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (33 samples, 0.03%)</title><rect x="27.8767%" y="501" width="0.0294%" height="15" fill="rgb(246,198,24)" fg:x="31310" fg:w="33"/><text x="28.1267%" y="511.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (24 samples, 0.02%)</title><rect x="27.8847%" y="485" width="0.0214%" height="15" fill="rgb(209,66,40)" fg:x="31319" fg:w="24"/><text x="28.1347%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (68 samples, 0.06%)</title><rect x="27.8544%" y="549" width="0.0605%" height="15" fill="rgb(233,147,39)" fg:x="31285" fg:w="68"/><text x="28.1044%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (68 samples, 0.06%)</title><rect x="27.8544%" y="533" width="0.0605%" height="15" fill="rgb(231,145,52)" fg:x="31285" fg:w="68"/><text x="28.1044%" y="543.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (66 samples, 0.06%)</title><rect x="27.8562%" y="517" width="0.0588%" height="15" fill="rgb(206,20,26)" fg:x="31287" fg:w="66"/><text x="28.1062%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (98 samples, 0.09%)</title><rect x="27.8357%" y="581" width="0.0873%" height="15" fill="rgb(238,220,4)" fg:x="31264" fg:w="98"/><text x="28.0857%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (98 samples, 0.09%)</title><rect x="27.8357%" y="565" width="0.0873%" height="15" fill="rgb(252,195,42)" fg:x="31264" fg:w="98"/><text x="28.0857%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (108 samples, 0.10%)</title><rect x="27.8357%" y="613" width="0.0962%" height="15" fill="rgb(209,10,6)" fg:x="31264" fg:w="108"/><text x="28.0857%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (108 samples, 0.10%)</title><rect x="27.8357%" y="597" width="0.0962%" height="15" fill="rgb(229,3,52)" fg:x="31264" fg:w="108"/><text x="28.0857%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (115 samples, 0.10%)</title><rect x="27.8331%" y="629" width="0.1024%" height="15" fill="rgb(253,49,37)" fg:x="31261" fg:w="115"/><text x="28.0831%" y="639.50"></text></g><g><title>rust_dealloc (131 samples, 0.12%)</title><rect x="27.8224%" y="645" width="0.1166%" height="15" fill="rgb(240,103,49)" fg:x="31249" fg:w="131"/><text x="28.0724%" y="655.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (210 samples, 0.19%)</title><rect x="27.7547%" y="725" width="0.1870%" height="15" fill="rgb(250,182,30)" fg:x="31173" fg:w="210"/><text x="28.0047%" y="735.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (209 samples, 0.19%)</title><rect x="27.7556%" y="709" width="0.1861%" height="15" fill="rgb(248,8,30)" fg:x="31174" fg:w="209"/><text x="28.0056%" y="719.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (202 samples, 0.18%)</title><rect x="27.7619%" y="693" width="0.1798%" height="15" fill="rgb(237,120,30)" fg:x="31181" fg:w="202"/><text x="28.0119%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (202 samples, 0.18%)</title><rect x="27.7619%" y="677" width="0.1798%" height="15" fill="rgb(221,146,34)" fg:x="31181" fg:w="202"/><text x="28.0119%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (202 samples, 0.18%)</title><rect x="27.7619%" y="661" width="0.1798%" height="15" fill="rgb(242,55,13)" fg:x="31181" fg:w="202"/><text x="28.0119%" y="671.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (1,464 samples, 1.30%)</title><rect x="26.6409%" y="773" width="1.3035%" height="15" fill="rgb(242,112,31)" fg:x="29922" fg:w="1464"/><text x="26.8909%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (213 samples, 0.19%)</title><rect x="27.7547%" y="757" width="0.1896%" height="15" fill="rgb(249,192,27)" fg:x="31173" fg:w="213"/><text x="28.0047%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (213 samples, 0.19%)</title><rect x="27.7547%" y="741" width="0.1896%" height="15" fill="rgb(208,204,44)" fg:x="31173" fg:w="213"/><text x="28.0047%" y="751.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies (30 samples, 0.03%)</title><rect x="27.9533%" y="773" width="0.0267%" height="15" fill="rgb(208,93,54)" fg:x="31396" fg:w="30"/><text x="28.2033%" y="783.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (20 samples, 0.02%)</title><rect x="27.9800%" y="773" width="0.0178%" height="15" fill="rgb(242,1,31)" fg:x="31426" fg:w="20"/><text x="28.2300%" y="783.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (16,428 samples, 14.63%)</title><rect x="13.3721%" y="789" width="14.6266%" height="15" fill="rgb(241,83,25)" fg:x="15019" fg:w="16428"/><text x="13.6221%" y="799.50">tremor_runtime::connec..</text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (911 samples, 0.81%)</title><rect x="28.2337%" y="773" width="0.8111%" height="15" fill="rgb(205,169,50)" fg:x="31711" fg:w="911"/><text x="28.4837%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (673 samples, 0.60%)</title><rect x="28.4456%" y="757" width="0.5992%" height="15" fill="rgb(239,186,37)" fg:x="31949" fg:w="673"/><text x="28.6956%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="29.2363%" y="757" width="0.0116%" height="15" fill="rgb(205,221,10)" fg:x="32837" fg:w="13"/><text x="29.4863%" y="767.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (47 samples, 0.04%)</title><rect x="29.4491%" y="741" width="0.0418%" height="15" fill="rgb(218,196,15)" fg:x="33076" fg:w="47"/><text x="29.6991%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (173 samples, 0.15%)</title><rect x="29.7037%" y="725" width="0.1540%" height="15" fill="rgb(218,196,35)" fg:x="33362" fg:w="173"/><text x="29.9537%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (422 samples, 0.38%)</title><rect x="29.4909%" y="741" width="0.3757%" height="15" fill="rgb(233,63,24)" fg:x="33123" fg:w="422"/><text x="29.7409%" y="751.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (511 samples, 0.45%)</title><rect x="29.8666%" y="709" width="0.4550%" height="15" fill="rgb(225,8,4)" fg:x="33545" fg:w="511"/><text x="30.1166%" y="719.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (504 samples, 0.45%)</title><rect x="29.8729%" y="693" width="0.4487%" height="15" fill="rgb(234,105,35)" fg:x="33552" fg:w="504"/><text x="30.1229%" y="703.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (504 samples, 0.45%)</title><rect x="29.8729%" y="677" width="0.4487%" height="15" fill="rgb(236,21,32)" fg:x="33552" fg:w="504"/><text x="30.1229%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (296 samples, 0.26%)</title><rect x="30.3893%" y="661" width="0.2635%" height="15" fill="rgb(228,109,6)" fg:x="34132" fg:w="296"/><text x="30.6393%" y="671.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (296 samples, 0.26%)</title><rect x="30.3893%" y="645" width="0.2635%" height="15" fill="rgb(229,215,31)" fg:x="34132" fg:w="296"/><text x="30.6393%" y="655.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (296 samples, 0.26%)</title><rect x="30.3893%" y="629" width="0.2635%" height="15" fill="rgb(221,52,54)" fg:x="34132" fg:w="296"/><text x="30.6393%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (270 samples, 0.24%)</title><rect x="30.4124%" y="613" width="0.2404%" height="15" fill="rgb(252,129,43)" fg:x="34158" fg:w="270"/><text x="30.6624%" y="623.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.01%)</title><rect x="30.8424%" y="613" width="0.0142%" height="15" fill="rgb(248,183,27)" fg:x="34641" fg:w="16"/><text x="31.0924%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.01%)</title><rect x="30.8424%" y="597" width="0.0142%" height="15" fill="rgb(250,0,22)" fg:x="34641" fg:w="16"/><text x="31.0924%" y="607.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (16 samples, 0.01%)</title><rect x="30.8424%" y="581" width="0.0142%" height="15" fill="rgb(213,166,10)" fg:x="34641" fg:w="16"/><text x="31.0924%" y="591.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (724 samples, 0.64%)</title><rect x="30.3216%" y="709" width="0.6446%" height="15" fill="rgb(207,163,36)" fg:x="34056" fg:w="724"/><text x="30.5716%" y="719.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (713 samples, 0.63%)</title><rect x="30.3314%" y="693" width="0.6348%" height="15" fill="rgb(208,122,22)" fg:x="34067" fg:w="713"/><text x="30.5814%" y="703.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (677 samples, 0.60%)</title><rect x="30.3634%" y="677" width="0.6028%" height="15" fill="rgb(207,104,49)" fg:x="34103" fg:w="677"/><text x="30.6134%" y="687.50"></text></g><g><title>std::panic::catch_unwind (352 samples, 0.31%)</title><rect x="30.6528%" y="661" width="0.3134%" height="15" fill="rgb(248,211,50)" fg:x="34428" fg:w="352"/><text x="30.9028%" y="671.50"></text></g><g><title>std::panicking::try (352 samples, 0.31%)</title><rect x="30.6528%" y="645" width="0.3134%" height="15" fill="rgb(217,13,45)" fg:x="34428" fg:w="352"/><text x="30.9028%" y="655.50"></text></g><g><title>std::panicking::try::do_call (352 samples, 0.31%)</title><rect x="30.6528%" y="629" width="0.3134%" height="15" fill="rgb(211,216,49)" fg:x="34428" fg:w="352"/><text x="30.9028%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (123 samples, 0.11%)</title><rect x="30.8567%" y="613" width="0.1095%" height="15" fill="rgb(221,58,53)" fg:x="34657" fg:w="123"/><text x="31.1067%" y="623.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,439 samples, 1.28%)</title><rect x="29.8666%" y="741" width="1.2812%" height="15" fill="rgb(220,112,41)" fg:x="33545" fg:w="1439"/><text x="30.1166%" y="751.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,439 samples, 1.28%)</title><rect x="29.8666%" y="725" width="1.2812%" height="15" fill="rgb(236,38,28)" fg:x="33545" fg:w="1439"/><text x="30.1166%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (204 samples, 0.18%)</title><rect x="30.9662%" y="709" width="0.1816%" height="15" fill="rgb(227,195,22)" fg:x="34780" fg:w="204"/><text x="31.2162%" y="719.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (71 samples, 0.06%)</title><rect x="31.1478%" y="741" width="0.0632%" height="15" fill="rgb(214,55,33)" fg:x="34984" fg:w="71"/><text x="31.3978%" y="751.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (14 samples, 0.01%)</title><rect x="31.2226%" y="693" width="0.0125%" height="15" fill="rgb(248,80,13)" fg:x="35068" fg:w="14"/><text x="31.4726%" y="703.50"></text></g><g><title>async_ffi::DropBomb::with (14 samples, 0.01%)</title><rect x="31.2226%" y="677" width="0.0125%" height="15" fill="rgb(238,52,6)" fg:x="35068" fg:w="14"/><text x="31.4726%" y="687.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="31.2351%" y="677" width="0.0107%" height="15" fill="rgb(224,198,47)" fg:x="35082" fg:w="12"/><text x="31.4851%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (18 samples, 0.02%)</title><rect x="31.2538%" y="597" width="0.0160%" height="15" fill="rgb(233,171,20)" fg:x="35103" fg:w="18"/><text x="31.5038%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (18 samples, 0.02%)</title><rect x="31.2538%" y="581" width="0.0160%" height="15" fill="rgb(241,30,25)" fg:x="35103" fg:w="18"/><text x="31.5038%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (18 samples, 0.02%)</title><rect x="31.2538%" y="565" width="0.0160%" height="15" fill="rgb(207,171,38)" fg:x="35103" fg:w="18"/><text x="31.5038%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (29 samples, 0.03%)</title><rect x="31.2458%" y="629" width="0.0258%" height="15" fill="rgb(234,70,1)" fg:x="35094" fg:w="29"/><text x="31.4958%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (29 samples, 0.03%)</title><rect x="31.2458%" y="613" width="0.0258%" height="15" fill="rgb(232,178,18)" fg:x="35094" fg:w="29"/><text x="31.4958%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (34 samples, 0.03%)</title><rect x="31.2458%" y="661" width="0.0303%" height="15" fill="rgb(241,78,40)" fg:x="35094" fg:w="34"/><text x="31.4958%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (34 samples, 0.03%)</title><rect x="31.2458%" y="645" width="0.0303%" height="15" fill="rgb(222,35,25)" fg:x="35094" fg:w="34"/><text x="31.4958%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (39 samples, 0.03%)</title><rect x="31.2458%" y="677" width="0.0347%" height="15" fill="rgb(207,92,16)" fg:x="35094" fg:w="39"/><text x="31.4958%" y="687.50"></text></g><g><title>rust_dealloc (60 samples, 0.05%)</title><rect x="31.2351%" y="693" width="0.0534%" height="15" fill="rgb(216,59,51)" fg:x="35082" fg:w="60"/><text x="31.4851%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (95 samples, 0.08%)</title><rect x="31.2110%" y="741" width="0.0846%" height="15" fill="rgb(213,80,28)" fg:x="35055" fg:w="95"/><text x="31.4610%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (95 samples, 0.08%)</title><rect x="31.2110%" y="725" width="0.0846%" height="15" fill="rgb(220,93,7)" fg:x="35055" fg:w="95"/><text x="31.4610%" y="735.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (95 samples, 0.08%)</title><rect x="31.2110%" y="709" width="0.0846%" height="15" fill="rgb(225,24,44)" fg:x="35055" fg:w="95"/><text x="31.4610%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (13 samples, 0.01%)</title><rect x="31.8085%" y="437" width="0.0116%" height="15" fill="rgb(243,74,40)" fg:x="35726" fg:w="13"/><text x="32.0585%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="31.8085%" y="469" width="0.0775%" height="15" fill="rgb(228,39,7)" fg:x="35726" fg:w="87"/><text x="32.0585%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (87 samples, 0.08%)</title><rect x="31.8085%" y="453" width="0.0775%" height="15" fill="rgb(227,79,8)" fg:x="35726" fg:w="87"/><text x="32.0585%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (74 samples, 0.07%)</title><rect x="31.8200%" y="437" width="0.0659%" height="15" fill="rgb(236,58,11)" fg:x="35739" fg:w="74"/><text x="32.0700%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (62 samples, 0.06%)</title><rect x="31.8307%" y="421" width="0.0552%" height="15" fill="rgb(249,63,35)" fg:x="35751" fg:w="62"/><text x="32.0807%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (62 samples, 0.06%)</title><rect x="31.8307%" y="405" width="0.0552%" height="15" fill="rgb(252,114,16)" fg:x="35751" fg:w="62"/><text x="32.0807%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (62 samples, 0.06%)</title><rect x="31.8307%" y="389" width="0.0552%" height="15" fill="rgb(254,151,24)" fg:x="35751" fg:w="62"/><text x="32.0807%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (14 samples, 0.01%)</title><rect x="31.9028%" y="389" width="0.0125%" height="15" fill="rgb(253,54,39)" fg:x="35832" fg:w="14"/><text x="32.1528%" y="399.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="31.9028%" y="373" width="0.0125%" height="15" fill="rgb(243,25,45)" fg:x="35832" fg:w="14"/><text x="32.1528%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.02%)</title><rect x="31.8939%" y="421" width="0.0231%" height="15" fill="rgb(234,134,9)" fg:x="35822" fg:w="26"/><text x="32.1439%" y="431.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (26 samples, 0.02%)</title><rect x="31.8939%" y="405" width="0.0231%" height="15" fill="rgb(227,166,31)" fg:x="35822" fg:w="26"/><text x="32.1439%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="31.8868%" y="469" width="0.0321%" height="15" fill="rgb(245,143,41)" fg:x="35814" fg:w="36"/><text x="32.1368%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="31.8868%" y="453" width="0.0321%" height="15" fill="rgb(238,181,32)" fg:x="35814" fg:w="36"/><text x="32.1368%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (35 samples, 0.03%)</title><rect x="31.8877%" y="437" width="0.0312%" height="15" fill="rgb(224,113,18)" fg:x="35815" fg:w="35"/><text x="32.1377%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (208 samples, 0.19%)</title><rect x="31.7880%" y="517" width="0.1852%" height="15" fill="rgb(240,229,28)" fg:x="35703" fg:w="208"/><text x="32.0380%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (208 samples, 0.19%)</title><rect x="31.7880%" y="501" width="0.1852%" height="15" fill="rgb(250,185,3)" fg:x="35703" fg:w="208"/><text x="32.0380%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (201 samples, 0.18%)</title><rect x="31.7942%" y="485" width="0.1790%" height="15" fill="rgb(212,59,25)" fg:x="35710" fg:w="201"/><text x="32.0442%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (54 samples, 0.05%)</title><rect x="31.9251%" y="469" width="0.0481%" height="15" fill="rgb(221,87,20)" fg:x="35857" fg:w="54"/><text x="32.1751%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (54 samples, 0.05%)</title><rect x="31.9251%" y="453" width="0.0481%" height="15" fill="rgb(213,74,28)" fg:x="35857" fg:w="54"/><text x="32.1751%" y="463.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (742 samples, 0.66%)</title><rect x="31.3170%" y="725" width="0.6606%" height="15" fill="rgb(224,132,34)" fg:x="35174" fg:w="742"/><text x="31.5670%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (394 samples, 0.35%)</title><rect x="31.6268%" y="709" width="0.3508%" height="15" fill="rgb(222,101,24)" fg:x="35522" fg:w="394"/><text x="31.8768%" y="719.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (394 samples, 0.35%)</title><rect x="31.6268%" y="693" width="0.3508%" height="15" fill="rgb(254,142,4)" fg:x="35522" fg:w="394"/><text x="31.8768%" y="703.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (383 samples, 0.34%)</title><rect x="31.6366%" y="677" width="0.3410%" height="15" fill="rgb(230,229,49)" fg:x="35533" fg:w="383"/><text x="31.8866%" y="687.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (357 samples, 0.32%)</title><rect x="31.6598%" y="661" width="0.3179%" height="15" fill="rgb(238,70,47)" fg:x="35559" fg:w="357"/><text x="31.9098%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (357 samples, 0.32%)</title><rect x="31.6598%" y="645" width="0.3179%" height="15" fill="rgb(231,160,17)" fg:x="35559" fg:w="357"/><text x="31.9098%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (218 samples, 0.19%)</title><rect x="31.7835%" y="629" width="0.1941%" height="15" fill="rgb(218,68,53)" fg:x="35698" fg:w="218"/><text x="32.0335%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (218 samples, 0.19%)</title><rect x="31.7835%" y="613" width="0.1941%" height="15" fill="rgb(236,111,10)" fg:x="35698" fg:w="218"/><text x="32.0335%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (218 samples, 0.19%)</title><rect x="31.7835%" y="597" width="0.1941%" height="15" fill="rgb(224,34,41)" fg:x="35698" fg:w="218"/><text x="32.0335%" y="607.50"></text></g><g><title>alloc::alloc::alloc (218 samples, 0.19%)</title><rect x="31.7835%" y="581" width="0.1941%" height="15" fill="rgb(241,118,19)" fg:x="35698" fg:w="218"/><text x="32.0335%" y="591.50"></text></g><g><title>__rg_alloc (218 samples, 0.19%)</title><rect x="31.7835%" y="565" width="0.1941%" height="15" fill="rgb(238,129,25)" fg:x="35698" fg:w="218"/><text x="32.0335%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (218 samples, 0.19%)</title><rect x="31.7835%" y="549" width="0.1941%" height="15" fill="rgb(238,22,31)" fg:x="35698" fg:w="218"/><text x="32.0335%" y="559.50"></text></g><g><title>rust_alloc (218 samples, 0.19%)</title><rect x="31.7835%" y="533" width="0.1941%" height="15" fill="rgb(222,174,48)" fg:x="35698" fg:w="218"/><text x="32.0335%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (3,096 samples, 2.76%)</title><rect x="29.2478%" y="757" width="2.7565%" height="15" fill="rgb(206,152,40)" fg:x="32850" fg:w="3096"/><text x="29.4978%" y="767.50">tr..</text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_TO&lt;_ErasedPtr&gt;::pull_data (796 samples, 0.71%)</title><rect x="31.2956%" y="741" width="0.7087%" height="15" fill="rgb(218,99,54)" fg:x="35150" fg:w="796"/><text x="31.5456%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::_::&lt;impl tremor_runtime::connectors::source::RawSource_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::pull_data (28 samples, 0.02%)</title><rect x="31.9794%" y="725" width="0.0249%" height="15" fill="rgb(220,174,26)" fg:x="35918" fg:w="28"/><text x="32.2294%" y="735.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::control_plane::{{closure}} (306 samples, 0.27%)</title><rect x="32.0043%" y="757" width="0.2724%" height="15" fill="rgb(245,116,9)" fg:x="35946" fg:w="306"/><text x="32.2543%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::needs_control_plane_msg (241 samples, 0.21%)</title><rect x="32.0622%" y="741" width="0.2146%" height="15" fill="rgb(209,72,35)" fg:x="36011" fg:w="241"/><text x="32.3122%" y="751.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (208 samples, 0.19%)</title><rect x="32.0916%" y="725" width="0.1852%" height="15" fill="rgb(226,126,21)" fg:x="36044" fg:w="208"/><text x="32.3416%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (208 samples, 0.19%)</title><rect x="32.0916%" y="709" width="0.1852%" height="15" fill="rgb(227,192,1)" fg:x="36044" fg:w="208"/><text x="32.3416%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (126 samples, 0.11%)</title><rect x="32.1646%" y="693" width="0.1122%" height="15" fill="rgb(237,180,29)" fg:x="36126" fg:w="126"/><text x="32.4146%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (111 samples, 0.10%)</title><rect x="32.1780%" y="677" width="0.0988%" height="15" fill="rgb(230,197,35)" fg:x="36141" fg:w="111"/><text x="32.4280%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (111 samples, 0.10%)</title><rect x="32.1780%" y="661" width="0.0988%" height="15" fill="rgb(246,193,31)" fg:x="36141" fg:w="111"/><text x="32.4280%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (451 samples, 0.40%)</title><rect x="32.9588%" y="741" width="0.4015%" height="15" fill="rgb(241,36,4)" fg:x="37018" fg:w="451"/><text x="33.2088%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::convert::From&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (79 samples, 0.07%)</title><rect x="33.2900%" y="725" width="0.0703%" height="15" fill="rgb(241,130,17)" fg:x="37390" fg:w="79"/><text x="33.5400%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (61 samples, 0.05%)</title><rect x="33.3060%" y="709" width="0.0543%" height="15" fill="rgb(206,137,32)" fg:x="37408" fg:w="61"/><text x="33.5560%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::ops::deref::Deref&gt;::deref (23 samples, 0.02%)</title><rect x="33.3603%" y="741" width="0.0205%" height="15" fill="rgb(237,228,51)" fg:x="37469" fg:w="23"/><text x="33.6103%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (20 samples, 0.02%)</title><rect x="33.3630%" y="725" width="0.0178%" height="15" fill="rgb(243,6,42)" fg:x="37472" fg:w="20"/><text x="33.6130%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.02%)</title><rect x="33.3808%" y="741" width="0.0240%" height="15" fill="rgb(251,74,28)" fg:x="37492" fg:w="27"/><text x="33.6308%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (671 samples, 0.60%)</title><rect x="33.4075%" y="741" width="0.5974%" height="15" fill="rgb(218,20,49)" fg:x="37522" fg:w="671"/><text x="33.6575%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.04%)</title><rect x="34.0637%" y="485" width="0.0427%" height="15" fill="rgb(238,28,14)" fg:x="38259" fg:w="48"/><text x="34.3137%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (48 samples, 0.04%)</title><rect x="34.0637%" y="469" width="0.0427%" height="15" fill="rgb(229,40,46)" fg:x="38259" fg:w="48"/><text x="34.3137%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (43 samples, 0.04%)</title><rect x="34.0682%" y="453" width="0.0383%" height="15" fill="rgb(244,195,20)" fg:x="38264" fg:w="43"/><text x="34.3182%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (32 samples, 0.03%)</title><rect x="34.0780%" y="437" width="0.0285%" height="15" fill="rgb(253,56,35)" fg:x="38275" fg:w="32"/><text x="34.3280%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (32 samples, 0.03%)</title><rect x="34.0780%" y="421" width="0.0285%" height="15" fill="rgb(210,149,44)" fg:x="38275" fg:w="32"/><text x="34.3280%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (32 samples, 0.03%)</title><rect x="34.0780%" y="405" width="0.0285%" height="15" fill="rgb(240,135,12)" fg:x="38275" fg:w="32"/><text x="34.3280%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (171 samples, 0.15%)</title><rect x="34.0566%" y="533" width="0.1522%" height="15" fill="rgb(251,24,50)" fg:x="38251" fg:w="171"/><text x="34.3066%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (171 samples, 0.15%)</title><rect x="34.0566%" y="517" width="0.1522%" height="15" fill="rgb(243,200,47)" fg:x="38251" fg:w="171"/><text x="34.3066%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (164 samples, 0.15%)</title><rect x="34.0628%" y="501" width="0.1460%" height="15" fill="rgb(224,166,26)" fg:x="38258" fg:w="164"/><text x="34.3128%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (100 samples, 0.09%)</title><rect x="34.1198%" y="485" width="0.0890%" height="15" fill="rgb(233,0,47)" fg:x="38322" fg:w="100"/><text x="34.3698%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (100 samples, 0.09%)</title><rect x="34.1198%" y="469" width="0.0890%" height="15" fill="rgb(253,80,5)" fg:x="38322" fg:w="100"/><text x="34.3698%" y="479.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (211 samples, 0.19%)</title><rect x="34.0317%" y="677" width="0.1879%" height="15" fill="rgb(214,133,25)" fg:x="38223" fg:w="211"/><text x="34.2817%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (211 samples, 0.19%)</title><rect x="34.0317%" y="661" width="0.1879%" height="15" fill="rgb(209,27,14)" fg:x="38223" fg:w="211"/><text x="34.2817%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (196 samples, 0.17%)</title><rect x="34.0450%" y="645" width="0.1745%" height="15" fill="rgb(219,102,51)" fg:x="38238" fg:w="196"/><text x="34.2950%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (196 samples, 0.17%)</title><rect x="34.0450%" y="629" width="0.1745%" height="15" fill="rgb(237,18,16)" fg:x="38238" fg:w="196"/><text x="34.2950%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (196 samples, 0.17%)</title><rect x="34.0450%" y="613" width="0.1745%" height="15" fill="rgb(241,85,17)" fg:x="38238" fg:w="196"/><text x="34.2950%" y="623.50"></text></g><g><title>alloc::alloc::alloc (193 samples, 0.17%)</title><rect x="34.0477%" y="597" width="0.1718%" height="15" fill="rgb(236,90,42)" fg:x="38241" fg:w="193"/><text x="34.2977%" y="607.50"></text></g><g><title>__rg_alloc (193 samples, 0.17%)</title><rect x="34.0477%" y="581" width="0.1718%" height="15" fill="rgb(249,57,21)" fg:x="38241" fg:w="193"/><text x="34.2977%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (193 samples, 0.17%)</title><rect x="34.0477%" y="565" width="0.1718%" height="15" fill="rgb(243,12,36)" fg:x="38241" fg:w="193"/><text x="34.2977%" y="575.50"></text></g><g><title>rust_alloc (193 samples, 0.17%)</title><rect x="34.0477%" y="549" width="0.1718%" height="15" fill="rgb(253,128,47)" fg:x="38241" fg:w="193"/><text x="34.2977%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="34.2088%" y="533" width="0.0107%" height="15" fill="rgb(207,33,20)" fg:x="38422" fg:w="12"/><text x="34.4588%" y="543.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (30 samples, 0.03%)</title><rect x="34.2195%" y="581" width="0.0267%" height="15" fill="rgb(233,215,35)" fg:x="38434" fg:w="30"/><text x="34.4695%" y="591.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (23 samples, 0.02%)</title><rect x="34.2258%" y="565" width="0.0205%" height="15" fill="rgb(249,188,52)" fg:x="38441" fg:w="23"/><text x="34.4758%" y="575.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (22 samples, 0.02%)</title><rect x="34.2266%" y="549" width="0.0196%" height="15" fill="rgb(225,12,32)" fg:x="38442" fg:w="22"/><text x="34.4766%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (22 samples, 0.02%)</title><rect x="34.2266%" y="533" width="0.0196%" height="15" fill="rgb(247,98,14)" fg:x="38442" fg:w="22"/><text x="34.4766%" y="543.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (28 samples, 0.02%)</title><rect x="34.2462%" y="581" width="0.0249%" height="15" fill="rgb(247,219,48)" fg:x="38464" fg:w="28"/><text x="34.4962%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (66 samples, 0.06%)</title><rect x="34.2195%" y="645" width="0.0588%" height="15" fill="rgb(253,60,48)" fg:x="38434" fg:w="66"/><text x="34.4695%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new (66 samples, 0.06%)</title><rect x="34.2195%" y="629" width="0.0588%" height="15" fill="rgb(245,15,52)" fg:x="38434" fg:w="66"/><text x="34.4695%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (66 samples, 0.06%)</title><rect x="34.2195%" y="613" width="0.0588%" height="15" fill="rgb(220,133,28)" fg:x="38434" fg:w="66"/><text x="34.4695%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (66 samples, 0.06%)</title><rect x="34.2195%" y="597" width="0.0588%" height="15" fill="rgb(217,180,4)" fg:x="38434" fg:w="66"/><text x="34.4695%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (16 samples, 0.01%)</title><rect x="34.3148%" y="341" width="0.0142%" height="15" fill="rgb(251,24,1)" fg:x="38541" fg:w="16"/><text x="34.5648%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (16 samples, 0.01%)</title><rect x="34.3148%" y="325" width="0.0142%" height="15" fill="rgb(212,185,49)" fg:x="38541" fg:w="16"/><text x="34.5648%" y="335.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (12 samples, 0.01%)</title><rect x="34.3184%" y="309" width="0.0107%" height="15" fill="rgb(215,175,22)" fg:x="38545" fg:w="12"/><text x="34.5684%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (19 samples, 0.02%)</title><rect x="34.3148%" y="357" width="0.0169%" height="15" fill="rgb(250,205,14)" fg:x="38541" fg:w="19"/><text x="34.5648%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (27 samples, 0.02%)</title><rect x="34.3112%" y="373" width="0.0240%" height="15" fill="rgb(225,211,22)" fg:x="38537" fg:w="27"/><text x="34.5612%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (23 samples, 0.02%)</title><rect x="34.3460%" y="357" width="0.0205%" height="15" fill="rgb(251,179,42)" fg:x="38576" fg:w="23"/><text x="34.5960%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (188 samples, 0.17%)</title><rect x="34.3112%" y="405" width="0.1674%" height="15" fill="rgb(208,216,51)" fg:x="38537" fg:w="188"/><text x="34.5612%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (188 samples, 0.17%)</title><rect x="34.3112%" y="389" width="0.1674%" height="15" fill="rgb(235,36,11)" fg:x="38537" fg:w="188"/><text x="34.5612%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (161 samples, 0.14%)</title><rect x="34.3353%" y="373" width="0.1433%" height="15" fill="rgb(213,189,28)" fg:x="38564" fg:w="161"/><text x="34.5853%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (126 samples, 0.11%)</title><rect x="34.3664%" y="357" width="0.1122%" height="15" fill="rgb(227,203,42)" fg:x="38599" fg:w="126"/><text x="34.6164%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (126 samples, 0.11%)</title><rect x="34.3664%" y="341" width="0.1122%" height="15" fill="rgb(244,72,36)" fg:x="38599" fg:w="126"/><text x="34.6164%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (126 samples, 0.11%)</title><rect x="34.3664%" y="325" width="0.1122%" height="15" fill="rgb(213,53,17)" fg:x="38599" fg:w="126"/><text x="34.6164%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (559 samples, 0.50%)</title><rect x="34.2961%" y="453" width="0.4977%" height="15" fill="rgb(207,167,3)" fg:x="38520" fg:w="559"/><text x="34.5461%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (558 samples, 0.50%)</title><rect x="34.2970%" y="437" width="0.4968%" height="15" fill="rgb(216,98,30)" fg:x="38521" fg:w="558"/><text x="34.5470%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (550 samples, 0.49%)</title><rect x="34.3041%" y="421" width="0.4897%" height="15" fill="rgb(236,123,15)" fg:x="38529" fg:w="550"/><text x="34.5541%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (336 samples, 0.30%)</title><rect x="34.4946%" y="405" width="0.2992%" height="15" fill="rgb(248,81,50)" fg:x="38743" fg:w="336"/><text x="34.7446%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (336 samples, 0.30%)</title><rect x="34.4946%" y="389" width="0.2992%" height="15" fill="rgb(214,120,4)" fg:x="38743" fg:w="336"/><text x="34.7446%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (586 samples, 0.52%)</title><rect x="34.2783%" y="581" width="0.5217%" height="15" fill="rgb(208,179,34)" fg:x="38500" fg:w="586"/><text x="34.5283%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (571 samples, 0.51%)</title><rect x="34.2916%" y="565" width="0.5084%" height="15" fill="rgb(227,140,7)" fg:x="38515" fg:w="571"/><text x="34.5416%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (571 samples, 0.51%)</title><rect x="34.2916%" y="549" width="0.5084%" height="15" fill="rgb(214,22,6)" fg:x="38515" fg:w="571"/><text x="34.5416%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (571 samples, 0.51%)</title><rect x="34.2916%" y="533" width="0.5084%" height="15" fill="rgb(207,137,27)" fg:x="38515" fg:w="571"/><text x="34.5416%" y="543.50"></text></g><g><title>alloc::alloc::alloc (571 samples, 0.51%)</title><rect x="34.2916%" y="517" width="0.5084%" height="15" fill="rgb(210,8,46)" fg:x="38515" fg:w="571"/><text x="34.5416%" y="527.50"></text></g><g><title>__rg_alloc (571 samples, 0.51%)</title><rect x="34.2916%" y="501" width="0.5084%" height="15" fill="rgb(240,16,54)" fg:x="38515" fg:w="571"/><text x="34.5416%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (571 samples, 0.51%)</title><rect x="34.2916%" y="485" width="0.5084%" height="15" fill="rgb(211,209,29)" fg:x="38515" fg:w="571"/><text x="34.5416%" y="495.50"></text></g><g><title>rust_alloc (571 samples, 0.51%)</title><rect x="34.2916%" y="469" width="0.5084%" height="15" fill="rgb(226,228,24)" fg:x="38515" fg:w="571"/><text x="34.5416%" y="479.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (659 samples, 0.59%)</title><rect x="34.2195%" y="661" width="0.5867%" height="15" fill="rgb(222,84,9)" fg:x="38434" fg:w="659"/><text x="34.4695%" y="671.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (593 samples, 0.53%)</title><rect x="34.2783%" y="645" width="0.5280%" height="15" fill="rgb(234,203,30)" fg:x="38500" fg:w="593"/><text x="34.5283%" y="655.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (593 samples, 0.53%)</title><rect x="34.2783%" y="629" width="0.5280%" height="15" fill="rgb(238,109,14)" fg:x="38500" fg:w="593"/><text x="34.5283%" y="639.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (593 samples, 0.53%)</title><rect x="34.2783%" y="613" width="0.5280%" height="15" fill="rgb(233,206,34)" fg:x="38500" fg:w="593"/><text x="34.5283%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (593 samples, 0.53%)</title><rect x="34.2783%" y="597" width="0.5280%" height="15" fill="rgb(220,167,47)" fg:x="38500" fg:w="593"/><text x="34.5283%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (704 samples, 0.63%)</title><rect x="34.2195%" y="677" width="0.6268%" height="15" fill="rgb(238,105,10)" fg:x="38434" fg:w="704"/><text x="34.4695%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (45 samples, 0.04%)</title><rect x="34.8063%" y="661" width="0.0401%" height="15" fill="rgb(213,227,17)" fg:x="39093" fg:w="45"/><text x="35.0563%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (45 samples, 0.04%)</title><rect x="34.8063%" y="645" width="0.0401%" height="15" fill="rgb(217,132,38)" fg:x="39093" fg:w="45"/><text x="35.0563%" y="655.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (45 samples, 0.04%)</title><rect x="34.8063%" y="629" width="0.0401%" height="15" fill="rgb(242,146,4)" fg:x="39093" fg:w="45"/><text x="35.0563%" y="639.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (35 samples, 0.03%)</title><rect x="34.8152%" y="613" width="0.0312%" height="15" fill="rgb(212,61,9)" fg:x="39103" fg:w="35"/><text x="35.0652%" y="623.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (35 samples, 0.03%)</title><rect x="34.8152%" y="597" width="0.0312%" height="15" fill="rgb(247,126,22)" fg:x="39103" fg:w="35"/><text x="35.0652%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (35 samples, 0.03%)</title><rect x="34.8152%" y="581" width="0.0312%" height="15" fill="rgb(220,196,2)" fg:x="39103" fg:w="35"/><text x="35.0652%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (35 samples, 0.03%)</title><rect x="34.8152%" y="565" width="0.0312%" height="15" fill="rgb(208,46,4)" fg:x="39103" fg:w="35"/><text x="35.0652%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (35 samples, 0.03%)</title><rect x="34.8152%" y="549" width="0.0312%" height="15" fill="rgb(252,104,46)" fg:x="39103" fg:w="35"/><text x="35.0652%" y="559.50"></text></g><g><title>abi_stable::std_types::option::ROption&lt;T&gt;::unwrap_or_else (956 samples, 0.85%)</title><rect x="34.0050%" y="741" width="0.8512%" height="15" fill="rgb(237,152,48)" fg:x="38193" fg:w="956"/><text x="34.2550%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (944 samples, 0.84%)</title><rect x="34.0156%" y="725" width="0.8405%" height="15" fill="rgb(221,59,37)" fg:x="38205" fg:w="944"/><text x="34.2656%" y="735.50"></text></g><g><title>value_trait::Builder::object (929 samples, 0.83%)</title><rect x="34.0290%" y="709" width="0.8271%" height="15" fill="rgb(209,202,51)" fg:x="38220" fg:w="929"/><text x="34.2790%" y="719.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (926 samples, 0.82%)</title><rect x="34.0317%" y="693" width="0.8245%" height="15" fill="rgb(228,81,30)" fg:x="38223" fg:w="926"/><text x="34.2817%" y="703.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (42 samples, 0.04%)</title><rect x="34.9309%" y="629" width="0.0374%" height="15" fill="rgb(227,42,39)" fg:x="39233" fg:w="42"/><text x="35.1809%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (22 samples, 0.02%)</title><rect x="35.0039%" y="485" width="0.0196%" height="15" fill="rgb(221,26,2)" fg:x="39315" fg:w="22"/><text x="35.2539%" y="495.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (22 samples, 0.02%)</title><rect x="35.0039%" y="469" width="0.0196%" height="15" fill="rgb(254,61,31)" fg:x="39315" fg:w="22"/><text x="35.2539%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (39 samples, 0.03%)</title><rect x="34.9923%" y="533" width="0.0347%" height="15" fill="rgb(222,173,38)" fg:x="39302" fg:w="39"/><text x="35.2423%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (39 samples, 0.03%)</title><rect x="34.9923%" y="517" width="0.0347%" height="15" fill="rgb(218,50,12)" fg:x="39302" fg:w="39"/><text x="35.2423%" y="527.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (35 samples, 0.03%)</title><rect x="34.9959%" y="501" width="0.0312%" height="15" fill="rgb(223,88,40)" fg:x="39306" fg:w="35"/><text x="35.2459%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (54 samples, 0.05%)</title><rect x="34.9825%" y="597" width="0.0481%" height="15" fill="rgb(237,54,19)" fg:x="39291" fg:w="54"/><text x="35.2325%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (54 samples, 0.05%)</title><rect x="34.9825%" y="581" width="0.0481%" height="15" fill="rgb(251,129,25)" fg:x="39291" fg:w="54"/><text x="35.2325%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (54 samples, 0.05%)</title><rect x="34.9825%" y="565" width="0.0481%" height="15" fill="rgb(238,97,19)" fg:x="39291" fg:w="54"/><text x="35.2325%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (54 samples, 0.05%)</title><rect x="34.9825%" y="549" width="0.0481%" height="15" fill="rgb(240,169,18)" fg:x="39291" fg:w="54"/><text x="35.2325%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (69 samples, 0.06%)</title><rect x="34.9772%" y="613" width="0.0614%" height="15" fill="rgb(230,187,49)" fg:x="39285" fg:w="69"/><text x="35.2272%" y="623.50"></text></g><g><title>rust_dealloc (88 samples, 0.08%)</title><rect x="34.9683%" y="629" width="0.0784%" height="15" fill="rgb(209,44,26)" fg:x="39275" fg:w="88"/><text x="35.2183%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (148 samples, 0.13%)</title><rect x="34.9193%" y="677" width="0.1318%" height="15" fill="rgb(244,0,6)" fg:x="39220" fg:w="148"/><text x="35.1693%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (148 samples, 0.13%)</title><rect x="34.9193%" y="661" width="0.1318%" height="15" fill="rgb(248,18,21)" fg:x="39220" fg:w="148"/><text x="35.1693%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (148 samples, 0.13%)</title><rect x="34.9193%" y="645" width="0.1318%" height="15" fill="rgb(245,180,19)" fg:x="39220" fg:w="148"/><text x="35.1693%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (174 samples, 0.15%)</title><rect x="34.9024%" y="693" width="0.1549%" height="15" fill="rgb(252,118,36)" fg:x="39201" fg:w="174"/><text x="35.1524%" y="703.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="35.0707%" y="661" width="0.0107%" height="15" fill="rgb(210,224,19)" fg:x="39390" fg:w="12"/><text x="35.3207%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (26 samples, 0.02%)</title><rect x="35.1125%" y="549" width="0.0231%" height="15" fill="rgb(218,30,24)" fg:x="39437" fg:w="26"/><text x="35.3625%" y="559.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (23 samples, 0.02%)</title><rect x="35.1152%" y="533" width="0.0205%" height="15" fill="rgb(219,75,50)" fg:x="39440" fg:w="23"/><text x="35.3652%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (94 samples, 0.08%)</title><rect x="35.0645%" y="677" width="0.0837%" height="15" fill="rgb(234,72,50)" fg:x="39383" fg:w="94"/><text x="35.3145%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (75 samples, 0.07%)</title><rect x="35.0814%" y="661" width="0.0668%" height="15" fill="rgb(219,100,48)" fg:x="39402" fg:w="75"/><text x="35.3314%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (75 samples, 0.07%)</title><rect x="35.0814%" y="645" width="0.0668%" height="15" fill="rgb(253,5,41)" fg:x="39402" fg:w="75"/><text x="35.3314%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (75 samples, 0.07%)</title><rect x="35.0814%" y="629" width="0.0668%" height="15" fill="rgb(247,181,11)" fg:x="39402" fg:w="75"/><text x="35.3314%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (75 samples, 0.07%)</title><rect x="35.0814%" y="613" width="0.0668%" height="15" fill="rgb(222,223,25)" fg:x="39402" fg:w="75"/><text x="35.3314%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (63 samples, 0.06%)</title><rect x="35.0921%" y="597" width="0.0561%" height="15" fill="rgb(214,198,28)" fg:x="39414" fg:w="63"/><text x="35.3421%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (63 samples, 0.06%)</title><rect x="35.0921%" y="581" width="0.0561%" height="15" fill="rgb(230,46,43)" fg:x="39414" fg:w="63"/><text x="35.3421%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (62 samples, 0.06%)</title><rect x="35.0930%" y="565" width="0.0552%" height="15" fill="rgb(233,65,53)" fg:x="39415" fg:w="62"/><text x="35.3430%" y="575.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="35.1357%" y="549" width="0.0125%" height="15" fill="rgb(221,121,27)" fg:x="39463" fg:w="14"/><text x="35.3857%" y="559.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="35.1357%" y="533" width="0.0125%" height="15" fill="rgb(247,70,47)" fg:x="39463" fg:w="14"/><text x="35.3857%" y="543.50"></text></g><g><title>rust_dealloc (103 samples, 0.09%)</title><rect x="35.0573%" y="693" width="0.0917%" height="15" fill="rgb(228,85,35)" fg:x="39375" fg:w="103"/><text x="35.3073%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (315 samples, 0.28%)</title><rect x="34.8721%" y="741" width="0.2805%" height="15" fill="rgb(209,50,18)" fg:x="39167" fg:w="315"/><text x="35.1221%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (303 samples, 0.27%)</title><rect x="34.8828%" y="725" width="0.2698%" height="15" fill="rgb(250,19,35)" fg:x="39179" fg:w="303"/><text x="35.1328%" y="735.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (303 samples, 0.27%)</title><rect x="34.8828%" y="709" width="0.2698%" height="15" fill="rgb(253,107,29)" fg:x="39179" fg:w="303"/><text x="35.1328%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (54 samples, 0.05%)</title><rect x="35.2096%" y="677" width="0.0481%" height="15" fill="rgb(252,179,29)" fg:x="39546" fg:w="54"/><text x="35.4596%" y="687.50"></text></g><g><title>core::cmp::PartialOrd::ge (54 samples, 0.05%)</title><rect x="35.2096%" y="661" width="0.0481%" height="15" fill="rgb(238,194,6)" fg:x="39546" fg:w="54"/><text x="35.4596%" y="671.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (54 samples, 0.05%)</title><rect x="35.2096%" y="645" width="0.0481%" height="15" fill="rgb(238,164,29)" fg:x="39546" fg:w="54"/><text x="35.4596%" y="655.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (54 samples, 0.05%)</title><rect x="35.2096%" y="629" width="0.0481%" height="15" fill="rgb(224,25,9)" fg:x="39546" fg:w="54"/><text x="35.4596%" y="639.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (54 samples, 0.05%)</title><rect x="35.2096%" y="613" width="0.0481%" height="15" fill="rgb(244,153,23)" fg:x="39546" fg:w="54"/><text x="35.4596%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (24 samples, 0.02%)</title><rect x="35.2363%" y="597" width="0.0214%" height="15" fill="rgb(212,203,14)" fg:x="39576" fg:w="24"/><text x="35.4863%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (115 samples, 0.10%)</title><rect x="35.1740%" y="709" width="0.1024%" height="15" fill="rgb(220,164,20)" fg:x="39506" fg:w="115"/><text x="35.4240%" y="719.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (115 samples, 0.10%)</title><rect x="35.1740%" y="693" width="0.1024%" height="15" fill="rgb(222,203,48)" fg:x="39506" fg:w="115"/><text x="35.4240%" y="703.50"></text></g><g><title>core::time::Duration::new (21 samples, 0.02%)</title><rect x="35.2577%" y="677" width="0.0187%" height="15" fill="rgb(215,159,22)" fg:x="39600" fg:w="21"/><text x="35.5077%" y="687.50"></text></g><g><title>std::time::SystemTime::duration_since (121 samples, 0.11%)</title><rect x="35.1740%" y="725" width="0.1077%" height="15" fill="rgb(216,183,47)" fg:x="39506" fg:w="121"/><text x="35.4240%" y="735.50"></text></g><g><title>tremor_common::time::nanotime (745 samples, 0.66%)</title><rect x="35.1526%" y="741" width="0.6633%" height="15" fill="rgb(229,195,25)" fg:x="39482" fg:w="745"/><text x="35.4026%" y="751.50"></text></g><g><title>std::time::SystemTime::now (600 samples, 0.53%)</title><rect x="35.2817%" y="725" width="0.5342%" height="15" fill="rgb(224,132,51)" fg:x="39627" fg:w="600"/><text x="35.5317%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (600 samples, 0.53%)</title><rect x="35.2817%" y="709" width="0.5342%" height="15" fill="rgb(240,63,7)" fg:x="39627" fg:w="600"/><text x="35.5317%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::now (600 samples, 0.53%)</title><rect x="35.2817%" y="693" width="0.5342%" height="15" fill="rgb(249,182,41)" fg:x="39627" fg:w="600"/><text x="35.5317%" y="703.50"></text></g><g><title>__clock_gettime_2 (485 samples, 0.43%)</title><rect x="35.3841%" y="677" width="0.4318%" height="15" fill="rgb(243,47,26)" fg:x="39742" fg:w="485"/><text x="35.6341%" y="687.50"></text></g><g><title>__vdso_clock_gettime (437 samples, 0.39%)</title><rect x="35.4268%" y="661" width="0.3891%" height="15" fill="rgb(233,48,2)" fg:x="39790" fg:w="437"/><text x="35.6768%" y="671.50"></text></g><g><title>[[vdso]] (285 samples, 0.25%)</title><rect x="35.5622%" y="645" width="0.2537%" height="15" fill="rgb(244,165,34)" fg:x="39942" fg:w="285"/><text x="35.8122%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (20 samples, 0.02%)</title><rect x="35.8640%" y="661" width="0.0178%" height="15" fill="rgb(207,89,7)" fg:x="40281" fg:w="20"/><text x="36.1140%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (78 samples, 0.07%)</title><rect x="35.8328%" y="725" width="0.0694%" height="15" fill="rgb(244,117,36)" fg:x="40246" fg:w="78"/><text x="36.0828%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (67 samples, 0.06%)</title><rect x="35.8426%" y="709" width="0.0597%" height="15" fill="rgb(226,144,34)" fg:x="40257" fg:w="67"/><text x="36.0926%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (67 samples, 0.06%)</title><rect x="35.8426%" y="693" width="0.0597%" height="15" fill="rgb(213,23,19)" fg:x="40257" fg:w="67"/><text x="36.0926%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (67 samples, 0.06%)</title><rect x="35.8426%" y="677" width="0.0597%" height="15" fill="rgb(217,75,12)" fg:x="40257" fg:w="67"/><text x="36.0926%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (23 samples, 0.02%)</title><rect x="35.8818%" y="661" width="0.0205%" height="15" fill="rgb(224,159,17)" fg:x="40301" fg:w="23"/><text x="36.1318%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,703 samples, 6.86%)</title><rect x="29.0448%" y="773" width="6.8583%" height="15" fill="rgb(217,118,1)" fg:x="32622" fg:w="7703"/><text x="29.2948%" y="783.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (4,073 samples, 3.63%)</title><rect x="32.2768%" y="757" width="3.6264%" height="15" fill="rgb(232,180,48)" fg:x="36252" fg:w="4073"/><text x="32.5268%" y="767.50">trem..</text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (98 samples, 0.09%)</title><rect x="35.8159%" y="741" width="0.0873%" height="15" fill="rgb(230,27,33)" fg:x="40227" fg:w="98"/><text x="36.0659%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (43 samples, 0.04%)</title><rect x="35.9130%" y="757" width="0.0383%" height="15" fill="rgb(205,31,21)" fg:x="40336" fg:w="43"/><text x="36.1630%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (55 samples, 0.05%)</title><rect x="35.9130%" y="773" width="0.0490%" height="15" fill="rgb(253,59,4)" fg:x="40336" fg:w="55"/><text x="36.1630%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt; (12 samples, 0.01%)</title><rect x="35.9512%" y="757" width="0.0107%" height="15" fill="rgb(224,201,9)" fg:x="40379" fg:w="12"/><text x="36.2012%" y="767.50"></text></g><g><title>&lt;tremor_runtime::connectors::Connectivity as core::cmp::PartialEq&gt;::eq (12 samples, 0.01%)</title><rect x="35.9993%" y="757" width="0.0107%" height="15" fill="rgb(229,206,30)" fg:x="40433" fg:w="12"/><text x="36.2493%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (9,001 samples, 8.01%)</title><rect x="27.9987%" y="789" width="8.0140%" height="15" fill="rgb(212,67,47)" fg:x="31447" fg:w="9001"/><text x="28.2487%" y="799.50">tremor_runt..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::should_pull_data (57 samples, 0.05%)</title><rect x="35.9619%" y="773" width="0.0507%" height="15" fill="rgb(211,96,50)" fg:x="40391" fg:w="57"/><text x="36.2119%" y="783.50"></text></g><g><title>rust_dealloc (16 samples, 0.01%)</title><rect x="36.1560%" y="677" width="0.0142%" height="15" fill="rgb(252,114,18)" fg:x="40609" fg:w="16"/><text x="36.4060%" y="687.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (15 samples, 0.01%)</title><rect x="36.2353%" y="645" width="0.0134%" height="15" fill="rgb(223,58,37)" fg:x="40698" fg:w="15"/><text x="36.4853%" y="655.50"></text></g><g><title> (15 samples, 0.01%)</title><rect x="36.2353%" y="629" width="0.0134%" height="15" fill="rgb(237,70,4)" fg:x="40698" fg:w="15"/><text x="36.4853%" y="639.50"></text></g><g><title>snmalloc::Remote::set_info (18 samples, 0.02%)</title><rect x="36.2486%" y="645" width="0.0160%" height="15" fill="rgb(244,85,46)" fg:x="40713" fg:w="18"/><text x="36.4986%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (98 samples, 0.09%)</title><rect x="36.1801%" y="677" width="0.0873%" height="15" fill="rgb(223,39,52)" fg:x="40636" fg:w="98"/><text x="36.4301%" y="687.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (86 samples, 0.08%)</title><rect x="36.1907%" y="661" width="0.0766%" height="15" fill="rgb(218,200,14)" fg:x="40648" fg:w="86"/><text x="36.4407%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (167 samples, 0.15%)</title><rect x="36.1560%" y="741" width="0.1487%" height="15" fill="rgb(208,171,16)" fg:x="40609" fg:w="167"/><text x="36.4060%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (167 samples, 0.15%)</title><rect x="36.1560%" y="725" width="0.1487%" height="15" fill="rgb(234,200,18)" fg:x="40609" fg:w="167"/><text x="36.4060%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (167 samples, 0.15%)</title><rect x="36.1560%" y="709" width="0.1487%" height="15" fill="rgb(228,45,11)" fg:x="40609" fg:w="167"/><text x="36.4060%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (167 samples, 0.15%)</title><rect x="36.1560%" y="693" width="0.1487%" height="15" fill="rgb(237,182,11)" fg:x="40609" fg:w="167"/><text x="36.4060%" y="703.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (41 samples, 0.04%)</title><rect x="36.2682%" y="677" width="0.0365%" height="15" fill="rgb(241,175,49)" fg:x="40735" fg:w="41"/><text x="36.5182%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (198 samples, 0.18%)</title><rect x="36.1373%" y="757" width="0.1763%" height="15" fill="rgb(247,38,35)" fg:x="40588" fg:w="198"/><text x="36.3873%" y="767.50"></text></g><g><title>rust_dealloc (236 samples, 0.21%)</title><rect x="36.1275%" y="773" width="0.2101%" height="15" fill="rgb(228,39,49)" fg:x="40577" fg:w="236"/><text x="36.3775%" y="783.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (27 samples, 0.02%)</title><rect x="36.3136%" y="757" width="0.0240%" height="15" fill="rgb(226,101,26)" fg:x="40786" fg:w="27"/><text x="36.5636%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (67 samples, 0.06%)</title><rect x="36.3377%" y="757" width="0.0597%" height="15" fill="rgb(206,141,19)" fg:x="40813" fg:w="67"/><text x="36.5877%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (67 samples, 0.06%)</title><rect x="36.3377%" y="741" width="0.0597%" height="15" fill="rgb(211,200,13)" fg:x="40813" fg:w="67"/><text x="36.5877%" y="751.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (58 samples, 0.05%)</title><rect x="36.3457%" y="725" width="0.0516%" height="15" fill="rgb(241,121,6)" fg:x="40822" fg:w="58"/><text x="36.5957%" y="735.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (48 samples, 0.04%)</title><rect x="36.3546%" y="709" width="0.0427%" height="15" fill="rgb(234,221,29)" fg:x="40832" fg:w="48"/><text x="36.6046%" y="719.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (48 samples, 0.04%)</title><rect x="36.3546%" y="693" width="0.0427%" height="15" fill="rgb(229,136,5)" fg:x="40832" fg:w="48"/><text x="36.6046%" y="703.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (48 samples, 0.04%)</title><rect x="36.3546%" y="677" width="0.0427%" height="15" fill="rgb(238,36,11)" fg:x="40832" fg:w="48"/><text x="36.6046%" y="687.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (440 samples, 0.39%)</title><rect x="36.0127%" y="789" width="0.3918%" height="15" fill="rgb(251,55,41)" fg:x="40448" fg:w="440"/><text x="36.2627%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (75 samples, 0.07%)</title><rect x="36.3377%" y="773" width="0.0668%" height="15" fill="rgb(242,34,40)" fg:x="40813" fg:w="75"/><text x="36.5877%" y="783.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (30 samples, 0.03%)</title><rect x="37.5067%" y="773" width="0.0267%" height="15" fill="rgb(215,42,17)" fg:x="42126" fg:w="30"/><text x="37.7567%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.02%)</title><rect x="37.5334%" y="773" width="0.0223%" height="15" fill="rgb(207,44,46)" fg:x="42156" fg:w="25"/><text x="37.7834%" y="783.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.01%)</title><rect x="37.5450%" y="757" width="0.0107%" height="15" fill="rgb(211,206,28)" fg:x="42169" fg:w="12"/><text x="37.7950%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="37.5556%" y="773" width="0.0116%" height="15" fill="rgb(237,167,16)" fg:x="42181" fg:w="13"/><text x="37.8056%" y="783.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (13 samples, 0.01%)</title><rect x="37.5556%" y="757" width="0.0116%" height="15" fill="rgb(233,66,6)" fg:x="42181" fg:w="13"/><text x="37.8056%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (447 samples, 0.40%)</title><rect x="37.9394%" y="741" width="0.3980%" height="15" fill="rgb(246,123,29)" fg:x="42612" fg:w="447"/><text x="38.1894%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (439 samples, 0.39%)</title><rect x="38.3374%" y="741" width="0.3909%" height="15" fill="rgb(209,62,40)" fg:x="43059" fg:w="439"/><text x="38.5874%" y="751.50"></text></g><g><title>core::ptr::write (418 samples, 0.37%)</title><rect x="38.3561%" y="725" width="0.3722%" height="15" fill="rgb(218,4,25)" fg:x="43080" fg:w="418"/><text x="38.6061%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (413 samples, 0.37%)</title><rect x="38.3605%" y="709" width="0.3677%" height="15" fill="rgb(253,91,49)" fg:x="43085" fg:w="413"/><text x="38.6105%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (27 samples, 0.02%)</title><rect x="38.7282%" y="741" width="0.0240%" height="15" fill="rgb(228,155,29)" fg:x="43498" fg:w="27"/><text x="38.9782%" y="751.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (28 samples, 0.02%)</title><rect x="38.7647%" y="709" width="0.0249%" height="15" fill="rgb(243,57,37)" fg:x="43539" fg:w="28"/><text x="39.0147%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (28 samples, 0.02%)</title><rect x="38.7647%" y="693" width="0.0249%" height="15" fill="rgb(244,167,17)" fg:x="43539" fg:w="28"/><text x="39.0147%" y="703.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (23 samples, 0.02%)</title><rect x="38.7897%" y="709" width="0.0205%" height="15" fill="rgb(207,181,38)" fg:x="43567" fg:w="23"/><text x="39.0397%" y="719.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (23 samples, 0.02%)</title><rect x="38.7897%" y="693" width="0.0205%" height="15" fill="rgb(211,8,23)" fg:x="43567" fg:w="23"/><text x="39.0397%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (869 samples, 0.77%)</title><rect x="38.8119%" y="645" width="0.7737%" height="15" fill="rgb(235,11,44)" fg:x="43592" fg:w="869"/><text x="39.0619%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (774 samples, 0.69%)</title><rect x="38.8965%" y="629" width="0.6891%" height="15" fill="rgb(248,18,52)" fg:x="43687" fg:w="774"/><text x="39.1465%" y="639.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (924 samples, 0.82%)</title><rect x="38.7647%" y="725" width="0.8227%" height="15" fill="rgb(208,4,7)" fg:x="43539" fg:w="924"/><text x="39.0147%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (871 samples, 0.78%)</title><rect x="38.8119%" y="709" width="0.7755%" height="15" fill="rgb(240,17,39)" fg:x="43592" fg:w="871"/><text x="39.0619%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (871 samples, 0.78%)</title><rect x="38.8119%" y="693" width="0.7755%" height="15" fill="rgb(207,170,3)" fg:x="43592" fg:w="871"/><text x="39.0619%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (871 samples, 0.78%)</title><rect x="38.8119%" y="677" width="0.7755%" height="15" fill="rgb(236,100,52)" fg:x="43592" fg:w="871"/><text x="39.0619%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (871 samples, 0.78%)</title><rect x="38.8119%" y="661" width="0.7755%" height="15" fill="rgb(246,78,51)" fg:x="43592" fg:w="871"/><text x="39.0619%" y="671.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (952 samples, 0.85%)</title><rect x="38.7523%" y="741" width="0.8476%" height="15" fill="rgb(211,17,15)" fg:x="43525" fg:w="952"/><text x="39.0023%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (14 samples, 0.01%)</title><rect x="39.5874%" y="725" width="0.0125%" height="15" fill="rgb(209,59,46)" fg:x="44463" fg:w="14"/><text x="39.8374%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (14 samples, 0.01%)</title><rect x="39.6123%" y="725" width="0.0125%" height="15" fill="rgb(210,92,25)" fg:x="44491" fg:w="14"/><text x="39.8623%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse::revswap (14 samples, 0.01%)</title><rect x="39.6123%" y="709" width="0.0125%" height="15" fill="rgb(238,174,52)" fg:x="44491" fg:w="14"/><text x="39.8623%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (14 samples, 0.01%)</title><rect x="39.6123%" y="693" width="0.0125%" height="15" fill="rgb(230,73,7)" fg:x="44491" fg:w="14"/><text x="39.8623%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (14 samples, 0.01%)</title><rect x="39.6123%" y="677" width="0.0125%" height="15" fill="rgb(243,124,40)" fg:x="44491" fg:w="14"/><text x="39.8623%" y="687.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="40.2561%" y="709" width="0.0258%" height="15" fill="rgb(244,170,11)" fg:x="45214" fg:w="29"/><text x="40.5061%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (15 samples, 0.01%)</title><rect x="40.2854%" y="709" width="0.0134%" height="15" fill="rgb(207,114,54)" fg:x="45247" fg:w="15"/><text x="40.5354%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (485 samples, 0.43%)</title><rect x="40.2988%" y="709" width="0.4318%" height="15" fill="rgb(205,42,20)" fg:x="45262" fg:w="485"/><text x="40.5488%" y="719.50"></text></g><g><title>core::ptr::write (483 samples, 0.43%)</title><rect x="40.3006%" y="693" width="0.4300%" height="15" fill="rgb(230,30,28)" fg:x="45264" fg:w="483"/><text x="40.5506%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (464 samples, 0.41%)</title><rect x="40.3175%" y="677" width="0.4131%" height="15" fill="rgb(205,73,54)" fg:x="45283" fg:w="464"/><text x="40.5675%" y="687.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,255 samples, 1.12%)</title><rect x="39.6248%" y="725" width="1.1174%" height="15" fill="rgb(254,227,23)" fg:x="44505" fg:w="1255"/><text x="39.8748%" y="735.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (13 samples, 0.01%)</title><rect x="40.7306%" y="709" width="0.0116%" height="15" fill="rgb(228,202,34)" fg:x="45747" fg:w="13"/><text x="40.9806%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,295 samples, 1.15%)</title><rect x="39.5999%" y="741" width="1.1530%" height="15" fill="rgb(222,225,37)" fg:x="44477" fg:w="1295"/><text x="39.8499%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (12 samples, 0.01%)</title><rect x="40.7422%" y="725" width="0.0107%" height="15" fill="rgb(221,14,54)" fg:x="45760" fg:w="12"/><text x="40.9922%" y="735.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,438 samples, 3.06%)</title><rect x="37.7052%" y="757" width="3.0610%" height="15" fill="rgb(254,102,2)" fg:x="42349" fg:w="3438"/><text x="37.9552%" y="767.50">tre..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (15 samples, 0.01%)</title><rect x="40.7529%" y="741" width="0.0134%" height="15" fill="rgb(232,104,17)" fg:x="45772" fg:w="15"/><text x="41.0029%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (24 samples, 0.02%)</title><rect x="40.7662%" y="757" width="0.0214%" height="15" fill="rgb(250,220,14)" fg:x="45787" fg:w="24"/><text x="41.0162%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,646 samples, 3.25%)</title><rect x="37.5672%" y="773" width="3.2462%" height="15" fill="rgb(241,158,9)" fg:x="42194" fg:w="3646"/><text x="37.8172%" y="783.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (29 samples, 0.03%)</title><rect x="40.7876%" y="757" width="0.0258%" height="15" fill="rgb(246,9,43)" fg:x="45811" fg:w="29"/><text x="41.0376%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,650 samples, 1.47%)</title><rect x="40.8134%" y="773" width="1.4691%" height="15" fill="rgb(206,73,33)" fg:x="45840" fg:w="1650"/><text x="41.0634%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="42.2834%" y="757" width="0.0231%" height="15" fill="rgb(222,79,8)" fg:x="47491" fg:w="26"/><text x="42.5334%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (27 samples, 0.02%)</title><rect x="42.2834%" y="773" width="0.0240%" height="15" fill="rgb(234,8,54)" fg:x="47491" fg:w="27"/><text x="42.5334%" y="783.50"></text></g><g><title>async_global_executor::reactor::block_on (32,622 samples, 29.04%)</title><rect x="13.2929%" y="1125" width="29.0448%" height="15" fill="rgb(209,134,38)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="1135.50">async_global_executor::reactor::block_on</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (32,622 samples, 29.04%)</title><rect x="13.2929%" y="1109" width="29.0448%" height="15" fill="rgb(230,127,29)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="1119.50">async_global_executor::reactor::block_on::{{clo..</text></g><g><title>async_io::driver::block_on (32,622 samples, 29.04%)</title><rect x="13.2929%" y="1093" width="29.0448%" height="15" fill="rgb(242,44,41)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="1103.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (32,622 samples, 29.04%)</title><rect x="13.2929%" y="1077" width="29.0448%" height="15" fill="rgb(222,56,43)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="1087.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,622 samples, 29.04%)</title><rect x="13.2929%" y="1061" width="29.0448%" height="15" fill="rgb(238,39,47)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="1071.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as ..</text></g><g><title>async_executor::Executor::run::{{closure}} (32,622 samples, 29.04%)</title><rect x="13.2929%" y="1045" width="29.0448%" height="15" fill="rgb(226,79,43)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="1055.50">async_executor::Executor::run::{{closure}}</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (32,622 samples, 29.04%)</title><rect x="13.2929%" y="1029" width="29.0448%" height="15" fill="rgb(242,105,53)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="1039.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,622 samples, 29.04%)</title><rect x="13.2929%" y="1013" width="29.0448%" height="15" fill="rgb(251,132,46)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="1023.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as ..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (32,622 samples, 29.04%)</title><rect x="13.2929%" y="997" width="29.0448%" height="15" fill="rgb(231,77,14)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="1007.50">async_executor::Executor::run::{{closure}}::{{c..</text></g><g><title>async_task::runnable::Runnable::run (32,622 samples, 29.04%)</title><rect x="13.2929%" y="981" width="29.0448%" height="15" fill="rgb(240,135,9)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="991.50">async_task::runnable::Runnable::run</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (32,622 samples, 29.04%)</title><rect x="13.2929%" y="965" width="29.0448%" height="15" fill="rgb(248,109,14)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="975.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (32,622 samples, 29.04%)</title><rect x="13.2929%" y="949" width="29.0448%" height="15" fill="rgb(227,146,52)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="959.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,622 samples, 29.04%)</title><rect x="13.2929%" y="933" width="29.0448%" height="15" fill="rgb(232,54,3)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="943.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as ..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (32,622 samples, 29.04%)</title><rect x="13.2929%" y="917" width="29.0448%" height="15" fill="rgb(229,201,43)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="927.50">async_executor::Executor::spawn::{{closure}}</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (32,622 samples, 29.04%)</title><rect x="13.2929%" y="901" width="29.0448%" height="15" fill="rgb(252,161,33)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="911.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (32,622 samples, 29.04%)</title><rect x="13.2929%" y="885" width="29.0448%" height="15" fill="rgb(226,146,40)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="895.50">async_std::task::task_locals_wrapper::TaskLocal..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32,622 samples, 29.04%)</title><rect x="13.2929%" y="869" width="29.0448%" height="15" fill="rgb(219,47,25)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="879.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (32,622 samples, 29.04%)</title><rect x="13.2929%" y="853" width="29.0448%" height="15" fill="rgb(250,135,13)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="863.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (32,622 samples, 29.04%)</title><rect x="13.2929%" y="837" width="29.0448%" height="15" fill="rgb(219,229,18)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="847.50">async_std::task::task_locals_wrapper::TaskLocal..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (32,622 samples, 29.04%)</title><rect x="13.2929%" y="821" width="29.0448%" height="15" fill="rgb(217,152,27)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="831.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32,622 samples, 29.04%)</title><rect x="13.2929%" y="805" width="29.0448%" height="15" fill="rgb(225,71,47)" fg:x="14930" fg:w="32622"/><text x="13.5429%" y="815.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as ..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,664 samples, 5.93%)</title><rect x="36.4044%" y="789" width="5.9333%" height="15" fill="rgb(220,139,14)" fg:x="40888" fg:w="6664"/><text x="36.6544%" y="799.50">tremor_r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (48 samples, 0.04%)</title><rect x="42.3786%" y="549" width="0.0427%" height="15" fill="rgb(247,54,32)" fg:x="47598" fg:w="48"/><text x="42.6286%" y="559.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.04%)</title><rect x="42.6849%" y="533" width="0.0418%" height="15" fill="rgb(252,131,39)" fg:x="47942" fg:w="47"/><text x="42.9349%" y="543.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (37 samples, 0.03%)</title><rect x="42.7268%" y="533" width="0.0329%" height="15" fill="rgb(210,108,39)" fg:x="47989" fg:w="37"/><text x="42.9768%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::deref::Deref for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::deref (23 samples, 0.02%)</title><rect x="42.7597%" y="533" width="0.0205%" height="15" fill="rgb(205,23,29)" fg:x="48026" fg:w="23"/><text x="43.0097%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (23 samples, 0.02%)</title><rect x="42.7597%" y="517" width="0.0205%" height="15" fill="rgb(246,139,46)" fg:x="48026" fg:w="23"/><text x="43.0097%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (13 samples, 0.01%)</title><rect x="42.7882%" y="533" width="0.0116%" height="15" fill="rgb(250,81,26)" fg:x="48058" fg:w="13"/><text x="43.0382%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (13 samples, 0.01%)</title><rect x="42.7882%" y="517" width="0.0116%" height="15" fill="rgb(214,104,7)" fg:x="48058" fg:w="13"/><text x="43.0382%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="42.7998%" y="469" width="0.0374%" height="15" fill="rgb(233,189,8)" fg:x="48071" fg:w="42"/><text x="43.0498%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (60 samples, 0.05%)</title><rect x="42.7998%" y="533" width="0.0534%" height="15" fill="rgb(228,141,17)" fg:x="48071" fg:w="60"/><text x="43.0498%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (60 samples, 0.05%)</title><rect x="42.7998%" y="517" width="0.0534%" height="15" fill="rgb(247,157,1)" fg:x="48071" fg:w="60"/><text x="43.0498%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (60 samples, 0.05%)</title><rect x="42.7998%" y="501" width="0.0534%" height="15" fill="rgb(249,225,5)" fg:x="48071" fg:w="60"/><text x="43.0498%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (60 samples, 0.05%)</title><rect x="42.7998%" y="485" width="0.0534%" height="15" fill="rgb(242,55,13)" fg:x="48071" fg:w="60"/><text x="43.0498%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (18 samples, 0.02%)</title><rect x="42.8372%" y="469" width="0.0160%" height="15" fill="rgb(230,49,50)" fg:x="48113" fg:w="18"/><text x="43.0872%" y="479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (18 samples, 0.02%)</title><rect x="42.8372%" y="453" width="0.0160%" height="15" fill="rgb(241,111,38)" fg:x="48113" fg:w="18"/><text x="43.0872%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (13 samples, 0.01%)</title><rect x="42.8942%" y="373" width="0.0116%" height="15" fill="rgb(252,155,4)" fg:x="48177" fg:w="13"/><text x="43.1442%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (13 samples, 0.01%)</title><rect x="42.8942%" y="357" width="0.0116%" height="15" fill="rgb(212,69,32)" fg:x="48177" fg:w="13"/><text x="43.1442%" y="367.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (41 samples, 0.04%)</title><rect x="42.9841%" y="229" width="0.0365%" height="15" fill="rgb(243,107,47)" fg:x="48278" fg:w="41"/><text x="43.2341%" y="239.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (40 samples, 0.04%)</title><rect x="42.9850%" y="213" width="0.0356%" height="15" fill="rgb(247,130,12)" fg:x="48279" fg:w="40"/><text x="43.2350%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (109 samples, 0.10%)</title><rect x="42.9316%" y="277" width="0.0970%" height="15" fill="rgb(233,74,16)" fg:x="48219" fg:w="109"/><text x="43.1816%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (109 samples, 0.10%)</title><rect x="42.9316%" y="261" width="0.0970%" height="15" fill="rgb(208,58,18)" fg:x="48219" fg:w="109"/><text x="43.1816%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (90 samples, 0.08%)</title><rect x="42.9485%" y="245" width="0.0801%" height="15" fill="rgb(242,225,1)" fg:x="48238" fg:w="90"/><text x="43.1985%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (159 samples, 0.14%)</title><rect x="42.9191%" y="309" width="0.1416%" height="15" fill="rgb(249,39,40)" fg:x="48205" fg:w="159"/><text x="43.1691%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (159 samples, 0.14%)</title><rect x="42.9191%" y="293" width="0.1416%" height="15" fill="rgb(207,72,44)" fg:x="48205" fg:w="159"/><text x="43.1691%" y="303.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (36 samples, 0.03%)</title><rect x="43.0286%" y="277" width="0.0321%" height="15" fill="rgb(215,193,12)" fg:x="48328" fg:w="36"/><text x="43.2786%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (167 samples, 0.15%)</title><rect x="42.9191%" y="341" width="0.1487%" height="15" fill="rgb(248,41,39)" fg:x="48205" fg:w="167"/><text x="43.1691%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (167 samples, 0.15%)</title><rect x="42.9191%" y="325" width="0.1487%" height="15" fill="rgb(253,85,4)" fg:x="48205" fg:w="167"/><text x="43.1691%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (178 samples, 0.16%)</title><rect x="42.9137%" y="357" width="0.1585%" height="15" fill="rgb(243,70,31)" fg:x="48199" fg:w="178"/><text x="43.1637%" y="367.50"></text></g><g><title>rust_dealloc (190 samples, 0.17%)</title><rect x="42.9057%" y="373" width="0.1692%" height="15" fill="rgb(253,195,26)" fg:x="48190" fg:w="190"/><text x="43.1557%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (37 samples, 0.03%)</title><rect x="43.0802%" y="357" width="0.0329%" height="15" fill="rgb(243,42,11)" fg:x="48386" fg:w="37"/><text x="43.3302%" y="367.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (259 samples, 0.23%)</title><rect x="42.8870%" y="389" width="0.2306%" height="15" fill="rgb(239,66,17)" fg:x="48169" fg:w="259"/><text x="43.1370%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (48 samples, 0.04%)</title><rect x="43.0749%" y="373" width="0.0427%" height="15" fill="rgb(217,132,21)" fg:x="48380" fg:w="48"/><text x="43.3249%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (270 samples, 0.24%)</title><rect x="42.8781%" y="437" width="0.2404%" height="15" fill="rgb(252,202,21)" fg:x="48159" fg:w="270"/><text x="43.1281%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (270 samples, 0.24%)</title><rect x="42.8781%" y="421" width="0.2404%" height="15" fill="rgb(233,98,36)" fg:x="48159" fg:w="270"/><text x="43.1281%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (260 samples, 0.23%)</title><rect x="42.8870%" y="405" width="0.2315%" height="15" fill="rgb(216,153,54)" fg:x="48169" fg:w="260"/><text x="43.1370%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="43.1185%" y="405" width="0.0107%" height="15" fill="rgb(250,99,7)" fg:x="48429" fg:w="12"/><text x="43.3685%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="43.1185%" y="389" width="0.0107%" height="15" fill="rgb(207,56,50)" fg:x="48429" fg:w="12"/><text x="43.3685%" y="399.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="43.1185%" y="373" width="0.0107%" height="15" fill="rgb(244,61,34)" fg:x="48429" fg:w="12"/><text x="43.3685%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="43.1185%" y="357" width="0.0107%" height="15" fill="rgb(241,50,38)" fg:x="48429" fg:w="12"/><text x="43.3685%" y="367.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (298 samples, 0.27%)</title><rect x="42.8648%" y="501" width="0.2653%" height="15" fill="rgb(212,166,30)" fg:x="48144" fg:w="298"/><text x="43.1148%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (289 samples, 0.26%)</title><rect x="42.8728%" y="485" width="0.2573%" height="15" fill="rgb(249,127,32)" fg:x="48153" fg:w="289"/><text x="43.1228%" y="495.50"></text></g><g><title>core::mem::drop (283 samples, 0.25%)</title><rect x="42.8781%" y="469" width="0.2520%" height="15" fill="rgb(209,103,0)" fg:x="48159" fg:w="283"/><text x="43.1281%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (283 samples, 0.25%)</title><rect x="42.8781%" y="453" width="0.2520%" height="15" fill="rgb(238,209,51)" fg:x="48159" fg:w="283"/><text x="43.1281%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="43.1185%" y="437" width="0.0116%" height="15" fill="rgb(237,56,23)" fg:x="48429" fg:w="13"/><text x="43.3685%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="43.1185%" y="421" width="0.0116%" height="15" fill="rgb(215,153,46)" fg:x="48429" fg:w="13"/><text x="43.3685%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="43.1577%" y="405" width="0.0276%" height="15" fill="rgb(224,49,31)" fg:x="48473" fg:w="31"/><text x="43.4077%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="43.1577%" y="389" width="0.0276%" height="15" fill="rgb(250,18,42)" fg:x="48473" fg:w="31"/><text x="43.4077%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (31 samples, 0.03%)</title><rect x="43.1577%" y="373" width="0.0276%" height="15" fill="rgb(215,176,39)" fg:x="48473" fg:w="31"/><text x="43.4077%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (57 samples, 0.05%)</title><rect x="43.1426%" y="437" width="0.0507%" height="15" fill="rgb(223,77,29)" fg:x="48456" fg:w="57"/><text x="43.3926%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (57 samples, 0.05%)</title><rect x="43.1426%" y="421" width="0.0507%" height="15" fill="rgb(234,94,52)" fg:x="48456" fg:w="57"/><text x="43.3926%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (66 samples, 0.06%)</title><rect x="43.1426%" y="469" width="0.0588%" height="15" fill="rgb(220,154,50)" fg:x="48456" fg:w="66"/><text x="43.3926%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (66 samples, 0.06%)</title><rect x="43.1426%" y="453" width="0.0588%" height="15" fill="rgb(212,11,10)" fg:x="48456" fg:w="66"/><text x="43.3926%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (74 samples, 0.07%)</title><rect x="43.1363%" y="485" width="0.0659%" height="15" fill="rgb(205,166,19)" fg:x="48449" fg:w="74"/><text x="43.3863%" y="495.50"></text></g><g><title>rust_dealloc (83 samples, 0.07%)</title><rect x="43.1301%" y="501" width="0.0739%" height="15" fill="rgb(244,198,16)" fg:x="48442" fg:w="83"/><text x="43.3801%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (395 samples, 0.35%)</title><rect x="42.8532%" y="533" width="0.3517%" height="15" fill="rgb(219,69,12)" fg:x="48131" fg:w="395"/><text x="43.1032%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (395 samples, 0.35%)</title><rect x="42.8532%" y="517" width="0.3517%" height="15" fill="rgb(245,30,7)" fg:x="48131" fg:w="395"/><text x="43.1032%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::private::RVec&lt;T&gt;::buffer_mut (12 samples, 0.01%)</title><rect x="43.2396%" y="405" width="0.0107%" height="15" fill="rgb(218,221,48)" fg:x="48565" fg:w="12"/><text x="43.4896%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (28 samples, 0.02%)</title><rect x="43.2325%" y="437" width="0.0249%" height="15" fill="rgb(216,66,15)" fg:x="48557" fg:w="28"/><text x="43.4825%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (28 samples, 0.02%)</title><rect x="43.2325%" y="421" width="0.0249%" height="15" fill="rgb(226,122,50)" fg:x="48557" fg:w="28"/><text x="43.4825%" y="431.50"></text></g><g><title>sizeclass_to_size (13 samples, 0.01%)</title><rect x="43.2984%" y="341" width="0.0116%" height="15" fill="rgb(239,156,16)" fg:x="48631" fg:w="13"/><text x="43.5484%" y="351.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (13 samples, 0.01%)</title><rect x="43.2984%" y="325" width="0.0116%" height="15" fill="rgb(224,27,38)" fg:x="48631" fg:w="13"/><text x="43.5484%" y="335.50"></text></g><g><title>snmalloc::Remote::set_info (27 samples, 0.02%)</title><rect x="43.3856%" y="309" width="0.0240%" height="15" fill="rgb(224,39,27)" fg:x="48729" fg:w="27"/><text x="43.6356%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (120 samples, 0.11%)</title><rect x="43.3162%" y="341" width="0.1068%" height="15" fill="rgb(215,92,29)" fg:x="48651" fg:w="120"/><text x="43.5662%" y="351.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (99 samples, 0.09%)</title><rect x="43.3349%" y="325" width="0.0881%" height="15" fill="rgb(207,159,16)" fg:x="48672" fg:w="99"/><text x="43.5849%" y="335.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (15 samples, 0.01%)</title><rect x="43.4097%" y="309" width="0.0134%" height="15" fill="rgb(238,163,47)" fg:x="48756" fg:w="15"/><text x="43.6597%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (152 samples, 0.14%)</title><rect x="43.2939%" y="373" width="0.1353%" height="15" fill="rgb(219,91,49)" fg:x="48626" fg:w="152"/><text x="43.5439%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (152 samples, 0.14%)</title><rect x="43.2939%" y="357" width="0.1353%" height="15" fill="rgb(227,167,31)" fg:x="48626" fg:w="152"/><text x="43.5439%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (169 samples, 0.15%)</title><rect x="43.2939%" y="405" width="0.1505%" height="15" fill="rgb(234,80,54)" fg:x="48626" fg:w="169"/><text x="43.5439%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (169 samples, 0.15%)</title><rect x="43.2939%" y="389" width="0.1505%" height="15" fill="rgb(212,114,2)" fg:x="48626" fg:w="169"/><text x="43.5439%" y="399.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="43.4293%" y="373" width="0.0151%" height="15" fill="rgb(234,50,24)" fg:x="48778" fg:w="17"/><text x="43.6793%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="43.4293%" y="357" width="0.0151%" height="15" fill="rgb(221,68,8)" fg:x="48778" fg:w="17"/><text x="43.6793%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (17 samples, 0.02%)</title><rect x="43.4293%" y="341" width="0.0151%" height="15" fill="rgb(254,180,31)" fg:x="48778" fg:w="17"/><text x="43.6793%" y="351.50"></text></g><g><title>snmalloc::bits::align_down (17 samples, 0.02%)</title><rect x="43.4293%" y="325" width="0.0151%" height="15" fill="rgb(247,130,50)" fg:x="48778" fg:w="17"/><text x="43.6793%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (207 samples, 0.18%)</title><rect x="43.2743%" y="421" width="0.1843%" height="15" fill="rgb(211,109,4)" fg:x="48604" fg:w="207"/><text x="43.5243%" y="431.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="43.4444%" y="405" width="0.0142%" height="15" fill="rgb(238,50,21)" fg:x="48795" fg:w="16"/><text x="43.6944%" y="415.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="43.4444%" y="389" width="0.0142%" height="15" fill="rgb(225,57,45)" fg:x="48795" fg:w="16"/><text x="43.6944%" y="399.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (16 samples, 0.01%)</title><rect x="43.4444%" y="373" width="0.0142%" height="15" fill="rgb(209,196,50)" fg:x="48795" fg:w="16"/><text x="43.6944%" y="383.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.01%)</title><rect x="43.4444%" y="357" width="0.0142%" height="15" fill="rgb(242,140,13)" fg:x="48795" fg:w="16"/><text x="43.6944%" y="367.50"></text></g><g><title>rust_dealloc (241 samples, 0.21%)</title><rect x="43.2574%" y="437" width="0.2146%" height="15" fill="rgb(217,111,7)" fg:x="48585" fg:w="241"/><text x="43.5074%" y="447.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="43.4586%" y="421" width="0.0134%" height="15" fill="rgb(253,193,51)" fg:x="48811" fg:w="15"/><text x="43.7086%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (281 samples, 0.25%)</title><rect x="43.2227%" y="485" width="0.2502%" height="15" fill="rgb(252,70,29)" fg:x="48546" fg:w="281"/><text x="43.4727%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (281 samples, 0.25%)</title><rect x="43.2227%" y="469" width="0.2502%" height="15" fill="rgb(232,127,12)" fg:x="48546" fg:w="281"/><text x="43.4727%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (281 samples, 0.25%)</title><rect x="43.2227%" y="453" width="0.2502%" height="15" fill="rgb(211,180,21)" fg:x="48546" fg:w="281"/><text x="43.4727%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (16 samples, 0.01%)</title><rect x="43.9501%" y="309" width="0.0142%" height="15" fill="rgb(229,72,13)" fg:x="49363" fg:w="16"/><text x="44.2001%" y="319.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (16 samples, 0.01%)</title><rect x="43.9501%" y="293" width="0.0142%" height="15" fill="rgb(240,211,49)" fg:x="49363" fg:w="16"/><text x="44.2001%" y="303.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="43.9528%" y="277" width="0.0116%" height="15" fill="rgb(219,149,40)" fg:x="49366" fg:w="13"/><text x="44.2028%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="43.9528%" y="261" width="0.0116%" height="15" fill="rgb(210,127,46)" fg:x="49366" fg:w="13"/><text x="44.2028%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="43.9528%" y="245" width="0.0116%" height="15" fill="rgb(220,106,7)" fg:x="49366" fg:w="13"/><text x="44.2028%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="43.9528%" y="229" width="0.0116%" height="15" fill="rgb(249,31,22)" fg:x="49366" fg:w="13"/><text x="44.2028%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="43.9528%" y="213" width="0.0116%" height="15" fill="rgb(253,1,49)" fg:x="49366" fg:w="13"/><text x="44.2028%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="43.9528%" y="197" width="0.0116%" height="15" fill="rgb(227,144,33)" fg:x="49366" fg:w="13"/><text x="44.2028%" y="207.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="43.9528%" y="181" width="0.0116%" height="15" fill="rgb(249,163,44)" fg:x="49366" fg:w="13"/><text x="44.2028%" y="191.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="43.9528%" y="165" width="0.0116%" height="15" fill="rgb(234,15,39)" fg:x="49366" fg:w="13"/><text x="44.2028%" y="175.50"></text></g><g><title>rust_dealloc (26 samples, 0.02%)</title><rect x="43.9893%" y="213" width="0.0231%" height="15" fill="rgb(207,66,16)" fg:x="49407" fg:w="26"/><text x="44.2393%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (27 samples, 0.02%)</title><rect x="44.0765%" y="181" width="0.0240%" height="15" fill="rgb(233,112,24)" fg:x="49505" fg:w="27"/><text x="44.3265%" y="191.50"></text></g><g><title> (27 samples, 0.02%)</title><rect x="44.0765%" y="165" width="0.0240%" height="15" fill="rgb(230,90,22)" fg:x="49505" fg:w="27"/><text x="44.3265%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (98 samples, 0.09%)</title><rect x="44.0204%" y="213" width="0.0873%" height="15" fill="rgb(229,61,13)" fg:x="49442" fg:w="98"/><text x="44.2704%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (92 samples, 0.08%)</title><rect x="44.0258%" y="197" width="0.0819%" height="15" fill="rgb(225,57,24)" fg:x="49448" fg:w="92"/><text x="44.2758%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (147 samples, 0.13%)</title><rect x="43.9893%" y="277" width="0.1309%" height="15" fill="rgb(208,169,48)" fg:x="49407" fg:w="147"/><text x="44.2393%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (147 samples, 0.13%)</title><rect x="43.9893%" y="261" width="0.1309%" height="15" fill="rgb(244,218,51)" fg:x="49407" fg:w="147"/><text x="44.2393%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (147 samples, 0.13%)</title><rect x="43.9893%" y="245" width="0.1309%" height="15" fill="rgb(214,148,10)" fg:x="49407" fg:w="147"/><text x="44.2393%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (147 samples, 0.13%)</title><rect x="43.9893%" y="229" width="0.1309%" height="15" fill="rgb(225,174,27)" fg:x="49407" fg:w="147"/><text x="44.2393%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="44.1077%" y="213" width="0.0125%" height="15" fill="rgb(230,96,26)" fg:x="49540" fg:w="14"/><text x="44.3577%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (175 samples, 0.16%)</title><rect x="43.9759%" y="293" width="0.1558%" height="15" fill="rgb(232,10,30)" fg:x="49392" fg:w="175"/><text x="44.2259%" y="303.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="44.1202%" y="277" width="0.0116%" height="15" fill="rgb(222,8,50)" fg:x="49554" fg:w="13"/><text x="44.3702%" y="287.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="44.1202%" y="261" width="0.0116%" height="15" fill="rgb(213,81,27)" fg:x="49554" fg:w="13"/><text x="44.3702%" y="271.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="44.1202%" y="245" width="0.0116%" height="15" fill="rgb(245,50,10)" fg:x="49554" fg:w="13"/><text x="44.3702%" y="255.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="44.1202%" y="229" width="0.0116%" height="15" fill="rgb(216,100,18)" fg:x="49554" fg:w="13"/><text x="44.3702%" y="239.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (718 samples, 0.64%)</title><rect x="43.5023%" y="325" width="0.6393%" height="15" fill="rgb(236,147,54)" fg:x="48860" fg:w="718"/><text x="43.7523%" y="335.50"></text></g><g><title>rust_dealloc (199 samples, 0.18%)</title><rect x="43.9644%" y="309" width="0.1772%" height="15" fill="rgb(205,143,26)" fg:x="49379" fg:w="199"/><text x="44.2144%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (737 samples, 0.66%)</title><rect x="43.4942%" y="389" width="0.6562%" height="15" fill="rgb(236,26,9)" fg:x="48851" fg:w="737"/><text x="43.7442%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (737 samples, 0.66%)</title><rect x="43.4942%" y="373" width="0.6562%" height="15" fill="rgb(221,165,53)" fg:x="48851" fg:w="737"/><text x="43.7442%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (728 samples, 0.65%)</title><rect x="43.5023%" y="357" width="0.6482%" height="15" fill="rgb(214,110,17)" fg:x="48860" fg:w="728"/><text x="43.7523%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (728 samples, 0.65%)</title><rect x="43.5023%" y="341" width="0.6482%" height="15" fill="rgb(237,197,12)" fg:x="48860" fg:w="728"/><text x="43.7523%" y="351.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (775 samples, 0.69%)</title><rect x="43.4756%" y="453" width="0.6900%" height="15" fill="rgb(205,84,17)" fg:x="48830" fg:w="775"/><text x="43.7256%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (774 samples, 0.69%)</title><rect x="43.4764%" y="437" width="0.6891%" height="15" fill="rgb(237,18,45)" fg:x="48831" fg:w="774"/><text x="43.7264%" y="447.50"></text></g><g><title>core::mem::drop (754 samples, 0.67%)</title><rect x="43.4942%" y="421" width="0.6713%" height="15" fill="rgb(221,87,14)" fg:x="48851" fg:w="754"/><text x="43.7442%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (754 samples, 0.67%)</title><rect x="43.4942%" y="405" width="0.6713%" height="15" fill="rgb(238,186,15)" fg:x="48851" fg:w="754"/><text x="43.7442%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (17 samples, 0.02%)</title><rect x="44.1504%" y="389" width="0.0151%" height="15" fill="rgb(208,115,11)" fg:x="49588" fg:w="17"/><text x="44.4004%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="44.1504%" y="373" width="0.0151%" height="15" fill="rgb(254,175,0)" fg:x="49588" fg:w="17"/><text x="44.4004%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="44.1504%" y="357" width="0.0151%" height="15" fill="rgb(227,24,42)" fg:x="49588" fg:w="17"/><text x="44.4004%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="44.1504%" y="341" width="0.0151%" height="15" fill="rgb(223,211,37)" fg:x="49588" fg:w="17"/><text x="44.4004%" y="351.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="44.1504%" y="325" width="0.0151%" height="15" fill="rgb(235,49,27)" fg:x="49588" fg:w="17"/><text x="44.4004%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="44.1504%" y="309" width="0.0151%" height="15" fill="rgb(254,97,51)" fg:x="49588" fg:w="17"/><text x="44.4004%" y="319.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="44.1665%" y="437" width="0.0125%" height="15" fill="rgb(249,51,40)" fg:x="49606" fg:w="14"/><text x="44.4165%" y="447.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (19 samples, 0.02%)</title><rect x="44.2279%" y="325" width="0.0169%" height="15" fill="rgb(210,128,45)" fg:x="49675" fg:w="19"/><text x="44.4779%" y="335.50"></text></g><g><title> (19 samples, 0.02%)</title><rect x="44.2279%" y="309" width="0.0169%" height="15" fill="rgb(224,137,50)" fg:x="49675" fg:w="19"/><text x="44.4779%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (55 samples, 0.05%)</title><rect x="44.2012%" y="357" width="0.0490%" height="15" fill="rgb(242,15,9)" fg:x="49645" fg:w="55"/><text x="44.4512%" y="367.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (42 samples, 0.04%)</title><rect x="44.2128%" y="341" width="0.0374%" height="15" fill="rgb(233,187,41)" fg:x="49658" fg:w="42"/><text x="44.4628%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (73 samples, 0.06%)</title><rect x="44.1932%" y="389" width="0.0650%" height="15" fill="rgb(227,2,29)" fg:x="49636" fg:w="73"/><text x="44.4432%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (73 samples, 0.06%)</title><rect x="44.1932%" y="373" width="0.0650%" height="15" fill="rgb(222,70,3)" fg:x="49636" fg:w="73"/><text x="44.4432%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (79 samples, 0.07%)</title><rect x="44.1932%" y="421" width="0.0703%" height="15" fill="rgb(213,11,42)" fg:x="49636" fg:w="79"/><text x="44.4432%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (79 samples, 0.07%)</title><rect x="44.1932%" y="405" width="0.0703%" height="15" fill="rgb(225,150,9)" fg:x="49636" fg:w="79"/><text x="44.4432%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,179 samples, 1.05%)</title><rect x="43.2147%" y="517" width="1.0497%" height="15" fill="rgb(230,162,45)" fg:x="48537" fg:w="1179"/><text x="43.4647%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,170 samples, 1.04%)</title><rect x="43.2227%" y="501" width="1.0417%" height="15" fill="rgb(222,14,52)" fg:x="48546" fg:w="1170"/><text x="43.4727%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (889 samples, 0.79%)</title><rect x="43.4729%" y="485" width="0.7915%" height="15" fill="rgb(254,198,14)" fg:x="48827" fg:w="889"/><text x="43.7229%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (889 samples, 0.79%)</title><rect x="43.4729%" y="469" width="0.7915%" height="15" fill="rgb(220,217,30)" fg:x="48827" fg:w="889"/><text x="43.7229%" y="479.50"></text></g><g><title>rust_dealloc (111 samples, 0.10%)</title><rect x="44.1656%" y="453" width="0.0988%" height="15" fill="rgb(215,146,41)" fg:x="49605" fg:w="111"/><text x="44.4156%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (96 samples, 0.09%)</title><rect x="44.1789%" y="437" width="0.0855%" height="15" fill="rgb(217,27,36)" fg:x="49620" fg:w="96"/><text x="44.4289%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (14 samples, 0.01%)</title><rect x="44.2644%" y="517" width="0.0125%" height="15" fill="rgb(219,218,39)" fg:x="49716" fg:w="14"/><text x="44.5144%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (14 samples, 0.01%)</title><rect x="44.2644%" y="501" width="0.0125%" height="15" fill="rgb(219,4,42)" fg:x="49716" fg:w="14"/><text x="44.5144%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (14 samples, 0.01%)</title><rect x="44.2644%" y="485" width="0.0125%" height="15" fill="rgb(249,119,36)" fg:x="49716" fg:w="14"/><text x="44.5144%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (14 samples, 0.01%)</title><rect x="44.2644%" y="469" width="0.0125%" height="15" fill="rgb(209,23,33)" fg:x="49716" fg:w="14"/><text x="44.5144%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (14 samples, 0.01%)</title><rect x="44.2644%" y="453" width="0.0125%" height="15" fill="rgb(211,10,0)" fg:x="49716" fg:w="14"/><text x="44.5144%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (15 samples, 0.01%)</title><rect x="44.2769%" y="517" width="0.0134%" height="15" fill="rgb(208,99,37)" fg:x="49730" fg:w="15"/><text x="44.5269%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (15 samples, 0.01%)</title><rect x="44.2769%" y="501" width="0.0134%" height="15" fill="rgb(213,132,31)" fg:x="49730" fg:w="15"/><text x="44.5269%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="44.2769%" y="485" width="0.0134%" height="15" fill="rgb(243,129,40)" fg:x="49730" fg:w="15"/><text x="44.5269%" y="495.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (15 samples, 0.01%)</title><rect x="44.2769%" y="469" width="0.0134%" height="15" fill="rgb(210,66,33)" fg:x="49730" fg:w="15"/><text x="44.5269%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (378 samples, 0.34%)</title><rect x="44.4416%" y="421" width="0.3366%" height="15" fill="rgb(209,189,4)" fg:x="49915" fg:w="378"/><text x="44.6916%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (378 samples, 0.34%)</title><rect x="44.4416%" y="405" width="0.3366%" height="15" fill="rgb(214,107,37)" fg:x="49915" fg:w="378"/><text x="44.6916%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (378 samples, 0.34%)</title><rect x="44.4416%" y="389" width="0.3366%" height="15" fill="rgb(245,88,54)" fg:x="49915" fg:w="378"/><text x="44.6916%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value)&gt;&gt; (378 samples, 0.34%)</title><rect x="44.4416%" y="373" width="0.3366%" height="15" fill="rgb(205,146,20)" fg:x="49915" fg:w="378"/><text x="44.6916%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (378 samples, 0.34%)</title><rect x="44.4416%" y="357" width="0.3366%" height="15" fill="rgb(220,161,25)" fg:x="49915" fg:w="378"/><text x="44.6916%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (366 samples, 0.33%)</title><rect x="44.4523%" y="341" width="0.3259%" height="15" fill="rgb(215,152,15)" fg:x="49927" fg:w="366"/><text x="44.7023%" y="351.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (406 samples, 0.36%)</title><rect x="44.4247%" y="437" width="0.3615%" height="15" fill="rgb(233,192,44)" fg:x="49896" fg:w="406"/><text x="44.6747%" y="447.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="44.8262%" y="309" width="0.0160%" height="15" fill="rgb(240,170,46)" fg:x="50347" fg:w="18"/><text x="45.0762%" y="319.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="44.8262%" y="293" width="0.0160%" height="15" fill="rgb(207,104,33)" fg:x="50347" fg:w="18"/><text x="45.0762%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (45 samples, 0.04%)</title><rect x="44.8128%" y="341" width="0.0401%" height="15" fill="rgb(219,21,39)" fg:x="50332" fg:w="45"/><text x="45.0628%" y="351.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (36 samples, 0.03%)</title><rect x="44.8209%" y="325" width="0.0321%" height="15" fill="rgb(214,133,29)" fg:x="50341" fg:w="36"/><text x="45.0709%" y="335.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="44.8422%" y="309" width="0.0107%" height="15" fill="rgb(226,93,6)" fg:x="50365" fg:w="12"/><text x="45.0922%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (58 samples, 0.05%)</title><rect x="44.8048%" y="373" width="0.0516%" height="15" fill="rgb(252,222,34)" fg:x="50323" fg:w="58"/><text x="45.0548%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (58 samples, 0.05%)</title><rect x="44.8048%" y="357" width="0.0516%" height="15" fill="rgb(252,92,48)" fg:x="50323" fg:w="58"/><text x="45.0548%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (67 samples, 0.06%)</title><rect x="44.8048%" y="405" width="0.0597%" height="15" fill="rgb(245,223,24)" fg:x="50323" fg:w="67"/><text x="45.0548%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (67 samples, 0.06%)</title><rect x="44.8048%" y="389" width="0.0597%" height="15" fill="rgb(205,176,3)" fg:x="50323" fg:w="67"/><text x="45.0548%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (79 samples, 0.07%)</title><rect x="44.7968%" y="421" width="0.0703%" height="15" fill="rgb(235,151,15)" fg:x="50314" fg:w="79"/><text x="45.0468%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (644 samples, 0.57%)</title><rect x="44.2973%" y="485" width="0.5734%" height="15" fill="rgb(237,209,11)" fg:x="49753" fg:w="644"/><text x="44.5473%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (644 samples, 0.57%)</title><rect x="44.2973%" y="469" width="0.5734%" height="15" fill="rgb(243,227,24)" fg:x="49753" fg:w="644"/><text x="44.5473%" y="479.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (644 samples, 0.57%)</title><rect x="44.2973%" y="453" width="0.5734%" height="15" fill="rgb(239,193,16)" fg:x="49753" fg:w="644"/><text x="44.5473%" y="463.50"></text></g><g><title>rust_dealloc (95 samples, 0.08%)</title><rect x="44.7861%" y="437" width="0.0846%" height="15" fill="rgb(231,27,9)" fg:x="50302" fg:w="95"/><text x="45.0361%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (662 samples, 0.59%)</title><rect x="44.2902%" y="501" width="0.5894%" height="15" fill="rgb(219,169,10)" fg:x="49745" fg:w="662"/><text x="44.5402%" y="511.50"></text></g><g><title>abi_stable::std_types::arc::private::RArc&lt;T&gt;::data (442 samples, 0.39%)</title><rect x="44.9482%" y="341" width="0.3935%" height="15" fill="rgb(244,229,43)" fg:x="50484" fg:w="442"/><text x="45.1982%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.02%)</title><rect x="45.3640%" y="213" width="0.0187%" height="15" fill="rgb(254,38,20)" fg:x="50951" fg:w="21"/><text x="45.6140%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.02%)</title><rect x="45.3640%" y="197" width="0.0187%" height="15" fill="rgb(250,47,30)" fg:x="50951" fg:w="21"/><text x="45.6140%" y="207.50"></text></g><g><title>__rg_dealloc (21 samples, 0.02%)</title><rect x="45.3640%" y="181" width="0.0187%" height="15" fill="rgb(224,124,36)" fg:x="50951" fg:w="21"/><text x="45.6140%" y="191.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (21 samples, 0.02%)</title><rect x="45.3640%" y="165" width="0.0187%" height="15" fill="rgb(246,68,51)" fg:x="50951" fg:w="21"/><text x="45.6140%" y="175.50"></text></g><g><title>core::mem::drop (593 samples, 0.53%)</title><rect x="45.3604%" y="261" width="0.5280%" height="15" fill="rgb(253,43,49)" fg:x="50947" fg:w="593"/><text x="45.6104%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (593 samples, 0.53%)</title><rect x="45.3604%" y="245" width="0.5280%" height="15" fill="rgb(219,54,36)" fg:x="50947" fg:w="593"/><text x="45.6104%" y="255.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (593 samples, 0.53%)</title><rect x="45.3604%" y="229" width="0.5280%" height="15" fill="rgb(227,133,34)" fg:x="50947" fg:w="593"/><text x="45.6104%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (568 samples, 0.51%)</title><rect x="45.3827%" y="213" width="0.5057%" height="15" fill="rgb(247,227,15)" fg:x="50972" fg:w="568"/><text x="45.6327%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_sub (568 samples, 0.51%)</title><rect x="45.3827%" y="197" width="0.5057%" height="15" fill="rgb(229,96,14)" fg:x="50972" fg:w="568"/><text x="45.6327%" y="207.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (21 samples, 0.02%)</title><rect x="45.9062%" y="213" width="0.0187%" height="15" fill="rgb(220,79,17)" fg:x="51560" fg:w="21"/><text x="46.1562%" y="223.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (21 samples, 0.02%)</title><rect x="45.9062%" y="197" width="0.0187%" height="15" fill="rgb(205,131,53)" fg:x="51560" fg:w="21"/><text x="46.1562%" y="207.50"></text></g><g><title>core::mem::drop (20 samples, 0.02%)</title><rect x="45.9071%" y="181" width="0.0178%" height="15" fill="rgb(209,50,29)" fg:x="51561" fg:w="20"/><text x="46.1571%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20 samples, 0.02%)</title><rect x="45.9071%" y="165" width="0.0178%" height="15" fill="rgb(245,86,46)" fg:x="51561" fg:w="20"/><text x="46.1571%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.02%)</title><rect x="45.9071%" y="149" width="0.0178%" height="15" fill="rgb(235,66,46)" fg:x="51561" fg:w="20"/><text x="46.1571%" y="159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="45.9071%" y="133" width="0.0178%" height="15" fill="rgb(232,148,31)" fg:x="51561" fg:w="20"/><text x="46.1571%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="45.9071%" y="117" width="0.0178%" height="15" fill="rgb(217,149,8)" fg:x="51561" fg:w="20"/><text x="46.1571%" y="127.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="45.9071%" y="101" width="0.0178%" height="15" fill="rgb(209,183,11)" fg:x="51561" fg:w="20"/><text x="46.1571%" y="111.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="45.9071%" y="85" width="0.0178%" height="15" fill="rgb(208,55,20)" fg:x="51561" fg:w="20"/><text x="46.1571%" y="95.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="45.9071%" y="69" width="0.0178%" height="15" fill="rgb(218,39,14)" fg:x="51561" fg:w="20"/><text x="46.1571%" y="79.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="45.9374%" y="117" width="0.0107%" height="15" fill="rgb(216,169,33)" fg:x="51595" fg:w="12"/><text x="46.1874%" y="127.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (32 samples, 0.03%)</title><rect x="45.9934%" y="85" width="0.0285%" height="15" fill="rgb(233,80,24)" fg:x="51658" fg:w="32"/><text x="46.2434%" y="95.50"></text></g><g><title> (32 samples, 0.03%)</title><rect x="45.9934%" y="69" width="0.0285%" height="15" fill="rgb(213,179,31)" fg:x="51658" fg:w="32"/><text x="46.2434%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (98 samples, 0.09%)</title><rect x="45.9489%" y="117" width="0.0873%" height="15" fill="rgb(209,19,5)" fg:x="51608" fg:w="98"/><text x="46.1989%" y="127.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (88 samples, 0.08%)</title><rect x="45.9578%" y="101" width="0.0784%" height="15" fill="rgb(219,18,35)" fg:x="51618" fg:w="88"/><text x="46.2078%" y="111.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="46.0255%" y="85" width="0.0107%" height="15" fill="rgb(209,169,16)" fg:x="51694" fg:w="12"/><text x="46.2755%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (133 samples, 0.12%)</title><rect x="45.9374%" y="149" width="0.1184%" height="15" fill="rgb(245,90,51)" fg:x="51595" fg:w="133"/><text x="46.1874%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (133 samples, 0.12%)</title><rect x="45.9374%" y="133" width="0.1184%" height="15" fill="rgb(220,99,45)" fg:x="51595" fg:w="133"/><text x="46.1874%" y="143.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (22 samples, 0.02%)</title><rect x="46.0362%" y="117" width="0.0196%" height="15" fill="rgb(249,89,25)" fg:x="51706" fg:w="22"/><text x="46.2862%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (143 samples, 0.13%)</title><rect x="45.9374%" y="181" width="0.1273%" height="15" fill="rgb(239,193,0)" fg:x="51595" fg:w="143"/><text x="46.1874%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (143 samples, 0.13%)</title><rect x="45.9374%" y="165" width="0.1273%" height="15" fill="rgb(231,126,1)" fg:x="51595" fg:w="143"/><text x="46.1874%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (163 samples, 0.15%)</title><rect x="45.9320%" y="197" width="0.1451%" height="15" fill="rgb(243,166,3)" fg:x="51589" fg:w="163"/><text x="46.1820%" y="207.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="46.0647%" y="181" width="0.0125%" height="15" fill="rgb(223,22,34)" fg:x="51738" fg:w="14"/><text x="46.3147%" y="191.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="46.0647%" y="165" width="0.0125%" height="15" fill="rgb(251,52,51)" fg:x="51738" fg:w="14"/><text x="46.3147%" y="175.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (14 samples, 0.01%)</title><rect x="46.0647%" y="149" width="0.0125%" height="15" fill="rgb(221,165,28)" fg:x="51738" fg:w="14"/><text x="46.3147%" y="159.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="46.0647%" y="133" width="0.0125%" height="15" fill="rgb(218,121,47)" fg:x="51738" fg:w="14"/><text x="46.3147%" y="143.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (826 samples, 0.74%)</title><rect x="45.3515%" y="277" width="0.7354%" height="15" fill="rgb(209,120,9)" fg:x="50937" fg:w="826"/><text x="45.6015%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (223 samples, 0.20%)</title><rect x="45.8884%" y="261" width="0.1985%" height="15" fill="rgb(236,68,12)" fg:x="51540" fg:w="223"/><text x="46.1384%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (223 samples, 0.20%)</title><rect x="45.8884%" y="245" width="0.1985%" height="15" fill="rgb(225,194,26)" fg:x="51540" fg:w="223"/><text x="46.1384%" y="255.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (223 samples, 0.20%)</title><rect x="45.8884%" y="229" width="0.1985%" height="15" fill="rgb(231,84,39)" fg:x="51540" fg:w="223"/><text x="46.1384%" y="239.50"></text></g><g><title>rust_dealloc (182 samples, 0.16%)</title><rect x="45.9249%" y="213" width="0.1620%" height="15" fill="rgb(210,11,45)" fg:x="51581" fg:w="182"/><text x="46.1749%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (914 samples, 0.81%)</title><rect x="46.0869%" y="277" width="0.8138%" height="15" fill="rgb(224,54,52)" fg:x="51763" fg:w="914"/><text x="46.3369%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_sub (914 samples, 0.81%)</title><rect x="46.0869%" y="261" width="0.8138%" height="15" fill="rgb(238,102,14)" fg:x="51763" fg:w="914"/><text x="46.3369%" y="271.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (15 samples, 0.01%)</title><rect x="46.9550%" y="149" width="0.0134%" height="15" fill="rgb(243,160,52)" fg:x="52738" fg:w="15"/><text x="47.2050%" y="159.50"></text></g><g><title> (15 samples, 0.01%)</title><rect x="46.9550%" y="133" width="0.0134%" height="15" fill="rgb(216,114,19)" fg:x="52738" fg:w="15"/><text x="47.2050%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (45 samples, 0.04%)</title><rect x="46.9408%" y="181" width="0.0401%" height="15" fill="rgb(244,166,37)" fg:x="52722" fg:w="45"/><text x="47.1908%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (34 samples, 0.03%)</title><rect x="46.9506%" y="165" width="0.0303%" height="15" fill="rgb(246,29,44)" fg:x="52733" fg:w="34"/><text x="47.2006%" y="175.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (14 samples, 0.01%)</title><rect x="46.9684%" y="149" width="0.0125%" height="15" fill="rgb(215,56,53)" fg:x="52753" fg:w="14"/><text x="47.2184%" y="159.50"></text></g><g><title>rust_dealloc (91 samples, 0.08%)</title><rect x="46.9007%" y="277" width="0.0810%" height="15" fill="rgb(217,60,2)" fg:x="52677" fg:w="91"/><text x="47.1507%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (84 samples, 0.07%)</title><rect x="46.9069%" y="261" width="0.0748%" height="15" fill="rgb(207,26,24)" fg:x="52684" fg:w="84"/><text x="47.1569%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (68 samples, 0.06%)</title><rect x="46.9212%" y="245" width="0.0605%" height="15" fill="rgb(252,210,15)" fg:x="52700" fg:w="68"/><text x="47.1712%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (68 samples, 0.06%)</title><rect x="46.9212%" y="229" width="0.0605%" height="15" fill="rgb(253,209,26)" fg:x="52700" fg:w="68"/><text x="47.1712%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (68 samples, 0.06%)</title><rect x="46.9212%" y="213" width="0.0605%" height="15" fill="rgb(238,170,14)" fg:x="52700" fg:w="68"/><text x="47.1712%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (68 samples, 0.06%)</title><rect x="46.9212%" y="197" width="0.0605%" height="15" fill="rgb(216,178,15)" fg:x="52700" fg:w="68"/><text x="47.1712%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,354 samples, 2.10%)</title><rect x="44.8974%" y="405" width="2.0959%" height="15" fill="rgb(250,197,2)" fg:x="50427" fg:w="2354"/><text x="45.1474%" y="415.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (2,348 samples, 2.09%)</title><rect x="44.9028%" y="389" width="2.0905%" height="15" fill="rgb(212,70,42)" fg:x="50433" fg:w="2348"/><text x="45.1528%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (2,323 samples, 2.07%)</title><rect x="44.9250%" y="373" width="2.0683%" height="15" fill="rgb(227,213,9)" fg:x="50458" fg:w="2323"/><text x="45.1750%" y="383.50">c..</text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (2,323 samples, 2.07%)</title><rect x="44.9250%" y="357" width="2.0683%" height="15" fill="rgb(245,99,25)" fg:x="50458" fg:w="2323"/><text x="45.1750%" y="367.50">a..</text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (1,855 samples, 1.65%)</title><rect x="45.3417%" y="341" width="1.6516%" height="15" fill="rgb(250,82,29)" fg:x="50926" fg:w="1855"/><text x="45.5917%" y="351.50"></text></g><g><title>core::mem::drop (1,846 samples, 1.64%)</title><rect x="45.3497%" y="325" width="1.6436%" height="15" fill="rgb(241,226,54)" fg:x="50935" fg:w="1846"/><text x="45.5997%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,846 samples, 1.64%)</title><rect x="45.3497%" y="309" width="1.6436%" height="15" fill="rgb(221,99,41)" fg:x="50935" fg:w="1846"/><text x="45.5997%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,846 samples, 1.64%)</title><rect x="45.3497%" y="293" width="1.6436%" height="15" fill="rgb(213,90,21)" fg:x="50935" fg:w="1846"/><text x="45.5997%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (13 samples, 0.01%)</title><rect x="46.9817%" y="277" width="0.0116%" height="15" fill="rgb(205,208,24)" fg:x="52768" fg:w="13"/><text x="47.2317%" y="287.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (2,385 samples, 2.12%)</title><rect x="44.8805%" y="469" width="2.1235%" height="15" fill="rgb(246,31,12)" fg:x="50408" fg:w="2385"/><text x="45.1305%" y="479.50">a..</text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (2,382 samples, 2.12%)</title><rect x="44.8832%" y="453" width="2.1208%" height="15" fill="rgb(213,154,6)" fg:x="50411" fg:w="2382"/><text x="45.1332%" y="463.50">a..</text></g><g><title>core::mem::drop (2,366 samples, 2.11%)</title><rect x="44.8974%" y="437" width="2.1066%" height="15" fill="rgb(222,163,29)" fg:x="50427" fg:w="2366"/><text x="45.1474%" y="447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,366 samples, 2.11%)</title><rect x="44.8974%" y="421" width="2.1066%" height="15" fill="rgb(227,201,8)" fg:x="50427" fg:w="2366"/><text x="45.1474%" y="431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="46.9933%" y="405" width="0.0107%" height="15" fill="rgb(233,9,32)" fg:x="52781" fg:w="12"/><text x="47.2433%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="46.9933%" y="389" width="0.0107%" height="15" fill="rgb(217,54,24)" fg:x="52781" fg:w="12"/><text x="47.2433%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="46.9933%" y="373" width="0.0107%" height="15" fill="rgb(235,192,0)" fg:x="52781" fg:w="12"/><text x="47.2433%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="46.9933%" y="357" width="0.0107%" height="15" fill="rgb(235,45,9)" fg:x="52781" fg:w="12"/><text x="47.2433%" y="367.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="46.9933%" y="341" width="0.0107%" height="15" fill="rgb(246,42,40)" fg:x="52781" fg:w="12"/><text x="47.2433%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="46.9933%" y="325" width="0.0107%" height="15" fill="rgb(248,111,24)" fg:x="52781" fg:w="12"/><text x="47.2433%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (39 samples, 0.03%)</title><rect x="47.0262%" y="373" width="0.0347%" height="15" fill="rgb(249,65,22)" fg:x="52818" fg:w="39"/><text x="47.2762%" y="383.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (38 samples, 0.03%)</title><rect x="47.0271%" y="357" width="0.0338%" height="15" fill="rgb(238,111,51)" fg:x="52819" fg:w="38"/><text x="47.2771%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (52 samples, 0.05%)</title><rect x="47.0165%" y="405" width="0.0463%" height="15" fill="rgb(250,118,22)" fg:x="52807" fg:w="52"/><text x="47.2665%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (52 samples, 0.05%)</title><rect x="47.0165%" y="389" width="0.0463%" height="15" fill="rgb(234,84,26)" fg:x="52807" fg:w="52"/><text x="47.2665%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (53 samples, 0.05%)</title><rect x="47.0165%" y="437" width="0.0472%" height="15" fill="rgb(243,172,12)" fg:x="52807" fg:w="53"/><text x="47.2665%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (53 samples, 0.05%)</title><rect x="47.0165%" y="421" width="0.0472%" height="15" fill="rgb(236,150,49)" fg:x="52807" fg:w="53"/><text x="47.2665%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (68 samples, 0.06%)</title><rect x="47.0093%" y="453" width="0.0605%" height="15" fill="rgb(225,197,26)" fg:x="52799" fg:w="68"/><text x="47.2593%" y="463.50"></text></g><g><title>rust_dealloc (83 samples, 0.07%)</title><rect x="47.0040%" y="469" width="0.0739%" height="15" fill="rgb(214,17,42)" fg:x="52793" fg:w="83"/><text x="47.2540%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,470 samples, 2.20%)</title><rect x="44.8796%" y="501" width="2.1992%" height="15" fill="rgb(224,165,40)" fg:x="50407" fg:w="2470"/><text x="45.1296%" y="511.50">c..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (2,470 samples, 2.20%)</title><rect x="44.8796%" y="485" width="2.1992%" height="15" fill="rgb(246,100,4)" fg:x="50407" fg:w="2470"/><text x="45.1296%" y="495.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (28 samples, 0.02%)</title><rect x="47.0788%" y="485" width="0.0249%" height="15" fill="rgb(222,103,0)" fg:x="52877" fg:w="28"/><text x="47.3288%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (30 samples, 0.03%)</title><rect x="47.1037%" y="469" width="0.0267%" height="15" fill="rgb(227,189,26)" fg:x="52905" fg:w="30"/><text x="47.3537%" y="479.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (30 samples, 0.03%)</title><rect x="47.1037%" y="453" width="0.0267%" height="15" fill="rgb(214,202,17)" fg:x="52905" fg:w="30"/><text x="47.3537%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (72 samples, 0.06%)</title><rect x="47.0788%" y="501" width="0.0641%" height="15" fill="rgb(229,111,3)" fg:x="52877" fg:w="72"/><text x="47.3288%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (44 samples, 0.04%)</title><rect x="47.1037%" y="485" width="0.0392%" height="15" fill="rgb(229,172,15)" fg:x="52905" fg:w="44"/><text x="47.3537%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::slices::private::RSlice&lt;u8&gt;,abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="47.1304%" y="469" width="0.0125%" height="15" fill="rgb(230,224,35)" fg:x="52935" fg:w="14"/><text x="47.3804%" y="479.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="47.1536%" y="469" width="0.0107%" height="15" fill="rgb(251,141,6)" fg:x="52961" fg:w="12"/><text x="47.4036%" y="479.50"></text></g><g><title>snmalloc::Remote::set_info (19 samples, 0.02%)</title><rect x="47.2008%" y="373" width="0.0169%" height="15" fill="rgb(225,208,6)" fg:x="53014" fg:w="19"/><text x="47.4508%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (61 samples, 0.05%)</title><rect x="47.1643%" y="469" width="0.0543%" height="15" fill="rgb(246,181,16)" fg:x="52973" fg:w="61"/><text x="47.4143%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (61 samples, 0.05%)</title><rect x="47.1643%" y="453" width="0.0543%" height="15" fill="rgb(227,129,36)" fg:x="52973" fg:w="61"/><text x="47.4143%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (61 samples, 0.05%)</title><rect x="47.1643%" y="437" width="0.0543%" height="15" fill="rgb(248,117,24)" fg:x="52973" fg:w="61"/><text x="47.4143%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (61 samples, 0.05%)</title><rect x="47.1643%" y="421" width="0.0543%" height="15" fill="rgb(214,185,35)" fg:x="52973" fg:w="61"/><text x="47.4143%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (49 samples, 0.04%)</title><rect x="47.1749%" y="405" width="0.0436%" height="15" fill="rgb(236,150,34)" fg:x="52985" fg:w="49"/><text x="47.4249%" y="415.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (42 samples, 0.04%)</title><rect x="47.1812%" y="389" width="0.0374%" height="15" fill="rgb(243,228,27)" fg:x="52992" fg:w="42"/><text x="47.4312%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (87 samples, 0.08%)</title><rect x="47.1527%" y="485" width="0.0775%" height="15" fill="rgb(245,77,44)" fg:x="52960" fg:w="87"/><text x="47.4027%" y="495.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="47.2186%" y="469" width="0.0116%" height="15" fill="rgb(235,214,42)" fg:x="53034" fg:w="13"/><text x="47.4686%" y="479.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="47.2186%" y="453" width="0.0116%" height="15" fill="rgb(221,74,3)" fg:x="53034" fg:w="13"/><text x="47.4686%" y="463.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="47.2186%" y="437" width="0.0116%" height="15" fill="rgb(206,121,29)" fg:x="53034" fg:w="13"/><text x="47.4686%" y="447.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="47.2186%" y="421" width="0.0116%" height="15" fill="rgb(249,131,53)" fg:x="53034" fg:w="13"/><text x="47.4686%" y="431.50"></text></g><g><title>rust_dealloc (110 samples, 0.10%)</title><rect x="47.1429%" y="501" width="0.0979%" height="15" fill="rgb(236,170,29)" fg:x="52949" fg:w="110"/><text x="47.3929%" y="511.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="47.2301%" y="485" width="0.0107%" height="15" fill="rgb(247,96,15)" fg:x="53047" fg:w="12"/><text x="47.4801%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (4,535 samples, 4.04%)</title><rect x="43.2049%" y="533" width="4.0377%" height="15" fill="rgb(211,210,7)" fg:x="48526" fg:w="4535"/><text x="43.4549%" y="543.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (3,316 samples, 2.95%)</title><rect x="44.2902%" y="517" width="2.9524%" height="15" fill="rgb(240,88,50)" fg:x="49745" fg:w="3316"/><text x="44.5402%" y="527.50">cor..</text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (56 samples, 0.05%)</title><rect x="47.3931%" y="469" width="0.0499%" height="15" fill="rgb(209,229,26)" fg:x="53230" fg:w="56"/><text x="47.6431%" y="479.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (60 samples, 0.05%)</title><rect x="47.3913%" y="485" width="0.0534%" height="15" fill="rgb(210,68,23)" fg:x="53228" fg:w="60"/><text x="47.6413%" y="495.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (217 samples, 0.19%)</title><rect x="47.2577%" y="533" width="0.1932%" height="15" fill="rgb(229,180,13)" fg:x="53078" fg:w="217"/><text x="47.5077%" y="543.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (212 samples, 0.19%)</title><rect x="47.2622%" y="517" width="0.1888%" height="15" fill="rgb(236,53,44)" fg:x="53083" fg:w="212"/><text x="47.5122%" y="527.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (212 samples, 0.19%)</title><rect x="47.2622%" y="501" width="0.1888%" height="15" fill="rgb(244,214,29)" fg:x="53083" fg:w="212"/><text x="47.5122%" y="511.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (19 samples, 0.02%)</title><rect x="47.5168%" y="405" width="0.0169%" height="15" fill="rgb(220,75,29)" fg:x="53369" fg:w="19"/><text x="47.7668%" y="415.50"></text></g><g><title> (19 samples, 0.02%)</title><rect x="47.5168%" y="389" width="0.0169%" height="15" fill="rgb(214,183,37)" fg:x="53369" fg:w="19"/><text x="47.7668%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (68 samples, 0.06%)</title><rect x="47.4821%" y="437" width="0.0605%" height="15" fill="rgb(239,117,29)" fg:x="53330" fg:w="68"/><text x="47.7321%" y="447.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (56 samples, 0.05%)</title><rect x="47.4928%" y="421" width="0.0499%" height="15" fill="rgb(237,171,35)" fg:x="53342" fg:w="56"/><text x="47.7428%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (100 samples, 0.09%)</title><rect x="47.4687%" y="469" width="0.0890%" height="15" fill="rgb(229,178,53)" fg:x="53315" fg:w="100"/><text x="47.7187%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (100 samples, 0.09%)</title><rect x="47.4687%" y="453" width="0.0890%" height="15" fill="rgb(210,102,19)" fg:x="53315" fg:w="100"/><text x="47.7187%" y="463.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (17 samples, 0.02%)</title><rect x="47.5426%" y="437" width="0.0151%" height="15" fill="rgb(235,127,22)" fg:x="53398" fg:w="17"/><text x="47.7926%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (114 samples, 0.10%)</title><rect x="47.4598%" y="517" width="0.1015%" height="15" fill="rgb(244,31,31)" fg:x="53305" fg:w="114"/><text x="47.7098%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (104 samples, 0.09%)</title><rect x="47.4687%" y="501" width="0.0926%" height="15" fill="rgb(231,43,21)" fg:x="53315" fg:w="104"/><text x="47.7187%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (104 samples, 0.09%)</title><rect x="47.4687%" y="485" width="0.0926%" height="15" fill="rgb(217,131,35)" fg:x="53315" fg:w="104"/><text x="47.7187%" y="495.50"></text></g><g><title>rust_dealloc (125 samples, 0.11%)</title><rect x="47.4509%" y="533" width="0.1113%" height="15" fill="rgb(221,149,4)" fg:x="53295" fg:w="125"/><text x="47.7009%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (66 samples, 0.06%)</title><rect x="47.6361%" y="469" width="0.0588%" height="15" fill="rgb(232,170,28)" fg:x="53503" fg:w="66"/><text x="47.8861%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::ge (66 samples, 0.06%)</title><rect x="47.6361%" y="453" width="0.0588%" height="15" fill="rgb(238,56,10)" fg:x="53503" fg:w="66"/><text x="47.8861%" y="463.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (63 samples, 0.06%)</title><rect x="47.6388%" y="437" width="0.0561%" height="15" fill="rgb(235,196,14)" fg:x="53506" fg:w="63"/><text x="47.8888%" y="447.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (63 samples, 0.06%)</title><rect x="47.6388%" y="421" width="0.0561%" height="15" fill="rgb(216,45,48)" fg:x="53506" fg:w="63"/><text x="47.8888%" y="431.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (63 samples, 0.06%)</title><rect x="47.6388%" y="405" width="0.0561%" height="15" fill="rgb(238,213,17)" fg:x="53506" fg:w="63"/><text x="47.8888%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (31 samples, 0.03%)</title><rect x="47.6673%" y="389" width="0.0276%" height="15" fill="rgb(212,13,2)" fg:x="53538" fg:w="31"/><text x="47.9173%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (143 samples, 0.13%)</title><rect x="47.5907%" y="501" width="0.1273%" height="15" fill="rgb(240,114,20)" fg:x="53452" fg:w="143"/><text x="47.8407%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (143 samples, 0.13%)</title><rect x="47.5907%" y="485" width="0.1273%" height="15" fill="rgb(228,41,40)" fg:x="53452" fg:w="143"/><text x="47.8407%" y="495.50"></text></g><g><title>core::time::Duration::new (26 samples, 0.02%)</title><rect x="47.6949%" y="469" width="0.0231%" height="15" fill="rgb(244,132,35)" fg:x="53569" fg:w="26"/><text x="47.9449%" y="479.50"></text></g><g><title>std::time::SystemTime::duration_since (154 samples, 0.14%)</title><rect x="47.5907%" y="517" width="0.1371%" height="15" fill="rgb(253,189,4)" fg:x="53452" fg:w="154"/><text x="47.8407%" y="527.50"></text></g><g><title>tremor_common::time::nanotime (839 samples, 0.75%)</title><rect x="47.5631%" y="533" width="0.7470%" height="15" fill="rgb(224,37,19)" fg:x="53421" fg:w="839"/><text x="47.8131%" y="543.50"></text></g><g><title>std::time::SystemTime::now (654 samples, 0.58%)</title><rect x="47.7278%" y="517" width="0.5823%" height="15" fill="rgb(235,223,18)" fg:x="53606" fg:w="654"/><text x="47.9778%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (654 samples, 0.58%)</title><rect x="47.7278%" y="501" width="0.5823%" height="15" fill="rgb(235,163,25)" fg:x="53606" fg:w="654"/><text x="47.9778%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::now (654 samples, 0.58%)</title><rect x="47.7278%" y="485" width="0.5823%" height="15" fill="rgb(217,145,28)" fg:x="53606" fg:w="654"/><text x="47.9778%" y="495.50"></text></g><g><title>__clock_gettime_2 (534 samples, 0.48%)</title><rect x="47.8347%" y="469" width="0.4754%" height="15" fill="rgb(223,223,32)" fg:x="53726" fg:w="534"/><text x="48.0847%" y="479.50"></text></g><g><title>__vdso_clock_gettime (517 samples, 0.46%)</title><rect x="47.8498%" y="453" width="0.4603%" height="15" fill="rgb(227,189,39)" fg:x="53743" fg:w="517"/><text x="48.0998%" y="463.50"></text></g><g><title>[[vdso]] (307 samples, 0.27%)</title><rect x="48.0368%" y="437" width="0.2733%" height="15" fill="rgb(248,10,22)" fg:x="53953" fg:w="307"/><text x="48.2868%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (181 samples, 0.16%)</title><rect x="48.3270%" y="517" width="0.1612%" height="15" fill="rgb(248,46,39)" fg:x="54279" fg:w="181"/><text x="48.5770%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (6,914 samples, 6.16%)</title><rect x="42.3599%" y="789" width="6.1558%" height="15" fill="rgb(248,113,48)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="799.50">tremor_r..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,914 samples, 6.16%)</title><rect x="42.3599%" y="773" width="6.1558%" height="15" fill="rgb(245,16,25)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="783.50">&lt;async_f..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,914 samples, 6.16%)</title><rect x="42.3599%" y="757" width="6.1558%" height="15" fill="rgb(249,152,16)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="767.50">&lt;async_f..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (6,914 samples, 6.16%)</title><rect x="42.3599%" y="741" width="6.1558%" height="15" fill="rgb(250,16,1)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="751.50">&lt;core::t..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,914 samples, 6.16%)</title><rect x="42.3599%" y="725" width="6.1558%" height="15" fill="rgb(249,138,3)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="735.50">&lt;async_f..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (6,914 samples, 6.16%)</title><rect x="42.3599%" y="709" width="6.1558%" height="15" fill="rgb(227,71,41)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="719.50">async_ff..</text></g><g><title>std::panic::catch_unwind (6,914 samples, 6.16%)</title><rect x="42.3599%" y="693" width="6.1558%" height="15" fill="rgb(209,184,23)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="703.50">std::pan..</text></g><g><title>std::panicking::try (6,914 samples, 6.16%)</title><rect x="42.3599%" y="677" width="6.1558%" height="15" fill="rgb(223,215,31)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="687.50">std::pan..</text></g><g><title>std::panicking::try::do_call (6,914 samples, 6.16%)</title><rect x="42.3599%" y="661" width="6.1558%" height="15" fill="rgb(210,146,28)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="671.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,914 samples, 6.16%)</title><rect x="42.3599%" y="645" width="6.1558%" height="15" fill="rgb(209,183,41)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="655.50">&lt;core::p..</text></g><g><title>core::ops::function::FnOnce::call_once (6,914 samples, 6.16%)</title><rect x="42.3599%" y="629" width="6.1558%" height="15" fill="rgb(209,224,45)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="639.50">core::op..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (6,914 samples, 6.16%)</title><rect x="42.3599%" y="613" width="6.1558%" height="15" fill="rgb(224,209,51)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="623.50">async_ff..</text></g><g><title>async_ffi::FfiContext::with_context (6,914 samples, 6.16%)</title><rect x="42.3599%" y="597" width="6.1558%" height="15" fill="rgb(223,17,39)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="607.50">async_ff..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (6,914 samples, 6.16%)</title><rect x="42.3599%" y="581" width="6.1558%" height="15" fill="rgb(234,204,37)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="591.50">async_ff..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,914 samples, 6.16%)</title><rect x="42.3599%" y="565" width="6.1558%" height="15" fill="rgb(236,120,5)" fg:x="47577" fg:w="6914"/><text x="42.6099%" y="575.50">&lt;core::f..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (6,845 samples, 6.09%)</title><rect x="42.4214%" y="549" width="6.0944%" height="15" fill="rgb(248,97,27)" fg:x="47646" fg:w="6845"/><text x="42.6714%" y="559.50">&lt;tremor_..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (231 samples, 0.21%)</title><rect x="48.3101%" y="533" width="0.2057%" height="15" fill="rgb(240,66,17)" fg:x="54260" fg:w="231"/><text x="48.5601%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::_::&lt;impl tremor_runtime::connectors::sink::EventSerializerOpaque_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::serialize (31 samples, 0.03%)</title><rect x="48.4882%" y="517" width="0.0276%" height="15" fill="rgb(210,79,3)" fg:x="54460" fg:w="31"/><text x="48.7382%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (33 samples, 0.03%)</title><rect x="48.7206%" y="757" width="0.0294%" height="15" fill="rgb(214,176,27)" fg:x="54721" fg:w="33"/><text x="48.9706%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (33 samples, 0.03%)</title><rect x="48.7206%" y="741" width="0.0294%" height="15" fill="rgb(235,185,3)" fg:x="54721" fg:w="33"/><text x="48.9706%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (33 samples, 0.03%)</title><rect x="48.7206%" y="725" width="0.0294%" height="15" fill="rgb(227,24,12)" fg:x="54721" fg:w="33"/><text x="48.9706%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (13 samples, 0.01%)</title><rect x="48.7384%" y="709" width="0.0116%" height="15" fill="rgb(252,169,48)" fg:x="54741" fg:w="13"/><text x="48.9884%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (13 samples, 0.01%)</title><rect x="48.7384%" y="693" width="0.0116%" height="15" fill="rgb(212,65,1)" fg:x="54741" fg:w="13"/><text x="48.9884%" y="703.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (33 samples, 0.03%)</title><rect x="48.7571%" y="693" width="0.0294%" height="15" fill="rgb(242,39,24)" fg:x="54762" fg:w="33"/><text x="49.0071%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="48.7758%" y="677" width="0.0107%" height="15" fill="rgb(249,32,23)" fg:x="54783" fg:w="12"/><text x="49.0258%" y="687.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="48.7758%" y="661" width="0.0107%" height="15" fill="rgb(251,195,23)" fg:x="54783" fg:w="12"/><text x="49.0258%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="48.7758%" y="645" width="0.0107%" height="15" fill="rgb(236,174,8)" fg:x="54783" fg:w="12"/><text x="49.0258%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="48.7758%" y="629" width="0.0107%" height="15" fill="rgb(220,197,8)" fg:x="54783" fg:w="12"/><text x="49.0258%" y="639.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="48.7758%" y="613" width="0.0107%" height="15" fill="rgb(240,108,37)" fg:x="54783" fg:w="12"/><text x="49.0258%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="48.7758%" y="597" width="0.0107%" height="15" fill="rgb(232,176,24)" fg:x="54783" fg:w="12"/><text x="49.0258%" y="607.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="48.7865%" y="677" width="0.0125%" height="15" fill="rgb(243,35,29)" fg:x="54795" fg:w="14"/><text x="49.0365%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (34 samples, 0.03%)</title><rect x="48.8310%" y="549" width="0.0303%" height="15" fill="rgb(210,37,18)" fg:x="54845" fg:w="34"/><text x="49.0810%" y="559.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (33 samples, 0.03%)</title><rect x="48.8319%" y="533" width="0.0294%" height="15" fill="rgb(224,184,40)" fg:x="54846" fg:w="33"/><text x="49.0819%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (64 samples, 0.06%)</title><rect x="48.8114%" y="597" width="0.0570%" height="15" fill="rgb(236,39,29)" fg:x="54823" fg:w="64"/><text x="49.0614%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (64 samples, 0.06%)</title><rect x="48.8114%" y="581" width="0.0570%" height="15" fill="rgb(232,48,39)" fg:x="54823" fg:w="64"/><text x="49.0614%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (64 samples, 0.06%)</title><rect x="48.8114%" y="565" width="0.0570%" height="15" fill="rgb(236,34,42)" fg:x="54823" fg:w="64"/><text x="49.0614%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (82 samples, 0.07%)</title><rect x="48.8078%" y="629" width="0.0730%" height="15" fill="rgb(243,106,37)" fg:x="54819" fg:w="82"/><text x="49.0578%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (82 samples, 0.07%)</title><rect x="48.8078%" y="613" width="0.0730%" height="15" fill="rgb(218,96,6)" fg:x="54819" fg:w="82"/><text x="49.0578%" y="623.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="48.8684%" y="597" width="0.0125%" height="15" fill="rgb(235,130,12)" fg:x="54887" fg:w="14"/><text x="49.1184%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (101 samples, 0.09%)</title><rect x="48.7989%" y="677" width="0.0899%" height="15" fill="rgb(231,95,0)" fg:x="54809" fg:w="101"/><text x="49.0489%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (91 samples, 0.08%)</title><rect x="48.8078%" y="661" width="0.0810%" height="15" fill="rgb(228,12,23)" fg:x="54819" fg:w="91"/><text x="49.0578%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (91 samples, 0.08%)</title><rect x="48.8078%" y="645" width="0.0810%" height="15" fill="rgb(216,12,1)" fg:x="54819" fg:w="91"/><text x="49.0578%" y="655.50"></text></g><g><title>rust_dealloc (116 samples, 0.10%)</title><rect x="48.7865%" y="693" width="0.1033%" height="15" fill="rgb(219,59,3)" fg:x="54795" fg:w="116"/><text x="49.0365%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (7,350 samples, 6.54%)</title><rect x="42.3466%" y="821" width="6.5440%" height="15" fill="rgb(215,208,46)" fg:x="47562" fg:w="7350"/><text x="42.5966%" y="831.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,350 samples, 6.54%)</title><rect x="42.3466%" y="805" width="6.5440%" height="15" fill="rgb(254,224,29)" fg:x="47562" fg:w="7350"/><text x="42.5966%" y="815.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (421 samples, 0.37%)</title><rect x="48.5158%" y="789" width="0.3748%" height="15" fill="rgb(232,14,29)" fg:x="54491" fg:w="421"/><text x="48.7658%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (191 samples, 0.17%)</title><rect x="48.7206%" y="773" width="0.1701%" height="15" fill="rgb(208,45,52)" fg:x="54721" fg:w="191"/><text x="48.9706%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (158 samples, 0.14%)</title><rect x="48.7500%" y="757" width="0.1407%" height="15" fill="rgb(234,191,28)" fg:x="54754" fg:w="158"/><text x="49.0000%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (158 samples, 0.14%)</title><rect x="48.7500%" y="741" width="0.1407%" height="15" fill="rgb(244,67,43)" fg:x="54754" fg:w="158"/><text x="49.0000%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (158 samples, 0.14%)</title><rect x="48.7500%" y="725" width="0.1407%" height="15" fill="rgb(236,189,24)" fg:x="54754" fg:w="158"/><text x="49.0000%" y="735.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (158 samples, 0.14%)</title><rect x="48.7500%" y="709" width="0.1407%" height="15" fill="rgb(239,214,33)" fg:x="54754" fg:w="158"/><text x="49.0000%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="50.4959%" y="213" width="0.0329%" height="15" fill="rgb(226,176,41)" fg:x="56715" fg:w="37"/><text x="50.7459%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (37 samples, 0.03%)</title><rect x="50.4959%" y="197" width="0.0329%" height="15" fill="rgb(248,47,8)" fg:x="56715" fg:w="37"/><text x="50.7459%" y="207.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (31 samples, 0.03%)</title><rect x="50.5013%" y="181" width="0.0276%" height="15" fill="rgb(218,81,44)" fg:x="56721" fg:w="31"/><text x="50.7513%" y="191.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (26 samples, 0.02%)</title><rect x="50.5057%" y="165" width="0.0231%" height="15" fill="rgb(213,98,6)" fg:x="56726" fg:w="26"/><text x="50.7557%" y="175.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="50.5057%" y="149" width="0.0231%" height="15" fill="rgb(222,85,22)" fg:x="56726" fg:w="26"/><text x="50.7557%" y="159.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="50.5057%" y="133" width="0.0231%" height="15" fill="rgb(239,46,39)" fg:x="56726" fg:w="26"/><text x="50.7557%" y="143.50"></text></g><g><title>snmalloc::FreeListIter::empty (60 samples, 0.05%)</title><rect x="50.5351%" y="213" width="0.0534%" height="15" fill="rgb(237,12,29)" fg:x="56759" fg:w="60"/><text x="50.7851%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (60 samples, 0.05%)</title><rect x="50.5351%" y="197" width="0.0534%" height="15" fill="rgb(214,77,8)" fg:x="56759" fg:w="60"/><text x="50.7851%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (719 samples, 0.64%)</title><rect x="50.4674%" y="261" width="0.6402%" height="15" fill="rgb(217,168,37)" fg:x="56683" fg:w="719"/><text x="50.7174%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (709 samples, 0.63%)</title><rect x="50.4763%" y="245" width="0.6313%" height="15" fill="rgb(221,217,23)" fg:x="56693" fg:w="709"/><text x="50.7263%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (699 samples, 0.62%)</title><rect x="50.4852%" y="229" width="0.6224%" height="15" fill="rgb(243,229,36)" fg:x="56703" fg:w="699"/><text x="50.7352%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::take (583 samples, 0.52%)</title><rect x="50.5885%" y="213" width="0.5191%" height="15" fill="rgb(251,163,40)" fg:x="56819" fg:w="583"/><text x="50.8385%" y="223.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (583 samples, 0.52%)</title><rect x="50.5885%" y="197" width="0.5191%" height="15" fill="rgb(237,222,12)" fg:x="56819" fg:w="583"/><text x="50.8385%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (753 samples, 0.67%)</title><rect x="50.4470%" y="405" width="0.6704%" height="15" fill="rgb(248,132,6)" fg:x="56660" fg:w="753"/><text x="50.6970%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (753 samples, 0.67%)</title><rect x="50.4470%" y="389" width="0.6704%" height="15" fill="rgb(227,167,50)" fg:x="56660" fg:w="753"/><text x="50.6970%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (750 samples, 0.67%)</title><rect x="50.4496%" y="373" width="0.6678%" height="15" fill="rgb(242,84,37)" fg:x="56663" fg:w="750"/><text x="50.6996%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (750 samples, 0.67%)</title><rect x="50.4496%" y="357" width="0.6678%" height="15" fill="rgb(212,4,50)" fg:x="56663" fg:w="750"/><text x="50.6996%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (750 samples, 0.67%)</title><rect x="50.4496%" y="341" width="0.6678%" height="15" fill="rgb(230,228,32)" fg:x="56663" fg:w="750"/><text x="50.6996%" y="351.50"></text></g><g><title>alloc::alloc::alloc (745 samples, 0.66%)</title><rect x="50.4541%" y="325" width="0.6633%" height="15" fill="rgb(248,217,23)" fg:x="56668" fg:w="745"/><text x="50.7041%" y="335.50"></text></g><g><title>__rg_alloc (745 samples, 0.66%)</title><rect x="50.4541%" y="309" width="0.6633%" height="15" fill="rgb(238,197,32)" fg:x="56668" fg:w="745"/><text x="50.7041%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (745 samples, 0.66%)</title><rect x="50.4541%" y="293" width="0.6633%" height="15" fill="rgb(236,106,1)" fg:x="56668" fg:w="745"/><text x="50.7041%" y="303.50"></text></g><g><title>rust_alloc (735 samples, 0.65%)</title><rect x="50.4630%" y="277" width="0.6544%" height="15" fill="rgb(219,228,13)" fg:x="56678" fg:w="735"/><text x="50.7130%" y="287.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (846 samples, 0.75%)</title><rect x="50.4131%" y="517" width="0.7532%" height="15" fill="rgb(238,30,35)" fg:x="56622" fg:w="846"/><text x="50.6631%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (833 samples, 0.74%)</title><rect x="50.4247%" y="501" width="0.7417%" height="15" fill="rgb(236,70,23)" fg:x="56635" fg:w="833"/><text x="50.6747%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (808 samples, 0.72%)</title><rect x="50.4470%" y="485" width="0.7194%" height="15" fill="rgb(249,104,48)" fg:x="56660" fg:w="808"/><text x="50.6970%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (808 samples, 0.72%)</title><rect x="50.4470%" y="469" width="0.7194%" height="15" fill="rgb(254,117,50)" fg:x="56660" fg:w="808"/><text x="50.6970%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (808 samples, 0.72%)</title><rect x="50.4470%" y="453" width="0.7194%" height="15" fill="rgb(223,152,4)" fg:x="56660" fg:w="808"/><text x="50.6970%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (808 samples, 0.72%)</title><rect x="50.4470%" y="437" width="0.7194%" height="15" fill="rgb(245,6,2)" fg:x="56660" fg:w="808"/><text x="50.6970%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (808 samples, 0.72%)</title><rect x="50.4470%" y="421" width="0.7194%" height="15" fill="rgb(249,150,24)" fg:x="56660" fg:w="808"/><text x="50.6970%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (55 samples, 0.05%)</title><rect x="51.1174%" y="405" width="0.0490%" height="15" fill="rgb(228,185,42)" fg:x="57413" fg:w="55"/><text x="51.3674%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (55 samples, 0.05%)</title><rect x="51.1174%" y="389" width="0.0490%" height="15" fill="rgb(226,39,33)" fg:x="57413" fg:w="55"/><text x="51.3674%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (55 samples, 0.05%)</title><rect x="51.1174%" y="373" width="0.0490%" height="15" fill="rgb(221,166,19)" fg:x="57413" fg:w="55"/><text x="51.3674%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (19 samples, 0.02%)</title><rect x="51.1753%" y="501" width="0.0169%" height="15" fill="rgb(209,109,2)" fg:x="57478" fg:w="19"/><text x="51.4253%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (19 samples, 0.02%)</title><rect x="51.1753%" y="485" width="0.0169%" height="15" fill="rgb(252,216,26)" fg:x="57478" fg:w="19"/><text x="51.4253%" y="495.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="51.2100%" y="165" width="0.0116%" height="15" fill="rgb(227,173,36)" fg:x="57517" fg:w="13"/><text x="51.4600%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="51.2358%" y="69" width="0.0107%" height="15" fill="rgb(209,90,7)" fg:x="57546" fg:w="12"/><text x="51.4858%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (20 samples, 0.02%)</title><rect x="51.2331%" y="85" width="0.0178%" height="15" fill="rgb(250,194,11)" fg:x="57543" fg:w="20"/><text x="51.4831%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (75 samples, 0.07%)</title><rect x="51.2331%" y="117" width="0.0668%" height="15" fill="rgb(220,72,50)" fg:x="57543" fg:w="75"/><text x="51.4831%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (75 samples, 0.07%)</title><rect x="51.2331%" y="101" width="0.0668%" height="15" fill="rgb(222,106,48)" fg:x="57543" fg:w="75"/><text x="51.4831%" y="111.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (55 samples, 0.05%)</title><rect x="51.2509%" y="85" width="0.0490%" height="15" fill="rgb(216,220,45)" fg:x="57563" fg:w="55"/><text x="51.5009%" y="95.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (49 samples, 0.04%)</title><rect x="51.2563%" y="69" width="0.0436%" height="15" fill="rgb(234,112,18)" fg:x="57569" fg:w="49"/><text x="51.5063%" y="79.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (49 samples, 0.04%)</title><rect x="51.2563%" y="53" width="0.0436%" height="15" fill="rgb(206,179,9)" fg:x="57569" fg:w="49"/><text x="51.5063%" y="63.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (49 samples, 0.04%)</title><rect x="51.2563%" y="37" width="0.0436%" height="15" fill="rgb(215,115,40)" fg:x="57569" fg:w="49"/><text x="51.5063%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (208 samples, 0.19%)</title><rect x="51.2224%" y="165" width="0.1852%" height="15" fill="rgb(222,69,34)" fg:x="57531" fg:w="208"/><text x="51.4724%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (206 samples, 0.18%)</title><rect x="51.2242%" y="149" width="0.1834%" height="15" fill="rgb(209,161,10)" fg:x="57533" fg:w="206"/><text x="51.4742%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (200 samples, 0.18%)</title><rect x="51.2296%" y="133" width="0.1781%" height="15" fill="rgb(217,6,38)" fg:x="57539" fg:w="200"/><text x="51.4796%" y="143.50"></text></g><g><title>snmalloc::FreeListIter::take (103 samples, 0.09%)</title><rect x="51.3159%" y="117" width="0.0917%" height="15" fill="rgb(229,229,48)" fg:x="57636" fg:w="103"/><text x="51.5659%" y="127.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (103 samples, 0.09%)</title><rect x="51.3159%" y="101" width="0.0917%" height="15" fill="rgb(225,21,28)" fg:x="57636" fg:w="103"/><text x="51.5659%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (240 samples, 0.21%)</title><rect x="51.1957%" y="309" width="0.2137%" height="15" fill="rgb(206,33,13)" fg:x="57501" fg:w="240"/><text x="51.4457%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (240 samples, 0.21%)</title><rect x="51.1957%" y="293" width="0.2137%" height="15" fill="rgb(242,178,17)" fg:x="57501" fg:w="240"/><text x="51.4457%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (235 samples, 0.21%)</title><rect x="51.2002%" y="277" width="0.2092%" height="15" fill="rgb(220,162,5)" fg:x="57506" fg:w="235"/><text x="51.4502%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (235 samples, 0.21%)</title><rect x="51.2002%" y="261" width="0.2092%" height="15" fill="rgb(210,33,43)" fg:x="57506" fg:w="235"/><text x="51.4502%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (235 samples, 0.21%)</title><rect x="51.2002%" y="245" width="0.2092%" height="15" fill="rgb(216,116,54)" fg:x="57506" fg:w="235"/><text x="51.4502%" y="255.50"></text></g><g><title>alloc::alloc::alloc (229 samples, 0.20%)</title><rect x="51.2055%" y="229" width="0.2039%" height="15" fill="rgb(249,92,24)" fg:x="57512" fg:w="229"/><text x="51.4555%" y="239.50"></text></g><g><title>__rg_alloc (229 samples, 0.20%)</title><rect x="51.2055%" y="213" width="0.2039%" height="15" fill="rgb(231,189,14)" fg:x="57512" fg:w="229"/><text x="51.4555%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (229 samples, 0.20%)</title><rect x="51.2055%" y="197" width="0.2039%" height="15" fill="rgb(230,8,41)" fg:x="57512" fg:w="229"/><text x="51.4555%" y="207.50"></text></g><g><title>rust_alloc (224 samples, 0.20%)</title><rect x="51.2100%" y="181" width="0.1994%" height="15" fill="rgb(249,7,27)" fg:x="57517" fg:w="224"/><text x="51.4600%" y="191.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (289 samples, 0.26%)</title><rect x="51.1922%" y="421" width="0.2573%" height="15" fill="rgb(232,86,5)" fg:x="57497" fg:w="289"/><text x="51.4422%" y="431.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (289 samples, 0.26%)</title><rect x="51.1922%" y="405" width="0.2573%" height="15" fill="rgb(224,175,18)" fg:x="57497" fg:w="289"/><text x="51.4422%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (285 samples, 0.25%)</title><rect x="51.1957%" y="389" width="0.2537%" height="15" fill="rgb(220,129,12)" fg:x="57501" fg:w="285"/><text x="51.4457%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (285 samples, 0.25%)</title><rect x="51.1957%" y="373" width="0.2537%" height="15" fill="rgb(210,19,36)" fg:x="57501" fg:w="285"/><text x="51.4457%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (285 samples, 0.25%)</title><rect x="51.1957%" y="357" width="0.2537%" height="15" fill="rgb(219,96,14)" fg:x="57501" fg:w="285"/><text x="51.4457%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (285 samples, 0.25%)</title><rect x="51.1957%" y="341" width="0.2537%" height="15" fill="rgb(249,106,1)" fg:x="57501" fg:w="285"/><text x="51.4457%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (285 samples, 0.25%)</title><rect x="51.1957%" y="325" width="0.2537%" height="15" fill="rgb(249,155,20)" fg:x="57501" fg:w="285"/><text x="51.4457%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (45 samples, 0.04%)</title><rect x="51.4094%" y="309" width="0.0401%" height="15" fill="rgb(244,168,9)" fg:x="57741" fg:w="45"/><text x="51.6594%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (45 samples, 0.04%)</title><rect x="51.4094%" y="293" width="0.0401%" height="15" fill="rgb(216,23,50)" fg:x="57741" fg:w="45"/><text x="51.6594%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned_erms (38 samples, 0.03%)</title><rect x="51.4156%" y="277" width="0.0338%" height="15" fill="rgb(224,219,20)" fg:x="57748" fg:w="38"/><text x="51.6656%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="51.4495%" y="421" width="0.0116%" height="15" fill="rgb(222,156,15)" fg:x="57786" fg:w="13"/><text x="51.6995%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (60 samples, 0.05%)</title><rect x="51.4851%" y="229" width="0.0534%" height="15" fill="rgb(231,97,17)" fg:x="57826" fg:w="60"/><text x="51.7351%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (60 samples, 0.05%)</title><rect x="51.4851%" y="213" width="0.0534%" height="15" fill="rgb(218,70,48)" fg:x="57826" fg:w="60"/><text x="51.7351%" y="223.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (52 samples, 0.05%)</title><rect x="51.4922%" y="197" width="0.0463%" height="15" fill="rgb(212,196,52)" fg:x="57834" fg:w="52"/><text x="51.7422%" y="207.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (43 samples, 0.04%)</title><rect x="51.5002%" y="181" width="0.0383%" height="15" fill="rgb(243,203,18)" fg:x="57843" fg:w="43"/><text x="51.7502%" y="191.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (43 samples, 0.04%)</title><rect x="51.5002%" y="165" width="0.0383%" height="15" fill="rgb(252,125,41)" fg:x="57843" fg:w="43"/><text x="51.7502%" y="175.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (43 samples, 0.04%)</title><rect x="51.5002%" y="149" width="0.0383%" height="15" fill="rgb(223,180,33)" fg:x="57843" fg:w="43"/><text x="51.7502%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (130 samples, 0.12%)</title><rect x="51.4744%" y="277" width="0.1157%" height="15" fill="rgb(254,159,46)" fg:x="57814" fg:w="130"/><text x="51.7244%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (118 samples, 0.11%)</title><rect x="51.4851%" y="261" width="0.1051%" height="15" fill="rgb(254,38,10)" fg:x="57826" fg:w="118"/><text x="51.7351%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (118 samples, 0.11%)</title><rect x="51.4851%" y="245" width="0.1051%" height="15" fill="rgb(208,217,32)" fg:x="57826" fg:w="118"/><text x="51.7351%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::take (47 samples, 0.04%)</title><rect x="51.5483%" y="229" width="0.0418%" height="15" fill="rgb(221,120,13)" fg:x="57897" fg:w="47"/><text x="51.7983%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (47 samples, 0.04%)</title><rect x="51.5483%" y="213" width="0.0418%" height="15" fill="rgb(246,54,52)" fg:x="57897" fg:w="47"/><text x="51.7983%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (149 samples, 0.13%)</title><rect x="51.4637%" y="373" width="0.1327%" height="15" fill="rgb(242,34,25)" fg:x="57802" fg:w="149"/><text x="51.7137%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (149 samples, 0.13%)</title><rect x="51.4637%" y="357" width="0.1327%" height="15" fill="rgb(247,209,9)" fg:x="57802" fg:w="149"/><text x="51.7137%" y="367.50"></text></g><g><title>alloc::alloc::alloc (144 samples, 0.13%)</title><rect x="51.4682%" y="341" width="0.1282%" height="15" fill="rgb(228,71,26)" fg:x="57807" fg:w="144"/><text x="51.7182%" y="351.50"></text></g><g><title>__rg_alloc (144 samples, 0.13%)</title><rect x="51.4682%" y="325" width="0.1282%" height="15" fill="rgb(222,145,49)" fg:x="57807" fg:w="144"/><text x="51.7182%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (144 samples, 0.13%)</title><rect x="51.4682%" y="309" width="0.1282%" height="15" fill="rgb(218,121,17)" fg:x="57807" fg:w="144"/><text x="51.7182%" y="319.50"></text></g><g><title>rust_alloc (139 samples, 0.12%)</title><rect x="51.4726%" y="293" width="0.1238%" height="15" fill="rgb(244,50,7)" fg:x="57812" fg:w="139"/><text x="51.7226%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (154 samples, 0.14%)</title><rect x="51.4637%" y="421" width="0.1371%" height="15" fill="rgb(246,229,37)" fg:x="57802" fg:w="154"/><text x="51.7137%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (154 samples, 0.14%)</title><rect x="51.4637%" y="405" width="0.1371%" height="15" fill="rgb(225,18,5)" fg:x="57802" fg:w="154"/><text x="51.7137%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (154 samples, 0.14%)</title><rect x="51.4637%" y="389" width="0.1371%" height="15" fill="rgb(213,204,8)" fg:x="57802" fg:w="154"/><text x="51.7137%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (470 samples, 0.42%)</title><rect x="51.1922%" y="437" width="0.4185%" height="15" fill="rgb(238,103,6)" fg:x="57497" fg:w="470"/><text x="51.4422%" y="447.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (2,002 samples, 1.78%)</title><rect x="49.8335%" y="533" width="1.7825%" height="15" fill="rgb(222,25,35)" fg:x="55971" fg:w="2002"/><text x="50.0835%" y="543.50">&lt;..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (505 samples, 0.45%)</title><rect x="51.1664%" y="517" width="0.4496%" height="15" fill="rgb(213,203,35)" fg:x="57468" fg:w="505"/><text x="51.4164%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (476 samples, 0.42%)</title><rect x="51.1922%" y="501" width="0.4238%" height="15" fill="rgb(221,79,53)" fg:x="57497" fg:w="476"/><text x="51.4422%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (476 samples, 0.42%)</title><rect x="51.1922%" y="485" width="0.4238%" height="15" fill="rgb(243,200,35)" fg:x="57497" fg:w="476"/><text x="51.4422%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (476 samples, 0.42%)</title><rect x="51.1922%" y="469" width="0.4238%" height="15" fill="rgb(248,60,25)" fg:x="57497" fg:w="476"/><text x="51.4422%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (476 samples, 0.42%)</title><rect x="51.1922%" y="453" width="0.4238%" height="15" fill="rgb(227,53,46)" fg:x="57497" fg:w="476"/><text x="51.4422%" y="463.50"></text></g><g><title>aligned_size (20 samples, 0.02%)</title><rect x="51.7843%" y="277" width="0.0178%" height="15" fill="rgb(216,120,32)" fg:x="58162" fg:w="20"/><text x="52.0343%" y="287.50"></text></g><g><title>rust_alloc (29 samples, 0.03%)</title><rect x="51.8029%" y="245" width="0.0258%" height="15" fill="rgb(220,134,1)" fg:x="58183" fg:w="29"/><text x="52.0529%" y="255.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (16 samples, 0.01%)</title><rect x="51.8653%" y="117" width="0.0142%" height="15" fill="rgb(237,168,5)" fg:x="58253" fg:w="16"/><text x="52.1153%" y="127.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="51.8653%" y="101" width="0.0142%" height="15" fill="rgb(231,100,33)" fg:x="58253" fg:w="16"/><text x="52.1153%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (36 samples, 0.03%)</title><rect x="51.8555%" y="165" width="0.0321%" height="15" fill="rgb(236,177,47)" fg:x="58242" fg:w="36"/><text x="52.1055%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (36 samples, 0.03%)</title><rect x="51.8555%" y="149" width="0.0321%" height="15" fill="rgb(235,7,49)" fg:x="58242" fg:w="36"/><text x="52.1055%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (33 samples, 0.03%)</title><rect x="51.8582%" y="133" width="0.0294%" height="15" fill="rgb(232,119,22)" fg:x="58245" fg:w="33"/><text x="52.1082%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (45 samples, 0.04%)</title><rect x="51.8555%" y="181" width="0.0401%" height="15" fill="rgb(254,73,53)" fg:x="58242" fg:w="45"/><text x="52.1055%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (72 samples, 0.06%)</title><rect x="51.8457%" y="197" width="0.0641%" height="15" fill="rgb(251,35,20)" fg:x="58231" fg:w="72"/><text x="52.0957%" y="207.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="51.8973%" y="181" width="0.0125%" height="15" fill="rgb(241,119,20)" fg:x="58289" fg:w="14"/><text x="52.1473%" y="191.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="51.8973%" y="165" width="0.0125%" height="15" fill="rgb(207,102,14)" fg:x="58289" fg:w="14"/><text x="52.1473%" y="175.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (14 samples, 0.01%)</title><rect x="51.8973%" y="149" width="0.0125%" height="15" fill="rgb(248,201,50)" fg:x="58289" fg:w="14"/><text x="52.1473%" y="159.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="51.8973%" y="133" width="0.0125%" height="15" fill="rgb(222,185,44)" fg:x="58289" fg:w="14"/><text x="52.1473%" y="143.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (64 samples, 0.06%)</title><rect x="51.9383%" y="181" width="0.0570%" height="15" fill="rgb(218,107,18)" fg:x="58335" fg:w="64"/><text x="52.1883%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (514 samples, 0.46%)</title><rect x="51.8457%" y="229" width="0.4576%" height="15" fill="rgb(237,177,39)" fg:x="58231" fg:w="514"/><text x="52.0957%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (514 samples, 0.46%)</title><rect x="51.8457%" y="213" width="0.4576%" height="15" fill="rgb(246,69,6)" fg:x="58231" fg:w="514"/><text x="52.0957%" y="223.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (442 samples, 0.39%)</title><rect x="51.9098%" y="197" width="0.3935%" height="15" fill="rgb(234,208,37)" fg:x="58303" fg:w="442"/><text x="52.1598%" y="207.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (346 samples, 0.31%)</title><rect x="51.9953%" y="181" width="0.3081%" height="15" fill="rgb(225,4,6)" fg:x="58399" fg:w="346"/><text x="52.2453%" y="191.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (346 samples, 0.31%)</title><rect x="51.9953%" y="165" width="0.3081%" height="15" fill="rgb(233,45,0)" fg:x="58399" fg:w="346"/><text x="52.2453%" y="175.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (346 samples, 0.31%)</title><rect x="51.9953%" y="149" width="0.3081%" height="15" fill="rgb(226,136,5)" fg:x="58399" fg:w="346"/><text x="52.2453%" y="159.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (15 samples, 0.01%)</title><rect x="52.3087%" y="197" width="0.0134%" height="15" fill="rgb(211,91,47)" fg:x="58751" fg:w="15"/><text x="52.5587%" y="207.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (15 samples, 0.01%)</title><rect x="52.3087%" y="181" width="0.0134%" height="15" fill="rgb(242,88,51)" fg:x="58751" fg:w="15"/><text x="52.5587%" y="191.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="52.3104%" y="165" width="0.0116%" height="15" fill="rgb(230,91,28)" fg:x="58753" fg:w="13"/><text x="52.5604%" y="175.50"></text></g><g><title>snmalloc::FreeListIter::take (16 samples, 0.01%)</title><rect x="52.3220%" y="197" width="0.0142%" height="15" fill="rgb(254,186,29)" fg:x="58766" fg:w="16"/><text x="52.5720%" y="207.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (16 samples, 0.01%)</title><rect x="52.3220%" y="181" width="0.0142%" height="15" fill="rgb(238,6,4)" fg:x="58766" fg:w="16"/><text x="52.5720%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="52.3033%" y="229" width="0.0356%" height="15" fill="rgb(221,151,16)" fg:x="58745" fg:w="40"/><text x="52.5533%" y="239.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (34 samples, 0.03%)</title><rect x="52.3087%" y="213" width="0.0303%" height="15" fill="rgb(251,143,52)" fg:x="58751" fg:w="34"/><text x="52.5587%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (19 samples, 0.02%)</title><rect x="52.3416%" y="181" width="0.0169%" height="15" fill="rgb(206,90,15)" fg:x="58788" fg:w="19"/><text x="52.5916%" y="191.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (15 samples, 0.01%)</title><rect x="52.3452%" y="165" width="0.0134%" height="15" fill="rgb(218,35,8)" fg:x="58792" fg:w="15"/><text x="52.5952%" y="175.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (12 samples, 0.01%)</title><rect x="52.3478%" y="149" width="0.0107%" height="15" fill="rgb(239,215,6)" fg:x="58795" fg:w="12"/><text x="52.5978%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="52.3389%" y="229" width="0.0356%" height="15" fill="rgb(245,116,39)" fg:x="58785" fg:w="40"/><text x="52.5889%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="52.3389%" y="213" width="0.0356%" height="15" fill="rgb(242,65,28)" fg:x="58785" fg:w="40"/><text x="52.5889%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="52.3407%" y="197" width="0.0338%" height="15" fill="rgb(252,132,53)" fg:x="58787" fg:w="38"/><text x="52.5907%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="52.3585%" y="181" width="0.0160%" height="15" fill="rgb(224,159,50)" fg:x="58807" fg:w="18"/><text x="52.6085%" y="191.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (13 samples, 0.01%)</title><rect x="52.3630%" y="165" width="0.0116%" height="15" fill="rgb(224,93,4)" fg:x="58812" fg:w="13"/><text x="52.6130%" y="175.50"></text></g><g><title>snmalloc::FreeListIter::empty (22 samples, 0.02%)</title><rect x="52.3746%" y="229" width="0.0196%" height="15" fill="rgb(208,81,34)" fg:x="58825" fg:w="22"/><text x="52.6246%" y="239.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (22 samples, 0.02%)</title><rect x="52.3746%" y="213" width="0.0196%" height="15" fill="rgb(233,92,54)" fg:x="58825" fg:w="22"/><text x="52.6246%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (839 samples, 0.75%)</title><rect x="51.8029%" y="277" width="0.7470%" height="15" fill="rgb(237,21,14)" fg:x="58183" fg:w="839"/><text x="52.0529%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (839 samples, 0.75%)</title><rect x="51.8029%" y="261" width="0.7470%" height="15" fill="rgb(249,128,51)" fg:x="58183" fg:w="839"/><text x="52.0529%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (806 samples, 0.72%)</title><rect x="51.8323%" y="245" width="0.7176%" height="15" fill="rgb(223,129,24)" fg:x="58216" fg:w="806"/><text x="52.0823%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::take (175 samples, 0.16%)</title><rect x="52.3941%" y="229" width="0.1558%" height="15" fill="rgb(231,168,25)" fg:x="58847" fg:w="175"/><text x="52.6441%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (175 samples, 0.16%)</title><rect x="52.3941%" y="213" width="0.1558%" height="15" fill="rgb(224,39,20)" fg:x="58847" fg:w="175"/><text x="52.6441%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (893 samples, 0.80%)</title><rect x="51.7567%" y="421" width="0.7951%" height="15" fill="rgb(225,152,53)" fg:x="58131" fg:w="893"/><text x="52.0067%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (893 samples, 0.80%)</title><rect x="51.7567%" y="405" width="0.7951%" height="15" fill="rgb(252,17,24)" fg:x="58131" fg:w="893"/><text x="52.0067%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (892 samples, 0.79%)</title><rect x="51.7575%" y="389" width="0.7942%" height="15" fill="rgb(250,114,30)" fg:x="58132" fg:w="892"/><text x="52.0075%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (892 samples, 0.79%)</title><rect x="51.7575%" y="373" width="0.7942%" height="15" fill="rgb(229,5,4)" fg:x="58132" fg:w="892"/><text x="52.0075%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (892 samples, 0.79%)</title><rect x="51.7575%" y="357" width="0.7942%" height="15" fill="rgb(225,176,49)" fg:x="58132" fg:w="892"/><text x="52.0075%" y="367.50"></text></g><g><title>alloc::alloc::alloc (892 samples, 0.79%)</title><rect x="51.7575%" y="341" width="0.7942%" height="15" fill="rgb(224,221,49)" fg:x="58132" fg:w="892"/><text x="52.0075%" y="351.50"></text></g><g><title>__rg_alloc (892 samples, 0.79%)</title><rect x="51.7575%" y="325" width="0.7942%" height="15" fill="rgb(253,169,27)" fg:x="58132" fg:w="892"/><text x="52.0075%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (892 samples, 0.79%)</title><rect x="51.7575%" y="309" width="0.7942%" height="15" fill="rgb(211,206,16)" fg:x="58132" fg:w="892"/><text x="52.0075%" y="319.50"></text></g><g><title>rust_alloc (862 samples, 0.77%)</title><rect x="51.7843%" y="293" width="0.7675%" height="15" fill="rgb(244,87,35)" fg:x="58162" fg:w="862"/><text x="52.0343%" y="303.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (4,416 samples, 3.93%)</title><rect x="48.8906%" y="789" width="3.9318%" height="15" fill="rgb(246,28,10)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="799.50">trem..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,416 samples, 3.93%)</title><rect x="48.8906%" y="773" width="3.9318%" height="15" fill="rgb(229,12,44)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="783.50">&lt;asy..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,416 samples, 3.93%)</title><rect x="48.8906%" y="757" width="3.9318%" height="15" fill="rgb(210,145,37)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="767.50">&lt;asy..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (4,416 samples, 3.93%)</title><rect x="48.8906%" y="741" width="3.9318%" height="15" fill="rgb(227,112,52)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="751.50">&lt;cor..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,416 samples, 3.93%)</title><rect x="48.8906%" y="725" width="3.9318%" height="15" fill="rgb(238,155,34)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="735.50">&lt;asy..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (4,416 samples, 3.93%)</title><rect x="48.8906%" y="709" width="3.9318%" height="15" fill="rgb(239,226,36)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="719.50">asyn..</text></g><g><title>std::panic::catch_unwind (4,416 samples, 3.93%)</title><rect x="48.8906%" y="693" width="3.9318%" height="15" fill="rgb(230,16,23)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="703.50">std:..</text></g><g><title>std::panicking::try (4,416 samples, 3.93%)</title><rect x="48.8906%" y="677" width="3.9318%" height="15" fill="rgb(236,171,36)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="687.50">std:..</text></g><g><title>std::panicking::try::do_call (4,416 samples, 3.93%)</title><rect x="48.8906%" y="661" width="3.9318%" height="15" fill="rgb(221,22,14)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="671.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,416 samples, 3.93%)</title><rect x="48.8906%" y="645" width="3.9318%" height="15" fill="rgb(242,43,11)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="655.50">&lt;cor..</text></g><g><title>core::ops::function::FnOnce::call_once (4,416 samples, 3.93%)</title><rect x="48.8906%" y="629" width="3.9318%" height="15" fill="rgb(232,69,23)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="639.50">core..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (4,416 samples, 3.93%)</title><rect x="48.8906%" y="613" width="3.9318%" height="15" fill="rgb(216,180,54)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="623.50">asyn..</text></g><g><title>async_ffi::FfiContext::with_context (4,416 samples, 3.93%)</title><rect x="48.8906%" y="597" width="3.9318%" height="15" fill="rgb(216,5,24)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="607.50">asyn..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (4,416 samples, 3.93%)</title><rect x="48.8906%" y="581" width="3.9318%" height="15" fill="rgb(225,89,9)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="591.50">asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,416 samples, 3.93%)</title><rect x="48.8906%" y="565" width="3.9318%" height="15" fill="rgb(243,75,33)" fg:x="54912" fg:w="4416"/><text x="49.1406%" y="575.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (4,353 samples, 3.88%)</title><rect x="48.9467%" y="549" width="3.8757%" height="15" fill="rgb(247,141,45)" fg:x="54975" fg:w="4353"/><text x="49.1967%" y="559.50">&lt;tre..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,355 samples, 1.21%)</title><rect x="51.6160%" y="533" width="1.2064%" height="15" fill="rgb(232,177,36)" fg:x="57973" fg:w="1355"/><text x="51.8660%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (1,247 samples, 1.11%)</title><rect x="51.7121%" y="517" width="1.1103%" height="15" fill="rgb(219,125,36)" fg:x="58081" fg:w="1247"/><text x="51.9621%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (1,197 samples, 1.07%)</title><rect x="51.7567%" y="501" width="1.0657%" height="15" fill="rgb(227,94,9)" fg:x="58131" fg:w="1197"/><text x="52.0067%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,197 samples, 1.07%)</title><rect x="51.7567%" y="485" width="1.0657%" height="15" fill="rgb(240,34,52)" fg:x="58131" fg:w="1197"/><text x="52.0067%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,197 samples, 1.07%)</title><rect x="51.7567%" y="469" width="1.0657%" height="15" fill="rgb(216,45,12)" fg:x="58131" fg:w="1197"/><text x="52.0067%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1,197 samples, 1.07%)</title><rect x="51.7567%" y="453" width="1.0657%" height="15" fill="rgb(246,21,19)" fg:x="58131" fg:w="1197"/><text x="52.0067%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,197 samples, 1.07%)</title><rect x="51.7567%" y="437" width="1.0657%" height="15" fill="rgb(213,98,42)" fg:x="58131" fg:w="1197"/><text x="52.0067%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (304 samples, 0.27%)</title><rect x="52.5517%" y="421" width="0.2707%" height="15" fill="rgb(250,136,47)" fg:x="59024" fg:w="304"/><text x="52.8017%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (304 samples, 0.27%)</title><rect x="52.5517%" y="405" width="0.2707%" height="15" fill="rgb(251,124,27)" fg:x="59024" fg:w="304"/><text x="52.8017%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (297 samples, 0.26%)</title><rect x="52.5580%" y="389" width="0.2644%" height="15" fill="rgb(229,180,14)" fg:x="59031" fg:w="297"/><text x="52.8080%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="52.8277%" y="757" width="0.0134%" height="15" fill="rgb(245,216,25)" fg:x="59334" fg:w="15"/><text x="53.0777%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (304 samples, 0.27%)</title><rect x="52.9951%" y="741" width="0.2707%" height="15" fill="rgb(251,43,5)" fg:x="59522" fg:w="304"/><text x="53.2451%" y="751.50"></text></g><g><title>core::ptr::read (276 samples, 0.25%)</title><rect x="53.0201%" y="725" width="0.2457%" height="15" fill="rgb(250,128,24)" fg:x="59550" fg:w="276"/><text x="53.2701%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (261 samples, 0.23%)</title><rect x="53.0334%" y="709" width="0.2324%" height="15" fill="rgb(217,117,27)" fg:x="59565" fg:w="261"/><text x="53.2834%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="53.2747%" y="741" width="0.0169%" height="15" fill="rgb(245,147,4)" fg:x="59836" fg:w="19"/><text x="53.5247%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="53.3468%" y="421" width="0.0196%" height="15" fill="rgb(242,201,35)" fg:x="59917" fg:w="22"/><text x="53.5968%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (22 samples, 0.02%)</title><rect x="53.3468%" y="405" width="0.0196%" height="15" fill="rgb(218,181,1)" fg:x="59917" fg:w="22"/><text x="53.5968%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (18 samples, 0.02%)</title><rect x="53.3504%" y="389" width="0.0160%" height="15" fill="rgb(222,6,29)" fg:x="59921" fg:w="18"/><text x="53.6004%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (15 samples, 0.01%)</title><rect x="53.3530%" y="373" width="0.0134%" height="15" fill="rgb(208,186,3)" fg:x="59924" fg:w="15"/><text x="53.6030%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="53.3530%" y="357" width="0.0134%" height="15" fill="rgb(216,36,26)" fg:x="59924" fg:w="15"/><text x="53.6030%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="53.3530%" y="341" width="0.0134%" height="15" fill="rgb(248,201,23)" fg:x="59924" fg:w="15"/><text x="53.6030%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (46 samples, 0.04%)</title><rect x="53.3700%" y="421" width="0.0410%" height="15" fill="rgb(251,170,31)" fg:x="59943" fg:w="46"/><text x="53.6200%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (46 samples, 0.04%)</title><rect x="53.3700%" y="405" width="0.0410%" height="15" fill="rgb(207,110,25)" fg:x="59943" fg:w="46"/><text x="53.6200%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (378 samples, 0.34%)</title><rect x="53.3245%" y="469" width="0.3366%" height="15" fill="rgb(250,54,15)" fg:x="59892" fg:w="378"/><text x="53.5745%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (378 samples, 0.34%)</title><rect x="53.3245%" y="453" width="0.3366%" height="15" fill="rgb(227,68,33)" fg:x="59892" fg:w="378"/><text x="53.5745%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (358 samples, 0.32%)</title><rect x="53.3424%" y="437" width="0.3187%" height="15" fill="rgb(238,34,41)" fg:x="59912" fg:w="358"/><text x="53.5924%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (281 samples, 0.25%)</title><rect x="53.4109%" y="421" width="0.2502%" height="15" fill="rgb(220,11,15)" fg:x="59989" fg:w="281"/><text x="53.6609%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (281 samples, 0.25%)</title><rect x="53.4109%" y="405" width="0.2502%" height="15" fill="rgb(246,111,35)" fg:x="59989" fg:w="281"/><text x="53.6609%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (415 samples, 0.37%)</title><rect x="53.3014%" y="613" width="0.3695%" height="15" fill="rgb(209,88,53)" fg:x="59866" fg:w="415"/><text x="53.5514%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (415 samples, 0.37%)</title><rect x="53.3014%" y="597" width="0.3695%" height="15" fill="rgb(231,185,47)" fg:x="59866" fg:w="415"/><text x="53.5514%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (408 samples, 0.36%)</title><rect x="53.3076%" y="581" width="0.3633%" height="15" fill="rgb(233,154,1)" fg:x="59873" fg:w="408"/><text x="53.5576%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (408 samples, 0.36%)</title><rect x="53.3076%" y="565" width="0.3633%" height="15" fill="rgb(225,15,46)" fg:x="59873" fg:w="408"/><text x="53.5576%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (408 samples, 0.36%)</title><rect x="53.3076%" y="549" width="0.3633%" height="15" fill="rgb(211,135,41)" fg:x="59873" fg:w="408"/><text x="53.5576%" y="559.50"></text></g><g><title>alloc::alloc::alloc (398 samples, 0.35%)</title><rect x="53.3165%" y="533" width="0.3544%" height="15" fill="rgb(208,54,0)" fg:x="59883" fg:w="398"/><text x="53.5665%" y="543.50"></text></g><g><title>__rg_alloc (398 samples, 0.35%)</title><rect x="53.3165%" y="517" width="0.3544%" height="15" fill="rgb(244,136,14)" fg:x="59883" fg:w="398"/><text x="53.5665%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (398 samples, 0.35%)</title><rect x="53.3165%" y="501" width="0.3544%" height="15" fill="rgb(241,56,14)" fg:x="59883" fg:w="398"/><text x="53.5665%" y="511.50"></text></g><g><title>rust_alloc (396 samples, 0.35%)</title><rect x="53.3183%" y="485" width="0.3526%" height="15" fill="rgb(205,80,24)" fg:x="59885" fg:w="396"/><text x="53.5683%" y="495.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (455 samples, 0.41%)</title><rect x="53.3014%" y="741" width="0.4051%" height="15" fill="rgb(220,57,4)" fg:x="59866" fg:w="455"/><text x="53.5514%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (455 samples, 0.41%)</title><rect x="53.3014%" y="725" width="0.4051%" height="15" fill="rgb(226,193,50)" fg:x="59866" fg:w="455"/><text x="53.5514%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (455 samples, 0.41%)</title><rect x="53.3014%" y="709" width="0.4051%" height="15" fill="rgb(231,168,22)" fg:x="59866" fg:w="455"/><text x="53.5514%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (455 samples, 0.41%)</title><rect x="53.3014%" y="693" width="0.4051%" height="15" fill="rgb(254,215,14)" fg:x="59866" fg:w="455"/><text x="53.5514%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (455 samples, 0.41%)</title><rect x="53.3014%" y="677" width="0.4051%" height="15" fill="rgb(211,115,16)" fg:x="59866" fg:w="455"/><text x="53.5514%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (455 samples, 0.41%)</title><rect x="53.3014%" y="661" width="0.4051%" height="15" fill="rgb(236,210,16)" fg:x="59866" fg:w="455"/><text x="53.5514%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (455 samples, 0.41%)</title><rect x="53.3014%" y="645" width="0.4051%" height="15" fill="rgb(221,94,12)" fg:x="59866" fg:w="455"/><text x="53.5514%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (455 samples, 0.41%)</title><rect x="53.3014%" y="629" width="0.4051%" height="15" fill="rgb(235,218,49)" fg:x="59866" fg:w="455"/><text x="53.5514%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (40 samples, 0.04%)</title><rect x="53.6709%" y="613" width="0.0356%" height="15" fill="rgb(217,114,14)" fg:x="60281" fg:w="40"/><text x="53.9209%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (40 samples, 0.04%)</title><rect x="53.6709%" y="597" width="0.0356%" height="15" fill="rgb(216,145,22)" fg:x="60281" fg:w="40"/><text x="53.9209%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (29 samples, 0.03%)</title><rect x="53.6807%" y="581" width="0.0258%" height="15" fill="rgb(217,112,39)" fg:x="60292" fg:w="29"/><text x="53.9307%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (692 samples, 0.62%)</title><rect x="53.7065%" y="741" width="0.6161%" height="15" fill="rgb(225,85,32)" fg:x="60321" fg:w="692"/><text x="53.9565%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (373 samples, 0.33%)</title><rect x="54.3449%" y="725" width="0.3321%" height="15" fill="rgb(245,209,47)" fg:x="61038" fg:w="373"/><text x="54.5949%" y="735.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="54.6859%" y="613" width="0.0134%" height="15" fill="rgb(218,220,15)" fg:x="61421" fg:w="15"/><text x="54.9359%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (28 samples, 0.02%)</title><rect x="54.7518%" y="453" width="0.0249%" height="15" fill="rgb(222,202,31)" fg:x="61495" fg:w="28"/><text x="55.0018%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (27 samples, 0.02%)</title><rect x="54.7527%" y="437" width="0.0240%" height="15" fill="rgb(243,203,4)" fg:x="61496" fg:w="27"/><text x="55.0027%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (53 samples, 0.05%)</title><rect x="54.7411%" y="501" width="0.0472%" height="15" fill="rgb(237,92,17)" fg:x="61483" fg:w="53"/><text x="54.9911%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (53 samples, 0.05%)</title><rect x="54.7411%" y="485" width="0.0472%" height="15" fill="rgb(231,119,7)" fg:x="61483" fg:w="53"/><text x="54.9911%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (48 samples, 0.04%)</title><rect x="54.7455%" y="469" width="0.0427%" height="15" fill="rgb(237,82,41)" fg:x="61488" fg:w="48"/><text x="54.9955%" y="479.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="54.7767%" y="453" width="0.0116%" height="15" fill="rgb(226,81,48)" fg:x="61523" fg:w="13"/><text x="55.0267%" y="463.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="54.7767%" y="437" width="0.0116%" height="15" fill="rgb(234,70,51)" fg:x="61523" fg:w="13"/><text x="55.0267%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (66 samples, 0.06%)</title><rect x="54.7411%" y="517" width="0.0588%" height="15" fill="rgb(251,86,4)" fg:x="61483" fg:w="66"/><text x="54.9911%" y="527.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="54.7883%" y="501" width="0.0116%" height="15" fill="rgb(244,144,28)" fg:x="61536" fg:w="13"/><text x="55.0383%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="54.7883%" y="485" width="0.0116%" height="15" fill="rgb(232,161,39)" fg:x="61536" fg:w="13"/><text x="55.0383%" y="495.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="54.7883%" y="469" width="0.0116%" height="15" fill="rgb(247,34,51)" fg:x="61536" fg:w="13"/><text x="55.0383%" y="479.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="54.7883%" y="453" width="0.0116%" height="15" fill="rgb(225,132,2)" fg:x="61536" fg:w="13"/><text x="55.0383%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (107 samples, 0.10%)</title><rect x="54.7215%" y="533" width="0.0953%" height="15" fill="rgb(209,159,44)" fg:x="61461" fg:w="107"/><text x="54.9715%" y="543.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="54.8016%" y="517" width="0.0151%" height="15" fill="rgb(251,214,1)" fg:x="61551" fg:w="17"/><text x="55.0516%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="54.8016%" y="501" width="0.0151%" height="15" fill="rgb(247,84,47)" fg:x="61551" fg:w="17"/><text x="55.0516%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (17 samples, 0.02%)</title><rect x="54.8016%" y="485" width="0.0151%" height="15" fill="rgb(240,111,43)" fg:x="61551" fg:w="17"/><text x="55.0516%" y="495.50"></text></g><g><title>snmalloc::bits::align_down (17 samples, 0.02%)</title><rect x="54.8016%" y="469" width="0.0151%" height="15" fill="rgb(215,214,35)" fg:x="61551" fg:w="17"/><text x="55.0516%" y="479.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (73 samples, 0.06%)</title><rect x="54.8524%" y="517" width="0.0650%" height="15" fill="rgb(248,207,23)" fg:x="61608" fg:w="73"/><text x="55.1024%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (588 samples, 0.52%)</title><rect x="54.7206%" y="565" width="0.5235%" height="15" fill="rgb(214,186,4)" fg:x="61460" fg:w="588"/><text x="54.9706%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (588 samples, 0.52%)</title><rect x="54.7206%" y="549" width="0.5235%" height="15" fill="rgb(220,133,22)" fg:x="61460" fg:w="588"/><text x="54.9706%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (480 samples, 0.43%)</title><rect x="54.8168%" y="533" width="0.4274%" height="15" fill="rgb(239,134,19)" fg:x="61568" fg:w="480"/><text x="55.0668%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (367 samples, 0.33%)</title><rect x="54.9174%" y="517" width="0.3268%" height="15" fill="rgb(250,140,9)" fg:x="61681" fg:w="367"/><text x="55.1674%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (367 samples, 0.33%)</title><rect x="54.9174%" y="501" width="0.3268%" height="15" fill="rgb(225,59,14)" fg:x="61681" fg:w="367"/><text x="55.1674%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (367 samples, 0.33%)</title><rect x="54.9174%" y="485" width="0.3268%" height="15" fill="rgb(214,152,51)" fg:x="61681" fg:w="367"/><text x="55.1674%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (28 samples, 0.02%)</title><rect x="55.2619%" y="533" width="0.0249%" height="15" fill="rgb(251,227,43)" fg:x="62068" fg:w="28"/><text x="55.5119%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (28 samples, 0.02%)</title><rect x="55.2619%" y="517" width="0.0249%" height="15" fill="rgb(241,96,17)" fg:x="62068" fg:w="28"/><text x="55.5119%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (53 samples, 0.05%)</title><rect x="55.2441%" y="565" width="0.0472%" height="15" fill="rgb(234,198,43)" fg:x="62048" fg:w="53"/><text x="55.4941%" y="575.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (46 samples, 0.04%)</title><rect x="55.2504%" y="549" width="0.0410%" height="15" fill="rgb(220,108,29)" fg:x="62055" fg:w="46"/><text x="55.5004%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (828 samples, 0.74%)</title><rect x="54.7001%" y="613" width="0.7372%" height="15" fill="rgb(226,163,33)" fg:x="61437" fg:w="828"/><text x="54.9501%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (828 samples, 0.74%)</title><rect x="54.7001%" y="597" width="0.7372%" height="15" fill="rgb(205,194,45)" fg:x="61437" fg:w="828"/><text x="54.9501%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (816 samples, 0.73%)</title><rect x="54.7108%" y="581" width="0.7265%" height="15" fill="rgb(206,143,44)" fg:x="61449" fg:w="816"/><text x="54.9608%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (152 samples, 0.14%)</title><rect x="55.3020%" y="565" width="0.1353%" height="15" fill="rgb(236,136,36)" fg:x="62113" fg:w="152"/><text x="55.5520%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (152 samples, 0.14%)</title><rect x="55.3020%" y="549" width="0.1353%" height="15" fill="rgb(249,172,42)" fg:x="62113" fg:w="152"/><text x="55.5520%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,263 samples, 1.12%)</title><rect x="54.3226%" y="741" width="1.1245%" height="15" fill="rgb(216,139,23)" fg:x="61013" fg:w="1263"/><text x="54.5726%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (865 samples, 0.77%)</title><rect x="54.6770%" y="725" width="0.7701%" height="15" fill="rgb(207,166,20)" fg:x="61411" fg:w="865"/><text x="54.9270%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (865 samples, 0.77%)</title><rect x="54.6770%" y="709" width="0.7701%" height="15" fill="rgb(210,209,22)" fg:x="61411" fg:w="865"/><text x="54.9270%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (865 samples, 0.77%)</title><rect x="54.6770%" y="693" width="0.7701%" height="15" fill="rgb(232,118,20)" fg:x="61411" fg:w="865"/><text x="54.9270%" y="703.50"></text></g><g><title>alloc::alloc::alloc (865 samples, 0.77%)</title><rect x="54.6770%" y="677" width="0.7701%" height="15" fill="rgb(238,113,42)" fg:x="61411" fg:w="865"/><text x="54.9270%" y="687.50"></text></g><g><title>__rg_alloc (865 samples, 0.77%)</title><rect x="54.6770%" y="661" width="0.7701%" height="15" fill="rgb(231,42,5)" fg:x="61411" fg:w="865"/><text x="54.9270%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (865 samples, 0.77%)</title><rect x="54.6770%" y="645" width="0.7701%" height="15" fill="rgb(243,166,24)" fg:x="61411" fg:w="865"/><text x="54.9270%" y="655.50"></text></g><g><title>rust_alloc (855 samples, 0.76%)</title><rect x="54.6859%" y="629" width="0.7612%" height="15" fill="rgb(237,226,12)" fg:x="61421" fg:w="855"/><text x="54.9359%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="55.4560%" y="645" width="0.0160%" height="15" fill="rgb(229,133,24)" fg:x="62286" fg:w="18"/><text x="55.7060%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="55.4605%" y="629" width="0.0116%" height="15" fill="rgb(238,33,43)" fg:x="62291" fg:w="13"/><text x="55.7105%" y="639.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="55.4605%" y="613" width="0.0116%" height="15" fill="rgb(227,59,38)" fg:x="62291" fg:w="13"/><text x="55.7105%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="55.4605%" y="597" width="0.0116%" height="15" fill="rgb(230,97,0)" fg:x="62291" fg:w="13"/><text x="55.7105%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (19 samples, 0.02%)</title><rect x="55.4560%" y="709" width="0.0169%" height="15" fill="rgb(250,173,50)" fg:x="62286" fg:w="19"/><text x="55.7060%" y="719.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="55.4560%" y="693" width="0.0169%" height="15" fill="rgb(240,15,50)" fg:x="62286" fg:w="19"/><text x="55.7060%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (19 samples, 0.02%)</title><rect x="55.4560%" y="677" width="0.0169%" height="15" fill="rgb(221,93,22)" fg:x="62286" fg:w="19"/><text x="55.7060%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="55.4560%" y="661" width="0.0169%" height="15" fill="rgb(245,180,53)" fg:x="62286" fg:w="19"/><text x="55.7060%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="55.4471%" y="725" width="0.0338%" height="15" fill="rgb(231,88,51)" fg:x="62276" fg:w="38"/><text x="55.6971%" y="735.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="55.5014%" y="629" width="0.0107%" height="15" fill="rgb(240,58,21)" fg:x="62337" fg:w="12"/><text x="55.7514%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (39 samples, 0.03%)</title><rect x="55.5201%" y="629" width="0.0347%" height="15" fill="rgb(237,21,10)" fg:x="62358" fg:w="39"/><text x="55.7701%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (39 samples, 0.03%)</title><rect x="55.5201%" y="613" width="0.0347%" height="15" fill="rgb(218,43,11)" fg:x="62358" fg:w="39"/><text x="55.7701%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (36 samples, 0.03%)</title><rect x="55.5228%" y="597" width="0.0321%" height="15" fill="rgb(218,221,29)" fg:x="62361" fg:w="36"/><text x="55.7728%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (69 samples, 0.06%)</title><rect x="55.5014%" y="661" width="0.0614%" height="15" fill="rgb(214,118,42)" fg:x="62337" fg:w="69"/><text x="55.7514%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (69 samples, 0.06%)</title><rect x="55.5014%" y="645" width="0.0614%" height="15" fill="rgb(251,200,26)" fg:x="62337" fg:w="69"/><text x="55.7514%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (79 samples, 0.07%)</title><rect x="55.5014%" y="693" width="0.0703%" height="15" fill="rgb(237,101,39)" fg:x="62337" fg:w="79"/><text x="55.7514%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (79 samples, 0.07%)</title><rect x="55.5014%" y="677" width="0.0703%" height="15" fill="rgb(251,117,11)" fg:x="62337" fg:w="79"/><text x="55.7514%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (95 samples, 0.08%)</title><rect x="55.4899%" y="709" width="0.0846%" height="15" fill="rgb(216,223,23)" fg:x="62324" fg:w="95"/><text x="55.7399%" y="719.50"></text></g><g><title>rust_dealloc (114 samples, 0.10%)</title><rect x="55.4810%" y="725" width="0.1015%" height="15" fill="rgb(251,54,12)" fg:x="62314" fg:w="114"/><text x="55.7310%" y="735.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (21 samples, 0.02%)</title><rect x="55.5860%" y="709" width="0.0187%" height="15" fill="rgb(254,176,54)" fg:x="62432" fg:w="21"/><text x="55.8360%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (186 samples, 0.17%)</title><rect x="55.4471%" y="741" width="0.1656%" height="15" fill="rgb(210,32,8)" fg:x="62276" fg:w="186"/><text x="55.6971%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (34 samples, 0.03%)</title><rect x="55.5825%" y="725" width="0.0303%" height="15" fill="rgb(235,52,38)" fg:x="62428" fg:w="34"/><text x="55.8325%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (13 samples, 0.01%)</title><rect x="55.6288%" y="741" width="0.0116%" height="15" fill="rgb(231,4,44)" fg:x="62480" fg:w="13"/><text x="55.8788%" y="751.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (40 samples, 0.04%)</title><rect x="55.6403%" y="741" width="0.0356%" height="15" fill="rgb(249,2,32)" fg:x="62493" fg:w="40"/><text x="55.8903%" y="751.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (40 samples, 0.04%)</title><rect x="55.6403%" y="725" width="0.0356%" height="15" fill="rgb(224,65,26)" fg:x="62493" fg:w="40"/><text x="55.8903%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (40 samples, 0.04%)</title><rect x="55.6403%" y="709" width="0.0356%" height="15" fill="rgb(250,73,40)" fg:x="62493" fg:w="40"/><text x="55.8903%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (40 samples, 0.04%)</title><rect x="55.6403%" y="693" width="0.0356%" height="15" fill="rgb(253,177,16)" fg:x="62493" fg:w="40"/><text x="55.8903%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (16 samples, 0.01%)</title><rect x="55.6617%" y="677" width="0.0142%" height="15" fill="rgb(217,32,34)" fg:x="62517" fg:w="16"/><text x="55.9117%" y="687.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (16 samples, 0.01%)</title><rect x="55.6617%" y="661" width="0.0142%" height="15" fill="rgb(212,7,10)" fg:x="62517" fg:w="16"/><text x="55.9117%" y="671.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (16 samples, 0.01%)</title><rect x="55.6617%" y="645" width="0.0142%" height="15" fill="rgb(245,89,8)" fg:x="62517" fg:w="16"/><text x="55.9117%" y="655.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (14 samples, 0.01%)</title><rect x="55.6635%" y="629" width="0.0125%" height="15" fill="rgb(237,16,53)" fg:x="62519" fg:w="14"/><text x="55.9135%" y="639.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (12 samples, 0.01%)</title><rect x="55.6653%" y="613" width="0.0107%" height="15" fill="rgb(250,204,30)" fg:x="62521" fg:w="12"/><text x="55.9153%" y="623.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,675 samples, 6.83%)</title><rect x="48.8906%" y="821" width="6.8334%" height="15" fill="rgb(208,77,27)" fg:x="54912" fg:w="7675"/><text x="49.1406%" y="831.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,675 samples, 6.83%)</title><rect x="48.8906%" y="805" width="6.8334%" height="15" fill="rgb(250,204,28)" fg:x="54912" fg:w="7675"/><text x="49.1406%" y="815.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,259 samples, 2.90%)</title><rect x="52.8224%" y="789" width="2.9016%" height="15" fill="rgb(244,63,21)" fg:x="59328" fg:w="3259"/><text x="53.0724%" y="799.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,259 samples, 2.90%)</title><rect x="52.8224%" y="773" width="2.9016%" height="15" fill="rgb(236,85,44)" fg:x="59328" fg:w="3259"/><text x="53.0724%" y="783.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,238 samples, 2.88%)</title><rect x="52.8411%" y="757" width="2.8829%" height="15" fill="rgb(215,98,4)" fg:x="59349" fg:w="3238"/><text x="53.0911%" y="767.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (52 samples, 0.05%)</title><rect x="55.6777%" y="741" width="0.0463%" height="15" fill="rgb(235,38,11)" fg:x="62535" fg:w="52"/><text x="55.9277%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (52 samples, 0.05%)</title><rect x="55.6777%" y="725" width="0.0463%" height="15" fill="rgb(254,186,25)" fg:x="62535" fg:w="52"/><text x="55.9277%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (52 samples, 0.05%)</title><rect x="55.6777%" y="709" width="0.0463%" height="15" fill="rgb(225,55,31)" fg:x="62535" fg:w="52"/><text x="55.9277%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (35 samples, 0.03%)</title><rect x="55.6929%" y="693" width="0.0312%" height="15" fill="rgb(211,15,21)" fg:x="62552" fg:w="35"/><text x="55.9429%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="55.7534%" y="789" width="0.0125%" height="15" fill="rgb(215,187,41)" fg:x="62620" fg:w="14"/><text x="56.0034%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (202 samples, 0.18%)</title><rect x="55.7659%" y="789" width="0.1798%" height="15" fill="rgb(248,69,32)" fg:x="62634" fg:w="202"/><text x="56.0159%" y="799.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (26 samples, 0.02%)</title><rect x="56.0909%" y="773" width="0.0231%" height="15" fill="rgb(252,102,52)" fg:x="62999" fg:w="26"/><text x="56.3409%" y="783.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (41 samples, 0.04%)</title><rect x="56.1140%" y="773" width="0.0365%" height="15" fill="rgb(253,140,32)" fg:x="63025" fg:w="41"/><text x="56.3640%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.04%)</title><rect x="56.1558%" y="757" width="0.0445%" height="15" fill="rgb(216,56,42)" fg:x="63072" fg:w="50"/><text x="56.4058%" y="767.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (12 samples, 0.01%)</title><rect x="56.1897%" y="741" width="0.0107%" height="15" fill="rgb(216,184,14)" fg:x="63110" fg:w="12"/><text x="56.4397%" y="751.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (242 samples, 0.22%)</title><rect x="56.1558%" y="773" width="0.2155%" height="15" fill="rgb(237,187,27)" fg:x="63072" fg:w="242"/><text x="56.4058%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (192 samples, 0.17%)</title><rect x="56.2004%" y="757" width="0.1709%" height="15" fill="rgb(219,65,3)" fg:x="63122" fg:w="192"/><text x="56.4504%" y="767.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (192 samples, 0.17%)</title><rect x="56.2004%" y="741" width="0.1709%" height="15" fill="rgb(245,83,25)" fg:x="63122" fg:w="192"/><text x="56.4504%" y="751.50"></text></g><g><title>core::ptr::read (192 samples, 0.17%)</title><rect x="56.2004%" y="725" width="0.1709%" height="15" fill="rgb(214,205,45)" fg:x="63122" fg:w="192"/><text x="56.4504%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (192 samples, 0.17%)</title><rect x="56.2004%" y="709" width="0.1709%" height="15" fill="rgb(241,20,18)" fg:x="63122" fg:w="192"/><text x="56.4504%" y="719.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="56.3962%" y="501" width="0.0107%" height="15" fill="rgb(232,163,23)" fg:x="63342" fg:w="12"/><text x="56.6462%" y="511.50"></text></g><g><title>rust_alloc (39 samples, 0.03%)</title><rect x="56.4069%" y="469" width="0.0347%" height="15" fill="rgb(214,5,46)" fg:x="63354" fg:w="39"/><text x="56.6569%" y="479.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="56.4416%" y="469" width="0.0107%" height="15" fill="rgb(229,78,17)" fg:x="63393" fg:w="12"/><text x="56.6916%" y="479.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="56.4416%" y="453" width="0.0107%" height="15" fill="rgb(248,89,10)" fg:x="63393" fg:w="12"/><text x="56.6916%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (23 samples, 0.02%)</title><rect x="56.4657%" y="389" width="0.0205%" height="15" fill="rgb(248,54,15)" fg:x="63420" fg:w="23"/><text x="56.7157%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (23 samples, 0.02%)</title><rect x="56.4657%" y="373" width="0.0205%" height="15" fill="rgb(223,116,6)" fg:x="63420" fg:w="23"/><text x="56.7157%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (21 samples, 0.02%)</title><rect x="56.4675%" y="357" width="0.0187%" height="15" fill="rgb(205,125,38)" fg:x="63422" fg:w="21"/><text x="56.7175%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (27 samples, 0.02%)</title><rect x="56.4657%" y="405" width="0.0240%" height="15" fill="rgb(251,78,38)" fg:x="63420" fg:w="27"/><text x="56.7157%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (37 samples, 0.03%)</title><rect x="56.4639%" y="421" width="0.0329%" height="15" fill="rgb(253,78,28)" fg:x="63418" fg:w="37"/><text x="56.7139%" y="431.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (14 samples, 0.01%)</title><rect x="56.5049%" y="405" width="0.0125%" height="15" fill="rgb(209,120,3)" fg:x="63464" fg:w="14"/><text x="56.7549%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (190 samples, 0.17%)</title><rect x="56.4639%" y="453" width="0.1692%" height="15" fill="rgb(238,229,9)" fg:x="63418" fg:w="190"/><text x="56.7139%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (190 samples, 0.17%)</title><rect x="56.4639%" y="437" width="0.1692%" height="15" fill="rgb(253,159,18)" fg:x="63418" fg:w="190"/><text x="56.7139%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (153 samples, 0.14%)</title><rect x="56.4968%" y="421" width="0.1362%" height="15" fill="rgb(244,42,34)" fg:x="63455" fg:w="153"/><text x="56.7468%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (130 samples, 0.12%)</title><rect x="56.5173%" y="405" width="0.1157%" height="15" fill="rgb(224,8,7)" fg:x="63478" fg:w="130"/><text x="56.7673%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (130 samples, 0.12%)</title><rect x="56.5173%" y="389" width="0.1157%" height="15" fill="rgb(210,201,45)" fg:x="63478" fg:w="130"/><text x="56.7673%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (130 samples, 0.12%)</title><rect x="56.5173%" y="373" width="0.1157%" height="15" fill="rgb(252,185,21)" fg:x="63478" fg:w="130"/><text x="56.7673%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::empty (86 samples, 0.08%)</title><rect x="56.6402%" y="453" width="0.0766%" height="15" fill="rgb(223,131,1)" fg:x="63616" fg:w="86"/><text x="56.8902%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (86 samples, 0.08%)</title><rect x="56.6402%" y="437" width="0.0766%" height="15" fill="rgb(245,141,16)" fg:x="63616" fg:w="86"/><text x="56.8902%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (1,032 samples, 0.92%)</title><rect x="56.4069%" y="501" width="0.9188%" height="15" fill="rgb(229,55,45)" fg:x="63354" fg:w="1032"/><text x="56.6569%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (1,032 samples, 0.92%)</title><rect x="56.4069%" y="485" width="0.9188%" height="15" fill="rgb(208,92,15)" fg:x="63354" fg:w="1032"/><text x="56.6569%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (981 samples, 0.87%)</title><rect x="56.4523%" y="469" width="0.8734%" height="15" fill="rgb(234,185,47)" fg:x="63405" fg:w="981"/><text x="56.7023%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (684 samples, 0.61%)</title><rect x="56.7168%" y="453" width="0.6090%" height="15" fill="rgb(253,104,50)" fg:x="63702" fg:w="684"/><text x="56.9668%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (684 samples, 0.61%)</title><rect x="56.7168%" y="437" width="0.6090%" height="15" fill="rgb(205,70,7)" fg:x="63702" fg:w="684"/><text x="56.9668%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,083 samples, 0.96%)</title><rect x="56.3767%" y="645" width="0.9642%" height="15" fill="rgb(240,178,43)" fg:x="63320" fg:w="1083"/><text x="56.6267%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,083 samples, 0.96%)</title><rect x="56.3767%" y="629" width="0.9642%" height="15" fill="rgb(214,112,2)" fg:x="63320" fg:w="1083"/><text x="56.6267%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,072 samples, 0.95%)</title><rect x="56.3864%" y="613" width="0.9544%" height="15" fill="rgb(206,46,17)" fg:x="63331" fg:w="1072"/><text x="56.6364%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,072 samples, 0.95%)</title><rect x="56.3864%" y="597" width="0.9544%" height="15" fill="rgb(225,220,16)" fg:x="63331" fg:w="1072"/><text x="56.6364%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,072 samples, 0.95%)</title><rect x="56.3864%" y="581" width="0.9544%" height="15" fill="rgb(238,65,40)" fg:x="63331" fg:w="1072"/><text x="56.6364%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1,066 samples, 0.95%)</title><rect x="56.3918%" y="565" width="0.9491%" height="15" fill="rgb(230,151,21)" fg:x="63337" fg:w="1066"/><text x="56.6418%" y="575.50"></text></g><g><title>__rg_alloc (1,066 samples, 0.95%)</title><rect x="56.3918%" y="549" width="0.9491%" height="15" fill="rgb(218,58,49)" fg:x="63337" fg:w="1066"/><text x="56.6418%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,066 samples, 0.95%)</title><rect x="56.3918%" y="533" width="0.9491%" height="15" fill="rgb(219,179,14)" fg:x="63337" fg:w="1066"/><text x="56.6418%" y="543.50"></text></g><g><title>rust_alloc (1,066 samples, 0.95%)</title><rect x="56.3918%" y="517" width="0.9491%" height="15" fill="rgb(223,72,1)" fg:x="63337" fg:w="1066"/><text x="56.6418%" y="527.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (17 samples, 0.02%)</title><rect x="57.3258%" y="501" width="0.0151%" height="15" fill="rgb(238,126,10)" fg:x="64386" fg:w="17"/><text x="57.5758%" y="511.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1,119 samples, 1.00%)</title><rect x="56.3767%" y="773" width="0.9963%" height="15" fill="rgb(224,206,38)" fg:x="63320" fg:w="1119"/><text x="56.6267%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,119 samples, 1.00%)</title><rect x="56.3767%" y="757" width="0.9963%" height="15" fill="rgb(212,201,54)" fg:x="63320" fg:w="1119"/><text x="56.6267%" y="767.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,119 samples, 1.00%)</title><rect x="56.3767%" y="741" width="0.9963%" height="15" fill="rgb(218,154,48)" fg:x="63320" fg:w="1119"/><text x="56.6267%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,119 samples, 1.00%)</title><rect x="56.3767%" y="725" width="0.9963%" height="15" fill="rgb(232,93,24)" fg:x="63320" fg:w="1119"/><text x="56.6267%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,119 samples, 1.00%)</title><rect x="56.3767%" y="709" width="0.9963%" height="15" fill="rgb(245,30,21)" fg:x="63320" fg:w="1119"/><text x="56.6267%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,119 samples, 1.00%)</title><rect x="56.3767%" y="693" width="0.9963%" height="15" fill="rgb(242,148,29)" fg:x="63320" fg:w="1119"/><text x="56.6267%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1,119 samples, 1.00%)</title><rect x="56.3767%" y="677" width="0.9963%" height="15" fill="rgb(244,153,54)" fg:x="63320" fg:w="1119"/><text x="56.6267%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,119 samples, 1.00%)</title><rect x="56.3767%" y="661" width="0.9963%" height="15" fill="rgb(252,87,22)" fg:x="63320" fg:w="1119"/><text x="56.6267%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (36 samples, 0.03%)</title><rect x="57.3409%" y="645" width="0.0321%" height="15" fill="rgb(210,51,29)" fg:x="64403" fg:w="36"/><text x="57.5909%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 0.03%)</title><rect x="57.3409%" y="629" width="0.0321%" height="15" fill="rgb(242,136,47)" fg:x="64403" fg:w="36"/><text x="57.5909%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (25 samples, 0.02%)</title><rect x="57.3507%" y="613" width="0.0223%" height="15" fill="rgb(238,68,4)" fg:x="64414" fg:w="25"/><text x="57.6007%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (936 samples, 0.83%)</title><rect x="57.3729%" y="773" width="0.8334%" height="15" fill="rgb(242,161,30)" fg:x="64439" fg:w="936"/><text x="57.6229%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (18 samples, 0.02%)</title><rect x="58.2063%" y="773" width="0.0160%" height="15" fill="rgb(218,58,44)" fg:x="65375" fg:w="18"/><text x="58.4563%" y="783.50"></text></g><g><title>core::mem::replace (23 samples, 0.02%)</title><rect x="58.2375%" y="741" width="0.0205%" height="15" fill="rgb(252,125,32)" fg:x="65410" fg:w="23"/><text x="58.4875%" y="751.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="58.2464%" y="725" width="0.0116%" height="15" fill="rgb(219,178,0)" fg:x="65420" fg:w="13"/><text x="58.4964%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (52 samples, 0.05%)</title><rect x="58.2223%" y="773" width="0.0463%" height="15" fill="rgb(213,152,7)" fg:x="65393" fg:w="52"/><text x="58.4723%" y="783.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.05%)</title><rect x="58.2223%" y="757" width="0.0463%" height="15" fill="rgb(249,109,34)" fg:x="65393" fg:w="52"/><text x="58.4723%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (12 samples, 0.01%)</title><rect x="58.2580%" y="741" width="0.0107%" height="15" fill="rgb(232,96,21)" fg:x="65433" fg:w="12"/><text x="58.5080%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="58.2580%" y="725" width="0.0107%" height="15" fill="rgb(228,27,39)" fg:x="65433" fg:w="12"/><text x="58.5080%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (19 samples, 0.02%)</title><rect x="58.2864%" y="773" width="0.0169%" height="15" fill="rgb(211,182,52)" fg:x="65465" fg:w="19"/><text x="58.5364%" y="783.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (15 samples, 0.01%)</title><rect x="58.3310%" y="725" width="0.0134%" height="15" fill="rgb(234,178,38)" fg:x="65515" fg:w="15"/><text x="58.5810%" y="735.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (235 samples, 0.21%)</title><rect x="58.3034%" y="773" width="0.2092%" height="15" fill="rgb(221,111,3)" fg:x="65484" fg:w="235"/><text x="58.5534%" y="783.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (207 samples, 0.18%)</title><rect x="58.3283%" y="757" width="0.1843%" height="15" fill="rgb(228,175,21)" fg:x="65512" fg:w="207"/><text x="58.5783%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (204 samples, 0.18%)</title><rect x="58.3310%" y="741" width="0.1816%" height="15" fill="rgb(228,174,43)" fg:x="65515" fg:w="204"/><text x="58.5810%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (189 samples, 0.17%)</title><rect x="58.3443%" y="725" width="0.1683%" height="15" fill="rgb(211,191,0)" fg:x="65530" fg:w="189"/><text x="58.5943%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (189 samples, 0.17%)</title><rect x="58.3443%" y="709" width="0.1683%" height="15" fill="rgb(253,117,3)" fg:x="65530" fg:w="189"/><text x="58.5943%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (189 samples, 0.17%)</title><rect x="58.3443%" y="693" width="0.1683%" height="15" fill="rgb(241,127,19)" fg:x="65530" fg:w="189"/><text x="58.5943%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (189 samples, 0.17%)</title><rect x="58.3443%" y="677" width="0.1683%" height="15" fill="rgb(218,103,12)" fg:x="65530" fg:w="189"/><text x="58.5943%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (189 samples, 0.17%)</title><rect x="58.3443%" y="661" width="0.1683%" height="15" fill="rgb(236,214,43)" fg:x="65530" fg:w="189"/><text x="58.5943%" y="671.50"></text></g><g><title>__memcmp_avx2_movbe (125 samples, 0.11%)</title><rect x="58.4013%" y="645" width="0.1113%" height="15" fill="rgb(244,144,19)" fg:x="65594" fg:w="125"/><text x="58.6513%" y="655.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18,223 samples, 16.22%)</title><rect x="42.3430%" y="1109" width="16.2248%" height="15" fill="rgb(246,188,10)" fg:x="47558" fg:w="18223"/><text x="42.5930%" y="1119.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,219 samples, 16.22%)</title><rect x="42.3466%" y="1093" width="16.2212%" height="15" fill="rgb(212,193,33)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="1103.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}} (18,219 samples, 16.22%)</title><rect x="42.3466%" y="1077" width="16.2212%" height="15" fill="rgb(241,51,29)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="1087.50">async_executor::Executor:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18,219 samples, 16.22%)</title><rect x="42.3466%" y="1061" width="16.2212%" height="15" fill="rgb(211,58,19)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="1071.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,219 samples, 16.22%)</title><rect x="42.3466%" y="1045" width="16.2212%" height="15" fill="rgb(229,111,26)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="1055.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (18,219 samples, 16.22%)</title><rect x="42.3466%" y="1029" width="16.2212%" height="15" fill="rgb(213,115,40)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="1039.50">async_executor::Executor:..</text></g><g><title>async_task::runnable::Runnable::run (18,219 samples, 16.22%)</title><rect x="42.3466%" y="1013" width="16.2212%" height="15" fill="rgb(209,56,44)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="1023.50">async_task::runnable::Run..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (18,219 samples, 16.22%)</title><rect x="42.3466%" y="997" width="16.2212%" height="15" fill="rgb(230,108,32)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="1007.50">async_task::raw::RawTask&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (18,219 samples, 16.22%)</title><rect x="42.3466%" y="981" width="16.2212%" height="15" fill="rgb(216,165,31)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="991.50">&lt;core::pin::Pin&lt;P&gt; as cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,219 samples, 16.22%)</title><rect x="42.3466%" y="965" width="16.2212%" height="15" fill="rgb(218,122,21)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="975.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (18,219 samples, 16.22%)</title><rect x="42.3466%" y="949" width="16.2212%" height="15" fill="rgb(223,224,47)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="959.50">async_executor::Executor:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (18,219 samples, 16.22%)</title><rect x="42.3466%" y="933" width="16.2212%" height="15" fill="rgb(238,102,44)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="943.50">&lt;async_std::task::builder..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (18,219 samples, 16.22%)</title><rect x="42.3466%" y="917" width="16.2212%" height="15" fill="rgb(236,46,40)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="927.50">async_std::task::task_loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18,219 samples, 16.22%)</title><rect x="42.3466%" y="901" width="16.2212%" height="15" fill="rgb(247,202,50)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="911.50">std::thread::local::Local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18,219 samples, 16.22%)</title><rect x="42.3466%" y="885" width="16.2212%" height="15" fill="rgb(209,99,20)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="895.50">std::thread::local::Local..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (18,219 samples, 16.22%)</title><rect x="42.3466%" y="869" width="16.2212%" height="15" fill="rgb(252,27,34)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="879.50">async_std::task::task_loc..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (18,219 samples, 16.22%)</title><rect x="42.3466%" y="853" width="16.2212%" height="15" fill="rgb(215,206,23)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="863.50">&lt;async_std::task::builder..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,219 samples, 16.22%)</title><rect x="42.3466%" y="837" width="16.2212%" height="15" fill="rgb(212,135,36)" fg:x="47562" fg:w="18219"/><text x="42.5966%" y="847.50">&lt;core::future::from_gener..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,194 samples, 2.84%)</title><rect x="55.7240%" y="821" width="2.8438%" height="15" fill="rgb(240,189,1)" fg:x="62587" fg:w="3194"/><text x="55.9740%" y="831.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,194 samples, 2.84%)</title><rect x="55.7240%" y="805" width="2.8438%" height="15" fill="rgb(242,56,20)" fg:x="62587" fg:w="3194"/><text x="55.9740%" y="815.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (2,945 samples, 2.62%)</title><rect x="55.9457%" y="789" width="2.6221%" height="15" fill="rgb(247,132,33)" fg:x="62836" fg:w="2945"/><text x="56.1957%" y="799.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (62 samples, 0.06%)</title><rect x="58.5126%" y="773" width="0.0552%" height="15" fill="rgb(208,149,11)" fg:x="65719" fg:w="62"/><text x="58.7626%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (62 samples, 0.06%)</title><rect x="58.5126%" y="757" width="0.0552%" height="15" fill="rgb(211,33,11)" fg:x="65719" fg:w="62"/><text x="58.7626%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (62 samples, 0.06%)</title><rect x="58.5126%" y="741" width="0.0552%" height="15" fill="rgb(221,29,38)" fg:x="65719" fg:w="62"/><text x="58.7626%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (44 samples, 0.04%)</title><rect x="58.5286%" y="725" width="0.0392%" height="15" fill="rgb(206,182,49)" fg:x="65737" fg:w="44"/><text x="58.7786%" y="735.50"></text></g><g><title>async_io::driver::block_on (18,229 samples, 16.23%)</title><rect x="42.3430%" y="1125" width="16.2301%" height="15" fill="rgb(216,140,1)" fg:x="47558" fg:w="18229"/><text x="42.5930%" y="1135.50">async_io::driver::block_on</text></g><g><title>__memcpy_avx_unaligned_erms (738 samples, 0.66%)</title><rect x="58.6729%" y="869" width="0.6571%" height="15" fill="rgb(232,57,40)" fg:x="65899" fg:w="738"/><text x="58.9229%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (784 samples, 0.70%)</title><rect x="58.6417%" y="885" width="0.6980%" height="15" fill="rgb(224,186,18)" fg:x="65864" fg:w="784"/><text x="58.8917%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,080 samples, 0.96%)</title><rect x="58.5776%" y="901" width="0.9616%" height="15" fill="rgb(215,121,11)" fg:x="65792" fg:w="1080"/><text x="58.8276%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (224 samples, 0.20%)</title><rect x="59.3397%" y="885" width="0.1994%" height="15" fill="rgb(245,147,10)" fg:x="66648" fg:w="224"/><text x="59.5897%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,088 samples, 0.97%)</title><rect x="58.5731%" y="933" width="0.9687%" height="15" fill="rgb(238,153,13)" fg:x="65787" fg:w="1088"/><text x="58.8231%" y="943.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,088 samples, 0.97%)</title><rect x="58.5731%" y="917" width="0.9687%" height="15" fill="rgb(233,108,0)" fg:x="65787" fg:w="1088"/><text x="58.8231%" y="927.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="59.5561%" y="597" width="0.0125%" height="15" fill="rgb(212,157,17)" fg:x="66891" fg:w="14"/><text x="59.8061%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::result::RResult&lt;T,E&gt; as core::convert::From&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::from (14 samples, 0.01%)</title><rect x="59.5561%" y="581" width="0.0125%" height="15" fill="rgb(225,213,38)" fg:x="66891" fg:w="14"/><text x="59.8061%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (59 samples, 0.05%)</title><rect x="59.5774%" y="597" width="0.0525%" height="15" fill="rgb(248,16,11)" fg:x="66915" fg:w="59"/><text x="59.8274%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (45 samples, 0.04%)</title><rect x="59.5899%" y="581" width="0.0401%" height="15" fill="rgb(241,33,4)" fg:x="66929" fg:w="45"/><text x="59.8399%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (35 samples, 0.03%)</title><rect x="59.5988%" y="565" width="0.0312%" height="15" fill="rgb(222,26,43)" fg:x="66939" fg:w="35"/><text x="59.8488%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (150 samples, 0.13%)</title><rect x="59.6300%" y="597" width="0.1336%" height="15" fill="rgb(243,29,36)" fg:x="66974" fg:w="150"/><text x="59.8800%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (16 samples, 0.01%)</title><rect x="59.7902%" y="581" width="0.0142%" height="15" fill="rgb(241,9,27)" fg:x="67154" fg:w="16"/><text x="60.0402%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (14 samples, 0.01%)</title><rect x="59.7920%" y="565" width="0.0125%" height="15" fill="rgb(205,117,26)" fg:x="67156" fg:w="14"/><text x="60.0420%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (601 samples, 0.54%)</title><rect x="59.8045%" y="581" width="0.5351%" height="15" fill="rgb(209,80,39)" fg:x="67170" fg:w="601"/><text x="60.0545%" y="591.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (1,991 samples, 1.77%)</title><rect x="58.5731%" y="949" width="1.7727%" height="15" fill="rgb(239,155,6)" fg:x="65787" fg:w="1991"/><text x="58.8231%" y="959.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (903 samples, 0.80%)</title><rect x="59.5418%" y="933" width="0.8040%" height="15" fill="rgb(212,104,12)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="943.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (903 samples, 0.80%)</title><rect x="59.5418%" y="917" width="0.8040%" height="15" fill="rgb(234,204,3)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="927.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (903 samples, 0.80%)</title><rect x="59.5418%" y="901" width="0.8040%" height="15" fill="rgb(251,218,7)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (903 samples, 0.80%)</title><rect x="59.5418%" y="885" width="0.8040%" height="15" fill="rgb(221,81,32)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="895.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (903 samples, 0.80%)</title><rect x="59.5418%" y="869" width="0.8040%" height="15" fill="rgb(214,152,26)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="879.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (903 samples, 0.80%)</title><rect x="59.5418%" y="853" width="0.8040%" height="15" fill="rgb(223,22,3)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="863.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (903 samples, 0.80%)</title><rect x="59.5418%" y="837" width="0.8040%" height="15" fill="rgb(207,174,7)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="847.50"></text></g><g><title>std::panic::catch_unwind (903 samples, 0.80%)</title><rect x="59.5418%" y="821" width="0.8040%" height="15" fill="rgb(224,19,52)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="831.50"></text></g><g><title>std::panicking::try (903 samples, 0.80%)</title><rect x="59.5418%" y="805" width="0.8040%" height="15" fill="rgb(228,24,14)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="815.50"></text></g><g><title>std::panicking::try::do_call (903 samples, 0.80%)</title><rect x="59.5418%" y="789" width="0.8040%" height="15" fill="rgb(230,153,43)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (903 samples, 0.80%)</title><rect x="59.5418%" y="773" width="0.8040%" height="15" fill="rgb(231,106,12)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (903 samples, 0.80%)</title><rect x="59.5418%" y="757" width="0.8040%" height="15" fill="rgb(215,92,2)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (903 samples, 0.80%)</title><rect x="59.5418%" y="741" width="0.8040%" height="15" fill="rgb(249,143,25)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="751.50"></text></g><g><title>async_ffi::FfiContext::with_context (903 samples, 0.80%)</title><rect x="59.5418%" y="725" width="0.8040%" height="15" fill="rgb(252,7,35)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="735.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (903 samples, 0.80%)</title><rect x="59.5418%" y="709" width="0.8040%" height="15" fill="rgb(216,69,40)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (903 samples, 0.80%)</title><rect x="59.5418%" y="693" width="0.8040%" height="15" fill="rgb(240,36,33)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="703.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (903 samples, 0.80%)</title><rect x="59.5418%" y="677" width="0.8040%" height="15" fill="rgb(231,128,14)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (903 samples, 0.80%)</title><rect x="59.5418%" y="661" width="0.8040%" height="15" fill="rgb(245,143,14)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="671.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (903 samples, 0.80%)</title><rect x="59.5418%" y="645" width="0.8040%" height="15" fill="rgb(222,130,28)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="655.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (903 samples, 0.80%)</title><rect x="59.5418%" y="629" width="0.8040%" height="15" fill="rgb(212,10,48)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (903 samples, 0.80%)</title><rect x="59.5418%" y="613" width="0.8040%" height="15" fill="rgb(254,118,45)" fg:x="66875" fg:w="903"/><text x="59.7918%" y="623.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (654 samples, 0.58%)</title><rect x="59.7635%" y="597" width="0.5823%" height="15" fill="rgb(228,6,45)" fg:x="67124" fg:w="654"/><text x="60.0135%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (93 samples, 0.08%)</title><rect x="60.3636%" y="853" width="0.0828%" height="15" fill="rgb(241,18,35)" fg:x="67798" fg:w="93"/><text x="60.6136%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (400 samples, 0.36%)</title><rect x="60.6539%" y="773" width="0.3561%" height="15" fill="rgb(227,214,53)" fg:x="68124" fg:w="400"/><text x="60.9039%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (400 samples, 0.36%)</title><rect x="60.6539%" y="757" width="0.3561%" height="15" fill="rgb(224,107,51)" fg:x="68124" fg:w="400"/><text x="60.9039%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (368 samples, 0.33%)</title><rect x="61.0100%" y="773" width="0.3276%" height="15" fill="rgb(248,60,28)" fg:x="68524" fg:w="368"/><text x="61.2600%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (365 samples, 0.32%)</title><rect x="61.0127%" y="757" width="0.3250%" height="15" fill="rgb(249,101,23)" fg:x="68527" fg:w="365"/><text x="61.2627%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (895 samples, 0.80%)</title><rect x="60.5479%" y="805" width="0.7969%" height="15" fill="rgb(228,51,19)" fg:x="68005" fg:w="895"/><text x="60.7979%" y="815.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (845 samples, 0.75%)</title><rect x="60.5924%" y="789" width="0.7523%" height="15" fill="rgb(213,20,6)" fg:x="68055" fg:w="845"/><text x="60.8424%" y="799.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (70 samples, 0.06%)</title><rect x="61.3644%" y="709" width="0.0623%" height="15" fill="rgb(212,124,10)" fg:x="68922" fg:w="70"/><text x="61.6144%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (75 samples, 0.07%)</title><rect x="61.3608%" y="789" width="0.0668%" height="15" fill="rgb(248,3,40)" fg:x="68918" fg:w="75"/><text x="61.6108%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (73 samples, 0.06%)</title><rect x="61.3626%" y="773" width="0.0650%" height="15" fill="rgb(223,178,23)" fg:x="68920" fg:w="73"/><text x="61.6126%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.06%)</title><rect x="61.3626%" y="757" width="0.0650%" height="15" fill="rgb(240,132,45)" fg:x="68920" fg:w="73"/><text x="61.6126%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (72 samples, 0.06%)</title><rect x="61.3635%" y="741" width="0.0641%" height="15" fill="rgb(245,164,36)" fg:x="68921" fg:w="72"/><text x="61.6135%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (71 samples, 0.06%)</title><rect x="61.3644%" y="725" width="0.0632%" height="15" fill="rgb(231,188,53)" fg:x="68922" fg:w="71"/><text x="61.6144%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (43 samples, 0.04%)</title><rect x="61.4276%" y="789" width="0.0383%" height="15" fill="rgb(237,198,39)" fg:x="68993" fg:w="43"/><text x="61.6776%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (43 samples, 0.04%)</title><rect x="61.4276%" y="773" width="0.0383%" height="15" fill="rgb(223,120,35)" fg:x="68993" fg:w="43"/><text x="61.6776%" y="783.50"></text></g><g><title>event_listener::Inner::lock (126 samples, 0.11%)</title><rect x="61.4703%" y="789" width="0.1122%" height="15" fill="rgb(253,107,49)" fg:x="69041" fg:w="126"/><text x="61.7203%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (124 samples, 0.11%)</title><rect x="61.4721%" y="773" width="0.1104%" height="15" fill="rgb(216,44,31)" fg:x="69043" fg:w="124"/><text x="61.7221%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (119 samples, 0.11%)</title><rect x="61.4765%" y="757" width="0.1060%" height="15" fill="rgb(253,87,21)" fg:x="69048" fg:w="119"/><text x="61.7265%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (112 samples, 0.10%)</title><rect x="61.4828%" y="741" width="0.0997%" height="15" fill="rgb(226,18,2)" fg:x="69055" fg:w="112"/><text x="61.7328%" y="751.50"></text></g><g><title>___pthread_mutex_lock (112 samples, 0.10%)</title><rect x="61.4828%" y="725" width="0.0997%" height="15" fill="rgb(216,8,46)" fg:x="69055" fg:w="112"/><text x="61.7328%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (15 samples, 0.01%)</title><rect x="61.5941%" y="757" width="0.0134%" height="15" fill="rgb(226,140,39)" fg:x="69180" fg:w="15"/><text x="61.8441%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.01%)</title><rect x="61.5941%" y="741" width="0.0134%" height="15" fill="rgb(221,194,54)" fg:x="69180" fg:w="15"/><text x="61.8441%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.01%)</title><rect x="61.5941%" y="725" width="0.0134%" height="15" fill="rgb(213,92,11)" fg:x="69180" fg:w="15"/><text x="61.8441%" y="735.50"></text></g><g><title>async_executor::Sleepers::notify (14 samples, 0.01%)</title><rect x="61.6110%" y="693" width="0.0125%" height="15" fill="rgb(229,162,46)" fg:x="69199" fg:w="14"/><text x="61.8610%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (14 samples, 0.01%)</title><rect x="61.6110%" y="677" width="0.0125%" height="15" fill="rgb(214,111,36)" fg:x="69199" fg:w="14"/><text x="61.8610%" y="687.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="61.6119%" y="661" width="0.0116%" height="15" fill="rgb(207,6,21)" fg:x="69200" fg:w="13"/><text x="61.8619%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (79 samples, 0.07%)</title><rect x="61.6235%" y="693" width="0.0703%" height="15" fill="rgb(213,127,38)" fg:x="69213" fg:w="79"/><text x="61.8735%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.07%)</title><rect x="61.6235%" y="677" width="0.0703%" height="15" fill="rgb(238,118,32)" fg:x="69213" fg:w="79"/><text x="61.8735%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (78 samples, 0.07%)</title><rect x="61.6243%" y="661" width="0.0694%" height="15" fill="rgb(240,139,39)" fg:x="69214" fg:w="78"/><text x="61.8743%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (78 samples, 0.07%)</title><rect x="61.6243%" y="645" width="0.0694%" height="15" fill="rgb(235,10,37)" fg:x="69214" fg:w="78"/><text x="61.8743%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (78 samples, 0.07%)</title><rect x="61.6243%" y="629" width="0.0694%" height="15" fill="rgb(249,171,38)" fg:x="69214" fg:w="78"/><text x="61.8743%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (52 samples, 0.05%)</title><rect x="61.6938%" y="693" width="0.0463%" height="15" fill="rgb(242,144,32)" fg:x="69292" fg:w="52"/><text x="61.9438%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (52 samples, 0.05%)</title><rect x="61.6938%" y="677" width="0.0463%" height="15" fill="rgb(217,117,21)" fg:x="69292" fg:w="52"/><text x="61.9438%" y="687.50"></text></g><g><title>async_executor::State::notify (265 samples, 0.24%)</title><rect x="61.6110%" y="709" width="0.2359%" height="15" fill="rgb(249,87,1)" fg:x="69199" fg:w="265"/><text x="61.8610%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (120 samples, 0.11%)</title><rect x="61.7401%" y="693" width="0.1068%" height="15" fill="rgb(248,196,48)" fg:x="69344" fg:w="120"/><text x="61.9901%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (112 samples, 0.10%)</title><rect x="61.7472%" y="677" width="0.0997%" height="15" fill="rgb(251,206,33)" fg:x="69352" fg:w="112"/><text x="61.9972%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (103 samples, 0.09%)</title><rect x="61.7552%" y="661" width="0.0917%" height="15" fill="rgb(232,141,28)" fg:x="69361" fg:w="103"/><text x="62.0052%" y="671.50"></text></g><g><title>___pthread_mutex_lock (103 samples, 0.09%)</title><rect x="61.7552%" y="645" width="0.0917%" height="15" fill="rgb(209,167,14)" fg:x="69361" fg:w="103"/><text x="62.0052%" y="655.50"></text></g><g><title>__GI___lll_lock_wait (28 samples, 0.02%)</title><rect x="61.8220%" y="629" width="0.0249%" height="15" fill="rgb(225,11,50)" fg:x="69436" fg:w="28"/><text x="62.0720%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (78 samples, 0.07%)</title><rect x="61.8630%" y="677" width="0.0694%" height="15" fill="rgb(209,50,20)" fg:x="69482" fg:w="78"/><text x="62.1130%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (78 samples, 0.07%)</title><rect x="61.8630%" y="661" width="0.0694%" height="15" fill="rgb(212,17,46)" fg:x="69482" fg:w="78"/><text x="62.1130%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (35 samples, 0.03%)</title><rect x="61.9333%" y="677" width="0.0312%" height="15" fill="rgb(216,101,39)" fg:x="69561" fg:w="35"/><text x="62.1833%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_or (35 samples, 0.03%)</title><rect x="61.9333%" y="661" width="0.0312%" height="15" fill="rgb(212,228,48)" fg:x="69561" fg:w="35"/><text x="62.1833%" y="671.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (400 samples, 0.36%)</title><rect x="61.6110%" y="725" width="0.3561%" height="15" fill="rgb(250,6,50)" fg:x="69199" fg:w="400"/><text x="61.8610%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (135 samples, 0.12%)</title><rect x="61.8469%" y="709" width="0.1202%" height="15" fill="rgb(250,160,48)" fg:x="69464" fg:w="135"/><text x="62.0969%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (128 samples, 0.11%)</title><rect x="61.8532%" y="693" width="0.1140%" height="15" fill="rgb(244,216,33)" fg:x="69471" fg:w="128"/><text x="62.1032%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (94 samples, 0.08%)</title><rect x="61.9671%" y="725" width="0.0837%" height="15" fill="rgb(207,157,5)" fg:x="69599" fg:w="94"/><text x="62.2171%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (94 samples, 0.08%)</title><rect x="61.9671%" y="709" width="0.0837%" height="15" fill="rgb(228,199,8)" fg:x="69599" fg:w="94"/><text x="62.2171%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (22 samples, 0.02%)</title><rect x="62.0508%" y="725" width="0.0196%" height="15" fill="rgb(227,80,20)" fg:x="69693" fg:w="22"/><text x="62.3008%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.02%)</title><rect x="62.0508%" y="709" width="0.0196%" height="15" fill="rgb(222,9,33)" fg:x="69693" fg:w="22"/><text x="62.3008%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (46 samples, 0.04%)</title><rect x="62.1042%" y="661" width="0.0410%" height="15" fill="rgb(239,44,28)" fg:x="69753" fg:w="46"/><text x="62.3542%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_swap (46 samples, 0.04%)</title><rect x="62.1042%" y="645" width="0.0410%" height="15" fill="rgb(249,187,43)" fg:x="69753" fg:w="46"/><text x="62.3542%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (37 samples, 0.03%)</title><rect x="62.1452%" y="661" width="0.0329%" height="15" fill="rgb(216,141,28)" fg:x="69799" fg:w="37"/><text x="62.3952%" y="671.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (37 samples, 0.03%)</title><rect x="62.1452%" y="645" width="0.0329%" height="15" fill="rgb(230,154,53)" fg:x="69799" fg:w="37"/><text x="62.3952%" y="655.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (37 samples, 0.03%)</title><rect x="62.1452%" y="629" width="0.0329%" height="15" fill="rgb(227,82,4)" fg:x="69799" fg:w="37"/><text x="62.3952%" y="639.50"></text></g><g><title>__GI___pthread_cond_signal (37 samples, 0.03%)</title><rect x="62.1452%" y="613" width="0.0329%" height="15" fill="rgb(220,107,16)" fg:x="69799" fg:w="37"/><text x="62.3952%" y="623.50"></text></g><g><title>parking::Inner::unpark (113 samples, 0.10%)</title><rect x="62.0971%" y="677" width="0.1006%" height="15" fill="rgb(207,187,2)" fg:x="69745" fg:w="113"/><text x="62.3471%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.02%)</title><rect x="62.1781%" y="661" width="0.0196%" height="15" fill="rgb(210,162,52)" fg:x="69836" fg:w="22"/><text x="62.4281%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="62.1799%" y="645" width="0.0178%" height="15" fill="rgb(217,216,49)" fg:x="69838" fg:w="20"/><text x="62.4299%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.02%)</title><rect x="62.1799%" y="629" width="0.0178%" height="15" fill="rgb(218,146,49)" fg:x="69838" fg:w="20"/><text x="62.4299%" y="639.50"></text></g><g><title>___pthread_mutex_lock (20 samples, 0.02%)</title><rect x="62.1799%" y="613" width="0.0178%" height="15" fill="rgb(216,55,40)" fg:x="69838" fg:w="20"/><text x="62.4299%" y="623.50"></text></g><g><title>parking::Unparker::unpark (131 samples, 0.12%)</title><rect x="62.0820%" y="693" width="0.1166%" height="15" fill="rgb(208,196,21)" fg:x="69728" fg:w="131"/><text x="62.3320%" y="703.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (153 samples, 0.14%)</title><rect x="62.0704%" y="709" width="0.1362%" height="15" fill="rgb(242,117,42)" fg:x="69715" fg:w="153"/><text x="62.3204%" y="719.50"></text></g><g><title>event_listener::List::notify (747 samples, 0.67%)</title><rect x="61.5825%" y="789" width="0.6651%" height="15" fill="rgb(210,11,23)" fg:x="69167" fg:w="747"/><text x="61.8325%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (738 samples, 0.66%)</title><rect x="61.5905%" y="773" width="0.6571%" height="15" fill="rgb(217,110,2)" fg:x="69176" fg:w="738"/><text x="61.8405%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (719 samples, 0.64%)</title><rect x="61.6074%" y="757" width="0.6402%" height="15" fill="rgb(229,77,54)" fg:x="69195" fg:w="719"/><text x="61.8574%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (717 samples, 0.64%)</title><rect x="61.6092%" y="741" width="0.6384%" height="15" fill="rgb(218,53,16)" fg:x="69197" fg:w="717"/><text x="61.8592%" y="751.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (199 samples, 0.18%)</title><rect x="62.0704%" y="725" width="0.1772%" height="15" fill="rgb(215,38,13)" fg:x="69715" fg:w="199"/><text x="62.3204%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (46 samples, 0.04%)</title><rect x="62.2066%" y="709" width="0.0410%" height="15" fill="rgb(235,42,18)" fg:x="69868" fg:w="46"/><text x="62.4566%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="62.2066%" y="693" width="0.0410%" height="15" fill="rgb(219,66,54)" fg:x="69868" fg:w="46"/><text x="62.4566%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (44 samples, 0.04%)</title><rect x="62.2084%" y="677" width="0.0392%" height="15" fill="rgb(222,205,4)" fg:x="69870" fg:w="44"/><text x="62.4584%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (44 samples, 0.04%)</title><rect x="62.2084%" y="661" width="0.0392%" height="15" fill="rgb(227,213,46)" fg:x="69870" fg:w="44"/><text x="62.4584%" y="671.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,623 samples, 2.34%)</title><rect x="60.5381%" y="821" width="2.3354%" height="15" fill="rgb(250,145,42)" fg:x="67994" fg:w="2623"/><text x="60.7881%" y="831.50">a..</text></g><g><title>event_listener::Event::notify (1,717 samples, 1.53%)</title><rect x="61.3448%" y="805" width="1.5287%" height="15" fill="rgb(219,15,2)" fg:x="68900" fg:w="1717"/><text x="61.5948%" y="815.50"></text></g><g><title>event_listener::full_fence (703 samples, 0.63%)</title><rect x="62.2476%" y="789" width="0.6259%" height="15" fill="rgb(231,181,52)" fg:x="69914" fg:w="703"/><text x="62.4976%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (696 samples, 0.62%)</title><rect x="62.2538%" y="773" width="0.6197%" height="15" fill="rgb(235,1,42)" fg:x="69921" fg:w="696"/><text x="62.5038%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (696 samples, 0.62%)</title><rect x="62.2538%" y="757" width="0.6197%" height="15" fill="rgb(249,88,27)" fg:x="69921" fg:w="696"/><text x="62.5038%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (18 samples, 0.02%)</title><rect x="62.8735%" y="821" width="0.0160%" height="15" fill="rgb(235,145,16)" fg:x="70617" fg:w="18"/><text x="63.1235%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (18 samples, 0.02%)</title><rect x="62.8895%" y="821" width="0.0160%" height="15" fill="rgb(237,114,19)" fg:x="70635" fg:w="18"/><text x="63.1395%" y="831.50"></text></g><g><title>core::mem::replace (18 samples, 0.02%)</title><rect x="62.8895%" y="805" width="0.0160%" height="15" fill="rgb(238,51,50)" fg:x="70635" fg:w="18"/><text x="63.1395%" y="815.50"></text></g><g><title>core::ptr::write (12 samples, 0.01%)</title><rect x="62.8949%" y="789" width="0.0107%" height="15" fill="rgb(205,194,25)" fg:x="70641" fg:w="12"/><text x="63.1449%" y="799.50"></text></g><g><title>event_listener::Event::listen (17 samples, 0.02%)</title><rect x="62.9064%" y="821" width="0.0151%" height="15" fill="rgb(215,203,17)" fg:x="70654" fg:w="17"/><text x="63.1564%" y="831.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,910 samples, 2.59%)</title><rect x="60.4945%" y="837" width="2.5909%" height="15" fill="rgb(233,112,49)" fg:x="67945" fg:w="2910"/><text x="60.7445%" y="847.50">&lt;a..</text></g><g><title>event_listener::Event::notify (184 samples, 0.16%)</title><rect x="62.9216%" y="821" width="0.1638%" height="15" fill="rgb(241,130,26)" fg:x="70671" fg:w="184"/><text x="63.1716%" y="831.50"></text></g><g><title>event_listener::full_fence (167 samples, 0.15%)</title><rect x="62.9367%" y="805" width="0.1487%" height="15" fill="rgb(252,223,19)" fg:x="70688" fg:w="167"/><text x="63.1867%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (167 samples, 0.15%)</title><rect x="62.9367%" y="789" width="0.1487%" height="15" fill="rgb(211,95,25)" fg:x="70688" fg:w="167"/><text x="63.1867%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (167 samples, 0.15%)</title><rect x="62.9367%" y="773" width="0.1487%" height="15" fill="rgb(251,182,27)" fg:x="70688" fg:w="167"/><text x="63.1867%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,100 samples, 2.76%)</title><rect x="60.3458%" y="869" width="2.7601%" height="15" fill="rgb(238,24,4)" fg:x="67778" fg:w="3100"/><text x="60.5958%" y="879.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,987 samples, 2.66%)</title><rect x="60.4464%" y="853" width="2.6595%" height="15" fill="rgb(224,220,25)" fg:x="67891" fg:w="2987"/><text x="60.6964%" y="863.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="63.0854%" y="837" width="0.0205%" height="15" fill="rgb(239,133,26)" fg:x="70855" fg:w="23"/><text x="63.3354%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (12 samples, 0.01%)</title><rect x="63.0952%" y="821" width="0.0107%" height="15" fill="rgb(211,94,48)" fg:x="70866" fg:w="12"/><text x="63.3452%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (12 samples, 0.01%)</title><rect x="63.0952%" y="805" width="0.0107%" height="15" fill="rgb(239,87,6)" fg:x="70866" fg:w="12"/><text x="63.3452%" y="815.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="63.0952%" y="789" width="0.0107%" height="15" fill="rgb(227,62,0)" fg:x="70866" fg:w="12"/><text x="63.3452%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,113 samples, 2.77%)</title><rect x="60.3458%" y="901" width="2.7716%" height="15" fill="rgb(211,226,4)" fg:x="67778" fg:w="3113"/><text x="60.5958%" y="911.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,113 samples, 2.77%)</title><rect x="60.3458%" y="885" width="2.7716%" height="15" fill="rgb(253,38,52)" fg:x="67778" fg:w="3113"/><text x="60.5958%" y="895.50">tr..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (13 samples, 0.01%)</title><rect x="63.1059%" y="869" width="0.0116%" height="15" fill="rgb(229,126,40)" fg:x="70878" fg:w="13"/><text x="63.3559%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (15 samples, 0.01%)</title><rect x="63.7968%" y="885" width="0.0134%" height="15" fill="rgb(229,165,44)" fg:x="71654" fg:w="15"/><text x="64.0468%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (15 samples, 0.01%)</title><rect x="63.7968%" y="869" width="0.0134%" height="15" fill="rgb(247,95,47)" fg:x="71654" fg:w="15"/><text x="64.0468%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (15 samples, 0.01%)</title><rect x="63.7968%" y="853" width="0.0134%" height="15" fill="rgb(216,140,30)" fg:x="71654" fg:w="15"/><text x="64.0468%" y="863.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="63.8101%" y="885" width="0.0205%" height="15" fill="rgb(246,214,8)" fg:x="71669" fg:w="23"/><text x="64.0601%" y="895.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="63.8306%" y="885" width="0.0205%" height="15" fill="rgb(227,224,15)" fg:x="71692" fg:w="23"/><text x="64.0806%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (229 samples, 0.20%)</title><rect x="64.4637%" y="613" width="0.2039%" height="15" fill="rgb(233,175,4)" fg:x="72403" fg:w="229"/><text x="64.7137%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (223 samples, 0.20%)</title><rect x="64.4690%" y="597" width="0.1985%" height="15" fill="rgb(221,66,45)" fg:x="72409" fg:w="223"/><text x="64.7190%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (213 samples, 0.19%)</title><rect x="64.4779%" y="581" width="0.1896%" height="15" fill="rgb(221,178,18)" fg:x="72419" fg:w="213"/><text x="64.7279%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (197 samples, 0.18%)</title><rect x="64.4921%" y="565" width="0.1754%" height="15" fill="rgb(213,81,29)" fg:x="72435" fg:w="197"/><text x="64.7421%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (197 samples, 0.18%)</title><rect x="64.4921%" y="549" width="0.1754%" height="15" fill="rgb(220,89,49)" fg:x="72435" fg:w="197"/><text x="64.7421%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (284 samples, 0.25%)</title><rect x="64.4263%" y="725" width="0.2529%" height="15" fill="rgb(227,60,33)" fg:x="72361" fg:w="284"/><text x="64.6763%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (284 samples, 0.25%)</title><rect x="64.4263%" y="709" width="0.2529%" height="15" fill="rgb(205,113,12)" fg:x="72361" fg:w="284"/><text x="64.6763%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (284 samples, 0.25%)</title><rect x="64.4263%" y="693" width="0.2529%" height="15" fill="rgb(211,32,1)" fg:x="72361" fg:w="284"/><text x="64.6763%" y="703.50"></text></g><g><title>alloc::alloc::alloc (275 samples, 0.24%)</title><rect x="64.4343%" y="677" width="0.2448%" height="15" fill="rgb(246,2,12)" fg:x="72370" fg:w="275"/><text x="64.6843%" y="687.50"></text></g><g><title>__rg_alloc (275 samples, 0.24%)</title><rect x="64.4343%" y="661" width="0.2448%" height="15" fill="rgb(243,37,27)" fg:x="72370" fg:w="275"/><text x="64.6843%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (275 samples, 0.24%)</title><rect x="64.4343%" y="645" width="0.2448%" height="15" fill="rgb(248,211,31)" fg:x="72370" fg:w="275"/><text x="64.6843%" y="655.50"></text></g><g><title>rust_alloc (257 samples, 0.23%)</title><rect x="64.4503%" y="629" width="0.2288%" height="15" fill="rgb(242,146,47)" fg:x="72388" fg:w="257"/><text x="64.7003%" y="639.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="64.6675%" y="613" width="0.0116%" height="15" fill="rgb(206,70,20)" fg:x="72632" fg:w="13"/><text x="64.9175%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (297 samples, 0.26%)</title><rect x="64.4263%" y="757" width="0.2644%" height="15" fill="rgb(215,10,51)" fg:x="72361" fg:w="297"/><text x="64.6763%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (297 samples, 0.26%)</title><rect x="64.4263%" y="741" width="0.2644%" height="15" fill="rgb(243,178,53)" fg:x="72361" fg:w="297"/><text x="64.6763%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (13 samples, 0.01%)</title><rect x="64.6791%" y="725" width="0.0116%" height="15" fill="rgb(233,221,20)" fg:x="72645" fg:w="13"/><text x="64.9291%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (413 samples, 0.37%)</title><rect x="64.4067%" y="853" width="0.3677%" height="15" fill="rgb(218,95,35)" fg:x="72339" fg:w="413"/><text x="64.6567%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (391 samples, 0.35%)</title><rect x="64.4263%" y="837" width="0.3481%" height="15" fill="rgb(229,13,5)" fg:x="72361" fg:w="391"/><text x="64.6763%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (391 samples, 0.35%)</title><rect x="64.4263%" y="821" width="0.3481%" height="15" fill="rgb(252,164,30)" fg:x="72361" fg:w="391"/><text x="64.6763%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (391 samples, 0.35%)</title><rect x="64.4263%" y="805" width="0.3481%" height="15" fill="rgb(232,68,36)" fg:x="72361" fg:w="391"/><text x="64.6763%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (391 samples, 0.35%)</title><rect x="64.4263%" y="789" width="0.3481%" height="15" fill="rgb(219,59,54)" fg:x="72361" fg:w="391"/><text x="64.6763%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (391 samples, 0.35%)</title><rect x="64.4263%" y="773" width="0.3481%" height="15" fill="rgb(250,92,33)" fg:x="72361" fg:w="391"/><text x="64.6763%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (94 samples, 0.08%)</title><rect x="64.6907%" y="757" width="0.0837%" height="15" fill="rgb(229,162,54)" fg:x="72658" fg:w="94"/><text x="64.9407%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (94 samples, 0.08%)</title><rect x="64.6907%" y="741" width="0.0837%" height="15" fill="rgb(244,114,52)" fg:x="72658" fg:w="94"/><text x="64.9407%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (66 samples, 0.06%)</title><rect x="64.7156%" y="725" width="0.0588%" height="15" fill="rgb(212,211,43)" fg:x="72686" fg:w="66"/><text x="64.9656%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (425 samples, 0.38%)</title><rect x="64.3978%" y="869" width="0.3784%" height="15" fill="rgb(226,147,8)" fg:x="72329" fg:w="425"/><text x="64.6478%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (29 samples, 0.03%)</title><rect x="64.7895%" y="853" width="0.0258%" height="15" fill="rgb(226,23,13)" fg:x="72769" fg:w="29"/><text x="65.0395%" y="863.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (29 samples, 0.03%)</title><rect x="64.7895%" y="837" width="0.0258%" height="15" fill="rgb(240,63,4)" fg:x="72769" fg:w="29"/><text x="65.0395%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (111 samples, 0.10%)</title><rect x="64.8429%" y="517" width="0.0988%" height="15" fill="rgb(221,1,32)" fg:x="72829" fg:w="111"/><text x="65.0929%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (108 samples, 0.10%)</title><rect x="64.8456%" y="501" width="0.0962%" height="15" fill="rgb(242,117,10)" fg:x="72832" fg:w="108"/><text x="65.0956%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (105 samples, 0.09%)</title><rect x="64.8483%" y="485" width="0.0935%" height="15" fill="rgb(249,172,44)" fg:x="72835" fg:w="105"/><text x="65.0983%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (95 samples, 0.08%)</title><rect x="64.8572%" y="469" width="0.0846%" height="15" fill="rgb(244,46,45)" fg:x="72845" fg:w="95"/><text x="65.1072%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (95 samples, 0.08%)</title><rect x="64.8572%" y="453" width="0.0846%" height="15" fill="rgb(206,43,17)" fg:x="72845" fg:w="95"/><text x="65.1072%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (138 samples, 0.12%)</title><rect x="64.8198%" y="661" width="0.1229%" height="15" fill="rgb(239,218,39)" fg:x="72803" fg:w="138"/><text x="65.0698%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (138 samples, 0.12%)</title><rect x="64.8198%" y="645" width="0.1229%" height="15" fill="rgb(208,169,54)" fg:x="72803" fg:w="138"/><text x="65.0698%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (138 samples, 0.12%)</title><rect x="64.8198%" y="629" width="0.1229%" height="15" fill="rgb(247,25,42)" fg:x="72803" fg:w="138"/><text x="65.0698%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (138 samples, 0.12%)</title><rect x="64.8198%" y="613" width="0.1229%" height="15" fill="rgb(226,23,31)" fg:x="72803" fg:w="138"/><text x="65.0698%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (138 samples, 0.12%)</title><rect x="64.8198%" y="597" width="0.1229%" height="15" fill="rgb(247,16,28)" fg:x="72803" fg:w="138"/><text x="65.0698%" y="607.50"></text></g><g><title>alloc::alloc::alloc (135 samples, 0.12%)</title><rect x="64.8225%" y="581" width="0.1202%" height="15" fill="rgb(231,147,38)" fg:x="72806" fg:w="135"/><text x="65.0725%" y="591.50"></text></g><g><title>__rg_alloc (135 samples, 0.12%)</title><rect x="64.8225%" y="565" width="0.1202%" height="15" fill="rgb(253,81,48)" fg:x="72806" fg:w="135"/><text x="65.0725%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (135 samples, 0.12%)</title><rect x="64.8225%" y="549" width="0.1202%" height="15" fill="rgb(249,222,43)" fg:x="72806" fg:w="135"/><text x="65.0725%" y="559.50"></text></g><g><title>rust_alloc (123 samples, 0.11%)</title><rect x="64.8331%" y="533" width="0.1095%" height="15" fill="rgb(221,3,27)" fg:x="72818" fg:w="123"/><text x="65.0831%" y="543.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (191 samples, 0.17%)</title><rect x="64.8153%" y="773" width="0.1701%" height="15" fill="rgb(228,180,5)" fg:x="72798" fg:w="191"/><text x="65.0653%" y="783.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (191 samples, 0.17%)</title><rect x="64.8153%" y="757" width="0.1701%" height="15" fill="rgb(227,131,42)" fg:x="72798" fg:w="191"/><text x="65.0653%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (186 samples, 0.17%)</title><rect x="64.8198%" y="741" width="0.1656%" height="15" fill="rgb(212,3,39)" fg:x="72803" fg:w="186"/><text x="65.0698%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (186 samples, 0.17%)</title><rect x="64.8198%" y="725" width="0.1656%" height="15" fill="rgb(226,45,5)" fg:x="72803" fg:w="186"/><text x="65.0698%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (186 samples, 0.17%)</title><rect x="64.8198%" y="709" width="0.1656%" height="15" fill="rgb(215,167,45)" fg:x="72803" fg:w="186"/><text x="65.0698%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (186 samples, 0.17%)</title><rect x="64.8198%" y="693" width="0.1656%" height="15" fill="rgb(250,218,53)" fg:x="72803" fg:w="186"/><text x="65.0698%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (186 samples, 0.17%)</title><rect x="64.8198%" y="677" width="0.1656%" height="15" fill="rgb(207,140,0)" fg:x="72803" fg:w="186"/><text x="65.0698%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (48 samples, 0.04%)</title><rect x="64.9427%" y="661" width="0.0427%" height="15" fill="rgb(238,133,51)" fg:x="72941" fg:w="48"/><text x="65.1927%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (48 samples, 0.04%)</title><rect x="64.9427%" y="645" width="0.0427%" height="15" fill="rgb(218,203,53)" fg:x="72941" fg:w="48"/><text x="65.1927%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (38 samples, 0.03%)</title><rect x="64.9516%" y="629" width="0.0338%" height="15" fill="rgb(226,184,25)" fg:x="72951" fg:w="38"/><text x="65.2016%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="64.9854%" y="773" width="0.0196%" height="15" fill="rgb(231,121,21)" fg:x="72989" fg:w="22"/><text x="65.2354%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (107 samples, 0.10%)</title><rect x="65.0326%" y="629" width="0.0953%" height="15" fill="rgb(251,14,34)" fg:x="73042" fg:w="107"/><text x="65.2826%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (107 samples, 0.10%)</title><rect x="65.0326%" y="613" width="0.0953%" height="15" fill="rgb(249,193,11)" fg:x="73042" fg:w="107"/><text x="65.2826%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (102 samples, 0.09%)</title><rect x="65.0370%" y="597" width="0.0908%" height="15" fill="rgb(220,172,37)" fg:x="73047" fg:w="102"/><text x="65.2870%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::take (95 samples, 0.08%)</title><rect x="65.0433%" y="581" width="0.0846%" height="15" fill="rgb(231,229,43)" fg:x="73054" fg:w="95"/><text x="65.2933%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (95 samples, 0.08%)</title><rect x="65.0433%" y="565" width="0.0846%" height="15" fill="rgb(250,161,5)" fg:x="73054" fg:w="95"/><text x="65.2933%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (140 samples, 0.12%)</title><rect x="65.0121%" y="725" width="0.1246%" height="15" fill="rgb(218,225,18)" fg:x="73019" fg:w="140"/><text x="65.2621%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (140 samples, 0.12%)</title><rect x="65.0121%" y="709" width="0.1246%" height="15" fill="rgb(245,45,42)" fg:x="73019" fg:w="140"/><text x="65.2621%" y="719.50"></text></g><g><title>alloc::alloc::alloc (132 samples, 0.12%)</title><rect x="65.0192%" y="693" width="0.1175%" height="15" fill="rgb(211,115,1)" fg:x="73027" fg:w="132"/><text x="65.2692%" y="703.50"></text></g><g><title>__rg_alloc (132 samples, 0.12%)</title><rect x="65.0192%" y="677" width="0.1175%" height="15" fill="rgb(248,133,52)" fg:x="73027" fg:w="132"/><text x="65.2692%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (132 samples, 0.12%)</title><rect x="65.0192%" y="661" width="0.1175%" height="15" fill="rgb(238,100,21)" fg:x="73027" fg:w="132"/><text x="65.2692%" y="671.50"></text></g><g><title>rust_alloc (124 samples, 0.11%)</title><rect x="65.0264%" y="645" width="0.1104%" height="15" fill="rgb(247,144,11)" fg:x="73035" fg:w="124"/><text x="65.2764%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (151 samples, 0.13%)</title><rect x="65.0077%" y="773" width="0.1344%" height="15" fill="rgb(206,164,16)" fg:x="73014" fg:w="151"/><text x="65.2577%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (151 samples, 0.13%)</title><rect x="65.0077%" y="757" width="0.1344%" height="15" fill="rgb(222,34,3)" fg:x="73014" fg:w="151"/><text x="65.2577%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (146 samples, 0.13%)</title><rect x="65.0121%" y="741" width="0.1300%" height="15" fill="rgb(248,82,4)" fg:x="73019" fg:w="146"/><text x="65.2621%" y="751.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,459 samples, 1.30%)</title><rect x="63.8511%" y="885" width="1.2990%" height="15" fill="rgb(228,81,46)" fg:x="71715" fg:w="1459"/><text x="64.1011%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (420 samples, 0.37%)</title><rect x="64.7762%" y="869" width="0.3739%" height="15" fill="rgb(227,67,47)" fg:x="72754" fg:w="420"/><text x="65.0262%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (376 samples, 0.33%)</title><rect x="64.8153%" y="853" width="0.3348%" height="15" fill="rgb(215,93,53)" fg:x="72798" fg:w="376"/><text x="65.0653%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (376 samples, 0.33%)</title><rect x="64.8153%" y="837" width="0.3348%" height="15" fill="rgb(248,194,39)" fg:x="72798" fg:w="376"/><text x="65.0653%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (376 samples, 0.33%)</title><rect x="64.8153%" y="821" width="0.3348%" height="15" fill="rgb(215,5,19)" fg:x="72798" fg:w="376"/><text x="65.0653%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (376 samples, 0.33%)</title><rect x="64.8153%" y="805" width="0.3348%" height="15" fill="rgb(226,215,51)" fg:x="72798" fg:w="376"/><text x="65.0653%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (376 samples, 0.33%)</title><rect x="64.8153%" y="789" width="0.3348%" height="15" fill="rgb(225,56,26)" fg:x="72798" fg:w="376"/><text x="65.0653%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (179 samples, 0.16%)</title><rect x="65.1501%" y="885" width="0.1594%" height="15" fill="rgb(222,75,29)" fg:x="73174" fg:w="179"/><text x="65.4001%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (348 samples, 0.31%)</title><rect x="65.3175%" y="885" width="0.3098%" height="15" fill="rgb(236,139,6)" fg:x="73362" fg:w="348"/><text x="65.5675%" y="895.50"></text></g><g><title>core::ptr::write (328 samples, 0.29%)</title><rect x="65.3353%" y="869" width="0.2920%" height="15" fill="rgb(223,137,36)" fg:x="73382" fg:w="328"/><text x="65.5853%" y="879.50"></text></g><g><title>__memcpy_avx_unaligned_erms (328 samples, 0.29%)</title><rect x="65.3353%" y="853" width="0.2920%" height="15" fill="rgb(226,99,2)" fg:x="73382" fg:w="328"/><text x="65.5853%" y="863.50"></text></g><g><title>snmalloc::FreeListIter::take (23 samples, 0.02%)</title><rect x="65.6674%" y="645" width="0.0205%" height="15" fill="rgb(206,133,23)" fg:x="73755" fg:w="23"/><text x="65.9174%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (23 samples, 0.02%)</title><rect x="65.6674%" y="629" width="0.0205%" height="15" fill="rgb(243,173,15)" fg:x="73755" fg:w="23"/><text x="65.9174%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.04%)</title><rect x="65.6532%" y="677" width="0.0436%" height="15" fill="rgb(228,69,28)" fg:x="73739" fg:w="49"/><text x="65.9032%" y="687.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (42 samples, 0.04%)</title><rect x="65.6594%" y="661" width="0.0374%" height="15" fill="rgb(212,51,22)" fg:x="73746" fg:w="42"/><text x="65.9094%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (186 samples, 0.17%)</title><rect x="65.6434%" y="725" width="0.1656%" height="15" fill="rgb(227,113,0)" fg:x="73728" fg:w="186"/><text x="65.8934%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (178 samples, 0.16%)</title><rect x="65.6505%" y="709" width="0.1585%" height="15" fill="rgb(252,84,27)" fg:x="73736" fg:w="178"/><text x="65.9005%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (178 samples, 0.16%)</title><rect x="65.6505%" y="693" width="0.1585%" height="15" fill="rgb(223,145,39)" fg:x="73736" fg:w="178"/><text x="65.9005%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (113 samples, 0.10%)</title><rect x="65.7084%" y="677" width="0.1006%" height="15" fill="rgb(239,219,30)" fg:x="73801" fg:w="113"/><text x="65.9584%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (113 samples, 0.10%)</title><rect x="65.7084%" y="661" width="0.1006%" height="15" fill="rgb(224,196,39)" fg:x="73801" fg:w="113"/><text x="65.9584%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (207 samples, 0.18%)</title><rect x="65.6327%" y="821" width="0.1843%" height="15" fill="rgb(205,35,43)" fg:x="73716" fg:w="207"/><text x="65.8827%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (207 samples, 0.18%)</title><rect x="65.6327%" y="805" width="0.1843%" height="15" fill="rgb(228,201,21)" fg:x="73716" fg:w="207"/><text x="65.8827%" y="815.50"></text></g><g><title>alloc::alloc::alloc (201 samples, 0.18%)</title><rect x="65.6380%" y="789" width="0.1790%" height="15" fill="rgb(237,118,16)" fg:x="73722" fg:w="201"/><text x="65.8880%" y="799.50"></text></g><g><title>__rg_alloc (201 samples, 0.18%)</title><rect x="65.6380%" y="773" width="0.1790%" height="15" fill="rgb(241,17,19)" fg:x="73722" fg:w="201"/><text x="65.8880%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (201 samples, 0.18%)</title><rect x="65.6380%" y="757" width="0.1790%" height="15" fill="rgb(214,10,25)" fg:x="73722" fg:w="201"/><text x="65.8880%" y="767.50"></text></g><g><title>rust_alloc (195 samples, 0.17%)</title><rect x="65.6434%" y="741" width="0.1736%" height="15" fill="rgb(238,37,29)" fg:x="73728" fg:w="195"/><text x="65.8934%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (213 samples, 0.19%)</title><rect x="65.6327%" y="837" width="0.1896%" height="15" fill="rgb(253,83,25)" fg:x="73716" fg:w="213"/><text x="65.8827%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (231 samples, 0.21%)</title><rect x="65.6273%" y="885" width="0.2057%" height="15" fill="rgb(234,192,12)" fg:x="73710" fg:w="231"/><text x="65.8773%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (231 samples, 0.21%)</title><rect x="65.6273%" y="869" width="0.2057%" height="15" fill="rgb(241,216,45)" fg:x="73710" fg:w="231"/><text x="65.8773%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (225 samples, 0.20%)</title><rect x="65.6327%" y="853" width="0.2003%" height="15" fill="rgb(242,22,33)" fg:x="73716" fg:w="225"/><text x="65.8827%" y="863.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (12 samples, 0.01%)</title><rect x="65.8223%" y="837" width="0.0107%" height="15" fill="rgb(231,105,49)" fg:x="73929" fg:w="12"/><text x="66.0723%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (38 samples, 0.03%)</title><rect x="65.8668%" y="629" width="0.0338%" height="15" fill="rgb(218,204,15)" fg:x="73979" fg:w="38"/><text x="66.1168%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (38 samples, 0.03%)</title><rect x="65.8668%" y="613" width="0.0338%" height="15" fill="rgb(235,138,41)" fg:x="73979" fg:w="38"/><text x="66.1168%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (38 samples, 0.03%)</title><rect x="65.8668%" y="597" width="0.0338%" height="15" fill="rgb(246,0,9)" fg:x="73979" fg:w="38"/><text x="66.1168%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (52 samples, 0.05%)</title><rect x="65.8553%" y="661" width="0.0463%" height="15" fill="rgb(210,74,4)" fg:x="73966" fg:w="52"/><text x="66.1053%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (52 samples, 0.05%)</title><rect x="65.8553%" y="645" width="0.0463%" height="15" fill="rgb(250,60,41)" fg:x="73966" fg:w="52"/><text x="66.1053%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (63 samples, 0.06%)</title><rect x="65.8553%" y="693" width="0.0561%" height="15" fill="rgb(220,115,12)" fg:x="73966" fg:w="63"/><text x="66.1053%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (63 samples, 0.06%)</title><rect x="65.8553%" y="677" width="0.0561%" height="15" fill="rgb(237,100,13)" fg:x="73966" fg:w="63"/><text x="66.1053%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (76 samples, 0.07%)</title><rect x="65.8481%" y="709" width="0.0677%" height="15" fill="rgb(213,55,26)" fg:x="73958" fg:w="76"/><text x="66.0981%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (97 samples, 0.09%)</title><rect x="65.8366%" y="789" width="0.0864%" height="15" fill="rgb(216,17,4)" fg:x="73945" fg:w="97"/><text x="66.0866%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (93 samples, 0.08%)</title><rect x="65.8401%" y="773" width="0.0828%" height="15" fill="rgb(220,153,47)" fg:x="73949" fg:w="93"/><text x="66.0901%" y="783.50"></text></g><g><title>__rg_dealloc (93 samples, 0.08%)</title><rect x="65.8401%" y="757" width="0.0828%" height="15" fill="rgb(215,131,9)" fg:x="73949" fg:w="93"/><text x="66.0901%" y="767.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (93 samples, 0.08%)</title><rect x="65.8401%" y="741" width="0.0828%" height="15" fill="rgb(233,46,42)" fg:x="73949" fg:w="93"/><text x="66.0901%" y="751.50"></text></g><g><title>rust_dealloc (93 samples, 0.08%)</title><rect x="65.8401%" y="725" width="0.0828%" height="15" fill="rgb(226,86,7)" fg:x="73949" fg:w="93"/><text x="66.0901%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (106 samples, 0.09%)</title><rect x="65.8348%" y="853" width="0.0944%" height="15" fill="rgb(239,226,21)" fg:x="73943" fg:w="106"/><text x="66.0848%" y="863.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 0.09%)</title><rect x="65.8348%" y="837" width="0.0944%" height="15" fill="rgb(244,137,22)" fg:x="73943" fg:w="106"/><text x="66.0848%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (104 samples, 0.09%)</title><rect x="65.8366%" y="821" width="0.0926%" height="15" fill="rgb(211,139,35)" fg:x="73945" fg:w="104"/><text x="66.0866%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (104 samples, 0.09%)</title><rect x="65.8366%" y="805" width="0.0926%" height="15" fill="rgb(214,62,50)" fg:x="73945" fg:w="104"/><text x="66.0866%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (117 samples, 0.10%)</title><rect x="65.8330%" y="869" width="0.1042%" height="15" fill="rgb(212,113,44)" fg:x="73941" fg:w="117"/><text x="66.0830%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (120 samples, 0.11%)</title><rect x="65.8330%" y="885" width="0.1068%" height="15" fill="rgb(226,150,43)" fg:x="73941" fg:w="120"/><text x="66.0830%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="65.9523%" y="725" width="0.0134%" height="15" fill="rgb(250,71,37)" fg:x="74075" fg:w="15"/><text x="66.2023%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="65.9523%" y="709" width="0.0134%" height="15" fill="rgb(219,76,19)" fg:x="74075" fg:w="15"/><text x="66.2023%" y="719.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="65.9523%" y="693" width="0.0134%" height="15" fill="rgb(250,39,11)" fg:x="74075" fg:w="15"/><text x="66.2023%" y="703.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="65.9523%" y="677" width="0.0134%" height="15" fill="rgb(230,64,31)" fg:x="74075" fg:w="15"/><text x="66.2023%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (28 samples, 0.02%)</title><rect x="65.9452%" y="821" width="0.0249%" height="15" fill="rgb(208,222,23)" fg:x="74067" fg:w="28"/><text x="66.1952%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (28 samples, 0.02%)</title><rect x="65.9452%" y="805" width="0.0249%" height="15" fill="rgb(227,125,18)" fg:x="74067" fg:w="28"/><text x="66.1952%" y="815.50"></text></g><g><title>core::mem::drop (20 samples, 0.02%)</title><rect x="65.9523%" y="789" width="0.0178%" height="15" fill="rgb(234,210,9)" fg:x="74075" fg:w="20"/><text x="66.2023%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20 samples, 0.02%)</title><rect x="65.9523%" y="773" width="0.0178%" height="15" fill="rgb(217,127,24)" fg:x="74075" fg:w="20"/><text x="66.2023%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.02%)</title><rect x="65.9523%" y="757" width="0.0178%" height="15" fill="rgb(239,141,48)" fg:x="74075" fg:w="20"/><text x="66.2023%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="65.9523%" y="741" width="0.0178%" height="15" fill="rgb(227,109,8)" fg:x="74075" fg:w="20"/><text x="66.2023%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (31 samples, 0.03%)</title><rect x="66.0431%" y="677" width="0.0276%" height="15" fill="rgb(235,184,23)" fg:x="74177" fg:w="31"/><text x="66.2931%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (29 samples, 0.03%)</title><rect x="66.0449%" y="661" width="0.0258%" height="15" fill="rgb(227,226,48)" fg:x="74179" fg:w="29"/><text x="66.2949%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (72 samples, 0.06%)</title><rect x="66.0129%" y="725" width="0.0641%" height="15" fill="rgb(206,150,11)" fg:x="74143" fg:w="72"/><text x="66.2629%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (72 samples, 0.06%)</title><rect x="66.0129%" y="709" width="0.0641%" height="15" fill="rgb(254,2,33)" fg:x="74143" fg:w="72"/><text x="66.2629%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (71 samples, 0.06%)</title><rect x="66.0137%" y="693" width="0.0632%" height="15" fill="rgb(243,160,20)" fg:x="74144" fg:w="71"/><text x="66.2637%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (102 samples, 0.09%)</title><rect x="65.9924%" y="757" width="0.0908%" height="15" fill="rgb(218,208,30)" fg:x="74120" fg:w="102"/><text x="66.2424%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (102 samples, 0.09%)</title><rect x="65.9924%" y="741" width="0.0908%" height="15" fill="rgb(224,120,49)" fg:x="74120" fg:w="102"/><text x="66.2424%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (109 samples, 0.10%)</title><rect x="65.9924%" y="789" width="0.0970%" height="15" fill="rgb(246,12,2)" fg:x="74120" fg:w="109"/><text x="66.2424%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (109 samples, 0.10%)</title><rect x="65.9924%" y="773" width="0.0970%" height="15" fill="rgb(236,117,3)" fg:x="74120" fg:w="109"/><text x="66.2424%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (130 samples, 0.12%)</title><rect x="65.9835%" y="805" width="0.1157%" height="15" fill="rgb(216,128,52)" fg:x="74110" fg:w="130"/><text x="66.2335%" y="815.50"></text></g><g><title>rust_dealloc (148 samples, 0.13%)</title><rect x="65.9701%" y="821" width="0.1318%" height="15" fill="rgb(246,145,19)" fg:x="74095" fg:w="148"/><text x="66.2201%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (190 samples, 0.17%)</title><rect x="65.9398%" y="869" width="0.1692%" height="15" fill="rgb(222,11,46)" fg:x="74061" fg:w="190"/><text x="66.1898%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (190 samples, 0.17%)</title><rect x="65.9398%" y="853" width="0.1692%" height="15" fill="rgb(245,82,36)" fg:x="74061" fg:w="190"/><text x="66.1898%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (190 samples, 0.17%)</title><rect x="65.9398%" y="837" width="0.1692%" height="15" fill="rgb(250,73,51)" fg:x="74061" fg:w="190"/><text x="66.1898%" y="847.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (16 samples, 0.01%)</title><rect x="66.1802%" y="549" width="0.0142%" height="15" fill="rgb(221,189,23)" fg:x="74331" fg:w="16"/><text x="66.4302%" y="559.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="66.1811%" y="533" width="0.0134%" height="15" fill="rgb(210,33,7)" fg:x="74332" fg:w="15"/><text x="66.4311%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (41 samples, 0.04%)</title><rect x="66.1660%" y="597" width="0.0365%" height="15" fill="rgb(210,107,22)" fg:x="74315" fg:w="41"/><text x="66.4160%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (41 samples, 0.04%)</title><rect x="66.1660%" y="581" width="0.0365%" height="15" fill="rgb(222,116,37)" fg:x="74315" fg:w="41"/><text x="66.4160%" y="591.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (40 samples, 0.04%)</title><rect x="66.1669%" y="565" width="0.0356%" height="15" fill="rgb(254,17,48)" fg:x="74316" fg:w="40"/><text x="66.4169%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (57 samples, 0.05%)</title><rect x="66.1589%" y="629" width="0.0507%" height="15" fill="rgb(224,36,32)" fg:x="74307" fg:w="57"/><text x="66.4089%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (57 samples, 0.05%)</title><rect x="66.1589%" y="613" width="0.0507%" height="15" fill="rgb(232,90,46)" fg:x="74307" fg:w="57"/><text x="66.4089%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (64 samples, 0.06%)</title><rect x="66.1589%" y="661" width="0.0570%" height="15" fill="rgb(241,66,40)" fg:x="74307" fg:w="64"/><text x="66.4089%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (64 samples, 0.06%)</title><rect x="66.1589%" y="645" width="0.0570%" height="15" fill="rgb(249,184,29)" fg:x="74307" fg:w="64"/><text x="66.4089%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (79 samples, 0.07%)</title><rect x="66.1518%" y="677" width="0.0703%" height="15" fill="rgb(231,181,1)" fg:x="74299" fg:w="79"/><text x="66.4018%" y="687.50"></text></g><g><title>rust_dealloc (91 samples, 0.08%)</title><rect x="66.1455%" y="693" width="0.0810%" height="15" fill="rgb(224,94,2)" fg:x="74292" fg:w="91"/><text x="66.3955%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (108 samples, 0.10%)</title><rect x="66.1331%" y="709" width="0.0962%" height="15" fill="rgb(229,170,15)" fg:x="74278" fg:w="108"/><text x="66.3831%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.10%)</title><rect x="66.1286%" y="773" width="0.1015%" height="15" fill="rgb(240,127,35)" fg:x="74273" fg:w="114"/><text x="66.3786%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (114 samples, 0.10%)</title><rect x="66.1286%" y="757" width="0.1015%" height="15" fill="rgb(248,196,34)" fg:x="74273" fg:w="114"/><text x="66.3786%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (109 samples, 0.10%)</title><rect x="66.1331%" y="741" width="0.0970%" height="15" fill="rgb(236,137,7)" fg:x="74278" fg:w="109"/><text x="66.3831%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (109 samples, 0.10%)</title><rect x="66.1331%" y="725" width="0.0970%" height="15" fill="rgb(235,127,16)" fg:x="74278" fg:w="109"/><text x="66.3831%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="66.2301%" y="741" width="0.0178%" height="15" fill="rgb(250,192,54)" fg:x="74387" fg:w="20"/><text x="66.4801%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="66.2328%" y="725" width="0.0151%" height="15" fill="rgb(218,98,20)" fg:x="74390" fg:w="17"/><text x="66.4828%" y="735.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="66.2328%" y="709" width="0.0151%" height="15" fill="rgb(230,176,47)" fg:x="74390" fg:w="17"/><text x="66.4828%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="66.2328%" y="693" width="0.0151%" height="15" fill="rgb(244,2,33)" fg:x="74390" fg:w="17"/><text x="66.4828%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (152 samples, 0.14%)</title><rect x="66.1135%" y="837" width="0.1353%" height="15" fill="rgb(231,100,17)" fg:x="74256" fg:w="152"/><text x="66.3635%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (151 samples, 0.13%)</title><rect x="66.1144%" y="821" width="0.1344%" height="15" fill="rgb(245,23,12)" fg:x="74257" fg:w="151"/><text x="66.3644%" y="831.50"></text></g><g><title>core::mem::drop (135 samples, 0.12%)</title><rect x="66.1286%" y="805" width="0.1202%" height="15" fill="rgb(249,55,22)" fg:x="74273" fg:w="135"/><text x="66.3786%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (135 samples, 0.12%)</title><rect x="66.1286%" y="789" width="0.1202%" height="15" fill="rgb(207,134,9)" fg:x="74273" fg:w="135"/><text x="66.3786%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (21 samples, 0.02%)</title><rect x="66.2301%" y="773" width="0.0187%" height="15" fill="rgb(218,134,0)" fg:x="74387" fg:w="21"/><text x="66.4801%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="66.2301%" y="757" width="0.0187%" height="15" fill="rgb(213,212,33)" fg:x="74387" fg:w="21"/><text x="66.4801%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (27 samples, 0.02%)</title><rect x="66.2791%" y="741" width="0.0240%" height="15" fill="rgb(252,106,18)" fg:x="74442" fg:w="27"/><text x="66.5291%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (27 samples, 0.02%)</title><rect x="66.2791%" y="725" width="0.0240%" height="15" fill="rgb(208,126,42)" fg:x="74442" fg:w="27"/><text x="66.5291%" y="735.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (27 samples, 0.02%)</title><rect x="66.2791%" y="709" width="0.0240%" height="15" fill="rgb(246,175,29)" fg:x="74442" fg:w="27"/><text x="66.5291%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (46 samples, 0.04%)</title><rect x="66.2702%" y="773" width="0.0410%" height="15" fill="rgb(215,13,50)" fg:x="74432" fg:w="46"/><text x="66.5202%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (46 samples, 0.04%)</title><rect x="66.2702%" y="757" width="0.0410%" height="15" fill="rgb(216,172,15)" fg:x="74432" fg:w="46"/><text x="66.5202%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (49 samples, 0.04%)</title><rect x="66.2702%" y="805" width="0.0436%" height="15" fill="rgb(212,103,13)" fg:x="74432" fg:w="49"/><text x="66.5202%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (49 samples, 0.04%)</title><rect x="66.2702%" y="789" width="0.0436%" height="15" fill="rgb(231,171,36)" fg:x="74432" fg:w="49"/><text x="66.5202%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (67 samples, 0.06%)</title><rect x="66.2568%" y="821" width="0.0597%" height="15" fill="rgb(250,123,20)" fg:x="74417" fg:w="67"/><text x="66.5068%" y="831.50"></text></g><g><title>rust_dealloc (79 samples, 0.07%)</title><rect x="66.2488%" y="837" width="0.0703%" height="15" fill="rgb(212,53,50)" fg:x="74408" fg:w="79"/><text x="66.4988%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (237 samples, 0.21%)</title><rect x="66.1090%" y="853" width="0.2110%" height="15" fill="rgb(243,54,12)" fg:x="74251" fg:w="237"/><text x="66.3590%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (436 samples, 0.39%)</title><rect x="65.9398%" y="885" width="0.3882%" height="15" fill="rgb(234,101,34)" fg:x="74061" fg:w="436"/><text x="66.1898%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (246 samples, 0.22%)</title><rect x="66.1090%" y="869" width="0.2190%" height="15" fill="rgb(254,67,22)" fg:x="74251" fg:w="246"/><text x="66.3590%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (22 samples, 0.02%)</title><rect x="66.3280%" y="885" width="0.0196%" height="15" fill="rgb(250,35,47)" fg:x="74497" fg:w="22"/><text x="66.5780%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (6,748 samples, 6.01%)</title><rect x="60.3458%" y="949" width="6.0080%" height="15" fill="rgb(226,126,38)" fg:x="67778" fg:w="6748"/><text x="60.5958%" y="959.50">tremor_r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,748 samples, 6.01%)</title><rect x="60.3458%" y="933" width="6.0080%" height="15" fill="rgb(216,138,53)" fg:x="67778" fg:w="6748"/><text x="60.5958%" y="943.50">&lt;core::f..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (6,748 samples, 6.01%)</title><rect x="60.3458%" y="917" width="6.0080%" height="15" fill="rgb(246,199,43)" fg:x="67778" fg:w="6748"/><text x="60.5958%" y="927.50">tremor_r..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,635 samples, 3.24%)</title><rect x="63.1175%" y="901" width="3.2364%" height="15" fill="rgb(232,125,11)" fg:x="70891" fg:w="3635"/><text x="63.3675%" y="911.50">tre..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (30 samples, 0.03%)</title><rect x="66.4749%" y="885" width="0.0267%" height="15" fill="rgb(218,219,45)" fg:x="74662" fg:w="30"/><text x="66.7249%" y="895.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.01%)</title><rect x="66.4874%" y="869" width="0.0142%" height="15" fill="rgb(216,102,54)" fg:x="74676" fg:w="16"/><text x="66.7374%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,424 samples, 1.27%)</title><rect x="66.3841%" y="901" width="1.2679%" height="15" fill="rgb(250,228,7)" fg:x="74560" fg:w="1424"/><text x="66.6341%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,292 samples, 1.15%)</title><rect x="66.5017%" y="885" width="1.1503%" height="15" fill="rgb(226,125,25)" fg:x="74692" fg:w="1292"/><text x="66.7517%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (10,552 samples, 9.39%)</title><rect x="58.5731%" y="1125" width="9.3949%" height="15" fill="rgb(224,165,27)" fg:x="65787" fg:w="10552"/><text x="58.8231%" y="1135.50">async_task::r..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10,552 samples, 9.39%)</title><rect x="58.5731%" y="1109" width="9.3949%" height="15" fill="rgb(233,86,3)" fg:x="65787" fg:w="10552"/><text x="58.8231%" y="1119.50">&lt;core::pin::P..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,552 samples, 9.39%)</title><rect x="58.5731%" y="1093" width="9.3949%" height="15" fill="rgb(228,116,20)" fg:x="65787" fg:w="10552"/><text x="58.8231%" y="1103.50">&lt;core::future..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (10,552 samples, 9.39%)</title><rect x="58.5731%" y="1077" width="9.3949%" height="15" fill="rgb(209,192,17)" fg:x="65787" fg:w="10552"/><text x="58.8231%" y="1087.50">async_executo..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (10,552 samples, 9.39%)</title><rect x="58.5731%" y="1061" width="9.3949%" height="15" fill="rgb(224,88,34)" fg:x="65787" fg:w="10552"/><text x="58.8231%" y="1071.50">&lt;async_std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (10,552 samples, 9.39%)</title><rect x="58.5731%" y="1045" width="9.3949%" height="15" fill="rgb(233,38,6)" fg:x="65787" fg:w="10552"/><text x="58.8231%" y="1055.50">async_std::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10,552 samples, 9.39%)</title><rect x="58.5731%" y="1029" width="9.3949%" height="15" fill="rgb(212,59,30)" fg:x="65787" fg:w="10552"/><text x="58.8231%" y="1039.50">std::thread::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,552 samples, 9.39%)</title><rect x="58.5731%" y="1013" width="9.3949%" height="15" fill="rgb(213,80,3)" fg:x="65787" fg:w="10552"/><text x="58.8231%" y="1023.50">std::thread::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (10,552 samples, 9.39%)</title><rect x="58.5731%" y="997" width="9.3949%" height="15" fill="rgb(251,178,7)" fg:x="65787" fg:w="10552"/><text x="58.8231%" y="1007.50">async_std::ta..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (10,552 samples, 9.39%)</title><rect x="58.5731%" y="981" width="9.3949%" height="15" fill="rgb(213,154,26)" fg:x="65787" fg:w="10552"/><text x="58.8231%" y="991.50">&lt;async_std::t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,552 samples, 9.39%)</title><rect x="58.5731%" y="965" width="9.3949%" height="15" fill="rgb(238,165,49)" fg:x="65787" fg:w="10552"/><text x="58.8231%" y="975.50">&lt;core::future..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,813 samples, 1.61%)</title><rect x="66.3539%" y="949" width="1.6142%" height="15" fill="rgb(248,91,46)" fg:x="74526" fg:w="1813"/><text x="66.6039%" y="959.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,813 samples, 1.61%)</title><rect x="66.3539%" y="933" width="1.6142%" height="15" fill="rgb(244,21,52)" fg:x="74526" fg:w="1813"/><text x="66.6039%" y="943.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,813 samples, 1.61%)</title><rect x="66.3539%" y="917" width="1.6142%" height="15" fill="rgb(247,122,20)" fg:x="74526" fg:w="1813"/><text x="66.6039%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (355 samples, 0.32%)</title><rect x="67.6520%" y="901" width="0.3161%" height="15" fill="rgb(218,27,9)" fg:x="75984" fg:w="355"/><text x="67.9020%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (12 samples, 0.01%)</title><rect x="67.9681%" y="1125" width="0.0107%" height="15" fill="rgb(246,7,6)" fg:x="76339" fg:w="12"/><text x="68.2181%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (82 samples, 0.07%)</title><rect x="67.9796%" y="1125" width="0.0730%" height="15" fill="rgb(227,135,54)" fg:x="76352" fg:w="82"/><text x="68.2296%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (12 samples, 0.01%)</title><rect x="68.0420%" y="1109" width="0.0107%" height="15" fill="rgb(247,14,11)" fg:x="76422" fg:w="12"/><text x="68.2920%" y="1119.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="68.0420%" y="1093" width="0.0107%" height="15" fill="rgb(206,149,34)" fg:x="76422" fg:w="12"/><text x="68.2920%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="68.0615%" y="1125" width="0.0116%" height="15" fill="rgb(227,228,4)" fg:x="76444" fg:w="13"/><text x="68.3115%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="68.0731%" y="1125" width="0.0196%" height="15" fill="rgb(238,218,28)" fg:x="76457" fg:w="22"/><text x="68.3231%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="68.0927%" y="1125" width="0.0205%" height="15" fill="rgb(252,86,40)" fg:x="76479" fg:w="23"/><text x="68.3427%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (28 samples, 0.02%)</title><rect x="68.1132%" y="1125" width="0.0249%" height="15" fill="rgb(251,225,11)" fg:x="76502" fg:w="28"/><text x="68.3632%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="68.1381%" y="1125" width="0.0169%" height="15" fill="rgb(206,46,49)" fg:x="76530" fg:w="19"/><text x="68.3881%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (16 samples, 0.01%)</title><rect x="68.1559%" y="1125" width="0.0142%" height="15" fill="rgb(245,128,24)" fg:x="76550" fg:w="16"/><text x="68.4059%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (16 samples, 0.01%)</title><rect x="68.1559%" y="1109" width="0.0142%" height="15" fill="rgb(219,177,34)" fg:x="76550" fg:w="16"/><text x="68.4059%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (16 samples, 0.01%)</title><rect x="68.1559%" y="1093" width="0.0142%" height="15" fill="rgb(218,60,48)" fg:x="76550" fg:w="16"/><text x="68.4059%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="68.1559%" y="1077" width="0.0142%" height="15" fill="rgb(221,11,5)" fg:x="76550" fg:w="16"/><text x="68.4059%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (16 samples, 0.01%)</title><rect x="68.1559%" y="1061" width="0.0142%" height="15" fill="rgb(220,148,13)" fg:x="76550" fg:w="16"/><text x="68.4059%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (43 samples, 0.04%)</title><rect x="68.1702%" y="1125" width="0.0383%" height="15" fill="rgb(210,16,3)" fg:x="76566" fg:w="43"/><text x="68.4202%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (23 samples, 0.02%)</title><rect x="68.1880%" y="1109" width="0.0205%" height="15" fill="rgb(236,80,2)" fg:x="76586" fg:w="23"/><text x="68.4380%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="68.1880%" y="1093" width="0.0205%" height="15" fill="rgb(239,129,19)" fg:x="76586" fg:w="23"/><text x="68.4380%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (23 samples, 0.02%)</title><rect x="68.1880%" y="1077" width="0.0205%" height="15" fill="rgb(220,106,35)" fg:x="76586" fg:w="23"/><text x="68.4380%" y="1087.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (14 samples, 0.01%)</title><rect x="68.2245%" y="1125" width="0.0125%" height="15" fill="rgb(252,139,45)" fg:x="76627" fg:w="14"/><text x="68.4745%" y="1135.50"></text></g><g><title>polling::epoll::Poller::wait (34 samples, 0.03%)</title><rect x="68.2503%" y="1125" width="0.0303%" height="15" fill="rgb(229,8,36)" fg:x="76656" fg:w="34"/><text x="68.5003%" y="1135.50"></text></g><g><title>rust_alloc (133 samples, 0.12%)</title><rect x="68.2806%" y="1125" width="0.1184%" height="15" fill="rgb(230,126,33)" fg:x="76690" fg:w="133"/><text x="68.5306%" y="1135.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="68.3990%" y="1125" width="0.0116%" height="15" fill="rgb(239,140,21)" fg:x="76823" fg:w="13"/><text x="68.6490%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (13 samples, 0.01%)</title><rect x="68.3990%" y="1109" width="0.0116%" height="15" fill="rgb(254,104,9)" fg:x="76823" fg:w="13"/><text x="68.6490%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (13 samples, 0.01%)</title><rect x="68.3990%" y="1093" width="0.0116%" height="15" fill="rgb(239,52,14)" fg:x="76823" fg:w="13"/><text x="68.6490%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (13 samples, 0.01%)</title><rect x="68.3990%" y="1077" width="0.0116%" height="15" fill="rgb(208,227,44)" fg:x="76823" fg:w="13"/><text x="68.6490%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (13 samples, 0.01%)</title><rect x="68.3990%" y="1061" width="0.0116%" height="15" fill="rgb(246,18,19)" fg:x="76823" fg:w="13"/><text x="68.6490%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (13 samples, 0.01%)</title><rect x="68.3990%" y="1045" width="0.0116%" height="15" fill="rgb(235,228,25)" fg:x="76823" fg:w="13"/><text x="68.6490%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (13 samples, 0.01%)</title><rect x="68.3990%" y="1029" width="0.0116%" height="15" fill="rgb(240,156,20)" fg:x="76823" fg:w="13"/><text x="68.6490%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (13 samples, 0.01%)</title><rect x="68.3990%" y="1013" width="0.0116%" height="15" fill="rgb(224,8,20)" fg:x="76823" fg:w="13"/><text x="68.6490%" y="1023.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="68.3990%" y="997" width="0.0116%" height="15" fill="rgb(214,12,52)" fg:x="76823" fg:w="13"/><text x="68.6490%" y="1007.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="68.4168%" y="1125" width="0.0142%" height="15" fill="rgb(211,220,47)" fg:x="76843" fg:w="16"/><text x="68.6668%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (12 samples, 0.01%)</title><rect x="68.4337%" y="1125" width="0.0107%" height="15" fill="rgb(250,173,5)" fg:x="76862" fg:w="12"/><text x="68.6837%" y="1135.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="68.5263%" y="933" width="0.0107%" height="15" fill="rgb(250,125,52)" fg:x="76966" fg:w="12"/><text x="68.7763%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (12 samples, 0.01%)</title><rect x="68.5263%" y="917" width="0.0107%" height="15" fill="rgb(209,133,18)" fg:x="76966" fg:w="12"/><text x="68.7763%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (12 samples, 0.01%)</title><rect x="68.5263%" y="901" width="0.0107%" height="15" fill="rgb(216,173,22)" fg:x="76966" fg:w="12"/><text x="68.7763%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="68.5263%" y="885" width="0.0107%" height="15" fill="rgb(205,3,22)" fg:x="76966" fg:w="12"/><text x="68.7763%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="68.5263%" y="869" width="0.0107%" height="15" fill="rgb(248,22,20)" fg:x="76966" fg:w="12"/><text x="68.7763%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.01%)</title><rect x="68.5263%" y="853" width="0.0107%" height="15" fill="rgb(233,6,29)" fg:x="76966" fg:w="12"/><text x="68.7763%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="68.5263%" y="837" width="0.0107%" height="15" fill="rgb(240,22,54)" fg:x="76966" fg:w="12"/><text x="68.7763%" y="847.50"></text></g><g><title>event_listener::Inner::lock (73 samples, 0.06%)</title><rect x="68.5477%" y="933" width="0.0650%" height="15" fill="rgb(231,133,32)" fg:x="76990" fg:w="73"/><text x="68.7977%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (73 samples, 0.06%)</title><rect x="68.5477%" y="917" width="0.0650%" height="15" fill="rgb(248,193,4)" fg:x="76990" fg:w="73"/><text x="68.7977%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (72 samples, 0.06%)</title><rect x="68.5486%" y="901" width="0.0641%" height="15" fill="rgb(211,178,46)" fg:x="76991" fg:w="72"/><text x="68.7986%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (54 samples, 0.05%)</title><rect x="68.5646%" y="885" width="0.0481%" height="15" fill="rgb(224,5,42)" fg:x="77009" fg:w="54"/><text x="68.8146%" y="895.50"></text></g><g><title>___pthread_mutex_lock (54 samples, 0.05%)</title><rect x="68.5646%" y="869" width="0.0481%" height="15" fill="rgb(239,176,25)" fg:x="77009" fg:w="54"/><text x="68.8146%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (134 samples, 0.12%)</title><rect x="68.5058%" y="949" width="0.1193%" height="15" fill="rgb(245,187,50)" fg:x="76943" fg:w="134"/><text x="68.7558%" y="959.50"></text></g><g><title>event_listener::List::remove (14 samples, 0.01%)</title><rect x="68.6127%" y="933" width="0.0125%" height="15" fill="rgb(248,24,15)" fg:x="77063" fg:w="14"/><text x="68.8627%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (796 samples, 0.71%)</title><rect x="68.6251%" y="949" width="0.7087%" height="15" fill="rgb(205,166,13)" fg:x="77077" fg:w="796"/><text x="68.8751%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (673 samples, 0.60%)</title><rect x="69.3810%" y="933" width="0.5992%" height="15" fill="rgb(208,114,23)" fg:x="77926" fg:w="673"/><text x="69.6310%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (60 samples, 0.05%)</title><rect x="69.9802%" y="933" width="0.0534%" height="15" fill="rgb(239,127,18)" fg:x="78599" fg:w="60"/><text x="70.2302%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (22 samples, 0.02%)</title><rect x="70.0443%" y="917" width="0.0196%" height="15" fill="rgb(219,154,28)" fg:x="78671" fg:w="22"/><text x="70.2943%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (20 samples, 0.02%)</title><rect x="70.0461%" y="901" width="0.0178%" height="15" fill="rgb(225,157,23)" fg:x="78673" fg:w="20"/><text x="70.2961%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="70.0461%" y="885" width="0.0178%" height="15" fill="rgb(219,8,6)" fg:x="78673" fg:w="20"/><text x="70.2961%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (20 samples, 0.02%)</title><rect x="70.0461%" y="869" width="0.0178%" height="15" fill="rgb(212,47,6)" fg:x="78673" fg:w="20"/><text x="70.2961%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (19 samples, 0.02%)</title><rect x="70.0470%" y="853" width="0.0169%" height="15" fill="rgb(224,190,4)" fg:x="78674" fg:w="19"/><text x="70.2970%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (19 samples, 0.02%)</title><rect x="70.0470%" y="837" width="0.0169%" height="15" fill="rgb(239,183,29)" fg:x="78674" fg:w="19"/><text x="70.2970%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="70.0639%" y="917" width="0.0107%" height="15" fill="rgb(213,57,7)" fg:x="78693" fg:w="12"/><text x="70.3139%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="70.0639%" y="901" width="0.0107%" height="15" fill="rgb(216,148,1)" fg:x="78693" fg:w="12"/><text x="70.3139%" y="911.50"></text></g><g><title>event_listener::Inner::lock (50 samples, 0.04%)</title><rect x="70.0782%" y="917" width="0.0445%" height="15" fill="rgb(236,182,29)" fg:x="78709" fg:w="50"/><text x="70.3282%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (49 samples, 0.04%)</title><rect x="70.0791%" y="901" width="0.0436%" height="15" fill="rgb(244,120,48)" fg:x="78710" fg:w="49"/><text x="70.3291%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (49 samples, 0.04%)</title><rect x="70.0791%" y="885" width="0.0436%" height="15" fill="rgb(206,71,34)" fg:x="78710" fg:w="49"/><text x="70.3291%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (49 samples, 0.04%)</title><rect x="70.0791%" y="869" width="0.0436%" height="15" fill="rgb(242,32,6)" fg:x="78710" fg:w="49"/><text x="70.3291%" y="879.50"></text></g><g><title>___pthread_mutex_lock (49 samples, 0.04%)</title><rect x="70.0791%" y="853" width="0.0436%" height="15" fill="rgb(241,35,3)" fg:x="78710" fg:w="49"/><text x="70.3291%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (14 samples, 0.01%)</title><rect x="70.1396%" y="821" width="0.0125%" height="15" fill="rgb(222,62,19)" fg:x="78778" fg:w="14"/><text x="70.3896%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="70.1396%" y="805" width="0.0125%" height="15" fill="rgb(223,110,41)" fg:x="78778" fg:w="14"/><text x="70.3896%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="70.1396%" y="789" width="0.0125%" height="15" fill="rgb(208,224,4)" fg:x="78778" fg:w="14"/><text x="70.3896%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (14 samples, 0.01%)</title><rect x="70.1396%" y="773" width="0.0125%" height="15" fill="rgb(241,137,19)" fg:x="78778" fg:w="14"/><text x="70.3896%" y="783.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (14 samples, 0.01%)</title><rect x="70.1396%" y="757" width="0.0125%" height="15" fill="rgb(244,24,17)" fg:x="78778" fg:w="14"/><text x="70.3896%" y="767.50"></text></g><g><title>async_executor::State::notify (57 samples, 0.05%)</title><rect x="70.1360%" y="837" width="0.0507%" height="15" fill="rgb(245,178,49)" fg:x="78774" fg:w="57"/><text x="70.3860%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (28 samples, 0.02%)</title><rect x="70.1619%" y="821" width="0.0249%" height="15" fill="rgb(219,160,38)" fg:x="78803" fg:w="28"/><text x="70.4119%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (28 samples, 0.02%)</title><rect x="70.1619%" y="805" width="0.0249%" height="15" fill="rgb(228,137,14)" fg:x="78803" fg:w="28"/><text x="70.4119%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (25 samples, 0.02%)</title><rect x="70.1645%" y="789" width="0.0223%" height="15" fill="rgb(237,134,11)" fg:x="78806" fg:w="25"/><text x="70.4145%" y="799.50"></text></g><g><title>___pthread_mutex_lock (25 samples, 0.02%)</title><rect x="70.1645%" y="773" width="0.0223%" height="15" fill="rgb(211,126,44)" fg:x="78806" fg:w="25"/><text x="70.4145%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (39 samples, 0.03%)</title><rect x="70.1984%" y="805" width="0.0347%" height="15" fill="rgb(226,171,33)" fg:x="78844" fg:w="39"/><text x="70.4484%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (39 samples, 0.03%)</title><rect x="70.1984%" y="789" width="0.0347%" height="15" fill="rgb(253,99,13)" fg:x="78844" fg:w="39"/><text x="70.4484%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (12 samples, 0.01%)</title><rect x="70.2331%" y="805" width="0.0107%" height="15" fill="rgb(244,48,7)" fg:x="78883" fg:w="12"/><text x="70.4831%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_or (12 samples, 0.01%)</title><rect x="70.2331%" y="789" width="0.0107%" height="15" fill="rgb(244,217,54)" fg:x="78883" fg:w="12"/><text x="70.4831%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (68 samples, 0.06%)</title><rect x="70.1868%" y="837" width="0.0605%" height="15" fill="rgb(224,15,18)" fg:x="78831" fg:w="68"/><text x="70.4368%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (65 samples, 0.06%)</title><rect x="70.1895%" y="821" width="0.0579%" height="15" fill="rgb(244,99,12)" fg:x="78834" fg:w="65"/><text x="70.4395%" y="831.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (126 samples, 0.11%)</title><rect x="70.1360%" y="853" width="0.1122%" height="15" fill="rgb(233,226,8)" fg:x="78774" fg:w="126"/><text x="70.3860%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (21 samples, 0.02%)</title><rect x="70.2482%" y="853" width="0.0187%" height="15" fill="rgb(229,211,3)" fg:x="78900" fg:w="21"/><text x="70.4982%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.02%)</title><rect x="70.2482%" y="837" width="0.0187%" height="15" fill="rgb(216,140,21)" fg:x="78900" fg:w="21"/><text x="70.4982%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (13 samples, 0.01%)</title><rect x="70.2892%" y="789" width="0.0116%" height="15" fill="rgb(234,122,30)" fg:x="78946" fg:w="13"/><text x="70.5392%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_swap (13 samples, 0.01%)</title><rect x="70.2892%" y="773" width="0.0116%" height="15" fill="rgb(236,25,46)" fg:x="78946" fg:w="13"/><text x="70.5392%" y="783.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (58 samples, 0.05%)</title><rect x="70.2723%" y="837" width="0.0516%" height="15" fill="rgb(217,52,54)" fg:x="78927" fg:w="58"/><text x="70.5223%" y="847.50"></text></g><g><title>parking::Unparker::unpark (52 samples, 0.05%)</title><rect x="70.2776%" y="821" width="0.0463%" height="15" fill="rgb(222,29,26)" fg:x="78933" fg:w="52"/><text x="70.5276%" y="831.50"></text></g><g><title>parking::Inner::unpark (42 samples, 0.04%)</title><rect x="70.2865%" y="805" width="0.0374%" height="15" fill="rgb(216,177,29)" fg:x="78943" fg:w="42"/><text x="70.5365%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (26 samples, 0.02%)</title><rect x="70.3008%" y="789" width="0.0231%" height="15" fill="rgb(247,136,51)" fg:x="78959" fg:w="26"/><text x="70.5508%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (26 samples, 0.02%)</title><rect x="70.3008%" y="773" width="0.0231%" height="15" fill="rgb(231,47,47)" fg:x="78959" fg:w="26"/><text x="70.5508%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (24 samples, 0.02%)</title><rect x="70.3025%" y="757" width="0.0214%" height="15" fill="rgb(211,192,36)" fg:x="78961" fg:w="24"/><text x="70.5525%" y="767.50"></text></g><g><title>___pthread_mutex_lock (24 samples, 0.02%)</title><rect x="70.3025%" y="741" width="0.0214%" height="15" fill="rgb(229,156,32)" fg:x="78961" fg:w="24"/><text x="70.5525%" y="751.50"></text></g><g><title>event_listener::List::notify (237 samples, 0.21%)</title><rect x="70.1227%" y="917" width="0.2110%" height="15" fill="rgb(248,213,20)" fg:x="78759" fg:w="237"/><text x="70.3727%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (231 samples, 0.21%)</title><rect x="70.1280%" y="901" width="0.2057%" height="15" fill="rgb(217,64,7)" fg:x="78765" fg:w="231"/><text x="70.3780%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (222 samples, 0.20%)</title><rect x="70.1360%" y="885" width="0.1977%" height="15" fill="rgb(232,142,8)" fg:x="78774" fg:w="222"/><text x="70.3860%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (222 samples, 0.20%)</title><rect x="70.1360%" y="869" width="0.1977%" height="15" fill="rgb(224,92,44)" fg:x="78774" fg:w="222"/><text x="70.3860%" y="879.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (69 samples, 0.06%)</title><rect x="70.2723%" y="853" width="0.0614%" height="15" fill="rgb(214,169,17)" fg:x="78927" fg:w="69"/><text x="70.5223%" y="863.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,433 samples, 1.28%)</title><rect x="69.3338%" y="949" width="1.2759%" height="15" fill="rgb(210,59,37)" fg:x="77873" fg:w="1433"/><text x="69.5838%" y="959.50"></text></g><g><title>event_listener::Event::notify (647 samples, 0.58%)</title><rect x="70.0337%" y="933" width="0.5761%" height="15" fill="rgb(214,116,48)" fg:x="78659" fg:w="647"/><text x="70.2837%" y="943.50"></text></g><g><title>event_listener::full_fence (310 samples, 0.28%)</title><rect x="70.3337%" y="917" width="0.2760%" height="15" fill="rgb(244,191,6)" fg:x="78996" fg:w="310"/><text x="70.5837%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (301 samples, 0.27%)</title><rect x="70.3417%" y="901" width="0.2680%" height="15" fill="rgb(241,50,52)" fg:x="79005" fg:w="301"/><text x="70.5917%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (301 samples, 0.27%)</title><rect x="70.3417%" y="885" width="0.2680%" height="15" fill="rgb(236,75,39)" fg:x="79005" fg:w="301"/><text x="70.5917%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (20 samples, 0.02%)</title><rect x="70.6097%" y="949" width="0.0178%" height="15" fill="rgb(236,99,0)" fg:x="79306" fg:w="20"/><text x="70.8597%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (28 samples, 0.02%)</title><rect x="70.6275%" y="949" width="0.0249%" height="15" fill="rgb(207,202,15)" fg:x="79326" fg:w="28"/><text x="70.8775%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (16 samples, 0.01%)</title><rect x="70.6382%" y="933" width="0.0142%" height="15" fill="rgb(233,207,14)" fg:x="79338" fg:w="16"/><text x="70.8882%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (14 samples, 0.01%)</title><rect x="70.6400%" y="917" width="0.0125%" height="15" fill="rgb(226,27,51)" fg:x="79340" fg:w="14"/><text x="70.8900%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="70.6400%" y="901" width="0.0125%" height="15" fill="rgb(206,104,42)" fg:x="79340" fg:w="14"/><text x="70.8900%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.01%)</title><rect x="70.6409%" y="885" width="0.0116%" height="15" fill="rgb(212,225,4)" fg:x="79341" fg:w="13"/><text x="70.8909%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.01%)</title><rect x="70.6409%" y="869" width="0.0116%" height="15" fill="rgb(233,96,42)" fg:x="79341" fg:w="13"/><text x="70.8909%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="70.6533%" y="933" width="0.0160%" height="15" fill="rgb(229,21,32)" fg:x="79355" fg:w="18"/><text x="70.9033%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.02%)</title><rect x="70.6533%" y="917" width="0.0160%" height="15" fill="rgb(226,216,24)" fg:x="79355" fg:w="18"/><text x="70.9033%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.02%)</title><rect x="70.6533%" y="901" width="0.0160%" height="15" fill="rgb(221,163,17)" fg:x="79355" fg:w="18"/><text x="70.9033%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (14 samples, 0.01%)</title><rect x="70.6694%" y="933" width="0.0125%" height="15" fill="rgb(216,216,42)" fg:x="79373" fg:w="14"/><text x="70.9194%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (14 samples, 0.01%)</title><rect x="70.6694%" y="917" width="0.0125%" height="15" fill="rgb(240,118,7)" fg:x="79373" fg:w="14"/><text x="70.9194%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="70.6694%" y="901" width="0.0125%" height="15" fill="rgb(221,67,37)" fg:x="79373" fg:w="14"/><text x="70.9194%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="70.6703%" y="885" width="0.0116%" height="15" fill="rgb(241,32,44)" fg:x="79374" fg:w="13"/><text x="70.9203%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="70.6703%" y="869" width="0.0116%" height="15" fill="rgb(235,204,43)" fg:x="79374" fg:w="13"/><text x="70.9203%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="70.6703%" y="853" width="0.0116%" height="15" fill="rgb(213,116,10)" fg:x="79374" fg:w="13"/><text x="70.9203%" y="863.50"></text></g><g><title>event_listener::Inner::lock (17 samples, 0.02%)</title><rect x="70.6818%" y="933" width="0.0151%" height="15" fill="rgb(239,15,48)" fg:x="79387" fg:w="17"/><text x="70.9318%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="70.6818%" y="917" width="0.0151%" height="15" fill="rgb(207,123,36)" fg:x="79387" fg:w="17"/><text x="70.9318%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="70.6818%" y="901" width="0.0151%" height="15" fill="rgb(209,103,30)" fg:x="79387" fg:w="17"/><text x="70.9318%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (17 samples, 0.02%)</title><rect x="70.6818%" y="885" width="0.0151%" height="15" fill="rgb(238,100,19)" fg:x="79387" fg:w="17"/><text x="70.9318%" y="895.50"></text></g><g><title>___pthread_mutex_lock (17 samples, 0.02%)</title><rect x="70.6818%" y="869" width="0.0151%" height="15" fill="rgb(244,30,14)" fg:x="79387" fg:w="17"/><text x="70.9318%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,510 samples, 2.23%)</title><rect x="68.4640%" y="1029" width="2.2348%" height="15" fill="rgb(249,174,6)" fg:x="76896" fg:w="2510"/><text x="68.7140%" y="1039.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,510 samples, 2.23%)</title><rect x="68.4640%" y="1013" width="2.2348%" height="15" fill="rgb(235,213,41)" fg:x="76896" fg:w="2510"/><text x="68.7140%" y="1023.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,510 samples, 2.23%)</title><rect x="68.4640%" y="997" width="2.2348%" height="15" fill="rgb(213,118,6)" fg:x="76896" fg:w="2510"/><text x="68.7140%" y="1007.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,510 samples, 2.23%)</title><rect x="68.4640%" y="981" width="2.2348%" height="15" fill="rgb(235,44,51)" fg:x="76896" fg:w="2510"/><text x="68.7140%" y="991.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,510 samples, 2.23%)</title><rect x="68.4640%" y="965" width="2.2348%" height="15" fill="rgb(217,9,53)" fg:x="76896" fg:w="2510"/><text x="68.7140%" y="975.50">&lt;..</text></g><g><title>event_listener::Event::listen (52 samples, 0.05%)</title><rect x="70.6524%" y="949" width="0.0463%" height="15" fill="rgb(237,172,34)" fg:x="79354" fg:w="52"/><text x="70.9024%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (285 samples, 0.25%)</title><rect x="70.9009%" y="549" width="0.2537%" height="15" fill="rgb(206,206,11)" fg:x="79633" fg:w="285"/><text x="71.1509%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (284 samples, 0.25%)</title><rect x="70.9017%" y="533" width="0.2529%" height="15" fill="rgb(214,149,29)" fg:x="79634" fg:w="284"/><text x="71.1517%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (277 samples, 0.25%)</title><rect x="70.9080%" y="517" width="0.2466%" height="15" fill="rgb(208,123,3)" fg:x="79641" fg:w="277"/><text x="71.1580%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (257 samples, 0.23%)</title><rect x="70.9258%" y="501" width="0.2288%" height="15" fill="rgb(229,126,4)" fg:x="79661" fg:w="257"/><text x="71.1758%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (257 samples, 0.23%)</title><rect x="70.9258%" y="485" width="0.2288%" height="15" fill="rgb(222,92,36)" fg:x="79661" fg:w="257"/><text x="71.1758%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (295 samples, 0.26%)</title><rect x="70.8946%" y="661" width="0.2627%" height="15" fill="rgb(216,39,41)" fg:x="79626" fg:w="295"/><text x="71.1446%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (295 samples, 0.26%)</title><rect x="70.8946%" y="645" width="0.2627%" height="15" fill="rgb(253,127,28)" fg:x="79626" fg:w="295"/><text x="71.1446%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (295 samples, 0.26%)</title><rect x="70.8946%" y="629" width="0.2627%" height="15" fill="rgb(249,152,51)" fg:x="79626" fg:w="295"/><text x="71.1446%" y="639.50"></text></g><g><title>alloc::alloc::alloc (295 samples, 0.26%)</title><rect x="70.8946%" y="613" width="0.2627%" height="15" fill="rgb(209,123,42)" fg:x="79626" fg:w="295"/><text x="71.1446%" y="623.50"></text></g><g><title>__rg_alloc (295 samples, 0.26%)</title><rect x="70.8946%" y="597" width="0.2627%" height="15" fill="rgb(241,118,22)" fg:x="79626" fg:w="295"/><text x="71.1446%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (295 samples, 0.26%)</title><rect x="70.8946%" y="581" width="0.2627%" height="15" fill="rgb(208,25,7)" fg:x="79626" fg:w="295"/><text x="71.1446%" y="591.50"></text></g><g><title>rust_alloc (295 samples, 0.26%)</title><rect x="70.8946%" y="565" width="0.2627%" height="15" fill="rgb(243,144,39)" fg:x="79626" fg:w="295"/><text x="71.1446%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="71.1662%" y="661" width="0.0107%" height="15" fill="rgb(250,50,5)" fg:x="79931" fg:w="12"/><text x="71.4162%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="71.1662%" y="645" width="0.0107%" height="15" fill="rgb(207,67,11)" fg:x="79931" fg:w="12"/><text x="71.4162%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="71.1662%" y="629" width="0.0107%" height="15" fill="rgb(245,204,40)" fg:x="79931" fg:w="12"/><text x="71.4162%" y="639.50"></text></g><g><title>core::time::Duration::as_nanos (15 samples, 0.01%)</title><rect x="71.2018%" y="645" width="0.0134%" height="15" fill="rgb(238,228,24)" fg:x="79971" fg:w="15"/><text x="71.4518%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (38 samples, 0.03%)</title><rect x="71.2721%" y="597" width="0.0338%" height="15" fill="rgb(217,116,22)" fg:x="80050" fg:w="38"/><text x="71.5221%" y="607.50"></text></g><g><title>core::cmp::PartialOrd::ge (38 samples, 0.03%)</title><rect x="71.2721%" y="581" width="0.0338%" height="15" fill="rgb(234,98,12)" fg:x="80050" fg:w="38"/><text x="71.5221%" y="591.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (38 samples, 0.03%)</title><rect x="71.2721%" y="565" width="0.0338%" height="15" fill="rgb(242,170,50)" fg:x="80050" fg:w="38"/><text x="71.5221%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (38 samples, 0.03%)</title><rect x="71.2721%" y="549" width="0.0338%" height="15" fill="rgb(235,7,5)" fg:x="80050" fg:w="38"/><text x="71.5221%" y="559.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (38 samples, 0.03%)</title><rect x="71.2721%" y="533" width="0.0338%" height="15" fill="rgb(241,114,28)" fg:x="80050" fg:w="38"/><text x="71.5221%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (21 samples, 0.02%)</title><rect x="71.2873%" y="517" width="0.0187%" height="15" fill="rgb(246,112,42)" fg:x="80067" fg:w="21"/><text x="71.5373%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (118 samples, 0.11%)</title><rect x="71.2151%" y="629" width="0.1051%" height="15" fill="rgb(248,228,14)" fg:x="79986" fg:w="118"/><text x="71.4651%" y="639.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (118 samples, 0.11%)</title><rect x="71.2151%" y="613" width="0.1051%" height="15" fill="rgb(208,133,18)" fg:x="79986" fg:w="118"/><text x="71.4651%" y="623.50"></text></g><g><title>core::time::Duration::new (16 samples, 0.01%)</title><rect x="71.3060%" y="597" width="0.0142%" height="15" fill="rgb(207,35,49)" fg:x="80088" fg:w="16"/><text x="71.5560%" y="607.50"></text></g><g><title>std::time::SystemTime::duration_since (124 samples, 0.11%)</title><rect x="71.2151%" y="645" width="0.1104%" height="15" fill="rgb(205,68,36)" fg:x="79986" fg:w="124"/><text x="71.4651%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (3,757 samples, 3.35%)</title><rect x="68.4640%" y="1045" width="3.3450%" height="15" fill="rgb(245,62,40)" fg:x="76896" fg:w="3757"/><text x="68.7140%" y="1055.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,247 samples, 1.11%)</title><rect x="70.6987%" y="1029" width="1.1103%" height="15" fill="rgb(228,27,24)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,247 samples, 1.11%)</title><rect x="70.6987%" y="1013" width="1.1103%" height="15" fill="rgb(253,19,12)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="1023.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,247 samples, 1.11%)</title><rect x="70.6987%" y="997" width="1.1103%" height="15" fill="rgb(232,28,20)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="1007.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,247 samples, 1.11%)</title><rect x="70.6987%" y="981" width="1.1103%" height="15" fill="rgb(218,35,51)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="991.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,247 samples, 1.11%)</title><rect x="70.6987%" y="965" width="1.1103%" height="15" fill="rgb(212,90,40)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="975.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,247 samples, 1.11%)</title><rect x="70.6987%" y="949" width="1.1103%" height="15" fill="rgb(220,172,12)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="959.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,247 samples, 1.11%)</title><rect x="70.6987%" y="933" width="1.1103%" height="15" fill="rgb(226,159,20)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1,247 samples, 1.11%)</title><rect x="70.6987%" y="917" width="1.1103%" height="15" fill="rgb(234,205,16)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="927.50"></text></g><g><title>std::panicking::try (1,247 samples, 1.11%)</title><rect x="70.6987%" y="901" width="1.1103%" height="15" fill="rgb(207,9,39)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1,247 samples, 1.11%)</title><rect x="70.6987%" y="885" width="1.1103%" height="15" fill="rgb(249,143,15)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="895.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,247 samples, 1.11%)</title><rect x="70.6987%" y="869" width="1.1103%" height="15" fill="rgb(253,133,29)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,247 samples, 1.11%)</title><rect x="70.6987%" y="853" width="1.1103%" height="15" fill="rgb(221,187,0)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="863.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,247 samples, 1.11%)</title><rect x="70.6987%" y="837" width="1.1103%" height="15" fill="rgb(205,204,26)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="847.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,247 samples, 1.11%)</title><rect x="70.6987%" y="821" width="1.1103%" height="15" fill="rgb(224,68,54)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="831.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,247 samples, 1.11%)</title><rect x="70.6987%" y="805" width="1.1103%" height="15" fill="rgb(209,67,4)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,247 samples, 1.11%)</title><rect x="70.6987%" y="789" width="1.1103%" height="15" fill="rgb(228,229,18)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="799.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,247 samples, 1.11%)</title><rect x="70.6987%" y="773" width="1.1103%" height="15" fill="rgb(231,89,13)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="783.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,247 samples, 1.11%)</title><rect x="70.6987%" y="757" width="1.1103%" height="15" fill="rgb(210,182,18)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="767.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,247 samples, 1.11%)</title><rect x="70.6987%" y="741" width="1.1103%" height="15" fill="rgb(240,105,2)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="751.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,247 samples, 1.11%)</title><rect x="70.6987%" y="725" width="1.1103%" height="15" fill="rgb(207,170,50)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,247 samples, 1.11%)</title><rect x="70.6987%" y="709" width="1.1103%" height="15" fill="rgb(232,133,24)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="719.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,247 samples, 1.11%)</title><rect x="70.6987%" y="693" width="1.1103%" height="15" fill="rgb(235,166,27)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="703.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (1,247 samples, 1.11%)</title><rect x="70.6987%" y="677" width="1.1103%" height="15" fill="rgb(209,19,13)" fg:x="79406" fg:w="1247"/><text x="70.9487%" y="687.50"></text></g><g><title>tremor_common::time::nanotime (704 samples, 0.63%)</title><rect x="71.1822%" y="661" width="0.6268%" height="15" fill="rgb(226,79,39)" fg:x="79949" fg:w="704"/><text x="71.4322%" y="671.50"></text></g><g><title>std::time::SystemTime::now (543 samples, 0.48%)</title><rect x="71.3255%" y="645" width="0.4835%" height="15" fill="rgb(222,163,10)" fg:x="80110" fg:w="543"/><text x="71.5755%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (543 samples, 0.48%)</title><rect x="71.3255%" y="629" width="0.4835%" height="15" fill="rgb(214,44,19)" fg:x="80110" fg:w="543"/><text x="71.5755%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::now (543 samples, 0.48%)</title><rect x="71.3255%" y="613" width="0.4835%" height="15" fill="rgb(210,217,13)" fg:x="80110" fg:w="543"/><text x="71.5755%" y="623.50"></text></g><g><title>__clock_gettime_2 (416 samples, 0.37%)</title><rect x="71.4386%" y="597" width="0.3704%" height="15" fill="rgb(237,61,54)" fg:x="80237" fg:w="416"/><text x="71.6886%" y="607.50"></text></g><g><title>__vdso_clock_gettime (399 samples, 0.36%)</title><rect x="71.4538%" y="581" width="0.3552%" height="15" fill="rgb(226,184,24)" fg:x="80254" fg:w="399"/><text x="71.7038%" y="591.50"></text></g><g><title>[[vdso]] (276 samples, 0.25%)</title><rect x="71.5633%" y="565" width="0.2457%" height="15" fill="rgb(223,226,4)" fg:x="80377" fg:w="276"/><text x="71.8133%" y="575.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::default::Default&gt;::default (14 samples, 0.01%)</title><rect x="72.3299%" y="949" width="0.0125%" height="15" fill="rgb(210,26,41)" fg:x="81238" fg:w="14"/><text x="72.5799%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::default::Default for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::default (14 samples, 0.01%)</title><rect x="72.3299%" y="933" width="0.0125%" height="15" fill="rgb(220,221,6)" fg:x="81238" fg:w="14"/><text x="72.5799%" y="943.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (17 samples, 0.02%)</title><rect x="72.3423%" y="853" width="0.0151%" height="15" fill="rgb(225,89,49)" fg:x="81252" fg:w="17"/><text x="72.5923%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (23 samples, 0.02%)</title><rect x="72.3423%" y="917" width="0.0205%" height="15" fill="rgb(218,70,45)" fg:x="81252" fg:w="23"/><text x="72.5923%" y="927.50"></text></g><g><title>std::collections::hash::map::RandomState::new (23 samples, 0.02%)</title><rect x="72.3423%" y="901" width="0.0205%" height="15" fill="rgb(238,166,21)" fg:x="81252" fg:w="23"/><text x="72.5923%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (23 samples, 0.02%)</title><rect x="72.3423%" y="885" width="0.0205%" height="15" fill="rgb(224,141,44)" fg:x="81252" fg:w="23"/><text x="72.5923%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (23 samples, 0.02%)</title><rect x="72.3423%" y="869" width="0.0205%" height="15" fill="rgb(230,12,49)" fg:x="81252" fg:w="23"/><text x="72.5923%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="72.4064%" y="645" width="0.0107%" height="15" fill="rgb(212,174,12)" fg:x="81324" fg:w="12"/><text x="72.6564%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (61 samples, 0.05%)</title><rect x="72.4064%" y="677" width="0.0543%" height="15" fill="rgb(246,67,9)" fg:x="81324" fg:w="61"/><text x="72.6564%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (61 samples, 0.05%)</title><rect x="72.4064%" y="661" width="0.0543%" height="15" fill="rgb(239,35,23)" fg:x="81324" fg:w="61"/><text x="72.6564%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (49 samples, 0.04%)</title><rect x="72.4171%" y="645" width="0.0436%" height="15" fill="rgb(211,167,0)" fg:x="81336" fg:w="49"/><text x="72.6671%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (39 samples, 0.03%)</title><rect x="72.4260%" y="629" width="0.0347%" height="15" fill="rgb(225,119,45)" fg:x="81346" fg:w="39"/><text x="72.6760%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (39 samples, 0.03%)</title><rect x="72.4260%" y="613" width="0.0347%" height="15" fill="rgb(210,162,6)" fg:x="81346" fg:w="39"/><text x="72.6760%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (39 samples, 0.03%)</title><rect x="72.4260%" y="597" width="0.0347%" height="15" fill="rgb(208,118,35)" fg:x="81346" fg:w="39"/><text x="72.6760%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="72.4643%" y="677" width="0.0223%" height="15" fill="rgb(239,4,53)" fg:x="81389" fg:w="25"/><text x="72.7143%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="72.4643%" y="661" width="0.0223%" height="15" fill="rgb(213,130,21)" fg:x="81389" fg:w="25"/><text x="72.7143%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="72.4643%" y="645" width="0.0223%" height="15" fill="rgb(235,148,0)" fg:x="81389" fg:w="25"/><text x="72.7143%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="72.4652%" y="629" width="0.0214%" height="15" fill="rgb(244,224,18)" fg:x="81390" fg:w="24"/><text x="72.7152%" y="639.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (24 samples, 0.02%)</title><rect x="72.4652%" y="613" width="0.0214%" height="15" fill="rgb(211,214,4)" fg:x="81390" fg:w="24"/><text x="72.7152%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (189 samples, 0.17%)</title><rect x="72.3628%" y="853" width="0.1683%" height="15" fill="rgb(206,119,25)" fg:x="81275" fg:w="189"/><text x="72.6128%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (176 samples, 0.16%)</title><rect x="72.3744%" y="837" width="0.1567%" height="15" fill="rgb(243,93,47)" fg:x="81288" fg:w="176"/><text x="72.6244%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (176 samples, 0.16%)</title><rect x="72.3744%" y="821" width="0.1567%" height="15" fill="rgb(224,194,6)" fg:x="81288" fg:w="176"/><text x="72.6244%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (176 samples, 0.16%)</title><rect x="72.3744%" y="805" width="0.1567%" height="15" fill="rgb(243,229,6)" fg:x="81288" fg:w="176"/><text x="72.6244%" y="815.50"></text></g><g><title>alloc::alloc::alloc (176 samples, 0.16%)</title><rect x="72.3744%" y="789" width="0.1567%" height="15" fill="rgb(207,23,50)" fg:x="81288" fg:w="176"/><text x="72.6244%" y="799.50"></text></g><g><title>__rg_alloc (176 samples, 0.16%)</title><rect x="72.3744%" y="773" width="0.1567%" height="15" fill="rgb(253,192,32)" fg:x="81288" fg:w="176"/><text x="72.6244%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (176 samples, 0.16%)</title><rect x="72.3744%" y="757" width="0.1567%" height="15" fill="rgb(213,21,6)" fg:x="81288" fg:w="176"/><text x="72.6244%" y="767.50"></text></g><g><title>rust_alloc (166 samples, 0.15%)</title><rect x="72.3833%" y="741" width="0.1478%" height="15" fill="rgb(243,151,13)" fg:x="81298" fg:w="166"/><text x="72.6333%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (157 samples, 0.14%)</title><rect x="72.3913%" y="725" width="0.1398%" height="15" fill="rgb(233,165,41)" fg:x="81307" fg:w="157"/><text x="72.6413%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (157 samples, 0.14%)</title><rect x="72.3913%" y="709" width="0.1398%" height="15" fill="rgb(246,176,45)" fg:x="81307" fg:w="157"/><text x="72.6413%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (148 samples, 0.13%)</title><rect x="72.3993%" y="693" width="0.1318%" height="15" fill="rgb(217,170,52)" fg:x="81316" fg:w="148"/><text x="72.6493%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (50 samples, 0.04%)</title><rect x="72.4866%" y="677" width="0.0445%" height="15" fill="rgb(214,203,54)" fg:x="81414" fg:w="50"/><text x="72.7366%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (50 samples, 0.04%)</title><rect x="72.4866%" y="661" width="0.0445%" height="15" fill="rgb(248,215,49)" fg:x="81414" fg:w="50"/><text x="72.7366%" y="671.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (221 samples, 0.20%)</title><rect x="72.3423%" y="949" width="0.1968%" height="15" fill="rgb(208,46,10)" fg:x="81252" fg:w="221"/><text x="72.5923%" y="959.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (221 samples, 0.20%)</title><rect x="72.3423%" y="933" width="0.1968%" height="15" fill="rgb(254,5,31)" fg:x="81252" fg:w="221"/><text x="72.5923%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (198 samples, 0.18%)</title><rect x="72.3628%" y="917" width="0.1763%" height="15" fill="rgb(222,104,33)" fg:x="81275" fg:w="198"/><text x="72.6128%" y="927.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (198 samples, 0.18%)</title><rect x="72.3628%" y="901" width="0.1763%" height="15" fill="rgb(248,49,16)" fg:x="81275" fg:w="198"/><text x="72.6128%" y="911.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (198 samples, 0.18%)</title><rect x="72.3628%" y="885" width="0.1763%" height="15" fill="rgb(232,198,41)" fg:x="81275" fg:w="198"/><text x="72.6128%" y="895.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (198 samples, 0.18%)</title><rect x="72.3628%" y="869" width="0.1763%" height="15" fill="rgb(214,125,3)" fg:x="81275" fg:w="198"/><text x="72.6128%" y="879.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="72.9745%" y="741" width="0.0107%" height="15" fill="rgb(229,220,28)" fg:x="81962" fg:w="12"/><text x="73.2245%" y="751.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="72.9878%" y="709" width="0.0116%" height="15" fill="rgb(222,64,37)" fg:x="81977" fg:w="13"/><text x="73.2378%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (211 samples, 0.19%)</title><rect x="72.9851%" y="741" width="0.1879%" height="15" fill="rgb(249,184,13)" fg:x="81974" fg:w="211"/><text x="73.2351%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (208 samples, 0.19%)</title><rect x="72.9878%" y="725" width="0.1852%" height="15" fill="rgb(252,176,6)" fg:x="81977" fg:w="208"/><text x="73.2378%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (195 samples, 0.17%)</title><rect x="72.9994%" y="709" width="0.1736%" height="15" fill="rgb(228,153,7)" fg:x="81990" fg:w="195"/><text x="73.2494%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (171 samples, 0.15%)</title><rect x="73.0208%" y="693" width="0.1522%" height="15" fill="rgb(242,193,5)" fg:x="82014" fg:w="171"/><text x="73.2708%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (171 samples, 0.15%)</title><rect x="73.0208%" y="677" width="0.1522%" height="15" fill="rgb(232,140,9)" fg:x="82014" fg:w="171"/><text x="73.2708%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (251 samples, 0.22%)</title><rect x="72.9540%" y="885" width="0.2235%" height="15" fill="rgb(213,222,16)" fg:x="81939" fg:w="251"/><text x="73.2040%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (251 samples, 0.22%)</title><rect x="72.9540%" y="869" width="0.2235%" height="15" fill="rgb(222,75,50)" fg:x="81939" fg:w="251"/><text x="73.2040%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (232 samples, 0.21%)</title><rect x="72.9709%" y="853" width="0.2066%" height="15" fill="rgb(205,180,2)" fg:x="81958" fg:w="232"/><text x="73.2209%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (232 samples, 0.21%)</title><rect x="72.9709%" y="837" width="0.2066%" height="15" fill="rgb(216,34,7)" fg:x="81958" fg:w="232"/><text x="73.2209%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (232 samples, 0.21%)</title><rect x="72.9709%" y="821" width="0.2066%" height="15" fill="rgb(253,16,32)" fg:x="81958" fg:w="232"/><text x="73.2209%" y="831.50"></text></g><g><title>alloc::alloc::alloc (232 samples, 0.21%)</title><rect x="72.9709%" y="805" width="0.2066%" height="15" fill="rgb(208,97,28)" fg:x="81958" fg:w="232"/><text x="73.2209%" y="815.50"></text></g><g><title>__rg_alloc (232 samples, 0.21%)</title><rect x="72.9709%" y="789" width="0.2066%" height="15" fill="rgb(225,92,11)" fg:x="81958" fg:w="232"/><text x="73.2209%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (232 samples, 0.21%)</title><rect x="72.9709%" y="773" width="0.2066%" height="15" fill="rgb(243,38,12)" fg:x="81958" fg:w="232"/><text x="73.2209%" y="783.50"></text></g><g><title>rust_alloc (228 samples, 0.20%)</title><rect x="72.9745%" y="757" width="0.2030%" height="15" fill="rgb(208,139,16)" fg:x="81962" fg:w="228"/><text x="73.2245%" y="767.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (14 samples, 0.01%)</title><rect x="73.1775%" y="789" width="0.0125%" height="15" fill="rgb(227,24,9)" fg:x="82190" fg:w="14"/><text x="73.4275%" y="799.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (18 samples, 0.02%)</title><rect x="73.1899%" y="773" width="0.0160%" height="15" fill="rgb(206,62,11)" fg:x="82204" fg:w="18"/><text x="73.4399%" y="783.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (33 samples, 0.03%)</title><rect x="73.1899%" y="789" width="0.0294%" height="15" fill="rgb(228,134,27)" fg:x="82204" fg:w="33"/><text x="73.4399%" y="799.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="73.2060%" y="773" width="0.0134%" height="15" fill="rgb(205,55,33)" fg:x="82222" fg:w="15"/><text x="73.4560%" y="783.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="73.2077%" y="757" width="0.0116%" height="15" fill="rgb(243,75,43)" fg:x="82224" fg:w="13"/><text x="73.4577%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (13 samples, 0.01%)</title><rect x="73.2077%" y="741" width="0.0116%" height="15" fill="rgb(223,27,42)" fg:x="82224" fg:w="13"/><text x="73.4577%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (125 samples, 0.11%)</title><rect x="73.1775%" y="853" width="0.1113%" height="15" fill="rgb(232,189,33)" fg:x="82190" fg:w="125"/><text x="73.4275%" y="863.50"></text></g><g><title>std::collections::hash::map::RandomState::new (125 samples, 0.11%)</title><rect x="73.1775%" y="837" width="0.1113%" height="15" fill="rgb(210,9,39)" fg:x="82190" fg:w="125"/><text x="73.4275%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (125 samples, 0.11%)</title><rect x="73.1775%" y="821" width="0.1113%" height="15" fill="rgb(242,85,26)" fg:x="82190" fg:w="125"/><text x="73.4275%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (125 samples, 0.11%)</title><rect x="73.1775%" y="805" width="0.1113%" height="15" fill="rgb(248,44,4)" fg:x="82190" fg:w="125"/><text x="73.4275%" y="815.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (78 samples, 0.07%)</title><rect x="73.2193%" y="789" width="0.0694%" height="15" fill="rgb(250,96,46)" fg:x="82237" fg:w="78"/><text x="73.4693%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (14 samples, 0.01%)</title><rect x="73.2763%" y="773" width="0.0125%" height="15" fill="rgb(229,116,26)" fg:x="82301" fg:w="14"/><text x="73.5263%" y="783.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (14 samples, 0.01%)</title><rect x="73.2888%" y="789" width="0.0125%" height="15" fill="rgb(246,94,34)" fg:x="82315" fg:w="14"/><text x="73.5388%" y="799.50"></text></g><g><title>aligned_size (20 samples, 0.02%)</title><rect x="73.3475%" y="661" width="0.0178%" height="15" fill="rgb(251,73,21)" fg:x="82381" fg:w="20"/><text x="73.5975%" y="671.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="73.3689%" y="629" width="0.0134%" height="15" fill="rgb(254,121,25)" fg:x="82405" fg:w="15"/><text x="73.6189%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="73.3920%" y="613" width="0.0196%" height="15" fill="rgb(215,161,49)" fg:x="82431" fg:w="22"/><text x="73.6420%" y="623.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (19 samples, 0.02%)</title><rect x="73.3947%" y="597" width="0.0169%" height="15" fill="rgb(221,43,13)" fg:x="82434" fg:w="19"/><text x="73.6447%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="73.4116%" y="613" width="0.0196%" height="15" fill="rgb(249,5,37)" fg:x="82453" fg:w="22"/><text x="73.6616%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="73.4116%" y="597" width="0.0196%" height="15" fill="rgb(226,25,44)" fg:x="82453" fg:w="22"/><text x="73.6616%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="73.4116%" y="581" width="0.0196%" height="15" fill="rgb(238,189,16)" fg:x="82453" fg:w="22"/><text x="73.6616%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="73.4116%" y="565" width="0.0196%" height="15" fill="rgb(251,186,8)" fg:x="82453" fg:w="22"/><text x="73.6616%" y="575.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (22 samples, 0.02%)</title><rect x="73.4116%" y="549" width="0.0196%" height="15" fill="rgb(254,34,31)" fg:x="82453" fg:w="22"/><text x="73.6616%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (326 samples, 0.29%)</title><rect x="73.3680%" y="661" width="0.2903%" height="15" fill="rgb(225,215,27)" fg:x="82404" fg:w="326"/><text x="73.6180%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (325 samples, 0.29%)</title><rect x="73.3689%" y="645" width="0.2894%" height="15" fill="rgb(221,192,48)" fg:x="82405" fg:w="325"/><text x="73.6189%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (303 samples, 0.27%)</title><rect x="73.3885%" y="629" width="0.2698%" height="15" fill="rgb(219,137,20)" fg:x="82427" fg:w="303"/><text x="73.6385%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::take (255 samples, 0.23%)</title><rect x="73.4312%" y="613" width="0.2270%" height="15" fill="rgb(219,84,11)" fg:x="82475" fg:w="255"/><text x="73.6812%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (255 samples, 0.23%)</title><rect x="73.4312%" y="597" width="0.2270%" height="15" fill="rgb(224,10,23)" fg:x="82475" fg:w="255"/><text x="73.6812%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (548 samples, 0.49%)</title><rect x="73.1775%" y="885" width="0.4879%" height="15" fill="rgb(248,22,39)" fg:x="82190" fg:w="548"/><text x="73.4275%" y="895.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (548 samples, 0.49%)</title><rect x="73.1775%" y="869" width="0.4879%" height="15" fill="rgb(212,154,20)" fg:x="82190" fg:w="548"/><text x="73.4275%" y="879.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (423 samples, 0.38%)</title><rect x="73.2888%" y="853" width="0.3766%" height="15" fill="rgb(236,199,50)" fg:x="82315" fg:w="423"/><text x="73.5388%" y="863.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (423 samples, 0.38%)</title><rect x="73.2888%" y="837" width="0.3766%" height="15" fill="rgb(211,9,17)" fg:x="82315" fg:w="423"/><text x="73.5388%" y="847.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (423 samples, 0.38%)</title><rect x="73.2888%" y="821" width="0.3766%" height="15" fill="rgb(243,216,36)" fg:x="82315" fg:w="423"/><text x="73.5388%" y="831.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (423 samples, 0.38%)</title><rect x="73.2888%" y="805" width="0.3766%" height="15" fill="rgb(250,2,10)" fg:x="82315" fg:w="423"/><text x="73.5388%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (409 samples, 0.36%)</title><rect x="73.3012%" y="789" width="0.3642%" height="15" fill="rgb(226,50,48)" fg:x="82329" fg:w="409"/><text x="73.5512%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (369 samples, 0.33%)</title><rect x="73.3368%" y="773" width="0.3285%" height="15" fill="rgb(243,81,16)" fg:x="82369" fg:w="369"/><text x="73.5868%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (369 samples, 0.33%)</title><rect x="73.3368%" y="757" width="0.3285%" height="15" fill="rgb(250,14,2)" fg:x="82369" fg:w="369"/><text x="73.5868%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (369 samples, 0.33%)</title><rect x="73.3368%" y="741" width="0.3285%" height="15" fill="rgb(233,135,29)" fg:x="82369" fg:w="369"/><text x="73.5868%" y="751.50"></text></g><g><title>alloc::alloc::alloc (367 samples, 0.33%)</title><rect x="73.3386%" y="725" width="0.3268%" height="15" fill="rgb(224,64,43)" fg:x="82371" fg:w="367"/><text x="73.5886%" y="735.50"></text></g><g><title>__rg_alloc (367 samples, 0.33%)</title><rect x="73.3386%" y="709" width="0.3268%" height="15" fill="rgb(238,84,13)" fg:x="82371" fg:w="367"/><text x="73.5886%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (367 samples, 0.33%)</title><rect x="73.3386%" y="693" width="0.3268%" height="15" fill="rgb(253,48,26)" fg:x="82371" fg:w="367"/><text x="73.5886%" y="703.50"></text></g><g><title>rust_alloc (357 samples, 0.32%)</title><rect x="73.3475%" y="677" width="0.3179%" height="15" fill="rgb(205,223,31)" fg:x="82381" fg:w="357"/><text x="73.5975%" y="687.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (926 samples, 0.82%)</title><rect x="72.8489%" y="933" width="0.8245%" height="15" fill="rgb(221,41,32)" fg:x="81821" fg:w="926"/><text x="73.0989%" y="943.50"></text></g><g><title>value_trait::Builder::object (808 samples, 0.72%)</title><rect x="72.9540%" y="917" width="0.7194%" height="15" fill="rgb(213,158,31)" fg:x="81939" fg:w="808"/><text x="73.2040%" y="927.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (808 samples, 0.72%)</title><rect x="72.9540%" y="901" width="0.7194%" height="15" fill="rgb(245,126,43)" fg:x="81939" fg:w="808"/><text x="73.2040%" y="911.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,627 samples, 1.45%)</title><rect x="72.2373%" y="965" width="1.4486%" height="15" fill="rgb(227,7,22)" fg:x="81134" fg:w="1627"/><text x="72.4873%" y="975.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (1,288 samples, 1.15%)</title><rect x="72.5391%" y="949" width="1.1468%" height="15" fill="rgb(252,90,44)" fg:x="81473" fg:w="1288"/><text x="72.7891%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::default::Default for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::default (14 samples, 0.01%)</title><rect x="73.6734%" y="933" width="0.0125%" height="15" fill="rgb(253,91,0)" fg:x="82747" fg:w="14"/><text x="73.9234%" y="943.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="73.6734%" y="917" width="0.0125%" height="15" fill="rgb(252,175,49)" fg:x="82747" fg:w="14"/><text x="73.9234%" y="927.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (14 samples, 0.01%)</title><rect x="73.6734%" y="901" width="0.0125%" height="15" fill="rgb(246,150,1)" fg:x="82747" fg:w="14"/><text x="73.9234%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (43 samples, 0.04%)</title><rect x="73.6939%" y="965" width="0.0383%" height="15" fill="rgb(241,192,25)" fg:x="82770" fg:w="43"/><text x="73.9439%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (43 samples, 0.04%)</title><rect x="73.6939%" y="949" width="0.0383%" height="15" fill="rgb(239,187,11)" fg:x="82770" fg:w="43"/><text x="73.9439%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (43 samples, 0.04%)</title><rect x="73.6939%" y="933" width="0.0383%" height="15" fill="rgb(218,202,51)" fg:x="82770" fg:w="43"/><text x="73.9439%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (16 samples, 0.01%)</title><rect x="73.7179%" y="917" width="0.0142%" height="15" fill="rgb(225,176,8)" fg:x="82797" fg:w="16"/><text x="73.9679%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (16 samples, 0.01%)</title><rect x="73.7179%" y="901" width="0.0142%" height="15" fill="rgb(219,122,41)" fg:x="82797" fg:w="16"/><text x="73.9679%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (32 samples, 0.03%)</title><rect x="73.7669%" y="885" width="0.0285%" height="15" fill="rgb(248,140,20)" fg:x="82852" fg:w="32"/><text x="74.0169%" y="895.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (12 samples, 0.01%)</title><rect x="73.8336%" y="741" width="0.0107%" height="15" fill="rgb(245,41,37)" fg:x="82927" fg:w="12"/><text x="74.0836%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (24 samples, 0.02%)</title><rect x="73.8274%" y="789" width="0.0214%" height="15" fill="rgb(235,82,39)" fg:x="82920" fg:w="24"/><text x="74.0774%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (24 samples, 0.02%)</title><rect x="73.8274%" y="773" width="0.0214%" height="15" fill="rgb(230,108,42)" fg:x="82920" fg:w="24"/><text x="74.0774%" y="783.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (24 samples, 0.02%)</title><rect x="73.8274%" y="757" width="0.0214%" height="15" fill="rgb(215,150,50)" fg:x="82920" fg:w="24"/><text x="74.0774%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (41 samples, 0.04%)</title><rect x="73.8141%" y="821" width="0.0365%" height="15" fill="rgb(233,212,5)" fg:x="82905" fg:w="41"/><text x="74.0641%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (41 samples, 0.04%)</title><rect x="73.8141%" y="805" width="0.0365%" height="15" fill="rgb(245,80,22)" fg:x="82905" fg:w="41"/><text x="74.0641%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (43 samples, 0.04%)</title><rect x="73.8141%" y="853" width="0.0383%" height="15" fill="rgb(238,129,16)" fg:x="82905" fg:w="43"/><text x="74.0641%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (43 samples, 0.04%)</title><rect x="73.8141%" y="837" width="0.0383%" height="15" fill="rgb(240,19,0)" fg:x="82905" fg:w="43"/><text x="74.0641%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (60 samples, 0.05%)</title><rect x="73.8007%" y="869" width="0.0534%" height="15" fill="rgb(232,42,35)" fg:x="82890" fg:w="60"/><text x="74.0507%" y="879.50"></text></g><g><title>rust_dealloc (68 samples, 0.06%)</title><rect x="73.7954%" y="885" width="0.0605%" height="15" fill="rgb(223,130,24)" fg:x="82884" fg:w="68"/><text x="74.0454%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (118 samples, 0.11%)</title><rect x="73.7580%" y="933" width="0.1051%" height="15" fill="rgb(237,16,22)" fg:x="82842" fg:w="118"/><text x="74.0080%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (118 samples, 0.11%)</title><rect x="73.7580%" y="917" width="0.1051%" height="15" fill="rgb(248,192,20)" fg:x="82842" fg:w="118"/><text x="74.0080%" y="927.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (118 samples, 0.11%)</title><rect x="73.7580%" y="901" width="0.1051%" height="15" fill="rgb(233,167,2)" fg:x="82842" fg:w="118"/><text x="74.0080%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (141 samples, 0.13%)</title><rect x="73.7419%" y="949" width="0.1255%" height="15" fill="rgb(252,71,44)" fg:x="82824" fg:w="141"/><text x="73.9919%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::private::RVec&lt;T&gt;::buffer_mut (12 samples, 0.01%)</title><rect x="73.8808%" y="885" width="0.0107%" height="15" fill="rgb(238,37,47)" fg:x="82980" fg:w="12"/><text x="74.1308%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (46 samples, 0.04%)</title><rect x="73.8675%" y="949" width="0.0410%" height="15" fill="rgb(214,202,54)" fg:x="82965" fg:w="46"/><text x="74.1175%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (46 samples, 0.04%)</title><rect x="73.8675%" y="933" width="0.0410%" height="15" fill="rgb(254,165,40)" fg:x="82965" fg:w="46"/><text x="74.1175%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (33 samples, 0.03%)</title><rect x="73.8791%" y="917" width="0.0294%" height="15" fill="rgb(246,173,38)" fg:x="82978" fg:w="33"/><text x="74.1291%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (32 samples, 0.03%)</title><rect x="73.8799%" y="901" width="0.0285%" height="15" fill="rgb(215,3,27)" fg:x="82979" fg:w="32"/><text x="74.1299%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (42 samples, 0.04%)</title><rect x="73.9084%" y="933" width="0.0374%" height="15" fill="rgb(239,169,51)" fg:x="83011" fg:w="42"/><text x="74.1584%" y="943.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (26 samples, 0.02%)</title><rect x="73.9948%" y="821" width="0.0231%" height="15" fill="rgb(212,5,25)" fg:x="83108" fg:w="26"/><text x="74.2448%" y="831.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (20 samples, 0.02%)</title><rect x="74.0678%" y="677" width="0.0178%" height="15" fill="rgb(243,45,17)" fg:x="83190" fg:w="20"/><text x="74.3178%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="74.0678%" y="661" width="0.0178%" height="15" fill="rgb(242,97,9)" fg:x="83190" fg:w="20"/><text x="74.3178%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (45 samples, 0.04%)</title><rect x="74.0553%" y="725" width="0.0401%" height="15" fill="rgb(228,71,31)" fg:x="83176" fg:w="45"/><text x="74.3053%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (45 samples, 0.04%)</title><rect x="74.0553%" y="709" width="0.0401%" height="15" fill="rgb(252,184,16)" fg:x="83176" fg:w="45"/><text x="74.3053%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (45 samples, 0.04%)</title><rect x="74.0553%" y="693" width="0.0401%" height="15" fill="rgb(236,169,46)" fg:x="83176" fg:w="45"/><text x="74.3053%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (75 samples, 0.07%)</title><rect x="74.0402%" y="789" width="0.0668%" height="15" fill="rgb(207,17,47)" fg:x="83159" fg:w="75"/><text x="74.2902%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (75 samples, 0.07%)</title><rect x="74.0402%" y="773" width="0.0668%" height="15" fill="rgb(206,201,28)" fg:x="83159" fg:w="75"/><text x="74.2902%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (75 samples, 0.07%)</title><rect x="74.0402%" y="757" width="0.0668%" height="15" fill="rgb(224,184,23)" fg:x="83159" fg:w="75"/><text x="74.2902%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (75 samples, 0.07%)</title><rect x="74.0402%" y="741" width="0.0668%" height="15" fill="rgb(208,139,48)" fg:x="83159" fg:w="75"/><text x="74.2902%" y="751.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="74.0954%" y="725" width="0.0116%" height="15" fill="rgb(208,130,10)" fg:x="83221" fg:w="13"/><text x="74.3454%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (93 samples, 0.08%)</title><rect x="74.0251%" y="805" width="0.0828%" height="15" fill="rgb(211,213,45)" fg:x="83142" fg:w="93"/><text x="74.2751%" y="815.50"></text></g><g><title>rust_dealloc (102 samples, 0.09%)</title><rect x="74.0179%" y="821" width="0.0908%" height="15" fill="rgb(235,100,30)" fg:x="83134" fg:w="102"/><text x="74.2679%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (140 samples, 0.12%)</title><rect x="73.9886%" y="869" width="0.1246%" height="15" fill="rgb(206,144,31)" fg:x="83101" fg:w="140"/><text x="74.2386%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (140 samples, 0.12%)</title><rect x="73.9886%" y="853" width="0.1246%" height="15" fill="rgb(224,200,26)" fg:x="83101" fg:w="140"/><text x="74.2386%" y="863.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (140 samples, 0.12%)</title><rect x="73.9886%" y="837" width="0.1246%" height="15" fill="rgb(247,104,53)" fg:x="83101" fg:w="140"/><text x="74.2386%" y="847.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (157 samples, 0.14%)</title><rect x="73.9770%" y="885" width="0.1398%" height="15" fill="rgb(220,14,17)" fg:x="83088" fg:w="157"/><text x="74.2270%" y="895.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (20 samples, 0.02%)</title><rect x="74.1595%" y="741" width="0.0178%" height="15" fill="rgb(230,140,40)" fg:x="83293" fg:w="20"/><text x="74.4095%" y="751.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="74.1595%" y="725" width="0.0178%" height="15" fill="rgb(229,2,41)" fg:x="83293" fg:w="20"/><text x="74.4095%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="74.1479%" y="789" width="0.0356%" height="15" fill="rgb(232,89,16)" fg:x="83280" fg:w="40"/><text x="74.3979%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="74.1479%" y="773" width="0.0356%" height="15" fill="rgb(247,59,52)" fg:x="83280" fg:w="40"/><text x="74.3979%" y="783.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (40 samples, 0.04%)</title><rect x="74.1479%" y="757" width="0.0356%" height="15" fill="rgb(226,110,21)" fg:x="83280" fg:w="40"/><text x="74.3979%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (58 samples, 0.05%)</title><rect x="74.1364%" y="821" width="0.0516%" height="15" fill="rgb(224,176,43)" fg:x="83267" fg:w="58"/><text x="74.3864%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (58 samples, 0.05%)</title><rect x="74.1364%" y="805" width="0.0516%" height="15" fill="rgb(221,73,6)" fg:x="83267" fg:w="58"/><text x="74.3864%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (318 samples, 0.28%)</title><rect x="73.9084%" y="949" width="0.2831%" height="15" fill="rgb(232,78,19)" fg:x="83011" fg:w="318"/><text x="74.1584%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (276 samples, 0.25%)</title><rect x="73.9458%" y="933" width="0.2457%" height="15" fill="rgb(233,112,48)" fg:x="83053" fg:w="276"/><text x="74.1958%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (265 samples, 0.24%)</title><rect x="73.9556%" y="917" width="0.2359%" height="15" fill="rgb(243,131,47)" fg:x="83064" fg:w="265"/><text x="74.2056%" y="927.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (265 samples, 0.24%)</title><rect x="73.9556%" y="901" width="0.2359%" height="15" fill="rgb(226,51,1)" fg:x="83064" fg:w="265"/><text x="74.2056%" y="911.50"></text></g><g><title>rust_dealloc (84 samples, 0.07%)</title><rect x="74.1168%" y="885" width="0.0748%" height="15" fill="rgb(247,58,7)" fg:x="83245" fg:w="84"/><text x="74.3668%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (75 samples, 0.07%)</title><rect x="74.1248%" y="869" width="0.0668%" height="15" fill="rgb(209,7,32)" fg:x="83254" fg:w="75"/><text x="74.3748%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (62 samples, 0.06%)</title><rect x="74.1364%" y="853" width="0.0552%" height="15" fill="rgb(209,39,41)" fg:x="83267" fg:w="62"/><text x="74.3864%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (62 samples, 0.06%)</title><rect x="74.1364%" y="837" width="0.0552%" height="15" fill="rgb(226,182,46)" fg:x="83267" fg:w="62"/><text x="74.3864%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (32 samples, 0.03%)</title><rect x="74.2183%" y="853" width="0.0285%" height="15" fill="rgb(230,219,10)" fg:x="83359" fg:w="32"/><text x="74.4683%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (32 samples, 0.03%)</title><rect x="74.2183%" y="837" width="0.0285%" height="15" fill="rgb(227,175,30)" fg:x="83359" fg:w="32"/><text x="74.4683%" y="847.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (29 samples, 0.03%)</title><rect x="74.2209%" y="821" width="0.0258%" height="15" fill="rgb(217,2,50)" fg:x="83362" fg:w="29"/><text x="74.4709%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (50 samples, 0.04%)</title><rect x="74.2067%" y="917" width="0.0445%" height="15" fill="rgb(229,160,0)" fg:x="83346" fg:w="50"/><text x="74.4567%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (50 samples, 0.04%)</title><rect x="74.2067%" y="901" width="0.0445%" height="15" fill="rgb(207,78,37)" fg:x="83346" fg:w="50"/><text x="74.4567%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (50 samples, 0.04%)</title><rect x="74.2067%" y="885" width="0.0445%" height="15" fill="rgb(225,57,0)" fg:x="83346" fg:w="50"/><text x="74.4567%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (50 samples, 0.04%)</title><rect x="74.2067%" y="869" width="0.0445%" height="15" fill="rgb(232,154,2)" fg:x="83346" fg:w="50"/><text x="74.4567%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (64 samples, 0.06%)</title><rect x="74.1951%" y="933" width="0.0570%" height="15" fill="rgb(241,212,25)" fg:x="83333" fg:w="64"/><text x="74.4451%" y="943.50"></text></g><g><title>rust_dealloc (71 samples, 0.06%)</title><rect x="74.1916%" y="949" width="0.0632%" height="15" fill="rgb(226,69,20)" fg:x="83329" fg:w="71"/><text x="74.4416%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (588 samples, 0.52%)</title><rect x="73.7321%" y="965" width="0.5235%" height="15" fill="rgb(247,184,54)" fg:x="82813" fg:w="588"/><text x="73.9821%" y="975.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (2,776 samples, 2.47%)</title><rect x="71.8090%" y="981" width="2.4716%" height="15" fill="rgb(210,145,0)" fg:x="80653" fg:w="2776"/><text x="72.0590%" y="991.50">tr..</text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (28 samples, 0.02%)</title><rect x="74.2557%" y="965" width="0.0249%" height="15" fill="rgb(253,82,12)" fg:x="83401" fg:w="28"/><text x="74.5057%" y="975.50"></text></g><g><title>tremor_pipeline::EventId::new (18 samples, 0.02%)</title><rect x="74.2646%" y="949" width="0.0160%" height="15" fill="rgb(245,42,11)" fg:x="83411" fg:w="18"/><text x="74.5146%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (63 samples, 0.06%)</title><rect x="74.6314%" y="805" width="0.0561%" height="15" fill="rgb(219,147,32)" fg:x="83823" fg:w="63"/><text x="74.8814%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (63 samples, 0.06%)</title><rect x="74.6314%" y="789" width="0.0561%" height="15" fill="rgb(246,12,7)" fg:x="83823" fg:w="63"/><text x="74.8814%" y="799.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (54 samples, 0.05%)</title><rect x="74.6394%" y="773" width="0.0481%" height="15" fill="rgb(243,50,9)" fg:x="83832" fg:w="54"/><text x="74.8894%" y="783.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (41 samples, 0.04%)</title><rect x="74.6510%" y="757" width="0.0365%" height="15" fill="rgb(219,149,6)" fg:x="83845" fg:w="41"/><text x="74.9010%" y="767.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (41 samples, 0.04%)</title><rect x="74.6510%" y="741" width="0.0365%" height="15" fill="rgb(241,51,42)" fg:x="83845" fg:w="41"/><text x="74.9010%" y="751.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (41 samples, 0.04%)</title><rect x="74.6510%" y="725" width="0.0365%" height="15" fill="rgb(226,128,27)" fg:x="83845" fg:w="41"/><text x="74.9010%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (184 samples, 0.16%)</title><rect x="74.6225%" y="853" width="0.1638%" height="15" fill="rgb(244,144,4)" fg:x="83813" fg:w="184"/><text x="74.8725%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (184 samples, 0.16%)</title><rect x="74.6225%" y="837" width="0.1638%" height="15" fill="rgb(221,4,13)" fg:x="83813" fg:w="184"/><text x="74.8725%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (177 samples, 0.16%)</title><rect x="74.6287%" y="821" width="0.1576%" height="15" fill="rgb(208,170,28)" fg:x="83820" fg:w="177"/><text x="74.8787%" y="831.50"></text></g><g><title>snmalloc::FreeListIter::take (101 samples, 0.09%)</title><rect x="74.6964%" y="805" width="0.0899%" height="15" fill="rgb(226,131,13)" fg:x="83896" fg:w="101"/><text x="74.9464%" y="815.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (101 samples, 0.09%)</title><rect x="74.6964%" y="789" width="0.0899%" height="15" fill="rgb(215,72,41)" fg:x="83896" fg:w="101"/><text x="74.9464%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (209 samples, 0.19%)</title><rect x="74.6065%" y="965" width="0.1861%" height="15" fill="rgb(243,108,20)" fg:x="83795" fg:w="209"/><text x="74.8565%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (209 samples, 0.19%)</title><rect x="74.6065%" y="949" width="0.1861%" height="15" fill="rgb(230,189,17)" fg:x="83795" fg:w="209"/><text x="74.8565%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (209 samples, 0.19%)</title><rect x="74.6065%" y="933" width="0.1861%" height="15" fill="rgb(220,50,17)" fg:x="83795" fg:w="209"/><text x="74.8565%" y="943.50"></text></g><g><title>alloc::alloc::alloc (209 samples, 0.19%)</title><rect x="74.6065%" y="917" width="0.1861%" height="15" fill="rgb(248,152,48)" fg:x="83795" fg:w="209"/><text x="74.8565%" y="927.50"></text></g><g><title>__rg_alloc (209 samples, 0.19%)</title><rect x="74.6065%" y="901" width="0.1861%" height="15" fill="rgb(244,91,11)" fg:x="83795" fg:w="209"/><text x="74.8565%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (209 samples, 0.19%)</title><rect x="74.6065%" y="885" width="0.1861%" height="15" fill="rgb(220,157,5)" fg:x="83795" fg:w="209"/><text x="74.8565%" y="895.50"></text></g><g><title>rust_alloc (202 samples, 0.18%)</title><rect x="74.6127%" y="869" width="0.1798%" height="15" fill="rgb(253,137,8)" fg:x="83802" fg:w="202"/><text x="74.8627%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (12 samples, 0.01%)</title><rect x="74.7925%" y="965" width="0.0107%" height="15" fill="rgb(217,137,51)" fg:x="84004" fg:w="12"/><text x="75.0425%" y="975.50"></text></g><g><title>alloc::slice::hack::into_vec (12 samples, 0.01%)</title><rect x="74.7925%" y="949" width="0.0107%" height="15" fill="rgb(218,209,53)" fg:x="84004" fg:w="12"/><text x="75.0425%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (12 samples, 0.01%)</title><rect x="74.7925%" y="933" width="0.0107%" height="15" fill="rgb(249,137,25)" fg:x="84004" fg:w="12"/><text x="75.0425%" y="943.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (608 samples, 0.54%)</title><rect x="74.2806%" y="981" width="0.5413%" height="15" fill="rgb(239,155,26)" fg:x="83429" fg:w="608"/><text x="74.5306%" y="991.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="74.8237%" y="725" width="0.0116%" height="15" fill="rgb(227,85,46)" fg:x="84039" fg:w="13"/><text x="75.0737%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (16 samples, 0.01%)</title><rect x="74.8219%" y="741" width="0.0142%" height="15" fill="rgb(251,107,43)" fg:x="84037" fg:w="16"/><text x="75.0719%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (67 samples, 0.06%)</title><rect x="74.8219%" y="773" width="0.0597%" height="15" fill="rgb(234,170,33)" fg:x="84037" fg:w="67"/><text x="75.0719%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (67 samples, 0.06%)</title><rect x="74.8219%" y="757" width="0.0597%" height="15" fill="rgb(206,29,35)" fg:x="84037" fg:w="67"/><text x="75.0719%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (51 samples, 0.05%)</title><rect x="74.8362%" y="741" width="0.0454%" height="15" fill="rgb(227,138,25)" fg:x="84053" fg:w="51"/><text x="75.0862%" y="751.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (42 samples, 0.04%)</title><rect x="74.8442%" y="725" width="0.0374%" height="15" fill="rgb(249,131,35)" fg:x="84062" fg:w="42"/><text x="75.0942%" y="735.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="74.8442%" y="709" width="0.0374%" height="15" fill="rgb(239,6,40)" fg:x="84062" fg:w="42"/><text x="75.0942%" y="719.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="74.8442%" y="693" width="0.0374%" height="15" fill="rgb(246,136,47)" fg:x="84062" fg:w="42"/><text x="75.0942%" y="703.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (76 samples, 0.07%)</title><rect x="74.8219%" y="965" width="0.0677%" height="15" fill="rgb(253,58,26)" fg:x="84037" fg:w="76"/><text x="75.0719%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (76 samples, 0.07%)</title><rect x="74.8219%" y="949" width="0.0677%" height="15" fill="rgb(237,141,10)" fg:x="84037" fg:w="76"/><text x="75.0719%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (76 samples, 0.07%)</title><rect x="74.8219%" y="933" width="0.0677%" height="15" fill="rgb(234,156,12)" fg:x="84037" fg:w="76"/><text x="75.0719%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (76 samples, 0.07%)</title><rect x="74.8219%" y="917" width="0.0677%" height="15" fill="rgb(243,224,36)" fg:x="84037" fg:w="76"/><text x="75.0719%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (76 samples, 0.07%)</title><rect x="74.8219%" y="901" width="0.0677%" height="15" fill="rgb(205,229,51)" fg:x="84037" fg:w="76"/><text x="75.0719%" y="911.50"></text></g><g><title>alloc::alloc::alloc (76 samples, 0.07%)</title><rect x="74.8219%" y="885" width="0.0677%" height="15" fill="rgb(223,189,4)" fg:x="84037" fg:w="76"/><text x="75.0719%" y="895.50"></text></g><g><title>__rg_alloc (76 samples, 0.07%)</title><rect x="74.8219%" y="869" width="0.0677%" height="15" fill="rgb(249,167,54)" fg:x="84037" fg:w="76"/><text x="75.0719%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (76 samples, 0.07%)</title><rect x="74.8219%" y="853" width="0.0677%" height="15" fill="rgb(218,34,28)" fg:x="84037" fg:w="76"/><text x="75.0719%" y="863.50"></text></g><g><title>rust_alloc (76 samples, 0.07%)</title><rect x="74.8219%" y="837" width="0.0677%" height="15" fill="rgb(232,109,42)" fg:x="84037" fg:w="76"/><text x="75.0719%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="74.8219%" y="821" width="0.0677%" height="15" fill="rgb(248,214,46)" fg:x="84037" fg:w="76"/><text x="75.0719%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="74.8219%" y="805" width="0.0677%" height="15" fill="rgb(244,216,40)" fg:x="84037" fg:w="76"/><text x="75.0719%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="74.8219%" y="789" width="0.0677%" height="15" fill="rgb(231,226,31)" fg:x="84037" fg:w="76"/><text x="75.0719%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="74.8896%" y="805" width="0.0187%" height="15" fill="rgb(238,38,43)" fg:x="84113" fg:w="21"/><text x="75.1396%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (21 samples, 0.02%)</title><rect x="74.8896%" y="789" width="0.0187%" height="15" fill="rgb(208,88,43)" fg:x="84113" fg:w="21"/><text x="75.1396%" y="799.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (17 samples, 0.02%)</title><rect x="74.8932%" y="773" width="0.0151%" height="15" fill="rgb(205,136,37)" fg:x="84117" fg:w="17"/><text x="75.1432%" y="783.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="74.8958%" y="757" width="0.0125%" height="15" fill="rgb(237,34,14)" fg:x="84120" fg:w="14"/><text x="75.1458%" y="767.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="74.8958%" y="741" width="0.0125%" height="15" fill="rgb(236,193,44)" fg:x="84120" fg:w="14"/><text x="75.1458%" y="751.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="74.8958%" y="725" width="0.0125%" height="15" fill="rgb(231,48,10)" fg:x="84120" fg:w="14"/><text x="75.1458%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (24 samples, 0.02%)</title><rect x="74.8896%" y="965" width="0.0214%" height="15" fill="rgb(213,141,34)" fg:x="84113" fg:w="24"/><text x="75.1396%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.02%)</title><rect x="74.8896%" y="949" width="0.0214%" height="15" fill="rgb(249,130,34)" fg:x="84113" fg:w="24"/><text x="75.1396%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.02%)</title><rect x="74.8896%" y="933" width="0.0214%" height="15" fill="rgb(219,42,41)" fg:x="84113" fg:w="24"/><text x="75.1396%" y="943.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.02%)</title><rect x="74.8896%" y="917" width="0.0214%" height="15" fill="rgb(224,100,54)" fg:x="84113" fg:w="24"/><text x="75.1396%" y="927.50"></text></g><g><title>__rg_alloc (24 samples, 0.02%)</title><rect x="74.8896%" y="901" width="0.0214%" height="15" fill="rgb(229,200,27)" fg:x="84113" fg:w="24"/><text x="75.1396%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (24 samples, 0.02%)</title><rect x="74.8896%" y="885" width="0.0214%" height="15" fill="rgb(217,118,10)" fg:x="84113" fg:w="24"/><text x="75.1396%" y="895.50"></text></g><g><title>rust_alloc (24 samples, 0.02%)</title><rect x="74.8896%" y="869" width="0.0214%" height="15" fill="rgb(206,22,3)" fg:x="84113" fg:w="24"/><text x="75.1396%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="74.8896%" y="853" width="0.0214%" height="15" fill="rgb(232,163,46)" fg:x="84113" fg:w="24"/><text x="75.1396%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="74.8896%" y="837" width="0.0214%" height="15" fill="rgb(206,95,13)" fg:x="84113" fg:w="24"/><text x="75.1396%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="74.8896%" y="821" width="0.0214%" height="15" fill="rgb(253,154,18)" fg:x="84113" fg:w="24"/><text x="75.1396%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="74.9501%" y="613" width="0.0516%" height="15" fill="rgb(219,32,23)" fg:x="84181" fg:w="58"/><text x="75.2001%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (58 samples, 0.05%)</title><rect x="74.9501%" y="597" width="0.0516%" height="15" fill="rgb(230,191,45)" fg:x="84181" fg:w="58"/><text x="75.2001%" y="607.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (47 samples, 0.04%)</title><rect x="74.9599%" y="581" width="0.0418%" height="15" fill="rgb(229,64,36)" fg:x="84192" fg:w="47"/><text x="75.2099%" y="591.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (39 samples, 0.03%)</title><rect x="74.9671%" y="565" width="0.0347%" height="15" fill="rgb(205,129,25)" fg:x="84200" fg:w="39"/><text x="75.2171%" y="575.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (39 samples, 0.03%)</title><rect x="74.9671%" y="549" width="0.0347%" height="15" fill="rgb(254,112,7)" fg:x="84200" fg:w="39"/><text x="75.2171%" y="559.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (39 samples, 0.03%)</title><rect x="74.9671%" y="533" width="0.0347%" height="15" fill="rgb(226,53,48)" fg:x="84200" fg:w="39"/><text x="75.2171%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (147 samples, 0.13%)</title><rect x="74.9421%" y="661" width="0.1309%" height="15" fill="rgb(214,153,38)" fg:x="84172" fg:w="147"/><text x="75.1921%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (147 samples, 0.13%)</title><rect x="74.9421%" y="645" width="0.1309%" height="15" fill="rgb(243,101,7)" fg:x="84172" fg:w="147"/><text x="75.1921%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (140 samples, 0.12%)</title><rect x="74.9484%" y="629" width="0.1246%" height="15" fill="rgb(240,140,22)" fg:x="84179" fg:w="140"/><text x="75.1984%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::take (68 samples, 0.06%)</title><rect x="75.0125%" y="613" width="0.0605%" height="15" fill="rgb(235,114,2)" fg:x="84251" fg:w="68"/><text x="75.2625%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (68 samples, 0.06%)</title><rect x="75.0125%" y="597" width="0.0605%" height="15" fill="rgb(242,59,12)" fg:x="84251" fg:w="68"/><text x="75.2625%" y="607.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (163 samples, 0.15%)</title><rect x="74.9288%" y="821" width="0.1451%" height="15" fill="rgb(252,134,9)" fg:x="84157" fg:w="163"/><text x="75.1788%" y="831.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (159 samples, 0.14%)</title><rect x="74.9323%" y="805" width="0.1416%" height="15" fill="rgb(236,4,44)" fg:x="84161" fg:w="159"/><text x="75.1823%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (159 samples, 0.14%)</title><rect x="74.9323%" y="789" width="0.1416%" height="15" fill="rgb(254,172,41)" fg:x="84161" fg:w="159"/><text x="75.1823%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (153 samples, 0.14%)</title><rect x="74.9377%" y="773" width="0.1362%" height="15" fill="rgb(244,63,20)" fg:x="84167" fg:w="153"/><text x="75.1877%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (153 samples, 0.14%)</title><rect x="74.9377%" y="757" width="0.1362%" height="15" fill="rgb(250,73,31)" fg:x="84167" fg:w="153"/><text x="75.1877%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (153 samples, 0.14%)</title><rect x="74.9377%" y="741" width="0.1362%" height="15" fill="rgb(241,38,36)" fg:x="84167" fg:w="153"/><text x="75.1877%" y="751.50"></text></g><g><title>alloc::alloc::alloc (153 samples, 0.14%)</title><rect x="74.9377%" y="725" width="0.1362%" height="15" fill="rgb(245,211,2)" fg:x="84167" fg:w="153"/><text x="75.1877%" y="735.50"></text></g><g><title>__rg_alloc (153 samples, 0.14%)</title><rect x="74.9377%" y="709" width="0.1362%" height="15" fill="rgb(206,120,28)" fg:x="84167" fg:w="153"/><text x="75.1877%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (153 samples, 0.14%)</title><rect x="74.9377%" y="693" width="0.1362%" height="15" fill="rgb(211,59,34)" fg:x="84167" fg:w="153"/><text x="75.1877%" y="703.50"></text></g><g><title>rust_alloc (153 samples, 0.14%)</title><rect x="74.9377%" y="677" width="0.1362%" height="15" fill="rgb(233,168,5)" fg:x="84167" fg:w="153"/><text x="75.1877%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="75.0739%" y="773" width="0.0178%" height="15" fill="rgb(234,33,13)" fg:x="84320" fg:w="20"/><text x="75.3239%" y="783.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (201 samples, 0.18%)</title><rect x="74.9136%" y="901" width="0.1790%" height="15" fill="rgb(231,150,26)" fg:x="84140" fg:w="201"/><text x="75.1636%" y="911.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (191 samples, 0.17%)</title><rect x="74.9225%" y="885" width="0.1701%" height="15" fill="rgb(217,191,4)" fg:x="84150" fg:w="191"/><text x="75.1725%" y="895.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (184 samples, 0.16%)</title><rect x="74.9288%" y="869" width="0.1638%" height="15" fill="rgb(246,198,38)" fg:x="84157" fg:w="184"/><text x="75.1788%" y="879.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (184 samples, 0.16%)</title><rect x="74.9288%" y="853" width="0.1638%" height="15" fill="rgb(245,64,37)" fg:x="84157" fg:w="184"/><text x="75.1788%" y="863.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (184 samples, 0.16%)</title><rect x="74.9288%" y="837" width="0.1638%" height="15" fill="rgb(250,30,36)" fg:x="84157" fg:w="184"/><text x="75.1788%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (21 samples, 0.02%)</title><rect x="75.0739%" y="821" width="0.0187%" height="15" fill="rgb(217,86,53)" fg:x="84320" fg:w="21"/><text x="75.3239%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (21 samples, 0.02%)</title><rect x="75.0739%" y="805" width="0.0187%" height="15" fill="rgb(228,157,16)" fg:x="84320" fg:w="21"/><text x="75.3239%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (21 samples, 0.02%)</title><rect x="75.0739%" y="789" width="0.0187%" height="15" fill="rgb(217,59,31)" fg:x="84320" fg:w="21"/><text x="75.3239%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (29 samples, 0.03%)</title><rect x="75.4131%" y="853" width="0.0258%" height="15" fill="rgb(237,138,41)" fg:x="84701" fg:w="29"/><text x="75.6631%" y="863.50"></text></g><g><title>std::collections::hash::map::RandomState::new (29 samples, 0.03%)</title><rect x="75.4131%" y="837" width="0.0258%" height="15" fill="rgb(227,91,49)" fg:x="84701" fg:w="29"/><text x="75.6631%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (29 samples, 0.03%)</title><rect x="75.4131%" y="821" width="0.0258%" height="15" fill="rgb(247,21,44)" fg:x="84701" fg:w="29"/><text x="75.6631%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29 samples, 0.03%)</title><rect x="75.4131%" y="805" width="0.0258%" height="15" fill="rgb(219,210,51)" fg:x="84701" fg:w="29"/><text x="75.6631%" y="815.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (19 samples, 0.02%)</title><rect x="75.4220%" y="789" width="0.0169%" height="15" fill="rgb(209,140,6)" fg:x="84711" fg:w="19"/><text x="75.6720%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (12 samples, 0.01%)</title><rect x="75.4790%" y="549" width="0.0107%" height="15" fill="rgb(221,188,24)" fg:x="84775" fg:w="12"/><text x="75.7290%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (12 samples, 0.01%)</title><rect x="75.4790%" y="533" width="0.0107%" height="15" fill="rgb(232,154,20)" fg:x="84775" fg:w="12"/><text x="75.7290%" y="543.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (12 samples, 0.01%)</title><rect x="75.4790%" y="517" width="0.0107%" height="15" fill="rgb(244,137,50)" fg:x="84775" fg:w="12"/><text x="75.7290%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (14 samples, 0.01%)</title><rect x="75.4790%" y="565" width="0.0125%" height="15" fill="rgb(225,185,43)" fg:x="84775" fg:w="14"/><text x="75.7290%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (26 samples, 0.02%)</title><rect x="75.4746%" y="581" width="0.0231%" height="15" fill="rgb(213,205,38)" fg:x="84770" fg:w="26"/><text x="75.7246%" y="591.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (20 samples, 0.02%)</title><rect x="75.5111%" y="565" width="0.0178%" height="15" fill="rgb(236,73,12)" fg:x="84811" fg:w="20"/><text x="75.7611%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (193 samples, 0.17%)</title><rect x="75.4746%" y="613" width="0.1718%" height="15" fill="rgb(235,219,13)" fg:x="84770" fg:w="193"/><text x="75.7246%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (193 samples, 0.17%)</title><rect x="75.4746%" y="597" width="0.1718%" height="15" fill="rgb(218,59,36)" fg:x="84770" fg:w="193"/><text x="75.7246%" y="607.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (167 samples, 0.15%)</title><rect x="75.4977%" y="581" width="0.1487%" height="15" fill="rgb(205,110,39)" fg:x="84796" fg:w="167"/><text x="75.7477%" y="591.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (132 samples, 0.12%)</title><rect x="75.5289%" y="565" width="0.1175%" height="15" fill="rgb(218,206,42)" fg:x="84831" fg:w="132"/><text x="75.7789%" y="575.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (132 samples, 0.12%)</title><rect x="75.5289%" y="549" width="0.1175%" height="15" fill="rgb(248,125,24)" fg:x="84831" fg:w="132"/><text x="75.7789%" y="559.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (132 samples, 0.12%)</title><rect x="75.5289%" y="533" width="0.1175%" height="15" fill="rgb(242,28,27)" fg:x="84831" fg:w="132"/><text x="75.7789%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (245 samples, 0.22%)</title><rect x="75.4648%" y="661" width="0.2181%" height="15" fill="rgb(216,228,15)" fg:x="84759" fg:w="245"/><text x="75.7148%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (245 samples, 0.22%)</title><rect x="75.4648%" y="645" width="0.2181%" height="15" fill="rgb(235,116,46)" fg:x="84759" fg:w="245"/><text x="75.7148%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (234 samples, 0.21%)</title><rect x="75.4746%" y="629" width="0.2083%" height="15" fill="rgb(224,18,32)" fg:x="84770" fg:w="234"/><text x="75.7246%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::take (31 samples, 0.03%)</title><rect x="75.6553%" y="613" width="0.0276%" height="15" fill="rgb(252,5,12)" fg:x="84973" fg:w="31"/><text x="75.9053%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (31 samples, 0.03%)</title><rect x="75.6553%" y="597" width="0.0276%" height="15" fill="rgb(251,36,5)" fg:x="84973" fg:w="31"/><text x="75.9053%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (307 samples, 0.27%)</title><rect x="75.4131%" y="869" width="0.2733%" height="15" fill="rgb(217,53,14)" fg:x="84701" fg:w="307"/><text x="75.6631%" y="879.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (278 samples, 0.25%)</title><rect x="75.4389%" y="853" width="0.2475%" height="15" fill="rgb(215,86,45)" fg:x="84730" fg:w="278"/><text x="75.6889%" y="863.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (278 samples, 0.25%)</title><rect x="75.4389%" y="837" width="0.2475%" height="15" fill="rgb(242,169,11)" fg:x="84730" fg:w="278"/><text x="75.6889%" y="847.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (278 samples, 0.25%)</title><rect x="75.4389%" y="821" width="0.2475%" height="15" fill="rgb(211,213,45)" fg:x="84730" fg:w="278"/><text x="75.6889%" y="831.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (278 samples, 0.25%)</title><rect x="75.4389%" y="805" width="0.2475%" height="15" fill="rgb(205,88,11)" fg:x="84730" fg:w="278"/><text x="75.6889%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (278 samples, 0.25%)</title><rect x="75.4389%" y="789" width="0.2475%" height="15" fill="rgb(252,69,26)" fg:x="84730" fg:w="278"/><text x="75.6889%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (264 samples, 0.24%)</title><rect x="75.4514%" y="773" width="0.2351%" height="15" fill="rgb(246,123,37)" fg:x="84744" fg:w="264"/><text x="75.7014%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (264 samples, 0.24%)</title><rect x="75.4514%" y="757" width="0.2351%" height="15" fill="rgb(212,205,5)" fg:x="84744" fg:w="264"/><text x="75.7014%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (264 samples, 0.24%)</title><rect x="75.4514%" y="741" width="0.2351%" height="15" fill="rgb(253,148,0)" fg:x="84744" fg:w="264"/><text x="75.7014%" y="751.50"></text></g><g><title>alloc::alloc::alloc (255 samples, 0.23%)</title><rect x="75.4594%" y="725" width="0.2270%" height="15" fill="rgb(239,22,4)" fg:x="84753" fg:w="255"/><text x="75.7094%" y="735.50"></text></g><g><title>__rg_alloc (255 samples, 0.23%)</title><rect x="75.4594%" y="709" width="0.2270%" height="15" fill="rgb(226,26,53)" fg:x="84753" fg:w="255"/><text x="75.7094%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (255 samples, 0.23%)</title><rect x="75.4594%" y="693" width="0.2270%" height="15" fill="rgb(225,229,45)" fg:x="84753" fg:w="255"/><text x="75.7094%" y="703.50"></text></g><g><title>rust_alloc (255 samples, 0.23%)</title><rect x="75.4594%" y="677" width="0.2270%" height="15" fill="rgb(220,60,37)" fg:x="84753" fg:w="255"/><text x="75.7094%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="75.7372%" y="789" width="0.0116%" height="15" fill="rgb(217,180,35)" fg:x="85065" fg:w="13"/><text x="75.9872%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="75.7372%" y="773" width="0.0116%" height="15" fill="rgb(229,7,53)" fg:x="85065" fg:w="13"/><text x="75.9872%" y="783.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="75.7372%" y="757" width="0.0116%" height="15" fill="rgb(254,137,3)" fg:x="85065" fg:w="13"/><text x="75.9872%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="75.7372%" y="741" width="0.0116%" height="15" fill="rgb(215,140,41)" fg:x="85065" fg:w="13"/><text x="75.9872%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="75.7372%" y="725" width="0.0116%" height="15" fill="rgb(250,80,15)" fg:x="85065" fg:w="13"/><text x="75.9872%" y="735.50"></text></g><g><title>abi_stable::erased_types::iterator::next (26 samples, 0.02%)</title><rect x="75.7283%" y="821" width="0.0231%" height="15" fill="rgb(252,191,6)" fg:x="85055" fg:w="26"/><text x="75.9783%" y="831.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (16 samples, 0.01%)</title><rect x="75.7372%" y="805" width="0.0142%" height="15" fill="rgb(246,217,18)" fg:x="85065" fg:w="16"/><text x="75.9872%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.07%)</title><rect x="75.7043%" y="853" width="0.0659%" height="15" fill="rgb(223,93,7)" fg:x="85028" fg:w="74"/><text x="75.9543%" y="863.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (74 samples, 0.07%)</title><rect x="75.7043%" y="837" width="0.0659%" height="15" fill="rgb(225,55,52)" fg:x="85028" fg:w="74"/><text x="75.9543%" y="847.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (21 samples, 0.02%)</title><rect x="75.7515%" y="821" width="0.0187%" height="15" fill="rgb(240,31,24)" fg:x="85081" fg:w="21"/><text x="76.0015%" y="831.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (21 samples, 0.02%)</title><rect x="75.7515%" y="805" width="0.0187%" height="15" fill="rgb(205,56,52)" fg:x="85081" fg:w="21"/><text x="76.0015%" y="815.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (14 samples, 0.01%)</title><rect x="75.7888%" y="821" width="0.0125%" height="15" fill="rgb(246,146,12)" fg:x="85123" fg:w="14"/><text x="76.0388%" y="831.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (14 samples, 0.01%)</title><rect x="75.7888%" y="805" width="0.0125%" height="15" fill="rgb(239,84,36)" fg:x="85123" fg:w="14"/><text x="76.0388%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.02%)</title><rect x="75.8013%" y="789" width="0.0160%" height="15" fill="rgb(207,41,40)" fg:x="85137" fg:w="18"/><text x="76.0513%" y="799.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (18 samples, 0.02%)</title><rect x="75.8013%" y="773" width="0.0160%" height="15" fill="rgb(241,179,25)" fg:x="85137" fg:w="18"/><text x="76.0513%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (56 samples, 0.05%)</title><rect x="75.7701%" y="853" width="0.0499%" height="15" fill="rgb(210,0,34)" fg:x="85102" fg:w="56"/><text x="76.0201%" y="863.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (45 samples, 0.04%)</title><rect x="75.7799%" y="837" width="0.0401%" height="15" fill="rgb(225,217,29)" fg:x="85113" fg:w="45"/><text x="76.0299%" y="847.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (21 samples, 0.02%)</title><rect x="75.8013%" y="821" width="0.0187%" height="15" fill="rgb(216,191,38)" fg:x="85137" fg:w="21"/><text x="76.0513%" y="831.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (21 samples, 0.02%)</title><rect x="75.8013%" y="805" width="0.0187%" height="15" fill="rgb(232,140,52)" fg:x="85137" fg:w="21"/><text x="76.0513%" y="815.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (13 samples, 0.01%)</title><rect x="75.8387%" y="741" width="0.0116%" height="15" fill="rgb(223,158,51)" fg:x="85179" fg:w="13"/><text x="76.0887%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="75.8387%" y="725" width="0.0116%" height="15" fill="rgb(235,29,51)" fg:x="85179" fg:w="13"/><text x="76.0887%" y="735.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="75.8387%" y="709" width="0.0116%" height="15" fill="rgb(215,181,18)" fg:x="85179" fg:w="13"/><text x="76.0887%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="75.8387%" y="693" width="0.0116%" height="15" fill="rgb(227,125,34)" fg:x="85179" fg:w="13"/><text x="76.0887%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="75.8387%" y="677" width="0.0116%" height="15" fill="rgb(230,197,49)" fg:x="85179" fg:w="13"/><text x="76.0887%" y="687.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="75.8387%" y="661" width="0.0116%" height="15" fill="rgb(239,141,16)" fg:x="85179" fg:w="13"/><text x="76.0887%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="75.8387%" y="645" width="0.0116%" height="15" fill="rgb(225,105,43)" fg:x="85179" fg:w="13"/><text x="76.0887%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (13 samples, 0.01%)</title><rect x="75.8619%" y="645" width="0.0116%" height="15" fill="rgb(214,131,14)" fg:x="85205" fg:w="13"/><text x="76.1119%" y="655.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (27 samples, 0.02%)</title><rect x="75.8966%" y="597" width="0.0240%" height="15" fill="rgb(229,177,11)" fg:x="85244" fg:w="27"/><text x="76.1466%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (26 samples, 0.02%)</title><rect x="75.8975%" y="581" width="0.0231%" height="15" fill="rgb(231,180,14)" fg:x="85245" fg:w="26"/><text x="76.1475%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (72 samples, 0.06%)</title><rect x="75.8734%" y="645" width="0.0641%" height="15" fill="rgb(232,88,2)" fg:x="85218" fg:w="72"/><text x="76.1234%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (72 samples, 0.06%)</title><rect x="75.8734%" y="629" width="0.0641%" height="15" fill="rgb(205,220,8)" fg:x="85218" fg:w="72"/><text x="76.1234%" y="639.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (71 samples, 0.06%)</title><rect x="75.8743%" y="613" width="0.0632%" height="15" fill="rgb(225,23,53)" fg:x="85219" fg:w="71"/><text x="76.1243%" y="623.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="75.9206%" y="597" width="0.0169%" height="15" fill="rgb(213,62,29)" fg:x="85271" fg:w="19"/><text x="76.1706%" y="607.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (19 samples, 0.02%)</title><rect x="75.9206%" y="581" width="0.0169%" height="15" fill="rgb(227,75,7)" fg:x="85271" fg:w="19"/><text x="76.1706%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (112 samples, 0.10%)</title><rect x="75.8574%" y="677" width="0.0997%" height="15" fill="rgb(207,105,14)" fg:x="85200" fg:w="112"/><text x="76.1074%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (112 samples, 0.10%)</title><rect x="75.8574%" y="661" width="0.0997%" height="15" fill="rgb(245,62,29)" fg:x="85200" fg:w="112"/><text x="76.1074%" y="671.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (22 samples, 0.02%)</title><rect x="75.9375%" y="645" width="0.0196%" height="15" fill="rgb(236,202,4)" fg:x="85290" fg:w="22"/><text x="76.1875%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (116 samples, 0.10%)</title><rect x="75.8574%" y="709" width="0.1033%" height="15" fill="rgb(250,67,1)" fg:x="85200" fg:w="116"/><text x="76.1074%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (116 samples, 0.10%)</title><rect x="75.8574%" y="693" width="0.1033%" height="15" fill="rgb(253,115,44)" fg:x="85200" fg:w="116"/><text x="76.1074%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (122 samples, 0.11%)</title><rect x="75.8530%" y="725" width="0.1086%" height="15" fill="rgb(251,139,18)" fg:x="85195" fg:w="122"/><text x="76.1030%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (621 samples, 0.55%)</title><rect x="75.4104%" y="885" width="0.5529%" height="15" fill="rgb(218,22,32)" fg:x="84698" fg:w="621"/><text x="75.6604%" y="895.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (311 samples, 0.28%)</title><rect x="75.6865%" y="869" width="0.2769%" height="15" fill="rgb(243,53,5)" fg:x="85008" fg:w="311"/><text x="75.9365%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (161 samples, 0.14%)</title><rect x="75.8200%" y="853" width="0.1433%" height="15" fill="rgb(227,56,16)" fg:x="85158" fg:w="161"/><text x="76.0700%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (161 samples, 0.14%)</title><rect x="75.8200%" y="837" width="0.1433%" height="15" fill="rgb(245,53,0)" fg:x="85158" fg:w="161"/><text x="76.0700%" y="847.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (161 samples, 0.14%)</title><rect x="75.8200%" y="821" width="0.1433%" height="15" fill="rgb(216,170,35)" fg:x="85158" fg:w="161"/><text x="76.0700%" y="831.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (154 samples, 0.14%)</title><rect x="75.8262%" y="805" width="0.1371%" height="15" fill="rgb(211,200,8)" fg:x="85165" fg:w="154"/><text x="76.0762%" y="815.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (146 samples, 0.13%)</title><rect x="75.8334%" y="789" width="0.1300%" height="15" fill="rgb(228,204,44)" fg:x="85173" fg:w="146"/><text x="76.0834%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (146 samples, 0.13%)</title><rect x="75.8334%" y="773" width="0.1300%" height="15" fill="rgb(214,121,17)" fg:x="85173" fg:w="146"/><text x="76.0834%" y="783.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (146 samples, 0.13%)</title><rect x="75.8334%" y="757" width="0.1300%" height="15" fill="rgb(233,64,38)" fg:x="85173" fg:w="146"/><text x="76.0834%" y="767.50"></text></g><g><title>rust_dealloc (127 samples, 0.11%)</title><rect x="75.8503%" y="741" width="0.1131%" height="15" fill="rgb(253,54,19)" fg:x="85192" fg:w="127"/><text x="76.1003%" y="751.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,189 samples, 1.06%)</title><rect x="74.9127%" y="917" width="1.0586%" height="15" fill="rgb(253,94,18)" fg:x="84139" fg:w="1189"/><text x="75.1627%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (987 samples, 0.88%)</title><rect x="75.0926%" y="901" width="0.8788%" height="15" fill="rgb(227,57,52)" fg:x="84341" fg:w="987"/><text x="75.3426%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="76.0007%" y="709" width="0.0383%" height="15" fill="rgb(230,228,50)" fg:x="85361" fg:w="43"/><text x="76.2507%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (43 samples, 0.04%)</title><rect x="76.0007%" y="693" width="0.0383%" height="15" fill="rgb(217,205,27)" fg:x="85361" fg:w="43"/><text x="76.2507%" y="703.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (37 samples, 0.03%)</title><rect x="76.0061%" y="677" width="0.0329%" height="15" fill="rgb(252,71,50)" fg:x="85367" fg:w="37"/><text x="76.2561%" y="687.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (27 samples, 0.02%)</title><rect x="76.0150%" y="661" width="0.0240%" height="15" fill="rgb(209,86,4)" fg:x="85377" fg:w="27"/><text x="76.2650%" y="671.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (27 samples, 0.02%)</title><rect x="76.0150%" y="645" width="0.0240%" height="15" fill="rgb(229,94,0)" fg:x="85377" fg:w="27"/><text x="76.2650%" y="655.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (27 samples, 0.02%)</title><rect x="76.0150%" y="629" width="0.0240%" height="15" fill="rgb(252,223,21)" fg:x="85377" fg:w="27"/><text x="76.2650%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (198 samples, 0.18%)</title><rect x="75.9883%" y="757" width="0.1763%" height="15" fill="rgb(230,210,4)" fg:x="85347" fg:w="198"/><text x="76.2383%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (198 samples, 0.18%)</title><rect x="75.9883%" y="741" width="0.1763%" height="15" fill="rgb(240,149,38)" fg:x="85347" fg:w="198"/><text x="76.2383%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (191 samples, 0.17%)</title><rect x="75.9945%" y="725" width="0.1701%" height="15" fill="rgb(254,105,20)" fg:x="85354" fg:w="191"/><text x="76.2445%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::take (137 samples, 0.12%)</title><rect x="76.0426%" y="709" width="0.1220%" height="15" fill="rgb(253,87,46)" fg:x="85408" fg:w="137"/><text x="76.2926%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (137 samples, 0.12%)</title><rect x="76.0426%" y="693" width="0.1220%" height="15" fill="rgb(253,116,33)" fg:x="85408" fg:w="137"/><text x="76.2926%" y="703.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (4,893 samples, 4.36%)</title><rect x="71.8090%" y="1045" width="4.3565%" height="15" fill="rgb(229,198,5)" fg:x="80653" fg:w="4893"/><text x="72.0590%" y="1055.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,893 samples, 4.36%)</title><rect x="71.8090%" y="1029" width="4.3565%" height="15" fill="rgb(242,38,37)" fg:x="80653" fg:w="4893"/><text x="72.0590%" y="1039.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (4,893 samples, 4.36%)</title><rect x="71.8090%" y="1013" width="4.3565%" height="15" fill="rgb(242,69,53)" fg:x="80653" fg:w="4893"/><text x="72.0590%" y="1023.50">tremo..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,893 samples, 4.36%)</title><rect x="71.8090%" y="997" width="4.3565%" height="15" fill="rgb(249,80,16)" fg:x="80653" fg:w="4893"/><text x="72.0590%" y="1007.50">tremo..</text></g><g><title>tremor_script::srs::EventPayload::try_new (1,509 samples, 1.34%)</title><rect x="74.8219%" y="981" width="1.3435%" height="15" fill="rgb(206,128,11)" fg:x="84037" fg:w="1509"/><text x="75.0719%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (1,409 samples, 1.25%)</title><rect x="74.9110%" y="965" width="1.2545%" height="15" fill="rgb(212,35,20)" fg:x="84137" fg:w="1409"/><text x="75.1610%" y="975.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (1,409 samples, 1.25%)</title><rect x="74.9110%" y="949" width="1.2545%" height="15" fill="rgb(236,79,13)" fg:x="84137" fg:w="1409"/><text x="75.1610%" y="959.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::clone::Clone for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::clone (1,409 samples, 1.25%)</title><rect x="74.9110%" y="933" width="1.2545%" height="15" fill="rgb(233,123,3)" fg:x="84137" fg:w="1409"/><text x="75.1610%" y="943.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (218 samples, 0.19%)</title><rect x="75.9714%" y="917" width="0.1941%" height="15" fill="rgb(214,93,52)" fg:x="85328" fg:w="218"/><text x="76.2214%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (218 samples, 0.19%)</title><rect x="75.9714%" y="901" width="0.1941%" height="15" fill="rgb(251,37,40)" fg:x="85328" fg:w="218"/><text x="76.2214%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (218 samples, 0.19%)</title><rect x="75.9714%" y="885" width="0.1941%" height="15" fill="rgb(227,80,54)" fg:x="85328" fg:w="218"/><text x="76.2214%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (204 samples, 0.18%)</title><rect x="75.9838%" y="869" width="0.1816%" height="15" fill="rgb(254,48,11)" fg:x="85342" fg:w="204"/><text x="76.2338%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (204 samples, 0.18%)</title><rect x="75.9838%" y="853" width="0.1816%" height="15" fill="rgb(235,193,26)" fg:x="85342" fg:w="204"/><text x="76.2338%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (204 samples, 0.18%)</title><rect x="75.9838%" y="837" width="0.1816%" height="15" fill="rgb(229,99,21)" fg:x="85342" fg:w="204"/><text x="76.2338%" y="847.50"></text></g><g><title>alloc::alloc::alloc (204 samples, 0.18%)</title><rect x="75.9838%" y="821" width="0.1816%" height="15" fill="rgb(211,140,41)" fg:x="85342" fg:w="204"/><text x="76.2338%" y="831.50"></text></g><g><title>__rg_alloc (204 samples, 0.18%)</title><rect x="75.9838%" y="805" width="0.1816%" height="15" fill="rgb(240,227,30)" fg:x="85342" fg:w="204"/><text x="76.2338%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (204 samples, 0.18%)</title><rect x="75.9838%" y="789" width="0.1816%" height="15" fill="rgb(215,224,45)" fg:x="85342" fg:w="204"/><text x="76.2338%" y="799.50"></text></g><g><title>rust_alloc (204 samples, 0.18%)</title><rect x="75.9838%" y="773" width="0.1816%" height="15" fill="rgb(206,123,31)" fg:x="85342" fg:w="204"/><text x="76.2338%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (26 samples, 0.02%)</title><rect x="76.1655%" y="901" width="0.0231%" height="15" fill="rgb(210,138,16)" fg:x="85546" fg:w="26"/><text x="76.4155%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (26 samples, 0.02%)</title><rect x="76.1655%" y="885" width="0.0231%" height="15" fill="rgb(228,57,28)" fg:x="85546" fg:w="26"/><text x="76.4155%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="76.1655%" y="869" width="0.0231%" height="15" fill="rgb(242,170,10)" fg:x="85546" fg:w="26"/><text x="76.4155%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (26 samples, 0.02%)</title><rect x="76.1655%" y="853" width="0.0231%" height="15" fill="rgb(228,214,39)" fg:x="85546" fg:w="26"/><text x="76.4155%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (26 samples, 0.02%)</title><rect x="76.1655%" y="837" width="0.0231%" height="15" fill="rgb(218,179,33)" fg:x="85546" fg:w="26"/><text x="76.4155%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (26 samples, 0.02%)</title><rect x="76.1655%" y="821" width="0.0231%" height="15" fill="rgb(235,193,39)" fg:x="85546" fg:w="26"/><text x="76.4155%" y="831.50"></text></g><g><title>event_listener::Inner::lock (24 samples, 0.02%)</title><rect x="76.1886%" y="901" width="0.0214%" height="15" fill="rgb(219,221,36)" fg:x="85572" fg:w="24"/><text x="76.4386%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (24 samples, 0.02%)</title><rect x="76.1886%" y="885" width="0.0214%" height="15" fill="rgb(248,218,19)" fg:x="85572" fg:w="24"/><text x="76.4386%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (24 samples, 0.02%)</title><rect x="76.1886%" y="869" width="0.0214%" height="15" fill="rgb(205,50,9)" fg:x="85572" fg:w="24"/><text x="76.4386%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (24 samples, 0.02%)</title><rect x="76.1886%" y="853" width="0.0214%" height="15" fill="rgb(238,81,28)" fg:x="85572" fg:w="24"/><text x="76.4386%" y="863.50"></text></g><g><title>___pthread_mutex_lock (24 samples, 0.02%)</title><rect x="76.1886%" y="837" width="0.0214%" height="15" fill="rgb(235,110,19)" fg:x="85572" fg:w="24"/><text x="76.4386%" y="847.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,702 samples, 7.75%)</title><rect x="68.4640%" y="1093" width="7.7478%" height="15" fill="rgb(214,7,14)" fg:x="76896" fg:w="8702"/><text x="68.7140%" y="1103.50">async_std::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,702 samples, 7.75%)</title><rect x="68.4640%" y="1077" width="7.7478%" height="15" fill="rgb(211,77,3)" fg:x="76896" fg:w="8702"/><text x="68.7140%" y="1087.50">&lt;async_std:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,702 samples, 7.75%)</title><rect x="68.4640%" y="1061" width="7.7478%" height="15" fill="rgb(229,5,9)" fg:x="76896" fg:w="8702"/><text x="68.7140%" y="1071.50">&lt;core::futu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (52 samples, 0.05%)</title><rect x="76.1655%" y="1045" width="0.0463%" height="15" fill="rgb(225,90,11)" fg:x="85546" fg:w="52"/><text x="76.4155%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (52 samples, 0.05%)</title><rect x="76.1655%" y="1029" width="0.0463%" height="15" fill="rgb(242,56,8)" fg:x="85546" fg:w="52"/><text x="76.4155%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (52 samples, 0.05%)</title><rect x="76.1655%" y="1013" width="0.0463%" height="15" fill="rgb(249,212,39)" fg:x="85546" fg:w="52"/><text x="76.4155%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (52 samples, 0.05%)</title><rect x="76.1655%" y="997" width="0.0463%" height="15" fill="rgb(236,90,9)" fg:x="85546" fg:w="52"/><text x="76.4155%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (52 samples, 0.05%)</title><rect x="76.1655%" y="981" width="0.0463%" height="15" fill="rgb(206,88,35)" fg:x="85546" fg:w="52"/><text x="76.4155%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (52 samples, 0.05%)</title><rect x="76.1655%" y="965" width="0.0463%" height="15" fill="rgb(205,126,30)" fg:x="85546" fg:w="52"/><text x="76.4155%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (52 samples, 0.05%)</title><rect x="76.1655%" y="949" width="0.0463%" height="15" fill="rgb(230,176,12)" fg:x="85546" fg:w="52"/><text x="76.4155%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (52 samples, 0.05%)</title><rect x="76.1655%" y="933" width="0.0463%" height="15" fill="rgb(243,19,9)" fg:x="85546" fg:w="52"/><text x="76.4155%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (52 samples, 0.05%)</title><rect x="76.1655%" y="917" width="0.0463%" height="15" fill="rgb(245,171,17)" fg:x="85546" fg:w="52"/><text x="76.4155%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,705 samples, 7.75%)</title><rect x="68.4622%" y="1125" width="7.7505%" height="15" fill="rgb(227,52,21)" fg:x="76894" fg:w="8705"/><text x="68.7122%" y="1135.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,703 samples, 7.75%)</title><rect x="68.4640%" y="1109" width="7.7487%" height="15" fill="rgb(238,69,14)" fg:x="76896" fg:w="8703"/><text x="68.7140%" y="1119.50">std::thread..</text></g><g><title>tremor_common::time::nanotime (15 samples, 0.01%)</title><rect x="76.2135%" y="1125" width="0.0134%" height="15" fill="rgb(241,156,39)" fg:x="85600" fg:w="15"/><text x="76.4635%" y="1135.50"></text></g><g><title>std::time::SystemTime::now (12 samples, 0.01%)</title><rect x="76.2162%" y="1109" width="0.0107%" height="15" fill="rgb(212,227,28)" fg:x="85603" fg:w="12"/><text x="76.4662%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (12 samples, 0.01%)</title><rect x="76.2162%" y="1093" width="0.0107%" height="15" fill="rgb(209,118,27)" fg:x="85603" fg:w="12"/><text x="76.4662%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::now (12 samples, 0.01%)</title><rect x="76.2162%" y="1077" width="0.0107%" height="15" fill="rgb(226,102,5)" fg:x="85603" fg:w="12"/><text x="76.4662%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (13 samples, 0.01%)</title><rect x="76.2269%" y="1125" width="0.0116%" height="15" fill="rgb(223,34,3)" fg:x="85615" fg:w="13"/><text x="76.4769%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (26 samples, 0.02%)</title><rect x="76.2385%" y="1125" width="0.0231%" height="15" fill="rgb(221,81,38)" fg:x="85628" fg:w="26"/><text x="76.4885%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (423 samples, 0.38%)</title><rect x="76.4522%" y="981" width="0.3766%" height="15" fill="rgb(236,219,28)" fg:x="85868" fg:w="423"/><text x="76.7022%" y="991.50"></text></g><g><title>concurrent_queue::full_fence (27 samples, 0.02%)</title><rect x="76.8288%" y="981" width="0.0240%" height="15" fill="rgb(213,200,14)" fg:x="86291" fg:w="27"/><text x="77.0788%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (26 samples, 0.02%)</title><rect x="76.8297%" y="965" width="0.0231%" height="15" fill="rgb(240,33,19)" fg:x="86292" fg:w="26"/><text x="77.0797%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (26 samples, 0.02%)</title><rect x="76.8297%" y="949" width="0.0231%" height="15" fill="rgb(233,113,27)" fg:x="86292" fg:w="26"/><text x="77.0797%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.02%)</title><rect x="76.8297%" y="933" width="0.0231%" height="15" fill="rgb(220,221,18)" fg:x="86292" fg:w="26"/><text x="77.0797%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (533 samples, 0.47%)</title><rect x="76.8537%" y="981" width="0.4746%" height="15" fill="rgb(238,92,8)" fg:x="86319" fg:w="533"/><text x="77.1037%" y="991.50"></text></g><g><title>core::ptr::read (533 samples, 0.47%)</title><rect x="76.8537%" y="965" width="0.4746%" height="15" fill="rgb(222,164,16)" fg:x="86319" fg:w="533"/><text x="77.1037%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (533 samples, 0.47%)</title><rect x="76.8537%" y="949" width="0.4746%" height="15" fill="rgb(241,119,3)" fg:x="86319" fg:w="533"/><text x="77.1037%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (611 samples, 0.54%)</title><rect x="77.3283%" y="981" width="0.5440%" height="15" fill="rgb(241,44,8)" fg:x="86852" fg:w="611"/><text x="77.5783%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (611 samples, 0.54%)</title><rect x="77.3283%" y="965" width="0.5440%" height="15" fill="rgb(230,36,40)" fg:x="86852" fg:w="611"/><text x="77.5783%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (332 samples, 0.30%)</title><rect x="77.8723%" y="981" width="0.2956%" height="15" fill="rgb(243,16,36)" fg:x="87463" fg:w="332"/><text x="78.1223%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (331 samples, 0.29%)</title><rect x="77.8731%" y="965" width="0.2947%" height="15" fill="rgb(231,4,26)" fg:x="87464" fg:w="331"/><text x="78.1231%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,143 samples, 1.91%)</title><rect x="76.2616%" y="1013" width="1.9080%" height="15" fill="rgb(240,9,31)" fg:x="85654" fg:w="2143"/><text x="76.5116%" y="1023.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,143 samples, 1.91%)</title><rect x="76.2616%" y="997" width="1.9080%" height="15" fill="rgb(207,173,15)" fg:x="85654" fg:w="2143"/><text x="76.5116%" y="1007.50">c..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (2,174 samples, 1.94%)</title><rect x="76.2616%" y="1125" width="1.9356%" height="15" fill="rgb(224,192,53)" fg:x="85654" fg:w="2174"/><text x="76.5116%" y="1135.50">t..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,174 samples, 1.94%)</title><rect x="76.2616%" y="1109" width="1.9356%" height="15" fill="rgb(223,67,28)" fg:x="85654" fg:w="2174"/><text x="76.5116%" y="1119.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,174 samples, 1.94%)</title><rect x="76.2616%" y="1093" width="1.9356%" height="15" fill="rgb(211,20,47)" fg:x="85654" fg:w="2174"/><text x="76.5116%" y="1103.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,174 samples, 1.94%)</title><rect x="76.2616%" y="1077" width="1.9356%" height="15" fill="rgb(240,228,2)" fg:x="85654" fg:w="2174"/><text x="76.5116%" y="1087.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,174 samples, 1.94%)</title><rect x="76.2616%" y="1061" width="1.9356%" height="15" fill="rgb(248,151,12)" fg:x="85654" fg:w="2174"/><text x="76.5116%" y="1071.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,174 samples, 1.94%)</title><rect x="76.2616%" y="1045" width="1.9356%" height="15" fill="rgb(244,8,39)" fg:x="85654" fg:w="2174"/><text x="76.5116%" y="1055.50">&lt;..</text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,174 samples, 1.94%)</title><rect x="76.2616%" y="1029" width="1.9356%" height="15" fill="rgb(222,26,8)" fg:x="85654" fg:w="2174"/><text x="76.5116%" y="1039.50">a..</text></g><g><title>event_listener::Event::notify (31 samples, 0.03%)</title><rect x="78.1696%" y="1013" width="0.0276%" height="15" fill="rgb(213,106,44)" fg:x="87797" fg:w="31"/><text x="78.4196%" y="1023.50"></text></g><g><title>event_listener::List::notify (31 samples, 0.03%)</title><rect x="78.1696%" y="997" width="0.0276%" height="15" fill="rgb(214,129,20)" fg:x="87797" fg:w="31"/><text x="78.4196%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (31 samples, 0.03%)</title><rect x="78.1696%" y="981" width="0.0276%" height="15" fill="rgb(212,32,13)" fg:x="87797" fg:w="31"/><text x="78.4196%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (31 samples, 0.03%)</title><rect x="78.1696%" y="965" width="0.0276%" height="15" fill="rgb(208,168,33)" fg:x="87797" fg:w="31"/><text x="78.4196%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (31 samples, 0.03%)</title><rect x="78.1696%" y="949" width="0.0276%" height="15" fill="rgb(231,207,8)" fg:x="87797" fg:w="31"/><text x="78.4196%" y="959.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (31 samples, 0.03%)</title><rect x="78.1696%" y="933" width="0.0276%" height="15" fill="rgb(235,219,23)" fg:x="87797" fg:w="31"/><text x="78.4196%" y="943.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (31 samples, 0.03%)</title><rect x="78.1696%" y="917" width="0.0276%" height="15" fill="rgb(226,216,26)" fg:x="87797" fg:w="31"/><text x="78.4196%" y="927.50"></text></g><g><title>parking::Unparker::unpark (25 samples, 0.02%)</title><rect x="78.1750%" y="901" width="0.0223%" height="15" fill="rgb(239,137,16)" fg:x="87803" fg:w="25"/><text x="78.4250%" y="911.50"></text></g><g><title>parking::Inner::unpark (25 samples, 0.02%)</title><rect x="78.1750%" y="885" width="0.0223%" height="15" fill="rgb(207,12,36)" fg:x="87803" fg:w="25"/><text x="78.4250%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (25 samples, 0.02%)</title><rect x="78.1750%" y="869" width="0.0223%" height="15" fill="rgb(210,214,24)" fg:x="87803" fg:w="25"/><text x="78.4250%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (25 samples, 0.02%)</title><rect x="78.1750%" y="853" width="0.0223%" height="15" fill="rgb(206,56,30)" fg:x="87803" fg:w="25"/><text x="78.4250%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (25 samples, 0.02%)</title><rect x="78.1750%" y="837" width="0.0223%" height="15" fill="rgb(228,143,26)" fg:x="87803" fg:w="25"/><text x="78.4250%" y="847.50"></text></g><g><title>__GI___pthread_cond_signal (25 samples, 0.02%)</title><rect x="78.1750%" y="821" width="0.0223%" height="15" fill="rgb(216,218,46)" fg:x="87803" fg:w="25"/><text x="78.4250%" y="831.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (12 samples, 0.01%)</title><rect x="78.1972%" y="1125" width="0.0107%" height="15" fill="rgb(206,6,19)" fg:x="87828" fg:w="12"/><text x="78.4472%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (14 samples, 0.01%)</title><rect x="78.2079%" y="1125" width="0.0125%" height="15" fill="rgb(239,177,51)" fg:x="87840" fg:w="14"/><text x="78.4579%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="78.4403%" y="981" width="0.0125%" height="15" fill="rgb(216,55,25)" fg:x="88101" fg:w="14"/><text x="78.6903%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (40 samples, 0.04%)</title><rect x="78.4528%" y="949" width="0.0356%" height="15" fill="rgb(231,163,29)" fg:x="88115" fg:w="40"/><text x="78.7028%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (40 samples, 0.04%)</title><rect x="78.4528%" y="933" width="0.0356%" height="15" fill="rgb(232,149,50)" fg:x="88115" fg:w="40"/><text x="78.7028%" y="943.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="78.4528%" y="981" width="0.0365%" height="15" fill="rgb(223,142,48)" fg:x="88115" fg:w="41"/><text x="78.7028%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (41 samples, 0.04%)</title><rect x="78.4528%" y="965" width="0.0365%" height="15" fill="rgb(245,83,23)" fg:x="88115" fg:w="41"/><text x="78.7028%" y="975.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="78.4893%" y="981" width="0.0116%" height="15" fill="rgb(224,63,2)" fg:x="88156" fg:w="13"/><text x="78.7393%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (16 samples, 0.01%)</title><rect x="78.5008%" y="981" width="0.0142%" height="15" fill="rgb(218,65,53)" fg:x="88169" fg:w="16"/><text x="78.7508%" y="991.50"></text></g><g><title>core::mem::replace (16 samples, 0.01%)</title><rect x="78.5008%" y="965" width="0.0142%" height="15" fill="rgb(221,84,29)" fg:x="88169" fg:w="16"/><text x="78.7508%" y="975.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="78.5017%" y="949" width="0.0134%" height="15" fill="rgb(234,0,32)" fg:x="88170" fg:w="15"/><text x="78.7517%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (239 samples, 0.21%)</title><rect x="78.5810%" y="965" width="0.2128%" height="15" fill="rgb(206,20,16)" fg:x="88259" fg:w="239"/><text x="78.8310%" y="975.50"></text></g><g><title>core::mem::replace (239 samples, 0.21%)</title><rect x="78.5810%" y="949" width="0.2128%" height="15" fill="rgb(244,172,18)" fg:x="88259" fg:w="239"/><text x="78.8310%" y="959.50"></text></g><g><title>core::ptr::read (239 samples, 0.21%)</title><rect x="78.5810%" y="933" width="0.2128%" height="15" fill="rgb(254,133,1)" fg:x="88259" fg:w="239"/><text x="78.8310%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (376 samples, 0.33%)</title><rect x="78.5151%" y="981" width="0.3348%" height="15" fill="rgb(222,206,41)" fg:x="88185" fg:w="376"/><text x="78.7651%" y="991.50"></text></g><g><title>core::mem::drop (63 samples, 0.06%)</title><rect x="78.7938%" y="965" width="0.0561%" height="15" fill="rgb(212,3,42)" fg:x="88498" fg:w="63"/><text x="79.0438%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (63 samples, 0.06%)</title><rect x="78.7938%" y="949" width="0.0561%" height="15" fill="rgb(241,11,4)" fg:x="88498" fg:w="63"/><text x="79.0438%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (46 samples, 0.04%)</title><rect x="78.8499%" y="885" width="0.0410%" height="15" fill="rgb(205,19,26)" fg:x="88561" fg:w="46"/><text x="79.0999%" y="895.50"></text></g><g><title>__GI___lll_lock_wake (16 samples, 0.01%)</title><rect x="78.8766%" y="869" width="0.0142%" height="15" fill="rgb(210,179,32)" fg:x="88591" fg:w="16"/><text x="79.1266%" y="879.50"></text></g><g><title>core::mem::drop (49 samples, 0.04%)</title><rect x="78.8499%" y="981" width="0.0436%" height="15" fill="rgb(227,116,49)" fg:x="88561" fg:w="49"/><text x="79.0999%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (49 samples, 0.04%)</title><rect x="78.8499%" y="965" width="0.0436%" height="15" fill="rgb(211,146,6)" fg:x="88561" fg:w="49"/><text x="79.0999%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (49 samples, 0.04%)</title><rect x="78.8499%" y="949" width="0.0436%" height="15" fill="rgb(219,44,39)" fg:x="88561" fg:w="49"/><text x="79.0999%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.04%)</title><rect x="78.8499%" y="933" width="0.0436%" height="15" fill="rgb(234,128,11)" fg:x="88561" fg:w="49"/><text x="79.0999%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (49 samples, 0.04%)</title><rect x="78.8499%" y="917" width="0.0436%" height="15" fill="rgb(220,183,53)" fg:x="88561" fg:w="49"/><text x="79.0999%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (49 samples, 0.04%)</title><rect x="78.8499%" y="901" width="0.0436%" height="15" fill="rgb(213,219,32)" fg:x="88561" fg:w="49"/><text x="79.0999%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="78.9184%" y="917" width="0.0196%" height="15" fill="rgb(232,156,16)" fg:x="88638" fg:w="22"/><text x="79.1684%" y="927.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (359 samples, 0.32%)</title><rect x="78.9380%" y="901" width="0.3196%" height="15" fill="rgb(246,135,34)" fg:x="88660" fg:w="359"/><text x="79.1880%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (418 samples, 0.37%)</title><rect x="78.8935%" y="981" width="0.3722%" height="15" fill="rgb(241,99,0)" fg:x="88610" fg:w="418"/><text x="79.1435%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (409 samples, 0.36%)</title><rect x="78.9015%" y="965" width="0.3642%" height="15" fill="rgb(222,103,45)" fg:x="88619" fg:w="409"/><text x="79.1515%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (409 samples, 0.36%)</title><rect x="78.9015%" y="949" width="0.3642%" height="15" fill="rgb(212,57,4)" fg:x="88619" fg:w="409"/><text x="79.1515%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (390 samples, 0.35%)</title><rect x="78.9184%" y="933" width="0.3472%" height="15" fill="rgb(215,68,47)" fg:x="88638" fg:w="390"/><text x="79.1684%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (368 samples, 0.33%)</title><rect x="78.9380%" y="917" width="0.3276%" height="15" fill="rgb(230,84,2)" fg:x="88660" fg:w="368"/><text x="79.1880%" y="927.50"></text></g><g><title>core::task::wake::Waker::will_wake (54 samples, 0.05%)</title><rect x="79.2683%" y="981" width="0.0481%" height="15" fill="rgb(220,102,14)" fg:x="89031" fg:w="54"/><text x="79.5183%" y="991.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (54 samples, 0.05%)</title><rect x="79.2683%" y="965" width="0.0481%" height="15" fill="rgb(240,10,32)" fg:x="89031" fg:w="54"/><text x="79.5183%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (41 samples, 0.04%)</title><rect x="79.2799%" y="949" width="0.0365%" height="15" fill="rgb(215,47,27)" fg:x="89044" fg:w="41"/><text x="79.5299%" y="959.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (41 samples, 0.04%)</title><rect x="79.2799%" y="933" width="0.0365%" height="15" fill="rgb(233,188,43)" fg:x="89044" fg:w="41"/><text x="79.5299%" y="943.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="79.3297%" y="949" width="0.0196%" height="15" fill="rgb(253,190,1)" fg:x="89100" fg:w="22"/><text x="79.5797%" y="959.50"></text></g><g><title>std::sync::poison::Flag::borrow (22 samples, 0.02%)</title><rect x="79.3297%" y="933" width="0.0196%" height="15" fill="rgb(206,114,52)" fg:x="89100" fg:w="22"/><text x="79.5797%" y="943.50"></text></g><g><title>std::thread::panicking (20 samples, 0.02%)</title><rect x="79.3315%" y="917" width="0.0178%" height="15" fill="rgb(233,120,37)" fg:x="89102" fg:w="20"/><text x="79.5815%" y="927.50"></text></g><g><title>std::panicking::panicking (20 samples, 0.02%)</title><rect x="79.3315%" y="901" width="0.0178%" height="15" fill="rgb(214,52,39)" fg:x="89102" fg:w="20"/><text x="79.5815%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (20 samples, 0.02%)</title><rect x="79.3315%" y="885" width="0.0178%" height="15" fill="rgb(223,80,29)" fg:x="89102" fg:w="20"/><text x="79.5815%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (20 samples, 0.02%)</title><rect x="79.3315%" y="869" width="0.0178%" height="15" fill="rgb(230,101,40)" fg:x="89102" fg:w="20"/><text x="79.5815%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.02%)</title><rect x="79.3315%" y="853" width="0.0178%" height="15" fill="rgb(219,211,8)" fg:x="89102" fg:w="20"/><text x="79.5815%" y="863.50"></text></g><g><title>event_listener::Inner::lock (792 samples, 0.71%)</title><rect x="79.3164%" y="981" width="0.7052%" height="15" fill="rgb(252,126,28)" fg:x="89085" fg:w="792"/><text x="79.5664%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (777 samples, 0.69%)</title><rect x="79.3297%" y="965" width="0.6918%" height="15" fill="rgb(215,56,38)" fg:x="89100" fg:w="777"/><text x="79.5797%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (755 samples, 0.67%)</title><rect x="79.3493%" y="949" width="0.6722%" height="15" fill="rgb(249,55,44)" fg:x="89122" fg:w="755"/><text x="79.5993%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (732 samples, 0.65%)</title><rect x="79.3698%" y="933" width="0.6517%" height="15" fill="rgb(220,221,32)" fg:x="89145" fg:w="732"/><text x="79.6198%" y="943.50"></text></g><g><title>___pthread_mutex_lock (732 samples, 0.65%)</title><rect x="79.3698%" y="917" width="0.6517%" height="15" fill="rgb(212,216,41)" fg:x="89145" fg:w="732"/><text x="79.6198%" y="927.50"></text></g><g><title>__GI___lll_lock_wait (91 samples, 0.08%)</title><rect x="79.9405%" y="901" width="0.0810%" height="15" fill="rgb(228,213,43)" fg:x="89786" fg:w="91"/><text x="80.1905%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,927 samples, 1.72%)</title><rect x="78.3708%" y="997" width="1.7157%" height="15" fill="rgb(211,31,26)" fg:x="88023" fg:w="1927"/><text x="78.6208%" y="1007.50"></text></g><g><title>event_listener::List::remove (73 samples, 0.06%)</title><rect x="80.0215%" y="981" width="0.0650%" height="15" fill="rgb(229,202,19)" fg:x="89877" fg:w="73"/><text x="80.2715%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (53 samples, 0.05%)</title><rect x="80.0394%" y="965" width="0.0472%" height="15" fill="rgb(229,105,46)" fg:x="89897" fg:w="53"/><text x="80.2894%" y="975.50"></text></g><g><title>core::mem::replace (53 samples, 0.05%)</title><rect x="80.0394%" y="949" width="0.0472%" height="15" fill="rgb(235,108,1)" fg:x="89897" fg:w="53"/><text x="80.2894%" y="959.50"></text></g><g><title>core::ptr::read (53 samples, 0.05%)</title><rect x="80.0394%" y="933" width="0.0472%" height="15" fill="rgb(245,111,35)" fg:x="89897" fg:w="53"/><text x="80.2894%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (114 samples, 0.10%)</title><rect x="80.2691%" y="949" width="0.1015%" height="15" fill="rgb(219,185,31)" fg:x="90155" fg:w="114"/><text x="80.5191%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (113 samples, 0.10%)</title><rect x="80.2700%" y="933" width="0.1006%" height="15" fill="rgb(214,4,43)" fg:x="90156" fg:w="113"/><text x="80.5200%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (113 samples, 0.10%)</title><rect x="80.2700%" y="917" width="0.1006%" height="15" fill="rgb(235,227,40)" fg:x="90156" fg:w="113"/><text x="80.5200%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (113 samples, 0.10%)</title><rect x="80.2700%" y="901" width="0.1006%" height="15" fill="rgb(230,88,30)" fg:x="90156" fg:w="113"/><text x="80.5200%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (186 samples, 0.17%)</title><rect x="80.3759%" y="949" width="0.1656%" height="15" fill="rgb(216,217,1)" fg:x="90275" fg:w="186"/><text x="80.6259%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (186 samples, 0.17%)</title><rect x="80.3759%" y="933" width="0.1656%" height="15" fill="rgb(248,139,50)" fg:x="90275" fg:w="186"/><text x="80.6259%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (472 samples, 0.42%)</title><rect x="80.5415%" y="949" width="0.4202%" height="15" fill="rgb(233,1,21)" fg:x="90461" fg:w="472"/><text x="80.7915%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (463 samples, 0.41%)</title><rect x="80.5495%" y="933" width="0.4122%" height="15" fill="rgb(215,183,12)" fg:x="90470" fg:w="463"/><text x="80.7995%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (974 samples, 0.87%)</title><rect x="80.1035%" y="981" width="0.8672%" height="15" fill="rgb(229,104,42)" fg:x="89969" fg:w="974"/><text x="80.3535%" y="991.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (940 samples, 0.84%)</title><rect x="80.1337%" y="965" width="0.8369%" height="15" fill="rgb(243,34,48)" fg:x="90003" fg:w="940"/><text x="80.3837%" y="975.50"></text></g><g><title>event_listener::Inner::lock (13 samples, 0.01%)</title><rect x="80.9858%" y="965" width="0.0116%" height="15" fill="rgb(239,11,44)" fg:x="90960" fg:w="13"/><text x="81.2358%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="80.9858%" y="949" width="0.0116%" height="15" fill="rgb(231,98,35)" fg:x="90960" fg:w="13"/><text x="81.2358%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="80.9858%" y="933" width="0.0116%" height="15" fill="rgb(233,28,25)" fg:x="90960" fg:w="13"/><text x="81.2358%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="80.9858%" y="917" width="0.0116%" height="15" fill="rgb(234,123,11)" fg:x="90960" fg:w="13"/><text x="81.2358%" y="927.50"></text></g><g><title>___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="80.9858%" y="901" width="0.0116%" height="15" fill="rgb(220,69,3)" fg:x="90960" fg:w="13"/><text x="81.2358%" y="911.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (29 samples, 0.03%)</title><rect x="81.0027%" y="901" width="0.0258%" height="15" fill="rgb(214,64,36)" fg:x="90979" fg:w="29"/><text x="81.2527%" y="911.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (17 samples, 0.02%)</title><rect x="81.0134%" y="885" width="0.0151%" height="15" fill="rgb(211,138,32)" fg:x="90991" fg:w="17"/><text x="81.2634%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (16 samples, 0.01%)</title><rect x="81.0143%" y="869" width="0.0142%" height="15" fill="rgb(213,118,47)" fg:x="90992" fg:w="16"/><text x="81.2643%" y="879.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (16 samples, 0.01%)</title><rect x="81.0490%" y="837" width="0.0142%" height="15" fill="rgb(243,124,49)" fg:x="91031" fg:w="16"/><text x="81.2990%" y="847.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (16 samples, 0.01%)</title><rect x="81.0490%" y="821" width="0.0142%" height="15" fill="rgb(221,30,28)" fg:x="91031" fg:w="16"/><text x="81.2990%" y="831.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (16 samples, 0.01%)</title><rect x="81.0490%" y="805" width="0.0142%" height="15" fill="rgb(246,37,13)" fg:x="91031" fg:w="16"/><text x="81.2990%" y="815.50"></text></g><g><title>__GI___pthread_cond_signal (16 samples, 0.01%)</title><rect x="81.0490%" y="789" width="0.0142%" height="15" fill="rgb(249,66,14)" fg:x="91031" fg:w="16"/><text x="81.2990%" y="799.50"></text></g><g><title>parking::Unparker::unpark (40 samples, 0.04%)</title><rect x="81.0374%" y="869" width="0.0356%" height="15" fill="rgb(213,166,5)" fg:x="91018" fg:w="40"/><text x="81.2874%" y="879.50"></text></g><g><title>parking::Inner::unpark (38 samples, 0.03%)</title><rect x="81.0392%" y="853" width="0.0338%" height="15" fill="rgb(221,66,24)" fg:x="91020" fg:w="38"/><text x="81.2892%" y="863.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (43 samples, 0.04%)</title><rect x="81.0356%" y="885" width="0.0383%" height="15" fill="rgb(210,132,17)" fg:x="91016" fg:w="43"/><text x="81.2856%" y="895.50"></text></g><g><title>event_listener::List::notify (90 samples, 0.08%)</title><rect x="80.9974%" y="965" width="0.0801%" height="15" fill="rgb(243,202,5)" fg:x="90973" fg:w="90"/><text x="81.2474%" y="975.50"></text></g><g><title>core::task::wake::Waker::wake (89 samples, 0.08%)</title><rect x="80.9983%" y="949" width="0.0792%" height="15" fill="rgb(233,70,48)" fg:x="90974" fg:w="89"/><text x="81.2483%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (84 samples, 0.07%)</title><rect x="81.0027%" y="933" width="0.0748%" height="15" fill="rgb(238,41,26)" fg:x="90979" fg:w="84"/><text x="81.2527%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (84 samples, 0.07%)</title><rect x="81.0027%" y="917" width="0.0748%" height="15" fill="rgb(241,19,31)" fg:x="90979" fg:w="84"/><text x="81.2527%" y="927.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (47 samples, 0.04%)</title><rect x="81.0356%" y="901" width="0.0418%" height="15" fill="rgb(214,76,10)" fg:x="91016" fg:w="47"/><text x="81.2856%" y="911.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,834 samples, 1.63%)</title><rect x="80.0865%" y="997" width="1.6329%" height="15" fill="rgb(254,202,22)" fg:x="89950" fg:w="1834"/><text x="80.3365%" y="1007.50"></text></g><g><title>event_listener::Event::notify (841 samples, 0.75%)</title><rect x="80.9707%" y="981" width="0.7488%" height="15" fill="rgb(214,72,24)" fg:x="90943" fg:w="841"/><text x="81.2207%" y="991.50"></text></g><g><title>event_listener::full_fence (721 samples, 0.64%)</title><rect x="81.0775%" y="965" width="0.6419%" height="15" fill="rgb(221,92,46)" fg:x="91063" fg:w="721"/><text x="81.3275%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (712 samples, 0.63%)</title><rect x="81.0855%" y="949" width="0.6339%" height="15" fill="rgb(246,13,50)" fg:x="91072" fg:w="712"/><text x="81.3355%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (712 samples, 0.63%)</title><rect x="81.0855%" y="933" width="0.6339%" height="15" fill="rgb(240,165,38)" fg:x="91072" fg:w="712"/><text x="81.3355%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (19 samples, 0.02%)</title><rect x="81.7194%" y="997" width="0.0169%" height="15" fill="rgb(241,24,51)" fg:x="91784" fg:w="19"/><text x="81.9694%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (52 samples, 0.05%)</title><rect x="81.7533%" y="949" width="0.0463%" height="15" fill="rgb(227,51,44)" fg:x="91822" fg:w="52"/><text x="82.0033%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (52 samples, 0.05%)</title><rect x="81.7533%" y="933" width="0.0463%" height="15" fill="rgb(231,121,3)" fg:x="91822" fg:w="52"/><text x="82.0033%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.05%)</title><rect x="81.7533%" y="917" width="0.0463%" height="15" fill="rgb(245,3,41)" fg:x="91822" fg:w="52"/><text x="82.0033%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (52 samples, 0.05%)</title><rect x="81.7533%" y="901" width="0.0463%" height="15" fill="rgb(214,13,26)" fg:x="91822" fg:w="52"/><text x="82.0033%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (52 samples, 0.05%)</title><rect x="81.7533%" y="885" width="0.0463%" height="15" fill="rgb(252,75,11)" fg:x="91822" fg:w="52"/><text x="82.0033%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (52 samples, 0.05%)</title><rect x="81.7533%" y="869" width="0.0463%" height="15" fill="rgb(218,226,17)" fg:x="91822" fg:w="52"/><text x="82.0033%" y="879.50"></text></g><g><title>event_listener::Inner::lock (70 samples, 0.06%)</title><rect x="81.8005%" y="949" width="0.0623%" height="15" fill="rgb(248,89,38)" fg:x="91875" fg:w="70"/><text x="82.0505%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (70 samples, 0.06%)</title><rect x="81.8005%" y="933" width="0.0623%" height="15" fill="rgb(237,73,46)" fg:x="91875" fg:w="70"/><text x="82.0505%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (65 samples, 0.06%)</title><rect x="81.8049%" y="917" width="0.0579%" height="15" fill="rgb(242,78,33)" fg:x="91880" fg:w="65"/><text x="82.0549%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (57 samples, 0.05%)</title><rect x="81.8120%" y="901" width="0.0507%" height="15" fill="rgb(235,60,3)" fg:x="91888" fg:w="57"/><text x="82.0620%" y="911.50"></text></g><g><title>___pthread_mutex_lock (57 samples, 0.05%)</title><rect x="81.8120%" y="885" width="0.0507%" height="15" fill="rgb(216,172,19)" fg:x="91888" fg:w="57"/><text x="82.0620%" y="895.50"></text></g><g><title>__GI___lll_lock_wait (25 samples, 0.02%)</title><rect x="81.8405%" y="869" width="0.0223%" height="15" fill="rgb(227,6,42)" fg:x="91920" fg:w="25"/><text x="82.0905%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (145 samples, 0.13%)</title><rect x="81.7461%" y="965" width="0.1291%" height="15" fill="rgb(223,207,42)" fg:x="91814" fg:w="145"/><text x="81.9961%" y="975.50"></text></g><g><title>event_listener::List::remove (13 samples, 0.01%)</title><rect x="81.8637%" y="949" width="0.0116%" height="15" fill="rgb(246,138,30)" fg:x="91946" fg:w="13"/><text x="82.1137%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (207 samples, 0.18%)</title><rect x="81.7364%" y="997" width="0.1843%" height="15" fill="rgb(251,199,47)" fg:x="91803" fg:w="207"/><text x="81.9864%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (196 samples, 0.17%)</title><rect x="81.7461%" y="981" width="0.1745%" height="15" fill="rgb(228,218,44)" fg:x="91814" fg:w="196"/><text x="81.9961%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (51 samples, 0.05%)</title><rect x="81.8752%" y="965" width="0.0454%" height="15" fill="rgb(220,68,6)" fg:x="91959" fg:w="51"/><text x="82.1252%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="81.8752%" y="949" width="0.0454%" height="15" fill="rgb(240,60,26)" fg:x="91959" fg:w="51"/><text x="82.1252%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (49 samples, 0.04%)</title><rect x="81.8770%" y="933" width="0.0436%" height="15" fill="rgb(211,200,19)" fg:x="91961" fg:w="49"/><text x="82.1270%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (49 samples, 0.04%)</title><rect x="81.8770%" y="917" width="0.0436%" height="15" fill="rgb(242,145,30)" fg:x="91961" fg:w="49"/><text x="82.1270%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (52 samples, 0.05%)</title><rect x="81.9278%" y="981" width="0.0463%" height="15" fill="rgb(225,64,13)" fg:x="92018" fg:w="52"/><text x="82.1778%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (51 samples, 0.05%)</title><rect x="81.9287%" y="965" width="0.0454%" height="15" fill="rgb(218,103,35)" fg:x="92019" fg:w="51"/><text x="82.1787%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (51 samples, 0.05%)</title><rect x="81.9287%" y="949" width="0.0454%" height="15" fill="rgb(216,93,46)" fg:x="92019" fg:w="51"/><text x="82.1787%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (50 samples, 0.04%)</title><rect x="81.9741%" y="981" width="0.0445%" height="15" fill="rgb(225,159,27)" fg:x="92070" fg:w="50"/><text x="82.2241%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (47 samples, 0.04%)</title><rect x="81.9767%" y="965" width="0.0418%" height="15" fill="rgb(225,204,11)" fg:x="92073" fg:w="47"/><text x="82.2267%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="81.9767%" y="949" width="0.0418%" height="15" fill="rgb(205,56,4)" fg:x="92073" fg:w="47"/><text x="82.2267%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (42 samples, 0.04%)</title><rect x="81.9812%" y="933" width="0.0374%" height="15" fill="rgb(206,6,35)" fg:x="92078" fg:w="42"/><text x="82.2312%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (41 samples, 0.04%)</title><rect x="81.9821%" y="917" width="0.0365%" height="15" fill="rgb(247,73,52)" fg:x="92079" fg:w="41"/><text x="82.2321%" y="927.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (41 samples, 0.04%)</title><rect x="81.9821%" y="901" width="0.0365%" height="15" fill="rgb(246,97,4)" fg:x="92079" fg:w="41"/><text x="82.2321%" y="911.50"></text></g><g><title>event_listener::Inner::lock (52 samples, 0.05%)</title><rect x="82.0204%" y="981" width="0.0463%" height="15" fill="rgb(212,37,15)" fg:x="92122" fg:w="52"/><text x="82.2704%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (52 samples, 0.05%)</title><rect x="82.0204%" y="965" width="0.0463%" height="15" fill="rgb(208,130,40)" fg:x="92122" fg:w="52"/><text x="82.2704%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (50 samples, 0.04%)</title><rect x="82.0222%" y="949" width="0.0445%" height="15" fill="rgb(236,55,29)" fg:x="92124" fg:w="50"/><text x="82.2722%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (50 samples, 0.04%)</title><rect x="82.0222%" y="933" width="0.0445%" height="15" fill="rgb(209,156,45)" fg:x="92124" fg:w="50"/><text x="82.2722%" y="943.50"></text></g><g><title>___pthread_mutex_lock (49 samples, 0.04%)</title><rect x="82.0230%" y="917" width="0.0436%" height="15" fill="rgb(249,107,4)" fg:x="92125" fg:w="49"/><text x="82.2730%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,279 samples, 3.81%)</title><rect x="78.2952%" y="1013" width="3.8098%" height="15" fill="rgb(227,7,13)" fg:x="87938" fg:w="4279"/><text x="78.5452%" y="1023.50">&lt;asy..</text></g><g><title>event_listener::Event::listen (207 samples, 0.18%)</title><rect x="81.9207%" y="997" width="0.1843%" height="15" fill="rgb(250,129,14)" fg:x="92010" fg:w="207"/><text x="82.1707%" y="1007.50"></text></g><g><title>event_listener::full_fence (38 samples, 0.03%)</title><rect x="82.0711%" y="981" width="0.0338%" height="15" fill="rgb(229,92,13)" fg:x="92179" fg:w="38"/><text x="82.3211%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (38 samples, 0.03%)</title><rect x="82.0711%" y="965" width="0.0338%" height="15" fill="rgb(245,98,39)" fg:x="92179" fg:w="38"/><text x="82.3211%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (38 samples, 0.03%)</title><rect x="82.0711%" y="949" width="0.0338%" height="15" fill="rgb(234,135,48)" fg:x="92179" fg:w="38"/><text x="82.3211%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (307 samples, 0.27%)</title><rect x="82.1237%" y="997" width="0.2733%" height="15" fill="rgb(230,98,28)" fg:x="92238" fg:w="307"/><text x="82.3737%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,208 samples, 1.08%)</title><rect x="82.3970%" y="965" width="1.0755%" height="15" fill="rgb(223,121,0)" fg:x="92545" fg:w="1208"/><text x="82.6470%" y="975.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (51 samples, 0.05%)</title><rect x="83.5162%" y="789" width="0.0454%" height="15" fill="rgb(234,173,33)" fg:x="93802" fg:w="51"/><text x="83.7662%" y="799.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (38 samples, 0.03%)</title><rect x="83.5277%" y="773" width="0.0338%" height="15" fill="rgb(245,47,8)" fg:x="93815" fg:w="38"/><text x="83.7777%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (81 samples, 0.07%)</title><rect x="83.5001%" y="821" width="0.0721%" height="15" fill="rgb(205,17,20)" fg:x="93784" fg:w="81"/><text x="83.7501%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (81 samples, 0.07%)</title><rect x="83.5001%" y="805" width="0.0721%" height="15" fill="rgb(232,151,16)" fg:x="93784" fg:w="81"/><text x="83.7501%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (84 samples, 0.07%)</title><rect x="83.5001%" y="853" width="0.0748%" height="15" fill="rgb(208,30,32)" fg:x="93784" fg:w="84"/><text x="83.7501%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (84 samples, 0.07%)</title><rect x="83.5001%" y="837" width="0.0748%" height="15" fill="rgb(254,26,3)" fg:x="93784" fg:w="84"/><text x="83.7501%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (106 samples, 0.09%)</title><rect x="83.4859%" y="869" width="0.0944%" height="15" fill="rgb(240,177,30)" fg:x="93768" fg:w="106"/><text x="83.7359%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,030 samples, 5.37%)</title><rect x="78.2230%" y="1109" width="5.3688%" height="15" fill="rgb(248,76,44)" fg:x="87857" fg:w="6030"/><text x="78.4730%" y="1119.50">&lt;async_..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,030 samples, 5.37%)</title><rect x="78.2230%" y="1093" width="5.3688%" height="15" fill="rgb(241,186,54)" fg:x="87857" fg:w="6030"/><text x="78.4730%" y="1103.50">&lt;tremor..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,030 samples, 5.37%)</title><rect x="78.2230%" y="1077" width="5.3688%" height="15" fill="rgb(249,171,29)" fg:x="87857" fg:w="6030"/><text x="78.4730%" y="1087.50">&lt;async_..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,030 samples, 5.37%)</title><rect x="78.2230%" y="1061" width="5.3688%" height="15" fill="rgb(237,151,44)" fg:x="87857" fg:w="6030"/><text x="78.4730%" y="1071.50">&lt;tremor..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,999 samples, 5.34%)</title><rect x="78.2506%" y="1045" width="5.3412%" height="15" fill="rgb(228,174,30)" fg:x="87888" fg:w="5999"/><text x="78.5006%" y="1055.50">&lt;async_..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,975 samples, 5.32%)</title><rect x="78.2720%" y="1029" width="5.3198%" height="15" fill="rgb(252,14,37)" fg:x="87912" fg:w="5975"/><text x="78.5220%" y="1039.50">&lt;async_..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,670 samples, 1.49%)</title><rect x="82.1050%" y="1013" width="1.4869%" height="15" fill="rgb(207,111,40)" fg:x="92217" fg:w="1670"/><text x="82.3550%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,342 samples, 1.19%)</title><rect x="82.3970%" y="997" width="1.1948%" height="15" fill="rgb(248,171,54)" fg:x="92545" fg:w="1342"/><text x="82.6470%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (1,342 samples, 1.19%)</title><rect x="82.3970%" y="981" width="1.1948%" height="15" fill="rgb(211,127,2)" fg:x="92545" fg:w="1342"/><text x="82.6470%" y="991.50"></text></g><g><title>alloc::alloc::box_free (134 samples, 0.12%)</title><rect x="83.4725%" y="965" width="0.1193%" height="15" fill="rgb(236,87,47)" fg:x="93753" fg:w="134"/><text x="83.7225%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (134 samples, 0.12%)</title><rect x="83.4725%" y="949" width="0.1193%" height="15" fill="rgb(223,190,45)" fg:x="93753" fg:w="134"/><text x="83.7225%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (134 samples, 0.12%)</title><rect x="83.4725%" y="933" width="0.1193%" height="15" fill="rgb(215,5,16)" fg:x="93753" fg:w="134"/><text x="83.7225%" y="943.50"></text></g><g><title>__rg_dealloc (134 samples, 0.12%)</title><rect x="83.4725%" y="917" width="0.1193%" height="15" fill="rgb(252,82,33)" fg:x="93753" fg:w="134"/><text x="83.7225%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (134 samples, 0.12%)</title><rect x="83.4725%" y="901" width="0.1193%" height="15" fill="rgb(247,213,44)" fg:x="93753" fg:w="134"/><text x="83.7225%" y="911.50"></text></g><g><title>rust_dealloc (125 samples, 0.11%)</title><rect x="83.4805%" y="885" width="0.1113%" height="15" fill="rgb(205,196,44)" fg:x="93762" fg:w="125"/><text x="83.7305%" y="895.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="83.5803%" y="869" width="0.0116%" height="15" fill="rgb(237,96,54)" fg:x="93874" fg:w="13"/><text x="83.8303%" y="879.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.03%)</title><rect x="83.7877%" y="1029" width="0.0267%" height="15" fill="rgb(230,113,34)" fg:x="94107" fg:w="30"/><text x="84.0377%" y="1039.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="83.8153%" y="1013" width="0.0107%" height="15" fill="rgb(221,224,12)" fg:x="94138" fg:w="12"/><text x="84.0653%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (12 samples, 0.01%)</title><rect x="83.8153%" y="997" width="0.0107%" height="15" fill="rgb(219,112,44)" fg:x="94138" fg:w="12"/><text x="84.0653%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="83.8340%" y="933" width="0.0107%" height="15" fill="rgb(210,31,13)" fg:x="94159" fg:w="12"/><text x="84.0840%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (14 samples, 0.01%)</title><rect x="83.8331%" y="1013" width="0.0125%" height="15" fill="rgb(230,25,16)" fg:x="94158" fg:w="14"/><text x="84.0831%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (14 samples, 0.01%)</title><rect x="83.8331%" y="997" width="0.0125%" height="15" fill="rgb(246,108,53)" fg:x="94158" fg:w="14"/><text x="84.0831%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="83.8331%" y="981" width="0.0125%" height="15" fill="rgb(241,172,50)" fg:x="94158" fg:w="14"/><text x="84.0831%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="83.8340%" y="965" width="0.0116%" height="15" fill="rgb(235,141,10)" fg:x="94159" fg:w="13"/><text x="84.0840%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="83.8340%" y="949" width="0.0116%" height="15" fill="rgb(220,174,43)" fg:x="94159" fg:w="13"/><text x="84.0840%" y="959.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (49 samples, 0.04%)</title><rect x="83.8144%" y="1029" width="0.0436%" height="15" fill="rgb(215,181,40)" fg:x="94137" fg:w="49"/><text x="84.0644%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (13 samples, 0.01%)</title><rect x="83.8465%" y="1013" width="0.0116%" height="15" fill="rgb(230,97,2)" fg:x="94173" fg:w="13"/><text x="84.0965%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="83.8465%" y="997" width="0.0116%" height="15" fill="rgb(211,25,27)" fg:x="94173" fg:w="13"/><text x="84.0965%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="83.8474%" y="981" width="0.0107%" height="15" fill="rgb(230,87,26)" fg:x="94174" fg:w="12"/><text x="84.0974%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="83.8474%" y="965" width="0.0107%" height="15" fill="rgb(227,160,17)" fg:x="94174" fg:w="12"/><text x="84.0974%" y="975.50"></text></g><g><title>___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="83.8474%" y="949" width="0.0107%" height="15" fill="rgb(244,85,34)" fg:x="94174" fg:w="12"/><text x="84.0974%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (27 samples, 0.02%)</title><rect x="83.8580%" y="1029" width="0.0240%" height="15" fill="rgb(207,70,0)" fg:x="94186" fg:w="27"/><text x="84.1080%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (22 samples, 0.02%)</title><rect x="83.9070%" y="1013" width="0.0196%" height="15" fill="rgb(223,129,7)" fg:x="94241" fg:w="22"/><text x="84.1570%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (281 samples, 0.25%)</title><rect x="84.1643%" y="997" width="0.2502%" height="15" fill="rgb(246,105,7)" fg:x="94530" fg:w="281"/><text x="84.4143%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (16 samples, 0.01%)</title><rect x="84.4893%" y="981" width="0.0142%" height="15" fill="rgb(215,154,42)" fg:x="94895" fg:w="16"/><text x="84.7393%" y="991.50"></text></g><g><title>concurrent_queue::full_fence (28 samples, 0.02%)</title><rect x="84.5035%" y="981" width="0.0249%" height="15" fill="rgb(220,215,30)" fg:x="94911" fg:w="28"/><text x="84.7535%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (24 samples, 0.02%)</title><rect x="84.5071%" y="965" width="0.0214%" height="15" fill="rgb(228,81,51)" fg:x="94915" fg:w="24"/><text x="84.7571%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (24 samples, 0.02%)</title><rect x="84.5071%" y="949" width="0.0214%" height="15" fill="rgb(247,71,54)" fg:x="94915" fg:w="24"/><text x="84.7571%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.02%)</title><rect x="84.5071%" y="933" width="0.0214%" height="15" fill="rgb(234,176,34)" fg:x="94915" fg:w="24"/><text x="84.7571%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (19 samples, 0.02%)</title><rect x="84.5285%" y="981" width="0.0169%" height="15" fill="rgb(241,103,54)" fg:x="94939" fg:w="19"/><text x="84.7785%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (232 samples, 0.21%)</title><rect x="84.5454%" y="981" width="0.2066%" height="15" fill="rgb(228,22,34)" fg:x="94958" fg:w="232"/><text x="84.7954%" y="991.50"></text></g><g><title>core::ptr::write (232 samples, 0.21%)</title><rect x="84.5454%" y="965" width="0.2066%" height="15" fill="rgb(241,179,48)" fg:x="94958" fg:w="232"/><text x="84.7954%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (223 samples, 0.20%)</title><rect x="84.5534%" y="949" width="0.1985%" height="15" fill="rgb(235,167,37)" fg:x="94967" fg:w="223"/><text x="84.8034%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (319 samples, 0.28%)</title><rect x="84.7519%" y="981" width="0.2840%" height="15" fill="rgb(213,109,30)" fg:x="95190" fg:w="319"/><text x="85.0019%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (319 samples, 0.28%)</title><rect x="84.7519%" y="965" width="0.2840%" height="15" fill="rgb(222,172,16)" fg:x="95190" fg:w="319"/><text x="85.0019%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (272 samples, 0.24%)</title><rect x="85.0360%" y="981" width="0.2422%" height="15" fill="rgb(233,192,5)" fg:x="95509" fg:w="272"/><text x="85.2860%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (269 samples, 0.24%)</title><rect x="85.0386%" y="965" width="0.2395%" height="15" fill="rgb(247,189,41)" fg:x="95512" fg:w="269"/><text x="85.2886%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,525 samples, 1.36%)</title><rect x="83.9266%" y="1013" width="1.3578%" height="15" fill="rgb(218,134,47)" fg:x="94263" fg:w="1525"/><text x="84.1766%" y="1023.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (977 samples, 0.87%)</title><rect x="84.4145%" y="997" width="0.8699%" height="15" fill="rgb(216,29,3)" fg:x="94811" fg:w="977"/><text x="84.6645%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (15 samples, 0.01%)</title><rect x="85.2960%" y="997" width="0.0134%" height="15" fill="rgb(246,140,12)" fg:x="95801" fg:w="15"/><text x="85.5460%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (15 samples, 0.01%)</title><rect x="85.2960%" y="981" width="0.0134%" height="15" fill="rgb(230,136,11)" fg:x="95801" fg:w="15"/><text x="85.5460%" y="991.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="85.2960%" y="965" width="0.0134%" height="15" fill="rgb(247,22,47)" fg:x="95801" fg:w="15"/><text x="85.5460%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="85.2968%" y="949" width="0.0125%" height="15" fill="rgb(218,84,22)" fg:x="95802" fg:w="14"/><text x="85.5468%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="85.2977%" y="933" width="0.0116%" height="15" fill="rgb(216,87,39)" fg:x="95803" fg:w="13"/><text x="85.5477%" y="943.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="85.2977%" y="917" width="0.0116%" height="15" fill="rgb(221,178,8)" fg:x="95803" fg:w="13"/><text x="85.5477%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="85.3093%" y="997" width="0.0116%" height="15" fill="rgb(230,42,11)" fg:x="95816" fg:w="13"/><text x="85.5593%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="85.3093%" y="981" width="0.0116%" height="15" fill="rgb(237,229,4)" fg:x="95816" fg:w="13"/><text x="85.5593%" y="991.50"></text></g><g><title>event_listener::Inner::lock (39 samples, 0.03%)</title><rect x="85.3218%" y="997" width="0.0347%" height="15" fill="rgb(222,31,33)" fg:x="95830" fg:w="39"/><text x="85.5718%" y="1007.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (39 samples, 0.03%)</title><rect x="85.3218%" y="981" width="0.0347%" height="15" fill="rgb(210,17,39)" fg:x="95830" fg:w="39"/><text x="85.5718%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (39 samples, 0.03%)</title><rect x="85.3218%" y="965" width="0.0347%" height="15" fill="rgb(244,93,20)" fg:x="95830" fg:w="39"/><text x="85.5718%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (39 samples, 0.03%)</title><rect x="85.3218%" y="949" width="0.0347%" height="15" fill="rgb(210,40,47)" fg:x="95830" fg:w="39"/><text x="85.5718%" y="959.50"></text></g><g><title>___pthread_mutex_lock (39 samples, 0.03%)</title><rect x="85.3218%" y="933" width="0.0347%" height="15" fill="rgb(239,211,47)" fg:x="95830" fg:w="39"/><text x="85.5718%" y="943.50"></text></g><g><title>async_executor::State::notify (37 samples, 0.03%)</title><rect x="85.3725%" y="917" width="0.0329%" height="15" fill="rgb(251,223,49)" fg:x="95887" fg:w="37"/><text x="85.6225%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.02%)</title><rect x="85.3894%" y="901" width="0.0160%" height="15" fill="rgb(221,149,5)" fg:x="95906" fg:w="18"/><text x="85.6394%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (18 samples, 0.02%)</title><rect x="85.3894%" y="885" width="0.0160%" height="15" fill="rgb(219,224,51)" fg:x="95906" fg:w="18"/><text x="85.6394%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (16 samples, 0.01%)</title><rect x="85.3912%" y="869" width="0.0142%" height="15" fill="rgb(223,7,8)" fg:x="95908" fg:w="16"/><text x="85.6412%" y="879.50"></text></g><g><title>___pthread_mutex_lock (16 samples, 0.01%)</title><rect x="85.3912%" y="853" width="0.0142%" height="15" fill="rgb(241,217,22)" fg:x="95908" fg:w="16"/><text x="85.6412%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (24 samples, 0.02%)</title><rect x="85.4135%" y="885" width="0.0214%" height="15" fill="rgb(248,209,0)" fg:x="95933" fg:w="24"/><text x="85.6635%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (24 samples, 0.02%)</title><rect x="85.4135%" y="869" width="0.0214%" height="15" fill="rgb(217,205,4)" fg:x="95933" fg:w="24"/><text x="85.6635%" y="879.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (82 samples, 0.07%)</title><rect x="85.3725%" y="933" width="0.0730%" height="15" fill="rgb(228,124,39)" fg:x="95887" fg:w="82"/><text x="85.6225%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (45 samples, 0.04%)</title><rect x="85.4055%" y="917" width="0.0401%" height="15" fill="rgb(250,116,42)" fg:x="95924" fg:w="45"/><text x="85.6555%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (42 samples, 0.04%)</title><rect x="85.4081%" y="901" width="0.0374%" height="15" fill="rgb(223,202,9)" fg:x="95927" fg:w="42"/><text x="85.6581%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (34 samples, 0.03%)</title><rect x="85.4455%" y="933" width="0.0303%" height="15" fill="rgb(242,222,40)" fg:x="95969" fg:w="34"/><text x="85.6955%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (34 samples, 0.03%)</title><rect x="85.4455%" y="917" width="0.0303%" height="15" fill="rgb(229,99,46)" fg:x="95969" fg:w="34"/><text x="85.6955%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="85.4758%" y="933" width="0.0125%" height="15" fill="rgb(225,56,46)" fg:x="96003" fg:w="14"/><text x="85.7258%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="85.4758%" y="917" width="0.0125%" height="15" fill="rgb(227,94,5)" fg:x="96003" fg:w="14"/><text x="85.7258%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (21 samples, 0.02%)</title><rect x="85.5025%" y="869" width="0.0187%" height="15" fill="rgb(205,112,38)" fg:x="96033" fg:w="21"/><text x="85.7525%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_swap (21 samples, 0.02%)</title><rect x="85.5025%" y="853" width="0.0187%" height="15" fill="rgb(231,133,46)" fg:x="96033" fg:w="21"/><text x="85.7525%" y="863.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (22 samples, 0.02%)</title><rect x="85.5212%" y="869" width="0.0196%" height="15" fill="rgb(217,16,9)" fg:x="96054" fg:w="22"/><text x="85.7712%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (22 samples, 0.02%)</title><rect x="85.5212%" y="853" width="0.0196%" height="15" fill="rgb(249,173,9)" fg:x="96054" fg:w="22"/><text x="85.7712%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (22 samples, 0.02%)</title><rect x="85.5212%" y="837" width="0.0196%" height="15" fill="rgb(205,163,53)" fg:x="96054" fg:w="22"/><text x="85.7712%" y="847.50"></text></g><g><title>__GI___pthread_cond_signal (22 samples, 0.02%)</title><rect x="85.5212%" y="821" width="0.0196%" height="15" fill="rgb(217,54,41)" fg:x="96054" fg:w="22"/><text x="85.7712%" y="831.50"></text></g><g><title>parking::Unparker::unpark (73 samples, 0.06%)</title><rect x="85.4972%" y="901" width="0.0650%" height="15" fill="rgb(228,216,12)" fg:x="96027" fg:w="73"/><text x="85.7472%" y="911.50"></text></g><g><title>parking::Inner::unpark (70 samples, 0.06%)</title><rect x="85.4998%" y="885" width="0.0623%" height="15" fill="rgb(244,228,15)" fg:x="96030" fg:w="70"/><text x="85.7498%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (24 samples, 0.02%)</title><rect x="85.5408%" y="869" width="0.0214%" height="15" fill="rgb(221,176,53)" fg:x="96076" fg:w="24"/><text x="85.7908%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (24 samples, 0.02%)</title><rect x="85.5408%" y="853" width="0.0214%" height="15" fill="rgb(205,94,34)" fg:x="96076" fg:w="24"/><text x="85.7908%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (24 samples, 0.02%)</title><rect x="85.5408%" y="837" width="0.0214%" height="15" fill="rgb(213,110,48)" fg:x="96076" fg:w="24"/><text x="85.7908%" y="847.50"></text></g><g><title>___pthread_mutex_lock (24 samples, 0.02%)</title><rect x="85.5408%" y="821" width="0.0214%" height="15" fill="rgb(236,142,28)" fg:x="96076" fg:w="24"/><text x="85.7908%" y="831.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (86 samples, 0.08%)</title><rect x="85.4883%" y="917" width="0.0766%" height="15" fill="rgb(225,135,29)" fg:x="96017" fg:w="86"/><text x="85.7383%" y="927.50"></text></g><g><title>event_listener::List::notify (243 samples, 0.22%)</title><rect x="85.3565%" y="997" width="0.2164%" height="15" fill="rgb(252,45,31)" fg:x="95869" fg:w="243"/><text x="85.6065%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (235 samples, 0.21%)</title><rect x="85.3636%" y="981" width="0.2092%" height="15" fill="rgb(211,187,50)" fg:x="95877" fg:w="235"/><text x="85.6136%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (225 samples, 0.20%)</title><rect x="85.3725%" y="965" width="0.2003%" height="15" fill="rgb(229,109,7)" fg:x="95887" fg:w="225"/><text x="85.6225%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (225 samples, 0.20%)</title><rect x="85.3725%" y="949" width="0.2003%" height="15" fill="rgb(251,131,51)" fg:x="95887" fg:w="225"/><text x="85.6225%" y="959.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (95 samples, 0.08%)</title><rect x="85.4883%" y="933" width="0.0846%" height="15" fill="rgb(251,180,35)" fg:x="96017" fg:w="95"/><text x="85.7383%" y="943.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (3,098 samples, 2.76%)</title><rect x="83.8821%" y="1029" width="2.7583%" height="15" fill="rgb(211,46,32)" fg:x="94213" fg:w="3098"/><text x="84.1321%" y="1039.50">as..</text></g><g><title>event_listener::Event::notify (1,523 samples, 1.36%)</title><rect x="85.2844%" y="1013" width="1.3560%" height="15" fill="rgb(248,123,17)" fg:x="95788" fg:w="1523"/><text x="85.5344%" y="1023.50"></text></g><g><title>event_listener::full_fence (1,199 samples, 1.07%)</title><rect x="85.5728%" y="997" width="1.0675%" height="15" fill="rgb(227,141,18)" fg:x="96112" fg:w="1199"/><text x="85.8228%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,199 samples, 1.07%)</title><rect x="85.5728%" y="981" width="1.0675%" height="15" fill="rgb(216,102,9)" fg:x="96112" fg:w="1199"/><text x="85.8228%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,199 samples, 1.07%)</title><rect x="85.5728%" y="965" width="1.0675%" height="15" fill="rgb(253,47,13)" fg:x="96112" fg:w="1199"/><text x="85.8228%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (16 samples, 0.01%)</title><rect x="86.6404%" y="1029" width="0.0142%" height="15" fill="rgb(226,93,23)" fg:x="97311" fg:w="16"/><text x="86.8904%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (413 samples, 0.37%)</title><rect x="86.6546%" y="1029" width="0.3677%" height="15" fill="rgb(247,104,17)" fg:x="97327" fg:w="413"/><text x="86.9046%" y="1039.50"></text></g><g><title>core::mem::replace (413 samples, 0.37%)</title><rect x="86.6546%" y="1013" width="0.3677%" height="15" fill="rgb(233,203,26)" fg:x="97327" fg:w="413"/><text x="86.9046%" y="1023.50"></text></g><g><title>core::ptr::read (408 samples, 0.36%)</title><rect x="86.6591%" y="997" width="0.3633%" height="15" fill="rgb(244,98,49)" fg:x="97332" fg:w="408"/><text x="86.9091%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (391 samples, 0.35%)</title><rect x="86.6742%" y="981" width="0.3481%" height="15" fill="rgb(235,134,22)" fg:x="97349" fg:w="391"/><text x="86.9242%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (312 samples, 0.28%)</title><rect x="87.0223%" y="1029" width="0.2778%" height="15" fill="rgb(221,70,32)" fg:x="97740" fg:w="312"/><text x="87.2723%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (295 samples, 0.26%)</title><rect x="87.0375%" y="1013" width="0.2627%" height="15" fill="rgb(238,15,50)" fg:x="97757" fg:w="295"/><text x="87.2875%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="87.3028%" y="1013" width="0.0231%" height="15" fill="rgb(215,221,48)" fg:x="98055" fg:w="26"/><text x="87.5528%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (26 samples, 0.02%)</title><rect x="87.3028%" y="997" width="0.0231%" height="15" fill="rgb(236,73,3)" fg:x="98055" fg:w="26"/><text x="87.5528%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (26 samples, 0.02%)</title><rect x="87.3028%" y="981" width="0.0231%" height="15" fill="rgb(250,107,11)" fg:x="98055" fg:w="26"/><text x="87.5528%" y="991.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="87.3277%" y="933" width="0.0116%" height="15" fill="rgb(242,39,14)" fg:x="98083" fg:w="13"/><text x="87.5777%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (16 samples, 0.01%)</title><rect x="87.3259%" y="1013" width="0.0142%" height="15" fill="rgb(248,164,37)" fg:x="98081" fg:w="16"/><text x="87.5759%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (15 samples, 0.01%)</title><rect x="87.3268%" y="997" width="0.0134%" height="15" fill="rgb(217,60,12)" fg:x="98082" fg:w="15"/><text x="87.5768%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="87.3268%" y="981" width="0.0134%" height="15" fill="rgb(240,125,29)" fg:x="98082" fg:w="15"/><text x="87.5768%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="87.3277%" y="965" width="0.0125%" height="15" fill="rgb(208,207,28)" fg:x="98083" fg:w="14"/><text x="87.5777%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (14 samples, 0.01%)</title><rect x="87.3277%" y="949" width="0.0125%" height="15" fill="rgb(209,159,27)" fg:x="98083" fg:w="14"/><text x="87.5777%" y="959.50"></text></g><g><title>event_listener::Event::listen (64 samples, 0.06%)</title><rect x="87.3019%" y="1029" width="0.0570%" height="15" fill="rgb(251,176,53)" fg:x="98054" fg:w="64"/><text x="87.5519%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (14 samples, 0.01%)</title><rect x="87.3740%" y="933" width="0.0125%" height="15" fill="rgb(211,85,7)" fg:x="98135" fg:w="14"/><text x="87.6240%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (18 samples, 0.02%)</title><rect x="87.3713%" y="1013" width="0.0160%" height="15" fill="rgb(216,64,54)" fg:x="98132" fg:w="18"/><text x="87.6213%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (15 samples, 0.01%)</title><rect x="87.3740%" y="997" width="0.0134%" height="15" fill="rgb(217,54,24)" fg:x="98135" fg:w="15"/><text x="87.6240%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="87.3740%" y="981" width="0.0134%" height="15" fill="rgb(208,206,53)" fg:x="98135" fg:w="15"/><text x="87.6240%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="87.3740%" y="965" width="0.0134%" height="15" fill="rgb(251,74,39)" fg:x="98135" fg:w="15"/><text x="87.6240%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="87.3740%" y="949" width="0.0134%" height="15" fill="rgb(226,47,5)" fg:x="98135" fg:w="15"/><text x="87.6240%" y="959.50"></text></g><g><title>event_listener::Inner::lock (51 samples, 0.05%)</title><rect x="87.3945%" y="1013" width="0.0454%" height="15" fill="rgb(234,111,33)" fg:x="98158" fg:w="51"/><text x="87.6445%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (51 samples, 0.05%)</title><rect x="87.3945%" y="997" width="0.0454%" height="15" fill="rgb(251,14,10)" fg:x="98158" fg:w="51"/><text x="87.6445%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (45 samples, 0.04%)</title><rect x="87.3998%" y="981" width="0.0401%" height="15" fill="rgb(232,43,0)" fg:x="98164" fg:w="45"/><text x="87.6498%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (44 samples, 0.04%)</title><rect x="87.4007%" y="965" width="0.0392%" height="15" fill="rgb(222,68,43)" fg:x="98165" fg:w="44"/><text x="87.6507%" y="975.50"></text></g><g><title>___pthread_mutex_lock (44 samples, 0.04%)</title><rect x="87.4007%" y="949" width="0.0392%" height="15" fill="rgb(217,24,23)" fg:x="98165" fg:w="44"/><text x="87.6507%" y="959.50"></text></g><g><title>__GI___lll_lock_wait (27 samples, 0.02%)</title><rect x="87.4159%" y="933" width="0.0240%" height="15" fill="rgb(229,209,14)" fg:x="98182" fg:w="27"/><text x="87.6659%" y="943.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (10,582 samples, 9.42%)</title><rect x="78.2230%" y="1125" width="9.4216%" height="15" fill="rgb(250,149,48)" fg:x="87857" fg:w="10582"/><text x="78.4730%" y="1135.50">tremor_runtim..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,552 samples, 4.05%)</title><rect x="83.5918%" y="1109" width="4.0529%" height="15" fill="rgb(210,120,37)" fg:x="93887" fg:w="4552"/><text x="83.8418%" y="1119.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (4,552 samples, 4.05%)</title><rect x="83.5918%" y="1093" width="4.0529%" height="15" fill="rgb(210,21,8)" fg:x="93887" fg:w="4552"/><text x="83.8418%" y="1103.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,552 samples, 4.05%)</title><rect x="83.5918%" y="1077" width="4.0529%" height="15" fill="rgb(243,145,7)" fg:x="93887" fg:w="4552"/><text x="83.8418%" y="1087.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (4,552 samples, 4.05%)</title><rect x="83.5918%" y="1061" width="4.0529%" height="15" fill="rgb(238,178,32)" fg:x="93887" fg:w="4552"/><text x="83.8418%" y="1071.50">trem..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (4,552 samples, 4.05%)</title><rect x="83.5918%" y="1045" width="4.0529%" height="15" fill="rgb(222,4,10)" fg:x="93887" fg:w="4552"/><text x="83.8418%" y="1055.50">&lt;asy..</text></g><g><title>event_listener::Event::notify (321 samples, 0.29%)</title><rect x="87.3589%" y="1029" width="0.2858%" height="15" fill="rgb(239,7,37)" fg:x="98118" fg:w="321"/><text x="87.6089%" y="1039.50"></text></g><g><title>event_listener::full_fence (230 samples, 0.20%)</title><rect x="87.4399%" y="1013" width="0.2048%" height="15" fill="rgb(215,31,37)" fg:x="98209" fg:w="230"/><text x="87.6899%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (225 samples, 0.20%)</title><rect x="87.4444%" y="997" width="0.2003%" height="15" fill="rgb(224,83,33)" fg:x="98214" fg:w="225"/><text x="87.6944%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (225 samples, 0.20%)</title><rect x="87.4444%" y="981" width="0.2003%" height="15" fill="rgb(239,55,3)" fg:x="98214" fg:w="225"/><text x="87.6944%" y="991.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (30 samples, 0.03%)</title><rect x="87.6447%" y="1125" width="0.0267%" height="15" fill="rgb(247,92,11)" fg:x="98439" fg:w="30"/><text x="87.8947%" y="1135.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (20 samples, 0.02%)</title><rect x="87.6714%" y="1125" width="0.0178%" height="15" fill="rgb(239,200,7)" fg:x="98469" fg:w="20"/><text x="87.9214%" y="1135.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (22 samples, 0.02%)</title><rect x="87.6901%" y="1125" width="0.0196%" height="15" fill="rgb(227,115,8)" fg:x="98490" fg:w="22"/><text x="87.9401%" y="1135.50"></text></g><g><title>value_trait::Builder::object (40 samples, 0.04%)</title><rect x="87.7097%" y="1125" width="0.0356%" height="15" fill="rgb(215,189,27)" fg:x="98512" fg:w="40"/><text x="87.9597%" y="1135.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (26 samples, 0.02%)</title><rect x="87.7221%" y="1109" width="0.0231%" height="15" fill="rgb(251,216,39)" fg:x="98526" fg:w="26"/><text x="87.9721%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (15 samples, 0.01%)</title><rect x="87.7319%" y="1093" width="0.0134%" height="15" fill="rgb(207,29,47)" fg:x="98537" fg:w="15"/><text x="87.9819%" y="1103.50"></text></g><g><title>[unknown] (92,920 samples, 82.73%)</title><rect x="5.0162%" y="1141" width="82.7309%" height="15" fill="rgb(210,71,34)" fg:x="5634" fg:w="92920"/><text x="5.2662%" y="1151.50">[unknown]</text></g><g><title>async_channel::bounded (14 samples, 0.01%)</title><rect x="87.7569%" y="901" width="0.0125%" height="15" fill="rgb(253,217,51)" fg:x="98565" fg:w="14"/><text x="88.0069%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="87.7569%" y="885" width="0.0125%" height="15" fill="rgb(222,117,46)" fg:x="98565" fg:w="14"/><text x="88.0069%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.01%)</title><rect x="87.7569%" y="869" width="0.0125%" height="15" fill="rgb(226,132,6)" fg:x="98565" fg:w="14"/><text x="88.0069%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="87.7569%" y="853" width="0.0125%" height="15" fill="rgb(254,145,51)" fg:x="98565" fg:w="14"/><text x="88.0069%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="87.7569%" y="837" width="0.0125%" height="15" fill="rgb(231,199,27)" fg:x="98565" fg:w="14"/><text x="88.0069%" y="847.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="87.7569%" y="821" width="0.0125%" height="15" fill="rgb(245,158,14)" fg:x="98565" fg:w="14"/><text x="88.0069%" y="831.50"></text></g><g><title>__rg_alloc (14 samples, 0.01%)</title><rect x="87.7569%" y="805" width="0.0125%" height="15" fill="rgb(240,113,14)" fg:x="98565" fg:w="14"/><text x="88.0069%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.01%)</title><rect x="87.7569%" y="789" width="0.0125%" height="15" fill="rgb(210,20,13)" fg:x="98565" fg:w="14"/><text x="88.0069%" y="799.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="87.7569%" y="773" width="0.0125%" height="15" fill="rgb(241,144,13)" fg:x="98565" fg:w="14"/><text x="88.0069%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="87.7569%" y="757" width="0.0125%" height="15" fill="rgb(235,43,34)" fg:x="98565" fg:w="14"/><text x="88.0069%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="87.7569%" y="741" width="0.0125%" height="15" fill="rgb(208,36,20)" fg:x="98565" fg:w="14"/><text x="88.0069%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="87.7569%" y="725" width="0.0125%" height="15" fill="rgb(239,204,10)" fg:x="98565" fg:w="14"/><text x="88.0069%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="87.7569%" y="709" width="0.0125%" height="15" fill="rgb(217,84,43)" fg:x="98565" fg:w="14"/><text x="88.0069%" y="719.50"></text></g><g><title>snmalloc::init_thread_allocator (14 samples, 0.01%)</title><rect x="87.7569%" y="693" width="0.0125%" height="15" fill="rgb(241,170,50)" fg:x="98565" fg:w="14"/><text x="88.0069%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (22 samples, 0.02%)</title><rect x="88.0427%" y="533" width="0.0196%" height="15" fill="rgb(226,205,29)" fg:x="98886" fg:w="22"/><text x="88.2927%" y="543.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="88.1397%" y="453" width="0.0125%" height="15" fill="rgb(233,113,1)" fg:x="98995" fg:w="14"/><text x="88.3897%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (37 samples, 0.03%)</title><rect x="88.1593%" y="437" width="0.0329%" height="15" fill="rgb(253,98,13)" fg:x="99017" fg:w="37"/><text x="88.4093%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (36 samples, 0.03%)</title><rect x="88.1602%" y="421" width="0.0321%" height="15" fill="rgb(211,115,12)" fg:x="99018" fg:w="36"/><text x="88.4102%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (18 samples, 0.02%)</title><rect x="88.1762%" y="405" width="0.0160%" height="15" fill="rgb(208,12,16)" fg:x="99036" fg:w="18"/><text x="88.4262%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="88.1922%" y="437" width="0.0205%" height="15" fill="rgb(237,193,54)" fg:x="99054" fg:w="23"/><text x="88.4422%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (52 samples, 0.05%)</title><rect x="88.2127%" y="437" width="0.0463%" height="15" fill="rgb(243,22,42)" fg:x="99077" fg:w="52"/><text x="88.4627%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (254 samples, 0.23%)</title><rect x="88.0916%" y="485" width="0.2261%" height="15" fill="rgb(233,151,36)" fg:x="98941" fg:w="254"/><text x="88.3416%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (211 samples, 0.19%)</title><rect x="88.1299%" y="469" width="0.1879%" height="15" fill="rgb(237,57,45)" fg:x="98984" fg:w="211"/><text x="88.3799%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (186 samples, 0.17%)</title><rect x="88.1522%" y="453" width="0.1656%" height="15" fill="rgb(221,88,17)" fg:x="99009" fg:w="186"/><text x="88.4022%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (66 samples, 0.06%)</title><rect x="88.2590%" y="437" width="0.0588%" height="15" fill="rgb(230,79,15)" fg:x="99129" fg:w="66"/><text x="88.5090%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (66 samples, 0.06%)</title><rect x="88.2590%" y="421" width="0.0588%" height="15" fill="rgb(213,57,13)" fg:x="99129" fg:w="66"/><text x="88.5090%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (34 samples, 0.03%)</title><rect x="88.2875%" y="405" width="0.0303%" height="15" fill="rgb(222,116,39)" fg:x="99161" fg:w="34"/><text x="88.5375%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (34 samples, 0.03%)</title><rect x="88.2875%" y="389" width="0.0303%" height="15" fill="rgb(245,107,2)" fg:x="99161" fg:w="34"/><text x="88.5375%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (295 samples, 0.26%)</title><rect x="88.0623%" y="533" width="0.2627%" height="15" fill="rgb(238,1,10)" fg:x="98908" fg:w="295"/><text x="88.3123%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (295 samples, 0.26%)</title><rect x="88.0623%" y="517" width="0.2627%" height="15" fill="rgb(249,4,48)" fg:x="98908" fg:w="295"/><text x="88.3123%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (295 samples, 0.26%)</title><rect x="88.0623%" y="501" width="0.2627%" height="15" fill="rgb(223,151,18)" fg:x="98908" fg:w="295"/><text x="88.3123%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (583 samples, 0.52%)</title><rect x="88.6116%" y="501" width="0.5191%" height="15" fill="rgb(227,65,43)" fg:x="99525" fg:w="583"/><text x="88.8616%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (402 samples, 0.36%)</title><rect x="88.7727%" y="485" width="0.3579%" height="15" fill="rgb(218,40,45)" fg:x="99706" fg:w="402"/><text x="89.0227%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (402 samples, 0.36%)</title><rect x="88.7727%" y="469" width="0.3579%" height="15" fill="rgb(252,121,31)" fg:x="99706" fg:w="402"/><text x="89.0227%" y="479.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (854 samples, 0.76%)</title><rect x="88.3801%" y="517" width="0.7604%" height="15" fill="rgb(219,158,43)" fg:x="99265" fg:w="854"/><text x="88.6301%" y="527.50"></text></g><g><title>async_executor::steal (918 samples, 0.82%)</title><rect x="88.3249%" y="533" width="0.8173%" height="15" fill="rgb(231,162,42)" fg:x="99203" fg:w="918"/><text x="88.5749%" y="543.50"></text></g><g><title>concurrent_queue::full_fence (981 samples, 0.87%)</title><rect x="89.6987%" y="501" width="0.8734%" height="15" fill="rgb(217,179,25)" fg:x="100746" fg:w="981"/><text x="89.9487%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (981 samples, 0.87%)</title><rect x="89.6987%" y="485" width="0.8734%" height="15" fill="rgb(206,212,31)" fg:x="100746" fg:w="981"/><text x="89.9487%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (981 samples, 0.87%)</title><rect x="89.6987%" y="469" width="0.8734%" height="15" fill="rgb(235,144,12)" fg:x="100746" fg:w="981"/><text x="89.9487%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (981 samples, 0.87%)</title><rect x="89.6987%" y="453" width="0.8734%" height="15" fill="rgb(213,51,10)" fg:x="100746" fg:w="981"/><text x="89.9487%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,492 samples, 1.33%)</title><rect x="89.3363%" y="517" width="1.3284%" height="15" fill="rgb(231,145,14)" fg:x="100339" fg:w="1492"/><text x="89.5863%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (104 samples, 0.09%)</title><rect x="90.5721%" y="501" width="0.0926%" height="15" fill="rgb(235,15,28)" fg:x="101727" fg:w="104"/><text x="90.8221%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (68 samples, 0.06%)</title><rect x="90.6042%" y="485" width="0.0605%" height="15" fill="rgb(237,206,10)" fg:x="101763" fg:w="68"/><text x="90.8542%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (340 samples, 0.30%)</title><rect x="90.7155%" y="501" width="0.3027%" height="15" fill="rgb(236,227,27)" fg:x="101888" fg:w="340"/><text x="90.9655%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (335 samples, 0.30%)</title><rect x="90.7199%" y="485" width="0.2983%" height="15" fill="rgb(246,83,35)" fg:x="101893" fg:w="335"/><text x="90.9699%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (335 samples, 0.30%)</title><rect x="90.7199%" y="469" width="0.2983%" height="15" fill="rgb(220,136,24)" fg:x="101893" fg:w="335"/><text x="90.9699%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (335 samples, 0.30%)</title><rect x="90.7199%" y="453" width="0.2983%" height="15" fill="rgb(217,3,25)" fg:x="101893" fg:w="335"/><text x="90.9699%" y="463.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (32 samples, 0.03%)</title><rect x="91.0235%" y="501" width="0.0285%" height="15" fill="rgb(239,24,14)" fg:x="102234" fg:w="32"/><text x="91.2735%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (31 samples, 0.03%)</title><rect x="91.0244%" y="485" width="0.0276%" height="15" fill="rgb(244,16,53)" fg:x="102235" fg:w="31"/><text x="91.2744%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.03%)</title><rect x="91.0244%" y="469" width="0.0276%" height="15" fill="rgb(208,175,44)" fg:x="102235" fg:w="31"/><text x="91.2744%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (17 samples, 0.02%)</title><rect x="91.0583%" y="501" width="0.0151%" height="15" fill="rgb(252,18,48)" fg:x="102273" fg:w="17"/><text x="91.3083%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.02%)</title><rect x="91.0583%" y="485" width="0.0151%" height="15" fill="rgb(234,199,32)" fg:x="102273" fg:w="17"/><text x="91.3083%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (93 samples, 0.08%)</title><rect x="91.0734%" y="501" width="0.0828%" height="15" fill="rgb(225,77,54)" fg:x="102290" fg:w="93"/><text x="91.3234%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (93 samples, 0.08%)</title><rect x="91.0734%" y="485" width="0.0828%" height="15" fill="rgb(225,42,25)" fg:x="102290" fg:w="93"/><text x="91.3234%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (116 samples, 0.10%)</title><rect x="91.1562%" y="501" width="0.1033%" height="15" fill="rgb(242,227,46)" fg:x="102383" fg:w="116"/><text x="91.4062%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_or (116 samples, 0.10%)</title><rect x="91.1562%" y="485" width="0.1033%" height="15" fill="rgb(246,197,35)" fg:x="102383" fg:w="116"/><text x="91.4062%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,620 samples, 2.33%)</title><rect x="89.1422%" y="533" width="2.3327%" height="15" fill="rgb(215,159,26)" fg:x="100121" fg:w="2620"/><text x="89.3922%" y="543.50">c..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (910 samples, 0.81%)</title><rect x="90.6647%" y="517" width="0.8102%" height="15" fill="rgb(212,194,50)" fg:x="101831" fg:w="910"/><text x="90.9147%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (242 samples, 0.22%)</title><rect x="91.2595%" y="501" width="0.2155%" height="15" fill="rgb(246,132,1)" fg:x="102499" fg:w="242"/><text x="91.5095%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (242 samples, 0.22%)</title><rect x="91.2595%" y="485" width="0.2155%" height="15" fill="rgb(217,71,7)" fg:x="102499" fg:w="242"/><text x="91.5095%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (268 samples, 0.24%)</title><rect x="91.4945%" y="469" width="0.2386%" height="15" fill="rgb(252,59,32)" fg:x="102763" fg:w="268"/><text x="91.7445%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (268 samples, 0.24%)</title><rect x="91.4945%" y="453" width="0.2386%" height="15" fill="rgb(253,204,25)" fg:x="102763" fg:w="268"/><text x="91.7445%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (499 samples, 0.44%)</title><rect x="91.4749%" y="533" width="0.4443%" height="15" fill="rgb(232,21,16)" fg:x="102741" fg:w="499"/><text x="91.7249%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (499 samples, 0.44%)</title><rect x="91.4749%" y="517" width="0.4443%" height="15" fill="rgb(248,90,29)" fg:x="102741" fg:w="499"/><text x="91.7249%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (499 samples, 0.44%)</title><rect x="91.4749%" y="501" width="0.4443%" height="15" fill="rgb(249,223,7)" fg:x="102741" fg:w="499"/><text x="91.7249%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (479 samples, 0.43%)</title><rect x="91.4928%" y="485" width="0.4265%" height="15" fill="rgb(231,119,42)" fg:x="102761" fg:w="479"/><text x="91.7428%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (209 samples, 0.19%)</title><rect x="91.7331%" y="469" width="0.1861%" height="15" fill="rgb(215,41,35)" fg:x="103031" fg:w="209"/><text x="91.9831%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (209 samples, 0.19%)</title><rect x="91.7331%" y="453" width="0.1861%" height="15" fill="rgb(220,44,45)" fg:x="103031" fg:w="209"/><text x="91.9831%" y="463.50"></text></g><g><title>fastrand::RNG::__getit (14 samples, 0.01%)</title><rect x="91.9237%" y="485" width="0.0125%" height="15" fill="rgb(253,197,36)" fg:x="103245" fg:w="14"/><text x="92.1737%" y="495.50"></text></g><g><title>fastrand::Rng::usize (23 samples, 0.02%)</title><rect x="91.9361%" y="469" width="0.0205%" height="15" fill="rgb(245,225,54)" fg:x="103259" fg:w="23"/><text x="92.1861%" y="479.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (23 samples, 0.02%)</title><rect x="91.9361%" y="453" width="0.0205%" height="15" fill="rgb(239,94,37)" fg:x="103259" fg:w="23"/><text x="92.1861%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (41 samples, 0.04%)</title><rect x="91.9237%" y="501" width="0.0365%" height="15" fill="rgb(242,217,10)" fg:x="103245" fg:w="41"/><text x="92.1737%" y="511.50"></text></g><g><title>fastrand::usize::{{closure}} (27 samples, 0.02%)</title><rect x="91.9361%" y="485" width="0.0240%" height="15" fill="rgb(250,193,7)" fg:x="103259" fg:w="27"/><text x="92.1861%" y="495.50"></text></g><g><title>fastrand::usize (48 samples, 0.04%)</title><rect x="91.9192%" y="533" width="0.0427%" height="15" fill="rgb(230,104,19)" fg:x="103240" fg:w="48"/><text x="92.1692%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (43 samples, 0.04%)</title><rect x="91.9237%" y="517" width="0.0383%" height="15" fill="rgb(230,181,4)" fg:x="103245" fg:w="43"/><text x="92.1737%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="91.9620%" y="517" width="0.0107%" height="15" fill="rgb(216,219,49)" fg:x="103288" fg:w="12"/><text x="92.2120%" y="527.50"></text></g><g><title>std::sync::poison::Flag::borrow (12 samples, 0.01%)</title><rect x="91.9620%" y="501" width="0.0107%" height="15" fill="rgb(254,144,0)" fg:x="103288" fg:w="12"/><text x="92.2120%" y="511.50"></text></g><g><title>___pthread_rwlock_rdlock (230 samples, 0.20%)</title><rect x="91.9985%" y="485" width="0.2048%" height="15" fill="rgb(205,209,38)" fg:x="103329" fg:w="230"/><text x="92.2485%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (4,967 samples, 4.42%)</title><rect x="87.9091%" y="549" width="4.4223%" height="15" fill="rgb(240,21,42)" fg:x="98736" fg:w="4967"/><text x="88.1591%" y="559.50">async..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (415 samples, 0.37%)</title><rect x="91.9620%" y="533" width="0.3695%" height="15" fill="rgb(241,132,3)" fg:x="103288" fg:w="415"/><text x="92.2120%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (403 samples, 0.36%)</title><rect x="91.9726%" y="517" width="0.3588%" height="15" fill="rgb(225,14,2)" fg:x="103300" fg:w="403"/><text x="92.2226%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (395 samples, 0.35%)</title><rect x="91.9798%" y="501" width="0.3517%" height="15" fill="rgb(210,141,35)" fg:x="103308" fg:w="395"/><text x="92.2298%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (144 samples, 0.13%)</title><rect x="92.2032%" y="485" width="0.1282%" height="15" fill="rgb(251,14,44)" fg:x="103559" fg:w="144"/><text x="92.4532%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (144 samples, 0.13%)</title><rect x="92.2032%" y="469" width="0.1282%" height="15" fill="rgb(247,48,18)" fg:x="103559" fg:w="144"/><text x="92.4532%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (37 samples, 0.03%)</title><rect x="92.3377%" y="469" width="0.0329%" height="15" fill="rgb(225,0,40)" fg:x="103710" fg:w="37"/><text x="92.5877%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (41 samples, 0.04%)</title><rect x="92.3359%" y="533" width="0.0365%" height="15" fill="rgb(221,31,33)" fg:x="103708" fg:w="41"/><text x="92.5859%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="92.3359%" y="517" width="0.0365%" height="15" fill="rgb(237,42,40)" fg:x="103708" fg:w="41"/><text x="92.5859%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (40 samples, 0.04%)</title><rect x="92.3368%" y="501" width="0.0356%" height="15" fill="rgb(233,51,29)" fg:x="103709" fg:w="40"/><text x="92.5868%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (39 samples, 0.03%)</title><rect x="92.3377%" y="485" width="0.0347%" height="15" fill="rgb(226,58,20)" fg:x="103710" fg:w="39"/><text x="92.5877%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (80 samples, 0.07%)</title><rect x="92.3724%" y="533" width="0.0712%" height="15" fill="rgb(208,98,7)" fg:x="103749" fg:w="80"/><text x="92.6224%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (80 samples, 0.07%)</title><rect x="92.3724%" y="517" width="0.0712%" height="15" fill="rgb(228,143,44)" fg:x="103749" fg:w="80"/><text x="92.6224%" y="527.50"></text></g><g><title>async_executor::State::notify (167 samples, 0.15%)</title><rect x="92.3315%" y="549" width="0.1487%" height="15" fill="rgb(246,55,38)" fg:x="103703" fg:w="167"/><text x="92.5815%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (41 samples, 0.04%)</title><rect x="92.4436%" y="533" width="0.0365%" height="15" fill="rgb(247,87,16)" fg:x="103829" fg:w="41"/><text x="92.6936%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (39 samples, 0.03%)</title><rect x="92.4454%" y="517" width="0.0347%" height="15" fill="rgb(234,129,42)" fg:x="103831" fg:w="39"/><text x="92.6954%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (38 samples, 0.03%)</title><rect x="92.4463%" y="501" width="0.0338%" height="15" fill="rgb(220,82,16)" fg:x="103832" fg:w="38"/><text x="92.6963%" y="511.50"></text></g><g><title>___pthread_mutex_lock (38 samples, 0.03%)</title><rect x="92.4463%" y="485" width="0.0338%" height="15" fill="rgb(211,88,4)" fg:x="103832" fg:w="38"/><text x="92.6963%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (156 samples, 0.14%)</title><rect x="92.4980%" y="517" width="0.1389%" height="15" fill="rgb(248,151,21)" fg:x="103890" fg:w="156"/><text x="92.7480%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (155 samples, 0.14%)</title><rect x="92.4988%" y="501" width="0.1380%" height="15" fill="rgb(238,163,6)" fg:x="103891" fg:w="155"/><text x="92.7488%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (155 samples, 0.14%)</title><rect x="92.4988%" y="485" width="0.1380%" height="15" fill="rgb(209,183,11)" fg:x="103891" fg:w="155"/><text x="92.7488%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (155 samples, 0.14%)</title><rect x="92.4988%" y="469" width="0.1380%" height="15" fill="rgb(219,37,20)" fg:x="103891" fg:w="155"/><text x="92.7488%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (155 samples, 0.14%)</title><rect x="92.4988%" y="453" width="0.1380%" height="15" fill="rgb(210,158,4)" fg:x="103891" fg:w="155"/><text x="92.7488%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (155 samples, 0.14%)</title><rect x="92.4988%" y="437" width="0.1380%" height="15" fill="rgb(221,167,53)" fg:x="103891" fg:w="155"/><text x="92.7488%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (39 samples, 0.03%)</title><rect x="92.6368%" y="517" width="0.0347%" height="15" fill="rgb(237,151,45)" fg:x="104046" fg:w="39"/><text x="92.8868%" y="527.50"></text></g><g><title>async_executor::Sleepers::insert (205 samples, 0.18%)</title><rect x="92.4953%" y="533" width="0.1825%" height="15" fill="rgb(231,39,3)" fg:x="103887" fg:w="205"/><text x="92.7453%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (56 samples, 0.05%)</title><rect x="92.7401%" y="517" width="0.0499%" height="15" fill="rgb(212,167,28)" fg:x="104162" fg:w="56"/><text x="92.9901%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (56 samples, 0.05%)</title><rect x="92.7401%" y="501" width="0.0499%" height="15" fill="rgb(232,178,8)" fg:x="104162" fg:w="56"/><text x="92.9901%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (55 samples, 0.05%)</title><rect x="92.7410%" y="485" width="0.0490%" height="15" fill="rgb(225,151,20)" fg:x="104163" fg:w="55"/><text x="92.9910%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (55 samples, 0.05%)</title><rect x="92.7410%" y="469" width="0.0490%" height="15" fill="rgb(238,3,37)" fg:x="104163" fg:w="55"/><text x="92.9910%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (55 samples, 0.05%)</title><rect x="92.7410%" y="453" width="0.0490%" height="15" fill="rgb(251,147,42)" fg:x="104163" fg:w="55"/><text x="92.9910%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (55 samples, 0.05%)</title><rect x="92.7410%" y="437" width="0.0490%" height="15" fill="rgb(208,173,10)" fg:x="104163" fg:w="55"/><text x="92.9910%" y="447.50"></text></g><g><title>async_executor::Sleepers::update (143 samples, 0.13%)</title><rect x="92.6831%" y="533" width="0.1273%" height="15" fill="rgb(246,225,4)" fg:x="104098" fg:w="143"/><text x="92.9331%" y="543.50"></text></g><g><title>core::task::wake::Waker::will_wake (13 samples, 0.01%)</title><rect x="92.7989%" y="517" width="0.0116%" height="15" fill="rgb(248,102,6)" fg:x="104228" fg:w="13"/><text x="93.0489%" y="527.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (13 samples, 0.01%)</title><rect x="92.7989%" y="501" width="0.0116%" height="15" fill="rgb(232,6,21)" fg:x="104228" fg:w="13"/><text x="93.0489%" y="511.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (263 samples, 0.23%)</title><rect x="92.8220%" y="469" width="0.2342%" height="15" fill="rgb(221,179,22)" fg:x="104254" fg:w="263"/><text x="93.0720%" y="479.50"></text></g><g><title>__GI___lll_lock_wake (13 samples, 0.01%)</title><rect x="93.0446%" y="453" width="0.0116%" height="15" fill="rgb(252,50,20)" fg:x="104504" fg:w="13"/><text x="93.2946%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (282 samples, 0.25%)</title><rect x="92.8114%" y="533" width="0.2511%" height="15" fill="rgb(222,56,38)" fg:x="104242" fg:w="282"/><text x="93.0614%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (282 samples, 0.25%)</title><rect x="92.8114%" y="517" width="0.2511%" height="15" fill="rgb(206,193,29)" fg:x="104242" fg:w="282"/><text x="93.0614%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (277 samples, 0.25%)</title><rect x="92.8158%" y="501" width="0.2466%" height="15" fill="rgb(239,192,45)" fg:x="104247" fg:w="277"/><text x="93.0658%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (270 samples, 0.24%)</title><rect x="92.8220%" y="485" width="0.2404%" height="15" fill="rgb(254,18,36)" fg:x="104254" fg:w="270"/><text x="93.0720%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (176 samples, 0.16%)</title><rect x="93.0624%" y="533" width="0.1567%" height="15" fill="rgb(221,127,11)" fg:x="104524" fg:w="176"/><text x="93.3124%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (176 samples, 0.16%)</title><rect x="93.0624%" y="517" width="0.1567%" height="15" fill="rgb(234,146,35)" fg:x="104524" fg:w="176"/><text x="93.3124%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (111 samples, 0.10%)</title><rect x="93.2191%" y="533" width="0.0988%" height="15" fill="rgb(254,201,37)" fg:x="104700" fg:w="111"/><text x="93.4691%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_store (111 samples, 0.10%)</title><rect x="93.2191%" y="517" width="0.0988%" height="15" fill="rgb(211,202,23)" fg:x="104700" fg:w="111"/><text x="93.4691%" y="527.50"></text></g><g><title>std::sync::poison::Flag::get (14 samples, 0.01%)</title><rect x="93.3180%" y="485" width="0.0125%" height="15" fill="rgb(237,91,2)" fg:x="104811" fg:w="14"/><text x="93.5680%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (14 samples, 0.01%)</title><rect x="93.3180%" y="469" width="0.0125%" height="15" fill="rgb(226,228,36)" fg:x="104811" fg:w="14"/><text x="93.5680%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="93.3180%" y="453" width="0.0125%" height="15" fill="rgb(213,63,50)" fg:x="104811" fg:w="14"/><text x="93.5680%" y="463.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="93.3180%" y="517" width="0.0151%" height="15" fill="rgb(235,194,19)" fg:x="104811" fg:w="17"/><text x="93.5680%" y="527.50"></text></g><g><title>std::sync::poison::Flag::borrow (17 samples, 0.02%)</title><rect x="93.3180%" y="501" width="0.0151%" height="15" fill="rgb(207,204,18)" fg:x="104811" fg:w="17"/><text x="93.5680%" y="511.50"></text></g><g><title>async_executor::Ticker::sleep (1,401 samples, 1.25%)</title><rect x="92.4801%" y="549" width="1.2474%" height="15" fill="rgb(248,8,7)" fg:x="103870" fg:w="1401"/><text x="92.7301%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (460 samples, 0.41%)</title><rect x="93.3180%" y="533" width="0.4096%" height="15" fill="rgb(223,145,47)" fg:x="104811" fg:w="460"/><text x="93.5680%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (443 samples, 0.39%)</title><rect x="93.3331%" y="517" width="0.3944%" height="15" fill="rgb(228,84,11)" fg:x="104828" fg:w="443"/><text x="93.5831%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (423 samples, 0.38%)</title><rect x="93.3509%" y="501" width="0.3766%" height="15" fill="rgb(218,76,45)" fg:x="104848" fg:w="423"/><text x="93.6009%" y="511.50"></text></g><g><title>___pthread_mutex_lock (423 samples, 0.38%)</title><rect x="93.3509%" y="485" width="0.3766%" height="15" fill="rgb(223,80,15)" fg:x="104848" fg:w="423"/><text x="93.6009%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (46 samples, 0.04%)</title><rect x="93.6866%" y="469" width="0.0410%" height="15" fill="rgb(219,218,33)" fg:x="105225" fg:w="46"/><text x="93.9366%" y="479.50"></text></g><g><title>async_executor::Sleepers::remove (86 samples, 0.08%)</title><rect x="93.7329%" y="533" width="0.0766%" height="15" fill="rgb(208,51,11)" fg:x="105277" fg:w="86"/><text x="93.9829%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (57 samples, 0.05%)</title><rect x="93.7587%" y="517" width="0.0507%" height="15" fill="rgb(229,165,39)" fg:x="105306" fg:w="57"/><text x="94.0087%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (57 samples, 0.05%)</title><rect x="93.7587%" y="501" width="0.0507%" height="15" fill="rgb(241,100,24)" fg:x="105306" fg:w="57"/><text x="94.0087%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (57 samples, 0.05%)</title><rect x="93.7587%" y="485" width="0.0507%" height="15" fill="rgb(228,14,23)" fg:x="105306" fg:w="57"/><text x="94.0087%" y="495.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (57 samples, 0.05%)</title><rect x="93.7587%" y="469" width="0.0507%" height="15" fill="rgb(247,116,52)" fg:x="105306" fg:w="57"/><text x="94.0087%" y="479.50"></text></g><g><title>core::mem::drop (55 samples, 0.05%)</title><rect x="93.7605%" y="453" width="0.0490%" height="15" fill="rgb(216,149,33)" fg:x="105308" fg:w="55"/><text x="94.0105%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (55 samples, 0.05%)</title><rect x="93.7605%" y="437" width="0.0490%" height="15" fill="rgb(238,142,29)" fg:x="105308" fg:w="55"/><text x="94.0105%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.05%)</title><rect x="93.7605%" y="421" width="0.0490%" height="15" fill="rgb(224,83,40)" fg:x="105308" fg:w="55"/><text x="94.0105%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (55 samples, 0.05%)</title><rect x="93.7605%" y="405" width="0.0490%" height="15" fill="rgb(234,165,11)" fg:x="105308" fg:w="55"/><text x="94.0105%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (55 samples, 0.05%)</title><rect x="93.7605%" y="389" width="0.0490%" height="15" fill="rgb(215,96,23)" fg:x="105308" fg:w="55"/><text x="94.0105%" y="399.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (53 samples, 0.05%)</title><rect x="93.8103%" y="469" width="0.0472%" height="15" fill="rgb(233,179,26)" fg:x="105364" fg:w="53"/><text x="94.0603%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (56 samples, 0.05%)</title><rect x="93.8094%" y="533" width="0.0499%" height="15" fill="rgb(225,129,33)" fg:x="105363" fg:w="56"/><text x="94.0594%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="93.8094%" y="517" width="0.0499%" height="15" fill="rgb(237,49,13)" fg:x="105363" fg:w="56"/><text x="94.0594%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (55 samples, 0.05%)</title><rect x="93.8103%" y="501" width="0.0490%" height="15" fill="rgb(211,3,31)" fg:x="105364" fg:w="55"/><text x="94.0603%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (55 samples, 0.05%)</title><rect x="93.8103%" y="485" width="0.0490%" height="15" fill="rgb(216,152,19)" fg:x="105364" fg:w="55"/><text x="94.0603%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (66 samples, 0.06%)</title><rect x="93.8593%" y="533" width="0.0588%" height="15" fill="rgb(251,121,35)" fg:x="105419" fg:w="66"/><text x="94.1093%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (66 samples, 0.06%)</title><rect x="93.8593%" y="517" width="0.0588%" height="15" fill="rgb(210,217,47)" fg:x="105419" fg:w="66"/><text x="94.1093%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (63 samples, 0.06%)</title><rect x="93.9181%" y="533" width="0.0561%" height="15" fill="rgb(244,116,22)" fg:x="105485" fg:w="63"/><text x="94.1681%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (63 samples, 0.06%)</title><rect x="93.9181%" y="517" width="0.0561%" height="15" fill="rgb(228,17,21)" fg:x="105485" fg:w="63"/><text x="94.1681%" y="527.50"></text></g><g><title>async_executor::Ticker::wake (513 samples, 0.46%)</title><rect x="93.7275%" y="549" width="0.4567%" height="15" fill="rgb(240,149,34)" fg:x="105271" fg:w="513"/><text x="93.9775%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (236 samples, 0.21%)</title><rect x="93.9741%" y="533" width="0.2101%" height="15" fill="rgb(208,125,47)" fg:x="105548" fg:w="236"/><text x="94.2241%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (229 samples, 0.20%)</title><rect x="93.9804%" y="517" width="0.2039%" height="15" fill="rgb(249,186,39)" fg:x="105555" fg:w="229"/><text x="94.2304%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (192 samples, 0.17%)</title><rect x="94.0133%" y="501" width="0.1709%" height="15" fill="rgb(240,220,33)" fg:x="105592" fg:w="192"/><text x="94.2633%" y="511.50"></text></g><g><title>___pthread_mutex_lock (192 samples, 0.17%)</title><rect x="94.0133%" y="485" width="0.1709%" height="15" fill="rgb(243,110,23)" fg:x="105592" fg:w="192"/><text x="94.2633%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (17 samples, 0.02%)</title><rect x="94.1691%" y="469" width="0.0151%" height="15" fill="rgb(219,163,46)" fg:x="105767" fg:w="17"/><text x="94.4191%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (13 samples, 0.01%)</title><rect x="94.1923%" y="485" width="0.0116%" height="15" fill="rgb(216,126,30)" fg:x="105793" fg:w="13"/><text x="94.4423%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.01%)</title><rect x="94.1923%" y="469" width="0.0116%" height="15" fill="rgb(208,139,11)" fg:x="105793" fg:w="13"/><text x="94.4423%" y="479.50"></text></g><g><title>__GI___write (14 samples, 0.01%)</title><rect x="94.2065%" y="469" width="0.0125%" height="15" fill="rgb(213,118,36)" fg:x="105809" fg:w="14"/><text x="94.4565%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::notify (33 samples, 0.03%)</title><rect x="94.1923%" y="517" width="0.0294%" height="15" fill="rgb(226,43,17)" fg:x="105793" fg:w="33"/><text x="94.4423%" y="527.50"></text></g><g><title>polling::Poller::notify (33 samples, 0.03%)</title><rect x="94.1923%" y="501" width="0.0294%" height="15" fill="rgb(254,217,4)" fg:x="105793" fg:w="33"/><text x="94.4423%" y="511.50"></text></g><g><title>polling::epoll::Poller::notify (18 samples, 0.02%)</title><rect x="94.2056%" y="485" width="0.0160%" height="15" fill="rgb(210,134,47)" fg:x="105808" fg:w="18"/><text x="94.4556%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (84 samples, 0.07%)</title><rect x="94.2608%" y="485" width="0.0748%" height="15" fill="rgb(237,24,49)" fg:x="105870" fg:w="84"/><text x="94.5108%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (84 samples, 0.07%)</title><rect x="94.2608%" y="469" width="0.0748%" height="15" fill="rgb(251,39,46)" fg:x="105870" fg:w="84"/><text x="94.5108%" y="479.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (98 samples, 0.09%)</title><rect x="94.3356%" y="485" width="0.0873%" height="15" fill="rgb(251,220,3)" fg:x="105954" fg:w="98"/><text x="94.5856%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (98 samples, 0.09%)</title><rect x="94.3356%" y="469" width="0.0873%" height="15" fill="rgb(228,105,12)" fg:x="105954" fg:w="98"/><text x="94.5856%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (98 samples, 0.09%)</title><rect x="94.3356%" y="453" width="0.0873%" height="15" fill="rgb(215,196,1)" fg:x="105954" fg:w="98"/><text x="94.5856%" y="463.50"></text></g><g><title>__GI___pthread_cond_signal (98 samples, 0.09%)</title><rect x="94.3356%" y="437" width="0.0873%" height="15" fill="rgb(214,33,39)" fg:x="105954" fg:w="98"/><text x="94.5856%" y="447.50"></text></g><g><title>parking::Unparker::unpark (295 samples, 0.26%)</title><rect x="94.2252%" y="517" width="0.2627%" height="15" fill="rgb(220,19,52)" fg:x="105830" fg:w="295"/><text x="94.4752%" y="527.50"></text></g><g><title>parking::Inner::unpark (267 samples, 0.24%)</title><rect x="94.2502%" y="501" width="0.2377%" height="15" fill="rgb(221,78,38)" fg:x="105858" fg:w="267"/><text x="94.5002%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (73 samples, 0.06%)</title><rect x="94.4229%" y="485" width="0.0650%" height="15" fill="rgb(253,30,16)" fg:x="106052" fg:w="73"/><text x="94.6729%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (72 samples, 0.06%)</title><rect x="94.4238%" y="469" width="0.0641%" height="15" fill="rgb(242,65,0)" fg:x="106053" fg:w="72"/><text x="94.6738%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (71 samples, 0.06%)</title><rect x="94.4247%" y="453" width="0.0632%" height="15" fill="rgb(235,201,12)" fg:x="106054" fg:w="71"/><text x="94.6747%" y="463.50"></text></g><g><title>___pthread_mutex_lock (71 samples, 0.06%)</title><rect x="94.4247%" y="437" width="0.0632%" height="15" fill="rgb(233,161,9)" fg:x="106054" fg:w="71"/><text x="94.6747%" y="447.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (13 samples, 0.01%)</title><rect x="94.4879%" y="485" width="0.0116%" height="15" fill="rgb(241,207,41)" fg:x="106125" fg:w="13"/><text x="94.7379%" y="495.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="94.4879%" y="469" width="0.0116%" height="15" fill="rgb(212,69,46)" fg:x="106125" fg:w="13"/><text x="94.7379%" y="479.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="94.4879%" y="453" width="0.0116%" height="15" fill="rgb(239,69,45)" fg:x="106125" fg:w="13"/><text x="94.7379%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (13 samples, 0.01%)</title><rect x="94.4879%" y="437" width="0.0116%" height="15" fill="rgb(242,117,48)" fg:x="106125" fg:w="13"/><text x="94.7379%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (353 samples, 0.31%)</title><rect x="94.1869%" y="533" width="0.3143%" height="15" fill="rgb(228,41,36)" fg:x="105787" fg:w="353"/><text x="94.4369%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.01%)</title><rect x="94.4879%" y="517" width="0.0134%" height="15" fill="rgb(212,3,32)" fg:x="106125" fg:w="15"/><text x="94.7379%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.01%)</title><rect x="94.4879%" y="501" width="0.0134%" height="15" fill="rgb(233,41,49)" fg:x="106125" fg:w="15"/><text x="94.7379%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (84 samples, 0.07%)</title><rect x="94.5012%" y="533" width="0.0748%" height="15" fill="rgb(252,170,49)" fg:x="106140" fg:w="84"/><text x="94.7512%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.07%)</title><rect x="94.5012%" y="517" width="0.0748%" height="15" fill="rgb(229,53,26)" fg:x="106140" fg:w="84"/><text x="94.7512%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (81 samples, 0.07%)</title><rect x="94.5039%" y="501" width="0.0721%" height="15" fill="rgb(217,157,12)" fg:x="106143" fg:w="81"/><text x="94.7539%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (81 samples, 0.07%)</title><rect x="94.5039%" y="485" width="0.0721%" height="15" fill="rgb(227,17,9)" fg:x="106143" fg:w="81"/><text x="94.7539%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,539 samples, 6.71%)</title><rect x="87.8646%" y="613" width="6.7123%" height="15" fill="rgb(218,84,12)" fg:x="98686" fg:w="7539"/><text x="88.1146%" y="623.50">&lt;core::fu..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (7,531 samples, 6.71%)</title><rect x="87.8717%" y="597" width="6.7052%" height="15" fill="rgb(212,79,24)" fg:x="98694" fg:w="7531"/><text x="88.1217%" y="607.50">async_exe..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (7,523 samples, 6.70%)</title><rect x="87.8788%" y="581" width="6.6981%" height="15" fill="rgb(217,222,37)" fg:x="98702" fg:w="7523"/><text x="88.1288%" y="591.50">&lt;futures_..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (7,509 samples, 6.69%)</title><rect x="87.8913%" y="565" width="6.6856%" height="15" fill="rgb(246,208,8)" fg:x="98716" fg:w="7509"/><text x="88.1413%" y="575.50">async_exe..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (438 samples, 0.39%)</title><rect x="94.1869%" y="549" width="0.3900%" height="15" fill="rgb(244,133,10)" fg:x="105787" fg:w="438"/><text x="94.4369%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,602 samples, 6.77%)</title><rect x="87.8441%" y="645" width="6.7684%" height="15" fill="rgb(209,219,41)" fg:x="98663" fg:w="7602"/><text x="88.0941%" y="655.50">&lt;core::fu..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (7,602 samples, 6.77%)</title><rect x="87.8441%" y="629" width="6.7684%" height="15" fill="rgb(253,175,45)" fg:x="98663" fg:w="7602"/><text x="88.0941%" y="639.50">async_exe..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (40 samples, 0.04%)</title><rect x="94.5769%" y="613" width="0.0356%" height="15" fill="rgb(235,100,37)" fg:x="106225" fg:w="40"/><text x="94.8269%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (40 samples, 0.04%)</title><rect x="94.5769%" y="597" width="0.0356%" height="15" fill="rgb(225,87,19)" fg:x="106225" fg:w="40"/><text x="94.8269%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (75 samples, 0.07%)</title><rect x="94.7203%" y="517" width="0.0668%" height="15" fill="rgb(217,152,17)" fg:x="106386" fg:w="75"/><text x="94.9703%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (69 samples, 0.06%)</title><rect x="94.7256%" y="501" width="0.0614%" height="15" fill="rgb(235,72,13)" fg:x="106392" fg:w="69"/><text x="94.9756%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (46 samples, 0.04%)</title><rect x="94.7906%" y="501" width="0.0410%" height="15" fill="rgb(233,140,18)" fg:x="106465" fg:w="46"/><text x="95.0406%" y="511.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (14 samples, 0.01%)</title><rect x="94.8396%" y="485" width="0.0125%" height="15" fill="rgb(207,212,28)" fg:x="106520" fg:w="14"/><text x="95.0896%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="94.8405%" y="469" width="0.0116%" height="15" fill="rgb(220,130,25)" fg:x="106521" fg:w="13"/><text x="95.0905%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (207 samples, 0.18%)</title><rect x="94.6704%" y="597" width="0.1843%" height="15" fill="rgb(205,55,34)" fg:x="106330" fg:w="207"/><text x="94.9204%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (200 samples, 0.18%)</title><rect x="94.6766%" y="581" width="0.1781%" height="15" fill="rgb(237,54,35)" fg:x="106337" fg:w="200"/><text x="94.9266%" y="591.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (156 samples, 0.14%)</title><rect x="94.7158%" y="565" width="0.1389%" height="15" fill="rgb(208,67,23)" fg:x="106381" fg:w="156"/><text x="94.9658%" y="575.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (156 samples, 0.14%)</title><rect x="94.7158%" y="549" width="0.1389%" height="15" fill="rgb(206,207,50)" fg:x="106381" fg:w="156"/><text x="94.9658%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (153 samples, 0.14%)</title><rect x="94.7185%" y="533" width="0.1362%" height="15" fill="rgb(213,211,42)" fg:x="106384" fg:w="153"/><text x="94.9685%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (76 samples, 0.07%)</title><rect x="94.7870%" y="517" width="0.0677%" height="15" fill="rgb(252,197,50)" fg:x="106461" fg:w="76"/><text x="95.0370%" y="527.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (17 samples, 0.02%)</title><rect x="94.8396%" y="501" width="0.0151%" height="15" fill="rgb(251,211,41)" fg:x="106520" fg:w="17"/><text x="95.0896%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (210 samples, 0.19%)</title><rect x="94.6704%" y="613" width="0.1870%" height="15" fill="rgb(229,211,5)" fg:x="106330" fg:w="210"/><text x="94.9204%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (38 samples, 0.03%)</title><rect x="94.8574%" y="613" width="0.0338%" height="15" fill="rgb(239,36,31)" fg:x="106540" fg:w="38"/><text x="95.1074%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (37 samples, 0.03%)</title><rect x="94.8583%" y="597" width="0.0329%" height="15" fill="rgb(248,67,31)" fg:x="106541" fg:w="37"/><text x="95.1083%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (37 samples, 0.03%)</title><rect x="94.8583%" y="581" width="0.0329%" height="15" fill="rgb(249,55,44)" fg:x="106541" fg:w="37"/><text x="95.1083%" y="591.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (27 samples, 0.02%)</title><rect x="94.8912%" y="597" width="0.0240%" height="15" fill="rgb(216,82,12)" fg:x="106578" fg:w="27"/><text x="95.1412%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (16 samples, 0.01%)</title><rect x="94.9010%" y="581" width="0.0142%" height="15" fill="rgb(242,174,1)" fg:x="106589" fg:w="16"/><text x="95.1510%" y="591.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (15 samples, 0.01%)</title><rect x="94.9019%" y="565" width="0.0134%" height="15" fill="rgb(208,120,29)" fg:x="106590" fg:w="15"/><text x="95.1519%" y="575.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (18 samples, 0.02%)</title><rect x="94.9179%" y="581" width="0.0160%" height="15" fill="rgb(221,105,43)" fg:x="106608" fg:w="18"/><text x="95.1679%" y="591.50"></text></g><g><title>parking::Unparker::unpark (15 samples, 0.01%)</title><rect x="94.9206%" y="565" width="0.0134%" height="15" fill="rgb(234,124,22)" fg:x="106611" fg:w="15"/><text x="95.1706%" y="575.50"></text></g><g><title>parking::Inner::unpark (14 samples, 0.01%)</title><rect x="94.9215%" y="549" width="0.0125%" height="15" fill="rgb(212,23,30)" fg:x="106612" fg:w="14"/><text x="95.1715%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (52 samples, 0.05%)</title><rect x="94.8912%" y="613" width="0.0463%" height="15" fill="rgb(219,122,53)" fg:x="106578" fg:w="52"/><text x="95.1412%" y="623.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (22 samples, 0.02%)</title><rect x="94.9179%" y="597" width="0.0196%" height="15" fill="rgb(248,84,24)" fg:x="106608" fg:w="22"/><text x="95.1679%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (224 samples, 0.20%)</title><rect x="94.9375%" y="613" width="0.1994%" height="15" fill="rgb(245,115,18)" fg:x="106630" fg:w="224"/><text x="95.1875%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (224 samples, 0.20%)</title><rect x="94.9375%" y="597" width="0.1994%" height="15" fill="rgb(227,176,51)" fg:x="106630" fg:w="224"/><text x="95.1875%" y="607.50"></text></g><g><title>async_task::runnable::Runnable::run (589 samples, 0.52%)</title><rect x="94.6143%" y="645" width="0.5244%" height="15" fill="rgb(229,63,42)" fg:x="106267" fg:w="589"/><text x="94.8643%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (573 samples, 0.51%)</title><rect x="94.6285%" y="629" width="0.5102%" height="15" fill="rgb(247,202,24)" fg:x="106283" fg:w="573"/><text x="94.8785%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (8,238 samples, 7.33%)</title><rect x="87.8201%" y="709" width="7.3347%" height="15" fill="rgb(244,173,20)" fg:x="98636" fg:w="8238"/><text x="88.0701%" y="719.50">async_exec..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,229 samples, 7.33%)</title><rect x="87.8281%" y="693" width="7.3266%" height="15" fill="rgb(242,81,47)" fg:x="98645" fg:w="8229"/><text x="88.0781%" y="703.50">&lt;futures_l..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,229 samples, 7.33%)</title><rect x="87.8281%" y="677" width="7.3266%" height="15" fill="rgb(231,185,54)" fg:x="98645" fg:w="8229"/><text x="88.0781%" y="687.50">&lt;core::fut..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8,226 samples, 7.32%)</title><rect x="87.8308%" y="661" width="7.3240%" height="15" fill="rgb(243,55,32)" fg:x="98648" fg:w="8226"/><text x="88.0808%" y="671.50">async_exec..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (18 samples, 0.02%)</title><rect x="95.1387%" y="645" width="0.0160%" height="15" fill="rgb(208,167,19)" fg:x="106856" fg:w="18"/><text x="95.3887%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (18 samples, 0.02%)</title><rect x="95.1387%" y="629" width="0.0160%" height="15" fill="rgb(231,72,35)" fg:x="106856" fg:w="18"/><text x="95.3887%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="95.2536%" y="501" width="0.0142%" height="15" fill="rgb(250,173,51)" fg:x="106985" fg:w="16"/><text x="95.5036%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (16 samples, 0.01%)</title><rect x="95.2536%" y="485" width="0.0142%" height="15" fill="rgb(209,5,22)" fg:x="106985" fg:w="16"/><text x="95.5036%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.01%)</title><rect x="95.2536%" y="469" width="0.0142%" height="15" fill="rgb(250,174,19)" fg:x="106985" fg:w="16"/><text x="95.5036%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.01%)</title><rect x="95.2536%" y="453" width="0.0142%" height="15" fill="rgb(217,3,49)" fg:x="106985" fg:w="16"/><text x="95.5036%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.01%)</title><rect x="95.2536%" y="437" width="0.0142%" height="15" fill="rgb(218,225,5)" fg:x="106985" fg:w="16"/><text x="95.5036%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.01%)</title><rect x="95.2554%" y="421" width="0.0125%" height="15" fill="rgb(236,89,11)" fg:x="106987" fg:w="14"/><text x="95.5054%" y="431.50"></text></g><g><title>concurrent_queue::full_fence (46 samples, 0.04%)</title><rect x="95.3337%" y="469" width="0.0410%" height="15" fill="rgb(206,33,28)" fg:x="107075" fg:w="46"/><text x="95.5837%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (46 samples, 0.04%)</title><rect x="95.3337%" y="453" width="0.0410%" height="15" fill="rgb(241,56,42)" fg:x="107075" fg:w="46"/><text x="95.5837%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (46 samples, 0.04%)</title><rect x="95.3337%" y="437" width="0.0410%" height="15" fill="rgb(222,44,11)" fg:x="107075" fg:w="46"/><text x="95.5837%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (46 samples, 0.04%)</title><rect x="95.3337%" y="421" width="0.0410%" height="15" fill="rgb(234,111,20)" fg:x="107075" fg:w="46"/><text x="95.5837%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (183 samples, 0.16%)</title><rect x="95.3016%" y="485" width="0.1629%" height="15" fill="rgb(237,77,6)" fg:x="107039" fg:w="183"/><text x="95.5516%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (101 samples, 0.09%)</title><rect x="95.3747%" y="469" width="0.0899%" height="15" fill="rgb(235,111,23)" fg:x="107121" fg:w="101"/><text x="95.6247%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (101 samples, 0.09%)</title><rect x="95.3747%" y="453" width="0.0899%" height="15" fill="rgb(251,135,29)" fg:x="107121" fg:w="101"/><text x="95.6247%" y="463.50"></text></g><g><title>concurrent_queue::full_fence (38 samples, 0.03%)</title><rect x="95.4735%" y="469" width="0.0338%" height="15" fill="rgb(217,57,1)" fg:x="107232" fg:w="38"/><text x="95.7235%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (35 samples, 0.03%)</title><rect x="95.4762%" y="453" width="0.0312%" height="15" fill="rgb(249,119,31)" fg:x="107235" fg:w="35"/><text x="95.7262%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (35 samples, 0.03%)</title><rect x="95.4762%" y="437" width="0.0312%" height="15" fill="rgb(233,164,33)" fg:x="107235" fg:w="35"/><text x="95.7262%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.03%)</title><rect x="95.4762%" y="421" width="0.0312%" height="15" fill="rgb(250,217,43)" fg:x="107235" fg:w="35"/><text x="95.7262%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (301 samples, 0.27%)</title><rect x="95.2678%" y="501" width="0.2680%" height="15" fill="rgb(232,154,50)" fg:x="107001" fg:w="301"/><text x="95.5178%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (80 samples, 0.07%)</title><rect x="95.4646%" y="485" width="0.0712%" height="15" fill="rgb(227,190,8)" fg:x="107222" fg:w="80"/><text x="95.7146%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (31 samples, 0.03%)</title><rect x="95.5082%" y="469" width="0.0276%" height="15" fill="rgb(209,217,32)" fg:x="107271" fg:w="31"/><text x="95.7582%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.03%)</title><rect x="95.5082%" y="453" width="0.0276%" height="15" fill="rgb(243,203,50)" fg:x="107271" fg:w="31"/><text x="95.7582%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (32 samples, 0.03%)</title><rect x="95.5367%" y="437" width="0.0285%" height="15" fill="rgb(232,152,27)" fg:x="107303" fg:w="32"/><text x="95.7867%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (32 samples, 0.03%)</title><rect x="95.5367%" y="421" width="0.0285%" height="15" fill="rgb(240,34,29)" fg:x="107303" fg:w="32"/><text x="95.7867%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (86 samples, 0.08%)</title><rect x="95.5358%" y="501" width="0.0766%" height="15" fill="rgb(215,185,52)" fg:x="107302" fg:w="86"/><text x="95.7858%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.08%)</title><rect x="95.5358%" y="485" width="0.0766%" height="15" fill="rgb(240,89,49)" fg:x="107302" fg:w="86"/><text x="95.7858%" y="495.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (86 samples, 0.08%)</title><rect x="95.5358%" y="469" width="0.0766%" height="15" fill="rgb(225,12,52)" fg:x="107302" fg:w="86"/><text x="95.7858%" y="479.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (85 samples, 0.08%)</title><rect x="95.5367%" y="453" width="0.0757%" height="15" fill="rgb(239,128,45)" fg:x="107303" fg:w="85"/><text x="95.7867%" y="463.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (53 samples, 0.05%)</title><rect x="95.5652%" y="437" width="0.0472%" height="15" fill="rgb(211,78,47)" fg:x="107335" fg:w="53"/><text x="95.8152%" y="447.50"></text></g><g><title>___pthread_rwlock_unlock (53 samples, 0.05%)</title><rect x="95.5652%" y="421" width="0.0472%" height="15" fill="rgb(232,31,21)" fg:x="107335" fg:w="53"/><text x="95.8152%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.01%)</title><rect x="95.6159%" y="469" width="0.0107%" height="15" fill="rgb(222,168,14)" fg:x="107392" fg:w="12"/><text x="95.8659%" y="479.50"></text></g><g><title>fastrand::usize (17 samples, 0.02%)</title><rect x="95.6124%" y="501" width="0.0151%" height="15" fill="rgb(209,128,24)" fg:x="107388" fg:w="17"/><text x="95.8624%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.01%)</title><rect x="95.6159%" y="485" width="0.0116%" height="15" fill="rgb(249,35,13)" fg:x="107392" fg:w="13"/><text x="95.8659%" y="495.50"></text></g><g><title>___pthread_rwlock_rdlock (47 samples, 0.04%)</title><rect x="95.6337%" y="453" width="0.0418%" height="15" fill="rgb(218,7,2)" fg:x="107412" fg:w="47"/><text x="95.8837%" y="463.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (526 samples, 0.47%)</title><rect x="95.2402%" y="517" width="0.4683%" height="15" fill="rgb(238,107,27)" fg:x="106970" fg:w="526"/><text x="95.4902%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (91 samples, 0.08%)</title><rect x="95.6275%" y="501" width="0.0810%" height="15" fill="rgb(217,88,38)" fg:x="107405" fg:w="91"/><text x="95.8775%" y="511.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (86 samples, 0.08%)</title><rect x="95.6320%" y="485" width="0.0766%" height="15" fill="rgb(230,207,0)" fg:x="107410" fg:w="86"/><text x="95.8820%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (85 samples, 0.08%)</title><rect x="95.6329%" y="469" width="0.0757%" height="15" fill="rgb(249,64,54)" fg:x="107411" fg:w="85"/><text x="95.8829%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (37 samples, 0.03%)</title><rect x="95.6756%" y="453" width="0.0329%" height="15" fill="rgb(231,7,11)" fg:x="107459" fg:w="37"/><text x="95.9256%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (37 samples, 0.03%)</title><rect x="95.6756%" y="437" width="0.0329%" height="15" fill="rgb(205,149,21)" fg:x="107459" fg:w="37"/><text x="95.9256%" y="447.50"></text></g><g><title>async_executor::Sleepers::update (28 samples, 0.02%)</title><rect x="95.7174%" y="501" width="0.0249%" height="15" fill="rgb(215,126,34)" fg:x="107506" fg:w="28"/><text x="95.9674%" y="511.50"></text></g><g><title>core::task::wake::Waker::will_wake (14 samples, 0.01%)</title><rect x="95.7299%" y="485" width="0.0125%" height="15" fill="rgb(241,132,45)" fg:x="107520" fg:w="14"/><text x="95.9799%" y="495.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="95.7299%" y="469" width="0.0125%" height="15" fill="rgb(252,69,32)" fg:x="107520" fg:w="14"/><text x="95.9799%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (62 samples, 0.06%)</title><rect x="95.7424%" y="501" width="0.0552%" height="15" fill="rgb(232,204,19)" fg:x="107534" fg:w="62"/><text x="95.9924%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.06%)</title><rect x="95.7424%" y="485" width="0.0552%" height="15" fill="rgb(249,15,47)" fg:x="107534" fg:w="62"/><text x="95.9924%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (62 samples, 0.06%)</title><rect x="95.7424%" y="469" width="0.0552%" height="15" fill="rgb(209,227,23)" fg:x="107534" fg:w="62"/><text x="95.9924%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (57 samples, 0.05%)</title><rect x="95.7468%" y="453" width="0.0507%" height="15" fill="rgb(248,92,24)" fg:x="107539" fg:w="57"/><text x="95.9968%" y="463.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (57 samples, 0.05%)</title><rect x="95.7468%" y="437" width="0.0507%" height="15" fill="rgb(247,59,2)" fg:x="107539" fg:w="57"/><text x="95.9968%" y="447.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (725 samples, 0.65%)</title><rect x="95.2073%" y="629" width="0.6455%" height="15" fill="rgb(221,30,5)" fg:x="106933" fg:w="725"/><text x="95.4573%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (719 samples, 0.64%)</title><rect x="95.2126%" y="613" width="0.6402%" height="15" fill="rgb(208,108,53)" fg:x="106939" fg:w="719"/><text x="95.4626%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (716 samples, 0.64%)</title><rect x="95.2153%" y="597" width="0.6375%" height="15" fill="rgb(211,183,26)" fg:x="106942" fg:w="716"/><text x="95.4653%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (712 samples, 0.63%)</title><rect x="95.2188%" y="581" width="0.6339%" height="15" fill="rgb(232,132,4)" fg:x="106946" fg:w="712"/><text x="95.4688%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (710 samples, 0.63%)</title><rect x="95.2206%" y="565" width="0.6321%" height="15" fill="rgb(253,128,37)" fg:x="106948" fg:w="710"/><text x="95.4706%" y="575.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (705 samples, 0.63%)</title><rect x="95.2251%" y="549" width="0.6277%" height="15" fill="rgb(221,58,24)" fg:x="106953" fg:w="705"/><text x="95.4751%" y="559.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (694 samples, 0.62%)</title><rect x="95.2349%" y="533" width="0.6179%" height="15" fill="rgb(230,54,45)" fg:x="106964" fg:w="694"/><text x="95.4849%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (162 samples, 0.14%)</title><rect x="95.7085%" y="517" width="0.1442%" height="15" fill="rgb(254,21,18)" fg:x="107496" fg:w="162"/><text x="95.9585%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (62 samples, 0.06%)</title><rect x="95.7976%" y="501" width="0.0552%" height="15" fill="rgb(221,108,0)" fg:x="107596" fg:w="62"/><text x="96.0476%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (58 samples, 0.05%)</title><rect x="95.8011%" y="485" width="0.0516%" height="15" fill="rgb(206,95,1)" fg:x="107600" fg:w="58"/><text x="96.0511%" y="495.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (58 samples, 0.05%)</title><rect x="95.8011%" y="469" width="0.0516%" height="15" fill="rgb(237,52,5)" fg:x="107600" fg:w="58"/><text x="96.0511%" y="479.50"></text></g><g><title>___pthread_mutex_lock (58 samples, 0.05%)</title><rect x="95.8011%" y="453" width="0.0516%" height="15" fill="rgb(218,150,34)" fg:x="107600" fg:w="58"/><text x="96.0511%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (25 samples, 0.02%)</title><rect x="95.9169%" y="565" width="0.0223%" height="15" fill="rgb(235,194,28)" fg:x="107730" fg:w="25"/><text x="96.1669%" y="575.50"></text></g><g><title>core::mem::replace (25 samples, 0.02%)</title><rect x="95.9169%" y="549" width="0.0223%" height="15" fill="rgb(245,92,18)" fg:x="107730" fg:w="25"/><text x="96.1669%" y="559.50"></text></g><g><title>core::ptr::read (25 samples, 0.02%)</title><rect x="95.9169%" y="533" width="0.0223%" height="15" fill="rgb(253,203,53)" fg:x="107730" fg:w="25"/><text x="96.1669%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (40 samples, 0.04%)</title><rect x="95.9080%" y="581" width="0.0356%" height="15" fill="rgb(249,185,47)" fg:x="107720" fg:w="40"/><text x="96.1580%" y="591.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (35 samples, 0.03%)</title><rect x="95.9543%" y="501" width="0.0312%" height="15" fill="rgb(252,194,52)" fg:x="107772" fg:w="35"/><text x="96.2043%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (49 samples, 0.04%)</title><rect x="95.9436%" y="581" width="0.0436%" height="15" fill="rgb(210,53,36)" fg:x="107760" fg:w="49"/><text x="96.1936%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (45 samples, 0.04%)</title><rect x="95.9471%" y="565" width="0.0401%" height="15" fill="rgb(237,37,25)" fg:x="107764" fg:w="45"/><text x="96.1971%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="95.9471%" y="549" width="0.0401%" height="15" fill="rgb(242,116,27)" fg:x="107764" fg:w="45"/><text x="96.1971%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (39 samples, 0.03%)</title><rect x="95.9525%" y="533" width="0.0347%" height="15" fill="rgb(213,185,26)" fg:x="107770" fg:w="39"/><text x="96.2025%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (37 samples, 0.03%)</title><rect x="95.9543%" y="517" width="0.0329%" height="15" fill="rgb(225,204,8)" fg:x="107772" fg:w="37"/><text x="96.2043%" y="527.50"></text></g><g><title>core::task::wake::Waker::will_wake (14 samples, 0.01%)</title><rect x="95.9881%" y="581" width="0.0125%" height="15" fill="rgb(254,111,37)" fg:x="107810" fg:w="14"/><text x="96.2381%" y="591.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="95.9881%" y="565" width="0.0125%" height="15" fill="rgb(242,35,9)" fg:x="107810" fg:w="14"/><text x="96.2381%" y="575.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (244 samples, 0.22%)</title><rect x="95.8928%" y="597" width="0.2172%" height="15" fill="rgb(232,138,49)" fg:x="107703" fg:w="244"/><text x="96.1428%" y="607.50"></text></g><g><title>event_listener::Inner::lock (123 samples, 0.11%)</title><rect x="96.0006%" y="581" width="0.1095%" height="15" fill="rgb(247,56,4)" fg:x="107824" fg:w="123"/><text x="96.2506%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (123 samples, 0.11%)</title><rect x="96.0006%" y="565" width="0.1095%" height="15" fill="rgb(226,179,17)" fg:x="107824" fg:w="123"/><text x="96.2506%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (121 samples, 0.11%)</title><rect x="96.0024%" y="549" width="0.1077%" height="15" fill="rgb(216,163,45)" fg:x="107826" fg:w="121"/><text x="96.2524%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (115 samples, 0.10%)</title><rect x="96.0077%" y="533" width="0.1024%" height="15" fill="rgb(211,157,3)" fg:x="107832" fg:w="115"/><text x="96.2577%" y="543.50"></text></g><g><title>___pthread_mutex_lock (115 samples, 0.10%)</title><rect x="96.0077%" y="517" width="0.1024%" height="15" fill="rgb(234,44,20)" fg:x="107832" fg:w="115"/><text x="96.2577%" y="527.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (120 samples, 0.11%)</title><rect x="96.1101%" y="597" width="0.1068%" height="15" fill="rgb(254,138,23)" fg:x="107947" fg:w="120"/><text x="96.3601%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (120 samples, 0.11%)</title><rect x="96.1101%" y="581" width="0.1068%" height="15" fill="rgb(206,119,39)" fg:x="107947" fg:w="120"/><text x="96.3601%" y="591.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (79 samples, 0.07%)</title><rect x="96.1466%" y="565" width="0.0703%" height="15" fill="rgb(231,105,52)" fg:x="107988" fg:w="79"/><text x="96.3966%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (77 samples, 0.07%)</title><rect x="96.1484%" y="549" width="0.0686%" height="15" fill="rgb(250,20,5)" fg:x="107990" fg:w="77"/><text x="96.3984%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (77 samples, 0.07%)</title><rect x="96.1484%" y="533" width="0.0686%" height="15" fill="rgb(215,198,30)" fg:x="107990" fg:w="77"/><text x="96.3984%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (77 samples, 0.07%)</title><rect x="96.1484%" y="517" width="0.0686%" height="15" fill="rgb(246,142,8)" fg:x="107990" fg:w="77"/><text x="96.3984%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,143 samples, 1.02%)</title><rect x="95.2037%" y="645" width="1.0177%" height="15" fill="rgb(243,26,38)" fg:x="106929" fg:w="1143"/><text x="95.4537%" y="655.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (414 samples, 0.37%)</title><rect x="95.8528%" y="629" width="0.3686%" height="15" fill="rgb(205,133,28)" fg:x="107658" fg:w="414"/><text x="96.1028%" y="639.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (391 samples, 0.35%)</title><rect x="95.8733%" y="613" width="0.3481%" height="15" fill="rgb(212,34,0)" fg:x="107681" fg:w="391"/><text x="96.1233%" y="623.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,147 samples, 1.02%)</title><rect x="95.2037%" y="661" width="1.0212%" height="15" fill="rgb(251,226,22)" fg:x="106929" fg:w="1147"/><text x="95.4537%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,465 samples, 8.43%)</title><rect x="87.8112%" y="725" width="8.4271%" height="15" fill="rgb(252,119,9)" fg:x="98626" fg:w="9465"/><text x="88.0612%" y="735.50">&lt;core::futur..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,217 samples, 1.08%)</title><rect x="95.1547%" y="709" width="1.0835%" height="15" fill="rgb(213,150,50)" fg:x="106874" fg:w="1217"/><text x="95.4047%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,165 samples, 1.04%)</title><rect x="95.2010%" y="693" width="1.0373%" height="15" fill="rgb(212,24,39)" fg:x="106926" fg:w="1165"/><text x="95.4510%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,164 samples, 1.04%)</title><rect x="95.2019%" y="677" width="1.0364%" height="15" fill="rgb(213,46,39)" fg:x="106927" fg:w="1164"/><text x="95.4519%" y="687.50"></text></g><g><title>async_executor::Runner::new (15 samples, 0.01%)</title><rect x="96.2249%" y="661" width="0.0134%" height="15" fill="rgb(239,106,12)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (15 samples, 0.01%)</title><rect x="96.2249%" y="645" width="0.0134%" height="15" fill="rgb(249,229,21)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="96.2249%" y="629" width="0.0134%" height="15" fill="rgb(212,158,3)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.01%)</title><rect x="96.2249%" y="613" width="0.0134%" height="15" fill="rgb(253,26,48)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="96.2249%" y="597" width="0.0134%" height="15" fill="rgb(238,178,20)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="96.2249%" y="581" width="0.0134%" height="15" fill="rgb(208,86,15)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="591.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="96.2249%" y="565" width="0.0134%" height="15" fill="rgb(239,42,53)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="575.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="96.2249%" y="549" width="0.0134%" height="15" fill="rgb(245,226,8)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="96.2249%" y="533" width="0.0134%" height="15" fill="rgb(216,176,32)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="543.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="96.2249%" y="517" width="0.0134%" height="15" fill="rgb(231,186,21)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="96.2249%" y="501" width="0.0134%" height="15" fill="rgb(205,95,49)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="96.2249%" y="485" width="0.0134%" height="15" fill="rgb(217,145,8)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="96.2249%" y="469" width="0.0134%" height="15" fill="rgb(239,144,48)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="96.2249%" y="453" width="0.0134%" height="15" fill="rgb(214,189,23)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="96.2249%" y="437" width="0.0134%" height="15" fill="rgb(229,157,17)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="96.2249%" y="421" width="0.0134%" height="15" fill="rgb(230,5,48)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="96.2249%" y="405" width="0.0134%" height="15" fill="rgb(224,156,48)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="415.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (15 samples, 0.01%)</title><rect x="96.2249%" y="389" width="0.0134%" height="15" fill="rgb(223,14,29)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (15 samples, 0.01%)</title><rect x="96.2249%" y="373" width="0.0134%" height="15" fill="rgb(229,96,36)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="96.2249%" y="357" width="0.0134%" height="15" fill="rgb(231,102,53)" fg:x="108076" fg:w="15"/><text x="96.4749%" y="367.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (9,474 samples, 8.44%)</title><rect x="87.8058%" y="741" width="8.4351%" height="15" fill="rgb(210,77,38)" fg:x="98620" fg:w="9474"/><text x="88.0558%" y="751.50">&lt;futures_lit..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (15 samples, 0.01%)</title><rect x="96.2410%" y="661" width="0.0134%" height="15" fill="rgb(235,131,6)" fg:x="108094" fg:w="15"/><text x="96.4910%" y="671.50"></text></g><g><title>once_cell::imp::initialize_inner (15 samples, 0.01%)</title><rect x="96.2410%" y="645" width="0.0134%" height="15" fill="rgb(252,55,38)" fg:x="108094" fg:w="15"/><text x="96.4910%" y="655.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (15 samples, 0.01%)</title><rect x="96.2410%" y="629" width="0.0134%" height="15" fill="rgb(246,38,14)" fg:x="108094" fg:w="15"/><text x="96.4910%" y="639.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (15 samples, 0.01%)</title><rect x="96.2410%" y="613" width="0.0134%" height="15" fill="rgb(242,27,5)" fg:x="108094" fg:w="15"/><text x="96.4910%" y="623.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (15 samples, 0.01%)</title><rect x="96.2410%" y="597" width="0.0134%" height="15" fill="rgb(228,65,35)" fg:x="108094" fg:w="15"/><text x="96.4910%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.01%)</title><rect x="96.2410%" y="581" width="0.0134%" height="15" fill="rgb(245,93,11)" fg:x="108094" fg:w="15"/><text x="96.4910%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.01%)</title><rect x="96.2410%" y="565" width="0.0134%" height="15" fill="rgb(213,1,31)" fg:x="108094" fg:w="15"/><text x="96.4910%" y="575.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR::{{closure}} (15 samples, 0.01%)</title><rect x="96.2410%" y="549" width="0.0134%" height="15" fill="rgb(237,205,14)" fg:x="108094" fg:w="15"/><text x="96.4910%" y="559.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (15 samples, 0.01%)</title><rect x="96.2410%" y="533" width="0.0134%" height="15" fill="rgb(232,118,45)" fg:x="108094" fg:w="15"/><text x="96.4910%" y="543.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="96.2410%" y="517" width="0.0134%" height="15" fill="rgb(218,5,6)" fg:x="108094" fg:w="15"/><text x="96.4910%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.01%)</title><rect x="96.2410%" y="501" width="0.0134%" height="15" fill="rgb(251,87,51)" fg:x="108094" fg:w="15"/><text x="96.4910%" y="511.50"></text></g><g><title>core::ptr::write (15 samples, 0.01%)</title><rect x="96.2410%" y="485" width="0.0134%" height="15" fill="rgb(207,225,20)" fg:x="108094" fg:w="15"/><text x="96.4910%" y="495.50"></text></g><g><title>async_io::reactor::Reactor::get (29 samples, 0.03%)</title><rect x="96.2410%" y="741" width="0.0258%" height="15" fill="rgb(222,78,54)" fg:x="108094" fg:w="29"/><text x="96.4910%" y="751.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (29 samples, 0.03%)</title><rect x="96.2410%" y="725" width="0.0258%" height="15" fill="rgb(232,85,16)" fg:x="108094" fg:w="29"/><text x="96.4910%" y="735.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (29 samples, 0.03%)</title><rect x="96.2410%" y="709" width="0.0258%" height="15" fill="rgb(244,25,33)" fg:x="108094" fg:w="29"/><text x="96.4910%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (29 samples, 0.03%)</title><rect x="96.2410%" y="693" width="0.0258%" height="15" fill="rgb(233,24,36)" fg:x="108094" fg:w="29"/><text x="96.4910%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (29 samples, 0.03%)</title><rect x="96.2410%" y="677" width="0.0258%" height="15" fill="rgb(253,49,54)" fg:x="108094" fg:w="29"/><text x="96.4910%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (14 samples, 0.01%)</title><rect x="96.2543%" y="661" width="0.0125%" height="15" fill="rgb(245,12,22)" fg:x="108109" fg:w="14"/><text x="96.5043%" y="671.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (14 samples, 0.01%)</title><rect x="96.2543%" y="645" width="0.0125%" height="15" fill="rgb(253,141,28)" fg:x="108109" fg:w="14"/><text x="96.5043%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="96.2543%" y="629" width="0.0125%" height="15" fill="rgb(225,207,27)" fg:x="108109" fg:w="14"/><text x="96.5043%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="96.2543%" y="613" width="0.0125%" height="15" fill="rgb(220,84,2)" fg:x="108109" fg:w="14"/><text x="96.5043%" y="623.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (232 samples, 0.21%)</title><rect x="96.2668%" y="741" width="0.2066%" height="15" fill="rgb(224,37,37)" fg:x="108123" fg:w="232"/><text x="96.5168%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (232 samples, 0.21%)</title><rect x="96.2668%" y="725" width="0.2066%" height="15" fill="rgb(220,143,18)" fg:x="108123" fg:w="232"/><text x="96.5168%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (226 samples, 0.20%)</title><rect x="96.2721%" y="709" width="0.2012%" height="15" fill="rgb(210,88,33)" fg:x="108129" fg:w="226"/><text x="96.5221%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (220 samples, 0.20%)</title><rect x="96.2775%" y="693" width="0.1959%" height="15" fill="rgb(219,87,51)" fg:x="108135" fg:w="220"/><text x="96.5275%" y="703.50"></text></g><g><title>__GI___pthread_mutex_trylock (220 samples, 0.20%)</title><rect x="96.2775%" y="677" width="0.1959%" height="15" fill="rgb(211,7,35)" fg:x="108135" fg:w="220"/><text x="96.5275%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (37 samples, 0.03%)</title><rect x="96.5348%" y="501" width="0.0329%" height="15" fill="rgb(232,77,2)" fg:x="108424" fg:w="37"/><text x="96.7848%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (37 samples, 0.03%)</title><rect x="96.5348%" y="485" width="0.0329%" height="15" fill="rgb(249,94,25)" fg:x="108424" fg:w="37"/><text x="96.7848%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (15 samples, 0.01%)</title><rect x="96.5544%" y="469" width="0.0134%" height="15" fill="rgb(215,112,2)" fg:x="108446" fg:w="15"/><text x="96.8044%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (39 samples, 0.03%)</title><rect x="96.5339%" y="549" width="0.0347%" height="15" fill="rgb(226,115,48)" fg:x="108423" fg:w="39"/><text x="96.7839%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (38 samples, 0.03%)</title><rect x="96.5348%" y="533" width="0.0338%" height="15" fill="rgb(249,196,10)" fg:x="108424" fg:w="38"/><text x="96.7848%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (38 samples, 0.03%)</title><rect x="96.5348%" y="517" width="0.0338%" height="15" fill="rgb(237,109,14)" fg:x="108424" fg:w="38"/><text x="96.7848%" y="527.50"></text></g><g><title>rust_dealloc (42 samples, 0.04%)</title><rect x="96.5339%" y="565" width="0.0374%" height="15" fill="rgb(217,103,53)" fg:x="108423" fg:w="42"/><text x="96.7839%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (49 samples, 0.04%)</title><rect x="96.5312%" y="661" width="0.0436%" height="15" fill="rgb(244,137,9)" fg:x="108420" fg:w="49"/><text x="96.7812%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (48 samples, 0.04%)</title><rect x="96.5321%" y="645" width="0.0427%" height="15" fill="rgb(227,201,3)" fg:x="108421" fg:w="48"/><text x="96.7821%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (47 samples, 0.04%)</title><rect x="96.5330%" y="629" width="0.0418%" height="15" fill="rgb(243,94,6)" fg:x="108422" fg:w="47"/><text x="96.7830%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (47 samples, 0.04%)</title><rect x="96.5330%" y="613" width="0.0418%" height="15" fill="rgb(235,118,5)" fg:x="108422" fg:w="47"/><text x="96.7830%" y="623.50"></text></g><g><title>__rg_dealloc (47 samples, 0.04%)</title><rect x="96.5330%" y="597" width="0.0418%" height="15" fill="rgb(247,10,30)" fg:x="108422" fg:w="47"/><text x="96.7830%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (46 samples, 0.04%)</title><rect x="96.5339%" y="581" width="0.0410%" height="15" fill="rgb(205,26,28)" fg:x="108423" fg:w="46"/><text x="96.7839%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.05%)</title><rect x="96.5303%" y="709" width="0.0481%" height="15" fill="rgb(206,99,35)" fg:x="108419" fg:w="54"/><text x="96.7803%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (53 samples, 0.05%)</title><rect x="96.5312%" y="693" width="0.0472%" height="15" fill="rgb(238,130,40)" fg:x="108420" fg:w="53"/><text x="96.7812%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (53 samples, 0.05%)</title><rect x="96.5312%" y="677" width="0.0472%" height="15" fill="rgb(224,126,31)" fg:x="108420" fg:w="53"/><text x="96.7812%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (12 samples, 0.01%)</title><rect x="96.5793%" y="661" width="0.0107%" height="15" fill="rgb(254,105,17)" fg:x="108474" fg:w="12"/><text x="96.8293%" y="671.50"></text></g><g><title>alloc::collections::btree::mem::replace (12 samples, 0.01%)</title><rect x="96.5793%" y="645" width="0.0107%" height="15" fill="rgb(216,87,36)" fg:x="108474" fg:w="12"/><text x="96.8293%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="96.5784%" y="709" width="0.0205%" height="15" fill="rgb(240,21,12)" fg:x="108473" fg:w="23"/><text x="96.8284%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="96.5784%" y="693" width="0.0205%" height="15" fill="rgb(245,192,34)" fg:x="108473" fg:w="23"/><text x="96.8284%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (22 samples, 0.02%)</title><rect x="96.5793%" y="677" width="0.0196%" height="15" fill="rgb(226,100,49)" fg:x="108474" fg:w="22"/><text x="96.8293%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (18 samples, 0.02%)</title><rect x="96.6274%" y="677" width="0.0160%" height="15" fill="rgb(245,188,27)" fg:x="108528" fg:w="18"/><text x="96.8774%" y="687.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (13 samples, 0.01%)</title><rect x="96.6318%" y="661" width="0.0116%" height="15" fill="rgb(212,170,8)" fg:x="108533" fg:w="13"/><text x="96.8818%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="96.6318%" y="645" width="0.0116%" height="15" fill="rgb(217,113,29)" fg:x="108533" fg:w="13"/><text x="96.8818%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="96.6327%" y="629" width="0.0107%" height="15" fill="rgb(237,30,3)" fg:x="108534" fg:w="12"/><text x="96.8827%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (19 samples, 0.02%)</title><rect x="96.6479%" y="645" width="0.0169%" height="15" fill="rgb(227,19,28)" fg:x="108551" fg:w="19"/><text x="96.8979%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (30 samples, 0.03%)</title><rect x="96.6443%" y="677" width="0.0267%" height="15" fill="rgb(239,172,45)" fg:x="108547" fg:w="30"/><text x="96.8943%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (30 samples, 0.03%)</title><rect x="96.6443%" y="661" width="0.0267%" height="15" fill="rgb(254,55,39)" fg:x="108547" fg:w="30"/><text x="96.8943%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (23 samples, 0.02%)</title><rect x="96.6852%" y="357" width="0.0205%" height="15" fill="rgb(249,208,12)" fg:x="108593" fg:w="23"/><text x="96.9352%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (23 samples, 0.02%)</title><rect x="96.6852%" y="341" width="0.0205%" height="15" fill="rgb(240,52,13)" fg:x="108593" fg:w="23"/><text x="96.9352%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (20 samples, 0.02%)</title><rect x="96.6879%" y="325" width="0.0178%" height="15" fill="rgb(252,149,13)" fg:x="108596" fg:w="20"/><text x="96.9379%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (30 samples, 0.03%)</title><rect x="96.6844%" y="373" width="0.0267%" height="15" fill="rgb(232,81,48)" fg:x="108592" fg:w="30"/><text x="96.9344%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (44 samples, 0.04%)</title><rect x="96.6790%" y="389" width="0.0392%" height="15" fill="rgb(222,144,2)" fg:x="108586" fg:w="44"/><text x="96.9290%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (31 samples, 0.03%)</title><rect x="96.7387%" y="373" width="0.0276%" height="15" fill="rgb(216,81,32)" fg:x="108653" fg:w="31"/><text x="96.9887%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (271 samples, 0.24%)</title><rect x="96.6781%" y="421" width="0.2413%" height="15" fill="rgb(244,78,51)" fg:x="108585" fg:w="271"/><text x="96.9281%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (271 samples, 0.24%)</title><rect x="96.6781%" y="405" width="0.2413%" height="15" fill="rgb(217,66,21)" fg:x="108585" fg:w="271"/><text x="96.9281%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (226 samples, 0.20%)</title><rect x="96.7182%" y="389" width="0.2012%" height="15" fill="rgb(247,101,42)" fg:x="108630" fg:w="226"/><text x="96.9682%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (172 samples, 0.15%)</title><rect x="96.7663%" y="373" width="0.1531%" height="15" fill="rgb(227,81,39)" fg:x="108684" fg:w="172"/><text x="97.0163%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (172 samples, 0.15%)</title><rect x="96.7663%" y="357" width="0.1531%" height="15" fill="rgb(220,223,44)" fg:x="108684" fg:w="172"/><text x="97.0163%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (172 samples, 0.15%)</title><rect x="96.7663%" y="341" width="0.1531%" height="15" fill="rgb(205,218,2)" fg:x="108684" fg:w="172"/><text x="97.0163%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (18 samples, 0.02%)</title><rect x="96.9274%" y="421" width="0.0160%" height="15" fill="rgb(212,207,28)" fg:x="108865" fg:w="18"/><text x="97.1774%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (18 samples, 0.02%)</title><rect x="96.9274%" y="405" width="0.0160%" height="15" fill="rgb(224,12,41)" fg:x="108865" fg:w="18"/><text x="97.1774%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (393 samples, 0.35%)</title><rect x="96.6719%" y="469" width="0.3499%" height="15" fill="rgb(216,118,12)" fg:x="108578" fg:w="393"/><text x="96.9219%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (393 samples, 0.35%)</title><rect x="96.6719%" y="453" width="0.3499%" height="15" fill="rgb(252,97,46)" fg:x="108578" fg:w="393"/><text x="96.9219%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (388 samples, 0.35%)</title><rect x="96.6763%" y="437" width="0.3455%" height="15" fill="rgb(244,206,19)" fg:x="108583" fg:w="388"/><text x="96.9263%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (88 samples, 0.08%)</title><rect x="96.9434%" y="421" width="0.0784%" height="15" fill="rgb(231,84,31)" fg:x="108883" fg:w="88"/><text x="97.1934%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (88 samples, 0.08%)</title><rect x="96.9434%" y="405" width="0.0784%" height="15" fill="rgb(244,133,0)" fg:x="108883" fg:w="88"/><text x="97.1934%" y="415.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (397 samples, 0.35%)</title><rect x="96.6710%" y="661" width="0.3535%" height="15" fill="rgb(223,15,50)" fg:x="108577" fg:w="397"/><text x="96.9210%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (397 samples, 0.35%)</title><rect x="96.6710%" y="645" width="0.3535%" height="15" fill="rgb(250,118,49)" fg:x="108577" fg:w="397"/><text x="96.9210%" y="655.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (397 samples, 0.35%)</title><rect x="96.6710%" y="629" width="0.3535%" height="15" fill="rgb(248,25,38)" fg:x="108577" fg:w="397"/><text x="96.9210%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (397 samples, 0.35%)</title><rect x="96.6710%" y="613" width="0.3535%" height="15" fill="rgb(215,70,14)" fg:x="108577" fg:w="397"/><text x="96.9210%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (397 samples, 0.35%)</title><rect x="96.6710%" y="597" width="0.3535%" height="15" fill="rgb(215,28,15)" fg:x="108577" fg:w="397"/><text x="96.9210%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (397 samples, 0.35%)</title><rect x="96.6710%" y="581" width="0.3535%" height="15" fill="rgb(243,6,28)" fg:x="108577" fg:w="397"/><text x="96.9210%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (397 samples, 0.35%)</title><rect x="96.6710%" y="565" width="0.3535%" height="15" fill="rgb(222,130,1)" fg:x="108577" fg:w="397"/><text x="96.9210%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (397 samples, 0.35%)</title><rect x="96.6710%" y="549" width="0.3535%" height="15" fill="rgb(236,166,44)" fg:x="108577" fg:w="397"/><text x="96.9210%" y="559.50"></text></g><g><title>alloc::alloc::alloc (397 samples, 0.35%)</title><rect x="96.6710%" y="533" width="0.3535%" height="15" fill="rgb(221,108,14)" fg:x="108577" fg:w="397"/><text x="96.9210%" y="543.50"></text></g><g><title>__rg_alloc (397 samples, 0.35%)</title><rect x="96.6710%" y="517" width="0.3535%" height="15" fill="rgb(252,3,45)" fg:x="108577" fg:w="397"/><text x="96.9210%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (397 samples, 0.35%)</title><rect x="96.6710%" y="501" width="0.3535%" height="15" fill="rgb(237,68,30)" fg:x="108577" fg:w="397"/><text x="96.9210%" y="511.50"></text></g><g><title>rust_alloc (397 samples, 0.35%)</title><rect x="96.6710%" y="485" width="0.3535%" height="15" fill="rgb(211,79,22)" fg:x="108577" fg:w="397"/><text x="96.9210%" y="495.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (398 samples, 0.35%)</title><rect x="96.6710%" y="677" width="0.3544%" height="15" fill="rgb(252,185,21)" fg:x="108577" fg:w="398"/><text x="96.9210%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (480 samples, 0.43%)</title><rect x="96.6042%" y="709" width="0.4274%" height="15" fill="rgb(225,189,26)" fg:x="108502" fg:w="480"/><text x="96.8542%" y="719.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (468 samples, 0.42%)</title><rect x="96.6149%" y="693" width="0.4167%" height="15" fill="rgb(241,30,40)" fg:x="108514" fg:w="468"/><text x="96.8649%" y="703.50"></text></g><g><title>concurrent_queue::full_fence (26 samples, 0.02%)</title><rect x="97.0530%" y="661" width="0.0231%" height="15" fill="rgb(235,215,44)" fg:x="109006" fg:w="26"/><text x="97.3030%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (26 samples, 0.02%)</title><rect x="97.0530%" y="645" width="0.0231%" height="15" fill="rgb(205,8,29)" fg:x="109006" fg:w="26"/><text x="97.3030%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (26 samples, 0.02%)</title><rect x="97.0530%" y="629" width="0.0231%" height="15" fill="rgb(241,137,42)" fg:x="109006" fg:w="26"/><text x="97.3030%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.02%)</title><rect x="97.0530%" y="613" width="0.0231%" height="15" fill="rgb(237,155,2)" fg:x="109006" fg:w="26"/><text x="97.3030%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (61 samples, 0.05%)</title><rect x="97.0405%" y="693" width="0.0543%" height="15" fill="rgb(245,29,42)" fg:x="108992" fg:w="61"/><text x="97.2905%" y="703.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (59 samples, 0.05%)</title><rect x="97.0423%" y="677" width="0.0525%" height="15" fill="rgb(234,101,35)" fg:x="108994" fg:w="59"/><text x="97.2923%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="97.0761%" y="661" width="0.0187%" height="15" fill="rgb(228,64,37)" fg:x="109032" fg:w="21"/><text x="97.3261%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="97.0761%" y="645" width="0.0187%" height="15" fill="rgb(217,214,36)" fg:x="109032" fg:w="21"/><text x="97.3261%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (75 samples, 0.07%)</title><rect x="97.0316%" y="709" width="0.0668%" height="15" fill="rgb(243,70,3)" fg:x="108982" fg:w="75"/><text x="97.2816%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (112 samples, 0.10%)</title><rect x="97.1019%" y="629" width="0.0997%" height="15" fill="rgb(253,158,52)" fg:x="109061" fg:w="112"/><text x="97.3519%" y="639.50"></text></g><g><title>core::mem::drop (117 samples, 0.10%)</title><rect x="97.0984%" y="709" width="0.1042%" height="15" fill="rgb(234,111,54)" fg:x="109057" fg:w="117"/><text x="97.3484%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (117 samples, 0.10%)</title><rect x="97.0984%" y="693" width="0.1042%" height="15" fill="rgb(217,70,32)" fg:x="109057" fg:w="117"/><text x="97.3484%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (117 samples, 0.10%)</title><rect x="97.0984%" y="677" width="0.1042%" height="15" fill="rgb(234,18,33)" fg:x="109057" fg:w="117"/><text x="97.3484%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (116 samples, 0.10%)</title><rect x="97.0993%" y="661" width="0.1033%" height="15" fill="rgb(234,12,49)" fg:x="109058" fg:w="116"/><text x="97.3493%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (113 samples, 0.10%)</title><rect x="97.1019%" y="645" width="0.1006%" height="15" fill="rgb(236,10,21)" fg:x="109061" fg:w="113"/><text x="97.3519%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (12 samples, 0.01%)</title><rect x="97.2239%" y="613" width="0.0107%" height="15" fill="rgb(248,182,45)" fg:x="109198" fg:w="12"/><text x="97.4739%" y="623.50"></text></g><g><title>core::cmp::PartialOrd::ge (12 samples, 0.01%)</title><rect x="97.2239%" y="597" width="0.0107%" height="15" fill="rgb(217,95,36)" fg:x="109198" fg:w="12"/><text x="97.4739%" y="607.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (12 samples, 0.01%)</title><rect x="97.2239%" y="581" width="0.0107%" height="15" fill="rgb(212,110,31)" fg:x="109198" fg:w="12"/><text x="97.4739%" y="591.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (12 samples, 0.01%)</title><rect x="97.2239%" y="565" width="0.0107%" height="15" fill="rgb(206,32,53)" fg:x="109198" fg:w="12"/><text x="97.4739%" y="575.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (12 samples, 0.01%)</title><rect x="97.2239%" y="549" width="0.0107%" height="15" fill="rgb(246,141,37)" fg:x="109198" fg:w="12"/><text x="97.4739%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (33 samples, 0.03%)</title><rect x="97.2088%" y="709" width="0.0294%" height="15" fill="rgb(219,16,7)" fg:x="109181" fg:w="33"/><text x="97.4588%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::process_timers::{{closure}} (30 samples, 0.03%)</title><rect x="97.2114%" y="693" width="0.0267%" height="15" fill="rgb(230,205,45)" fg:x="109184" fg:w="30"/><text x="97.4614%" y="703.50"></text></g><g><title>std::time::Instant::saturating_duration_since (29 samples, 0.03%)</title><rect x="97.2123%" y="677" width="0.0258%" height="15" fill="rgb(231,43,49)" fg:x="109185" fg:w="29"/><text x="97.4623%" y="687.50"></text></g><g><title>std::time::Instant::checked_duration_since (29 samples, 0.03%)</title><rect x="97.2123%" y="661" width="0.0258%" height="15" fill="rgb(212,106,34)" fg:x="109185" fg:w="29"/><text x="97.4623%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (29 samples, 0.03%)</title><rect x="97.2123%" y="645" width="0.0258%" height="15" fill="rgb(206,83,17)" fg:x="109185" fg:w="29"/><text x="97.4623%" y="655.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (24 samples, 0.02%)</title><rect x="97.2168%" y="629" width="0.0214%" height="15" fill="rgb(244,154,49)" fg:x="109190" fg:w="24"/><text x="97.4668%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (53 samples, 0.05%)</title><rect x="97.2417%" y="709" width="0.0472%" height="15" fill="rgb(244,149,49)" fg:x="109218" fg:w="53"/><text x="97.4917%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (52 samples, 0.05%)</title><rect x="97.2426%" y="693" width="0.0463%" height="15" fill="rgb(227,134,18)" fg:x="109219" fg:w="52"/><text x="97.4926%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (52 samples, 0.05%)</title><rect x="97.2426%" y="677" width="0.0463%" height="15" fill="rgb(237,116,36)" fg:x="109219" fg:w="52"/><text x="97.4926%" y="687.50"></text></g><g><title>___pthread_mutex_lock (52 samples, 0.05%)</title><rect x="97.2426%" y="661" width="0.0463%" height="15" fill="rgb(205,129,40)" fg:x="109219" fg:w="52"/><text x="97.4926%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (965 samples, 0.86%)</title><rect x="96.5107%" y="725" width="0.8592%" height="15" fill="rgb(236,178,4)" fg:x="108397" fg:w="965"/><text x="96.7607%" y="735.50"></text></g><g><title>std::time::Instant::now (91 samples, 0.08%)</title><rect x="97.2889%" y="709" width="0.0810%" height="15" fill="rgb(251,76,53)" fg:x="109271" fg:w="91"/><text x="97.5389%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (91 samples, 0.08%)</title><rect x="97.2889%" y="693" width="0.0810%" height="15" fill="rgb(242,92,40)" fg:x="109271" fg:w="91"/><text x="97.5389%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::now (91 samples, 0.08%)</title><rect x="97.2889%" y="677" width="0.0810%" height="15" fill="rgb(209,45,30)" fg:x="109271" fg:w="91"/><text x="97.5389%" y="687.50"></text></g><g><title>__clock_gettime_2 (89 samples, 0.08%)</title><rect x="97.2907%" y="661" width="0.0792%" height="15" fill="rgb(218,157,36)" fg:x="109273" fg:w="89"/><text x="97.5407%" y="671.50"></text></g><g><title>__vdso_clock_gettime (77 samples, 0.07%)</title><rect x="97.3014%" y="645" width="0.0686%" height="15" fill="rgb(222,186,16)" fg:x="109285" fg:w="77"/><text x="97.5514%" y="655.50"></text></g><g><title>[[vdso]] (51 samples, 0.05%)</title><rect x="97.3245%" y="629" width="0.0454%" height="15" fill="rgb(254,72,35)" fg:x="109311" fg:w="51"/><text x="97.5745%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (29 samples, 0.03%)</title><rect x="97.3744%" y="725" width="0.0258%" height="15" fill="rgb(224,25,35)" fg:x="109367" fg:w="29"/><text x="97.6244%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (29 samples, 0.03%)</title><rect x="97.3744%" y="709" width="0.0258%" height="15" fill="rgb(206,135,52)" fg:x="109367" fg:w="29"/><text x="97.6244%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (76 samples, 0.07%)</title><rect x="97.4189%" y="645" width="0.0677%" height="15" fill="rgb(229,174,47)" fg:x="109417" fg:w="76"/><text x="97.6689%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (81 samples, 0.07%)</title><rect x="97.4180%" y="709" width="0.0721%" height="15" fill="rgb(242,184,21)" fg:x="109416" fg:w="81"/><text x="97.6680%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.07%)</title><rect x="97.4180%" y="693" width="0.0721%" height="15" fill="rgb(213,22,45)" fg:x="109416" fg:w="81"/><text x="97.6680%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (81 samples, 0.07%)</title><rect x="97.4180%" y="677" width="0.0721%" height="15" fill="rgb(237,81,54)" fg:x="109416" fg:w="81"/><text x="97.6680%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (80 samples, 0.07%)</title><rect x="97.4189%" y="661" width="0.0712%" height="15" fill="rgb(248,177,18)" fg:x="109417" fg:w="80"/><text x="97.6689%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (85 samples, 0.08%)</title><rect x="97.4901%" y="709" width="0.0757%" height="15" fill="rgb(254,31,16)" fg:x="109497" fg:w="85"/><text x="97.7401%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (85 samples, 0.08%)</title><rect x="97.4901%" y="693" width="0.0757%" height="15" fill="rgb(235,20,31)" fg:x="109497" fg:w="85"/><text x="97.7401%" y="703.50"></text></g><g><title>__libc_read (63 samples, 0.06%)</title><rect x="97.6593%" y="693" width="0.0561%" height="15" fill="rgb(240,56,43)" fg:x="109687" fg:w="63"/><text x="97.9093%" y="703.50"></text></g><g><title>__GI___pthread_disable_asynccancel (21 samples, 0.02%)</title><rect x="97.7830%" y="677" width="0.0187%" height="15" fill="rgb(237,197,51)" fg:x="109826" fg:w="21"/><text x="98.0330%" y="687.50"></text></g><g><title>epoll_wait (106 samples, 0.09%)</title><rect x="97.7154%" y="693" width="0.0944%" height="15" fill="rgb(241,162,44)" fg:x="109750" fg:w="106"/><text x="97.9654%" y="703.50"></text></g><g><title>__GI_epoll_ctl (59 samples, 0.05%)</title><rect x="97.8240%" y="661" width="0.0525%" height="15" fill="rgb(224,23,20)" fg:x="109872" fg:w="59"/><text x="98.0740%" y="671.50"></text></g><g><title>polling::epoll::Poller::modify (84 samples, 0.07%)</title><rect x="97.8106%" y="693" width="0.0748%" height="15" fill="rgb(250,109,34)" fg:x="109857" fg:w="84"/><text x="98.0606%" y="703.50"></text></g><g><title>polling::epoll::Poller::ctl (72 samples, 0.06%)</title><rect x="97.8213%" y="677" width="0.0641%" height="15" fill="rgb(214,175,50)" fg:x="109869" fg:w="72"/><text x="98.0713%" y="687.50"></text></g><g><title>polling::epoll::Poller::wait (381 samples, 0.34%)</title><rect x="97.5711%" y="709" width="0.3392%" height="15" fill="rgb(213,182,5)" fg:x="109588" fg:w="381"/><text x="97.8211%" y="719.50"></text></g><g><title>syscall (21 samples, 0.02%)</title><rect x="97.8917%" y="693" width="0.0187%" height="15" fill="rgb(209,199,19)" fg:x="109948" fg:w="21"/><text x="98.1417%" y="703.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,666 samples, 1.48%)</title><rect x="96.4733%" y="741" width="1.4833%" height="15" fill="rgb(236,224,42)" fg:x="108355" fg:w="1666"/><text x="96.7233%" y="751.50"></text></g><g><title>polling::Poller::wait (625 samples, 0.56%)</title><rect x="97.4002%" y="725" width="0.5565%" height="15" fill="rgb(246,226,29)" fg:x="109396" fg:w="625"/><text x="97.6502%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (52 samples, 0.05%)</title><rect x="97.9104%" y="709" width="0.0463%" height="15" fill="rgb(227,223,11)" fg:x="109969" fg:w="52"/><text x="98.1604%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (48 samples, 0.04%)</title><rect x="97.9139%" y="693" width="0.0427%" height="15" fill="rgb(219,7,51)" fg:x="109973" fg:w="48"/><text x="98.1639%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (47 samples, 0.04%)</title><rect x="97.9148%" y="677" width="0.0418%" height="15" fill="rgb(245,167,10)" fg:x="109974" fg:w="47"/><text x="98.1648%" y="687.50"></text></g><g><title>__GI___pthread_mutex_trylock (47 samples, 0.04%)</title><rect x="97.9148%" y="661" width="0.0418%" height="15" fill="rgb(237,224,16)" fg:x="109974" fg:w="47"/><text x="98.1648%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (28 samples, 0.02%)</title><rect x="97.9567%" y="693" width="0.0249%" height="15" fill="rgb(226,132,13)" fg:x="110021" fg:w="28"/><text x="98.2067%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_store (28 samples, 0.02%)</title><rect x="97.9567%" y="677" width="0.0249%" height="15" fill="rgb(214,140,3)" fg:x="110021" fg:w="28"/><text x="98.2067%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (32 samples, 0.03%)</title><rect x="97.9567%" y="741" width="0.0285%" height="15" fill="rgb(221,177,4)" fg:x="110021" fg:w="32"/><text x="98.2067%" y="751.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="97.9567%" y="725" width="0.0285%" height="15" fill="rgb(238,139,3)" fg:x="110021" fg:w="32"/><text x="98.2067%" y="735.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (32 samples, 0.03%)</title><rect x="97.9567%" y="709" width="0.0285%" height="15" fill="rgb(216,17,39)" fg:x="110021" fg:w="32"/><text x="98.2067%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (28 samples, 0.02%)</title><rect x="97.9887%" y="661" width="0.0249%" height="15" fill="rgb(238,120,9)" fg:x="110057" fg:w="28"/><text x="98.2387%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::reactor::ReactorLock&gt; (34 samples, 0.03%)</title><rect x="97.9851%" y="741" width="0.0303%" height="15" fill="rgb(244,92,53)" fg:x="110053" fg:w="34"/><text x="98.2351%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;polling::Event&gt;&gt;&gt; (34 samples, 0.03%)</title><rect x="97.9851%" y="725" width="0.0303%" height="15" fill="rgb(224,148,33)" fg:x="110053" fg:w="34"/><text x="98.2351%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="97.9851%" y="709" width="0.0303%" height="15" fill="rgb(243,6,36)" fg:x="110053" fg:w="34"/><text x="98.2351%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (31 samples, 0.03%)</title><rect x="97.9878%" y="693" width="0.0276%" height="15" fill="rgb(230,102,11)" fg:x="110056" fg:w="31"/><text x="98.2378%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (30 samples, 0.03%)</title><rect x="97.9887%" y="677" width="0.0267%" height="15" fill="rgb(234,148,36)" fg:x="110057" fg:w="30"/><text x="98.2387%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (67 samples, 0.06%)</title><rect x="98.0412%" y="709" width="0.0597%" height="15" fill="rgb(251,153,25)" fg:x="110116" fg:w="67"/><text x="98.2912%" y="719.50"></text></g><g><title>__GI___lll_lock_wake (40 samples, 0.04%)</title><rect x="98.0653%" y="693" width="0.0356%" height="15" fill="rgb(215,129,8)" fg:x="110143" fg:w="40"/><text x="98.3153%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (96 samples, 0.09%)</title><rect x="98.1045%" y="709" width="0.0855%" height="15" fill="rgb(224,128,35)" fg:x="110187" fg:w="96"/><text x="98.3545%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (96 samples, 0.09%)</title><rect x="98.1045%" y="693" width="0.0855%" height="15" fill="rgb(237,56,52)" fg:x="110187" fg:w="96"/><text x="98.3545%" y="703.50"></text></g><g><title>std::sync::poison::Flag::get (24 samples, 0.02%)</title><rect x="98.1899%" y="693" width="0.0214%" height="15" fill="rgb(234,213,19)" fg:x="110283" fg:w="24"/><text x="98.4399%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (24 samples, 0.02%)</title><rect x="98.1899%" y="677" width="0.0214%" height="15" fill="rgb(252,82,23)" fg:x="110283" fg:w="24"/><text x="98.4399%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (24 samples, 0.02%)</title><rect x="98.1899%" y="661" width="0.0214%" height="15" fill="rgb(254,201,21)" fg:x="110283" fg:w="24"/><text x="98.4399%" y="671.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (19 samples, 0.02%)</title><rect x="98.3146%" y="645" width="0.0169%" height="15" fill="rgb(250,186,11)" fg:x="110423" fg:w="19"/><text x="98.5646%" y="655.50"></text></g><g><title>__condvar_confirm_wakeup (28 samples, 0.02%)</title><rect x="98.3315%" y="645" width="0.0249%" height="15" fill="rgb(211,174,5)" fg:x="110442" fg:w="28"/><text x="98.5815%" y="655.50"></text></g><g><title>__condvar_dec_grefs (129 samples, 0.11%)</title><rect x="98.3564%" y="645" width="0.1149%" height="15" fill="rgb(214,121,10)" fg:x="110470" fg:w="129"/><text x="98.6064%" y="655.50"></text></g><g><title>__futex_abstimed_wait_common (187 samples, 0.17%)</title><rect x="98.4713%" y="645" width="0.1665%" height="15" fill="rgb(241,66,2)" fg:x="110599" fg:w="187"/><text x="98.7213%" y="655.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (514 samples, 0.46%)</title><rect x="98.2113%" y="677" width="0.4576%" height="15" fill="rgb(220,167,19)" fg:x="110307" fg:w="514"/><text x="98.4613%" y="687.50"></text></g><g><title>__GI___pthread_cond_wait (514 samples, 0.46%)</title><rect x="98.2113%" y="661" width="0.4576%" height="15" fill="rgb(231,54,50)" fg:x="110307" fg:w="514"/><text x="98.4613%" y="671.50"></text></g><g><title>__pthread_mutex_cond_lock (27 samples, 0.02%)</title><rect x="98.6449%" y="645" width="0.0240%" height="15" fill="rgb(239,217,53)" fg:x="110794" fg:w="27"/><text x="98.8949%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::wait (558 samples, 0.50%)</title><rect x="98.1899%" y="709" width="0.4968%" height="15" fill="rgb(248,8,0)" fg:x="110283" fg:w="558"/><text x="98.4399%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (534 samples, 0.48%)</title><rect x="98.2113%" y="693" width="0.4754%" height="15" fill="rgb(229,118,37)" fg:x="110307" fg:w="534"/><text x="98.4613%" y="703.50"></text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (20 samples, 0.02%)</title><rect x="98.6689%" y="677" width="0.0178%" height="15" fill="rgb(253,223,43)" fg:x="110821" fg:w="20"/><text x="98.9189%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (18 samples, 0.02%)</title><rect x="98.6707%" y="661" width="0.0160%" height="15" fill="rgb(211,77,36)" fg:x="110823" fg:w="18"/><text x="98.9207%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="98.6707%" y="645" width="0.0160%" height="15" fill="rgb(219,3,53)" fg:x="110823" fg:w="18"/><text x="98.9207%" y="655.50"></text></g><g><title>parking::Parker::park (782 samples, 0.70%)</title><rect x="98.0279%" y="741" width="0.6962%" height="15" fill="rgb(244,45,42)" fg:x="110101" fg:w="782"/><text x="98.2779%" y="751.50"></text></g><g><title>parking::Inner::park (776 samples, 0.69%)</title><rect x="98.0332%" y="725" width="0.6909%" height="15" fill="rgb(225,95,27)" fg:x="110107" fg:w="776"/><text x="98.2832%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (42 samples, 0.04%)</title><rect x="98.6867%" y="709" width="0.0374%" height="15" fill="rgb(207,74,8)" fg:x="110841" fg:w="42"/><text x="98.9367%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (42 samples, 0.04%)</title><rect x="98.6867%" y="693" width="0.0374%" height="15" fill="rgb(243,63,36)" fg:x="110841" fg:w="42"/><text x="98.9367%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (41 samples, 0.04%)</title><rect x="98.6876%" y="677" width="0.0365%" height="15" fill="rgb(211,180,12)" fg:x="110842" fg:w="41"/><text x="98.9376%" y="687.50"></text></g><g><title>___pthread_mutex_lock (41 samples, 0.04%)</title><rect x="98.6876%" y="661" width="0.0365%" height="15" fill="rgb(254,166,49)" fg:x="110842" fg:w="41"/><text x="98.9376%" y="671.50"></text></g><g><title>parking::Parker::park_timeout (220 samples, 0.20%)</title><rect x="98.7241%" y="741" width="0.1959%" height="15" fill="rgb(205,19,0)" fg:x="110883" fg:w="220"/><text x="98.9741%" y="751.50"></text></g><g><title>parking::Inner::park (205 samples, 0.18%)</title><rect x="98.7375%" y="725" width="0.1825%" height="15" fill="rgb(224,172,32)" fg:x="110898" fg:w="205"/><text x="98.9875%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (190 samples, 0.17%)</title><rect x="98.7508%" y="709" width="0.1692%" height="15" fill="rgb(254,136,30)" fg:x="110913" fg:w="190"/><text x="99.0008%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (190 samples, 0.17%)</title><rect x="98.7508%" y="693" width="0.1692%" height="15" fill="rgb(246,19,35)" fg:x="110913" fg:w="190"/><text x="99.0008%" y="703.50"></text></g><g><title>parking::pair (24 samples, 0.02%)</title><rect x="98.9200%" y="741" width="0.0214%" height="15" fill="rgb(219,24,36)" fg:x="111103" fg:w="24"/><text x="99.1700%" y="751.50"></text></g><g><title>parking::Parker::new (24 samples, 0.02%)</title><rect x="98.9200%" y="725" width="0.0214%" height="15" fill="rgb(251,55,1)" fg:x="111103" fg:w="24"/><text x="99.1700%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="98.9218%" y="709" width="0.0196%" height="15" fill="rgb(218,117,39)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::new (22 samples, 0.02%)</title><rect x="98.9218%" y="693" width="0.0196%" height="15" fill="rgb(248,169,11)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (22 samples, 0.02%)</title><rect x="98.9218%" y="677" width="0.0196%" height="15" fill="rgb(244,40,44)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="98.9218%" y="661" width="0.0196%" height="15" fill="rgb(234,62,37)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (22 samples, 0.02%)</title><rect x="98.9218%" y="645" width="0.0196%" height="15" fill="rgb(207,117,42)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="98.9218%" y="629" width="0.0196%" height="15" fill="rgb(213,43,2)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.02%)</title><rect x="98.9218%" y="613" width="0.0196%" height="15" fill="rgb(244,202,51)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="623.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.02%)</title><rect x="98.9218%" y="597" width="0.0196%" height="15" fill="rgb(253,174,46)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="607.50"></text></g><g><title>__rg_alloc (22 samples, 0.02%)</title><rect x="98.9218%" y="581" width="0.0196%" height="15" fill="rgb(251,23,1)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (22 samples, 0.02%)</title><rect x="98.9218%" y="565" width="0.0196%" height="15" fill="rgb(253,26,1)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="575.50"></text></g><g><title>rust_alloc (22 samples, 0.02%)</title><rect x="98.9218%" y="549" width="0.0196%" height="15" fill="rgb(216,89,31)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="98.9218%" y="533" width="0.0196%" height="15" fill="rgb(209,109,5)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="98.9218%" y="517" width="0.0196%" height="15" fill="rgb(229,63,13)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="98.9218%" y="501" width="0.0196%" height="15" fill="rgb(238,137,54)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="98.9218%" y="485" width="0.0196%" height="15" fill="rgb(228,1,9)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="98.9218%" y="469" width="0.0196%" height="15" fill="rgb(249,120,48)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="98.9218%" y="453" width="0.0196%" height="15" fill="rgb(209,72,36)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="98.9218%" y="437" width="0.0196%" height="15" fill="rgb(247,98,49)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="447.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (22 samples, 0.02%)</title><rect x="98.9218%" y="421" width="0.0196%" height="15" fill="rgb(233,75,36)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (22 samples, 0.02%)</title><rect x="98.9218%" y="405" width="0.0196%" height="15" fill="rgb(225,14,24)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="415.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (22 samples, 0.02%)</title><rect x="98.9218%" y="389" width="0.0196%" height="15" fill="rgb(237,193,20)" fg:x="111105" fg:w="22"/><text x="99.1718%" y="399.50"></text></g><g><title>std::panic::catch_unwind (12,634 samples, 11.25%)</title><rect x="87.7569%" y="1029" width="11.2486%" height="15" fill="rgb(239,122,19)" fg:x="98565" fg:w="12634"/><text x="88.0069%" y="1039.50">std::panic::catch..</text></g><g><title>std::panicking::try (12,634 samples, 11.25%)</title><rect x="87.7569%" y="1013" width="11.2486%" height="15" fill="rgb(231,220,10)" fg:x="98565" fg:w="12634"/><text x="88.0069%" y="1023.50">std::panicking::t..</text></g><g><title>std::panicking::try::do_call (12,634 samples, 11.25%)</title><rect x="87.7569%" y="997" width="11.2486%" height="15" fill="rgb(220,66,15)" fg:x="98565" fg:w="12634"/><text x="88.0069%" y="1007.50">std::panicking::t..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12,634 samples, 11.25%)</title><rect x="87.7569%" y="981" width="11.2486%" height="15" fill="rgb(215,171,52)" fg:x="98565" fg:w="12634"/><text x="88.0069%" y="991.50">&lt;core::panic::unw..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (12,634 samples, 11.25%)</title><rect x="87.7569%" y="965" width="11.2486%" height="15" fill="rgb(241,169,50)" fg:x="98565" fg:w="12634"/><text x="88.0069%" y="975.50">std::thread::Buil..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12,634 samples, 11.25%)</title><rect x="87.7569%" y="949" width="11.2486%" height="15" fill="rgb(236,189,0)" fg:x="98565" fg:w="12634"/><text x="88.0069%" y="959.50">std::sys_common::..</text></g><g><title>core::ops::function::FnOnce::call_once (12,634 samples, 11.25%)</title><rect x="87.7569%" y="933" width="11.2486%" height="15" fill="rgb(217,147,20)" fg:x="98565" fg:w="12634"/><text x="88.0069%" y="943.50">core::ops::functi..</text></g><g><title>async_global_executor::threading::thread_main_loop (12,634 samples, 11.25%)</title><rect x="87.7569%" y="917" width="11.2486%" height="15" fill="rgb(206,188,39)" fg:x="98565" fg:w="12634"/><text x="88.0069%" y="927.50">async_global_exec..</text></g><g><title>std::panic::catch_unwind (12,620 samples, 11.24%)</title><rect x="87.7693%" y="901" width="11.2362%" height="15" fill="rgb(227,118,25)" fg:x="98579" fg:w="12620"/><text x="88.0193%" y="911.50">std::panic::catch..</text></g><g><title>std::panicking::try (12,620 samples, 11.24%)</title><rect x="87.7693%" y="885" width="11.2362%" height="15" fill="rgb(248,171,40)" fg:x="98579" fg:w="12620"/><text x="88.0193%" y="895.50">std::panicking::t..</text></g><g><title>std::panicking::try::do_call (12,620 samples, 11.24%)</title><rect x="87.7693%" y="869" width="11.2362%" height="15" fill="rgb(251,90,54)" fg:x="98579" fg:w="12620"/><text x="88.0193%" y="879.50">std::panicking::t..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (12,620 samples, 11.24%)</title><rect x="87.7693%" y="853" width="11.2362%" height="15" fill="rgb(234,11,46)" fg:x="98579" fg:w="12620"/><text x="88.0193%" y="863.50">async_global_exec..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12,620 samples, 11.24%)</title><rect x="87.7693%" y="837" width="11.2362%" height="15" fill="rgb(229,134,13)" fg:x="98579" fg:w="12620"/><text x="88.0193%" y="847.50">std::thread::loca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12,620 samples, 11.24%)</title><rect x="87.7693%" y="821" width="11.2362%" height="15" fill="rgb(223,129,3)" fg:x="98579" fg:w="12620"/><text x="88.0193%" y="831.50">std::thread::loca..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (12,620 samples, 11.24%)</title><rect x="87.7693%" y="805" width="11.2362%" height="15" fill="rgb(221,124,13)" fg:x="98579" fg:w="12620"/><text x="88.0193%" y="815.50">async_global_exec..</text></g><g><title>async_global_executor::reactor::block_on (12,620 samples, 11.24%)</title><rect x="87.7693%" y="789" width="11.2362%" height="15" fill="rgb(234,3,18)" fg:x="98579" fg:w="12620"/><text x="88.0193%" y="799.50">async_global_exec..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (12,620 samples, 11.24%)</title><rect x="87.7693%" y="773" width="11.2362%" height="15" fill="rgb(249,199,20)" fg:x="98579" fg:w="12620"/><text x="88.0193%" y="783.50">async_global_exec..</text></g><g><title>async_io::driver::block_on (12,620 samples, 11.24%)</title><rect x="87.7693%" y="757" width="11.2362%" height="15" fill="rgb(224,134,6)" fg:x="98579" fg:w="12620"/><text x="88.0193%" y="767.50">async_io::driver:..</text></g><g><title>std::time::Instant::now (65 samples, 0.06%)</title><rect x="98.9476%" y="741" width="0.0579%" height="15" fill="rgb(254,83,26)" fg:x="111134" fg:w="65"/><text x="99.1976%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (65 samples, 0.06%)</title><rect x="98.9476%" y="725" width="0.0579%" height="15" fill="rgb(217,88,9)" fg:x="111134" fg:w="65"/><text x="99.1976%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (65 samples, 0.06%)</title><rect x="98.9476%" y="709" width="0.0579%" height="15" fill="rgb(225,73,2)" fg:x="111134" fg:w="65"/><text x="99.1976%" y="719.50"></text></g><g><title>__clock_gettime_2 (56 samples, 0.05%)</title><rect x="98.9556%" y="693" width="0.0499%" height="15" fill="rgb(226,44,39)" fg:x="111143" fg:w="56"/><text x="99.2056%" y="703.50"></text></g><g><title>__vdso_clock_gettime (46 samples, 0.04%)</title><rect x="98.9645%" y="677" width="0.0410%" height="15" fill="rgb(228,53,17)" fg:x="111153" fg:w="46"/><text x="99.2145%" y="687.50"></text></g><g><title>[[vdso]] (26 samples, 0.02%)</title><rect x="98.9823%" y="661" width="0.0231%" height="15" fill="rgb(212,27,27)" fg:x="111173" fg:w="26"/><text x="99.2323%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12,640 samples, 11.25%)</title><rect x="87.7569%" y="1093" width="11.2540%" height="15" fill="rgb(241,50,6)" fg:x="98565" fg:w="12640"/><text x="88.0069%" y="1103.50">&lt;alloc::boxed::Bo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12,640 samples, 11.25%)</title><rect x="87.7569%" y="1077" width="11.2540%" height="15" fill="rgb(225,28,51)" fg:x="98565" fg:w="12640"/><text x="88.0069%" y="1087.50">&lt;alloc::boxed::Bo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (12,640 samples, 11.25%)</title><rect x="87.7569%" y="1061" width="11.2540%" height="15" fill="rgb(215,33,16)" fg:x="98565" fg:w="12640"/><text x="88.0069%" y="1071.50">core::ops::functi..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (12,640 samples, 11.25%)</title><rect x="87.7569%" y="1045" width="11.2540%" height="15" fill="rgb(243,40,39)" fg:x="98565" fg:w="12640"/><text x="88.0069%" y="1055.50">std::thread::Buil..</text></g><g><title>__GI___clone (12,655 samples, 11.27%)</title><rect x="87.7480%" y="1141" width="11.2673%" height="15" fill="rgb(225,11,42)" fg:x="98555" fg:w="12655"/><text x="87.9980%" y="1151.50">__GI___clone</text></g><g><title>start_thread (12,645 samples, 11.26%)</title><rect x="87.7569%" y="1125" width="11.2584%" height="15" fill="rgb(241,220,38)" fg:x="98565" fg:w="12645"/><text x="88.0069%" y="1135.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12,645 samples, 11.26%)</title><rect x="87.7569%" y="1109" width="11.2584%" height="15" fill="rgb(244,52,35)" fg:x="98565" fg:w="12645"/><text x="88.0069%" y="1119.50">std::sys::unix::t..</text></g><g><title>__clock_gettime_2 (28 samples, 0.02%)</title><rect x="99.0260%" y="1141" width="0.0249%" height="15" fill="rgb(246,42,46)" fg:x="111222" fg:w="28"/><text x="99.2760%" y="1151.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (79 samples, 0.07%)</title><rect x="99.0571%" y="1141" width="0.0703%" height="15" fill="rgb(205,184,13)" fg:x="111257" fg:w="79"/><text x="99.3071%" y="1151.50"></text></g><g><title>anon.2c54eba95604dc3488dac0cb5dba57a8.321.llvm.2726948605124290658 (16 samples, 0.01%)</title><rect x="99.1417%" y="1141" width="0.0142%" height="15" fill="rgb(209,48,36)" fg:x="111352" fg:w="16"/><text x="99.3917%" y="1151.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (25 samples, 0.02%)</title><rect x="99.1755%" y="1125" width="0.0223%" height="15" fill="rgb(244,34,51)" fg:x="111390" fg:w="25"/><text x="99.4255%" y="1135.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (30 samples, 0.03%)</title><rect x="99.1978%" y="1125" width="0.0267%" height="15" fill="rgb(221,107,33)" fg:x="111415" fg:w="30"/><text x="99.4478%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (32 samples, 0.03%)</title><rect x="99.2245%" y="1125" width="0.0285%" height="15" fill="rgb(224,203,12)" fg:x="111445" fg:w="32"/><text x="99.4745%" y="1135.50"></text></g><g><title>anon.3e072c7a2ec79f78eaac3a2352ad9487.30.llvm.1086621274924467697 (99 samples, 0.09%)</title><rect x="99.1755%" y="1141" width="0.0881%" height="15" fill="rgb(230,215,18)" fg:x="111390" fg:w="99"/><text x="99.4255%" y="1151.50"></text></g><g><title>anon.539d6cb4a673063530b14aa67882ff77.332.llvm.3879234033621866973 (17 samples, 0.02%)</title><rect x="99.2637%" y="1141" width="0.0151%" height="15" fill="rgb(206,185,35)" fg:x="111489" fg:w="17"/><text x="99.5137%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (13 samples, 0.01%)</title><rect x="99.2877%" y="1125" width="0.0116%" height="15" fill="rgb(228,140,34)" fg:x="111516" fg:w="13"/><text x="99.5377%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (14 samples, 0.01%)</title><rect x="99.3011%" y="1125" width="0.0125%" height="15" fill="rgb(208,93,13)" fg:x="111531" fg:w="14"/><text x="99.5511%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (27 samples, 0.02%)</title><rect x="99.3233%" y="1125" width="0.0240%" height="15" fill="rgb(221,193,39)" fg:x="111556" fg:w="27"/><text x="99.5733%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="99.3474%" y="1125" width="0.0116%" height="15" fill="rgb(241,132,34)" fg:x="111583" fg:w="13"/><text x="99.5974%" y="1135.50"></text></g><g><title>anon.8926769c9851f61b338eb8ee10f4c056.195.llvm.14860018984401706583 (96 samples, 0.09%)</title><rect x="99.2877%" y="1141" width="0.0855%" height="15" fill="rgb(221,141,10)" fg:x="111516" fg:w="96"/><text x="99.5377%" y="1151.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (16 samples, 0.01%)</title><rect x="99.3590%" y="1125" width="0.0142%" height="15" fill="rgb(226,90,31)" fg:x="111596" fg:w="16"/><text x="99.6090%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (22 samples, 0.02%)</title><rect x="99.3981%" y="1125" width="0.0196%" height="15" fill="rgb(243,75,5)" fg:x="111640" fg:w="22"/><text x="99.6481%" y="1135.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="99.4204%" y="1125" width="0.0107%" height="15" fill="rgb(227,156,21)" fg:x="111665" fg:w="12"/><text x="99.6704%" y="1135.50"></text></g><g><title>anon.cebc6f25288519bfc65e3e3b8753cd81.2286.llvm.12951369230497946003 (53 samples, 0.05%)</title><rect x="99.3848%" y="1141" width="0.0472%" height="15" fill="rgb(250,195,8)" fg:x="111625" fg:w="53"/><text x="99.6348%" y="1151.50"></text></g><g><title>anon.cebc6f25288519bfc65e3e3b8753cd81.2288.llvm.12951369230497946003 (21 samples, 0.02%)</title><rect x="99.4320%" y="1141" width="0.0187%" height="15" fill="rgb(220,134,5)" fg:x="111678" fg:w="21"/><text x="99.6820%" y="1151.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (16 samples, 0.01%)</title><rect x="99.4364%" y="1125" width="0.0142%" height="15" fill="rgb(246,106,34)" fg:x="111683" fg:w="16"/><text x="99.6864%" y="1135.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (35 samples, 0.03%)</title><rect x="99.4676%" y="1141" width="0.0312%" height="15" fill="rgb(205,1,4)" fg:x="111718" fg:w="35"/><text x="99.7176%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="99.5112%" y="1141" width="0.0187%" height="15" fill="rgb(224,151,29)" fg:x="111767" fg:w="21"/><text x="99.7612%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (21 samples, 0.02%)</title><rect x="99.5112%" y="1125" width="0.0187%" height="15" fill="rgb(251,196,0)" fg:x="111767" fg:w="21"/><text x="99.7612%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (16 samples, 0.01%)</title><rect x="99.5335%" y="1093" width="0.0142%" height="15" fill="rgb(212,127,0)" fg:x="111792" fg:w="16"/><text x="99.7835%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (16 samples, 0.01%)</title><rect x="99.5335%" y="1077" width="0.0142%" height="15" fill="rgb(236,71,53)" fg:x="111792" fg:w="16"/><text x="99.7835%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (16 samples, 0.01%)</title><rect x="99.5335%" y="1061" width="0.0142%" height="15" fill="rgb(227,99,0)" fg:x="111792" fg:w="16"/><text x="99.7835%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (32 samples, 0.03%)</title><rect x="99.5335%" y="1125" width="0.0285%" height="15" fill="rgb(239,89,21)" fg:x="111792" fg:w="32"/><text x="99.7835%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (32 samples, 0.03%)</title><rect x="99.5335%" y="1109" width="0.0285%" height="15" fill="rgb(243,122,19)" fg:x="111792" fg:w="32"/><text x="99.7835%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (16 samples, 0.01%)</title><rect x="99.5477%" y="1093" width="0.0142%" height="15" fill="rgb(229,192,45)" fg:x="111808" fg:w="16"/><text x="99.7977%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (16 samples, 0.01%)</title><rect x="99.5477%" y="1077" width="0.0142%" height="15" fill="rgb(235,165,35)" fg:x="111808" fg:w="16"/><text x="99.7977%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (25 samples, 0.02%)</title><rect x="99.5620%" y="1125" width="0.0223%" height="15" fill="rgb(253,202,0)" fg:x="111824" fg:w="25"/><text x="99.8120%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (25 samples, 0.02%)</title><rect x="99.5620%" y="1109" width="0.0223%" height="15" fill="rgb(235,51,20)" fg:x="111824" fg:w="25"/><text x="99.8120%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (25 samples, 0.02%)</title><rect x="99.5620%" y="1093" width="0.0223%" height="15" fill="rgb(218,95,46)" fg:x="111824" fg:w="25"/><text x="99.8120%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (96 samples, 0.09%)</title><rect x="99.5299%" y="1141" width="0.0855%" height="15" fill="rgb(212,81,10)" fg:x="111788" fg:w="96"/><text x="99.7799%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (35 samples, 0.03%)</title><rect x="99.5842%" y="1125" width="0.0312%" height="15" fill="rgb(240,59,0)" fg:x="111849" fg:w="35"/><text x="99.8342%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="99.5967%" y="1109" width="0.0187%" height="15" fill="rgb(212,191,42)" fg:x="111863" fg:w="21"/><text x="99.8467%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (21 samples, 0.02%)</title><rect x="99.5967%" y="1093" width="0.0187%" height="15" fill="rgb(233,140,3)" fg:x="111863" fg:w="21"/><text x="99.8467%" y="1103.50"></text></g><g><title>rust_alloc (23 samples, 0.02%)</title><rect x="99.6269%" y="1141" width="0.0205%" height="15" fill="rgb(215,69,23)" fg:x="111897" fg:w="23"/><text x="99.8769%" y="1151.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (25 samples, 0.02%)</title><rect x="99.6545%" y="1141" width="0.0223%" height="15" fill="rgb(240,202,20)" fg:x="111928" fg:w="25"/><text x="99.9045%" y="1151.50"></text></g><g><title>tremor_common::time::nanotime (13 samples, 0.01%)</title><rect x="99.6786%" y="1141" width="0.0116%" height="15" fill="rgb(209,146,50)" fg:x="111955" fg:w="13"/><text x="99.9286%" y="1151.50"></text></g><g><title>std::time::SystemTime::now (13 samples, 0.01%)</title><rect x="99.6786%" y="1125" width="0.0116%" height="15" fill="rgb(253,102,54)" fg:x="111955" fg:w="13"/><text x="99.9286%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (13 samples, 0.01%)</title><rect x="99.6786%" y="1109" width="0.0116%" height="15" fill="rgb(250,173,47)" fg:x="111955" fg:w="13"/><text x="99.9286%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::now (13 samples, 0.01%)</title><rect x="99.6786%" y="1093" width="0.0116%" height="15" fill="rgb(232,142,7)" fg:x="111955" fg:w="13"/><text x="99.9286%" y="1103.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (13 samples, 0.01%)</title><rect x="99.6911%" y="1125" width="0.0116%" height="15" fill="rgb(230,157,47)" fg:x="111969" fg:w="13"/><text x="99.9411%" y="1135.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (13 samples, 0.01%)</title><rect x="99.6911%" y="1109" width="0.0116%" height="15" fill="rgb(214,177,35)" fg:x="111969" fg:w="13"/><text x="99.9411%" y="1119.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (13 samples, 0.01%)</title><rect x="99.6911%" y="1093" width="0.0116%" height="15" fill="rgb(234,119,46)" fg:x="111969" fg:w="13"/><text x="99.9411%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (28 samples, 0.02%)</title><rect x="99.6911%" y="1141" width="0.0249%" height="15" fill="rgb(241,180,50)" fg:x="111969" fg:w="28"/><text x="99.9411%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (15 samples, 0.01%)</title><rect x="99.7026%" y="1125" width="0.0134%" height="15" fill="rgb(221,54,25)" fg:x="111982" fg:w="15"/><text x="99.9526%" y="1135.50"></text></g><g><title>async-std/runti (111,955 samples, 99.68%)</title><rect x="0.0383%" y="1157" width="99.6786%" height="15" fill="rgb(209,157,44)" fg:x="43" fg:w="111955"/><text x="0.2883%" y="1167.50">async-std/runti</text></g><g><title>blocking-1 (12 samples, 0.01%)</title><rect x="99.7169%" y="1157" width="0.0107%" height="15" fill="rgb(246,115,41)" fg:x="111998" fg:w="12"/><text x="99.9669%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (64 samples, 0.06%)</title><rect x="99.7400%" y="1029" width="0.0570%" height="15" fill="rgb(229,86,1)" fg:x="112024" fg:w="64"/><text x="99.9900%" y="1039.50"></text></g><g><title>std::panicking::try (64 samples, 0.06%)</title><rect x="99.7400%" y="1013" width="0.0570%" height="15" fill="rgb(240,108,53)" fg:x="112024" fg:w="64"/><text x="99.9900%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (64 samples, 0.06%)</title><rect x="99.7400%" y="997" width="0.0570%" height="15" fill="rgb(227,134,2)" fg:x="112024" fg:w="64"/><text x="99.9900%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (64 samples, 0.06%)</title><rect x="99.7400%" y="981" width="0.0570%" height="15" fill="rgb(213,129,25)" fg:x="112024" fg:w="64"/><text x="99.9900%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (64 samples, 0.06%)</title><rect x="99.7400%" y="965" width="0.0570%" height="15" fill="rgb(226,35,21)" fg:x="112024" fg:w="64"/><text x="99.9900%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (64 samples, 0.06%)</title><rect x="99.7400%" y="949" width="0.0570%" height="15" fill="rgb(208,129,26)" fg:x="112024" fg:w="64"/><text x="99.9900%" y="959.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (64 samples, 0.06%)</title><rect x="99.7400%" y="933" width="0.0570%" height="15" fill="rgb(224,83,6)" fg:x="112024" fg:w="64"/><text x="99.9900%" y="943.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (64 samples, 0.06%)</title><rect x="99.7400%" y="917" width="0.0570%" height="15" fill="rgb(227,52,39)" fg:x="112024" fg:w="64"/><text x="99.9900%" y="927.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (64 samples, 0.06%)</title><rect x="99.7400%" y="901" width="0.0570%" height="15" fill="rgb(241,30,17)" fg:x="112024" fg:w="64"/><text x="99.9900%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (64 samples, 0.06%)</title><rect x="99.7400%" y="885" width="0.0570%" height="15" fill="rgb(246,186,42)" fg:x="112024" fg:w="64"/><text x="99.9900%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (62 samples, 0.06%)</title><rect x="99.7418%" y="869" width="0.0552%" height="15" fill="rgb(221,169,15)" fg:x="112026" fg:w="62"/><text x="99.9918%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (62 samples, 0.06%)</title><rect x="99.7418%" y="853" width="0.0552%" height="15" fill="rgb(235,108,21)" fg:x="112026" fg:w="62"/><text x="99.9918%" y="863.50"></text></g><g><title>___pthread_mutex_lock (62 samples, 0.06%)</title><rect x="99.7418%" y="837" width="0.0552%" height="15" fill="rgb(219,148,30)" fg:x="112026" fg:w="62"/><text x="99.9918%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (60 samples, 0.05%)</title><rect x="99.7436%" y="821" width="0.0534%" height="15" fill="rgb(220,109,5)" fg:x="112028" fg:w="60"/><text x="99.9936%" y="831.50"></text></g><g><title>tokio-runtime-w (71 samples, 0.06%)</title><rect x="99.7373%" y="1157" width="0.0632%" height="15" fill="rgb(213,203,48)" fg:x="112021" fg:w="71"/><text x="99.9873%" y="1167.50"></text></g><g><title>__GI___clone (68 samples, 0.06%)</title><rect x="99.7400%" y="1141" width="0.0605%" height="15" fill="rgb(244,71,33)" fg:x="112024" fg:w="68"/><text x="99.9900%" y="1151.50"></text></g><g><title>start_thread (68 samples, 0.06%)</title><rect x="99.7400%" y="1125" width="0.0605%" height="15" fill="rgb(209,23,2)" fg:x="112024" fg:w="68"/><text x="99.9900%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (68 samples, 0.06%)</title><rect x="99.7400%" y="1109" width="0.0605%" height="15" fill="rgb(219,97,7)" fg:x="112024" fg:w="68"/><text x="99.9900%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68 samples, 0.06%)</title><rect x="99.7400%" y="1093" width="0.0605%" height="15" fill="rgb(216,161,23)" fg:x="112024" fg:w="68"/><text x="99.9900%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68 samples, 0.06%)</title><rect x="99.7400%" y="1077" width="0.0605%" height="15" fill="rgb(207,45,42)" fg:x="112024" fg:w="68"/><text x="99.9900%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (68 samples, 0.06%)</title><rect x="99.7400%" y="1061" width="0.0605%" height="15" fill="rgb(241,61,4)" fg:x="112024" fg:w="68"/><text x="99.9900%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (68 samples, 0.06%)</title><rect x="99.7400%" y="1045" width="0.0605%" height="15" fill="rgb(236,170,1)" fg:x="112024" fg:w="68"/><text x="99.9900%" y="1055.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="99.8015%" y="1141" width="0.0178%" height="15" fill="rgb(239,72,5)" fg:x="112093" fg:w="20"/><text x="100.0515%" y="1151.50"></text></g><g><title>__GI___clone (190 samples, 0.17%)</title><rect x="99.8193%" y="1141" width="0.1692%" height="15" fill="rgb(214,13,50)" fg:x="112113" fg:w="190"/><text x="100.0693%" y="1151.50"></text></g><g><title>start_thread (17 samples, 0.02%)</title><rect x="99.9733%" y="1125" width="0.0151%" height="15" fill="rgb(224,88,9)" fg:x="112286" fg:w="17"/><text x="100.2233%" y="1135.50"></text></g><g><title>all (112,316 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(238,192,34)" fg:x="0" fg:w="112316"/><text x="0.2500%" y="1183.50"></text></g><g><title>tremor-pdk-box (224 samples, 0.20%)</title><rect x="99.8006%" y="1157" width="0.1994%" height="15" fill="rgb(217,203,50)" fg:x="112092" fg:w="224"/><text x="100.0506%" y="1167.50"></text></g><g><title>_start (13 samples, 0.01%)</title><rect x="99.9884%" y="1141" width="0.0116%" height="15" fill="rgb(241,123,32)" fg:x="112303" fg:w="13"/><text x="100.2384%" y="1151.50"></text></g></svg></svg>