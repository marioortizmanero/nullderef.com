<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1286" onload="init(evt)" viewBox="0 0 1200 1286" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1286" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1269.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1269.00"> </text><svg id="frames" x="10" width="1180" total_samples="109105"><g><title>__futex_abstimed_wait_common (31 samples, 0.03%)</title><rect x="0.0247%" y="869" width="0.0284%" height="15" fill="rgb(227,0,7)" fg:x="27" fg:w="31"/><text x="0.2747%" y="879.50"></text></g><g><title>___pthread_cond_timedwait (36 samples, 0.03%)</title><rect x="0.0211%" y="885" width="0.0330%" height="15" fill="rgb(217,0,24)" fg:x="23" fg:w="36"/><text x="0.2711%" y="895.50"></text></g><g><title>std::panic::catch_unwind (54 samples, 0.05%)</title><rect x="0.0055%" y="1093" width="0.0495%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="54"/><text x="0.2555%" y="1103.50"></text></g><g><title>std::panicking::try (54 samples, 0.05%)</title><rect x="0.0055%" y="1077" width="0.0495%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="54"/><text x="0.2555%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (54 samples, 0.05%)</title><rect x="0.0055%" y="1061" width="0.0495%" height="15" fill="rgb(208,68,35)" fg:x="6" fg:w="54"/><text x="0.2555%" y="1071.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (54 samples, 0.05%)</title><rect x="0.0055%" y="1045" width="0.0495%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="54"/><text x="0.2555%" y="1055.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (54 samples, 0.05%)</title><rect x="0.0055%" y="1029" width="0.0495%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="54"/><text x="0.2555%" y="1039.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (54 samples, 0.05%)</title><rect x="0.0055%" y="1013" width="0.0495%" height="15" fill="rgb(228,23,34)" fg:x="6" fg:w="54"/><text x="0.2555%" y="1023.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (54 samples, 0.05%)</title><rect x="0.0055%" y="997" width="0.0495%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="54"/><text x="0.2555%" y="1007.50"></text></g><g><title>async_io::driver::main_loop (54 samples, 0.05%)</title><rect x="0.0055%" y="981" width="0.0495%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="54"/><text x="0.2555%" y="991.50"></text></g><g><title>parking::Parker::park_timeout (41 samples, 0.04%)</title><rect x="0.0174%" y="965" width="0.0376%" height="15" fill="rgb(250,228,42)" fg:x="19" fg:w="41"/><text x="0.2674%" y="975.50"></text></g><g><title>parking::Inner::park (41 samples, 0.04%)</title><rect x="0.0174%" y="949" width="0.0376%" height="15" fill="rgb(240,193,28)" fg:x="19" fg:w="41"/><text x="0.2674%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (40 samples, 0.04%)</title><rect x="0.0183%" y="933" width="0.0367%" height="15" fill="rgb(216,20,37)" fg:x="20" fg:w="40"/><text x="0.2683%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (40 samples, 0.04%)</title><rect x="0.0183%" y="917" width="0.0367%" height="15" fill="rgb(206,188,39)" fg:x="20" fg:w="40"/><text x="0.2683%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (40 samples, 0.04%)</title><rect x="0.0183%" y="901" width="0.0367%" height="15" fill="rgb(217,207,13)" fg:x="20" fg:w="40"/><text x="0.2683%" y="911.50"></text></g><g><title>async-io (62 samples, 0.06%)</title><rect x="0.0027%" y="1221" width="0.0568%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="62"/><text x="0.2527%" y="1231.50"></text></g><g><title>__GI___clone (59 samples, 0.05%)</title><rect x="0.0055%" y="1205" width="0.0541%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="59"/><text x="0.2555%" y="1215.50"></text></g><g><title>start_thread (59 samples, 0.05%)</title><rect x="0.0055%" y="1189" width="0.0541%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="59"/><text x="0.2555%" y="1199.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (59 samples, 0.05%)</title><rect x="0.0055%" y="1173" width="0.0541%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="59"/><text x="0.2555%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (59 samples, 0.05%)</title><rect x="0.0055%" y="1157" width="0.0541%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="59"/><text x="0.2555%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (59 samples, 0.05%)</title><rect x="0.0055%" y="1141" width="0.0541%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="59"/><text x="0.2555%" y="1151.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (59 samples, 0.05%)</title><rect x="0.0055%" y="1125" width="0.0541%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="59"/><text x="0.2555%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (59 samples, 0.05%)</title><rect x="0.0055%" y="1109" width="0.0541%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="59"/><text x="0.2555%" y="1119.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="0.3501%" y="1205" width="0.0137%" height="15" fill="rgb(247,18,42)" fg:x="382" fg:w="15"/><text x="0.6001%" y="1215.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="0.3776%" y="1205" width="0.0128%" height="15" fill="rgb(241,131,45)" fg:x="412" fg:w="14"/><text x="0.6276%" y="1215.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="0.3904%" y="1205" width="0.0495%" height="15" fill="rgb(249,31,29)" fg:x="426" fg:w="54"/><text x="0.6404%" y="1215.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="0.4399%" y="1205" width="0.0376%" height="15" fill="rgb(225,111,53)" fg:x="480" fg:w="41"/><text x="0.6899%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (41 samples, 0.04%)</title><rect x="0.4399%" y="1189" width="0.0376%" height="15" fill="rgb(238,160,17)" fg:x="480" fg:w="41"/><text x="0.6899%" y="1199.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (80 samples, 0.07%)</title><rect x="0.4775%" y="1205" width="0.0733%" height="15" fill="rgb(214,148,48)" fg:x="521" fg:w="80"/><text x="0.7275%" y="1215.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (60 samples, 0.05%)</title><rect x="0.4959%" y="1189" width="0.0550%" height="15" fill="rgb(232,36,49)" fg:x="541" fg:w="60"/><text x="0.7459%" y="1199.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="0.5380%" y="1173" width="0.0128%" height="15" fill="rgb(209,103,24)" fg:x="587" fg:w="14"/><text x="0.7880%" y="1183.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (17 samples, 0.02%)</title><rect x="0.5921%" y="1173" width="0.0156%" height="15" fill="rgb(229,88,8)" fg:x="646" fg:w="17"/><text x="0.8421%" y="1183.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (17 samples, 0.02%)</title><rect x="0.5921%" y="1157" width="0.0156%" height="15" fill="rgb(213,181,19)" fg:x="646" fg:w="17"/><text x="0.8421%" y="1167.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (17 samples, 0.02%)</title><rect x="0.5921%" y="1141" width="0.0156%" height="15" fill="rgb(254,191,54)" fg:x="646" fg:w="17"/><text x="0.8421%" y="1151.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (17 samples, 0.02%)</title><rect x="0.5921%" y="1125" width="0.0156%" height="15" fill="rgb(241,83,37)" fg:x="646" fg:w="17"/><text x="0.8421%" y="1135.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="0.5921%" y="1109" width="0.0156%" height="15" fill="rgb(233,36,39)" fg:x="646" fg:w="17"/><text x="0.8421%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="0.5921%" y="1093" width="0.0156%" height="15" fill="rgb(226,3,54)" fg:x="646" fg:w="17"/><text x="0.8421%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.02%)</title><rect x="0.5921%" y="1077" width="0.0156%" height="15" fill="rgb(245,192,40)" fg:x="646" fg:w="17"/><text x="0.8421%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="0.5921%" y="1061" width="0.0156%" height="15" fill="rgb(238,167,29)" fg:x="646" fg:w="17"/><text x="0.8421%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="0.5921%" y="1045" width="0.0156%" height="15" fill="rgb(232,182,51)" fg:x="646" fg:w="17"/><text x="0.8421%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="0.5921%" y="1029" width="0.0156%" height="15" fill="rgb(231,60,39)" fg:x="646" fg:w="17"/><text x="0.8421%" y="1039.50"></text></g><g><title>__rg_alloc (17 samples, 0.02%)</title><rect x="0.5921%" y="1013" width="0.0156%" height="15" fill="rgb(208,69,12)" fg:x="646" fg:w="17"/><text x="0.8421%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.02%)</title><rect x="0.5921%" y="997" width="0.0156%" height="15" fill="rgb(235,93,37)" fg:x="646" fg:w="17"/><text x="0.8421%" y="1007.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (70 samples, 0.06%)</title><rect x="0.5563%" y="1189" width="0.0642%" height="15" fill="rgb(213,116,39)" fg:x="607" fg:w="70"/><text x="0.8063%" y="1199.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (14 samples, 0.01%)</title><rect x="0.6077%" y="1173" width="0.0128%" height="15" fill="rgb(222,207,29)" fg:x="663" fg:w="14"/><text x="0.8577%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (32 samples, 0.03%)</title><rect x="0.6205%" y="1189" width="0.0293%" height="15" fill="rgb(206,96,30)" fg:x="677" fg:w="32"/><text x="0.8705%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="0.6498%" y="1189" width="0.0156%" height="15" fill="rgb(218,138,4)" fg:x="709" fg:w="17"/><text x="0.8998%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.04%)</title><rect x="0.6654%" y="1189" width="0.0422%" height="15" fill="rgb(250,191,14)" fg:x="726" fg:w="46"/><text x="0.9154%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="0.7076%" y="1189" width="0.0412%" height="15" fill="rgb(239,60,40)" fg:x="772" fg:w="45"/><text x="0.9576%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="0.7488%" y="1189" width="0.0275%" height="15" fill="rgb(206,27,48)" fg:x="817" fg:w="30"/><text x="0.9988%" y="1199.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="0.7763%" y="1189" width="0.0302%" height="15" fill="rgb(225,35,8)" fg:x="847" fg:w="33"/><text x="1.0263%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (18 samples, 0.02%)</title><rect x="0.7901%" y="1173" width="0.0165%" height="15" fill="rgb(250,213,24)" fg:x="862" fg:w="18"/><text x="1.0401%" y="1183.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="0.7901%" y="1157" width="0.0165%" height="15" fill="rgb(247,123,22)" fg:x="862" fg:w="18"/><text x="1.0401%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (18 samples, 0.02%)</title><rect x="0.7901%" y="1141" width="0.0165%" height="15" fill="rgb(231,138,38)" fg:x="862" fg:w="18"/><text x="1.0401%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="0.7901%" y="1125" width="0.0165%" height="15" fill="rgb(231,145,46)" fg:x="862" fg:w="18"/><text x="1.0401%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="0.7901%" y="1109" width="0.0165%" height="15" fill="rgb(251,118,11)" fg:x="862" fg:w="18"/><text x="1.0401%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="0.7901%" y="1093" width="0.0165%" height="15" fill="rgb(217,147,25)" fg:x="862" fg:w="18"/><text x="1.0401%" y="1103.50"></text></g><g><title>__rg_dealloc (18 samples, 0.02%)</title><rect x="0.7901%" y="1077" width="0.0165%" height="15" fill="rgb(247,81,37)" fg:x="862" fg:w="18"/><text x="1.0401%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.02%)</title><rect x="0.7901%" y="1061" width="0.0165%" height="15" fill="rgb(209,12,38)" fg:x="862" fg:w="18"/><text x="1.0401%" y="1071.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (212 samples, 0.19%)</title><rect x="0.8066%" y="1189" width="0.1943%" height="15" fill="rgb(227,1,9)" fg:x="880" fg:w="212"/><text x="1.0566%" y="1199.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (33 samples, 0.03%)</title><rect x="1.0724%" y="1173" width="0.0302%" height="15" fill="rgb(248,47,43)" fg:x="1170" fg:w="33"/><text x="1.3224%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (25 samples, 0.02%)</title><rect x="1.0797%" y="1157" width="0.0229%" height="15" fill="rgb(221,10,30)" fg:x="1178" fg:w="25"/><text x="1.3297%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (76 samples, 0.07%)</title><rect x="1.1026%" y="1173" width="0.0697%" height="15" fill="rgb(210,229,1)" fg:x="1203" fg:w="76"/><text x="1.3526%" y="1183.50"></text></g><g><title>core::mem::replace (76 samples, 0.07%)</title><rect x="1.1026%" y="1157" width="0.0697%" height="15" fill="rgb(222,148,37)" fg:x="1203" fg:w="76"/><text x="1.3526%" y="1167.50"></text></g><g><title>core::ptr::read (76 samples, 0.07%)</title><rect x="1.1026%" y="1141" width="0.0697%" height="15" fill="rgb(234,67,33)" fg:x="1203" fg:w="76"/><text x="1.3526%" y="1151.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (182 samples, 0.17%)</title><rect x="1.0082%" y="1189" width="0.1668%" height="15" fill="rgb(247,98,35)" fg:x="1100" fg:w="182"/><text x="1.2582%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (41 samples, 0.04%)</title><rect x="1.5444%" y="1157" width="0.0376%" height="15" fill="rgb(247,138,52)" fg:x="1685" fg:w="41"/><text x="1.7944%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (41 samples, 0.04%)</title><rect x="1.5444%" y="1141" width="0.0376%" height="15" fill="rgb(213,79,30)" fg:x="1685" fg:w="41"/><text x="1.7944%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (112 samples, 0.10%)</title><rect x="1.4839%" y="1173" width="0.1027%" height="15" fill="rgb(246,177,23)" fg:x="1619" fg:w="112"/><text x="1.7339%" y="1183.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (36 samples, 0.03%)</title><rect x="1.5865%" y="1157" width="0.0330%" height="15" fill="rgb(230,62,27)" fg:x="1731" fg:w="36"/><text x="1.8365%" y="1167.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="1.5948%" y="1141" width="0.0247%" height="15" fill="rgb(216,154,8)" fg:x="1740" fg:w="27"/><text x="1.8448%" y="1151.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (27 samples, 0.02%)</title><rect x="1.5948%" y="1125" width="0.0247%" height="15" fill="rgb(244,35,45)" fg:x="1740" fg:w="27"/><text x="1.8448%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (27 samples, 0.02%)</title><rect x="1.5948%" y="1109" width="0.0247%" height="15" fill="rgb(251,115,12)" fg:x="1740" fg:w="27"/><text x="1.8448%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (27 samples, 0.02%)</title><rect x="1.5948%" y="1093" width="0.0247%" height="15" fill="rgb(240,54,50)" fg:x="1740" fg:w="27"/><text x="1.8448%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.02%)</title><rect x="1.5948%" y="1077" width="0.0247%" height="15" fill="rgb(233,84,52)" fg:x="1740" fg:w="27"/><text x="1.8448%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.02%)</title><rect x="1.5948%" y="1061" width="0.0247%" height="15" fill="rgb(207,117,47)" fg:x="1740" fg:w="27"/><text x="1.8448%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.02%)</title><rect x="1.5948%" y="1045" width="0.0247%" height="15" fill="rgb(249,43,39)" fg:x="1740" fg:w="27"/><text x="1.8448%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (17 samples, 0.02%)</title><rect x="1.6040%" y="1029" width="0.0156%" height="15" fill="rgb(209,38,44)" fg:x="1750" fg:w="17"/><text x="1.8540%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="1.6040%" y="1013" width="0.0156%" height="15" fill="rgb(236,212,23)" fg:x="1750" fg:w="17"/><text x="1.8540%" y="1023.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (52 samples, 0.05%)</title><rect x="1.5865%" y="1173" width="0.0477%" height="15" fill="rgb(242,79,21)" fg:x="1731" fg:w="52"/><text x="1.8365%" y="1183.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (16 samples, 0.01%)</title><rect x="1.6195%" y="1157" width="0.0147%" height="15" fill="rgb(211,96,35)" fg:x="1767" fg:w="16"/><text x="1.8695%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="1.6195%" y="1141" width="0.0147%" height="15" fill="rgb(253,215,40)" fg:x="1767" fg:w="16"/><text x="1.8695%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.01%)</title><rect x="1.6195%" y="1125" width="0.0147%" height="15" fill="rgb(211,81,21)" fg:x="1767" fg:w="16"/><text x="1.8695%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.01%)</title><rect x="1.6195%" y="1109" width="0.0147%" height="15" fill="rgb(208,190,38)" fg:x="1767" fg:w="16"/><text x="1.8695%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.01%)</title><rect x="1.6195%" y="1093" width="0.0147%" height="15" fill="rgb(235,213,38)" fg:x="1767" fg:w="16"/><text x="1.8695%" y="1103.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (13 samples, 0.01%)</title><rect x="1.6342%" y="1173" width="0.0119%" height="15" fill="rgb(237,122,38)" fg:x="1783" fg:w="13"/><text x="1.8842%" y="1183.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="1.6342%" y="1157" width="0.0119%" height="15" fill="rgb(244,218,35)" fg:x="1783" fg:w="13"/><text x="1.8842%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="1.6342%" y="1141" width="0.0119%" height="15" fill="rgb(240,68,47)" fg:x="1783" fg:w="13"/><text x="1.8842%" y="1151.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="1.6342%" y="1125" width="0.0119%" height="15" fill="rgb(210,16,53)" fg:x="1783" fg:w="13"/><text x="1.8842%" y="1135.50"></text></g><g><title>async_task::runnable::Runnable::run (13 samples, 0.01%)</title><rect x="1.6342%" y="1109" width="0.0119%" height="15" fill="rgb(235,124,12)" fg:x="1783" fg:w="13"/><text x="1.8842%" y="1119.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (12 samples, 0.01%)</title><rect x="1.6480%" y="1173" width="0.0110%" height="15" fill="rgb(224,169,11)" fg:x="1798" fg:w="12"/><text x="1.8980%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="1.6480%" y="1157" width="0.0110%" height="15" fill="rgb(250,166,2)" fg:x="1798" fg:w="12"/><text x="1.8980%" y="1167.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (12 samples, 0.01%)</title><rect x="1.6480%" y="1141" width="0.0110%" height="15" fill="rgb(242,216,29)" fg:x="1798" fg:w="12"/><text x="1.8980%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (28 samples, 0.03%)</title><rect x="1.7066%" y="1157" width="0.0257%" height="15" fill="rgb(230,116,27)" fg:x="1862" fg:w="28"/><text x="1.9566%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="1.7204%" y="1141" width="0.0119%" height="15" fill="rgb(228,99,48)" fg:x="1877" fg:w="13"/><text x="1.9704%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="1.7204%" y="1125" width="0.0119%" height="15" fill="rgb(253,11,6)" fg:x="1877" fg:w="13"/><text x="1.9704%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="1.7204%" y="1109" width="0.0119%" height="15" fill="rgb(247,143,39)" fg:x="1877" fg:w="13"/><text x="1.9704%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="1.7204%" y="1093" width="0.0119%" height="15" fill="rgb(236,97,10)" fg:x="1877" fg:w="13"/><text x="1.9704%" y="1103.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="1.7204%" y="1077" width="0.0119%" height="15" fill="rgb(233,208,19)" fg:x="1877" fg:w="13"/><text x="1.9704%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="1.7204%" y="1061" width="0.0119%" height="15" fill="rgb(216,164,2)" fg:x="1877" fg:w="13"/><text x="1.9704%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (89 samples, 0.08%)</title><rect x="1.6626%" y="1173" width="0.0816%" height="15" fill="rgb(220,129,5)" fg:x="1814" fg:w="89"/><text x="1.9126%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (13 samples, 0.01%)</title><rect x="1.7323%" y="1157" width="0.0119%" height="15" fill="rgb(242,17,10)" fg:x="1890" fg:w="13"/><text x="1.9823%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (15 samples, 0.01%)</title><rect x="1.7442%" y="1173" width="0.0137%" height="15" fill="rgb(242,107,0)" fg:x="1903" fg:w="15"/><text x="1.9942%" y="1183.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (38 samples, 0.03%)</title><rect x="1.7579%" y="1173" width="0.0348%" height="15" fill="rgb(251,28,31)" fg:x="1918" fg:w="38"/><text x="2.0079%" y="1183.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="1.8404%" y="1157" width="0.0128%" height="15" fill="rgb(233,223,10)" fg:x="2008" fg:w="14"/><text x="2.0904%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.01%)</title><rect x="1.8404%" y="1141" width="0.0128%" height="15" fill="rgb(215,21,27)" fg:x="2008" fg:w="14"/><text x="2.0904%" y="1151.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (14 samples, 0.01%)</title><rect x="1.8404%" y="1125" width="0.0128%" height="15" fill="rgb(232,23,21)" fg:x="2008" fg:w="14"/><text x="2.0904%" y="1135.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="1.8404%" y="1109" width="0.0128%" height="15" fill="rgb(244,5,23)" fg:x="2008" fg:w="14"/><text x="2.0904%" y="1119.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (11 samples, 0.01%)</title><rect x="1.8533%" y="1157" width="0.0101%" height="15" fill="rgb(226,81,46)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (11 samples, 0.01%)</title><rect x="1.8533%" y="1141" width="0.0101%" height="15" fill="rgb(247,70,30)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="1151.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (11 samples, 0.01%)</title><rect x="1.8533%" y="1125" width="0.0101%" height="15" fill="rgb(212,68,19)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (11 samples, 0.01%)</title><rect x="1.8533%" y="1109" width="0.0101%" height="15" fill="rgb(240,187,13)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (11 samples, 0.01%)</title><rect x="1.8533%" y="1093" width="0.0101%" height="15" fill="rgb(223,113,26)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="1.8533%" y="1077" width="0.0101%" height="15" fill="rgb(206,192,2)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="1.8533%" y="1061" width="0.0101%" height="15" fill="rgb(241,108,4)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="1.8533%" y="1045" width="0.0101%" height="15" fill="rgb(247,173,49)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="1.8533%" y="1029" width="0.0101%" height="15" fill="rgb(224,114,35)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="1.8533%" y="1013" width="0.0101%" height="15" fill="rgb(245,159,27)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="1.8533%" y="997" width="0.0101%" height="15" fill="rgb(245,172,44)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="1.8533%" y="981" width="0.0101%" height="15" fill="rgb(236,23,11)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="1.8533%" y="965" width="0.0101%" height="15" fill="rgb(205,117,38)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="975.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="1.8533%" y="949" width="0.0101%" height="15" fill="rgb(237,72,25)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="959.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="1.8533%" y="933" width="0.0101%" height="15" fill="rgb(244,70,9)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="943.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="1.8533%" y="917" width="0.0101%" height="15" fill="rgb(217,125,39)" fg:x="2022" fg:w="11"/><text x="2.1033%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (768 samples, 0.70%)</title><rect x="1.1750%" y="1189" width="0.7039%" height="15" fill="rgb(235,36,10)" fg:x="1282" fg:w="768"/><text x="1.4250%" y="1199.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (94 samples, 0.09%)</title><rect x="1.7928%" y="1173" width="0.0862%" height="15" fill="rgb(251,123,47)" fg:x="1956" fg:w="94"/><text x="2.0428%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (17 samples, 0.02%)</title><rect x="1.8633%" y="1157" width="0.0156%" height="15" fill="rgb(221,13,13)" fg:x="2033" fg:w="17"/><text x="2.1133%" y="1167.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="1.8633%" y="1141" width="0.0156%" height="15" fill="rgb(238,131,9)" fg:x="2033" fg:w="17"/><text x="2.1133%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.02%)</title><rect x="1.8789%" y="1189" width="0.0165%" height="15" fill="rgb(211,50,8)" fg:x="2050" fg:w="18"/><text x="2.1289%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (23 samples, 0.02%)</title><rect x="1.9917%" y="1173" width="0.0211%" height="15" fill="rgb(245,182,24)" fg:x="2173" fg:w="23"/><text x="2.2417%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (23 samples, 0.02%)</title><rect x="1.9917%" y="1157" width="0.0211%" height="15" fill="rgb(242,14,37)" fg:x="2173" fg:w="23"/><text x="2.2417%" y="1167.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="1.9917%" y="1141" width="0.0211%" height="15" fill="rgb(246,228,12)" fg:x="2173" fg:w="23"/><text x="2.2417%" y="1151.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (23 samples, 0.02%)</title><rect x="1.9917%" y="1125" width="0.0211%" height="15" fill="rgb(213,55,15)" fg:x="2173" fg:w="23"/><text x="2.2417%" y="1135.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (23 samples, 0.02%)</title><rect x="1.9917%" y="1109" width="0.0211%" height="15" fill="rgb(209,9,3)" fg:x="2173" fg:w="23"/><text x="2.2417%" y="1119.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (155 samples, 0.14%)</title><rect x="1.8954%" y="1189" width="0.1421%" height="15" fill="rgb(230,59,30)" fg:x="2068" fg:w="155"/><text x="2.1454%" y="1199.50"></text></g><g><title>event_listener::Inner::lock (27 samples, 0.02%)</title><rect x="2.0127%" y="1173" width="0.0247%" height="15" fill="rgb(209,121,21)" fg:x="2196" fg:w="27"/><text x="2.2627%" y="1183.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.02%)</title><rect x="2.0127%" y="1157" width="0.0247%" height="15" fill="rgb(220,109,13)" fg:x="2196" fg:w="27"/><text x="2.2627%" y="1167.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (27 samples, 0.02%)</title><rect x="2.0127%" y="1141" width="0.0247%" height="15" fill="rgb(232,18,1)" fg:x="2196" fg:w="27"/><text x="2.2627%" y="1151.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.02%)</title><rect x="2.0127%" y="1125" width="0.0247%" height="15" fill="rgb(215,41,42)" fg:x="2196" fg:w="27"/><text x="2.2627%" y="1135.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="2.0375%" y="1189" width="0.0165%" height="15" fill="rgb(224,123,36)" fg:x="2223" fg:w="18"/><text x="2.2875%" y="1199.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (36 samples, 0.03%)</title><rect x="2.0916%" y="1141" width="0.0330%" height="15" fill="rgb(240,125,3)" fg:x="2282" fg:w="36"/><text x="2.3416%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (83 samples, 0.08%)</title><rect x="2.0540%" y="1189" width="0.0761%" height="15" fill="rgb(205,98,50)" fg:x="2241" fg:w="83"/><text x="2.3040%" y="1199.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (60 samples, 0.05%)</title><rect x="2.0751%" y="1173" width="0.0550%" height="15" fill="rgb(205,185,37)" fg:x="2264" fg:w="60"/><text x="2.3251%" y="1183.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (49 samples, 0.04%)</title><rect x="2.0851%" y="1157" width="0.0449%" height="15" fill="rgb(238,207,15)" fg:x="2275" fg:w="49"/><text x="2.3351%" y="1167.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (31 samples, 0.03%)</title><rect x="2.1301%" y="1189" width="0.0284%" height="15" fill="rgb(213,199,42)" fg:x="2324" fg:w="31"/><text x="2.3801%" y="1199.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="2.1447%" y="1173" width="0.0137%" height="15" fill="rgb(235,201,11)" fg:x="2340" fg:w="15"/><text x="2.3947%" y="1183.50"></text></g><g><title>&lt;tremor_script::pdk::PdkEventPayload as core::convert::From&lt;tremor_script::srs::EventPayload&gt;&gt;::from (15 samples, 0.01%)</title><rect x="2.1447%" y="1157" width="0.0137%" height="15" fill="rgb(207,46,11)" fg:x="2340" fg:w="15"/><text x="2.3947%" y="1167.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="2.1447%" y="1141" width="0.0137%" height="15" fill="rgb(241,35,35)" fg:x="2340" fg:w="15"/><text x="2.3947%" y="1151.50"></text></g><g><title>&lt;tremor_script::pdk::PdkValueAndMeta as core::convert::From&lt;tremor_script::srs::ValueAndMeta&gt;&gt;::from (15 samples, 0.01%)</title><rect x="2.1447%" y="1125" width="0.0137%" height="15" fill="rgb(243,32,47)" fg:x="2340" fg:w="15"/><text x="2.3947%" y="1135.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="2.1447%" y="1109" width="0.0137%" height="15" fill="rgb(247,202,23)" fg:x="2340" fg:w="15"/><text x="2.3947%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (28 samples, 0.03%)</title><rect x="2.1585%" y="1189" width="0.0257%" height="15" fill="rgb(219,102,11)" fg:x="2355" fg:w="28"/><text x="2.4085%" y="1199.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (244 samples, 0.22%)</title><rect x="2.1896%" y="1189" width="0.2236%" height="15" fill="rgb(243,110,44)" fg:x="2389" fg:w="244"/><text x="2.4396%" y="1199.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (89 samples, 0.08%)</title><rect x="2.3317%" y="1173" width="0.0816%" height="15" fill="rgb(222,74,54)" fg:x="2544" fg:w="89"/><text x="2.5817%" y="1183.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (73 samples, 0.07%)</title><rect x="2.3464%" y="1157" width="0.0669%" height="15" fill="rgb(216,99,12)" fg:x="2560" fg:w="73"/><text x="2.5964%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.02%)</title><rect x="2.3949%" y="1141" width="0.0183%" height="15" fill="rgb(226,22,26)" fg:x="2613" fg:w="20"/><text x="2.6449%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.01%)</title><rect x="2.4014%" y="1125" width="0.0119%" height="15" fill="rgb(217,163,10)" fg:x="2620" fg:w="13"/><text x="2.6514%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="2.4014%" y="1109" width="0.0119%" height="15" fill="rgb(213,25,53)" fg:x="2620" fg:w="13"/><text x="2.6514%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="2.4023%" y="1093" width="0.0110%" height="15" fill="rgb(252,105,26)" fg:x="2621" fg:w="12"/><text x="2.6523%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="2.4023%" y="1077" width="0.0110%" height="15" fill="rgb(220,39,43)" fg:x="2621" fg:w="12"/><text x="2.6523%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="2.4023%" y="1061" width="0.0110%" height="15" fill="rgb(229,68,48)" fg:x="2621" fg:w="12"/><text x="2.6523%" y="1071.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="2.4023%" y="1045" width="0.0110%" height="15" fill="rgb(252,8,32)" fg:x="2621" fg:w="12"/><text x="2.6523%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="2.4023%" y="1029" width="0.0110%" height="15" fill="rgb(223,20,43)" fg:x="2621" fg:w="12"/><text x="2.6523%" y="1039.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (55 samples, 0.05%)</title><rect x="2.4133%" y="1189" width="0.0504%" height="15" fill="rgb(229,81,49)" fg:x="2633" fg:w="55"/><text x="2.6633%" y="1199.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (102 samples, 0.09%)</title><rect x="2.4637%" y="1189" width="0.0935%" height="15" fill="rgb(236,28,36)" fg:x="2688" fg:w="102"/><text x="2.7137%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="2.5416%" y="1173" width="0.0156%" height="15" fill="rgb(249,185,26)" fg:x="2773" fg:w="17"/><text x="2.7916%" y="1183.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (12 samples, 0.01%)</title><rect x="2.5462%" y="1157" width="0.0110%" height="15" fill="rgb(249,174,33)" fg:x="2778" fg:w="12"/><text x="2.7962%" y="1167.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (12 samples, 0.01%)</title><rect x="2.5462%" y="1141" width="0.0110%" height="15" fill="rgb(233,201,37)" fg:x="2778" fg:w="12"/><text x="2.7962%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="2.5462%" y="1125" width="0.0110%" height="15" fill="rgb(221,78,26)" fg:x="2778" fg:w="12"/><text x="2.7962%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="2.5462%" y="1109" width="0.0110%" height="15" fill="rgb(250,127,30)" fg:x="2778" fg:w="12"/><text x="2.7962%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="2.5462%" y="1093" width="0.0110%" height="15" fill="rgb(230,49,44)" fg:x="2778" fg:w="12"/><text x="2.7962%" y="1103.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="2.5462%" y="1077" width="0.0110%" height="15" fill="rgb(229,67,23)" fg:x="2778" fg:w="12"/><text x="2.7962%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="2.5462%" y="1061" width="0.0110%" height="15" fill="rgb(249,83,47)" fg:x="2778" fg:w="12"/><text x="2.7962%" y="1071.50"></text></g><g><title>__GI___lll_lock_wake (11 samples, 0.01%)</title><rect x="2.5590%" y="1189" width="0.0101%" height="15" fill="rgb(215,43,3)" fg:x="2792" fg:w="11"/><text x="2.8090%" y="1199.50"></text></g><g><title>__GI___pthread_mutex_trylock (17 samples, 0.02%)</title><rect x="2.5801%" y="1189" width="0.0156%" height="15" fill="rgb(238,154,13)" fg:x="2815" fg:w="17"/><text x="2.8301%" y="1199.50"></text></g><g><title>___pthread_mutex_lock (47 samples, 0.04%)</title><rect x="2.6076%" y="1189" width="0.0431%" height="15" fill="rgb(219,56,2)" fg:x="2845" fg:w="47"/><text x="2.8576%" y="1199.50"></text></g><g><title>__clock_gettime_2 (34 samples, 0.03%)</title><rect x="2.6571%" y="1189" width="0.0312%" height="15" fill="rgb(233,0,4)" fg:x="2899" fg:w="34"/><text x="2.9071%" y="1199.50"></text></g><g><title>__memcpy_avx_unaligned_erms (67 samples, 0.06%)</title><rect x="2.6947%" y="1189" width="0.0614%" height="15" fill="rgb(235,30,7)" fg:x="2940" fg:w="67"/><text x="2.9447%" y="1199.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (34 samples, 0.03%)</title><rect x="2.7781%" y="1189" width="0.0312%" height="15" fill="rgb(250,79,13)" fg:x="3031" fg:w="34"/><text x="3.0281%" y="1199.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (14 samples, 0.01%)</title><rect x="2.8651%" y="1125" width="0.0128%" height="15" fill="rgb(211,146,34)" fg:x="3126" fg:w="14"/><text x="3.1151%" y="1135.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="2.8651%" y="1109" width="0.0128%" height="15" fill="rgb(228,22,38)" fg:x="3126" fg:w="14"/><text x="3.1151%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="2.8651%" y="1093" width="0.0128%" height="15" fill="rgb(235,168,5)" fg:x="3126" fg:w="14"/><text x="3.1151%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.01%)</title><rect x="2.8651%" y="1077" width="0.0128%" height="15" fill="rgb(221,155,16)" fg:x="3126" fg:w="14"/><text x="3.1151%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="2.8651%" y="1061" width="0.0128%" height="15" fill="rgb(215,215,53)" fg:x="3126" fg:w="14"/><text x="3.1151%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="2.8651%" y="1045" width="0.0128%" height="15" fill="rgb(223,4,10)" fg:x="3126" fg:w="14"/><text x="3.1151%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="2.8651%" y="1029" width="0.0128%" height="15" fill="rgb(234,103,6)" fg:x="3126" fg:w="14"/><text x="3.1151%" y="1039.50"></text></g><g><title>__rg_alloc (14 samples, 0.01%)</title><rect x="2.8651%" y="1013" width="0.0128%" height="15" fill="rgb(227,97,0)" fg:x="3126" fg:w="14"/><text x="3.1151%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.01%)</title><rect x="2.8651%" y="997" width="0.0128%" height="15" fill="rgb(234,150,53)" fg:x="3126" fg:w="14"/><text x="3.1151%" y="1007.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (128 samples, 0.12%)</title><rect x="2.8092%" y="1189" width="0.1173%" height="15" fill="rgb(228,201,54)" fg:x="3065" fg:w="128"/><text x="3.0592%" y="1199.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (77 samples, 0.07%)</title><rect x="2.8560%" y="1173" width="0.0706%" height="15" fill="rgb(222,22,37)" fg:x="3116" fg:w="77"/><text x="3.1060%" y="1183.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (77 samples, 0.07%)</title><rect x="2.8560%" y="1157" width="0.0706%" height="15" fill="rgb(237,53,32)" fg:x="3116" fg:w="77"/><text x="3.1060%" y="1167.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (77 samples, 0.07%)</title><rect x="2.8560%" y="1141" width="0.0706%" height="15" fill="rgb(233,25,53)" fg:x="3116" fg:w="77"/><text x="3.1060%" y="1151.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (53 samples, 0.05%)</title><rect x="2.8780%" y="1125" width="0.0486%" height="15" fill="rgb(210,40,34)" fg:x="3140" fg:w="53"/><text x="3.1280%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once (53 samples, 0.05%)</title><rect x="2.8780%" y="1109" width="0.0486%" height="15" fill="rgb(241,220,44)" fg:x="3140" fg:w="53"/><text x="3.1280%" y="1119.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (53 samples, 0.05%)</title><rect x="2.8780%" y="1093" width="0.0486%" height="15" fill="rgb(235,28,35)" fg:x="3140" fg:w="53"/><text x="3.1280%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (53 samples, 0.05%)</title><rect x="2.8780%" y="1077" width="0.0486%" height="15" fill="rgb(210,56,17)" fg:x="3140" fg:w="53"/><text x="3.1280%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (122 samples, 0.11%)</title><rect x="2.9265%" y="1189" width="0.1118%" height="15" fill="rgb(224,130,29)" fg:x="3193" fg:w="122"/><text x="3.1765%" y="1199.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (102 samples, 0.09%)</title><rect x="2.9449%" y="1173" width="0.0935%" height="15" fill="rgb(235,212,8)" fg:x="3213" fg:w="102"/><text x="3.1949%" y="1183.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (102 samples, 0.09%)</title><rect x="2.9449%" y="1157" width="0.0935%" height="15" fill="rgb(223,33,50)" fg:x="3213" fg:w="102"/><text x="3.1949%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="3.0769%" y="981" width="0.0183%" height="15" fill="rgb(219,149,13)" fg:x="3357" fg:w="20"/><text x="3.3269%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="3.0769%" y="965" width="0.0183%" height="15" fill="rgb(250,156,29)" fg:x="3357" fg:w="20"/><text x="3.3269%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.02%)</title><rect x="3.0769%" y="949" width="0.0183%" height="15" fill="rgb(216,193,19)" fg:x="3357" fg:w="20"/><text x="3.3269%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.02%)</title><rect x="3.0769%" y="933" width="0.0183%" height="15" fill="rgb(216,135,14)" fg:x="3357" fg:w="20"/><text x="3.3269%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.02%)</title><rect x="3.0769%" y="917" width="0.0183%" height="15" fill="rgb(241,47,5)" fg:x="3357" fg:w="20"/><text x="3.3269%" y="927.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.02%)</title><rect x="3.0769%" y="901" width="0.0183%" height="15" fill="rgb(233,42,35)" fg:x="3357" fg:w="20"/><text x="3.3269%" y="911.50"></text></g><g><title>__rg_alloc (20 samples, 0.02%)</title><rect x="3.0769%" y="885" width="0.0183%" height="15" fill="rgb(231,13,6)" fg:x="3357" fg:w="20"/><text x="3.3269%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (20 samples, 0.02%)</title><rect x="3.0769%" y="869" width="0.0183%" height="15" fill="rgb(207,181,40)" fg:x="3357" fg:w="20"/><text x="3.3269%" y="879.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="3.0769%" y="1093" width="0.0266%" height="15" fill="rgb(254,173,49)" fg:x="3357" fg:w="29"/><text x="3.3269%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (29 samples, 0.03%)</title><rect x="3.0769%" y="1077" width="0.0266%" height="15" fill="rgb(221,1,38)" fg:x="3357" fg:w="29"/><text x="3.3269%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (29 samples, 0.03%)</title><rect x="3.0769%" y="1061" width="0.0266%" height="15" fill="rgb(206,124,46)" fg:x="3357" fg:w="29"/><text x="3.3269%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (29 samples, 0.03%)</title><rect x="3.0769%" y="1045" width="0.0266%" height="15" fill="rgb(249,21,11)" fg:x="3357" fg:w="29"/><text x="3.3269%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29 samples, 0.03%)</title><rect x="3.0769%" y="1029" width="0.0266%" height="15" fill="rgb(222,201,40)" fg:x="3357" fg:w="29"/><text x="3.3269%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (29 samples, 0.03%)</title><rect x="3.0769%" y="1013" width="0.0266%" height="15" fill="rgb(235,61,29)" fg:x="3357" fg:w="29"/><text x="3.3269%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29 samples, 0.03%)</title><rect x="3.0769%" y="997" width="0.0266%" height="15" fill="rgb(219,207,3)" fg:x="3357" fg:w="29"/><text x="3.3269%" y="1007.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (77 samples, 0.07%)</title><rect x="3.0384%" y="1189" width="0.0706%" height="15" fill="rgb(222,56,46)" fg:x="3315" fg:w="77"/><text x="3.2884%" y="1199.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (35 samples, 0.03%)</title><rect x="3.0769%" y="1173" width="0.0321%" height="15" fill="rgb(239,76,54)" fg:x="3357" fg:w="35"/><text x="3.3269%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (35 samples, 0.03%)</title><rect x="3.0769%" y="1157" width="0.0321%" height="15" fill="rgb(231,124,27)" fg:x="3357" fg:w="35"/><text x="3.3269%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (35 samples, 0.03%)</title><rect x="3.0769%" y="1141" width="0.0321%" height="15" fill="rgb(249,195,6)" fg:x="3357" fg:w="35"/><text x="3.3269%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (35 samples, 0.03%)</title><rect x="3.0769%" y="1125" width="0.0321%" height="15" fill="rgb(237,174,47)" fg:x="3357" fg:w="35"/><text x="3.3269%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (35 samples, 0.03%)</title><rect x="3.0769%" y="1109" width="0.0321%" height="15" fill="rgb(206,201,31)" fg:x="3357" fg:w="35"/><text x="3.3269%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.07%)</title><rect x="3.1795%" y="1125" width="0.0678%" height="15" fill="rgb(231,57,52)" fg:x="3469" fg:w="74"/><text x="3.4295%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (74 samples, 0.07%)</title><rect x="3.1795%" y="1109" width="0.0678%" height="15" fill="rgb(248,177,22)" fg:x="3469" fg:w="74"/><text x="3.4295%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (74 samples, 0.07%)</title><rect x="3.1795%" y="1093" width="0.0678%" height="15" fill="rgb(215,211,37)" fg:x="3469" fg:w="74"/><text x="3.4295%" y="1103.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (74 samples, 0.07%)</title><rect x="3.1795%" y="1077" width="0.0678%" height="15" fill="rgb(241,128,51)" fg:x="3469" fg:w="74"/><text x="3.4295%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (86 samples, 0.08%)</title><rect x="3.1795%" y="1141" width="0.0788%" height="15" fill="rgb(227,165,31)" fg:x="3469" fg:w="86"/><text x="3.4295%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="3.2473%" y="1125" width="0.0110%" height="15" fill="rgb(228,167,24)" fg:x="3543" fg:w="12"/><text x="3.4973%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="3.2473%" y="1109" width="0.0110%" height="15" fill="rgb(228,143,12)" fg:x="3543" fg:w="12"/><text x="3.4973%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="3.2473%" y="1093" width="0.0110%" height="15" fill="rgb(249,149,8)" fg:x="3543" fg:w="12"/><text x="3.4973%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="3.2473%" y="1077" width="0.0110%" height="15" fill="rgb(243,35,44)" fg:x="3543" fg:w="12"/><text x="3.4973%" y="1087.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="3.2473%" y="1061" width="0.0110%" height="15" fill="rgb(246,89,9)" fg:x="3543" fg:w="12"/><text x="3.4973%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="3.2473%" y="1045" width="0.0110%" height="15" fill="rgb(233,213,13)" fg:x="3543" fg:w="12"/><text x="3.4973%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="3.2583%" y="1125" width="0.0422%" height="15" fill="rgb(233,141,41)" fg:x="3555" fg:w="46"/><text x="3.5083%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (46 samples, 0.04%)</title><rect x="3.2583%" y="1109" width="0.0422%" height="15" fill="rgb(239,167,4)" fg:x="3555" fg:w="46"/><text x="3.5083%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (46 samples, 0.04%)</title><rect x="3.2583%" y="1093" width="0.0422%" height="15" fill="rgb(209,217,16)" fg:x="3555" fg:w="46"/><text x="3.5083%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (46 samples, 0.04%)</title><rect x="3.2583%" y="1077" width="0.0422%" height="15" fill="rgb(219,88,35)" fg:x="3555" fg:w="46"/><text x="3.5083%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (46 samples, 0.04%)</title><rect x="3.2583%" y="1061" width="0.0422%" height="15" fill="rgb(220,193,23)" fg:x="3555" fg:w="46"/><text x="3.5083%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (53 samples, 0.05%)</title><rect x="3.2583%" y="1141" width="0.0486%" height="15" fill="rgb(230,90,52)" fg:x="3555" fg:w="53"/><text x="3.5083%" y="1151.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (225 samples, 0.21%)</title><rect x="3.1089%" y="1189" width="0.2062%" height="15" fill="rgb(252,106,19)" fg:x="3392" fg:w="225"/><text x="3.3589%" y="1199.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (148 samples, 0.14%)</title><rect x="3.1795%" y="1173" width="0.1356%" height="15" fill="rgb(206,74,20)" fg:x="3469" fg:w="148"/><text x="3.4295%" y="1183.50"></text></g><g><title>core::mem::drop (148 samples, 0.14%)</title><rect x="3.1795%" y="1157" width="0.1356%" height="15" fill="rgb(230,138,44)" fg:x="3469" fg:w="148"/><text x="3.4295%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (15 samples, 0.01%)</title><rect x="3.3152%" y="1189" width="0.0137%" height="15" fill="rgb(235,182,43)" fg:x="3617" fg:w="15"/><text x="3.5652%" y="1199.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (20 samples, 0.02%)</title><rect x="3.3298%" y="1189" width="0.0183%" height="15" fill="rgb(242,16,51)" fg:x="3633" fg:w="20"/><text x="3.5798%" y="1199.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (15 samples, 0.01%)</title><rect x="3.3482%" y="1189" width="0.0137%" height="15" fill="rgb(248,9,4)" fg:x="3653" fg:w="15"/><text x="3.5982%" y="1199.50"></text></g><g><title>async_executor::State::notify (15 samples, 0.01%)</title><rect x="3.3619%" y="1189" width="0.0137%" height="15" fill="rgb(210,31,22)" fg:x="3668" fg:w="15"/><text x="3.6119%" y="1199.50"></text></g><g><title>async_executor::Ticker::sleep (33 samples, 0.03%)</title><rect x="3.3756%" y="1189" width="0.0302%" height="15" fill="rgb(239,54,39)" fg:x="3683" fg:w="33"/><text x="3.6256%" y="1199.50"></text></g><g><title>async_executor::Ticker::wake (11 samples, 0.01%)</title><rect x="3.4059%" y="1189" width="0.0101%" height="15" fill="rgb(230,99,41)" fg:x="3716" fg:w="11"/><text x="3.6559%" y="1199.50"></text></g><g><title>async_executor::steal (65 samples, 0.06%)</title><rect x="3.4160%" y="1189" width="0.0596%" height="15" fill="rgb(253,106,12)" fg:x="3727" fg:w="65"/><text x="3.6660%" y="1199.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (34 samples, 0.03%)</title><rect x="3.4847%" y="1189" width="0.0312%" height="15" fill="rgb(213,46,41)" fg:x="3802" fg:w="34"/><text x="3.7347%" y="1199.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (31 samples, 0.03%)</title><rect x="3.5269%" y="1189" width="0.0284%" height="15" fill="rgb(215,133,35)" fg:x="3848" fg:w="31"/><text x="3.7769%" y="1199.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (103 samples, 0.09%)</title><rect x="3.5553%" y="1189" width="0.0944%" height="15" fill="rgb(213,28,5)" fg:x="3879" fg:w="103"/><text x="3.8053%" y="1199.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (93 samples, 0.09%)</title><rect x="3.6497%" y="1189" width="0.0852%" height="15" fill="rgb(215,77,49)" fg:x="3982" fg:w="93"/><text x="3.8997%" y="1199.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (11 samples, 0.01%)</title><rect x="3.7349%" y="1189" width="0.0101%" height="15" fill="rgb(248,100,22)" fg:x="4075" fg:w="11"/><text x="3.9849%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (52 samples, 0.05%)</title><rect x="3.7478%" y="1189" width="0.0477%" height="15" fill="rgb(208,67,9)" fg:x="4089" fg:w="52"/><text x="3.9978%" y="1199.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="3.7670%" y="1173" width="0.0284%" height="15" fill="rgb(219,133,21)" fg:x="4110" fg:w="31"/><text x="4.0170%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (46 samples, 0.04%)</title><rect x="3.7954%" y="1189" width="0.0422%" height="15" fill="rgb(246,46,29)" fg:x="4141" fg:w="46"/><text x="4.0454%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt; (46 samples, 0.04%)</title><rect x="3.7954%" y="1173" width="0.0422%" height="15" fill="rgb(246,185,52)" fg:x="4141" fg:w="46"/><text x="4.0454%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="3.8376%" y="1189" width="0.0211%" height="15" fill="rgb(252,136,11)" fg:x="4187" fg:w="23"/><text x="4.0876%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="3.8587%" y="1189" width="0.0183%" height="15" fill="rgb(219,138,53)" fg:x="4210" fg:w="20"/><text x="4.1087%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="3.8770%" y="1189" width="0.0119%" height="15" fill="rgb(211,51,23)" fg:x="4230" fg:w="13"/><text x="4.1270%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (38 samples, 0.03%)</title><rect x="3.8889%" y="1189" width="0.0348%" height="15" fill="rgb(247,221,28)" fg:x="4243" fg:w="38"/><text x="4.1389%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (38 samples, 0.03%)</title><rect x="3.8889%" y="1173" width="0.0348%" height="15" fill="rgb(251,222,45)" fg:x="4243" fg:w="38"/><text x="4.1389%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (26 samples, 0.02%)</title><rect x="3.9237%" y="1189" width="0.0238%" height="15" fill="rgb(217,162,53)" fg:x="4281" fg:w="26"/><text x="4.1737%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (11 samples, 0.01%)</title><rect x="3.9476%" y="1189" width="0.0101%" height="15" fill="rgb(229,93,14)" fg:x="4307" fg:w="11"/><text x="4.1976%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (246 samples, 0.23%)</title><rect x="3.9577%" y="1189" width="0.2255%" height="15" fill="rgb(209,67,49)" fg:x="4318" fg:w="246"/><text x="4.2077%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (15 samples, 0.01%)</title><rect x="4.1850%" y="1141" width="0.0137%" height="15" fill="rgb(213,87,29)" fg:x="4566" fg:w="15"/><text x="4.4350%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="4.1850%" y="1125" width="0.0137%" height="15" fill="rgb(205,151,52)" fg:x="4566" fg:w="15"/><text x="4.4350%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (15 samples, 0.01%)</title><rect x="4.1850%" y="1109" width="0.0137%" height="15" fill="rgb(253,215,39)" fg:x="4566" fg:w="15"/><text x="4.4350%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (22 samples, 0.02%)</title><rect x="4.1850%" y="1173" width="0.0202%" height="15" fill="rgb(221,220,41)" fg:x="4566" fg:w="22"/><text x="4.4350%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (22 samples, 0.02%)</title><rect x="4.1850%" y="1157" width="0.0202%" height="15" fill="rgb(218,133,21)" fg:x="4566" fg:w="22"/><text x="4.4350%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (24 samples, 0.02%)</title><rect x="4.2051%" y="1173" width="0.0220%" height="15" fill="rgb(221,193,43)" fg:x="4588" fg:w="24"/><text x="4.4551%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (24 samples, 0.02%)</title><rect x="4.2051%" y="1157" width="0.0220%" height="15" fill="rgb(240,128,52)" fg:x="4588" fg:w="24"/><text x="4.4551%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (24 samples, 0.02%)</title><rect x="4.2051%" y="1141" width="0.0220%" height="15" fill="rgb(253,114,12)" fg:x="4588" fg:w="24"/><text x="4.4551%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="4.2271%" y="1157" width="0.0220%" height="15" fill="rgb(215,223,47)" fg:x="4612" fg:w="24"/><text x="4.4771%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (24 samples, 0.02%)</title><rect x="4.2271%" y="1141" width="0.0220%" height="15" fill="rgb(248,225,23)" fg:x="4612" fg:w="24"/><text x="4.4771%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (94 samples, 0.09%)</title><rect x="4.1831%" y="1189" width="0.0862%" height="15" fill="rgb(250,108,0)" fg:x="4564" fg:w="94"/><text x="4.4331%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (46 samples, 0.04%)</title><rect x="4.2271%" y="1173" width="0.0422%" height="15" fill="rgb(228,208,7)" fg:x="4612" fg:w="46"/><text x="4.4771%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (22 samples, 0.02%)</title><rect x="4.2491%" y="1157" width="0.0202%" height="15" fill="rgb(244,45,10)" fg:x="4636" fg:w="22"/><text x="4.4991%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (218 samples, 0.20%)</title><rect x="4.2693%" y="1189" width="0.1998%" height="15" fill="rgb(207,125,25)" fg:x="4658" fg:w="218"/><text x="4.5193%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (31 samples, 0.03%)</title><rect x="4.4407%" y="1173" width="0.0284%" height="15" fill="rgb(210,195,18)" fg:x="4845" fg:w="31"/><text x="4.6907%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (31 samples, 0.03%)</title><rect x="4.4407%" y="1157" width="0.0284%" height="15" fill="rgb(249,80,12)" fg:x="4845" fg:w="31"/><text x="4.6907%" y="1167.50"></text></g><g><title>event_listener::Event::inner (12 samples, 0.01%)</title><rect x="4.4810%" y="1173" width="0.0110%" height="15" fill="rgb(221,65,9)" fg:x="4889" fg:w="12"/><text x="4.7310%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (12 samples, 0.01%)</title><rect x="4.4810%" y="1157" width="0.0110%" height="15" fill="rgb(235,49,36)" fg:x="4889" fg:w="12"/><text x="4.7310%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="4.4810%" y="1141" width="0.0110%" height="15" fill="rgb(225,32,20)" fg:x="4889" fg:w="12"/><text x="4.7310%" y="1151.50"></text></g><g><title>event_listener::Event::listen (25 samples, 0.02%)</title><rect x="4.4700%" y="1189" width="0.0229%" height="15" fill="rgb(215,141,46)" fg:x="4877" fg:w="25"/><text x="4.7200%" y="1199.50"></text></g><g><title>event_listener::Event::notify (169 samples, 0.15%)</title><rect x="4.4929%" y="1189" width="0.1549%" height="15" fill="rgb(250,160,47)" fg:x="4902" fg:w="169"/><text x="4.7429%" y="1199.50"></text></g><g><title>event_listener::full_fence (62 samples, 0.06%)</title><rect x="4.5910%" y="1173" width="0.0568%" height="15" fill="rgb(216,222,40)" fg:x="5009" fg:w="62"/><text x="4.8410%" y="1183.50"></text></g><g><title>event_listener::List::notify (13 samples, 0.01%)</title><rect x="4.6478%" y="1189" width="0.0119%" height="15" fill="rgb(234,217,39)" fg:x="5071" fg:w="13"/><text x="4.8978%" y="1199.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (76 samples, 0.07%)</title><rect x="4.6597%" y="1189" width="0.0697%" height="15" fill="rgb(207,178,40)" fg:x="5084" fg:w="76"/><text x="4.9097%" y="1199.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (11 samples, 0.01%)</title><rect x="4.7193%" y="1173" width="0.0101%" height="15" fill="rgb(221,136,13)" fg:x="5149" fg:w="11"/><text x="4.9693%" y="1183.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (11 samples, 0.01%)</title><rect x="4.7193%" y="1157" width="0.0101%" height="15" fill="rgb(249,199,10)" fg:x="5149" fg:w="11"/><text x="4.9693%" y="1167.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.01%)</title><rect x="4.7193%" y="1141" width="0.0101%" height="15" fill="rgb(249,222,13)" fg:x="5149" fg:w="11"/><text x="4.9693%" y="1151.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (11 samples, 0.01%)</title><rect x="4.7193%" y="1125" width="0.0101%" height="15" fill="rgb(244,185,38)" fg:x="5149" fg:w="11"/><text x="4.9693%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.01%)</title><rect x="4.7193%" y="1109" width="0.0101%" height="15" fill="rgb(236,202,9)" fg:x="5149" fg:w="11"/><text x="4.9693%" y="1119.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (11 samples, 0.01%)</title><rect x="4.7193%" y="1093" width="0.0101%" height="15" fill="rgb(250,229,37)" fg:x="5149" fg:w="11"/><text x="4.9693%" y="1103.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (11 samples, 0.01%)</title><rect x="4.7193%" y="1077" width="0.0101%" height="15" fill="rgb(206,174,23)" fg:x="5149" fg:w="11"/><text x="4.9693%" y="1087.50"></text></g><g><title>parking::Inner::park (39 samples, 0.04%)</title><rect x="4.7367%" y="1189" width="0.0357%" height="15" fill="rgb(211,33,43)" fg:x="5168" fg:w="39"/><text x="4.9867%" y="1199.50"></text></g><g><title>parking::Unparker::unpark (14 samples, 0.01%)</title><rect x="4.7725%" y="1189" width="0.0128%" height="15" fill="rgb(245,58,50)" fg:x="5207" fg:w="14"/><text x="5.0225%" y="1199.50"></text></g><g><title>rust_alloc (67 samples, 0.06%)</title><rect x="4.8009%" y="1189" width="0.0614%" height="15" fill="rgb(244,68,36)" fg:x="5238" fg:w="67"/><text x="5.0509%" y="1199.50"></text></g><g><title>rust_dealloc (21 samples, 0.02%)</title><rect x="4.8623%" y="1189" width="0.0192%" height="15" fill="rgb(232,229,15)" fg:x="5305" fg:w="21"/><text x="5.1123%" y="1199.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (11 samples, 0.01%)</title><rect x="4.8715%" y="1173" width="0.0101%" height="15" fill="rgb(254,30,23)" fg:x="5315" fg:w="11"/><text x="5.1215%" y="1183.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (11 samples, 0.01%)</title><rect x="4.8715%" y="1157" width="0.0101%" height="15" fill="rgb(235,160,14)" fg:x="5315" fg:w="11"/><text x="5.1215%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (11 samples, 0.01%)</title><rect x="4.8715%" y="1141" width="0.0101%" height="15" fill="rgb(212,155,44)" fg:x="5315" fg:w="11"/><text x="5.1215%" y="1151.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (11 samples, 0.01%)</title><rect x="4.8715%" y="1125" width="0.0101%" height="15" fill="rgb(226,2,50)" fg:x="5315" fg:w="11"/><text x="5.1215%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (11 samples, 0.01%)</title><rect x="4.8715%" y="1109" width="0.0101%" height="15" fill="rgb(234,177,6)" fg:x="5315" fg:w="11"/><text x="5.1215%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="4.8715%" y="1093" width="0.0101%" height="15" fill="rgb(217,24,9)" fg:x="5315" fg:w="11"/><text x="5.1215%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="4.8715%" y="1077" width="0.0101%" height="15" fill="rgb(220,13,46)" fg:x="5315" fg:w="11"/><text x="5.1215%" y="1087.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="4.8715%" y="1061" width="0.0101%" height="15" fill="rgb(239,221,27)" fg:x="5315" fg:w="11"/><text x="5.1215%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (35 samples, 0.03%)</title><rect x="4.9063%" y="1189" width="0.0321%" height="15" fill="rgb(222,198,25)" fg:x="5353" fg:w="35"/><text x="5.1563%" y="1199.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (49 samples, 0.04%)</title><rect x="4.9402%" y="1189" width="0.0449%" height="15" fill="rgb(211,99,13)" fg:x="5390" fg:w="49"/><text x="5.1902%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (35 samples, 0.03%)</title><rect x="4.9860%" y="1189" width="0.0321%" height="15" fill="rgb(232,111,31)" fg:x="5440" fg:w="35"/><text x="5.2360%" y="1199.50"></text></g><g><title>tremor_common::time::nanotime (39 samples, 0.04%)</title><rect x="5.0181%" y="1189" width="0.0357%" height="15" fill="rgb(245,82,37)" fg:x="5475" fg:w="39"/><text x="5.2681%" y="1199.50"></text></g><g><title>std::time::SystemTime::now (38 samples, 0.03%)</title><rect x="5.0190%" y="1173" width="0.0348%" height="15" fill="rgb(227,149,46)" fg:x="5476" fg:w="38"/><text x="5.2690%" y="1183.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (38 samples, 0.03%)</title><rect x="5.0190%" y="1157" width="0.0348%" height="15" fill="rgb(218,36,50)" fg:x="5476" fg:w="38"/><text x="5.2690%" y="1167.50"></text></g><g><title>std::sys::unix::time::inner::now (38 samples, 0.03%)</title><rect x="5.0190%" y="1141" width="0.0348%" height="15" fill="rgb(226,80,48)" fg:x="5476" fg:w="38"/><text x="5.2690%" y="1151.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkOpMeta&gt; for tremor_pipeline::OpMeta&gt;::from (11 samples, 0.01%)</title><rect x="5.0887%" y="1157" width="0.0101%" height="15" fill="rgb(238,224,15)" fg:x="5552" fg:w="11"/><text x="5.3387%" y="1167.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (52 samples, 0.05%)</title><rect x="5.0538%" y="1189" width="0.0477%" height="15" fill="rgb(241,136,10)" fg:x="5514" fg:w="52"/><text x="5.3038%" y="1199.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="5.0887%" y="1173" width="0.0128%" height="15" fill="rgb(208,32,45)" fg:x="5552" fg:w="14"/><text x="5.3387%" y="1183.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (74 samples, 0.07%)</title><rect x="5.1088%" y="1189" width="0.0678%" height="15" fill="rgb(207,135,9)" fg:x="5574" fg:w="74"/><text x="5.3588%" y="1199.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (19 samples, 0.02%)</title><rect x="5.1593%" y="1173" width="0.0174%" height="15" fill="rgb(206,86,44)" fg:x="5629" fg:w="19"/><text x="5.4093%" y="1183.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (19 samples, 0.02%)</title><rect x="5.1593%" y="1157" width="0.0174%" height="15" fill="rgb(245,177,15)" fg:x="5629" fg:w="19"/><text x="5.4093%" y="1167.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="5.1593%" y="1141" width="0.0174%" height="15" fill="rgb(206,64,50)" fg:x="5629" fg:w="19"/><text x="5.4093%" y="1151.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="5.1593%" y="1125" width="0.0174%" height="15" fill="rgb(234,36,40)" fg:x="5629" fg:w="19"/><text x="5.4093%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="5.1593%" y="1109" width="0.0174%" height="15" fill="rgb(213,64,8)" fg:x="5629" fg:w="19"/><text x="5.4093%" y="1119.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="5.1647%" y="1093" width="0.0119%" height="15" fill="rgb(210,75,36)" fg:x="5635" fg:w="13"/><text x="5.4147%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="5.1647%" y="1077" width="0.0119%" height="15" fill="rgb(229,88,21)" fg:x="5635" fg:w="13"/><text x="5.4147%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="5.1647%" y="1061" width="0.0119%" height="15" fill="rgb(252,204,47)" fg:x="5635" fg:w="13"/><text x="5.4147%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="5.1647%" y="1045" width="0.0119%" height="15" fill="rgb(208,77,27)" fg:x="5635" fg:w="13"/><text x="5.4147%" y="1055.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="5.1647%" y="1029" width="0.0119%" height="15" fill="rgb(221,76,26)" fg:x="5635" fg:w="13"/><text x="5.4147%" y="1039.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="5.1647%" y="1013" width="0.0119%" height="15" fill="rgb(225,139,18)" fg:x="5635" fg:w="13"/><text x="5.4147%" y="1023.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="5.2582%" y="1141" width="0.0183%" height="15" fill="rgb(230,137,11)" fg:x="5737" fg:w="20"/><text x="5.5082%" y="1151.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="5.2582%" y="1125" width="0.0183%" height="15" fill="rgb(212,28,1)" fg:x="5737" fg:w="20"/><text x="5.5082%" y="1135.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (20 samples, 0.02%)</title><rect x="5.2582%" y="1109" width="0.0183%" height="15" fill="rgb(248,164,17)" fg:x="5737" fg:w="20"/><text x="5.5082%" y="1119.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (20 samples, 0.02%)</title><rect x="5.2582%" y="1093" width="0.0183%" height="15" fill="rgb(222,171,42)" fg:x="5737" fg:w="20"/><text x="5.5082%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.05%)</title><rect x="5.2472%" y="1173" width="0.0486%" height="15" fill="rgb(243,84,45)" fg:x="5725" fg:w="53"/><text x="5.4972%" y="1183.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (53 samples, 0.05%)</title><rect x="5.2472%" y="1157" width="0.0486%" height="15" fill="rgb(252,49,23)" fg:x="5725" fg:w="53"/><text x="5.4972%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (14 samples, 0.01%)</title><rect x="5.2830%" y="1141" width="0.0128%" height="15" fill="rgb(215,19,7)" fg:x="5764" fg:w="14"/><text x="5.5330%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (158 samples, 0.14%)</title><rect x="5.1767%" y="1189" width="0.1448%" height="15" fill="rgb(238,81,41)" fg:x="5648" fg:w="158"/><text x="5.4267%" y="1199.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (24 samples, 0.02%)</title><rect x="5.2995%" y="1173" width="0.0220%" height="15" fill="rgb(210,199,37)" fg:x="5782" fg:w="24"/><text x="5.5495%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (13 samples, 0.01%)</title><rect x="5.3096%" y="1157" width="0.0119%" height="15" fill="rgb(244,192,49)" fg:x="5793" fg:w="13"/><text x="5.5596%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="5.3096%" y="1141" width="0.0119%" height="15" fill="rgb(226,211,11)" fg:x="5793" fg:w="13"/><text x="5.5596%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="5.3096%" y="1125" width="0.0119%" height="15" fill="rgb(236,162,54)" fg:x="5793" fg:w="13"/><text x="5.5596%" y="1135.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="5.3096%" y="1109" width="0.0119%" height="15" fill="rgb(220,229,9)" fg:x="5793" fg:w="13"/><text x="5.5596%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="5.3096%" y="1093" width="0.0119%" height="15" fill="rgb(250,87,22)" fg:x="5793" fg:w="13"/><text x="5.5596%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (86 samples, 0.08%)</title><rect x="5.3215%" y="1189" width="0.0788%" height="15" fill="rgb(239,43,17)" fg:x="5806" fg:w="86"/><text x="5.5715%" y="1199.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (22 samples, 0.02%)</title><rect x="5.3801%" y="1173" width="0.0202%" height="15" fill="rgb(231,177,25)" fg:x="5870" fg:w="22"/><text x="5.6301%" y="1183.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (22 samples, 0.02%)</title><rect x="5.3801%" y="1157" width="0.0202%" height="15" fill="rgb(219,179,1)" fg:x="5870" fg:w="22"/><text x="5.6301%" y="1167.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="5.3801%" y="1141" width="0.0202%" height="15" fill="rgb(238,219,53)" fg:x="5870" fg:w="22"/><text x="5.6301%" y="1151.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="5.3801%" y="1125" width="0.0202%" height="15" fill="rgb(232,167,36)" fg:x="5870" fg:w="22"/><text x="5.6301%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="5.3801%" y="1109" width="0.0202%" height="15" fill="rgb(244,19,51)" fg:x="5870" fg:w="22"/><text x="5.6301%" y="1119.50"></text></g><g><title>alloc::alloc::exchange_malloc (22 samples, 0.02%)</title><rect x="5.3801%" y="1093" width="0.0202%" height="15" fill="rgb(224,6,22)" fg:x="5870" fg:w="22"/><text x="5.6301%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="5.3801%" y="1077" width="0.0202%" height="15" fill="rgb(224,145,5)" fg:x="5870" fg:w="22"/><text x="5.6301%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.02%)</title><rect x="5.3801%" y="1061" width="0.0202%" height="15" fill="rgb(234,130,49)" fg:x="5870" fg:w="22"/><text x="5.6301%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.02%)</title><rect x="5.3801%" y="1045" width="0.0202%" height="15" fill="rgb(254,6,2)" fg:x="5870" fg:w="22"/><text x="5.6301%" y="1055.50"></text></g><g><title>__rg_alloc (22 samples, 0.02%)</title><rect x="5.3801%" y="1029" width="0.0202%" height="15" fill="rgb(208,96,46)" fg:x="5870" fg:w="22"/><text x="5.6301%" y="1039.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (22 samples, 0.02%)</title><rect x="5.3801%" y="1013" width="0.0202%" height="15" fill="rgb(239,3,39)" fg:x="5870" fg:w="22"/><text x="5.6301%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="5.4920%" y="1045" width="0.0202%" height="15" fill="rgb(233,210,1)" fg:x="5992" fg:w="22"/><text x="5.7420%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="5.4920%" y="1029" width="0.0202%" height="15" fill="rgb(244,137,37)" fg:x="5992" fg:w="22"/><text x="5.7420%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.02%)</title><rect x="5.4920%" y="1013" width="0.0202%" height="15" fill="rgb(240,136,2)" fg:x="5992" fg:w="22"/><text x="5.7420%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="5.4920%" y="997" width="0.0202%" height="15" fill="rgb(239,18,37)" fg:x="5992" fg:w="22"/><text x="5.7420%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.02%)</title><rect x="5.4920%" y="981" width="0.0202%" height="15" fill="rgb(218,185,22)" fg:x="5992" fg:w="22"/><text x="5.7420%" y="991.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.02%)</title><rect x="5.4920%" y="965" width="0.0202%" height="15" fill="rgb(225,218,4)" fg:x="5992" fg:w="22"/><text x="5.7420%" y="975.50"></text></g><g><title>__rg_alloc (22 samples, 0.02%)</title><rect x="5.4920%" y="949" width="0.0202%" height="15" fill="rgb(230,182,32)" fg:x="5992" fg:w="22"/><text x="5.7420%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (22 samples, 0.02%)</title><rect x="5.4920%" y="933" width="0.0202%" height="15" fill="rgb(242,56,43)" fg:x="5992" fg:w="22"/><text x="5.7420%" y="943.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (37 samples, 0.03%)</title><rect x="5.4920%" y="1173" width="0.0339%" height="15" fill="rgb(233,99,24)" fg:x="5992" fg:w="37"/><text x="5.7420%" y="1183.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (37 samples, 0.03%)</title><rect x="5.4920%" y="1157" width="0.0339%" height="15" fill="rgb(234,209,42)" fg:x="5992" fg:w="37"/><text x="5.7420%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (37 samples, 0.03%)</title><rect x="5.4920%" y="1141" width="0.0339%" height="15" fill="rgb(227,7,12)" fg:x="5992" fg:w="37"/><text x="5.7420%" y="1151.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (37 samples, 0.03%)</title><rect x="5.4920%" y="1125" width="0.0339%" height="15" fill="rgb(245,203,43)" fg:x="5992" fg:w="37"/><text x="5.7420%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (37 samples, 0.03%)</title><rect x="5.4920%" y="1109" width="0.0339%" height="15" fill="rgb(238,205,33)" fg:x="5992" fg:w="37"/><text x="5.7420%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37 samples, 0.03%)</title><rect x="5.4920%" y="1093" width="0.0339%" height="15" fill="rgb(231,56,7)" fg:x="5992" fg:w="37"/><text x="5.7420%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (37 samples, 0.03%)</title><rect x="5.4920%" y="1077" width="0.0339%" height="15" fill="rgb(244,186,29)" fg:x="5992" fg:w="37"/><text x="5.7420%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37 samples, 0.03%)</title><rect x="5.4920%" y="1061" width="0.0339%" height="15" fill="rgb(234,111,31)" fg:x="5992" fg:w="37"/><text x="5.7420%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (15 samples, 0.01%)</title><rect x="5.5121%" y="1045" width="0.0137%" height="15" fill="rgb(241,149,10)" fg:x="6014" fg:w="15"/><text x="5.7621%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="5.5121%" y="1029" width="0.0137%" height="15" fill="rgb(249,206,44)" fg:x="6014" fg:w="15"/><text x="5.7621%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="5.5259%" y="1173" width="0.0119%" height="15" fill="rgb(251,153,30)" fg:x="6029" fg:w="13"/><text x="5.7759%" y="1183.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="5.5259%" y="1157" width="0.0119%" height="15" fill="rgb(239,152,38)" fg:x="6029" fg:w="13"/><text x="5.7759%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (172 samples, 0.16%)</title><rect x="5.4076%" y="1189" width="0.1576%" height="15" fill="rgb(249,139,47)" fg:x="5900" fg:w="172"/><text x="5.6576%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (16 samples, 0.01%)</title><rect x="5.5506%" y="1173" width="0.0147%" height="15" fill="rgb(244,64,35)" fg:x="6056" fg:w="16"/><text x="5.8006%" y="1183.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (25 samples, 0.02%)</title><rect x="5.5653%" y="1189" width="0.0229%" height="15" fill="rgb(216,46,15)" fg:x="6072" fg:w="25"/><text x="5.8153%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (23 samples, 0.02%)</title><rect x="5.6890%" y="1141" width="0.0211%" height="15" fill="rgb(250,74,19)" fg:x="6207" fg:w="23"/><text x="5.9390%" y="1151.50"></text></g><g><title>core::ptr::write (23 samples, 0.02%)</title><rect x="5.6890%" y="1125" width="0.0211%" height="15" fill="rgb(249,42,33)" fg:x="6207" fg:w="23"/><text x="5.9390%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (136 samples, 0.12%)</title><rect x="5.5964%" y="1189" width="0.1247%" height="15" fill="rgb(242,149,17)" fg:x="6106" fg:w="136"/><text x="5.8464%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.04%)</title><rect x="5.6762%" y="1173" width="0.0449%" height="15" fill="rgb(244,29,21)" fg:x="6193" fg:w="49"/><text x="5.9262%" y="1183.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (49 samples, 0.04%)</title><rect x="5.6762%" y="1157" width="0.0449%" height="15" fill="rgb(220,130,37)" fg:x="6193" fg:w="49"/><text x="5.9262%" y="1167.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (22 samples, 0.02%)</title><rect x="5.7211%" y="1189" width="0.0202%" height="15" fill="rgb(211,67,2)" fg:x="6242" fg:w="22"/><text x="5.9711%" y="1199.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (79 samples, 0.07%)</title><rect x="5.7413%" y="1189" width="0.0724%" height="15" fill="rgb(235,68,52)" fg:x="6264" fg:w="79"/><text x="5.9913%" y="1199.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (51 samples, 0.05%)</title><rect x="5.7669%" y="1173" width="0.0467%" height="15" fill="rgb(246,142,3)" fg:x="6292" fg:w="51"/><text x="6.0169%" y="1183.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.01%)</title><rect x="5.8769%" y="1173" width="0.0119%" height="15" fill="rgb(241,25,7)" fg:x="6412" fg:w="13"/><text x="6.1269%" y="1183.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (30 samples, 0.03%)</title><rect x="5.8888%" y="1173" width="0.0275%" height="15" fill="rgb(242,119,39)" fg:x="6425" fg:w="30"/><text x="6.1388%" y="1183.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (30 samples, 0.03%)</title><rect x="5.8888%" y="1157" width="0.0275%" height="15" fill="rgb(241,98,45)" fg:x="6425" fg:w="30"/><text x="6.1388%" y="1167.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="5.9163%" y="1173" width="0.0101%" height="15" fill="rgb(254,28,30)" fg:x="6455" fg:w="11"/><text x="6.1663%" y="1183.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="5.9163%" y="1157" width="0.0101%" height="15" fill="rgb(241,142,54)" fg:x="6455" fg:w="11"/><text x="6.1663%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="5.9163%" y="1141" width="0.0101%" height="15" fill="rgb(222,85,15)" fg:x="6455" fg:w="11"/><text x="6.1663%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="5.9163%" y="1125" width="0.0101%" height="15" fill="rgb(210,85,47)" fg:x="6455" fg:w="11"/><text x="6.1663%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="5.9163%" y="1109" width="0.0101%" height="15" fill="rgb(224,206,25)" fg:x="6455" fg:w="11"/><text x="6.1663%" y="1119.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="5.9163%" y="1093" width="0.0101%" height="15" fill="rgb(243,201,19)" fg:x="6455" fg:w="11"/><text x="6.1663%" y="1103.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="5.9163%" y="1077" width="0.0101%" height="15" fill="rgb(236,59,4)" fg:x="6455" fg:w="11"/><text x="6.1663%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (13 samples, 0.01%)</title><rect x="5.9264%" y="1141" width="0.0119%" height="15" fill="rgb(254,179,45)" fg:x="6466" fg:w="13"/><text x="6.1764%" y="1151.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (13 samples, 0.01%)</title><rect x="5.9264%" y="1125" width="0.0119%" height="15" fill="rgb(226,14,10)" fg:x="6466" fg:w="13"/><text x="6.1764%" y="1135.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (13 samples, 0.01%)</title><rect x="5.9264%" y="1109" width="0.0119%" height="15" fill="rgb(244,27,41)" fg:x="6466" fg:w="13"/><text x="6.1764%" y="1119.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (147 samples, 0.13%)</title><rect x="5.8137%" y="1189" width="0.1347%" height="15" fill="rgb(235,35,32)" fg:x="6343" fg:w="147"/><text x="6.0637%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.02%)</title><rect x="5.9264%" y="1173" width="0.0220%" height="15" fill="rgb(218,68,31)" fg:x="6466" fg:w="24"/><text x="6.1764%" y="1183.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::FromIterator&lt;(K,V)&gt; for halfbrown::HashMap&lt;K,V,S&gt;&gt;::from_iter (24 samples, 0.02%)</title><rect x="5.9264%" y="1157" width="0.0220%" height="15" fill="rgb(207,120,37)" fg:x="6466" fg:w="24"/><text x="6.1764%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.01%)</title><rect x="5.9383%" y="1141" width="0.0101%" height="15" fill="rgb(227,98,0)" fg:x="6479" fg:w="11"/><text x="6.1883%" y="1151.50"></text></g><g><title>[anon] (5,905 samples, 5.41%)</title><rect x="0.5563%" y="1205" width="5.4122%" height="15" fill="rgb(207,7,3)" fg:x="607" fg:w="5905"/><text x="0.8063%" y="1215.50">[anon]</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (20 samples, 0.02%)</title><rect x="5.9502%" y="1189" width="0.0183%" height="15" fill="rgb(206,98,19)" fg:x="6492" fg:w="20"/><text x="6.2002%" y="1199.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (14 samples, 0.01%)</title><rect x="5.9557%" y="1173" width="0.0128%" height="15" fill="rgb(217,5,26)" fg:x="6498" fg:w="14"/><text x="6.2057%" y="1183.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="5.9686%" y="1205" width="0.0128%" height="15" fill="rgb(235,190,38)" fg:x="6512" fg:w="14"/><text x="6.2186%" y="1215.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (15 samples, 0.01%)</title><rect x="5.9832%" y="1189" width="0.0137%" height="15" fill="rgb(247,86,24)" fg:x="6528" fg:w="15"/><text x="6.2332%" y="1199.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (27 samples, 0.02%)</title><rect x="5.9970%" y="1189" width="0.0247%" height="15" fill="rgb(205,101,16)" fg:x="6543" fg:w="27"/><text x="6.2470%" y="1199.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (27 samples, 0.02%)</title><rect x="5.9970%" y="1173" width="0.0247%" height="15" fill="rgb(246,168,33)" fg:x="6543" fg:w="27"/><text x="6.2470%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (27 samples, 0.02%)</title><rect x="5.9970%" y="1157" width="0.0247%" height="15" fill="rgb(231,114,1)" fg:x="6543" fg:w="27"/><text x="6.2470%" y="1167.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (27 samples, 0.02%)</title><rect x="5.9970%" y="1141" width="0.0247%" height="15" fill="rgb(207,184,53)" fg:x="6543" fg:w="27"/><text x="6.2470%" y="1151.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (21 samples, 0.02%)</title><rect x="6.0272%" y="1189" width="0.0192%" height="15" fill="rgb(224,95,51)" fg:x="6576" fg:w="21"/><text x="6.2772%" y="1199.50"></text></g><g><title>event_listener::Event::notify (11 samples, 0.01%)</title><rect x="6.0648%" y="1189" width="0.0101%" height="15" fill="rgb(212,188,45)" fg:x="6617" fg:w="11"/><text x="6.3148%" y="1199.50"></text></g><g><title>event_listener::full_fence (11 samples, 0.01%)</title><rect x="6.0648%" y="1173" width="0.0101%" height="15" fill="rgb(223,154,38)" fg:x="6617" fg:w="11"/><text x="6.3148%" y="1183.50"></text></g><g><title>[tremor-pdk] (107 samples, 0.10%)</title><rect x="5.9814%" y="1205" width="0.0981%" height="15" fill="rgb(251,22,52)" fg:x="6526" fg:w="107"/><text x="6.2314%" y="1215.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (76 samples, 0.07%)</title><rect x="6.0795%" y="1189" width="0.0697%" height="15" fill="rgb(229,209,22)" fg:x="6633" fg:w="76"/><text x="6.3295%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="6.1491%" y="1189" width="0.0119%" height="15" fill="rgb(234,138,34)" fg:x="6709" fg:w="13"/><text x="6.3991%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.05%)</title><rect x="6.1610%" y="1189" width="0.0467%" height="15" fill="rgb(212,95,11)" fg:x="6722" fg:w="51"/><text x="6.4110%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.09%)</title><rect x="6.2078%" y="1189" width="0.0926%" height="15" fill="rgb(240,179,47)" fg:x="6773" fg:w="101"/><text x="6.4578%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="6.3004%" y="1189" width="0.0147%" height="15" fill="rgb(240,163,11)" fg:x="6874" fg:w="16"/><text x="6.5504%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (62 samples, 0.06%)</title><rect x="6.3150%" y="1189" width="0.0568%" height="15" fill="rgb(236,37,12)" fg:x="6890" fg:w="62"/><text x="6.5650%" y="1199.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (111 samples, 0.10%)</title><rect x="6.3810%" y="1189" width="0.1017%" height="15" fill="rgb(232,164,16)" fg:x="6962" fg:w="111"/><text x="6.6310%" y="1199.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (28 samples, 0.03%)</title><rect x="6.4571%" y="1173" width="0.0257%" height="15" fill="rgb(244,205,15)" fg:x="7045" fg:w="28"/><text x="6.7071%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (12 samples, 0.01%)</title><rect x="6.4717%" y="1157" width="0.0110%" height="15" fill="rgb(223,117,47)" fg:x="7061" fg:w="12"/><text x="6.7217%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (17 samples, 0.02%)</title><rect x="6.7357%" y="405" width="0.0156%" height="15" fill="rgb(244,107,35)" fg:x="7349" fg:w="17"/><text x="6.9857%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="6.7705%" y="357" width="0.0119%" height="15" fill="rgb(205,140,8)" fg:x="7387" fg:w="13"/><text x="7.0205%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (13 samples, 0.01%)</title><rect x="6.7825%" y="357" width="0.0119%" height="15" fill="rgb(228,84,46)" fg:x="7400" fg:w="13"/><text x="7.0325%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (12 samples, 0.01%)</title><rect x="6.8210%" y="101" width="0.0110%" height="15" fill="rgb(254,188,9)" fg:x="7442" fg:w="12"/><text x="7.0710%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (23 samples, 0.02%)</title><rect x="6.8320%" y="101" width="0.0211%" height="15" fill="rgb(206,112,54)" fg:x="7454" fg:w="23"/><text x="7.0820%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (23 samples, 0.02%)</title><rect x="6.8320%" y="85" width="0.0211%" height="15" fill="rgb(216,84,49)" fg:x="7454" fg:w="23"/><text x="7.0820%" y="95.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (23 samples, 0.02%)</title><rect x="6.8320%" y="69" width="0.0211%" height="15" fill="rgb(214,194,35)" fg:x="7454" fg:w="23"/><text x="7.0820%" y="79.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="6.8402%" y="53" width="0.0128%" height="15" fill="rgb(249,28,3)" fg:x="7463" fg:w="14"/><text x="7.0902%" y="63.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="6.8402%" y="37" width="0.0128%" height="15" fill="rgb(222,56,52)" fg:x="7463" fg:w="14"/><text x="7.0902%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (47 samples, 0.04%)</title><rect x="6.8210%" y="133" width="0.0431%" height="15" fill="rgb(245,217,50)" fg:x="7442" fg:w="47"/><text x="7.0710%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (47 samples, 0.04%)</title><rect x="6.8210%" y="117" width="0.0431%" height="15" fill="rgb(213,201,24)" fg:x="7442" fg:w="47"/><text x="7.0710%" y="127.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="6.8530%" y="101" width="0.0110%" height="15" fill="rgb(248,116,28)" fg:x="7477" fg:w="12"/><text x="7.1030%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (55 samples, 0.05%)</title><rect x="6.8182%" y="181" width="0.0504%" height="15" fill="rgb(219,72,43)" fg:x="7439" fg:w="55"/><text x="7.0682%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (52 samples, 0.05%)</title><rect x="6.8210%" y="165" width="0.0477%" height="15" fill="rgb(209,138,14)" fg:x="7442" fg:w="52"/><text x="7.0710%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (52 samples, 0.05%)</title><rect x="6.8210%" y="149" width="0.0477%" height="15" fill="rgb(222,18,33)" fg:x="7442" fg:w="52"/><text x="7.0710%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (75 samples, 0.07%)</title><rect x="6.8008%" y="325" width="0.0687%" height="15" fill="rgb(213,199,7)" fg:x="7420" fg:w="75"/><text x="7.0508%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.07%)</title><rect x="6.8008%" y="309" width="0.0687%" height="15" fill="rgb(250,110,10)" fg:x="7420" fg:w="75"/><text x="7.0508%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (75 samples, 0.07%)</title><rect x="6.8008%" y="293" width="0.0687%" height="15" fill="rgb(248,123,6)" fg:x="7420" fg:w="75"/><text x="7.0508%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.07%)</title><rect x="6.8008%" y="277" width="0.0687%" height="15" fill="rgb(206,91,31)" fg:x="7420" fg:w="75"/><text x="7.0508%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (75 samples, 0.07%)</title><rect x="6.8008%" y="261" width="0.0687%" height="15" fill="rgb(211,154,13)" fg:x="7420" fg:w="75"/><text x="7.0508%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (68 samples, 0.06%)</title><rect x="6.8072%" y="245" width="0.0623%" height="15" fill="rgb(225,148,7)" fg:x="7427" fg:w="68"/><text x="7.0572%" y="255.50"></text></g><g><title>__rg_dealloc (68 samples, 0.06%)</title><rect x="6.8072%" y="229" width="0.0623%" height="15" fill="rgb(220,160,43)" fg:x="7427" fg:w="68"/><text x="7.0572%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (68 samples, 0.06%)</title><rect x="6.8072%" y="213" width="0.0623%" height="15" fill="rgb(213,52,39)" fg:x="7427" fg:w="68"/><text x="7.0572%" y="223.50"></text></g><g><title>rust_dealloc (61 samples, 0.06%)</title><rect x="6.8136%" y="197" width="0.0559%" height="15" fill="rgb(243,137,7)" fg:x="7434" fg:w="61"/><text x="7.0636%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (129 samples, 0.12%)</title><rect x="6.7577%" y="405" width="0.1182%" height="15" fill="rgb(230,79,13)" fg:x="7373" fg:w="129"/><text x="7.0077%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (121 samples, 0.11%)</title><rect x="6.7650%" y="389" width="0.1109%" height="15" fill="rgb(247,105,23)" fg:x="7381" fg:w="121"/><text x="7.0150%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (115 samples, 0.11%)</title><rect x="6.7705%" y="373" width="0.1054%" height="15" fill="rgb(223,179,41)" fg:x="7387" fg:w="115"/><text x="7.0205%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (89 samples, 0.08%)</title><rect x="6.7944%" y="357" width="0.0816%" height="15" fill="rgb(218,9,34)" fg:x="7413" fg:w="89"/><text x="7.0444%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.08%)</title><rect x="6.7944%" y="341" width="0.0816%" height="15" fill="rgb(222,106,8)" fg:x="7413" fg:w="89"/><text x="7.0444%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (162 samples, 0.15%)</title><rect x="6.7357%" y="421" width="0.1485%" height="15" fill="rgb(211,220,0)" fg:x="7349" fg:w="162"/><text x="6.9857%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (89 samples, 0.08%)</title><rect x="6.8842%" y="421" width="0.0816%" height="15" fill="rgb(229,52,16)" fg:x="7511" fg:w="89"/><text x="7.1342%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (56 samples, 0.05%)</title><rect x="6.9144%" y="405" width="0.0513%" height="15" fill="rgb(212,155,18)" fg:x="7544" fg:w="56"/><text x="7.1644%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (56 samples, 0.05%)</title><rect x="6.9144%" y="389" width="0.0513%" height="15" fill="rgb(242,21,14)" fg:x="7544" fg:w="56"/><text x="7.1644%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="6.9731%" y="357" width="0.0137%" height="15" fill="rgb(222,19,48)" fg:x="7608" fg:w="15"/><text x="7.2231%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="6.9731%" y="341" width="0.0137%" height="15" fill="rgb(232,45,27)" fg:x="7608" fg:w="15"/><text x="7.2231%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (25 samples, 0.02%)</title><rect x="6.9731%" y="373" width="0.0229%" height="15" fill="rgb(249,103,42)" fg:x="7608" fg:w="25"/><text x="7.2231%" y="383.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (409 samples, 0.37%)</title><rect x="6.6257%" y="917" width="0.3749%" height="15" fill="rgb(246,81,33)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (409 samples, 0.37%)</title><rect x="6.6257%" y="901" width="0.3749%" height="15" fill="rgb(252,33,42)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="911.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (409 samples, 0.37%)</title><rect x="6.6257%" y="885" width="0.3749%" height="15" fill="rgb(209,212,41)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="895.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (409 samples, 0.37%)</title><rect x="6.6257%" y="869" width="0.3749%" height="15" fill="rgb(207,154,6)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="879.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (409 samples, 0.37%)</title><rect x="6.6257%" y="853" width="0.3749%" height="15" fill="rgb(223,64,47)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="863.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (409 samples, 0.37%)</title><rect x="6.6257%" y="837" width="0.3749%" height="15" fill="rgb(211,161,38)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="847.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (409 samples, 0.37%)</title><rect x="6.6257%" y="821" width="0.3749%" height="15" fill="rgb(219,138,40)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="831.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (409 samples, 0.37%)</title><rect x="6.6257%" y="805" width="0.3749%" height="15" fill="rgb(241,228,46)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="815.50"></text></g><g><title>std::panic::catch_unwind (409 samples, 0.37%)</title><rect x="6.6257%" y="789" width="0.3749%" height="15" fill="rgb(223,209,38)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="799.50"></text></g><g><title>std::panicking::try (409 samples, 0.37%)</title><rect x="6.6257%" y="773" width="0.3749%" height="15" fill="rgb(236,164,45)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="783.50"></text></g><g><title>std::panicking::try::do_call (409 samples, 0.37%)</title><rect x="6.6257%" y="757" width="0.3749%" height="15" fill="rgb(231,15,5)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (409 samples, 0.37%)</title><rect x="6.6257%" y="741" width="0.3749%" height="15" fill="rgb(252,35,15)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (409 samples, 0.37%)</title><rect x="6.6257%" y="725" width="0.3749%" height="15" fill="rgb(248,181,18)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="735.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (409 samples, 0.37%)</title><rect x="6.6257%" y="709" width="0.3749%" height="15" fill="rgb(233,39,42)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="719.50"></text></g><g><title>async_ffi::FfiContext::with_context (409 samples, 0.37%)</title><rect x="6.6257%" y="693" width="0.3749%" height="15" fill="rgb(238,110,33)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="703.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (409 samples, 0.37%)</title><rect x="6.6257%" y="677" width="0.3749%" height="15" fill="rgb(233,195,10)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (409 samples, 0.37%)</title><rect x="6.6257%" y="661" width="0.3749%" height="15" fill="rgb(254,105,3)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (409 samples, 0.37%)</title><rect x="6.6257%" y="645" width="0.3749%" height="15" fill="rgb(221,225,9)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (409 samples, 0.37%)</title><rect x="6.6257%" y="629" width="0.3749%" height="15" fill="rgb(224,227,45)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="639.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (409 samples, 0.37%)</title><rect x="6.6257%" y="613" width="0.3749%" height="15" fill="rgb(229,198,43)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="623.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (409 samples, 0.37%)</title><rect x="6.6257%" y="597" width="0.3749%" height="15" fill="rgb(206,209,35)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (409 samples, 0.37%)</title><rect x="6.6257%" y="581" width="0.3749%" height="15" fill="rgb(245,195,53)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (409 samples, 0.37%)</title><rect x="6.6257%" y="565" width="0.3749%" height="15" fill="rgb(240,92,26)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="575.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (409 samples, 0.37%)</title><rect x="6.6257%" y="549" width="0.3749%" height="15" fill="rgb(207,40,23)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (409 samples, 0.37%)</title><rect x="6.6257%" y="533" width="0.3749%" height="15" fill="rgb(223,111,35)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (409 samples, 0.37%)</title><rect x="6.6257%" y="517" width="0.3749%" height="15" fill="rgb(229,147,28)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="527.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (409 samples, 0.37%)</title><rect x="6.6257%" y="501" width="0.3749%" height="15" fill="rgb(211,29,28)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (409 samples, 0.37%)</title><rect x="6.6257%" y="485" width="0.3749%" height="15" fill="rgb(228,72,33)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (409 samples, 0.37%)</title><rect x="6.6257%" y="469" width="0.3749%" height="15" fill="rgb(205,214,31)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="479.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (409 samples, 0.37%)</title><rect x="6.6257%" y="453" width="0.3749%" height="15" fill="rgb(224,111,15)" fg:x="7229" fg:w="409"/><text x="6.8757%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (289 samples, 0.26%)</title><rect x="6.7357%" y="437" width="0.2649%" height="15" fill="rgb(253,21,26)" fg:x="7349" fg:w="289"/><text x="6.9857%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (38 samples, 0.03%)</title><rect x="6.9658%" y="421" width="0.0348%" height="15" fill="rgb(245,139,43)" fg:x="7600" fg:w="38"/><text x="7.2158%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (38 samples, 0.03%)</title><rect x="6.9658%" y="405" width="0.0348%" height="15" fill="rgb(252,170,7)" fg:x="7600" fg:w="38"/><text x="7.2158%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.03%)</title><rect x="6.9731%" y="389" width="0.0275%" height="15" fill="rgb(231,118,14)" fg:x="7608" fg:w="30"/><text x="7.2231%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (15 samples, 0.01%)</title><rect x="7.0189%" y="837" width="0.0137%" height="15" fill="rgb(238,83,0)" fg:x="7658" fg:w="15"/><text x="7.2689%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (15 samples, 0.01%)</title><rect x="7.0189%" y="821" width="0.0137%" height="15" fill="rgb(221,39,39)" fg:x="7658" fg:w="15"/><text x="7.2689%" y="831.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (42 samples, 0.04%)</title><rect x="7.0519%" y="789" width="0.0385%" height="15" fill="rgb(222,119,46)" fg:x="7694" fg:w="42"/><text x="7.3019%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (109 samples, 0.10%)</title><rect x="7.0189%" y="853" width="0.0999%" height="15" fill="rgb(222,165,49)" fg:x="7658" fg:w="109"/><text x="7.2689%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (93 samples, 0.09%)</title><rect x="7.0336%" y="837" width="0.0852%" height="15" fill="rgb(219,113,52)" fg:x="7674" fg:w="93"/><text x="7.2836%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (93 samples, 0.09%)</title><rect x="7.0336%" y="821" width="0.0852%" height="15" fill="rgb(214,7,15)" fg:x="7674" fg:w="93"/><text x="7.2836%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (93 samples, 0.09%)</title><rect x="7.0336%" y="805" width="0.0852%" height="15" fill="rgb(235,32,4)" fg:x="7674" fg:w="93"/><text x="7.2836%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (31 samples, 0.03%)</title><rect x="7.0904%" y="789" width="0.0284%" height="15" fill="rgb(238,90,54)" fg:x="7736" fg:w="31"/><text x="7.3404%" y="799.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (539 samples, 0.49%)</title><rect x="6.6257%" y="1173" width="0.4940%" height="15" fill="rgb(213,208,19)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="1183.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (539 samples, 0.49%)</title><rect x="6.6257%" y="1157" width="0.4940%" height="15" fill="rgb(233,156,4)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (539 samples, 0.49%)</title><rect x="6.6257%" y="1141" width="0.4940%" height="15" fill="rgb(207,194,5)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="1151.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (539 samples, 0.49%)</title><rect x="6.6257%" y="1125" width="0.4940%" height="15" fill="rgb(206,111,30)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="1135.50"></text></g><g><title>async_task::runnable::Runnable::run (539 samples, 0.49%)</title><rect x="6.6257%" y="1109" width="0.4940%" height="15" fill="rgb(243,70,54)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="1119.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (539 samples, 0.49%)</title><rect x="6.6257%" y="1093" width="0.4940%" height="15" fill="rgb(242,28,8)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (539 samples, 0.49%)</title><rect x="6.6257%" y="1077" width="0.4940%" height="15" fill="rgb(219,106,18)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (539 samples, 0.49%)</title><rect x="6.6257%" y="1061" width="0.4940%" height="15" fill="rgb(244,222,10)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="1071.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (539 samples, 0.49%)</title><rect x="6.6257%" y="1045" width="0.4940%" height="15" fill="rgb(236,179,52)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="1055.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (539 samples, 0.49%)</title><rect x="6.6257%" y="1029" width="0.4940%" height="15" fill="rgb(213,23,39)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="1039.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (539 samples, 0.49%)</title><rect x="6.6257%" y="1013" width="0.4940%" height="15" fill="rgb(238,48,10)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (539 samples, 0.49%)</title><rect x="6.6257%" y="997" width="0.4940%" height="15" fill="rgb(251,196,23)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (539 samples, 0.49%)</title><rect x="6.6257%" y="981" width="0.4940%" height="15" fill="rgb(250,152,24)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (539 samples, 0.49%)</title><rect x="6.6257%" y="965" width="0.4940%" height="15" fill="rgb(209,150,17)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="975.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (539 samples, 0.49%)</title><rect x="6.6257%" y="949" width="0.4940%" height="15" fill="rgb(234,202,34)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (539 samples, 0.49%)</title><rect x="6.6257%" y="933" width="0.4940%" height="15" fill="rgb(253,148,53)" fg:x="7229" fg:w="539"/><text x="6.8757%" y="943.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (130 samples, 0.12%)</title><rect x="7.0006%" y="917" width="0.1192%" height="15" fill="rgb(218,129,16)" fg:x="7638" fg:w="130"/><text x="7.2506%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (130 samples, 0.12%)</title><rect x="7.0006%" y="901" width="0.1192%" height="15" fill="rgb(216,85,19)" fg:x="7638" fg:w="130"/><text x="7.2506%" y="911.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (130 samples, 0.12%)</title><rect x="7.0006%" y="885" width="0.1192%" height="15" fill="rgb(235,228,7)" fg:x="7638" fg:w="130"/><text x="7.2506%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (130 samples, 0.12%)</title><rect x="7.0006%" y="869" width="0.1192%" height="15" fill="rgb(245,175,0)" fg:x="7638" fg:w="130"/><text x="7.2506%" y="879.50"></text></g><g><title>event_listener::Inner::lock (21 samples, 0.02%)</title><rect x="7.1317%" y="933" width="0.0192%" height="15" fill="rgb(208,168,36)" fg:x="7781" fg:w="21"/><text x="7.3817%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.02%)</title><rect x="7.1317%" y="917" width="0.0192%" height="15" fill="rgb(246,171,24)" fg:x="7781" fg:w="21"/><text x="7.3817%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (21 samples, 0.02%)</title><rect x="7.1317%" y="901" width="0.0192%" height="15" fill="rgb(215,142,24)" fg:x="7781" fg:w="21"/><text x="7.3817%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (16 samples, 0.01%)</title><rect x="7.1362%" y="885" width="0.0147%" height="15" fill="rgb(250,187,7)" fg:x="7786" fg:w="16"/><text x="7.3862%" y="895.50"></text></g><g><title>___pthread_mutex_lock (16 samples, 0.01%)</title><rect x="7.1362%" y="869" width="0.0147%" height="15" fill="rgb(228,66,33)" fg:x="7786" fg:w="16"/><text x="7.3862%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (37 samples, 0.03%)</title><rect x="7.1197%" y="949" width="0.0339%" height="15" fill="rgb(234,215,21)" fg:x="7768" fg:w="37"/><text x="7.3697%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (307 samples, 0.28%)</title><rect x="7.2646%" y="901" width="0.2814%" height="15" fill="rgb(222,191,20)" fg:x="7926" fg:w="307"/><text x="7.5146%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (344 samples, 0.32%)</title><rect x="7.5478%" y="901" width="0.3153%" height="15" fill="rgb(245,79,54)" fg:x="8235" fg:w="344"/><text x="7.7978%" y="911.50"></text></g><g><title>core::ptr::read (344 samples, 0.32%)</title><rect x="7.5478%" y="885" width="0.3153%" height="15" fill="rgb(240,10,37)" fg:x="8235" fg:w="344"/><text x="7.7978%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (344 samples, 0.32%)</title><rect x="7.5478%" y="869" width="0.3153%" height="15" fill="rgb(214,192,32)" fg:x="8235" fg:w="344"/><text x="7.7978%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (361 samples, 0.33%)</title><rect x="7.8631%" y="901" width="0.3309%" height="15" fill="rgb(209,36,54)" fg:x="8579" fg:w="361"/><text x="8.1131%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (361 samples, 0.33%)</title><rect x="7.8631%" y="885" width="0.3309%" height="15" fill="rgb(220,10,11)" fg:x="8579" fg:w="361"/><text x="8.1131%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (418 samples, 0.38%)</title><rect x="8.1939%" y="901" width="0.3831%" height="15" fill="rgb(221,106,17)" fg:x="8940" fg:w="418"/><text x="8.4439%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (417 samples, 0.38%)</title><rect x="8.1949%" y="885" width="0.3822%" height="15" fill="rgb(251,142,44)" fg:x="8941" fg:w="417"/><text x="8.4449%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,558 samples, 1.43%)</title><rect x="7.1537%" y="933" width="1.4280%" height="15" fill="rgb(238,13,15)" fg:x="7805" fg:w="1558"/><text x="7.4037%" y="943.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,558 samples, 1.43%)</title><rect x="7.1537%" y="917" width="1.4280%" height="15" fill="rgb(208,107,27)" fg:x="7805" fg:w="1558"/><text x="7.4037%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (16 samples, 0.01%)</title><rect x="8.5871%" y="869" width="0.0147%" height="15" fill="rgb(205,136,37)" fg:x="9369" fg:w="16"/><text x="8.8371%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.01%)</title><rect x="8.5871%" y="853" width="0.0147%" height="15" fill="rgb(250,205,27)" fg:x="9369" fg:w="16"/><text x="8.8371%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.01%)</title><rect x="8.5871%" y="837" width="0.0147%" height="15" fill="rgb(210,80,43)" fg:x="9369" fg:w="16"/><text x="8.8371%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (54 samples, 0.05%)</title><rect x="8.6119%" y="757" width="0.0495%" height="15" fill="rgb(247,160,36)" fg:x="9396" fg:w="54"/><text x="8.8619%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (57 samples, 0.05%)</title><rect x="8.6101%" y="821" width="0.0522%" height="15" fill="rgb(234,13,49)" fg:x="9394" fg:w="57"/><text x="8.8601%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.05%)</title><rect x="8.6101%" y="805" width="0.0522%" height="15" fill="rgb(234,122,0)" fg:x="9394" fg:w="57"/><text x="8.8601%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (55 samples, 0.05%)</title><rect x="8.6119%" y="789" width="0.0504%" height="15" fill="rgb(207,146,38)" fg:x="9396" fg:w="55"/><text x="8.8619%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (55 samples, 0.05%)</title><rect x="8.6119%" y="773" width="0.0504%" height="15" fill="rgb(207,177,25)" fg:x="9396" fg:w="55"/><text x="8.8619%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (39 samples, 0.04%)</title><rect x="8.6623%" y="821" width="0.0357%" height="15" fill="rgb(211,178,42)" fg:x="9451" fg:w="39"/><text x="8.9123%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (39 samples, 0.04%)</title><rect x="8.6623%" y="805" width="0.0357%" height="15" fill="rgb(230,69,54)" fg:x="9451" fg:w="39"/><text x="8.9123%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (29 samples, 0.03%)</title><rect x="8.7246%" y="741" width="0.0266%" height="15" fill="rgb(214,135,41)" fg:x="9519" fg:w="29"/><text x="8.9746%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (29 samples, 0.03%)</title><rect x="8.7246%" y="725" width="0.0266%" height="15" fill="rgb(237,67,25)" fg:x="9519" fg:w="29"/><text x="8.9746%" y="735.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (26 samples, 0.02%)</title><rect x="8.7512%" y="741" width="0.0238%" height="15" fill="rgb(222,189,50)" fg:x="9548" fg:w="26"/><text x="9.0012%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (26 samples, 0.02%)</title><rect x="8.7512%" y="725" width="0.0238%" height="15" fill="rgb(245,148,34)" fg:x="9548" fg:w="26"/><text x="9.0012%" y="735.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (26 samples, 0.02%)</title><rect x="8.7512%" y="709" width="0.0238%" height="15" fill="rgb(222,29,6)" fg:x="9548" fg:w="26"/><text x="9.0012%" y="719.50"></text></g><g><title>__GI___pthread_cond_signal (26 samples, 0.02%)</title><rect x="8.7512%" y="693" width="0.0238%" height="15" fill="rgb(221,189,43)" fg:x="9548" fg:w="26"/><text x="9.0012%" y="703.50"></text></g><g><title>parking::Unparker::unpark (85 samples, 0.08%)</title><rect x="8.7109%" y="773" width="0.0779%" height="15" fill="rgb(207,36,27)" fg:x="9504" fg:w="85"/><text x="8.9609%" y="783.50"></text></g><g><title>parking::Inner::unpark (73 samples, 0.07%)</title><rect x="8.7219%" y="757" width="0.0669%" height="15" fill="rgb(217,90,24)" fg:x="9516" fg:w="73"/><text x="8.9719%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="8.7750%" y="741" width="0.0137%" height="15" fill="rgb(224,66,35)" fg:x="9574" fg:w="15"/><text x="9.0250%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="8.7750%" y="725" width="0.0137%" height="15" fill="rgb(221,13,50)" fg:x="9574" fg:w="15"/><text x="9.0250%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="8.7750%" y="709" width="0.0137%" height="15" fill="rgb(236,68,49)" fg:x="9574" fg:w="15"/><text x="9.0250%" y="719.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="8.7750%" y="693" width="0.0137%" height="15" fill="rgb(229,146,28)" fg:x="9574" fg:w="15"/><text x="9.0250%" y="703.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (104 samples, 0.10%)</title><rect x="8.6980%" y="789" width="0.0953%" height="15" fill="rgb(225,31,38)" fg:x="9490" fg:w="104"/><text x="8.9480%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (123 samples, 0.11%)</title><rect x="8.6980%" y="821" width="0.1127%" height="15" fill="rgb(250,208,3)" fg:x="9490" fg:w="123"/><text x="8.9480%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (123 samples, 0.11%)</title><rect x="8.6980%" y="805" width="0.1127%" height="15" fill="rgb(246,54,23)" fg:x="9490" fg:w="123"/><text x="8.9480%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="8.7934%" y="789" width="0.0174%" height="15" fill="rgb(243,76,11)" fg:x="9594" fg:w="19"/><text x="9.0434%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="8.7934%" y="773" width="0.0174%" height="15" fill="rgb(245,21,50)" fg:x="9594" fg:w="19"/><text x="9.0434%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (19 samples, 0.02%)</title><rect x="8.7934%" y="757" width="0.0174%" height="15" fill="rgb(228,9,43)" fg:x="9594" fg:w="19"/><text x="9.0434%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (19 samples, 0.02%)</title><rect x="8.7934%" y="741" width="0.0174%" height="15" fill="rgb(208,100,47)" fg:x="9594" fg:w="19"/><text x="9.0434%" y="751.50"></text></g><g><title>async_executor::State::notify (334 samples, 0.31%)</title><rect x="8.6018%" y="837" width="0.3061%" height="15" fill="rgb(232,26,8)" fg:x="9385" fg:w="334"/><text x="8.8518%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (106 samples, 0.10%)</title><rect x="8.8108%" y="821" width="0.0972%" height="15" fill="rgb(216,166,38)" fg:x="9613" fg:w="106"/><text x="9.0608%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (98 samples, 0.09%)</title><rect x="8.8181%" y="805" width="0.0898%" height="15" fill="rgb(251,202,51)" fg:x="9621" fg:w="98"/><text x="9.0681%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (82 samples, 0.08%)</title><rect x="8.8328%" y="789" width="0.0752%" height="15" fill="rgb(254,216,34)" fg:x="9637" fg:w="82"/><text x="9.0828%" y="799.50"></text></g><g><title>___pthread_mutex_lock (82 samples, 0.08%)</title><rect x="8.8328%" y="773" width="0.0752%" height="15" fill="rgb(251,32,27)" fg:x="9637" fg:w="82"/><text x="9.0828%" y="783.50"></text></g><g><title>__GI___lll_lock_wait (18 samples, 0.02%)</title><rect x="8.8914%" y="757" width="0.0165%" height="15" fill="rgb(208,127,28)" fg:x="9701" fg:w="18"/><text x="9.1414%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (44 samples, 0.04%)</title><rect x="8.9189%" y="805" width="0.0403%" height="15" fill="rgb(224,137,22)" fg:x="9731" fg:w="44"/><text x="9.1689%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (44 samples, 0.04%)</title><rect x="8.9189%" y="789" width="0.0403%" height="15" fill="rgb(254,70,32)" fg:x="9731" fg:w="44"/><text x="9.1689%" y="799.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (403 samples, 0.37%)</title><rect x="8.6018%" y="853" width="0.3694%" height="15" fill="rgb(229,75,37)" fg:x="9385" fg:w="403"/><text x="8.8518%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (69 samples, 0.06%)</title><rect x="8.9079%" y="837" width="0.0632%" height="15" fill="rgb(252,64,23)" fg:x="9719" fg:w="69"/><text x="9.1579%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (63 samples, 0.06%)</title><rect x="8.9134%" y="821" width="0.0577%" height="15" fill="rgb(232,162,48)" fg:x="9725" fg:w="63"/><text x="9.1634%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (43 samples, 0.04%)</title><rect x="8.9712%" y="853" width="0.0394%" height="15" fill="rgb(246,160,12)" fg:x="9788" fg:w="43"/><text x="9.2212%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (43 samples, 0.04%)</title><rect x="8.9712%" y="837" width="0.0394%" height="15" fill="rgb(247,166,0)" fg:x="9788" fg:w="43"/><text x="9.2212%" y="847.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,032 samples, 1.86%)</title><rect x="7.1537%" y="949" width="1.8624%" height="15" fill="rgb(249,219,21)" fg:x="7805" fg:w="2032"/><text x="7.4037%" y="959.50">a..</text></g><g><title>event_listener::Event::notify (474 samples, 0.43%)</title><rect x="8.5816%" y="933" width="0.4344%" height="15" fill="rgb(205,209,3)" fg:x="9363" fg:w="474"/><text x="8.8316%" y="943.50"></text></g><g><title>event_listener::List::notify (474 samples, 0.43%)</title><rect x="8.5816%" y="917" width="0.4344%" height="15" fill="rgb(243,44,1)" fg:x="9363" fg:w="474"/><text x="8.8316%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (468 samples, 0.43%)</title><rect x="8.5871%" y="901" width="0.4289%" height="15" fill="rgb(206,159,16)" fg:x="9369" fg:w="468"/><text x="8.8371%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (468 samples, 0.43%)</title><rect x="8.5871%" y="885" width="0.4289%" height="15" fill="rgb(244,77,30)" fg:x="9369" fg:w="468"/><text x="8.8371%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (452 samples, 0.41%)</title><rect x="8.6018%" y="869" width="0.4143%" height="15" fill="rgb(218,69,12)" fg:x="9385" fg:w="452"/><text x="8.8518%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,088 samples, 1.91%)</title><rect x="7.1197%" y="1029" width="1.9138%" height="15" fill="rgb(212,87,7)" fg:x="7768" fg:w="2088"/><text x="7.3697%" y="1039.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,088 samples, 1.91%)</title><rect x="7.1197%" y="1013" width="1.9138%" height="15" fill="rgb(245,114,25)" fg:x="7768" fg:w="2088"/><text x="7.3697%" y="1023.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,088 samples, 1.91%)</title><rect x="7.1197%" y="997" width="1.9138%" height="15" fill="rgb(210,61,42)" fg:x="7768" fg:w="2088"/><text x="7.3697%" y="1007.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,088 samples, 1.91%)</title><rect x="7.1197%" y="981" width="1.9138%" height="15" fill="rgb(211,52,33)" fg:x="7768" fg:w="2088"/><text x="7.3697%" y="991.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,088 samples, 1.91%)</title><rect x="7.1197%" y="965" width="1.9138%" height="15" fill="rgb(234,58,33)" fg:x="7768" fg:w="2088"/><text x="7.3697%" y="975.50">&lt;..</text></g><g><title>event_listener::Event::listen (19 samples, 0.02%)</title><rect x="9.0161%" y="949" width="0.0174%" height="15" fill="rgb(220,115,36)" fg:x="9837" fg:w="19"/><text x="9.2661%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (144 samples, 0.13%)</title><rect x="9.1829%" y="549" width="0.1320%" height="15" fill="rgb(243,153,54)" fg:x="10019" fg:w="144"/><text x="9.4329%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (144 samples, 0.13%)</title><rect x="9.1829%" y="533" width="0.1320%" height="15" fill="rgb(251,47,18)" fg:x="10019" fg:w="144"/><text x="9.4329%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (133 samples, 0.12%)</title><rect x="9.1930%" y="517" width="0.1219%" height="15" fill="rgb(242,102,42)" fg:x="10030" fg:w="133"/><text x="9.4430%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (115 samples, 0.11%)</title><rect x="9.2095%" y="501" width="0.1054%" height="15" fill="rgb(234,31,38)" fg:x="10048" fg:w="115"/><text x="9.4595%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (115 samples, 0.11%)</title><rect x="9.2095%" y="485" width="0.1054%" height="15" fill="rgb(221,117,51)" fg:x="10048" fg:w="115"/><text x="9.4595%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (160 samples, 0.15%)</title><rect x="9.1756%" y="661" width="0.1466%" height="15" fill="rgb(212,20,18)" fg:x="10011" fg:w="160"/><text x="9.4256%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (160 samples, 0.15%)</title><rect x="9.1756%" y="645" width="0.1466%" height="15" fill="rgb(245,133,36)" fg:x="10011" fg:w="160"/><text x="9.4256%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (160 samples, 0.15%)</title><rect x="9.1756%" y="629" width="0.1466%" height="15" fill="rgb(212,6,19)" fg:x="10011" fg:w="160"/><text x="9.4256%" y="639.50"></text></g><g><title>alloc::alloc::alloc (159 samples, 0.15%)</title><rect x="9.1765%" y="613" width="0.1457%" height="15" fill="rgb(218,1,36)" fg:x="10012" fg:w="159"/><text x="9.4265%" y="623.50"></text></g><g><title>__rg_alloc (159 samples, 0.15%)</title><rect x="9.1765%" y="597" width="0.1457%" height="15" fill="rgb(246,84,54)" fg:x="10012" fg:w="159"/><text x="9.4265%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (159 samples, 0.15%)</title><rect x="9.1765%" y="581" width="0.1457%" height="15" fill="rgb(242,110,6)" fg:x="10012" fg:w="159"/><text x="9.4265%" y="591.50"></text></g><g><title>rust_alloc (158 samples, 0.14%)</title><rect x="9.1774%" y="565" width="0.1448%" height="15" fill="rgb(214,47,5)" fg:x="10013" fg:w="158"/><text x="9.4274%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (61 samples, 0.06%)</title><rect x="9.4148%" y="597" width="0.0559%" height="15" fill="rgb(218,159,25)" fg:x="10272" fg:w="61"/><text x="9.6648%" y="607.50"></text></g><g><title>core::cmp::PartialOrd::ge (61 samples, 0.06%)</title><rect x="9.4148%" y="581" width="0.0559%" height="15" fill="rgb(215,211,28)" fg:x="10272" fg:w="61"/><text x="9.6648%" y="591.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (60 samples, 0.05%)</title><rect x="9.4157%" y="565" width="0.0550%" height="15" fill="rgb(238,59,32)" fg:x="10273" fg:w="60"/><text x="9.6657%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (60 samples, 0.05%)</title><rect x="9.4157%" y="549" width="0.0550%" height="15" fill="rgb(226,82,3)" fg:x="10273" fg:w="60"/><text x="9.6657%" y="559.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (60 samples, 0.05%)</title><rect x="9.4157%" y="533" width="0.0550%" height="15" fill="rgb(240,164,32)" fg:x="10273" fg:w="60"/><text x="9.6657%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (34 samples, 0.03%)</title><rect x="9.4395%" y="517" width="0.0312%" height="15" fill="rgb(232,46,7)" fg:x="10299" fg:w="34"/><text x="9.6895%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (130 samples, 0.12%)</title><rect x="9.3699%" y="629" width="0.1192%" height="15" fill="rgb(229,129,53)" fg:x="10223" fg:w="130"/><text x="9.6199%" y="639.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (130 samples, 0.12%)</title><rect x="9.3699%" y="613" width="0.1192%" height="15" fill="rgb(234,188,29)" fg:x="10223" fg:w="130"/><text x="9.6199%" y="623.50"></text></g><g><title>core::time::Duration::new (20 samples, 0.02%)</title><rect x="9.4707%" y="597" width="0.0183%" height="15" fill="rgb(246,141,4)" fg:x="10333" fg:w="20"/><text x="9.7207%" y="607.50"></text></g><g><title>std::time::SystemTime::duration_since (134 samples, 0.12%)</title><rect x="9.3699%" y="645" width="0.1228%" height="15" fill="rgb(229,23,39)" fg:x="10223" fg:w="134"/><text x="9.6199%" y="655.50"></text></g><g><title>__clock_gettime_2 (392 samples, 0.36%)</title><rect x="9.5944%" y="597" width="0.3593%" height="15" fill="rgb(206,12,3)" fg:x="10468" fg:w="392"/><text x="9.8444%" y="607.50"></text></g><g><title>__vdso_clock_gettime (376 samples, 0.34%)</title><rect x="9.6091%" y="581" width="0.3446%" height="15" fill="rgb(252,226,20)" fg:x="10484" fg:w="376"/><text x="9.8591%" y="591.50"></text></g><g><title>[[vdso]] (237 samples, 0.22%)</title><rect x="9.7365%" y="565" width="0.2172%" height="15" fill="rgb(216,123,35)" fg:x="10623" fg:w="237"/><text x="9.9865%" y="575.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (3,093 samples, 2.83%)</title><rect x="7.1197%" y="1045" width="2.8349%" height="15" fill="rgb(212,68,40)" fg:x="7768" fg:w="3093"/><text x="7.3697%" y="1055.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,005 samples, 0.92%)</title><rect x="9.0335%" y="1029" width="0.9211%" height="15" fill="rgb(254,125,32)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,005 samples, 0.92%)</title><rect x="9.0335%" y="1013" width="0.9211%" height="15" fill="rgb(253,97,22)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="1023.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,005 samples, 0.92%)</title><rect x="9.0335%" y="997" width="0.9211%" height="15" fill="rgb(241,101,14)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="1007.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,005 samples, 0.92%)</title><rect x="9.0335%" y="981" width="0.9211%" height="15" fill="rgb(238,103,29)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="991.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,005 samples, 0.92%)</title><rect x="9.0335%" y="965" width="0.9211%" height="15" fill="rgb(233,195,47)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="975.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,005 samples, 0.92%)</title><rect x="9.0335%" y="949" width="0.9211%" height="15" fill="rgb(246,218,30)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="959.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,005 samples, 0.92%)</title><rect x="9.0335%" y="933" width="0.9211%" height="15" fill="rgb(219,145,47)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1,005 samples, 0.92%)</title><rect x="9.0335%" y="917" width="0.9211%" height="15" fill="rgb(243,12,26)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="927.50"></text></g><g><title>std::panicking::try (1,005 samples, 0.92%)</title><rect x="9.0335%" y="901" width="0.9211%" height="15" fill="rgb(214,87,16)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1,005 samples, 0.92%)</title><rect x="9.0335%" y="885" width="0.9211%" height="15" fill="rgb(208,99,42)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="895.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,005 samples, 0.92%)</title><rect x="9.0335%" y="869" width="0.9211%" height="15" fill="rgb(253,99,2)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,005 samples, 0.92%)</title><rect x="9.0335%" y="853" width="0.9211%" height="15" fill="rgb(220,168,23)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="863.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,005 samples, 0.92%)</title><rect x="9.0335%" y="837" width="0.9211%" height="15" fill="rgb(242,38,24)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="847.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,005 samples, 0.92%)</title><rect x="9.0335%" y="821" width="0.9211%" height="15" fill="rgb(225,182,9)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="831.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,005 samples, 0.92%)</title><rect x="9.0335%" y="805" width="0.9211%" height="15" fill="rgb(243,178,37)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,005 samples, 0.92%)</title><rect x="9.0335%" y="789" width="0.9211%" height="15" fill="rgb(232,139,19)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="799.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,005 samples, 0.92%)</title><rect x="9.0335%" y="773" width="0.9211%" height="15" fill="rgb(225,201,24)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="783.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,005 samples, 0.92%)</title><rect x="9.0335%" y="757" width="0.9211%" height="15" fill="rgb(221,47,46)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="767.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,005 samples, 0.92%)</title><rect x="9.0335%" y="741" width="0.9211%" height="15" fill="rgb(249,23,13)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="751.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,005 samples, 0.92%)</title><rect x="9.0335%" y="725" width="0.9211%" height="15" fill="rgb(219,9,5)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,005 samples, 0.92%)</title><rect x="9.0335%" y="709" width="0.9211%" height="15" fill="rgb(254,171,16)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="719.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,005 samples, 0.92%)</title><rect x="9.0335%" y="693" width="0.9211%" height="15" fill="rgb(230,171,20)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="703.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (1,005 samples, 0.92%)</title><rect x="9.0335%" y="677" width="0.9211%" height="15" fill="rgb(210,71,41)" fg:x="9856" fg:w="1005"/><text x="9.2835%" y="687.50"></text></g><g><title>tremor_common::time::nanotime (664 samples, 0.61%)</title><rect x="9.3460%" y="661" width="0.6086%" height="15" fill="rgb(206,173,20)" fg:x="10197" fg:w="664"/><text x="9.5960%" y="671.50"></text></g><g><title>std::time::SystemTime::now (504 samples, 0.46%)</title><rect x="9.4927%" y="645" width="0.4619%" height="15" fill="rgb(233,88,34)" fg:x="10357" fg:w="504"/><text x="9.7427%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (504 samples, 0.46%)</title><rect x="9.4927%" y="629" width="0.4619%" height="15" fill="rgb(223,209,46)" fg:x="10357" fg:w="504"/><text x="9.7427%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::now (504 samples, 0.46%)</title><rect x="9.4927%" y="613" width="0.4619%" height="15" fill="rgb(250,43,18)" fg:x="10357" fg:w="504"/><text x="9.7427%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (11 samples, 0.01%)</title><rect x="9.9546%" y="309" width="0.0101%" height="15" fill="rgb(208,13,10)" fg:x="10861" fg:w="11"/><text x="10.2046%" y="319.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (14 samples, 0.01%)</title><rect x="9.9711%" y="293" width="0.0128%" height="15" fill="rgb(212,200,36)" fg:x="10879" fg:w="14"/><text x="10.2211%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (90 samples, 0.08%)</title><rect x="9.9546%" y="341" width="0.0825%" height="15" fill="rgb(225,90,30)" fg:x="10861" fg:w="90"/><text x="10.2046%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (90 samples, 0.08%)</title><rect x="9.9546%" y="325" width="0.0825%" height="15" fill="rgb(236,182,39)" fg:x="10861" fg:w="90"/><text x="10.2046%" y="335.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (79 samples, 0.07%)</title><rect x="9.9647%" y="309" width="0.0724%" height="15" fill="rgb(212,144,35)" fg:x="10872" fg:w="79"/><text x="10.2147%" y="319.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (58 samples, 0.05%)</title><rect x="9.9840%" y="293" width="0.0532%" height="15" fill="rgb(228,63,44)" fg:x="10893" fg:w="58"/><text x="10.2340%" y="303.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (58 samples, 0.05%)</title><rect x="9.9840%" y="277" width="0.0532%" height="15" fill="rgb(228,109,6)" fg:x="10893" fg:w="58"/><text x="10.2340%" y="287.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (58 samples, 0.05%)</title><rect x="9.9840%" y="261" width="0.0532%" height="15" fill="rgb(238,117,24)" fg:x="10893" fg:w="58"/><text x="10.2340%" y="271.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (91 samples, 0.08%)</title><rect x="9.9546%" y="645" width="0.0834%" height="15" fill="rgb(242,26,26)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (91 samples, 0.08%)</title><rect x="9.9546%" y="629" width="0.0834%" height="15" fill="rgb(221,92,48)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="639.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (91 samples, 0.08%)</title><rect x="9.9546%" y="613" width="0.0834%" height="15" fill="rgb(209,209,32)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (91 samples, 0.08%)</title><rect x="9.9546%" y="597" width="0.0834%" height="15" fill="rgb(221,70,22)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (91 samples, 0.08%)</title><rect x="9.9546%" y="581" width="0.0834%" height="15" fill="rgb(248,145,5)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (91 samples, 0.08%)</title><rect x="9.9546%" y="565" width="0.0834%" height="15" fill="rgb(226,116,26)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (91 samples, 0.08%)</title><rect x="9.9546%" y="549" width="0.0834%" height="15" fill="rgb(244,5,17)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (91 samples, 0.08%)</title><rect x="9.9546%" y="533" width="0.0834%" height="15" fill="rgb(252,159,33)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (91 samples, 0.08%)</title><rect x="9.9546%" y="517" width="0.0834%" height="15" fill="rgb(206,71,0)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (91 samples, 0.08%)</title><rect x="9.9546%" y="501" width="0.0834%" height="15" fill="rgb(233,118,54)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (91 samples, 0.08%)</title><rect x="9.9546%" y="485" width="0.0834%" height="15" fill="rgb(234,83,48)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (91 samples, 0.08%)</title><rect x="9.9546%" y="469" width="0.0834%" height="15" fill="rgb(228,3,54)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="479.50"></text></g><g><title>alloc::alloc::alloc (91 samples, 0.08%)</title><rect x="9.9546%" y="453" width="0.0834%" height="15" fill="rgb(226,155,13)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="463.50"></text></g><g><title>__rg_alloc (91 samples, 0.08%)</title><rect x="9.9546%" y="437" width="0.0834%" height="15" fill="rgb(241,28,37)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (91 samples, 0.08%)</title><rect x="9.9546%" y="421" width="0.0834%" height="15" fill="rgb(233,93,10)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="431.50"></text></g><g><title>rust_alloc (91 samples, 0.08%)</title><rect x="9.9546%" y="405" width="0.0834%" height="15" fill="rgb(225,113,19)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.08%)</title><rect x="9.9546%" y="389" width="0.0834%" height="15" fill="rgb(241,2,18)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.08%)</title><rect x="9.9546%" y="373" width="0.0834%" height="15" fill="rgb(228,207,21)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.08%)</title><rect x="9.9546%" y="357" width="0.0834%" height="15" fill="rgb(213,211,35)" fg:x="10861" fg:w="91"/><text x="10.2046%" y="367.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (135 samples, 0.12%)</title><rect x="9.9546%" y="757" width="0.1237%" height="15" fill="rgb(209,83,10)" fg:x="10861" fg:w="135"/><text x="10.2046%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (135 samples, 0.12%)</title><rect x="9.9546%" y="741" width="0.1237%" height="15" fill="rgb(209,164,1)" fg:x="10861" fg:w="135"/><text x="10.2046%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (135 samples, 0.12%)</title><rect x="9.9546%" y="725" width="0.1237%" height="15" fill="rgb(213,184,43)" fg:x="10861" fg:w="135"/><text x="10.2046%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (135 samples, 0.12%)</title><rect x="9.9546%" y="709" width="0.1237%" height="15" fill="rgb(231,61,34)" fg:x="10861" fg:w="135"/><text x="10.2046%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (135 samples, 0.12%)</title><rect x="9.9546%" y="693" width="0.1237%" height="15" fill="rgb(235,75,3)" fg:x="10861" fg:w="135"/><text x="10.2046%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (135 samples, 0.12%)</title><rect x="9.9546%" y="677" width="0.1237%" height="15" fill="rgb(220,106,47)" fg:x="10861" fg:w="135"/><text x="10.2046%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (135 samples, 0.12%)</title><rect x="9.9546%" y="661" width="0.1237%" height="15" fill="rgb(210,196,33)" fg:x="10861" fg:w="135"/><text x="10.2046%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (44 samples, 0.04%)</title><rect x="10.0380%" y="645" width="0.0403%" height="15" fill="rgb(229,154,42)" fg:x="10952" fg:w="44"/><text x="10.2880%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (44 samples, 0.04%)</title><rect x="10.0380%" y="629" width="0.0403%" height="15" fill="rgb(228,114,26)" fg:x="10952" fg:w="44"/><text x="10.2880%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (44 samples, 0.04%)</title><rect x="10.0380%" y="613" width="0.0403%" height="15" fill="rgb(208,144,1)" fg:x="10952" fg:w="44"/><text x="10.2880%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (44 samples, 0.04%)</title><rect x="10.0380%" y="597" width="0.0403%" height="15" fill="rgb(239,112,37)" fg:x="10952" fg:w="44"/><text x="10.2880%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (44 samples, 0.04%)</title><rect x="10.0380%" y="581" width="0.0403%" height="15" fill="rgb(210,96,50)" fg:x="10952" fg:w="44"/><text x="10.2880%" y="591.50"></text></g><g><title>alloc::alloc::alloc (44 samples, 0.04%)</title><rect x="10.0380%" y="565" width="0.0403%" height="15" fill="rgb(222,178,2)" fg:x="10952" fg:w="44"/><text x="10.2880%" y="575.50"></text></g><g><title>__rg_alloc (44 samples, 0.04%)</title><rect x="10.0380%" y="549" width="0.0403%" height="15" fill="rgb(226,74,18)" fg:x="10952" fg:w="44"/><text x="10.2880%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (44 samples, 0.04%)</title><rect x="10.0380%" y="533" width="0.0403%" height="15" fill="rgb(225,67,54)" fg:x="10952" fg:w="44"/><text x="10.2880%" y="543.50"></text></g><g><title>rust_alloc (44 samples, 0.04%)</title><rect x="10.0380%" y="517" width="0.0403%" height="15" fill="rgb(251,92,32)" fg:x="10952" fg:w="44"/><text x="10.2880%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="10.0380%" y="501" width="0.0403%" height="15" fill="rgb(228,149,22)" fg:x="10952" fg:w="44"/><text x="10.2880%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="10.0380%" y="485" width="0.0403%" height="15" fill="rgb(243,54,13)" fg:x="10952" fg:w="44"/><text x="10.2880%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="10.0380%" y="469" width="0.0403%" height="15" fill="rgb(243,180,28)" fg:x="10952" fg:w="44"/><text x="10.2880%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="10.0380%" y="453" width="0.0403%" height="15" fill="rgb(208,167,24)" fg:x="10952" fg:w="44"/><text x="10.2880%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (44 samples, 0.04%)</title><rect x="10.0380%" y="437" width="0.0403%" height="15" fill="rgb(245,73,45)" fg:x="10952" fg:w="44"/><text x="10.2880%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (36 samples, 0.03%)</title><rect x="10.0454%" y="421" width="0.0330%" height="15" fill="rgb(237,203,48)" fg:x="10960" fg:w="36"/><text x="10.2954%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (26 samples, 0.02%)</title><rect x="10.0545%" y="405" width="0.0238%" height="15" fill="rgb(211,197,16)" fg:x="10970" fg:w="26"/><text x="10.3045%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="10.0545%" y="389" width="0.0238%" height="15" fill="rgb(243,99,51)" fg:x="10970" fg:w="26"/><text x="10.3045%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="10.0545%" y="373" width="0.0238%" height="15" fill="rgb(215,123,29)" fg:x="10970" fg:w="26"/><text x="10.3045%" y="383.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (137 samples, 0.13%)</title><rect x="9.9546%" y="1013" width="0.1256%" height="15" fill="rgb(239,186,37)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="1023.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (137 samples, 0.13%)</title><rect x="9.9546%" y="997" width="0.1256%" height="15" fill="rgb(252,136,39)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="1007.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (137 samples, 0.13%)</title><rect x="9.9546%" y="981" width="0.1256%" height="15" fill="rgb(223,213,32)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="991.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (137 samples, 0.13%)</title><rect x="9.9546%" y="965" width="0.1256%" height="15" fill="rgb(233,115,5)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="975.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (137 samples, 0.13%)</title><rect x="9.9546%" y="949" width="0.1256%" height="15" fill="rgb(207,226,44)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="959.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (137 samples, 0.13%)</title><rect x="9.9546%" y="933" width="0.1256%" height="15" fill="rgb(208,126,0)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="943.50"></text></g><g><title>std::panic::catch_unwind (137 samples, 0.13%)</title><rect x="9.9546%" y="917" width="0.1256%" height="15" fill="rgb(244,66,21)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="927.50"></text></g><g><title>std::panicking::try (137 samples, 0.13%)</title><rect x="9.9546%" y="901" width="0.1256%" height="15" fill="rgb(222,97,12)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="911.50"></text></g><g><title>std::panicking::try::do_call (137 samples, 0.13%)</title><rect x="9.9546%" y="885" width="0.1256%" height="15" fill="rgb(219,213,19)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="895.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (137 samples, 0.13%)</title><rect x="9.9546%" y="869" width="0.1256%" height="15" fill="rgb(252,169,30)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (137 samples, 0.13%)</title><rect x="9.9546%" y="853" width="0.1256%" height="15" fill="rgb(206,32,51)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="863.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (137 samples, 0.13%)</title><rect x="9.9546%" y="837" width="0.1256%" height="15" fill="rgb(250,172,42)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="847.50"></text></g><g><title>async_ffi::FfiContext::with_context (137 samples, 0.13%)</title><rect x="9.9546%" y="821" width="0.1256%" height="15" fill="rgb(209,34,43)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="831.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (137 samples, 0.13%)</title><rect x="9.9546%" y="805" width="0.1256%" height="15" fill="rgb(223,11,35)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (137 samples, 0.13%)</title><rect x="9.9546%" y="789" width="0.1256%" height="15" fill="rgb(251,219,26)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="799.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (137 samples, 0.13%)</title><rect x="9.9546%" y="773" width="0.1256%" height="15" fill="rgb(231,119,3)" fg:x="10861" fg:w="137"/><text x="10.2046%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (144 samples, 0.13%)</title><rect x="10.1077%" y="949" width="0.1320%" height="15" fill="rgb(216,97,11)" fg:x="11028" fg:w="144"/><text x="10.3577%" y="959.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="10.3845%" y="901" width="0.0101%" height="15" fill="rgb(223,59,9)" fg:x="11330" fg:w="11"/><text x="10.6345%" y="911.50"></text></g><g><title>concurrent_queue::full_fence (20 samples, 0.02%)</title><rect x="10.5825%" y="869" width="0.0183%" height="15" fill="rgb(233,93,31)" fg:x="11546" fg:w="20"/><text x="10.8325%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (20 samples, 0.02%)</title><rect x="10.5825%" y="853" width="0.0183%" height="15" fill="rgb(239,81,33)" fg:x="11546" fg:w="20"/><text x="10.8325%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (20 samples, 0.02%)</title><rect x="10.5825%" y="837" width="0.0183%" height="15" fill="rgb(213,120,34)" fg:x="11546" fg:w="20"/><text x="10.8325%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.02%)</title><rect x="10.5825%" y="821" width="0.0183%" height="15" fill="rgb(243,49,53)" fg:x="11546" fg:w="20"/><text x="10.8325%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (386 samples, 0.35%)</title><rect x="10.6045%" y="869" width="0.3538%" height="15" fill="rgb(247,216,33)" fg:x="11570" fg:w="386"/><text x="10.8545%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (386 samples, 0.35%)</title><rect x="10.6045%" y="853" width="0.3538%" height="15" fill="rgb(226,26,14)" fg:x="11570" fg:w="386"/><text x="10.8545%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (449 samples, 0.41%)</title><rect x="10.9583%" y="869" width="0.4115%" height="15" fill="rgb(215,49,53)" fg:x="11956" fg:w="449"/><text x="11.2083%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (446 samples, 0.41%)</title><rect x="10.9610%" y="853" width="0.4088%" height="15" fill="rgb(245,162,40)" fg:x="11959" fg:w="446"/><text x="11.2110%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,072 samples, 0.98%)</title><rect x="10.3946%" y="901" width="0.9825%" height="15" fill="rgb(229,68,17)" fg:x="11341" fg:w="1072"/><text x="10.6446%" y="911.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (979 samples, 0.90%)</title><rect x="10.4798%" y="885" width="0.8973%" height="15" fill="rgb(213,182,10)" fg:x="11434" fg:w="979"/><text x="10.7298%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (52 samples, 0.05%)</title><rect x="11.3973%" y="805" width="0.0477%" height="15" fill="rgb(245,125,30)" fg:x="12435" fg:w="52"/><text x="11.6473%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (58 samples, 0.05%)</title><rect x="11.3945%" y="885" width="0.0532%" height="15" fill="rgb(232,202,2)" fg:x="12432" fg:w="58"/><text x="11.6445%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (55 samples, 0.05%)</title><rect x="11.3973%" y="869" width="0.0504%" height="15" fill="rgb(237,140,51)" fg:x="12435" fg:w="55"/><text x="11.6473%" y="879.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.05%)</title><rect x="11.3973%" y="853" width="0.0504%" height="15" fill="rgb(236,157,25)" fg:x="12435" fg:w="55"/><text x="11.6473%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (55 samples, 0.05%)</title><rect x="11.3973%" y="837" width="0.0504%" height="15" fill="rgb(219,209,0)" fg:x="12435" fg:w="55"/><text x="11.6473%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (55 samples, 0.05%)</title><rect x="11.3973%" y="821" width="0.0504%" height="15" fill="rgb(240,116,54)" fg:x="12435" fg:w="55"/><text x="11.6473%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17 samples, 0.02%)</title><rect x="11.4477%" y="885" width="0.0156%" height="15" fill="rgb(216,10,36)" fg:x="12490" fg:w="17"/><text x="11.6977%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.02%)</title><rect x="11.4477%" y="869" width="0.0156%" height="15" fill="rgb(222,72,44)" fg:x="12490" fg:w="17"/><text x="11.6977%" y="879.50"></text></g><g><title>event_listener::Inner::lock (125 samples, 0.11%)</title><rect x="11.4642%" y="885" width="0.1146%" height="15" fill="rgb(232,159,9)" fg:x="12508" fg:w="125"/><text x="11.7142%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (125 samples, 0.11%)</title><rect x="11.4642%" y="869" width="0.1146%" height="15" fill="rgb(210,39,32)" fg:x="12508" fg:w="125"/><text x="11.7142%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (124 samples, 0.11%)</title><rect x="11.4651%" y="853" width="0.1137%" height="15" fill="rgb(216,194,45)" fg:x="12509" fg:w="124"/><text x="11.7151%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (118 samples, 0.11%)</title><rect x="11.4706%" y="837" width="0.1082%" height="15" fill="rgb(218,18,35)" fg:x="12515" fg:w="118"/><text x="11.7206%" y="847.50"></text></g><g><title>___pthread_mutex_lock (118 samples, 0.11%)</title><rect x="11.4706%" y="821" width="0.1082%" height="15" fill="rgb(207,83,51)" fg:x="12515" fg:w="118"/><text x="11.7206%" y="831.50"></text></g><g><title>__GI___lll_lock_wait (16 samples, 0.01%)</title><rect x="11.5641%" y="805" width="0.0147%" height="15" fill="rgb(225,63,43)" fg:x="12617" fg:w="16"/><text x="11.8141%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (11 samples, 0.01%)</title><rect x="11.5815%" y="837" width="0.0101%" height="15" fill="rgb(207,57,36)" fg:x="12636" fg:w="11"/><text x="11.8315%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (24 samples, 0.02%)</title><rect x="11.5943%" y="821" width="0.0220%" height="15" fill="rgb(216,99,33)" fg:x="12650" fg:w="24"/><text x="11.8443%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (24 samples, 0.02%)</title><rect x="11.5943%" y="805" width="0.0220%" height="15" fill="rgb(225,42,16)" fg:x="12650" fg:w="24"/><text x="11.8443%" y="815.50"></text></g><g><title>event_listener::List::notify (47 samples, 0.04%)</title><rect x="11.5788%" y="885" width="0.0431%" height="15" fill="rgb(220,201,45)" fg:x="12633" fg:w="47"/><text x="11.8288%" y="895.50"></text></g><g><title>core::task::wake::Waker::wake (44 samples, 0.04%)</title><rect x="11.5815%" y="869" width="0.0403%" height="15" fill="rgb(225,33,4)" fg:x="12636" fg:w="44"/><text x="11.8315%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (44 samples, 0.04%)</title><rect x="11.5815%" y="853" width="0.0403%" height="15" fill="rgb(224,33,50)" fg:x="12636" fg:w="44"/><text x="11.8315%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (33 samples, 0.03%)</title><rect x="11.5916%" y="837" width="0.0302%" height="15" fill="rgb(246,198,51)" fg:x="12647" fg:w="33"/><text x="11.8416%" y="847.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,081 samples, 1.91%)</title><rect x="10.3707%" y="917" width="1.9073%" height="15" fill="rgb(205,22,4)" fg:x="11315" fg:w="2081"/><text x="10.6207%" y="927.50">a..</text></g><g><title>event_listener::Event::notify (983 samples, 0.90%)</title><rect x="11.3771%" y="901" width="0.9010%" height="15" fill="rgb(206,3,8)" fg:x="12413" fg:w="983"/><text x="11.6271%" y="911.50"></text></g><g><title>event_listener::full_fence (716 samples, 0.66%)</title><rect x="11.6218%" y="885" width="0.6562%" height="15" fill="rgb(251,23,15)" fg:x="12680" fg:w="716"/><text x="11.8718%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (705 samples, 0.65%)</title><rect x="11.6319%" y="869" width="0.6462%" height="15" fill="rgb(252,88,28)" fg:x="12691" fg:w="705"/><text x="11.8819%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (705 samples, 0.65%)</title><rect x="11.6319%" y="853" width="0.6462%" height="15" fill="rgb(212,127,14)" fg:x="12691" fg:w="705"/><text x="11.8819%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (31 samples, 0.03%)</title><rect x="12.2781%" y="917" width="0.0284%" height="15" fill="rgb(247,145,37)" fg:x="13396" fg:w="31"/><text x="12.5281%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (12 samples, 0.01%)</title><rect x="12.3065%" y="917" width="0.0110%" height="15" fill="rgb(209,117,53)" fg:x="13427" fg:w="12"/><text x="12.5565%" y="927.50"></text></g><g><title>core::mem::replace (12 samples, 0.01%)</title><rect x="12.3065%" y="901" width="0.0110%" height="15" fill="rgb(212,90,42)" fg:x="13427" fg:w="12"/><text x="12.5565%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="12.3193%" y="901" width="0.0229%" height="15" fill="rgb(218,164,37)" fg:x="13441" fg:w="25"/><text x="12.5693%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.02%)</title><rect x="12.3193%" y="885" width="0.0229%" height="15" fill="rgb(246,65,34)" fg:x="13441" fg:w="25"/><text x="12.5693%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.02%)</title><rect x="12.3193%" y="869" width="0.0229%" height="15" fill="rgb(231,100,33)" fg:x="13441" fg:w="25"/><text x="12.5693%" y="879.50"></text></g><g><title>event_listener::Event::listen (53 samples, 0.05%)</title><rect x="12.3184%" y="917" width="0.0486%" height="15" fill="rgb(228,126,14)" fg:x="13440" fg:w="53"/><text x="12.5684%" y="927.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,496 samples, 2.29%)</title><rect x="10.3130%" y="933" width="2.2877%" height="15" fill="rgb(215,173,21)" fg:x="11252" fg:w="2496"/><text x="10.5630%" y="943.50">&lt;..</text></g><g><title>event_listener::Event::notify (255 samples, 0.23%)</title><rect x="12.3670%" y="917" width="0.2337%" height="15" fill="rgb(210,6,40)" fg:x="13493" fg:w="255"/><text x="12.6170%" y="927.50"></text></g><g><title>event_listener::full_fence (233 samples, 0.21%)</title><rect x="12.3871%" y="901" width="0.2136%" height="15" fill="rgb(212,48,18)" fg:x="13515" fg:w="233"/><text x="12.6371%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (223 samples, 0.20%)</title><rect x="12.3963%" y="885" width="0.2044%" height="15" fill="rgb(230,214,11)" fg:x="13525" fg:w="223"/><text x="12.6463%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (223 samples, 0.20%)</title><rect x="12.3963%" y="869" width="0.2044%" height="15" fill="rgb(254,105,39)" fg:x="13525" fg:w="223"/><text x="12.6463%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (22 samples, 0.02%)</title><rect x="12.6126%" y="869" width="0.0202%" height="15" fill="rgb(245,158,5)" fg:x="13761" fg:w="22"/><text x="12.8626%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (21 samples, 0.02%)</title><rect x="12.6135%" y="853" width="0.0192%" height="15" fill="rgb(249,208,11)" fg:x="13762" fg:w="21"/><text x="12.8635%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="12.6135%" y="837" width="0.0192%" height="15" fill="rgb(210,39,28)" fg:x="13762" fg:w="21"/><text x="12.8635%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (19 samples, 0.02%)</title><rect x="12.6154%" y="821" width="0.0174%" height="15" fill="rgb(211,56,53)" fg:x="13764" fg:w="19"/><text x="12.8654%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (19 samples, 0.02%)</title><rect x="12.6154%" y="805" width="0.0174%" height="15" fill="rgb(226,201,30)" fg:x="13764" fg:w="19"/><text x="12.8654%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (19 samples, 0.02%)</title><rect x="12.6154%" y="789" width="0.0174%" height="15" fill="rgb(239,101,34)" fg:x="13764" fg:w="19"/><text x="12.8654%" y="799.50"></text></g><g><title>event_listener::Inner::lock (12 samples, 0.01%)</title><rect x="12.6337%" y="869" width="0.0110%" height="15" fill="rgb(226,209,5)" fg:x="13784" fg:w="12"/><text x="12.8837%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.01%)</title><rect x="12.6337%" y="853" width="0.0110%" height="15" fill="rgb(250,105,47)" fg:x="13784" fg:w="12"/><text x="12.8837%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="12.6337%" y="837" width="0.0110%" height="15" fill="rgb(230,72,3)" fg:x="13784" fg:w="12"/><text x="12.8837%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="12.6337%" y="821" width="0.0110%" height="15" fill="rgb(232,218,39)" fg:x="13784" fg:w="12"/><text x="12.8837%" y="831.50"></text></g><g><title>___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="12.6337%" y="805" width="0.0110%" height="15" fill="rgb(248,166,6)" fg:x="13784" fg:w="12"/><text x="12.8837%" y="815.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="12.6108%" y="885" width="0.0367%" height="15" fill="rgb(247,89,20)" fg:x="13759" fg:w="40"/><text x="12.8608%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,813 samples, 2.58%)</title><rect x="10.0802%" y="965" width="2.5783%" height="15" fill="rgb(248,130,54)" fg:x="10998" fg:w="2813"/><text x="10.3302%" y="975.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,639 samples, 2.42%)</title><rect x="10.2397%" y="949" width="2.4188%" height="15" fill="rgb(234,196,4)" fg:x="11172" fg:w="2639"/><text x="10.4897%" y="959.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (63 samples, 0.06%)</title><rect x="12.6007%" y="933" width="0.0577%" height="15" fill="rgb(250,143,31)" fg:x="13748" fg:w="63"/><text x="12.8507%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (52 samples, 0.05%)</title><rect x="12.6108%" y="917" width="0.0477%" height="15" fill="rgb(211,110,34)" fg:x="13759" fg:w="52"/><text x="12.8608%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (52 samples, 0.05%)</title><rect x="12.6108%" y="901" width="0.0477%" height="15" fill="rgb(215,124,48)" fg:x="13759" fg:w="52"/><text x="12.8608%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (12 samples, 0.01%)</title><rect x="12.6474%" y="885" width="0.0110%" height="15" fill="rgb(216,46,13)" fg:x="13799" fg:w="12"/><text x="12.8974%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="12.6474%" y="869" width="0.0110%" height="15" fill="rgb(205,184,25)" fg:x="13799" fg:w="12"/><text x="12.8974%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.01%)</title><rect x="12.6474%" y="853" width="0.0110%" height="15" fill="rgb(228,1,10)" fg:x="13799" fg:w="12"/><text x="12.8974%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.01%)</title><rect x="12.6474%" y="837" width="0.0110%" height="15" fill="rgb(213,116,27)" fg:x="13799" fg:w="12"/><text x="12.8974%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,839 samples, 2.60%)</title><rect x="10.0802%" y="997" width="2.6021%" height="15" fill="rgb(241,95,50)" fg:x="10998" fg:w="2839"/><text x="10.3302%" y="1007.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (2,839 samples, 2.60%)</title><rect x="10.0802%" y="981" width="2.6021%" height="15" fill="rgb(238,48,32)" fg:x="10998" fg:w="2839"/><text x="10.3302%" y="991.50">tr..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (18 samples, 0.02%)</title><rect x="12.6658%" y="965" width="0.0165%" height="15" fill="rgb(235,113,49)" fg:x="13819" fg:w="18"/><text x="12.9158%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="13.3312%" y="981" width="0.0101%" height="15" fill="rgb(205,127,43)" fg:x="14545" fg:w="11"/><text x="13.5812%" y="991.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.04%)</title><rect x="13.3413%" y="981" width="0.0357%" height="15" fill="rgb(250,162,2)" fg:x="14556" fg:w="39"/><text x="13.5913%" y="991.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="13.3642%" y="965" width="0.0128%" height="15" fill="rgb(220,13,41)" fg:x="14581" fg:w="14"/><text x="13.6142%" y="975.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="13.3770%" y="981" width="0.0110%" height="15" fill="rgb(249,221,25)" fg:x="14595" fg:w="12"/><text x="13.6270%" y="991.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="13.8875%" y="933" width="0.0137%" height="15" fill="rgb(215,208,19)" fg:x="15152" fg:w="15"/><text x="14.1375%" y="943.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="13.9325%" y="709" width="0.0101%" height="15" fill="rgb(236,175,2)" fg:x="15201" fg:w="11"/><text x="14.1825%" y="719.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="13.9425%" y="709" width="0.0110%" height="15" fill="rgb(241,52,2)" fg:x="15212" fg:w="12"/><text x="14.1925%" y="719.50"></text></g><g><title>rust_alloc (16 samples, 0.01%)</title><rect x="13.9535%" y="677" width="0.0147%" height="15" fill="rgb(248,140,14)" fg:x="15224" fg:w="16"/><text x="14.2035%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (244 samples, 0.22%)</title><rect x="13.9535%" y="709" width="0.2236%" height="15" fill="rgb(253,22,42)" fg:x="15224" fg:w="244"/><text x="14.2035%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (244 samples, 0.22%)</title><rect x="13.9535%" y="693" width="0.2236%" height="15" fill="rgb(234,61,47)" fg:x="15224" fg:w="244"/><text x="14.2035%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (222 samples, 0.20%)</title><rect x="13.9737%" y="677" width="0.2035%" height="15" fill="rgb(208,226,15)" fg:x="15246" fg:w="222"/><text x="14.2237%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::take (209 samples, 0.19%)</title><rect x="13.9856%" y="661" width="0.1916%" height="15" fill="rgb(217,221,4)" fg:x="15259" fg:w="209"/><text x="14.2356%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (209 samples, 0.19%)</title><rect x="13.9856%" y="645" width="0.1916%" height="15" fill="rgb(212,174,34)" fg:x="15259" fg:w="209"/><text x="14.2356%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (310 samples, 0.28%)</title><rect x="13.9013%" y="821" width="0.2841%" height="15" fill="rgb(253,83,4)" fg:x="15167" fg:w="310"/><text x="14.1513%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (310 samples, 0.28%)</title><rect x="13.9013%" y="805" width="0.2841%" height="15" fill="rgb(250,195,49)" fg:x="15167" fg:w="310"/><text x="14.1513%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (310 samples, 0.28%)</title><rect x="13.9013%" y="789" width="0.2841%" height="15" fill="rgb(241,192,25)" fg:x="15167" fg:w="310"/><text x="14.1513%" y="799.50"></text></g><g><title>alloc::alloc::alloc (299 samples, 0.27%)</title><rect x="13.9114%" y="773" width="0.2740%" height="15" fill="rgb(208,124,10)" fg:x="15178" fg:w="299"/><text x="14.1614%" y="783.50"></text></g><g><title>__rg_alloc (299 samples, 0.27%)</title><rect x="13.9114%" y="757" width="0.2740%" height="15" fill="rgb(222,33,0)" fg:x="15178" fg:w="299"/><text x="14.1614%" y="767.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (299 samples, 0.27%)</title><rect x="13.9114%" y="741" width="0.2740%" height="15" fill="rgb(234,209,28)" fg:x="15178" fg:w="299"/><text x="14.1614%" y="751.50"></text></g><g><title>rust_alloc (276 samples, 0.25%)</title><rect x="13.9325%" y="725" width="0.2530%" height="15" fill="rgb(224,11,23)" fg:x="15201" fg:w="276"/><text x="14.1825%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (319 samples, 0.29%)</title><rect x="13.9013%" y="853" width="0.2924%" height="15" fill="rgb(232,99,1)" fg:x="15167" fg:w="319"/><text x="14.1513%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (319 samples, 0.29%)</title><rect x="13.9013%" y="837" width="0.2924%" height="15" fill="rgb(237,95,45)" fg:x="15167" fg:w="319"/><text x="14.1513%" y="847.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (441 samples, 0.40%)</title><rect x="13.8674%" y="965" width="0.4042%" height="15" fill="rgb(208,109,11)" fg:x="15130" fg:w="441"/><text x="14.1174%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (427 samples, 0.39%)</title><rect x="13.8802%" y="949" width="0.3914%" height="15" fill="rgb(216,190,48)" fg:x="15144" fg:w="427"/><text x="14.1302%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (404 samples, 0.37%)</title><rect x="13.9013%" y="933" width="0.3703%" height="15" fill="rgb(251,171,36)" fg:x="15167" fg:w="404"/><text x="14.1513%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (404 samples, 0.37%)</title><rect x="13.9013%" y="917" width="0.3703%" height="15" fill="rgb(230,62,22)" fg:x="15167" fg:w="404"/><text x="14.1513%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (404 samples, 0.37%)</title><rect x="13.9013%" y="901" width="0.3703%" height="15" fill="rgb(225,114,35)" fg:x="15167" fg:w="404"/><text x="14.1513%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (404 samples, 0.37%)</title><rect x="13.9013%" y="885" width="0.3703%" height="15" fill="rgb(215,118,42)" fg:x="15167" fg:w="404"/><text x="14.1513%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (404 samples, 0.37%)</title><rect x="13.9013%" y="869" width="0.3703%" height="15" fill="rgb(243,119,21)" fg:x="15167" fg:w="404"/><text x="14.1513%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (85 samples, 0.08%)</title><rect x="14.1937%" y="853" width="0.0779%" height="15" fill="rgb(252,177,53)" fg:x="15486" fg:w="85"/><text x="14.4437%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (85 samples, 0.08%)</title><rect x="14.1937%" y="837" width="0.0779%" height="15" fill="rgb(237,209,29)" fg:x="15486" fg:w="85"/><text x="14.4437%" y="847.50"></text></g><g><title>__memcpy_avx_unaligned_erms (68 samples, 0.06%)</title><rect x="14.2092%" y="821" width="0.0623%" height="15" fill="rgb(212,65,23)" fg:x="15503" fg:w="68"/><text x="14.4592%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (38 samples, 0.03%)</title><rect x="14.3018%" y="949" width="0.0348%" height="15" fill="rgb(230,222,46)" fg:x="15604" fg:w="38"/><text x="14.5518%" y="959.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (16 samples, 0.01%)</title><rect x="14.3220%" y="933" width="0.0147%" height="15" fill="rgb(215,135,32)" fg:x="15626" fg:w="16"/><text x="14.5720%" y="943.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="14.3669%" y="613" width="0.0128%" height="15" fill="rgb(246,101,22)" fg:x="15675" fg:w="14"/><text x="14.6169%" y="623.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="14.3806%" y="581" width="0.0101%" height="15" fill="rgb(206,107,13)" fg:x="15690" fg:w="11"/><text x="14.6306%" y="591.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="14.3806%" y="565" width="0.0101%" height="15" fill="rgb(250,100,44)" fg:x="15690" fg:w="11"/><text x="14.6306%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="14.3797%" y="613" width="0.0862%" height="15" fill="rgb(231,147,38)" fg:x="15689" fg:w="94"/><text x="14.6297%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="14.3797%" y="597" width="0.0862%" height="15" fill="rgb(229,8,40)" fg:x="15689" fg:w="94"/><text x="14.6297%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (82 samples, 0.08%)</title><rect x="14.3907%" y="581" width="0.0752%" height="15" fill="rgb(221,135,30)" fg:x="15701" fg:w="82"/><text x="14.6407%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (74 samples, 0.07%)</title><rect x="14.3981%" y="565" width="0.0678%" height="15" fill="rgb(249,193,18)" fg:x="15709" fg:w="74"/><text x="14.6481%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (74 samples, 0.07%)</title><rect x="14.3981%" y="549" width="0.0678%" height="15" fill="rgb(209,133,39)" fg:x="15709" fg:w="74"/><text x="14.6481%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (150 samples, 0.14%)</title><rect x="14.3394%" y="757" width="0.1375%" height="15" fill="rgb(232,100,14)" fg:x="15645" fg:w="150"/><text x="14.5894%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (150 samples, 0.14%)</title><rect x="14.3394%" y="741" width="0.1375%" height="15" fill="rgb(224,185,1)" fg:x="15645" fg:w="150"/><text x="14.5894%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (141 samples, 0.13%)</title><rect x="14.3476%" y="725" width="0.1292%" height="15" fill="rgb(223,139,8)" fg:x="15654" fg:w="141"/><text x="14.5976%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (141 samples, 0.13%)</title><rect x="14.3476%" y="709" width="0.1292%" height="15" fill="rgb(232,213,38)" fg:x="15654" fg:w="141"/><text x="14.5976%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (141 samples, 0.13%)</title><rect x="14.3476%" y="693" width="0.1292%" height="15" fill="rgb(207,94,22)" fg:x="15654" fg:w="141"/><text x="14.5976%" y="703.50"></text></g><g><title>alloc::alloc::alloc (138 samples, 0.13%)</title><rect x="14.3504%" y="677" width="0.1265%" height="15" fill="rgb(219,183,54)" fg:x="15657" fg:w="138"/><text x="14.6004%" y="687.50"></text></g><g><title>__rg_alloc (138 samples, 0.13%)</title><rect x="14.3504%" y="661" width="0.1265%" height="15" fill="rgb(216,185,54)" fg:x="15657" fg:w="138"/><text x="14.6004%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (138 samples, 0.13%)</title><rect x="14.3504%" y="645" width="0.1265%" height="15" fill="rgb(254,217,39)" fg:x="15657" fg:w="138"/><text x="14.6004%" y="655.50"></text></g><g><title>rust_alloc (120 samples, 0.11%)</title><rect x="14.3669%" y="629" width="0.1100%" height="15" fill="rgb(240,178,23)" fg:x="15675" fg:w="120"/><text x="14.6169%" y="639.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="14.4659%" y="613" width="0.0110%" height="15" fill="rgb(218,11,47)" fg:x="15783" fg:w="12"/><text x="14.7159%" y="623.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (208 samples, 0.19%)</title><rect x="14.3366%" y="869" width="0.1906%" height="15" fill="rgb(218,51,51)" fg:x="15642" fg:w="208"/><text x="14.5866%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (208 samples, 0.19%)</title><rect x="14.3366%" y="853" width="0.1906%" height="15" fill="rgb(238,126,27)" fg:x="15642" fg:w="208"/><text x="14.5866%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (205 samples, 0.19%)</title><rect x="14.3394%" y="837" width="0.1879%" height="15" fill="rgb(249,202,22)" fg:x="15645" fg:w="205"/><text x="14.5894%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (205 samples, 0.19%)</title><rect x="14.3394%" y="821" width="0.1879%" height="15" fill="rgb(254,195,49)" fg:x="15645" fg:w="205"/><text x="14.5894%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (205 samples, 0.19%)</title><rect x="14.3394%" y="805" width="0.1879%" height="15" fill="rgb(208,123,14)" fg:x="15645" fg:w="205"/><text x="14.5894%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (205 samples, 0.19%)</title><rect x="14.3394%" y="789" width="0.1879%" height="15" fill="rgb(224,200,8)" fg:x="15645" fg:w="205"/><text x="14.5894%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (205 samples, 0.19%)</title><rect x="14.3394%" y="773" width="0.1879%" height="15" fill="rgb(217,61,36)" fg:x="15645" fg:w="205"/><text x="14.5894%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (55 samples, 0.05%)</title><rect x="14.4769%" y="757" width="0.0504%" height="15" fill="rgb(206,35,45)" fg:x="15795" fg:w="55"/><text x="14.7269%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (47 samples, 0.04%)</title><rect x="14.4842%" y="741" width="0.0431%" height="15" fill="rgb(217,65,33)" fg:x="15803" fg:w="47"/><text x="14.7342%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (40 samples, 0.04%)</title><rect x="14.4906%" y="725" width="0.0367%" height="15" fill="rgb(222,158,48)" fg:x="15810" fg:w="40"/><text x="14.7406%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="14.5273%" y="869" width="0.0101%" height="15" fill="rgb(254,2,54)" fg:x="15850" fg:w="11"/><text x="14.7773%" y="879.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="14.5566%" y="725" width="0.0110%" height="15" fill="rgb(250,143,38)" fg:x="15882" fg:w="12"/><text x="14.8066%" y="735.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="14.5676%" y="693" width="0.0128%" height="15" fill="rgb(248,25,0)" fg:x="15894" fg:w="14"/><text x="14.8176%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (142 samples, 0.13%)</title><rect x="14.5676%" y="725" width="0.1301%" height="15" fill="rgb(206,152,27)" fg:x="15894" fg:w="142"/><text x="14.8176%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (142 samples, 0.13%)</title><rect x="14.5676%" y="709" width="0.1301%" height="15" fill="rgb(240,77,30)" fg:x="15894" fg:w="142"/><text x="14.8176%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (128 samples, 0.12%)</title><rect x="14.5805%" y="693" width="0.1173%" height="15" fill="rgb(231,5,3)" fg:x="15908" fg:w="128"/><text x="14.8305%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (113 samples, 0.10%)</title><rect x="14.5942%" y="677" width="0.1036%" height="15" fill="rgb(207,226,32)" fg:x="15923" fg:w="113"/><text x="14.8442%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (113 samples, 0.10%)</title><rect x="14.5942%" y="661" width="0.1036%" height="15" fill="rgb(222,207,47)" fg:x="15923" fg:w="113"/><text x="14.8442%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (164 samples, 0.15%)</title><rect x="14.5484%" y="821" width="0.1503%" height="15" fill="rgb(229,115,45)" fg:x="15873" fg:w="164"/><text x="14.7984%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (164 samples, 0.15%)</title><rect x="14.5484%" y="805" width="0.1503%" height="15" fill="rgb(224,191,6)" fg:x="15873" fg:w="164"/><text x="14.7984%" y="815.50"></text></g><g><title>alloc::alloc::alloc (155 samples, 0.14%)</title><rect x="14.5566%" y="789" width="0.1421%" height="15" fill="rgb(230,227,24)" fg:x="15882" fg:w="155"/><text x="14.8066%" y="799.50"></text></g><g><title>__rg_alloc (155 samples, 0.14%)</title><rect x="14.5566%" y="773" width="0.1421%" height="15" fill="rgb(228,80,19)" fg:x="15882" fg:w="155"/><text x="14.8066%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (155 samples, 0.14%)</title><rect x="14.5566%" y="757" width="0.1421%" height="15" fill="rgb(247,229,0)" fg:x="15882" fg:w="155"/><text x="14.8066%" y="767.50"></text></g><g><title>rust_alloc (155 samples, 0.14%)</title><rect x="14.5566%" y="741" width="0.1421%" height="15" fill="rgb(237,194,15)" fg:x="15882" fg:w="155"/><text x="14.8066%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (185 samples, 0.17%)</title><rect x="14.5374%" y="869" width="0.1696%" height="15" fill="rgb(219,203,20)" fg:x="15861" fg:w="185"/><text x="14.7874%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (174 samples, 0.16%)</title><rect x="14.5475%" y="853" width="0.1595%" height="15" fill="rgb(234,128,8)" fg:x="15872" fg:w="174"/><text x="14.7975%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (173 samples, 0.16%)</title><rect x="14.5484%" y="837" width="0.1586%" height="15" fill="rgb(248,202,8)" fg:x="15873" fg:w="173"/><text x="14.7984%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (417 samples, 0.38%)</title><rect x="14.3366%" y="885" width="0.3822%" height="15" fill="rgb(206,104,37)" fg:x="15642" fg:w="417"/><text x="14.5866%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (13 samples, 0.01%)</title><rect x="14.7069%" y="869" width="0.0119%" height="15" fill="rgb(223,8,27)" fg:x="16046" fg:w="13"/><text x="14.9569%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (514 samples, 0.47%)</title><rect x="14.2716%" y="965" width="0.4711%" height="15" fill="rgb(216,217,28)" fg:x="15571" fg:w="514"/><text x="14.5216%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (443 samples, 0.41%)</title><rect x="14.3366%" y="949" width="0.4060%" height="15" fill="rgb(249,199,1)" fg:x="15642" fg:w="443"/><text x="14.5866%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (443 samples, 0.41%)</title><rect x="14.3366%" y="933" width="0.4060%" height="15" fill="rgb(240,85,17)" fg:x="15642" fg:w="443"/><text x="14.5866%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (443 samples, 0.41%)</title><rect x="14.3366%" y="917" width="0.4060%" height="15" fill="rgb(206,108,45)" fg:x="15642" fg:w="443"/><text x="14.5866%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (443 samples, 0.41%)</title><rect x="14.3366%" y="901" width="0.4060%" height="15" fill="rgb(245,210,41)" fg:x="15642" fg:w="443"/><text x="14.5866%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (26 samples, 0.02%)</title><rect x="14.7188%" y="885" width="0.0238%" height="15" fill="rgb(206,13,37)" fg:x="16059" fg:w="26"/><text x="14.9688%" y="895.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,489 samples, 1.36%)</title><rect x="13.3880%" y="981" width="1.3647%" height="15" fill="rgb(250,61,18)" fg:x="14607" fg:w="1489"/><text x="13.6380%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (11 samples, 0.01%)</title><rect x="14.7427%" y="965" width="0.0101%" height="15" fill="rgb(235,172,48)" fg:x="16085" fg:w="11"/><text x="14.9927%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (209 samples, 0.19%)</title><rect x="14.7528%" y="981" width="0.1916%" height="15" fill="rgb(249,201,17)" fg:x="16096" fg:w="209"/><text x="15.0028%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (12 samples, 0.01%)</title><rect x="14.9443%" y="981" width="0.0110%" height="15" fill="rgb(219,208,6)" fg:x="16305" fg:w="12"/><text x="15.1943%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (12 samples, 0.01%)</title><rect x="14.9443%" y="965" width="0.0110%" height="15" fill="rgb(248,31,23)" fg:x="16305" fg:w="12"/><text x="15.1943%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (438 samples, 0.40%)</title><rect x="14.9553%" y="981" width="0.4014%" height="15" fill="rgb(245,15,42)" fg:x="16317" fg:w="438"/><text x="15.2053%" y="991.50"></text></g><g><title>core::ptr::write (413 samples, 0.38%)</title><rect x="14.9782%" y="965" width="0.3785%" height="15" fill="rgb(222,217,39)" fg:x="16342" fg:w="413"/><text x="15.2282%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (402 samples, 0.37%)</title><rect x="14.9883%" y="949" width="0.3685%" height="15" fill="rgb(210,219,27)" fg:x="16353" fg:w="402"/><text x="15.2383%" y="959.50"></text></g><g><title>size_to_sizeclass (16 samples, 0.01%)</title><rect x="15.3852%" y="789" width="0.0147%" height="15" fill="rgb(252,166,36)" fg:x="16786" fg:w="16"/><text x="15.6352%" y="799.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (12 samples, 0.01%)</title><rect x="15.4218%" y="741" width="0.0110%" height="15" fill="rgb(245,132,34)" fg:x="16826" fg:w="12"/><text x="15.6718%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (11 samples, 0.01%)</title><rect x="15.4228%" y="725" width="0.0101%" height="15" fill="rgb(236,54,3)" fg:x="16827" fg:w="11"/><text x="15.6728%" y="735.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="15.4228%" y="709" width="0.0101%" height="15" fill="rgb(241,173,43)" fg:x="16827" fg:w="11"/><text x="15.6728%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (17 samples, 0.02%)</title><rect x="15.4328%" y="741" width="0.0156%" height="15" fill="rgb(215,190,9)" fg:x="16838" fg:w="17"/><text x="15.6828%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (17 samples, 0.02%)</title><rect x="15.4328%" y="725" width="0.0156%" height="15" fill="rgb(242,101,16)" fg:x="16838" fg:w="17"/><text x="15.6828%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="15.4136%" y="773" width="0.0403%" height="15" fill="rgb(223,190,21)" fg:x="16817" fg:w="44"/><text x="15.6636%" y="783.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (37 samples, 0.03%)</title><rect x="15.4200%" y="757" width="0.0339%" height="15" fill="rgb(215,228,25)" fg:x="16824" fg:w="37"/><text x="15.6700%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="15.4539%" y="773" width="0.0284%" height="15" fill="rgb(225,36,22)" fg:x="16861" fg:w="31"/><text x="15.7039%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="15.4558%" y="757" width="0.0266%" height="15" fill="rgb(251,106,46)" fg:x="16863" fg:w="29"/><text x="15.7058%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="15.4567%" y="741" width="0.0257%" height="15" fill="rgb(208,90,1)" fg:x="16864" fg:w="28"/><text x="15.7067%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="15.4567%" y="725" width="0.0257%" height="15" fill="rgb(243,10,4)" fg:x="16864" fg:w="28"/><text x="15.7067%" y="735.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (19 samples, 0.02%)</title><rect x="15.4649%" y="709" width="0.0174%" height="15" fill="rgb(212,137,27)" fg:x="16873" fg:w="19"/><text x="15.7149%" y="719.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (12 samples, 0.01%)</title><rect x="15.4713%" y="693" width="0.0110%" height="15" fill="rgb(231,220,49)" fg:x="16880" fg:w="12"/><text x="15.7213%" y="703.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="15.4713%" y="677" width="0.0110%" height="15" fill="rgb(237,96,20)" fg:x="16880" fg:w="12"/><text x="15.7213%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (306 samples, 0.28%)</title><rect x="15.3852%" y="821" width="0.2805%" height="15" fill="rgb(239,229,30)" fg:x="16786" fg:w="306"/><text x="15.6352%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (306 samples, 0.28%)</title><rect x="15.3852%" y="805" width="0.2805%" height="15" fill="rgb(219,65,33)" fg:x="16786" fg:w="306"/><text x="15.6352%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (290 samples, 0.27%)</title><rect x="15.3998%" y="789" width="0.2658%" height="15" fill="rgb(243,134,7)" fg:x="16802" fg:w="290"/><text x="15.6498%" y="799.50"></text></g><g><title>snmalloc::FreeListIter::take (196 samples, 0.18%)</title><rect x="15.4860%" y="773" width="0.1796%" height="15" fill="rgb(216,177,54)" fg:x="16896" fg:w="196"/><text x="15.7360%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (196 samples, 0.18%)</title><rect x="15.4860%" y="757" width="0.1796%" height="15" fill="rgb(211,160,20)" fg:x="16896" fg:w="196"/><text x="15.7360%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (328 samples, 0.30%)</title><rect x="15.3668%" y="917" width="0.3006%" height="15" fill="rgb(239,85,39)" fg:x="16766" fg:w="328"/><text x="15.6168%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (328 samples, 0.30%)</title><rect x="15.3668%" y="901" width="0.3006%" height="15" fill="rgb(232,125,22)" fg:x="16766" fg:w="328"/><text x="15.6168%" y="911.50"></text></g><g><title>alloc::alloc::alloc (318 samples, 0.29%)</title><rect x="15.3760%" y="885" width="0.2915%" height="15" fill="rgb(244,57,34)" fg:x="16776" fg:w="318"/><text x="15.6260%" y="895.50"></text></g><g><title>__rg_alloc (318 samples, 0.29%)</title><rect x="15.3760%" y="869" width="0.2915%" height="15" fill="rgb(214,203,32)" fg:x="16776" fg:w="318"/><text x="15.6260%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (318 samples, 0.29%)</title><rect x="15.3760%" y="853" width="0.2915%" height="15" fill="rgb(207,58,43)" fg:x="16776" fg:w="318"/><text x="15.6260%" y="863.50"></text></g><g><title>rust_alloc (318 samples, 0.29%)</title><rect x="15.3760%" y="837" width="0.2915%" height="15" fill="rgb(215,193,15)" fg:x="16776" fg:w="318"/><text x="15.6260%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (12 samples, 0.01%)</title><rect x="15.6675%" y="917" width="0.0110%" height="15" fill="rgb(232,15,44)" fg:x="17094" fg:w="12"/><text x="15.9175%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (348 samples, 0.32%)</title><rect x="15.3668%" y="933" width="0.3190%" height="15" fill="rgb(212,3,48)" fg:x="16766" fg:w="348"/><text x="15.6168%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (369 samples, 0.34%)</title><rect x="15.3568%" y="981" width="0.3382%" height="15" fill="rgb(218,128,7)" fg:x="16755" fg:w="369"/><text x="15.6068%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (369 samples, 0.34%)</title><rect x="15.3568%" y="965" width="0.3382%" height="15" fill="rgb(226,216,39)" fg:x="16755" fg:w="369"/><text x="15.6068%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (358 samples, 0.33%)</title><rect x="15.3668%" y="949" width="0.3281%" height="15" fill="rgb(243,47,51)" fg:x="16766" fg:w="358"/><text x="15.6168%" y="959.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="15.7170%" y="725" width="0.0128%" height="15" fill="rgb(241,183,40)" fg:x="17148" fg:w="14"/><text x="15.9670%" y="735.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (33 samples, 0.03%)</title><rect x="15.7720%" y="677" width="0.0302%" height="15" fill="rgb(231,217,32)" fg:x="17208" fg:w="33"/><text x="16.0220%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (29 samples, 0.03%)</title><rect x="15.7756%" y="661" width="0.0266%" height="15" fill="rgb(229,61,38)" fg:x="17212" fg:w="29"/><text x="16.0256%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (81 samples, 0.07%)</title><rect x="15.7362%" y="725" width="0.0742%" height="15" fill="rgb(225,210,5)" fg:x="17169" fg:w="81"/><text x="15.9862%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (81 samples, 0.07%)</title><rect x="15.7362%" y="709" width="0.0742%" height="15" fill="rgb(231,79,45)" fg:x="17169" fg:w="81"/><text x="15.9862%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (79 samples, 0.07%)</title><rect x="15.7381%" y="693" width="0.0724%" height="15" fill="rgb(224,100,7)" fg:x="17171" fg:w="79"/><text x="15.9881%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (118 samples, 0.11%)</title><rect x="15.7170%" y="757" width="0.1082%" height="15" fill="rgb(241,198,18)" fg:x="17148" fg:w="118"/><text x="15.9670%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (118 samples, 0.11%)</title><rect x="15.7170%" y="741" width="0.1082%" height="15" fill="rgb(252,97,53)" fg:x="17148" fg:w="118"/><text x="15.9670%" y="751.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (16 samples, 0.01%)</title><rect x="15.8105%" y="725" width="0.0147%" height="15" fill="rgb(220,88,7)" fg:x="17250" fg:w="16"/><text x="16.0605%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (127 samples, 0.12%)</title><rect x="15.7170%" y="789" width="0.1164%" height="15" fill="rgb(213,176,14)" fg:x="17148" fg:w="127"/><text x="15.9670%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (127 samples, 0.12%)</title><rect x="15.7170%" y="773" width="0.1164%" height="15" fill="rgb(246,73,7)" fg:x="17148" fg:w="127"/><text x="15.9670%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (149 samples, 0.14%)</title><rect x="15.7060%" y="805" width="0.1366%" height="15" fill="rgb(245,64,36)" fg:x="17136" fg:w="149"/><text x="15.9560%" y="815.50"></text></g><g><title>rust_dealloc (163 samples, 0.15%)</title><rect x="15.6977%" y="821" width="0.1494%" height="15" fill="rgb(245,80,10)" fg:x="17127" fg:w="163"/><text x="15.9477%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (168 samples, 0.15%)</title><rect x="15.6950%" y="885" width="0.1540%" height="15" fill="rgb(232,107,50)" fg:x="17124" fg:w="168"/><text x="15.9450%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (168 samples, 0.15%)</title><rect x="15.6950%" y="869" width="0.1540%" height="15" fill="rgb(253,3,0)" fg:x="17124" fg:w="168"/><text x="15.9450%" y="879.50"></text></g><g><title>__rg_dealloc (168 samples, 0.15%)</title><rect x="15.6950%" y="853" width="0.1540%" height="15" fill="rgb(212,99,53)" fg:x="17124" fg:w="168"/><text x="15.9450%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (168 samples, 0.15%)</title><rect x="15.6950%" y="837" width="0.1540%" height="15" fill="rgb(249,111,54)" fg:x="17124" fg:w="168"/><text x="15.9450%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (177 samples, 0.16%)</title><rect x="15.6950%" y="949" width="0.1622%" height="15" fill="rgb(249,55,30)" fg:x="17124" fg:w="177"/><text x="15.9450%" y="959.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (177 samples, 0.16%)</title><rect x="15.6950%" y="933" width="0.1622%" height="15" fill="rgb(237,47,42)" fg:x="17124" fg:w="177"/><text x="15.9450%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (177 samples, 0.16%)</title><rect x="15.6950%" y="917" width="0.1622%" height="15" fill="rgb(211,20,18)" fg:x="17124" fg:w="177"/><text x="15.9450%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (177 samples, 0.16%)</title><rect x="15.6950%" y="901" width="0.1622%" height="15" fill="rgb(231,203,46)" fg:x="17124" fg:w="177"/><text x="15.9450%" y="911.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (182 samples, 0.17%)</title><rect x="15.6950%" y="965" width="0.1668%" height="15" fill="rgb(237,142,3)" fg:x="17124" fg:w="182"/><text x="15.9450%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (185 samples, 0.17%)</title><rect x="15.6950%" y="981" width="0.1696%" height="15" fill="rgb(241,107,1)" fg:x="17124" fg:w="185"/><text x="15.9450%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="15.8865%" y="821" width="0.0137%" height="15" fill="rgb(229,83,13)" fg:x="17333" fg:w="15"/><text x="16.1365%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="15.8865%" y="805" width="0.0137%" height="15" fill="rgb(241,91,40)" fg:x="17333" fg:w="15"/><text x="16.1365%" y="815.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="15.8865%" y="789" width="0.0137%" height="15" fill="rgb(225,3,45)" fg:x="17333" fg:w="15"/><text x="16.1365%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="15.8865%" y="773" width="0.0137%" height="15" fill="rgb(244,223,14)" fg:x="17333" fg:w="15"/><text x="16.1365%" y="783.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (39 samples, 0.04%)</title><rect x="15.8728%" y="917" width="0.0357%" height="15" fill="rgb(224,124,37)" fg:x="17318" fg:w="39"/><text x="16.1228%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (39 samples, 0.04%)</title><rect x="15.8728%" y="901" width="0.0357%" height="15" fill="rgb(251,171,30)" fg:x="17318" fg:w="39"/><text x="16.1228%" y="911.50"></text></g><g><title>core::mem::drop (24 samples, 0.02%)</title><rect x="15.8865%" y="885" width="0.0220%" height="15" fill="rgb(236,46,54)" fg:x="17333" fg:w="24"/><text x="16.1365%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (24 samples, 0.02%)</title><rect x="15.8865%" y="869" width="0.0220%" height="15" fill="rgb(245,213,5)" fg:x="17333" fg:w="24"/><text x="16.1365%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (24 samples, 0.02%)</title><rect x="15.8865%" y="853" width="0.0220%" height="15" fill="rgb(230,144,27)" fg:x="17333" fg:w="24"/><text x="16.1365%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="15.8865%" y="837" width="0.0220%" height="15" fill="rgb(220,86,6)" fg:x="17333" fg:w="24"/><text x="16.1365%" y="847.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="15.9159%" y="901" width="0.0101%" height="15" fill="rgb(240,20,13)" fg:x="17365" fg:w="11"/><text x="16.1659%" y="911.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (35 samples, 0.03%)</title><rect x="16.0093%" y="773" width="0.0321%" height="15" fill="rgb(217,89,34)" fg:x="17467" fg:w="35"/><text x="16.2593%" y="783.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (31 samples, 0.03%)</title><rect x="16.0130%" y="757" width="0.0284%" height="15" fill="rgb(229,13,5)" fg:x="17471" fg:w="31"/><text x="16.2630%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (98 samples, 0.09%)</title><rect x="15.9681%" y="821" width="0.0898%" height="15" fill="rgb(244,67,35)" fg:x="17422" fg:w="98"/><text x="16.2181%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (98 samples, 0.09%)</title><rect x="15.9681%" y="805" width="0.0898%" height="15" fill="rgb(221,40,2)" fg:x="17422" fg:w="98"/><text x="16.2181%" y="815.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (94 samples, 0.09%)</title><rect x="15.9718%" y="789" width="0.0862%" height="15" fill="rgb(237,157,21)" fg:x="17426" fg:w="94"/><text x="16.2218%" y="799.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (18 samples, 0.02%)</title><rect x="16.0414%" y="773" width="0.0165%" height="15" fill="rgb(222,94,11)" fg:x="17502" fg:w="18"/><text x="16.2914%" y="783.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (18 samples, 0.02%)</title><rect x="16.0414%" y="757" width="0.0165%" height="15" fill="rgb(249,113,6)" fg:x="17502" fg:w="18"/><text x="16.2914%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (144 samples, 0.13%)</title><rect x="15.9434%" y="853" width="0.1320%" height="15" fill="rgb(238,137,36)" fg:x="17395" fg:w="144"/><text x="16.1934%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (144 samples, 0.13%)</title><rect x="15.9434%" y="837" width="0.1320%" height="15" fill="rgb(210,102,26)" fg:x="17395" fg:w="144"/><text x="16.1934%" y="847.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (19 samples, 0.02%)</title><rect x="16.0579%" y="821" width="0.0174%" height="15" fill="rgb(218,30,30)" fg:x="17520" fg:w="19"/><text x="16.3079%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (148 samples, 0.14%)</title><rect x="15.9434%" y="885" width="0.1356%" height="15" fill="rgb(214,67,26)" fg:x="17395" fg:w="148"/><text x="16.1934%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (148 samples, 0.14%)</title><rect x="15.9434%" y="869" width="0.1356%" height="15" fill="rgb(251,9,53)" fg:x="17395" fg:w="148"/><text x="16.1934%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (172 samples, 0.16%)</title><rect x="15.9287%" y="901" width="0.1576%" height="15" fill="rgb(228,204,25)" fg:x="17379" fg:w="172"/><text x="16.1787%" y="911.50"></text></g><g><title>rust_dealloc (201 samples, 0.18%)</title><rect x="15.9085%" y="917" width="0.1842%" height="15" fill="rgb(207,153,8)" fg:x="17357" fg:w="201"/><text x="16.1585%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (258 samples, 0.24%)</title><rect x="15.8645%" y="965" width="0.2365%" height="15" fill="rgb(242,9,16)" fg:x="17309" fg:w="258"/><text x="16.1145%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (258 samples, 0.24%)</title><rect x="15.8645%" y="949" width="0.2365%" height="15" fill="rgb(217,211,10)" fg:x="17309" fg:w="258"/><text x="16.1145%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (258 samples, 0.24%)</title><rect x="15.8645%" y="933" width="0.2365%" height="15" fill="rgb(219,228,52)" fg:x="17309" fg:w="258"/><text x="16.1145%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (20 samples, 0.02%)</title><rect x="16.1129%" y="901" width="0.0183%" height="15" fill="rgb(231,92,29)" fg:x="17580" fg:w="20"/><text x="16.3629%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (20 samples, 0.02%)</title><rect x="16.1129%" y="885" width="0.0183%" height="15" fill="rgb(232,8,23)" fg:x="17580" fg:w="20"/><text x="16.3629%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="16.1642%" y="693" width="0.0137%" height="15" fill="rgb(216,211,34)" fg:x="17636" fg:w="15"/><text x="16.4142%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="16.1642%" y="677" width="0.0137%" height="15" fill="rgb(236,151,0)" fg:x="17636" fg:w="15"/><text x="16.4142%" y="687.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="16.1642%" y="661" width="0.0137%" height="15" fill="rgb(209,168,3)" fg:x="17636" fg:w="15"/><text x="16.4142%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="16.1642%" y="645" width="0.0137%" height="15" fill="rgb(208,129,28)" fg:x="17636" fg:w="15"/><text x="16.4142%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (24 samples, 0.02%)</title><rect x="16.1578%" y="789" width="0.0220%" height="15" fill="rgb(229,78,22)" fg:x="17629" fg:w="24"/><text x="16.4078%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (24 samples, 0.02%)</title><rect x="16.1578%" y="773" width="0.0220%" height="15" fill="rgb(228,187,13)" fg:x="17629" fg:w="24"/><text x="16.4078%" y="783.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="16.1642%" y="757" width="0.0156%" height="15" fill="rgb(240,119,24)" fg:x="17636" fg:w="17"/><text x="16.4142%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="16.1642%" y="741" width="0.0156%" height="15" fill="rgb(209,194,42)" fg:x="17636" fg:w="17"/><text x="16.4142%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="16.1642%" y="725" width="0.0156%" height="15" fill="rgb(247,200,46)" fg:x="17636" fg:w="17"/><text x="16.4142%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="16.1642%" y="709" width="0.0156%" height="15" fill="rgb(218,76,16)" fg:x="17636" fg:w="17"/><text x="16.4142%" y="719.50"></text></g><g><title>rust_dealloc (16 samples, 0.01%)</title><rect x="16.1982%" y="693" width="0.0147%" height="15" fill="rgb(225,21,48)" fg:x="17673" fg:w="16"/><text x="16.4482%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="16.2367%" y="645" width="0.0165%" height="15" fill="rgb(239,223,50)" fg:x="17715" fg:w="18"/><text x="16.4867%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="16.2422%" y="629" width="0.0110%" height="15" fill="rgb(244,45,21)" fg:x="17721" fg:w="12"/><text x="16.4922%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (45 samples, 0.04%)</title><rect x="16.2202%" y="693" width="0.0412%" height="15" fill="rgb(232,33,43)" fg:x="17697" fg:w="45"/><text x="16.4702%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (45 samples, 0.04%)</title><rect x="16.2202%" y="677" width="0.0412%" height="15" fill="rgb(209,8,3)" fg:x="17697" fg:w="45"/><text x="16.4702%" y="687.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (44 samples, 0.04%)</title><rect x="16.2211%" y="661" width="0.0403%" height="15" fill="rgb(214,25,53)" fg:x="17698" fg:w="44"/><text x="16.4711%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (77 samples, 0.07%)</title><rect x="16.1954%" y="725" width="0.0706%" height="15" fill="rgb(254,186,54)" fg:x="17670" fg:w="77"/><text x="16.4454%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (77 samples, 0.07%)</title><rect x="16.1954%" y="709" width="0.0706%" height="15" fill="rgb(208,174,49)" fg:x="17670" fg:w="77"/><text x="16.4454%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (84 samples, 0.08%)</title><rect x="16.1954%" y="757" width="0.0770%" height="15" fill="rgb(233,191,51)" fg:x="17670" fg:w="84"/><text x="16.4454%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (84 samples, 0.08%)</title><rect x="16.1954%" y="741" width="0.0770%" height="15" fill="rgb(222,134,10)" fg:x="17670" fg:w="84"/><text x="16.4454%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (102 samples, 0.09%)</title><rect x="16.1881%" y="773" width="0.0935%" height="15" fill="rgb(230,226,20)" fg:x="17662" fg:w="102"/><text x="16.4381%" y="783.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (154 samples, 0.14%)</title><rect x="16.1450%" y="805" width="0.1411%" height="15" fill="rgb(251,111,25)" fg:x="17615" fg:w="154"/><text x="16.3950%" y="815.50"></text></g><g><title>rust_dealloc (116 samples, 0.11%)</title><rect x="16.1798%" y="789" width="0.1063%" height="15" fill="rgb(224,40,46)" fg:x="17653" fg:w="116"/><text x="16.4298%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (170 samples, 0.16%)</title><rect x="16.1312%" y="869" width="0.1558%" height="15" fill="rgb(236,108,47)" fg:x="17600" fg:w="170"/><text x="16.3812%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (167 samples, 0.15%)</title><rect x="16.1340%" y="853" width="0.1531%" height="15" fill="rgb(234,93,0)" fg:x="17603" fg:w="167"/><text x="16.3840%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (155 samples, 0.14%)</title><rect x="16.1450%" y="837" width="0.1421%" height="15" fill="rgb(224,213,32)" fg:x="17615" fg:w="155"/><text x="16.3950%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (155 samples, 0.14%)</title><rect x="16.1450%" y="821" width="0.1421%" height="15" fill="rgb(251,11,48)" fg:x="17615" fg:w="155"/><text x="16.3950%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (229 samples, 0.21%)</title><rect x="16.1010%" y="933" width="0.2099%" height="15" fill="rgb(236,173,5)" fg:x="17567" fg:w="229"/><text x="16.3510%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (224 samples, 0.21%)</title><rect x="16.1056%" y="917" width="0.2053%" height="15" fill="rgb(230,95,12)" fg:x="17572" fg:w="224"/><text x="16.3556%" y="927.50"></text></g><g><title>core::mem::drop (196 samples, 0.18%)</title><rect x="16.1312%" y="901" width="0.1796%" height="15" fill="rgb(232,209,1)" fg:x="17600" fg:w="196"/><text x="16.3812%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (196 samples, 0.18%)</title><rect x="16.1312%" y="885" width="0.1796%" height="15" fill="rgb(232,6,1)" fg:x="17600" fg:w="196"/><text x="16.3812%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (26 samples, 0.02%)</title><rect x="16.2871%" y="869" width="0.0238%" height="15" fill="rgb(210,224,50)" fg:x="17770" fg:w="26"/><text x="16.5371%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="16.2871%" y="853" width="0.0238%" height="15" fill="rgb(228,127,35)" fg:x="17770" fg:w="26"/><text x="16.5371%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.02%)</title><rect x="16.2871%" y="837" width="0.0238%" height="15" fill="rgb(245,102,45)" fg:x="17770" fg:w="26"/><text x="16.5371%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.02%)</title><rect x="16.2871%" y="821" width="0.0238%" height="15" fill="rgb(214,1,49)" fg:x="17770" fg:w="26"/><text x="16.5371%" y="831.50"></text></g><g><title>__rg_dealloc (26 samples, 0.02%)</title><rect x="16.2871%" y="805" width="0.0238%" height="15" fill="rgb(226,163,40)" fg:x="17770" fg:w="26"/><text x="16.5371%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (26 samples, 0.02%)</title><rect x="16.2871%" y="789" width="0.0238%" height="15" fill="rgb(239,212,28)" fg:x="17770" fg:w="26"/><text x="16.5371%" y="799.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="16.3329%" y="837" width="0.0119%" height="15" fill="rgb(220,20,13)" fg:x="17820" fg:w="13"/><text x="16.5829%" y="847.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="16.3686%" y="789" width="0.0165%" height="15" fill="rgb(210,164,35)" fg:x="17859" fg:w="18"/><text x="16.6186%" y="799.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="16.3686%" y="773" width="0.0165%" height="15" fill="rgb(248,109,41)" fg:x="17859" fg:w="18"/><text x="16.6186%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (45 samples, 0.04%)</title><rect x="16.3540%" y="837" width="0.0412%" height="15" fill="rgb(238,23,50)" fg:x="17843" fg:w="45"/><text x="16.6040%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (45 samples, 0.04%)</title><rect x="16.3540%" y="821" width="0.0412%" height="15" fill="rgb(211,48,49)" fg:x="17843" fg:w="45"/><text x="16.6040%" y="831.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (45 samples, 0.04%)</title><rect x="16.3540%" y="805" width="0.0412%" height="15" fill="rgb(223,36,21)" fg:x="17843" fg:w="45"/><text x="16.6040%" y="815.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="16.3851%" y="789" width="0.0101%" height="15" fill="rgb(207,123,46)" fg:x="17877" fg:w="11"/><text x="16.6351%" y="799.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="16.3851%" y="773" width="0.0101%" height="15" fill="rgb(240,218,32)" fg:x="17877" fg:w="11"/><text x="16.6351%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (77 samples, 0.07%)</title><rect x="16.3329%" y="869" width="0.0706%" height="15" fill="rgb(252,5,43)" fg:x="17820" fg:w="77"/><text x="16.5829%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (77 samples, 0.07%)</title><rect x="16.3329%" y="853" width="0.0706%" height="15" fill="rgb(252,84,19)" fg:x="17820" fg:w="77"/><text x="16.5829%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (82 samples, 0.08%)</title><rect x="16.3329%" y="901" width="0.0752%" height="15" fill="rgb(243,152,39)" fg:x="17820" fg:w="82"/><text x="16.5829%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (82 samples, 0.08%)</title><rect x="16.3329%" y="885" width="0.0752%" height="15" fill="rgb(234,160,15)" fg:x="17820" fg:w="82"/><text x="16.5829%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (99 samples, 0.09%)</title><rect x="16.3201%" y="917" width="0.0907%" height="15" fill="rgb(237,34,20)" fg:x="17806" fg:w="99"/><text x="16.5701%" y="927.50"></text></g><g><title>rust_dealloc (111 samples, 0.10%)</title><rect x="16.3109%" y="933" width="0.1017%" height="15" fill="rgb(229,97,13)" fg:x="17796" fg:w="111"/><text x="16.5609%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (342 samples, 0.31%)</title><rect x="16.1010%" y="949" width="0.3135%" height="15" fill="rgb(234,71,50)" fg:x="17567" fg:w="342"/><text x="16.3510%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (605 samples, 0.55%)</title><rect x="15.8645%" y="981" width="0.5545%" height="15" fill="rgb(253,155,4)" fg:x="17309" fg:w="605"/><text x="16.1145%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (347 samples, 0.32%)</title><rect x="16.1010%" y="965" width="0.3180%" height="15" fill="rgb(222,185,37)" fg:x="17567" fg:w="347"/><text x="16.3510%" y="975.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (46 samples, 0.04%)</title><rect x="16.4190%" y="981" width="0.0422%" height="15" fill="rgb(251,177,13)" fg:x="17914" fg:w="46"/><text x="16.6690%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,110 samples, 6.52%)</title><rect x="9.9546%" y="1045" width="6.5167%" height="15" fill="rgb(250,179,40)" fg:x="10861" fg:w="7110"/><text x="10.2046%" y="1055.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,110 samples, 6.52%)</title><rect x="9.9546%" y="1029" width="6.5167%" height="15" fill="rgb(242,44,2)" fg:x="10861" fg:w="7110"/><text x="10.2046%" y="1039.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (6,973 samples, 6.39%)</title><rect x="10.0802%" y="1013" width="6.3911%" height="15" fill="rgb(216,177,13)" fg:x="10998" fg:w="6973"/><text x="10.3302%" y="1023.50">tremor_r..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,134 samples, 3.79%)</title><rect x="12.6823%" y="997" width="3.7890%" height="15" fill="rgb(216,106,43)" fg:x="13837" fg:w="4134"/><text x="12.9323%" y="1007.50">trem..</text></g><g><title>core::cell::Cell&lt;T&gt;::replace (14 samples, 0.01%)</title><rect x="16.5593%" y="933" width="0.0128%" height="15" fill="rgb(216,183,2)" fg:x="18067" fg:w="14"/><text x="16.8093%" y="943.50"></text></g><g><title>core::mem::replace (14 samples, 0.01%)</title><rect x="16.5593%" y="917" width="0.0128%" height="15" fill="rgb(249,75,3)" fg:x="18067" fg:w="14"/><text x="16.8093%" y="927.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="16.5593%" y="901" width="0.0128%" height="15" fill="rgb(219,67,39)" fg:x="18067" fg:w="14"/><text x="16.8093%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (187 samples, 0.17%)</title><rect x="16.6280%" y="917" width="0.1714%" height="15" fill="rgb(253,228,2)" fg:x="18142" fg:w="187"/><text x="16.8780%" y="927.50"></text></g><g><title>core::mem::replace (187 samples, 0.17%)</title><rect x="16.6280%" y="901" width="0.1714%" height="15" fill="rgb(235,138,27)" fg:x="18142" fg:w="187"/><text x="16.8780%" y="911.50"></text></g><g><title>core::ptr::read (186 samples, 0.17%)</title><rect x="16.6289%" y="885" width="0.1705%" height="15" fill="rgb(236,97,51)" fg:x="18143" fg:w="186"/><text x="16.8789%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (294 samples, 0.27%)</title><rect x="16.5721%" y="933" width="0.2695%" height="15" fill="rgb(240,80,30)" fg:x="18081" fg:w="294"/><text x="16.8221%" y="943.50"></text></g><g><title>core::mem::drop (46 samples, 0.04%)</title><rect x="16.7994%" y="917" width="0.0422%" height="15" fill="rgb(230,178,19)" fg:x="18329" fg:w="46"/><text x="17.0494%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (46 samples, 0.04%)</title><rect x="16.7994%" y="901" width="0.0422%" height="15" fill="rgb(210,190,27)" fg:x="18329" fg:w="46"/><text x="17.0494%" y="911.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="16.8416%" y="917" width="0.0110%" height="15" fill="rgb(222,107,31)" fg:x="18375" fg:w="12"/><text x="17.0916%" y="927.50"></text></g><g><title>std::sync::poison::Flag::done (13 samples, 0.01%)</title><rect x="16.8636%" y="885" width="0.0119%" height="15" fill="rgb(216,127,34)" fg:x="18399" fg:w="13"/><text x="17.1136%" y="895.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="16.8636%" y="869" width="0.0119%" height="15" fill="rgb(234,116,52)" fg:x="18399" fg:w="13"/><text x="17.1136%" y="879.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="16.8636%" y="853" width="0.0119%" height="15" fill="rgb(222,124,15)" fg:x="18399" fg:w="13"/><text x="17.1136%" y="863.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="16.8636%" y="837" width="0.0119%" height="15" fill="rgb(231,179,28)" fg:x="18399" fg:w="13"/><text x="17.1136%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (265 samples, 0.24%)</title><rect x="16.8847%" y="853" width="0.2429%" height="15" fill="rgb(226,93,45)" fg:x="18422" fg:w="265"/><text x="17.1347%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (319 samples, 0.29%)</title><rect x="16.8416%" y="933" width="0.2924%" height="15" fill="rgb(215,8,51)" fg:x="18375" fg:w="319"/><text x="17.0916%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (307 samples, 0.28%)</title><rect x="16.8526%" y="917" width="0.2814%" height="15" fill="rgb(223,106,5)" fg:x="18387" fg:w="307"/><text x="17.1026%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (307 samples, 0.28%)</title><rect x="16.8526%" y="901" width="0.2814%" height="15" fill="rgb(250,191,5)" fg:x="18387" fg:w="307"/><text x="17.1026%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (282 samples, 0.26%)</title><rect x="16.8755%" y="885" width="0.2585%" height="15" fill="rgb(242,132,44)" fg:x="18412" fg:w="282"/><text x="17.1255%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (272 samples, 0.25%)</title><rect x="16.8847%" y="869" width="0.2493%" height="15" fill="rgb(251,152,29)" fg:x="18422" fg:w="272"/><text x="17.1347%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (18 samples, 0.02%)</title><rect x="17.1431%" y="885" width="0.0165%" height="15" fill="rgb(218,179,5)" fg:x="18704" fg:w="18"/><text x="17.3931%" y="895.50"></text></g><g><title>core::task::wake::Waker::will_wake (35 samples, 0.03%)</title><rect x="17.1340%" y="933" width="0.0321%" height="15" fill="rgb(227,67,19)" fg:x="18694" fg:w="35"/><text x="17.3840%" y="943.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (35 samples, 0.03%)</title><rect x="17.1340%" y="917" width="0.0321%" height="15" fill="rgb(233,119,31)" fg:x="18694" fg:w="35"/><text x="17.3840%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (25 samples, 0.02%)</title><rect x="17.1431%" y="901" width="0.0229%" height="15" fill="rgb(241,120,22)" fg:x="18704" fg:w="25"/><text x="17.3931%" y="911.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="17.1734%" y="901" width="0.0119%" height="15" fill="rgb(224,102,30)" fg:x="18737" fg:w="13"/><text x="17.4234%" y="911.50"></text></g><g><title>std::sync::poison::Flag::borrow (13 samples, 0.01%)</title><rect x="17.1734%" y="885" width="0.0119%" height="15" fill="rgb(210,164,37)" fg:x="18737" fg:w="13"/><text x="17.4234%" y="895.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="17.1734%" y="869" width="0.0119%" height="15" fill="rgb(226,191,16)" fg:x="18737" fg:w="13"/><text x="17.4234%" y="879.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="17.1734%" y="853" width="0.0119%" height="15" fill="rgb(214,40,45)" fg:x="18737" fg:w="13"/><text x="17.4234%" y="863.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="17.1734%" y="837" width="0.0119%" height="15" fill="rgb(244,29,26)" fg:x="18737" fg:w="13"/><text x="17.4234%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="17.1734%" y="821" width="0.0119%" height="15" fill="rgb(216,16,5)" fg:x="18737" fg:w="13"/><text x="17.4234%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="17.1734%" y="805" width="0.0119%" height="15" fill="rgb(249,76,35)" fg:x="18737" fg:w="13"/><text x="17.4234%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,588 samples, 1.46%)</title><rect x="16.4713%" y="1029" width="1.4555%" height="15" fill="rgb(207,11,44)" fg:x="17971" fg:w="1588"/><text x="16.7213%" y="1039.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,588 samples, 1.46%)</title><rect x="16.4713%" y="1013" width="1.4555%" height="15" fill="rgb(228,190,49)" fg:x="17971" fg:w="1588"/><text x="16.7213%" y="1023.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,588 samples, 1.46%)</title><rect x="16.4713%" y="997" width="1.4555%" height="15" fill="rgb(214,173,12)" fg:x="17971" fg:w="1588"/><text x="16.7213%" y="1007.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,588 samples, 1.46%)</title><rect x="16.4713%" y="981" width="1.4555%" height="15" fill="rgb(218,26,35)" fg:x="17971" fg:w="1588"/><text x="16.7213%" y="991.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,588 samples, 1.46%)</title><rect x="16.4713%" y="965" width="1.4555%" height="15" fill="rgb(220,200,19)" fg:x="17971" fg:w="1588"/><text x="16.7213%" y="975.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,588 samples, 1.46%)</title><rect x="16.4713%" y="949" width="1.4555%" height="15" fill="rgb(239,95,49)" fg:x="17971" fg:w="1588"/><text x="16.7213%" y="959.50"></text></g><g><title>event_listener::Inner::lock (830 samples, 0.76%)</title><rect x="17.1660%" y="933" width="0.7607%" height="15" fill="rgb(235,85,53)" fg:x="18729" fg:w="830"/><text x="17.4160%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (822 samples, 0.75%)</title><rect x="17.1734%" y="917" width="0.7534%" height="15" fill="rgb(233,133,31)" fg:x="18737" fg:w="822"/><text x="17.4234%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (809 samples, 0.74%)</title><rect x="17.1853%" y="901" width="0.7415%" height="15" fill="rgb(218,25,20)" fg:x="18750" fg:w="809"/><text x="17.4353%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (731 samples, 0.67%)</title><rect x="17.2568%" y="885" width="0.6700%" height="15" fill="rgb(252,210,38)" fg:x="18828" fg:w="731"/><text x="17.5068%" y="895.50"></text></g><g><title>___pthread_mutex_lock (731 samples, 0.67%)</title><rect x="17.2568%" y="869" width="0.6700%" height="15" fill="rgb(242,134,21)" fg:x="18828" fg:w="731"/><text x="17.5068%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="17.9396%" y="981" width="0.0147%" height="15" fill="rgb(213,28,48)" fg:x="19573" fg:w="16"/><text x="18.1896%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (304 samples, 0.28%)</title><rect x="17.9543%" y="981" width="0.2786%" height="15" fill="rgb(250,196,2)" fg:x="19589" fg:w="304"/><text x="18.2043%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (803 samples, 0.74%)</title><rect x="18.3676%" y="965" width="0.7360%" height="15" fill="rgb(227,5,17)" fg:x="20040" fg:w="803"/><text x="18.6176%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (64 samples, 0.06%)</title><rect x="19.1155%" y="901" width="0.0587%" height="15" fill="rgb(221,226,24)" fg:x="20856" fg:w="64"/><text x="19.3655%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (60 samples, 0.05%)</title><rect x="19.1192%" y="885" width="0.0550%" height="15" fill="rgb(211,5,48)" fg:x="20860" fg:w="60"/><text x="19.3692%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.05%)</title><rect x="19.1192%" y="869" width="0.0550%" height="15" fill="rgb(219,150,6)" fg:x="20860" fg:w="60"/><text x="19.3692%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (57 samples, 0.05%)</title><rect x="19.1219%" y="853" width="0.0522%" height="15" fill="rgb(251,46,16)" fg:x="20863" fg:w="57"/><text x="19.3719%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (54 samples, 0.05%)</title><rect x="19.1247%" y="837" width="0.0495%" height="15" fill="rgb(220,204,40)" fg:x="20866" fg:w="54"/><text x="19.3747%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (54 samples, 0.05%)</title><rect x="19.1247%" y="821" width="0.0495%" height="15" fill="rgb(211,85,2)" fg:x="20866" fg:w="54"/><text x="19.3747%" y="831.50"></text></g><g><title>event_listener::Inner::lock (87 samples, 0.08%)</title><rect x="19.1751%" y="901" width="0.0797%" height="15" fill="rgb(229,17,7)" fg:x="20921" fg:w="87"/><text x="19.4251%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (86 samples, 0.08%)</title><rect x="19.1760%" y="885" width="0.0788%" height="15" fill="rgb(239,72,28)" fg:x="20922" fg:w="86"/><text x="19.4260%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (84 samples, 0.08%)</title><rect x="19.1779%" y="869" width="0.0770%" height="15" fill="rgb(230,47,54)" fg:x="20924" fg:w="84"/><text x="19.4279%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (84 samples, 0.08%)</title><rect x="19.1779%" y="853" width="0.0770%" height="15" fill="rgb(214,50,8)" fg:x="20924" fg:w="84"/><text x="19.4279%" y="863.50"></text></g><g><title>___pthread_mutex_lock (84 samples, 0.08%)</title><rect x="19.1779%" y="837" width="0.0770%" height="15" fill="rgb(216,198,43)" fg:x="20924" fg:w="84"/><text x="19.4279%" y="847.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (168 samples, 0.15%)</title><rect x="19.1119%" y="917" width="0.1540%" height="15" fill="rgb(234,20,35)" fg:x="20852" fg:w="168"/><text x="19.3619%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (204 samples, 0.19%)</title><rect x="19.1036%" y="949" width="0.1870%" height="15" fill="rgb(254,45,19)" fg:x="20843" fg:w="204"/><text x="19.3536%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (196 samples, 0.18%)</title><rect x="19.1109%" y="933" width="0.1796%" height="15" fill="rgb(219,14,44)" fg:x="20851" fg:w="196"/><text x="19.3609%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (27 samples, 0.02%)</title><rect x="19.2658%" y="917" width="0.0247%" height="15" fill="rgb(217,220,26)" fg:x="21020" fg:w="27"/><text x="19.5158%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="19.2658%" y="901" width="0.0247%" height="15" fill="rgb(213,158,28)" fg:x="21020" fg:w="27"/><text x="19.5158%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (26 samples, 0.02%)</title><rect x="19.2668%" y="885" width="0.0238%" height="15" fill="rgb(252,51,52)" fg:x="21021" fg:w="26"/><text x="19.5168%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (26 samples, 0.02%)</title><rect x="19.2668%" y="869" width="0.0238%" height="15" fill="rgb(246,89,16)" fg:x="21021" fg:w="26"/><text x="19.5168%" y="879.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (13,297 samples, 12.19%)</title><rect x="7.1197%" y="1173" width="12.1873%" height="15" fill="rgb(216,158,49)" fg:x="7768" fg:w="13297"/><text x="7.3697%" y="1183.50">async_executor::Ex..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (13,297 samples, 12.19%)</title><rect x="7.1197%" y="1157" width="12.1873%" height="15" fill="rgb(236,107,19)" fg:x="7768" fg:w="13297"/><text x="7.3697%" y="1167.50">&lt;async_std::task::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (13,297 samples, 12.19%)</title><rect x="7.1197%" y="1141" width="12.1873%" height="15" fill="rgb(228,185,30)" fg:x="7768" fg:w="13297"/><text x="7.3697%" y="1151.50">async_std::task::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13,297 samples, 12.19%)</title><rect x="7.1197%" y="1125" width="12.1873%" height="15" fill="rgb(246,134,8)" fg:x="7768" fg:w="13297"/><text x="7.3697%" y="1135.50">std::thread::local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,297 samples, 12.19%)</title><rect x="7.1197%" y="1109" width="12.1873%" height="15" fill="rgb(214,143,50)" fg:x="7768" fg:w="13297"/><text x="7.3697%" y="1119.50">std::thread::local..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (13,297 samples, 12.19%)</title><rect x="7.1197%" y="1093" width="12.1873%" height="15" fill="rgb(228,75,8)" fg:x="7768" fg:w="13297"/><text x="7.3697%" y="1103.50">async_std::task::t..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (13,297 samples, 12.19%)</title><rect x="7.1197%" y="1077" width="12.1873%" height="15" fill="rgb(207,175,4)" fg:x="7768" fg:w="13297"/><text x="7.3697%" y="1087.50">&lt;async_std::task::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,297 samples, 12.19%)</title><rect x="7.1197%" y="1061" width="12.1873%" height="15" fill="rgb(205,108,24)" fg:x="7768" fg:w="13297"/><text x="7.3697%" y="1071.50">&lt;core::future::fro..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,094 samples, 2.84%)</title><rect x="16.4713%" y="1045" width="2.8358%" height="15" fill="rgb(244,120,49)" fg:x="17971" fg:w="3094"/><text x="16.7213%" y="1055.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,506 samples, 1.38%)</title><rect x="17.9268%" y="1029" width="1.3803%" height="15" fill="rgb(223,47,38)" fg:x="19559" fg:w="1506"/><text x="18.1768%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,506 samples, 1.38%)</title><rect x="17.9268%" y="1013" width="1.3803%" height="15" fill="rgb(229,179,11)" fg:x="19559" fg:w="1506"/><text x="18.1768%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,506 samples, 1.38%)</title><rect x="17.9268%" y="997" width="1.3803%" height="15" fill="rgb(231,122,1)" fg:x="19559" fg:w="1506"/><text x="18.1768%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (1,172 samples, 1.07%)</title><rect x="18.2329%" y="981" width="1.0742%" height="15" fill="rgb(245,119,9)" fg:x="19893" fg:w="1172"/><text x="18.4829%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (222 samples, 0.20%)</title><rect x="19.1036%" y="965" width="0.2035%" height="15" fill="rgb(241,163,25)" fg:x="20843" fg:w="222"/><text x="19.3536%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (18 samples, 0.02%)</title><rect x="19.2906%" y="949" width="0.0165%" height="15" fill="rgb(217,214,3)" fg:x="21047" fg:w="18"/><text x="19.5406%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,012 samples, 12.84%)</title><rect x="6.4837%" y="1189" width="12.8427%" height="15" fill="rgb(240,86,28)" fg:x="7074" fg:w="14012"/><text x="6.7337%" y="1199.50">&lt;core::future::from..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (21 samples, 0.02%)</title><rect x="19.3071%" y="1173" width="0.0192%" height="15" fill="rgb(215,47,9)" fg:x="21065" fg:w="21"/><text x="19.5571%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (21 samples, 0.02%)</title><rect x="19.3071%" y="1157" width="0.0192%" height="15" fill="rgb(252,25,45)" fg:x="21065" fg:w="21"/><text x="19.5571%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::pdk::PdkOpMeta&gt; (17 samples, 0.02%)</title><rect x="19.3108%" y="1141" width="0.0156%" height="15" fill="rgb(251,164,9)" fg:x="21069" fg:w="17"/><text x="19.5608%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (17 samples, 0.02%)</title><rect x="19.3108%" y="1125" width="0.0156%" height="15" fill="rgb(233,194,0)" fg:x="21069" fg:w="17"/><text x="19.5608%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="19.3108%" y="1109" width="0.0156%" height="15" fill="rgb(249,111,24)" fg:x="21069" fg:w="17"/><text x="19.5608%" y="1119.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (17 samples, 0.02%)</title><rect x="19.3108%" y="1093" width="0.0156%" height="15" fill="rgb(250,223,3)" fg:x="21069" fg:w="17"/><text x="19.5608%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 0.04%)</title><rect x="19.3263%" y="1189" width="0.0385%" height="15" fill="rgb(236,178,37)" fg:x="21086" fg:w="42"/><text x="19.5763%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (29 samples, 0.03%)</title><rect x="19.3383%" y="1173" width="0.0266%" height="15" fill="rgb(241,158,50)" fg:x="21099" fg:w="29"/><text x="19.5883%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt; (28 samples, 0.03%)</title><rect x="19.3392%" y="1157" width="0.0257%" height="15" fill="rgb(213,121,41)" fg:x="21100" fg:w="28"/><text x="19.5892%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (28 samples, 0.03%)</title><rect x="19.3392%" y="1141" width="0.0257%" height="15" fill="rgb(240,92,3)" fg:x="21100" fg:w="28"/><text x="19.5892%" y="1151.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="19.3392%" y="1125" width="0.0257%" height="15" fill="rgb(205,123,3)" fg:x="21100" fg:w="28"/><text x="19.5892%" y="1135.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (35 samples, 0.03%)</title><rect x="19.3648%" y="1189" width="0.0321%" height="15" fill="rgb(205,97,47)" fg:x="21128" fg:w="35"/><text x="19.6148%" y="1199.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (24 samples, 0.02%)</title><rect x="19.3987%" y="1189" width="0.0220%" height="15" fill="rgb(247,152,14)" fg:x="21165" fg:w="24"/><text x="19.6487%" y="1199.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (24 samples, 0.02%)</title><rect x="19.4207%" y="1189" width="0.0220%" height="15" fill="rgb(248,195,53)" fg:x="21189" fg:w="24"/><text x="19.6707%" y="1199.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (16 samples, 0.01%)</title><rect x="19.4427%" y="1189" width="0.0147%" height="15" fill="rgb(226,201,16)" fg:x="21213" fg:w="16"/><text x="19.6927%" y="1199.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (45 samples, 0.04%)</title><rect x="19.4574%" y="1189" width="0.0412%" height="15" fill="rgb(205,98,0)" fg:x="21229" fg:w="45"/><text x="19.7074%" y="1199.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (14 samples, 0.01%)</title><rect x="19.4986%" y="1189" width="0.0128%" height="15" fill="rgb(214,191,48)" fg:x="21274" fg:w="14"/><text x="19.7486%" y="1199.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="19.5115%" y="1189" width="0.0183%" height="15" fill="rgb(237,112,39)" fg:x="21288" fg:w="20"/><text x="19.7615%" y="1199.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="19.5298%" y="1189" width="0.0147%" height="15" fill="rgb(247,203,27)" fg:x="21308" fg:w="16"/><text x="19.7798%" y="1199.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="19.5298%" y="1173" width="0.0147%" height="15" fill="rgb(235,124,28)" fg:x="21308" fg:w="16"/><text x="19.7798%" y="1183.50"></text></g><g><title>___pthread_mutex_lock (19 samples, 0.02%)</title><rect x="19.5582%" y="1189" width="0.0174%" height="15" fill="rgb(208,207,46)" fg:x="21339" fg:w="19"/><text x="19.8082%" y="1199.50"></text></g><g><title>__clock_gettime_2 (101 samples, 0.09%)</title><rect x="19.5756%" y="1189" width="0.0926%" height="15" fill="rgb(234,176,4)" fg:x="21358" fg:w="101"/><text x="19.8256%" y="1199.50"></text></g><g><title>__memcpy_avx_unaligned_erms (48 samples, 0.04%)</title><rect x="19.6755%" y="1189" width="0.0440%" height="15" fill="rgb(230,133,28)" fg:x="21467" fg:w="48"/><text x="19.9255%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="19.7617%" y="1173" width="0.0202%" height="15" fill="rgb(211,137,40)" fg:x="21561" fg:w="22"/><text x="20.0117%" y="1183.50"></text></g><g><title>alloc::alloc::box_free (22 samples, 0.02%)</title><rect x="19.7617%" y="1157" width="0.0202%" height="15" fill="rgb(254,35,13)" fg:x="21561" fg:w="22"/><text x="20.0117%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="19.7617%" y="1141" width="0.0202%" height="15" fill="rgb(225,49,51)" fg:x="21561" fg:w="22"/><text x="20.0117%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="19.7617%" y="1125" width="0.0202%" height="15" fill="rgb(251,10,15)" fg:x="21561" fg:w="22"/><text x="20.0117%" y="1135.50"></text></g><g><title>__rg_dealloc (22 samples, 0.02%)</title><rect x="19.7617%" y="1109" width="0.0202%" height="15" fill="rgb(228,207,15)" fg:x="21561" fg:w="22"/><text x="20.0117%" y="1119.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (22 samples, 0.02%)</title><rect x="19.7617%" y="1093" width="0.0202%" height="15" fill="rgb(241,99,19)" fg:x="21561" fg:w="22"/><text x="20.0117%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (44 samples, 0.04%)</title><rect x="19.7452%" y="1189" width="0.0403%" height="15" fill="rgb(207,104,49)" fg:x="21543" fg:w="44"/><text x="19.9952%" y="1199.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (16 samples, 0.01%)</title><rect x="19.7938%" y="1189" width="0.0147%" height="15" fill="rgb(234,99,18)" fg:x="21596" fg:w="16"/><text x="20.0438%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="19.8726%" y="981" width="0.0119%" height="15" fill="rgb(213,191,49)" fg:x="21682" fg:w="13"/><text x="20.1226%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="19.8726%" y="965" width="0.0119%" height="15" fill="rgb(210,226,19)" fg:x="21682" fg:w="13"/><text x="20.1226%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="19.8726%" y="949" width="0.0119%" height="15" fill="rgb(229,97,18)" fg:x="21682" fg:w="13"/><text x="20.1226%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="19.8726%" y="933" width="0.0119%" height="15" fill="rgb(211,167,15)" fg:x="21682" fg:w="13"/><text x="20.1226%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="19.8726%" y="917" width="0.0119%" height="15" fill="rgb(210,169,34)" fg:x="21682" fg:w="13"/><text x="20.1226%" y="927.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="19.8726%" y="901" width="0.0119%" height="15" fill="rgb(241,121,31)" fg:x="21682" fg:w="13"/><text x="20.1226%" y="911.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="19.8726%" y="885" width="0.0119%" height="15" fill="rgb(232,40,11)" fg:x="21682" fg:w="13"/><text x="20.1226%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="19.8726%" y="869" width="0.0119%" height="15" fill="rgb(205,86,26)" fg:x="21682" fg:w="13"/><text x="20.1226%" y="879.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="19.8726%" y="1093" width="0.0202%" height="15" fill="rgb(231,126,28)" fg:x="21682" fg:w="22"/><text x="20.1226%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (22 samples, 0.02%)</title><rect x="19.8726%" y="1077" width="0.0202%" height="15" fill="rgb(219,221,18)" fg:x="21682" fg:w="22"/><text x="20.1226%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (22 samples, 0.02%)</title><rect x="19.8726%" y="1061" width="0.0202%" height="15" fill="rgb(211,40,0)" fg:x="21682" fg:w="22"/><text x="20.1226%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (22 samples, 0.02%)</title><rect x="19.8726%" y="1045" width="0.0202%" height="15" fill="rgb(239,85,43)" fg:x="21682" fg:w="22"/><text x="20.1226%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.02%)</title><rect x="19.8726%" y="1029" width="0.0202%" height="15" fill="rgb(231,55,21)" fg:x="21682" fg:w="22"/><text x="20.1226%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.02%)</title><rect x="19.8726%" y="1013" width="0.0202%" height="15" fill="rgb(225,184,43)" fg:x="21682" fg:w="22"/><text x="20.1226%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.02%)</title><rect x="19.8726%" y="997" width="0.0202%" height="15" fill="rgb(251,158,41)" fg:x="21682" fg:w="22"/><text x="20.1226%" y="1007.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (100 samples, 0.09%)</title><rect x="19.8084%" y="1189" width="0.0917%" height="15" fill="rgb(234,159,37)" fg:x="21612" fg:w="100"/><text x="20.0584%" y="1199.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (30 samples, 0.03%)</title><rect x="19.8726%" y="1173" width="0.0275%" height="15" fill="rgb(216,204,22)" fg:x="21682" fg:w="30"/><text x="20.1226%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (30 samples, 0.03%)</title><rect x="19.8726%" y="1157" width="0.0275%" height="15" fill="rgb(214,17,3)" fg:x="21682" fg:w="30"/><text x="20.1226%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30 samples, 0.03%)</title><rect x="19.8726%" y="1141" width="0.0275%" height="15" fill="rgb(212,111,17)" fg:x="21682" fg:w="30"/><text x="20.1226%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (30 samples, 0.03%)</title><rect x="19.8726%" y="1125" width="0.0275%" height="15" fill="rgb(221,157,24)" fg:x="21682" fg:w="30"/><text x="20.1226%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30 samples, 0.03%)</title><rect x="19.8726%" y="1109" width="0.0275%" height="15" fill="rgb(252,16,13)" fg:x="21682" fg:w="30"/><text x="20.1226%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (55 samples, 0.05%)</title><rect x="19.9001%" y="1189" width="0.0504%" height="15" fill="rgb(221,62,2)" fg:x="21712" fg:w="55"/><text x="20.1501%" y="1199.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (25 samples, 0.02%)</title><rect x="19.9276%" y="1173" width="0.0229%" height="15" fill="rgb(247,87,22)" fg:x="21742" fg:w="25"/><text x="20.1776%" y="1183.50"></text></g><g><title>core::mem::drop (25 samples, 0.02%)</title><rect x="19.9276%" y="1157" width="0.0229%" height="15" fill="rgb(215,73,9)" fg:x="21742" fg:w="25"/><text x="20.1776%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (33 samples, 0.03%)</title><rect x="19.9505%" y="1189" width="0.0302%" height="15" fill="rgb(207,175,33)" fg:x="21767" fg:w="33"/><text x="20.2005%" y="1199.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (44 samples, 0.04%)</title><rect x="19.9817%" y="1189" width="0.0403%" height="15" fill="rgb(243,129,54)" fg:x="21801" fg:w="44"/><text x="20.2317%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="20.0064%" y="1173" width="0.0156%" height="15" fill="rgb(227,119,45)" fg:x="21828" fg:w="17"/><text x="20.2564%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="20.0064%" y="1157" width="0.0156%" height="15" fill="rgb(205,109,36)" fg:x="21828" fg:w="17"/><text x="20.2564%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (17 samples, 0.02%)</title><rect x="20.0064%" y="1141" width="0.0156%" height="15" fill="rgb(205,6,39)" fg:x="21828" fg:w="17"/><text x="20.2564%" y="1151.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (29 samples, 0.03%)</title><rect x="20.0220%" y="1189" width="0.0266%" height="15" fill="rgb(221,32,16)" fg:x="21845" fg:w="29"/><text x="20.2720%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.01%)</title><rect x="20.0339%" y="1173" width="0.0147%" height="15" fill="rgb(228,144,50)" fg:x="21858" fg:w="16"/><text x="20.2839%" y="1183.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (19 samples, 0.02%)</title><rect x="20.0532%" y="1189" width="0.0174%" height="15" fill="rgb(229,201,53)" fg:x="21879" fg:w="19"/><text x="20.3032%" y="1199.50"></text></g><g><title>async_ffi::DropBomb::with (13 samples, 0.01%)</title><rect x="20.0587%" y="1173" width="0.0119%" height="15" fill="rgb(249,153,27)" fg:x="21885" fg:w="13"/><text x="20.3087%" y="1183.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (13 samples, 0.01%)</title><rect x="20.0587%" y="1157" width="0.0119%" height="15" fill="rgb(227,106,25)" fg:x="21885" fg:w="13"/><text x="20.3087%" y="1167.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="20.0587%" y="1141" width="0.0119%" height="15" fill="rgb(230,65,29)" fg:x="21885" fg:w="13"/><text x="20.3087%" y="1151.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (20 samples, 0.02%)</title><rect x="20.0706%" y="1189" width="0.0183%" height="15" fill="rgb(221,57,46)" fg:x="21898" fg:w="20"/><text x="20.3206%" y="1199.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="20.1036%" y="613" width="0.0101%" height="15" fill="rgb(229,161,17)" fg:x="21934" fg:w="11"/><text x="20.3536%" y="623.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (12 samples, 0.01%)</title><rect x="20.1036%" y="629" width="0.0110%" height="15" fill="rgb(222,213,11)" fg:x="21934" fg:w="12"/><text x="20.3536%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (11 samples, 0.01%)</title><rect x="20.1329%" y="613" width="0.0101%" height="15" fill="rgb(235,35,13)" fg:x="21966" fg:w="11"/><text x="20.3829%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (11 samples, 0.01%)</title><rect x="20.1329%" y="597" width="0.0101%" height="15" fill="rgb(233,158,34)" fg:x="21966" fg:w="11"/><text x="20.3829%" y="607.50"></text></g><g><title>core::mem::replace (11 samples, 0.01%)</title><rect x="20.1329%" y="581" width="0.0101%" height="15" fill="rgb(215,151,48)" fg:x="21966" fg:w="11"/><text x="20.3829%" y="591.50"></text></g><g><title>core::ptr::write (11 samples, 0.01%)</title><rect x="20.1329%" y="565" width="0.0101%" height="15" fill="rgb(229,84,14)" fg:x="21966" fg:w="11"/><text x="20.3829%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (50 samples, 0.05%)</title><rect x="20.1008%" y="693" width="0.0458%" height="15" fill="rgb(229,68,14)" fg:x="21931" fg:w="50"/><text x="20.3508%" y="703.50"></text></g><g><title>std::collections::hash::map::RandomState::new (50 samples, 0.05%)</title><rect x="20.1008%" y="677" width="0.0458%" height="15" fill="rgb(243,106,26)" fg:x="21931" fg:w="50"/><text x="20.3508%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 samples, 0.05%)</title><rect x="20.1008%" y="661" width="0.0458%" height="15" fill="rgb(206,45,38)" fg:x="21931" fg:w="50"/><text x="20.3508%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (50 samples, 0.05%)</title><rect x="20.1008%" y="645" width="0.0458%" height="15" fill="rgb(226,6,15)" fg:x="21931" fg:w="50"/><text x="20.3508%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (35 samples, 0.03%)</title><rect x="20.1146%" y="629" width="0.0321%" height="15" fill="rgb(232,22,54)" fg:x="21946" fg:w="35"/><text x="20.3646%" y="639.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="20.1888%" y="469" width="0.0110%" height="15" fill="rgb(229,222,32)" fg:x="22027" fg:w="12"/><text x="20.4388%" y="479.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="20.1888%" y="453" width="0.0110%" height="15" fill="rgb(228,62,29)" fg:x="22027" fg:w="12"/><text x="20.4388%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="20.1998%" y="453" width="0.0147%" height="15" fill="rgb(251,103,34)" fg:x="22039" fg:w="16"/><text x="20.4498%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (16 samples, 0.01%)</title><rect x="20.1998%" y="437" width="0.0147%" height="15" fill="rgb(233,12,30)" fg:x="22039" fg:w="16"/><text x="20.4498%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (12 samples, 0.01%)</title><rect x="20.2035%" y="421" width="0.0110%" height="15" fill="rgb(238,52,0)" fg:x="22043" fg:w="12"/><text x="20.4535%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (85 samples, 0.08%)</title><rect x="20.1888%" y="501" width="0.0779%" height="15" fill="rgb(223,98,5)" fg:x="22027" fg:w="85"/><text x="20.4388%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (85 samples, 0.08%)</title><rect x="20.1888%" y="485" width="0.0779%" height="15" fill="rgb(228,75,37)" fg:x="22027" fg:w="85"/><text x="20.4388%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (73 samples, 0.07%)</title><rect x="20.1998%" y="469" width="0.0669%" height="15" fill="rgb(205,115,49)" fg:x="22039" fg:w="73"/><text x="20.4498%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (49 samples, 0.04%)</title><rect x="20.2218%" y="453" width="0.0449%" height="15" fill="rgb(250,154,43)" fg:x="22063" fg:w="49"/><text x="20.4718%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (49 samples, 0.04%)</title><rect x="20.2218%" y="437" width="0.0449%" height="15" fill="rgb(226,43,29)" fg:x="22063" fg:w="49"/><text x="20.4718%" y="447.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (191 samples, 0.18%)</title><rect x="20.1008%" y="709" width="0.1751%" height="15" fill="rgb(249,228,39)" fg:x="21931" fg:w="191"/><text x="20.3508%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (141 samples, 0.13%)</title><rect x="20.1466%" y="693" width="0.1292%" height="15" fill="rgb(216,79,43)" fg:x="21981" fg:w="141"/><text x="20.3966%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (141 samples, 0.13%)</title><rect x="20.1466%" y="677" width="0.1292%" height="15" fill="rgb(228,95,12)" fg:x="21981" fg:w="141"/><text x="20.3966%" y="687.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (125 samples, 0.11%)</title><rect x="20.1613%" y="661" width="0.1146%" height="15" fill="rgb(249,221,15)" fg:x="21997" fg:w="125"/><text x="20.4113%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (125 samples, 0.11%)</title><rect x="20.1613%" y="645" width="0.1146%" height="15" fill="rgb(233,34,13)" fg:x="21997" fg:w="125"/><text x="20.4113%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (123 samples, 0.11%)</title><rect x="20.1631%" y="629" width="0.1127%" height="15" fill="rgb(214,103,39)" fg:x="21999" fg:w="123"/><text x="20.4131%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (102 samples, 0.09%)</title><rect x="20.1824%" y="613" width="0.0935%" height="15" fill="rgb(251,126,39)" fg:x="22020" fg:w="102"/><text x="20.4324%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (102 samples, 0.09%)</title><rect x="20.1824%" y="597" width="0.0935%" height="15" fill="rgb(214,216,36)" fg:x="22020" fg:w="102"/><text x="20.4324%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (102 samples, 0.09%)</title><rect x="20.1824%" y="581" width="0.0935%" height="15" fill="rgb(220,221,8)" fg:x="22020" fg:w="102"/><text x="20.4324%" y="591.50"></text></g><g><title>alloc::alloc::alloc (101 samples, 0.09%)</title><rect x="20.1833%" y="565" width="0.0926%" height="15" fill="rgb(240,216,3)" fg:x="22021" fg:w="101"/><text x="20.4333%" y="575.50"></text></g><g><title>__rg_alloc (101 samples, 0.09%)</title><rect x="20.1833%" y="549" width="0.0926%" height="15" fill="rgb(232,218,17)" fg:x="22021" fg:w="101"/><text x="20.4333%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (101 samples, 0.09%)</title><rect x="20.1833%" y="533" width="0.0926%" height="15" fill="rgb(229,163,45)" fg:x="22021" fg:w="101"/><text x="20.4333%" y="543.50"></text></g><g><title>rust_alloc (101 samples, 0.09%)</title><rect x="20.1833%" y="517" width="0.0926%" height="15" fill="rgb(231,110,42)" fg:x="22021" fg:w="101"/><text x="20.4333%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (13 samples, 0.01%)</title><rect x="20.4134%" y="661" width="0.0119%" height="15" fill="rgb(208,170,48)" fg:x="22272" fg:w="13"/><text x="20.6634%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (13 samples, 0.01%)</title><rect x="20.4134%" y="645" width="0.0119%" height="15" fill="rgb(239,116,25)" fg:x="22272" fg:w="13"/><text x="20.6634%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (13 samples, 0.01%)</title><rect x="20.4134%" y="629" width="0.0119%" height="15" fill="rgb(219,200,50)" fg:x="22272" fg:w="13"/><text x="20.6634%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (13 samples, 0.01%)</title><rect x="20.4134%" y="613" width="0.0119%" height="15" fill="rgb(245,200,0)" fg:x="22272" fg:w="13"/><text x="20.6634%" y="623.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="20.4134%" y="597" width="0.0119%" height="15" fill="rgb(245,119,33)" fg:x="22272" fg:w="13"/><text x="20.6634%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.04%)</title><rect x="20.3914%" y="677" width="0.0422%" height="15" fill="rgb(231,125,12)" fg:x="22248" fg:w="46"/><text x="20.6414%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.06%)</title><rect x="20.3822%" y="693" width="0.0577%" height="15" fill="rgb(216,96,41)" fg:x="22238" fg:w="63"/><text x="20.6322%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (26 samples, 0.02%)</title><rect x="20.4399%" y="693" width="0.0238%" height="15" fill="rgb(248,43,45)" fg:x="22301" fg:w="26"/><text x="20.6899%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (26 samples, 0.02%)</title><rect x="20.4399%" y="677" width="0.0238%" height="15" fill="rgb(217,222,7)" fg:x="22301" fg:w="26"/><text x="20.6899%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (26 samples, 0.02%)</title><rect x="20.4399%" y="661" width="0.0238%" height="15" fill="rgb(233,28,6)" fg:x="22301" fg:w="26"/><text x="20.6899%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (16 samples, 0.01%)</title><rect x="20.4491%" y="645" width="0.0147%" height="15" fill="rgb(231,218,15)" fg:x="22311" fg:w="16"/><text x="20.6991%" y="655.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (16 samples, 0.01%)</title><rect x="20.4491%" y="629" width="0.0147%" height="15" fill="rgb(226,171,48)" fg:x="22311" fg:w="16"/><text x="20.6991%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (16 samples, 0.01%)</title><rect x="20.4491%" y="613" width="0.0147%" height="15" fill="rgb(235,201,9)" fg:x="22311" fg:w="16"/><text x="20.6991%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (16 samples, 0.01%)</title><rect x="20.4491%" y="597" width="0.0147%" height="15" fill="rgb(217,80,15)" fg:x="22311" fg:w="16"/><text x="20.6991%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (16 samples, 0.01%)</title><rect x="20.4491%" y="581" width="0.0147%" height="15" fill="rgb(219,152,8)" fg:x="22311" fg:w="16"/><text x="20.6991%" y="591.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (228 samples, 0.21%)</title><rect x="20.2759%" y="709" width="0.2090%" height="15" fill="rgb(243,107,38)" fg:x="22122" fg:w="228"/><text x="20.5259%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;,&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="20.4638%" y="693" width="0.0211%" height="15" fill="rgb(231,17,5)" fg:x="22327" fg:w="23"/><text x="20.7138%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (23 samples, 0.02%)</title><rect x="20.4638%" y="677" width="0.0211%" height="15" fill="rgb(209,25,54)" fg:x="22327" fg:w="23"/><text x="20.7138%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="20.4702%" y="661" width="0.0147%" height="15" fill="rgb(219,0,2)" fg:x="22334" fg:w="16"/><text x="20.7202%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (16 samples, 0.01%)</title><rect x="20.4702%" y="645" width="0.0147%" height="15" fill="rgb(246,9,5)" fg:x="22334" fg:w="16"/><text x="20.7202%" y="655.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (440 samples, 0.40%)</title><rect x="20.0889%" y="757" width="0.4033%" height="15" fill="rgb(226,159,4)" fg:x="21918" fg:w="440"/><text x="20.3389%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (440 samples, 0.40%)</title><rect x="20.0889%" y="741" width="0.4033%" height="15" fill="rgb(219,175,34)" fg:x="21918" fg:w="440"/><text x="20.3389%" y="751.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (440 samples, 0.40%)</title><rect x="20.0889%" y="725" width="0.4033%" height="15" fill="rgb(236,10,46)" fg:x="21918" fg:w="440"/><text x="20.3389%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::empty (18 samples, 0.02%)</title><rect x="21.0320%" y="485" width="0.0165%" height="15" fill="rgb(240,211,16)" fg:x="22947" fg:w="18"/><text x="21.2820%" y="495.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (18 samples, 0.02%)</title><rect x="21.0320%" y="469" width="0.0165%" height="15" fill="rgb(205,3,43)" fg:x="22947" fg:w="18"/><text x="21.2820%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (179 samples, 0.16%)</title><rect x="21.0137%" y="533" width="0.1641%" height="15" fill="rgb(245,7,22)" fg:x="22927" fg:w="179"/><text x="21.2637%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (173 samples, 0.16%)</title><rect x="21.0192%" y="517" width="0.1586%" height="15" fill="rgb(239,132,32)" fg:x="22933" fg:w="173"/><text x="21.2692%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (171 samples, 0.16%)</title><rect x="21.0210%" y="501" width="0.1567%" height="15" fill="rgb(228,202,34)" fg:x="22935" fg:w="171"/><text x="21.2710%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (141 samples, 0.13%)</title><rect x="21.0485%" y="485" width="0.1292%" height="15" fill="rgb(254,200,22)" fg:x="22965" fg:w="141"/><text x="21.2985%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (141 samples, 0.13%)</title><rect x="21.0485%" y="469" width="0.1292%" height="15" fill="rgb(219,10,39)" fg:x="22965" fg:w="141"/><text x="21.2985%" y="479.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (219 samples, 0.20%)</title><rect x="20.9853%" y="677" width="0.2007%" height="15" fill="rgb(226,210,39)" fg:x="22896" fg:w="219"/><text x="21.2353%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (219 samples, 0.20%)</title><rect x="20.9853%" y="661" width="0.2007%" height="15" fill="rgb(208,219,16)" fg:x="22896" fg:w="219"/><text x="21.2353%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (195 samples, 0.18%)</title><rect x="21.0073%" y="645" width="0.1787%" height="15" fill="rgb(216,158,51)" fg:x="22920" fg:w="195"/><text x="21.2573%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (195 samples, 0.18%)</title><rect x="21.0073%" y="629" width="0.1787%" height="15" fill="rgb(233,14,44)" fg:x="22920" fg:w="195"/><text x="21.2573%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (195 samples, 0.18%)</title><rect x="21.0073%" y="613" width="0.1787%" height="15" fill="rgb(237,97,39)" fg:x="22920" fg:w="195"/><text x="21.2573%" y="623.50"></text></g><g><title>alloc::alloc::alloc (195 samples, 0.18%)</title><rect x="21.0073%" y="597" width="0.1787%" height="15" fill="rgb(218,198,43)" fg:x="22920" fg:w="195"/><text x="21.2573%" y="607.50"></text></g><g><title>__rg_alloc (195 samples, 0.18%)</title><rect x="21.0073%" y="581" width="0.1787%" height="15" fill="rgb(231,104,20)" fg:x="22920" fg:w="195"/><text x="21.2573%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (195 samples, 0.18%)</title><rect x="21.0073%" y="565" width="0.1787%" height="15" fill="rgb(254,36,13)" fg:x="22920" fg:w="195"/><text x="21.2573%" y="575.50"></text></g><g><title>rust_alloc (189 samples, 0.17%)</title><rect x="21.0128%" y="549" width="0.1732%" height="15" fill="rgb(248,14,50)" fg:x="22926" fg:w="189"/><text x="21.2628%" y="559.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (32 samples, 0.03%)</title><rect x="21.2502%" y="469" width="0.0293%" height="15" fill="rgb(217,107,29)" fg:x="23185" fg:w="32"/><text x="21.5002%" y="479.50"></text></g><g><title> (32 samples, 0.03%)</title><rect x="21.2502%" y="453" width="0.0293%" height="15" fill="rgb(251,169,33)" fg:x="23185" fg:w="32"/><text x="21.5002%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (85 samples, 0.08%)</title><rect x="21.2080%" y="501" width="0.0779%" height="15" fill="rgb(217,108,32)" fg:x="23139" fg:w="85"/><text x="21.4580%" y="511.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (72 samples, 0.07%)</title><rect x="21.2199%" y="485" width="0.0660%" height="15" fill="rgb(219,66,42)" fg:x="23152" fg:w="72"/><text x="21.4699%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (111 samples, 0.10%)</title><rect x="21.2007%" y="533" width="0.1017%" height="15" fill="rgb(206,180,7)" fg:x="23131" fg:w="111"/><text x="21.4507%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (111 samples, 0.10%)</title><rect x="21.2007%" y="517" width="0.1017%" height="15" fill="rgb(208,226,31)" fg:x="23131" fg:w="111"/><text x="21.4507%" y="527.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (18 samples, 0.02%)</title><rect x="21.2859%" y="501" width="0.0165%" height="15" fill="rgb(218,26,49)" fg:x="23224" fg:w="18"/><text x="21.5359%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (119 samples, 0.11%)</title><rect x="21.2007%" y="565" width="0.1091%" height="15" fill="rgb(233,197,48)" fg:x="23131" fg:w="119"/><text x="21.4507%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (119 samples, 0.11%)</title><rect x="21.2007%" y="549" width="0.1091%" height="15" fill="rgb(252,181,51)" fg:x="23131" fg:w="119"/><text x="21.4507%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (128 samples, 0.12%)</title><rect x="21.1970%" y="581" width="0.1173%" height="15" fill="rgb(253,90,19)" fg:x="23127" fg:w="128"/><text x="21.4470%" y="591.50"></text></g><g><title>alloc::alloc::box_free (145 samples, 0.13%)</title><rect x="21.1860%" y="677" width="0.1329%" height="15" fill="rgb(215,171,30)" fg:x="23115" fg:w="145"/><text x="21.4360%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (145 samples, 0.13%)</title><rect x="21.1860%" y="661" width="0.1329%" height="15" fill="rgb(214,222,9)" fg:x="23115" fg:w="145"/><text x="21.4360%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (145 samples, 0.13%)</title><rect x="21.1860%" y="645" width="0.1329%" height="15" fill="rgb(223,3,22)" fg:x="23115" fg:w="145"/><text x="21.4360%" y="655.50"></text></g><g><title>__rg_dealloc (145 samples, 0.13%)</title><rect x="21.1860%" y="629" width="0.1329%" height="15" fill="rgb(225,196,46)" fg:x="23115" fg:w="145"/><text x="21.4360%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (145 samples, 0.13%)</title><rect x="21.1860%" y="613" width="0.1329%" height="15" fill="rgb(209,110,37)" fg:x="23115" fg:w="145"/><text x="21.4360%" y="623.50"></text></g><g><title>rust_dealloc (142 samples, 0.13%)</title><rect x="21.1888%" y="597" width="0.1301%" height="15" fill="rgb(249,89,12)" fg:x="23118" fg:w="142"/><text x="21.4388%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="21.3528%" y="549" width="0.0119%" height="15" fill="rgb(226,27,33)" fg:x="23297" fg:w="13"/><text x="21.6028%" y="559.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (20 samples, 0.02%)</title><rect x="21.3528%" y="565" width="0.0183%" height="15" fill="rgb(213,82,22)" fg:x="23297" fg:w="20"/><text x="21.6028%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (33 samples, 0.03%)</title><rect x="21.3501%" y="629" width="0.0302%" height="15" fill="rgb(248,140,0)" fg:x="23294" fg:w="33"/><text x="21.6001%" y="639.50"></text></g><g><title>std::collections::hash::map::RandomState::new (33 samples, 0.03%)</title><rect x="21.3501%" y="613" width="0.0302%" height="15" fill="rgb(228,106,3)" fg:x="23294" fg:w="33"/><text x="21.6001%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.03%)</title><rect x="21.3501%" y="597" width="0.0302%" height="15" fill="rgb(209,23,37)" fg:x="23294" fg:w="33"/><text x="21.6001%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 0.03%)</title><rect x="21.3501%" y="581" width="0.0302%" height="15" fill="rgb(241,93,50)" fg:x="23294" fg:w="33"/><text x="21.6001%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="21.4335%" y="389" width="0.0165%" height="15" fill="rgb(253,46,43)" fg:x="23385" fg:w="18"/><text x="21.6835%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (18 samples, 0.02%)</title><rect x="21.4335%" y="373" width="0.0165%" height="15" fill="rgb(226,206,43)" fg:x="23385" fg:w="18"/><text x="21.6835%" y="383.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (16 samples, 0.01%)</title><rect x="21.4353%" y="357" width="0.0147%" height="15" fill="rgb(217,54,7)" fg:x="23387" fg:w="16"/><text x="21.6853%" y="367.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="21.4371%" y="341" width="0.0128%" height="15" fill="rgb(223,5,52)" fg:x="23389" fg:w="14"/><text x="21.6871%" y="351.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="21.4371%" y="325" width="0.0128%" height="15" fill="rgb(206,52,46)" fg:x="23389" fg:w="14"/><text x="21.6871%" y="335.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="21.4371%" y="309" width="0.0128%" height="15" fill="rgb(253,136,11)" fg:x="23389" fg:w="14"/><text x="21.6871%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (104 samples, 0.10%)</title><rect x="21.4206%" y="437" width="0.0953%" height="15" fill="rgb(208,106,33)" fg:x="23371" fg:w="104"/><text x="21.6706%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (97 samples, 0.09%)</title><rect x="21.4271%" y="421" width="0.0889%" height="15" fill="rgb(206,54,4)" fg:x="23378" fg:w="97"/><text x="21.6771%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.08%)</title><rect x="21.4326%" y="405" width="0.0834%" height="15" fill="rgb(213,3,15)" fg:x="23384" fg:w="91"/><text x="21.6826%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (55 samples, 0.05%)</title><rect x="21.4656%" y="389" width="0.0504%" height="15" fill="rgb(252,211,39)" fg:x="23420" fg:w="55"/><text x="21.7156%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (55 samples, 0.05%)</title><rect x="21.4656%" y="373" width="0.0504%" height="15" fill="rgb(223,6,36)" fg:x="23420" fg:w="55"/><text x="21.7156%" y="383.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (187 samples, 0.17%)</title><rect x="21.3501%" y="645" width="0.1714%" height="15" fill="rgb(252,169,45)" fg:x="23294" fg:w="187"/><text x="21.6001%" y="655.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (154 samples, 0.14%)</title><rect x="21.3803%" y="629" width="0.1411%" height="15" fill="rgb(212,48,26)" fg:x="23327" fg:w="154"/><text x="21.6303%" y="639.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (154 samples, 0.14%)</title><rect x="21.3803%" y="613" width="0.1411%" height="15" fill="rgb(251,102,48)" fg:x="23327" fg:w="154"/><text x="21.6303%" y="623.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (148 samples, 0.14%)</title><rect x="21.3858%" y="597" width="0.1356%" height="15" fill="rgb(243,208,16)" fg:x="23333" fg:w="148"/><text x="21.6358%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (148 samples, 0.14%)</title><rect x="21.3858%" y="581" width="0.1356%" height="15" fill="rgb(219,96,24)" fg:x="23333" fg:w="148"/><text x="21.6358%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (139 samples, 0.13%)</title><rect x="21.3941%" y="565" width="0.1274%" height="15" fill="rgb(219,33,29)" fg:x="23342" fg:w="139"/><text x="21.6441%" y="575.50"></text></g><g><title>alloc::alloc::exchange_malloc (122 samples, 0.11%)</title><rect x="21.4097%" y="549" width="0.1118%" height="15" fill="rgb(223,176,5)" fg:x="23359" fg:w="122"/><text x="21.6597%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (122 samples, 0.11%)</title><rect x="21.4097%" y="533" width="0.1118%" height="15" fill="rgb(228,140,14)" fg:x="23359" fg:w="122"/><text x="21.6597%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (122 samples, 0.11%)</title><rect x="21.4097%" y="517" width="0.1118%" height="15" fill="rgb(217,179,31)" fg:x="23359" fg:w="122"/><text x="21.6597%" y="527.50"></text></g><g><title>alloc::alloc::alloc (121 samples, 0.11%)</title><rect x="21.4106%" y="501" width="0.1109%" height="15" fill="rgb(230,9,30)" fg:x="23360" fg:w="121"/><text x="21.6606%" y="511.50"></text></g><g><title>__rg_alloc (121 samples, 0.11%)</title><rect x="21.4106%" y="485" width="0.1109%" height="15" fill="rgb(230,136,20)" fg:x="23360" fg:w="121"/><text x="21.6606%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (121 samples, 0.11%)</title><rect x="21.4106%" y="469" width="0.1109%" height="15" fill="rgb(215,210,22)" fg:x="23360" fg:w="121"/><text x="21.6606%" y="479.50"></text></g><g><title>rust_alloc (112 samples, 0.10%)</title><rect x="21.4188%" y="453" width="0.1027%" height="15" fill="rgb(218,43,5)" fg:x="23369" fg:w="112"/><text x="21.6688%" y="463.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="21.5948%" y="613" width="0.0174%" height="15" fill="rgb(216,11,5)" fg:x="23561" fg:w="19"/><text x="21.8448%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="21.5948%" y="629" width="0.0385%" height="15" fill="rgb(209,82,29)" fg:x="23561" fg:w="42"/><text x="21.8448%" y="639.50"></text></g><g><title>&lt;halfbrown::iter::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="21.6122%" y="613" width="0.0211%" height="15" fill="rgb(244,115,12)" fg:x="23580" fg:w="23"/><text x="21.8622%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (78 samples, 0.07%)</title><rect x="21.6333%" y="629" width="0.0715%" height="15" fill="rgb(222,82,18)" fg:x="23603" fg:w="78"/><text x="21.8833%" y="639.50"></text></g><g><title>&lt;halfbrown::iter::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (78 samples, 0.07%)</title><rect x="21.6333%" y="613" width="0.0715%" height="15" fill="rgb(249,227,8)" fg:x="23603" fg:w="78"/><text x="21.8833%" y="623.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (44 samples, 0.04%)</title><rect x="21.6645%" y="597" width="0.0403%" height="15" fill="rgb(253,141,45)" fg:x="23637" fg:w="44"/><text x="21.9145%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (44 samples, 0.04%)</title><rect x="21.6645%" y="581" width="0.0403%" height="15" fill="rgb(234,184,4)" fg:x="23637" fg:w="44"/><text x="21.9145%" y="591.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (45 samples, 0.04%)</title><rect x="21.7048%" y="629" width="0.0412%" height="15" fill="rgb(218,194,23)" fg:x="23681" fg:w="45"/><text x="21.9548%" y="639.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (45 samples, 0.04%)</title><rect x="21.7048%" y="613" width="0.0412%" height="15" fill="rgb(235,66,41)" fg:x="23681" fg:w="45"/><text x="21.9548%" y="623.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (45 samples, 0.04%)</title><rect x="21.7048%" y="597" width="0.0412%" height="15" fill="rgb(245,217,1)" fg:x="23681" fg:w="45"/><text x="21.9548%" y="607.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (44 samples, 0.04%)</title><rect x="21.7057%" y="581" width="0.0403%" height="15" fill="rgb(229,91,1)" fg:x="23682" fg:w="44"/><text x="21.9557%" y="591.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (44 samples, 0.04%)</title><rect x="21.7057%" y="565" width="0.0403%" height="15" fill="rgb(207,101,30)" fg:x="23682" fg:w="44"/><text x="21.9557%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (44 samples, 0.04%)</title><rect x="21.7057%" y="549" width="0.0403%" height="15" fill="rgb(223,82,49)" fg:x="23682" fg:w="44"/><text x="21.9557%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (44 samples, 0.04%)</title><rect x="21.7057%" y="533" width="0.0403%" height="15" fill="rgb(218,167,17)" fg:x="23682" fg:w="44"/><text x="21.9557%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (44 samples, 0.04%)</title><rect x="21.7057%" y="517" width="0.0403%" height="15" fill="rgb(208,103,14)" fg:x="23682" fg:w="44"/><text x="21.9557%" y="527.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (14 samples, 0.01%)</title><rect x="21.7717%" y="549" width="0.0128%" height="15" fill="rgb(238,20,8)" fg:x="23754" fg:w="14"/><text x="22.0217%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="21.7699%" y="565" width="0.0357%" height="15" fill="rgb(218,80,54)" fg:x="23752" fg:w="39"/><text x="22.0199%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (13 samples, 0.01%)</title><rect x="21.7937%" y="549" width="0.0119%" height="15" fill="rgb(240,144,17)" fg:x="23778" fg:w="13"/><text x="22.0437%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (532 samples, 0.49%)</title><rect x="21.3189%" y="677" width="0.4876%" height="15" fill="rgb(245,27,50)" fg:x="23260" fg:w="532"/><text x="21.5689%" y="687.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (507 samples, 0.46%)</title><rect x="21.3418%" y="661" width="0.4647%" height="15" fill="rgb(251,51,7)" fg:x="23285" fg:w="507"/><text x="21.5918%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (311 samples, 0.29%)</title><rect x="21.5215%" y="645" width="0.2850%" height="15" fill="rgb(245,217,29)" fg:x="23481" fg:w="311"/><text x="21.7715%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;halfbrown::iter::IntoIter&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;,&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from::{{closure}}&gt;&gt; (66 samples, 0.06%)</title><rect x="21.7460%" y="629" width="0.0605%" height="15" fill="rgb(221,176,29)" fg:x="23726" fg:w="66"/><text x="21.9960%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::iter::IntoIter&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (66 samples, 0.06%)</title><rect x="21.7460%" y="613" width="0.0605%" height="15" fill="rgb(212,180,24)" fg:x="23726" fg:w="66"/><text x="21.9960%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::iter::IntoIterInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (66 samples, 0.06%)</title><rect x="21.7460%" y="597" width="0.0605%" height="15" fill="rgb(254,24,2)" fg:x="23726" fg:w="66"/><text x="21.9960%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (56 samples, 0.05%)</title><rect x="21.7552%" y="581" width="0.0513%" height="15" fill="rgb(230,100,2)" fg:x="23736" fg:w="56"/><text x="22.0052%" y="591.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::IntoIterator for halfbrown::HashMap&lt;K,V,S&gt;&gt;::into_iter (42 samples, 0.04%)</title><rect x="21.8065%" y="677" width="0.0385%" height="15" fill="rgb(219,142,25)" fg:x="23792" fg:w="42"/><text x="22.0565%" y="687.50"></text></g><g><title>halfbrown::vecmap::iter::&lt;impl core::iter::traits::collect::IntoIterator for halfbrown::vecmap::VecMap&lt;K,V,S&gt;&gt;::into_iter (39 samples, 0.04%)</title><rect x="21.8093%" y="661" width="0.0357%" height="15" fill="rgb(240,73,43)" fg:x="23795" fg:w="39"/><text x="22.0593%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (39 samples, 0.04%)</title><rect x="21.8093%" y="645" width="0.0357%" height="15" fill="rgb(214,114,15)" fg:x="23795" fg:w="39"/><text x="22.0593%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (39 samples, 0.04%)</title><rect x="21.8093%" y="629" width="0.0357%" height="15" fill="rgb(207,130,4)" fg:x="23795" fg:w="39"/><text x="22.0593%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (37 samples, 0.03%)</title><rect x="21.8111%" y="613" width="0.0339%" height="15" fill="rgb(221,25,40)" fg:x="23797" fg:w="37"/><text x="22.0611%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,924 samples, 1.76%)</title><rect x="20.0889%" y="805" width="1.7634%" height="15" fill="rgb(241,184,7)" fg:x="21918" fg:w="1924"/><text x="20.3389%" y="815.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (1,924 samples, 1.76%)</title><rect x="20.0889%" y="789" width="1.7634%" height="15" fill="rgb(235,159,4)" fg:x="21918" fg:w="1924"/><text x="20.3389%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,924 samples, 1.76%)</title><rect x="20.0889%" y="773" width="1.7634%" height="15" fill="rgb(214,87,48)" fg:x="21918" fg:w="1924"/><text x="20.3389%" y="783.50"></text></g><g><title>&lt;tremor_script::pdk::PdkEventPayload as core::convert::From&lt;tremor_script::srs::EventPayload&gt;&gt;::from (1,484 samples, 1.36%)</title><rect x="20.4922%" y="757" width="1.3602%" height="15" fill="rgb(246,198,24)" fg:x="22358" fg:w="1484"/><text x="20.7422%" y="767.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,484 samples, 1.36%)</title><rect x="20.4922%" y="741" width="1.3602%" height="15" fill="rgb(209,66,40)" fg:x="22358" fg:w="1484"/><text x="20.7422%" y="751.50"></text></g><g><title>&lt;tremor_script::pdk::PdkValueAndMeta as core::convert::From&lt;tremor_script::srs::ValueAndMeta&gt;&gt;::from (1,484 samples, 1.36%)</title><rect x="20.4922%" y="725" width="1.3602%" height="15" fill="rgb(233,147,39)" fg:x="22358" fg:w="1484"/><text x="20.7422%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,484 samples, 1.36%)</title><rect x="20.4922%" y="709" width="1.3602%" height="15" fill="rgb(231,145,52)" fg:x="22358" fg:w="1484"/><text x="20.7422%" y="719.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (1,484 samples, 1.36%)</title><rect x="20.4922%" y="693" width="1.3602%" height="15" fill="rgb(206,20,26)" fg:x="22358" fg:w="1484"/><text x="20.7422%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.04%)</title><rect x="21.8753%" y="581" width="0.0367%" height="15" fill="rgb(238,220,4)" fg:x="23867" fg:w="40"/><text x="22.1253%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (263 samples, 0.24%)</title><rect x="22.1878%" y="565" width="0.2411%" height="15" fill="rgb(252,195,42)" fg:x="24208" fg:w="263"/><text x="22.4378%" y="575.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (96 samples, 0.09%)</title><rect x="22.3409%" y="549" width="0.0880%" height="15" fill="rgb(209,10,6)" fg:x="24375" fg:w="96"/><text x="22.5909%" y="559.50"></text></g><g><title>tremor_value::pdk::conv_u8 (11 samples, 0.01%)</title><rect x="22.4188%" y="533" width="0.0101%" height="15" fill="rgb(229,3,52)" fg:x="24460" fg:w="11"/><text x="22.6688%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.01%)</title><rect x="22.4289%" y="549" width="0.0119%" height="15" fill="rgb(253,49,37)" fg:x="24471" fg:w="13"/><text x="22.6789%" y="559.50"></text></g><g><title>core::mem::drop (16 samples, 0.01%)</title><rect x="22.4435%" y="549" width="0.0147%" height="15" fill="rgb(240,103,49)" fg:x="24487" fg:w="16"/><text x="22.6935%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (16 samples, 0.01%)</title><rect x="22.4435%" y="533" width="0.0147%" height="15" fill="rgb(250,182,30)" fg:x="24487" fg:w="16"/><text x="22.6935%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="22.4435%" y="517" width="0.0147%" height="15" fill="rgb(248,8,30)" fg:x="24487" fg:w="16"/><text x="22.6935%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (16 samples, 0.01%)</title><rect x="22.4435%" y="501" width="0.0147%" height="15" fill="rgb(237,120,30)" fg:x="24487" fg:w="16"/><text x="22.6935%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (11 samples, 0.01%)</title><rect x="22.4481%" y="485" width="0.0101%" height="15" fill="rgb(221,146,34)" fg:x="24492" fg:w="11"/><text x="22.6981%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (11 samples, 0.01%)</title><rect x="22.4481%" y="469" width="0.0101%" height="15" fill="rgb(242,55,13)" fg:x="24492" fg:w="11"/><text x="22.6981%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="22.4289%" y="565" width="0.0330%" height="15" fill="rgb(242,112,31)" fg:x="24471" fg:w="36"/><text x="22.6789%" y="575.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.03%)</title><rect x="22.4692%" y="565" width="0.0275%" height="15" fill="rgb(249,192,27)" fg:x="24515" fg:w="30"/><text x="22.7192%" y="575.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (76 samples, 0.07%)</title><rect x="22.4967%" y="565" width="0.0697%" height="15" fill="rgb(208,204,44)" fg:x="24545" fg:w="76"/><text x="22.7467%" y="575.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="22.5480%" y="549" width="0.0183%" height="15" fill="rgb(208,93,54)" fg:x="24601" fg:w="20"/><text x="22.7980%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (146 samples, 0.13%)</title><rect x="22.5663%" y="565" width="0.1338%" height="15" fill="rgb(242,1,31)" fg:x="24621" fg:w="146"/><text x="22.8163%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::deref::Deref for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::deref (38 samples, 0.03%)</title><rect x="22.7002%" y="565" width="0.0348%" height="15" fill="rgb(241,83,25)" fg:x="24767" fg:w="38"/><text x="22.9502%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (38 samples, 0.03%)</title><rect x="22.7002%" y="549" width="0.0348%" height="15" fill="rgb(205,169,50)" fg:x="24767" fg:w="38"/><text x="22.9502%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="22.7386%" y="501" width="0.0266%" height="15" fill="rgb(239,186,37)" fg:x="24809" fg:w="29"/><text x="22.9886%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (34 samples, 0.03%)</title><rect x="22.7368%" y="565" width="0.0312%" height="15" fill="rgb(205,221,10)" fg:x="24807" fg:w="34"/><text x="22.9868%" y="575.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (34 samples, 0.03%)</title><rect x="22.7368%" y="549" width="0.0312%" height="15" fill="rgb(218,196,15)" fg:x="24807" fg:w="34"/><text x="22.9868%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.03%)</title><rect x="22.7368%" y="533" width="0.0312%" height="15" fill="rgb(218,196,35)" fg:x="24807" fg:w="34"/><text x="22.9868%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (34 samples, 0.03%)</title><rect x="22.7368%" y="517" width="0.0312%" height="15" fill="rgb(233,63,24)" fg:x="24807" fg:w="34"/><text x="22.9868%" y="527.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (25 samples, 0.02%)</title><rect x="22.8642%" y="261" width="0.0229%" height="15" fill="rgb(225,8,4)" fg:x="24946" fg:w="25"/><text x="23.1142%" y="271.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (24 samples, 0.02%)</title><rect x="22.8651%" y="245" width="0.0220%" height="15" fill="rgb(234,105,35)" fg:x="24947" fg:w="24"/><text x="23.1151%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (67 samples, 0.06%)</title><rect x="22.8331%" y="309" width="0.0614%" height="15" fill="rgb(236,21,32)" fg:x="24912" fg:w="67"/><text x="23.0831%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (67 samples, 0.06%)</title><rect x="22.8331%" y="293" width="0.0614%" height="15" fill="rgb(228,109,6)" fg:x="24912" fg:w="67"/><text x="23.0831%" y="303.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (62 samples, 0.06%)</title><rect x="22.8376%" y="277" width="0.0568%" height="15" fill="rgb(229,215,31)" fg:x="24917" fg:w="62"/><text x="23.0876%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (87 samples, 0.08%)</title><rect x="22.8266%" y="341" width="0.0797%" height="15" fill="rgb(221,52,54)" fg:x="24905" fg:w="87"/><text x="23.0766%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (87 samples, 0.08%)</title><rect x="22.8266%" y="325" width="0.0797%" height="15" fill="rgb(252,129,43)" fg:x="24905" fg:w="87"/><text x="23.0766%" y="335.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="22.8945%" y="309" width="0.0119%" height="15" fill="rgb(248,183,27)" fg:x="24979" fg:w="13"/><text x="23.1445%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (94 samples, 0.09%)</title><rect x="22.8266%" y="373" width="0.0862%" height="15" fill="rgb(250,0,22)" fg:x="24905" fg:w="94"/><text x="23.0766%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (94 samples, 0.09%)</title><rect x="22.8266%" y="357" width="0.0862%" height="15" fill="rgb(213,166,10)" fg:x="24905" fg:w="94"/><text x="23.0766%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (101 samples, 0.09%)</title><rect x="22.8266%" y="389" width="0.0926%" height="15" fill="rgb(207,163,36)" fg:x="24905" fg:w="101"/><text x="23.0766%" y="399.50"></text></g><g><title>rust_dealloc (114 samples, 0.10%)</title><rect x="22.8193%" y="405" width="0.1045%" height="15" fill="rgb(208,122,22)" fg:x="24897" fg:w="114"/><text x="23.0693%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (27 samples, 0.02%)</title><rect x="22.9238%" y="389" width="0.0247%" height="15" fill="rgb(207,104,49)" fg:x="25011" fg:w="27"/><text x="23.1738%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (171 samples, 0.16%)</title><rect x="22.7946%" y="469" width="0.1567%" height="15" fill="rgb(248,211,50)" fg:x="24870" fg:w="171"/><text x="23.0446%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (170 samples, 0.16%)</title><rect x="22.7955%" y="453" width="0.1558%" height="15" fill="rgb(217,13,45)" fg:x="24871" fg:w="170"/><text x="23.0455%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (162 samples, 0.15%)</title><rect x="22.8028%" y="437" width="0.1485%" height="15" fill="rgb(211,216,49)" fg:x="24879" fg:w="162"/><text x="23.0528%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (162 samples, 0.15%)</title><rect x="22.8028%" y="421" width="0.1485%" height="15" fill="rgb(221,58,53)" fg:x="24879" fg:w="162"/><text x="23.0528%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (30 samples, 0.03%)</title><rect x="22.9238%" y="405" width="0.0275%" height="15" fill="rgb(220,112,41)" fg:x="25011" fg:w="30"/><text x="23.1738%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (200 samples, 0.18%)</title><rect x="22.7799%" y="533" width="0.1833%" height="15" fill="rgb(236,38,28)" fg:x="24854" fg:w="200"/><text x="23.0299%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (193 samples, 0.18%)</title><rect x="22.7863%" y="517" width="0.1769%" height="15" fill="rgb(227,195,22)" fg:x="24861" fg:w="193"/><text x="23.0363%" y="527.50"></text></g><g><title>core::mem::drop (184 samples, 0.17%)</title><rect x="22.7946%" y="501" width="0.1686%" height="15" fill="rgb(214,55,33)" fg:x="24870" fg:w="184"/><text x="23.0446%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (184 samples, 0.17%)</title><rect x="22.7946%" y="485" width="0.1686%" height="15" fill="rgb(248,80,13)" fg:x="24870" fg:w="184"/><text x="23.0446%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="22.9513%" y="469" width="0.0119%" height="15" fill="rgb(238,52,6)" fg:x="25041" fg:w="13"/><text x="23.2013%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="22.9513%" y="453" width="0.0119%" height="15" fill="rgb(224,198,47)" fg:x="25041" fg:w="13"/><text x="23.2013%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="22.9513%" y="437" width="0.0119%" height="15" fill="rgb(233,171,20)" fg:x="25041" fg:w="13"/><text x="23.2013%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="22.9513%" y="421" width="0.0119%" height="15" fill="rgb(241,30,25)" fg:x="25041" fg:w="13"/><text x="23.2013%" y="431.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="22.9513%" y="405" width="0.0119%" height="15" fill="rgb(207,171,38)" fg:x="25041" fg:w="13"/><text x="23.2013%" y="415.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="22.9513%" y="389" width="0.0119%" height="15" fill="rgb(234,70,1)" fg:x="25041" fg:w="13"/><text x="23.2013%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (17 samples, 0.02%)</title><rect x="22.9843%" y="437" width="0.0156%" height="15" fill="rgb(232,178,18)" fg:x="25077" fg:w="17"/><text x="23.2343%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (17 samples, 0.02%)</title><rect x="22.9843%" y="421" width="0.0156%" height="15" fill="rgb(241,78,40)" fg:x="25077" fg:w="17"/><text x="23.2343%" y="431.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (17 samples, 0.02%)</title><rect x="22.9843%" y="405" width="0.0156%" height="15" fill="rgb(222,35,25)" fg:x="25077" fg:w="17"/><text x="23.2343%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (33 samples, 0.03%)</title><rect x="22.9742%" y="469" width="0.0302%" height="15" fill="rgb(207,92,16)" fg:x="25066" fg:w="33"/><text x="23.2242%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (33 samples, 0.03%)</title><rect x="22.9742%" y="453" width="0.0302%" height="15" fill="rgb(216,59,51)" fg:x="25066" fg:w="33"/><text x="23.2242%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (45 samples, 0.04%)</title><rect x="22.9742%" y="501" width="0.0412%" height="15" fill="rgb(213,80,28)" fg:x="25066" fg:w="45"/><text x="23.2242%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (45 samples, 0.04%)</title><rect x="22.9742%" y="485" width="0.0412%" height="15" fill="rgb(220,93,7)" fg:x="25066" fg:w="45"/><text x="23.2242%" y="495.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="23.0044%" y="469" width="0.0110%" height="15" fill="rgb(225,24,44)" fg:x="25099" fg:w="12"/><text x="23.2544%" y="479.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="23.0044%" y="453" width="0.0110%" height="15" fill="rgb(243,74,40)" fg:x="25099" fg:w="12"/><text x="23.2544%" y="463.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="23.0044%" y="437" width="0.0110%" height="15" fill="rgb(228,39,7)" fg:x="25099" fg:w="12"/><text x="23.2544%" y="447.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="23.0044%" y="421" width="0.0110%" height="15" fill="rgb(227,79,8)" fg:x="25099" fg:w="12"/><text x="23.2544%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (271 samples, 0.25%)</title><rect x="22.7680%" y="565" width="0.2484%" height="15" fill="rgb(236,58,11)" fg:x="24841" fg:w="271"/><text x="23.0180%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (271 samples, 0.25%)</title><rect x="22.7680%" y="549" width="0.2484%" height="15" fill="rgb(249,63,35)" fg:x="24841" fg:w="271"/><text x="23.0180%" y="559.50"></text></g><g><title>rust_dealloc (58 samples, 0.05%)</title><rect x="22.9632%" y="533" width="0.0532%" height="15" fill="rgb(252,114,16)" fg:x="25054" fg:w="58"/><text x="23.2132%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (52 samples, 0.05%)</title><rect x="22.9687%" y="517" width="0.0477%" height="15" fill="rgb(254,151,24)" fg:x="25060" fg:w="52"/><text x="23.2187%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (20 samples, 0.02%)</title><rect x="23.0292%" y="469" width="0.0183%" height="15" fill="rgb(253,54,39)" fg:x="25126" fg:w="20"/><text x="23.2792%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (20 samples, 0.02%)</title><rect x="23.0292%" y="453" width="0.0183%" height="15" fill="rgb(243,25,45)" fg:x="25126" fg:w="20"/><text x="23.2792%" y="463.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="23.0347%" y="437" width="0.0128%" height="15" fill="rgb(234,134,9)" fg:x="25132" fg:w="14"/><text x="23.2847%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="23.0347%" y="421" width="0.0128%" height="15" fill="rgb(227,166,31)" fg:x="25132" fg:w="14"/><text x="23.2847%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="23.0347%" y="405" width="0.0128%" height="15" fill="rgb(245,143,41)" fg:x="25132" fg:w="14"/><text x="23.2847%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="23.0347%" y="389" width="0.0128%" height="15" fill="rgb(238,181,32)" fg:x="25132" fg:w="14"/><text x="23.2847%" y="399.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="23.0677%" y="437" width="0.0137%" height="15" fill="rgb(224,113,18)" fg:x="25168" fg:w="15"/><text x="23.3177%" y="447.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (15 samples, 0.01%)</title><rect x="23.1713%" y="341" width="0.0137%" height="15" fill="rgb(240,229,28)" fg:x="25281" fg:w="15"/><text x="23.4213%" y="351.50"></text></g><g><title> (15 samples, 0.01%)</title><rect x="23.1713%" y="325" width="0.0137%" height="15" fill="rgb(250,185,3)" fg:x="25281" fg:w="15"/><text x="23.4213%" y="335.50"></text></g><g><title>snmalloc::Remote::set_info (17 samples, 0.02%)</title><rect x="23.1850%" y="341" width="0.0156%" height="15" fill="rgb(212,59,25)" fg:x="25296" fg:w="17"/><text x="23.4350%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (120 samples, 0.11%)</title><rect x="23.1062%" y="373" width="0.1100%" height="15" fill="rgb(221,87,20)" fg:x="25210" fg:w="120"/><text x="23.3562%" y="383.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (100 samples, 0.09%)</title><rect x="23.1245%" y="357" width="0.0917%" height="15" fill="rgb(213,74,28)" fg:x="25230" fg:w="100"/><text x="23.3745%" y="367.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (17 samples, 0.02%)</title><rect x="23.2006%" y="341" width="0.0156%" height="15" fill="rgb(224,132,34)" fg:x="25313" fg:w="17"/><text x="23.4506%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (151 samples, 0.14%)</title><rect x="23.0814%" y="405" width="0.1384%" height="15" fill="rgb(222,101,24)" fg:x="25183" fg:w="151"/><text x="23.3314%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (151 samples, 0.14%)</title><rect x="23.0814%" y="389" width="0.1384%" height="15" fill="rgb(254,142,4)" fg:x="25183" fg:w="151"/><text x="23.3314%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (154 samples, 0.14%)</title><rect x="23.0814%" y="437" width="0.1411%" height="15" fill="rgb(230,229,49)" fg:x="25183" fg:w="154"/><text x="23.3314%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (154 samples, 0.14%)</title><rect x="23.0814%" y="421" width="0.1411%" height="15" fill="rgb(238,70,47)" fg:x="25183" fg:w="154"/><text x="23.3314%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (182 samples, 0.17%)</title><rect x="23.0594%" y="453" width="0.1668%" height="15" fill="rgb(231,160,17)" fg:x="25159" fg:w="182"/><text x="23.3094%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (232 samples, 0.21%)</title><rect x="23.0255%" y="517" width="0.2126%" height="15" fill="rgb(218,68,53)" fg:x="25122" fg:w="232"/><text x="23.2755%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (232 samples, 0.21%)</title><rect x="23.0255%" y="501" width="0.2126%" height="15" fill="rgb(236,111,10)" fg:x="25122" fg:w="232"/><text x="23.2755%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (232 samples, 0.21%)</title><rect x="23.0255%" y="485" width="0.2126%" height="15" fill="rgb(224,34,41)" fg:x="25122" fg:w="232"/><text x="23.2755%" y="495.50"></text></g><g><title>rust_dealloc (208 samples, 0.19%)</title><rect x="23.0475%" y="469" width="0.1906%" height="15" fill="rgb(241,118,19)" fg:x="25146" fg:w="208"/><text x="23.2975%" y="479.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="23.2262%" y="453" width="0.0119%" height="15" fill="rgb(238,129,25)" fg:x="25341" fg:w="13"/><text x="23.4762%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (11 samples, 0.01%)</title><rect x="23.2492%" y="453" width="0.0101%" height="15" fill="rgb(238,22,31)" fg:x="25366" fg:w="11"/><text x="23.4992%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (11 samples, 0.01%)</title><rect x="23.2492%" y="437" width="0.0101%" height="15" fill="rgb(222,174,48)" fg:x="25366" fg:w="11"/><text x="23.4992%" y="447.50"></text></g><g><title>rust_dealloc (29 samples, 0.03%)</title><rect x="23.6323%" y="245" width="0.0266%" height="15" fill="rgb(206,152,40)" fg:x="25784" fg:w="29"/><text x="23.8823%" y="255.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (12 samples, 0.01%)</title><rect x="23.7230%" y="213" width="0.0110%" height="15" fill="rgb(218,99,54)" fg:x="25883" fg:w="12"/><text x="23.9730%" y="223.50"></text></g><g><title> (12 samples, 0.01%)</title><rect x="23.7230%" y="197" width="0.0110%" height="15" fill="rgb(220,174,26)" fg:x="25883" fg:w="12"/><text x="23.9730%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (80 samples, 0.07%)</title><rect x="23.6699%" y="245" width="0.0733%" height="15" fill="rgb(245,116,9)" fg:x="25825" fg:w="80"/><text x="23.9199%" y="255.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (75 samples, 0.07%)</title><rect x="23.6744%" y="229" width="0.0687%" height="15" fill="rgb(209,72,35)" fg:x="25830" fg:w="75"/><text x="23.9244%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (134 samples, 0.12%)</title><rect x="23.6314%" y="309" width="0.1228%" height="15" fill="rgb(226,126,21)" fg:x="25783" fg:w="134"/><text x="23.8814%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (134 samples, 0.12%)</title><rect x="23.6314%" y="293" width="0.1228%" height="15" fill="rgb(227,192,1)" fg:x="25783" fg:w="134"/><text x="23.8814%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (134 samples, 0.12%)</title><rect x="23.6314%" y="277" width="0.1228%" height="15" fill="rgb(237,180,29)" fg:x="25783" fg:w="134"/><text x="23.8814%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (134 samples, 0.12%)</title><rect x="23.6314%" y="261" width="0.1228%" height="15" fill="rgb(230,197,35)" fg:x="25783" fg:w="134"/><text x="23.8814%" y="271.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="23.7432%" y="245" width="0.0110%" height="15" fill="rgb(246,193,31)" fg:x="25905" fg:w="12"/><text x="23.9932%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (148 samples, 0.14%)</title><rect x="23.6213%" y="325" width="0.1356%" height="15" fill="rgb(241,36,4)" fg:x="25772" fg:w="148"/><text x="23.8713%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (550 samples, 0.50%)</title><rect x="23.2592%" y="421" width="0.5041%" height="15" fill="rgb(241,130,17)" fg:x="25377" fg:w="550"/><text x="23.5092%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (547 samples, 0.50%)</title><rect x="23.2620%" y="405" width="0.5014%" height="15" fill="rgb(206,137,32)" fg:x="25380" fg:w="547"/><text x="23.5120%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (532 samples, 0.49%)</title><rect x="23.2757%" y="389" width="0.4876%" height="15" fill="rgb(237,228,51)" fg:x="25395" fg:w="532"/><text x="23.5257%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (532 samples, 0.49%)</title><rect x="23.2757%" y="373" width="0.4876%" height="15" fill="rgb(243,6,42)" fg:x="25395" fg:w="532"/><text x="23.5257%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (532 samples, 0.49%)</title><rect x="23.2757%" y="357" width="0.4876%" height="15" fill="rgb(251,74,28)" fg:x="25395" fg:w="532"/><text x="23.5257%" y="367.50"></text></g><g><title>rust_dealloc (159 samples, 0.15%)</title><rect x="23.6176%" y="341" width="0.1457%" height="15" fill="rgb(218,20,49)" fg:x="25768" fg:w="159"/><text x="23.8676%" y="351.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (587 samples, 0.54%)</title><rect x="23.2391%" y="485" width="0.5380%" height="15" fill="rgb(238,28,14)" fg:x="25355" fg:w="587"/><text x="23.4891%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (586 samples, 0.54%)</title><rect x="23.2400%" y="469" width="0.5371%" height="15" fill="rgb(229,40,46)" fg:x="25356" fg:w="586"/><text x="23.4900%" y="479.50"></text></g><g><title>core::mem::drop (565 samples, 0.52%)</title><rect x="23.2592%" y="453" width="0.5178%" height="15" fill="rgb(244,195,20)" fg:x="25377" fg:w="565"/><text x="23.5092%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (565 samples, 0.52%)</title><rect x="23.2592%" y="437" width="0.5178%" height="15" fill="rgb(253,56,35)" fg:x="25377" fg:w="565"/><text x="23.5092%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (15 samples, 0.01%)</title><rect x="23.7633%" y="421" width="0.0137%" height="15" fill="rgb(210,149,44)" fg:x="25927" fg:w="15"/><text x="24.0133%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="23.7633%" y="405" width="0.0137%" height="15" fill="rgb(240,135,12)" fg:x="25927" fg:w="15"/><text x="24.0133%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="23.7633%" y="389" width="0.0137%" height="15" fill="rgb(251,24,50)" fg:x="25927" fg:w="15"/><text x="24.0133%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="23.7633%" y="373" width="0.0137%" height="15" fill="rgb(243,200,47)" fg:x="25927" fg:w="15"/><text x="24.0133%" y="383.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="23.7633%" y="357" width="0.0137%" height="15" fill="rgb(224,166,26)" fg:x="25927" fg:w="15"/><text x="24.0133%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="23.7633%" y="341" width="0.0137%" height="15" fill="rgb(233,0,47)" fg:x="25927" fg:w="15"/><text x="24.0133%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="23.8165%" y="357" width="0.0165%" height="15" fill="rgb(253,80,5)" fg:x="25985" fg:w="18"/><text x="24.0665%" y="367.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="23.8165%" y="341" width="0.0165%" height="15" fill="rgb(214,133,25)" fg:x="25985" fg:w="18"/><text x="24.0665%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (49 samples, 0.04%)</title><rect x="23.7936%" y="389" width="0.0449%" height="15" fill="rgb(209,27,14)" fg:x="25960" fg:w="49"/><text x="24.0436%" y="399.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (44 samples, 0.04%)</title><rect x="23.7982%" y="373" width="0.0403%" height="15" fill="rgb(219,102,51)" fg:x="25965" fg:w="44"/><text x="24.0482%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (66 samples, 0.06%)</title><rect x="23.7899%" y="421" width="0.0605%" height="15" fill="rgb(237,18,16)" fg:x="25956" fg:w="66"/><text x="24.0399%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (66 samples, 0.06%)</title><rect x="23.7899%" y="405" width="0.0605%" height="15" fill="rgb(241,85,17)" fg:x="25956" fg:w="66"/><text x="24.0399%" y="415.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="23.8385%" y="389" width="0.0119%" height="15" fill="rgb(236,90,42)" fg:x="26009" fg:w="13"/><text x="24.0885%" y="399.50"></text></g><g><title>rust_dealloc (86 samples, 0.08%)</title><rect x="23.7771%" y="485" width="0.0788%" height="15" fill="rgb(249,57,21)" fg:x="25942" fg:w="86"/><text x="24.0271%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (80 samples, 0.07%)</title><rect x="23.7826%" y="469" width="0.0733%" height="15" fill="rgb(243,12,36)" fg:x="25948" fg:w="80"/><text x="24.0326%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (72 samples, 0.07%)</title><rect x="23.7899%" y="453" width="0.0660%" height="15" fill="rgb(253,128,47)" fg:x="25956" fg:w="72"/><text x="24.0399%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (72 samples, 0.07%)</title><rect x="23.7899%" y="437" width="0.0660%" height="15" fill="rgb(207,33,20)" fg:x="25956" fg:w="72"/><text x="24.0399%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (912 samples, 0.84%)</title><rect x="23.0209%" y="549" width="0.8359%" height="15" fill="rgb(233,215,35)" fg:x="25117" fg:w="912"/><text x="23.2709%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (907 samples, 0.83%)</title><rect x="23.0255%" y="533" width="0.8313%" height="15" fill="rgb(249,188,52)" fg:x="25122" fg:w="907"/><text x="23.2755%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (675 samples, 0.62%)</title><rect x="23.2382%" y="517" width="0.6187%" height="15" fill="rgb(225,12,32)" fg:x="25354" fg:w="675"/><text x="23.4882%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (675 samples, 0.62%)</title><rect x="23.2382%" y="501" width="0.6187%" height="15" fill="rgb(247,98,14)" fg:x="25354" fg:w="675"/><text x="23.4882%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (15 samples, 0.01%)</title><rect x="23.8568%" y="549" width="0.0137%" height="15" fill="rgb(247,219,48)" fg:x="26029" fg:w="15"/><text x="24.1068%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (15 samples, 0.01%)</title><rect x="23.8568%" y="533" width="0.0137%" height="15" fill="rgb(253,60,48)" fg:x="26029" fg:w="15"/><text x="24.1068%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (15 samples, 0.01%)</title><rect x="23.8568%" y="517" width="0.0137%" height="15" fill="rgb(245,15,52)" fg:x="26029" fg:w="15"/><text x="24.1068%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (15 samples, 0.01%)</title><rect x="23.8568%" y="501" width="0.0137%" height="15" fill="rgb(220,133,28)" fg:x="26029" fg:w="15"/><text x="24.1068%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (15 samples, 0.01%)</title><rect x="23.8568%" y="485" width="0.0137%" height="15" fill="rgb(217,180,4)" fg:x="26029" fg:w="15"/><text x="24.1068%" y="495.50"></text></g><g><title>abi_stable::std_types::arc::private::RArc&lt;T&gt;::data (259 samples, 0.24%)</title><rect x="23.9402%" y="373" width="0.2374%" height="15" fill="rgb(251,24,1)" fg:x="26120" fg:w="259"/><text x="24.1902%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::get_mut_unchecked (12 samples, 0.01%)</title><rect x="24.1914%" y="293" width="0.0110%" height="15" fill="rgb(212,185,49)" fg:x="26394" fg:w="12"/><text x="24.4414%" y="303.50"></text></g><g><title>core::mem::drop (432 samples, 0.40%)</title><rect x="24.2024%" y="293" width="0.3959%" height="15" fill="rgb(215,175,22)" fg:x="26406" fg:w="432"/><text x="24.4524%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (432 samples, 0.40%)</title><rect x="24.2024%" y="277" width="0.3959%" height="15" fill="rgb(250,205,14)" fg:x="26406" fg:w="432"/><text x="24.4524%" y="287.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (432 samples, 0.40%)</title><rect x="24.2024%" y="261" width="0.3959%" height="15" fill="rgb(225,211,22)" fg:x="26406" fg:w="432"/><text x="24.4524%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (422 samples, 0.39%)</title><rect x="24.2115%" y="245" width="0.3868%" height="15" fill="rgb(251,179,42)" fg:x="26416" fg:w="422"/><text x="24.4615%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_sub (422 samples, 0.39%)</title><rect x="24.2115%" y="229" width="0.3868%" height="15" fill="rgb(208,216,51)" fg:x="26416" fg:w="422"/><text x="24.4615%" y="239.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (23 samples, 0.02%)</title><rect x="24.6826%" y="117" width="0.0211%" height="15" fill="rgb(235,36,11)" fg:x="26930" fg:w="23"/><text x="24.9326%" y="127.50"></text></g><g><title> (23 samples, 0.02%)</title><rect x="24.6826%" y="101" width="0.0211%" height="15" fill="rgb(213,189,28)" fg:x="26930" fg:w="23"/><text x="24.9326%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (76 samples, 0.07%)</title><rect x="24.6432%" y="149" width="0.0697%" height="15" fill="rgb(227,203,42)" fg:x="26887" fg:w="76"/><text x="24.8932%" y="159.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (63 samples, 0.06%)</title><rect x="24.6551%" y="133" width="0.0577%" height="15" fill="rgb(244,72,36)" fg:x="26900" fg:w="63"/><text x="24.9051%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (104 samples, 0.10%)</title><rect x="24.6286%" y="181" width="0.0953%" height="15" fill="rgb(213,53,17)" fg:x="26871" fg:w="104"/><text x="24.8786%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (104 samples, 0.10%)</title><rect x="24.6286%" y="165" width="0.0953%" height="15" fill="rgb(207,167,3)" fg:x="26871" fg:w="104"/><text x="24.8786%" y="175.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="24.7129%" y="149" width="0.0110%" height="15" fill="rgb(216,98,30)" fg:x="26963" fg:w="12"/><text x="24.9629%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (112 samples, 0.10%)</title><rect x="24.6286%" y="213" width="0.1027%" height="15" fill="rgb(236,123,15)" fg:x="26871" fg:w="112"/><text x="24.8786%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (112 samples, 0.10%)</title><rect x="24.6286%" y="197" width="0.1027%" height="15" fill="rgb(248,81,50)" fg:x="26871" fg:w="112"/><text x="24.8786%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (125 samples, 0.11%)</title><rect x="24.6249%" y="229" width="0.1146%" height="15" fill="rgb(214,120,4)" fg:x="26867" fg:w="125"/><text x="24.8749%" y="239.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (605 samples, 0.55%)</title><rect x="24.1905%" y="309" width="0.5545%" height="15" fill="rgb(208,179,34)" fg:x="26393" fg:w="605"/><text x="24.4405%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (160 samples, 0.15%)</title><rect x="24.5983%" y="293" width="0.1466%" height="15" fill="rgb(227,140,7)" fg:x="26838" fg:w="160"/><text x="24.8483%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (160 samples, 0.15%)</title><rect x="24.5983%" y="277" width="0.1466%" height="15" fill="rgb(214,22,6)" fg:x="26838" fg:w="160"/><text x="24.8483%" y="287.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (160 samples, 0.15%)</title><rect x="24.5983%" y="261" width="0.1466%" height="15" fill="rgb(207,137,27)" fg:x="26838" fg:w="160"/><text x="24.8483%" y="271.50"></text></g><g><title>rust_dealloc (140 samples, 0.13%)</title><rect x="24.6167%" y="245" width="0.1283%" height="15" fill="rgb(210,8,46)" fg:x="26858" fg:w="140"/><text x="24.8667%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (512 samples, 0.47%)</title><rect x="24.7450%" y="309" width="0.4693%" height="15" fill="rgb(240,16,54)" fg:x="26998" fg:w="512"/><text x="24.9950%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_sub (512 samples, 0.47%)</title><rect x="24.7450%" y="293" width="0.4693%" height="15" fill="rgb(211,209,29)" fg:x="26998" fg:w="512"/><text x="24.9950%" y="303.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (15 samples, 0.01%)</title><rect x="25.2702%" y="181" width="0.0137%" height="15" fill="rgb(226,228,24)" fg:x="27571" fg:w="15"/><text x="25.5202%" y="191.50"></text></g><g><title> (15 samples, 0.01%)</title><rect x="25.2702%" y="165" width="0.0137%" height="15" fill="rgb(222,84,9)" fg:x="27571" fg:w="15"/><text x="25.5202%" y="175.50"></text></g><g><title>rust_dealloc (82 samples, 0.08%)</title><rect x="25.2142%" y="309" width="0.0752%" height="15" fill="rgb(234,203,30)" fg:x="27510" fg:w="82"/><text x="25.4642%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (77 samples, 0.07%)</title><rect x="25.2188%" y="293" width="0.0706%" height="15" fill="rgb(238,109,14)" fg:x="27515" fg:w="77"/><text x="25.4688%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (60 samples, 0.05%)</title><rect x="25.2344%" y="277" width="0.0550%" height="15" fill="rgb(233,206,34)" fg:x="27532" fg:w="60"/><text x="25.4844%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (60 samples, 0.05%)</title><rect x="25.2344%" y="261" width="0.0550%" height="15" fill="rgb(220,167,47)" fg:x="27532" fg:w="60"/><text x="25.4844%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (60 samples, 0.05%)</title><rect x="25.2344%" y="245" width="0.0550%" height="15" fill="rgb(238,105,10)" fg:x="27532" fg:w="60"/><text x="25.4844%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (60 samples, 0.05%)</title><rect x="25.2344%" y="229" width="0.0550%" height="15" fill="rgb(213,227,17)" fg:x="27532" fg:w="60"/><text x="25.4844%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (46 samples, 0.04%)</title><rect x="25.2472%" y="213" width="0.0422%" height="15" fill="rgb(217,132,38)" fg:x="27546" fg:w="46"/><text x="25.4972%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (34 samples, 0.03%)</title><rect x="25.2582%" y="197" width="0.0312%" height="15" fill="rgb(242,146,4)" fg:x="27558" fg:w="34"/><text x="25.5082%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,524 samples, 1.40%)</title><rect x="23.8990%" y="437" width="1.3968%" height="15" fill="rgb(212,61,9)" fg:x="26075" fg:w="1524"/><text x="24.1490%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (1,523 samples, 1.40%)</title><rect x="23.8999%" y="421" width="1.3959%" height="15" fill="rgb(247,126,22)" fg:x="26076" fg:w="1523"/><text x="24.1499%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,502 samples, 1.38%)</title><rect x="23.9192%" y="405" width="1.3767%" height="15" fill="rgb(220,196,2)" fg:x="26097" fg:w="1502"/><text x="24.1692%" y="415.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (1,502 samples, 1.38%)</title><rect x="23.9192%" y="389" width="1.3767%" height="15" fill="rgb(208,46,4)" fg:x="26097" fg:w="1502"/><text x="24.1692%" y="399.50"></text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (1,220 samples, 1.12%)</title><rect x="24.1776%" y="373" width="1.1182%" height="15" fill="rgb(252,104,46)" fg:x="26379" fg:w="1220"/><text x="24.4276%" y="383.50"></text></g><g><title>core::mem::drop (1,209 samples, 1.11%)</title><rect x="24.1877%" y="357" width="1.1081%" height="15" fill="rgb(237,152,48)" fg:x="26390" fg:w="1209"/><text x="24.4377%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,209 samples, 1.11%)</title><rect x="24.1877%" y="341" width="1.1081%" height="15" fill="rgb(221,59,37)" fg:x="26390" fg:w="1209"/><text x="24.4377%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,209 samples, 1.11%)</title><rect x="24.1877%" y="325" width="1.1081%" height="15" fill="rgb(209,202,51)" fg:x="26390" fg:w="1209"/><text x="24.4377%" y="335.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (1,557 samples, 1.43%)</title><rect x="23.8770%" y="501" width="1.4271%" height="15" fill="rgb(228,81,30)" fg:x="26051" fg:w="1557"/><text x="24.1270%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (1,548 samples, 1.42%)</title><rect x="23.8852%" y="485" width="1.4188%" height="15" fill="rgb(227,42,39)" fg:x="26060" fg:w="1548"/><text x="24.1352%" y="495.50"></text></g><g><title>core::mem::drop (1,533 samples, 1.41%)</title><rect x="23.8990%" y="469" width="1.4051%" height="15" fill="rgb(221,26,2)" fg:x="26075" fg:w="1533"/><text x="24.1490%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (1,533 samples, 1.41%)</title><rect x="23.8990%" y="453" width="1.4051%" height="15" fill="rgb(254,61,31)" fg:x="26075" fg:w="1533"/><text x="24.1490%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (15 samples, 0.01%)</title><rect x="25.3462%" y="373" width="0.0137%" height="15" fill="rgb(222,173,38)" fg:x="27654" fg:w="15"/><text x="25.5962%" y="383.50"></text></g><g><title> (15 samples, 0.01%)</title><rect x="25.3462%" y="357" width="0.0137%" height="15" fill="rgb(218,50,12)" fg:x="27654" fg:w="15"/><text x="25.5962%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (51 samples, 0.05%)</title><rect x="25.3224%" y="405" width="0.0467%" height="15" fill="rgb(223,88,40)" fg:x="27628" fg:w="51"/><text x="25.5724%" y="415.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (42 samples, 0.04%)</title><rect x="25.3306%" y="389" width="0.0385%" height="15" fill="rgb(237,54,19)" fg:x="27637" fg:w="42"/><text x="25.5806%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (62 samples, 0.06%)</title><rect x="25.3132%" y="437" width="0.0568%" height="15" fill="rgb(251,129,25)" fg:x="27618" fg:w="62"/><text x="25.5632%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (62 samples, 0.06%)</title><rect x="25.3132%" y="421" width="0.0568%" height="15" fill="rgb(238,97,19)" fg:x="27618" fg:w="62"/><text x="25.5632%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (69 samples, 0.06%)</title><rect x="25.3132%" y="469" width="0.0632%" height="15" fill="rgb(240,169,18)" fg:x="27618" fg:w="69"/><text x="25.5632%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (69 samples, 0.06%)</title><rect x="25.3132%" y="453" width="0.0632%" height="15" fill="rgb(230,187,49)" fg:x="27618" fg:w="69"/><text x="25.5632%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (76 samples, 0.07%)</title><rect x="25.3132%" y="485" width="0.0697%" height="15" fill="rgb(209,44,26)" fg:x="27618" fg:w="76"/><text x="25.5632%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (1,653 samples, 1.52%)</title><rect x="23.8770%" y="533" width="1.5151%" height="15" fill="rgb(244,0,6)" fg:x="26051" fg:w="1653"/><text x="24.1270%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (1,653 samples, 1.52%)</title><rect x="23.8770%" y="517" width="1.5151%" height="15" fill="rgb(248,18,21)" fg:x="26051" fg:w="1653"/><text x="24.1270%" y="527.50"></text></g><g><title>rust_dealloc (96 samples, 0.09%)</title><rect x="25.3041%" y="501" width="0.0880%" height="15" fill="rgb(245,180,19)" fg:x="27608" fg:w="96"/><text x="25.5541%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (114 samples, 0.10%)</title><rect x="25.3921%" y="517" width="0.1045%" height="15" fill="rgb(252,118,36)" fg:x="27704" fg:w="114"/><text x="25.6421%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (46 samples, 0.04%)</title><rect x="25.4544%" y="501" width="0.0422%" height="15" fill="rgb(210,224,19)" fg:x="27772" fg:w="46"/><text x="25.7044%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (37 samples, 0.03%)</title><rect x="25.4626%" y="485" width="0.0339%" height="15" fill="rgb(218,30,24)" fg:x="27781" fg:w="37"/><text x="25.7126%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (37 samples, 0.03%)</title><rect x="25.4626%" y="469" width="0.0339%" height="15" fill="rgb(219,75,50)" fg:x="27781" fg:w="37"/><text x="25.7126%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="25.4837%" y="453" width="0.0128%" height="15" fill="rgb(234,72,50)" fg:x="27804" fg:w="14"/><text x="25.7337%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::inner::RawTable&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (14 samples, 0.01%)</title><rect x="25.4837%" y="437" width="0.0128%" height="15" fill="rgb(219,100,48)" fg:x="27804" fg:w="14"/><text x="25.7337%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="25.4837%" y="421" width="0.0128%" height="15" fill="rgb(253,5,41)" fg:x="27804" fg:w="14"/><text x="25.7337%" y="431.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="25.5195%" y="421" width="0.0137%" height="15" fill="rgb(247,181,11)" fg:x="27843" fg:w="15"/><text x="25.7695%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (52 samples, 0.05%)</title><rect x="25.5689%" y="373" width="0.0477%" height="15" fill="rgb(222,223,25)" fg:x="27897" fg:w="52"/><text x="25.8189%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (51 samples, 0.05%)</title><rect x="25.5699%" y="357" width="0.0467%" height="15" fill="rgb(214,198,28)" fg:x="27898" fg:w="51"/><text x="25.8199%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (100 samples, 0.09%)</title><rect x="25.5369%" y="421" width="0.0917%" height="15" fill="rgb(230,46,43)" fg:x="27862" fg:w="100"/><text x="25.7869%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (100 samples, 0.09%)</title><rect x="25.5369%" y="405" width="0.0917%" height="15" fill="rgb(233,65,53)" fg:x="27862" fg:w="100"/><text x="25.7869%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (99 samples, 0.09%)</title><rect x="25.5378%" y="389" width="0.0907%" height="15" fill="rgb(221,121,27)" fg:x="27863" fg:w="99"/><text x="25.7878%" y="399.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="25.6166%" y="373" width="0.0119%" height="15" fill="rgb(247,70,47)" fg:x="27949" fg:w="13"/><text x="25.8666%" y="383.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="25.6166%" y="357" width="0.0119%" height="15" fill="rgb(228,85,35)" fg:x="27949" fg:w="13"/><text x="25.8666%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (146 samples, 0.13%)</title><rect x="25.5158%" y="453" width="0.1338%" height="15" fill="rgb(209,50,18)" fg:x="27839" fg:w="146"/><text x="25.7658%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (146 samples, 0.13%)</title><rect x="25.5158%" y="437" width="0.1338%" height="15" fill="rgb(250,19,35)" fg:x="27839" fg:w="146"/><text x="25.7658%" y="447.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (23 samples, 0.02%)</title><rect x="25.6285%" y="421" width="0.0211%" height="15" fill="rgb(253,107,29)" fg:x="27962" fg:w="23"/><text x="25.8785%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (148 samples, 0.14%)</title><rect x="25.5158%" y="485" width="0.1356%" height="15" fill="rgb(252,179,29)" fg:x="27839" fg:w="148"/><text x="25.7658%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (148 samples, 0.14%)</title><rect x="25.5158%" y="469" width="0.1356%" height="15" fill="rgb(238,194,6)" fg:x="27839" fg:w="148"/><text x="25.7658%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (166 samples, 0.15%)</title><rect x="25.5020%" y="501" width="0.1521%" height="15" fill="rgb(238,164,29)" fg:x="27824" fg:w="166"/><text x="25.7520%" y="511.50"></text></g><g><title>rust_dealloc (179 samples, 0.16%)</title><rect x="25.4965%" y="517" width="0.1641%" height="15" fill="rgb(224,25,9)" fg:x="27818" fg:w="179"/><text x="25.7465%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (2,889 samples, 2.65%)</title><rect x="23.0164%" y="565" width="2.6479%" height="15" fill="rgb(244,153,23)" fg:x="25112" fg:w="2889"/><text x="23.2664%" y="575.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (1,950 samples, 1.79%)</title><rect x="23.8770%" y="549" width="1.7873%" height="15" fill="rgb(212,203,14)" fg:x="26051" fg:w="1950"/><text x="24.1270%" y="559.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (297 samples, 0.27%)</title><rect x="25.3921%" y="533" width="0.2722%" height="15" fill="rgb(220,164,20)" fg:x="27704" fg:w="297"/><text x="25.6421%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::pdk::PdkValue&gt; (16 samples, 0.01%)</title><rect x="25.6643%" y="565" width="0.0147%" height="15" fill="rgb(222,203,48)" fg:x="28001" fg:w="16"/><text x="25.9143%" y="575.50"></text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (15 samples, 0.01%)</title><rect x="25.7761%" y="517" width="0.0137%" height="15" fill="rgb(215,159,22)" fg:x="28123" fg:w="15"/><text x="26.0261%" y="527.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (14 samples, 0.01%)</title><rect x="25.8155%" y="485" width="0.0128%" height="15" fill="rgb(216,183,47)" fg:x="28166" fg:w="14"/><text x="26.0655%" y="495.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (41 samples, 0.04%)</title><rect x="25.7972%" y="501" width="0.0376%" height="15" fill="rgb(229,195,25)" fg:x="28146" fg:w="41"/><text x="26.0472%" y="511.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (50 samples, 0.05%)</title><rect x="25.7935%" y="517" width="0.0458%" height="15" fill="rgb(224,132,51)" fg:x="28142" fg:w="50"/><text x="26.0435%" y="527.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (175 samples, 0.16%)</title><rect x="25.6872%" y="565" width="0.1604%" height="15" fill="rgb(240,63,7)" fg:x="28026" fg:w="175"/><text x="25.9372%" y="575.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (172 samples, 0.16%)</title><rect x="25.6899%" y="549" width="0.1576%" height="15" fill="rgb(249,182,41)" fg:x="28029" fg:w="172"/><text x="25.9399%" y="559.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (172 samples, 0.16%)</title><rect x="25.6899%" y="533" width="0.1576%" height="15" fill="rgb(243,47,26)" fg:x="28029" fg:w="172"/><text x="25.9399%" y="543.50"></text></g><g><title>core::time::Duration::as_nanos (14 samples, 0.01%)</title><rect x="25.8705%" y="549" width="0.0128%" height="15" fill="rgb(233,48,2)" fg:x="28226" fg:w="14"/><text x="26.1205%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (67 samples, 0.06%)</title><rect x="25.9337%" y="501" width="0.0614%" height="15" fill="rgb(244,165,34)" fg:x="28295" fg:w="67"/><text x="26.1837%" y="511.50"></text></g><g><title>core::cmp::PartialOrd::ge (67 samples, 0.06%)</title><rect x="25.9337%" y="485" width="0.0614%" height="15" fill="rgb(207,89,7)" fg:x="28295" fg:w="67"/><text x="26.1837%" y="495.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (64 samples, 0.06%)</title><rect x="25.9365%" y="469" width="0.0587%" height="15" fill="rgb(244,117,36)" fg:x="28298" fg:w="64"/><text x="26.1865%" y="479.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (64 samples, 0.06%)</title><rect x="25.9365%" y="453" width="0.0587%" height="15" fill="rgb(226,144,34)" fg:x="28298" fg:w="64"/><text x="26.1865%" y="463.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (64 samples, 0.06%)</title><rect x="25.9365%" y="437" width="0.0587%" height="15" fill="rgb(213,23,19)" fg:x="28298" fg:w="64"/><text x="26.1865%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (38 samples, 0.03%)</title><rect x="25.9603%" y="421" width="0.0348%" height="15" fill="rgb(217,75,12)" fg:x="28324" fg:w="38"/><text x="26.2103%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (141 samples, 0.13%)</title><rect x="25.8833%" y="533" width="0.1292%" height="15" fill="rgb(224,159,17)" fg:x="28240" fg:w="141"/><text x="26.1333%" y="543.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (141 samples, 0.13%)</title><rect x="25.8833%" y="517" width="0.1292%" height="15" fill="rgb(217,118,1)" fg:x="28240" fg:w="141"/><text x="26.1333%" y="527.50"></text></g><g><title>core::time::Duration::new (19 samples, 0.02%)</title><rect x="25.9951%" y="501" width="0.0174%" height="15" fill="rgb(232,180,48)" fg:x="28362" fg:w="19"/><text x="26.2451%" y="511.50"></text></g><g><title>std::time::SystemTime::duration_since (145 samples, 0.13%)</title><rect x="25.8833%" y="549" width="0.1329%" height="15" fill="rgb(230,27,33)" fg:x="28240" fg:w="145"/><text x="26.1333%" y="559.50"></text></g><g><title>tremor_common::time::nanotime (774 samples, 0.71%)</title><rect x="25.8476%" y="565" width="0.7094%" height="15" fill="rgb(205,31,21)" fg:x="28201" fg:w="774"/><text x="26.0976%" y="575.50"></text></g><g><title>std::time::SystemTime::now (590 samples, 0.54%)</title><rect x="26.0162%" y="549" width="0.5408%" height="15" fill="rgb(253,59,4)" fg:x="28385" fg:w="590"/><text x="26.2662%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (590 samples, 0.54%)</title><rect x="26.0162%" y="533" width="0.5408%" height="15" fill="rgb(224,201,9)" fg:x="28385" fg:w="590"/><text x="26.2662%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::now (590 samples, 0.54%)</title><rect x="26.0162%" y="517" width="0.5408%" height="15" fill="rgb(229,206,30)" fg:x="28385" fg:w="590"/><text x="26.2662%" y="527.50"></text></g><g><title>__clock_gettime_2 (485 samples, 0.44%)</title><rect x="26.1125%" y="501" width="0.4445%" height="15" fill="rgb(212,67,47)" fg:x="28490" fg:w="485"/><text x="26.3625%" y="511.50"></text></g><g><title>__vdso_clock_gettime (467 samples, 0.43%)</title><rect x="26.1290%" y="485" width="0.4280%" height="15" fill="rgb(211,96,50)" fg:x="28508" fg:w="467"/><text x="26.3790%" y="495.50"></text></g><g><title>[[vdso]] (299 samples, 0.27%)</title><rect x="26.2829%" y="469" width="0.2740%" height="15" fill="rgb(252,114,18)" fg:x="28676" fg:w="299"/><text x="26.5329%" y="479.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (192 samples, 0.18%)</title><rect x="26.7971%" y="533" width="0.1760%" height="15" fill="rgb(223,58,37)" fg:x="29237" fg:w="192"/><text x="27.0471%" y="543.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (19 samples, 0.02%)</title><rect x="27.0895%" y="517" width="0.0174%" height="15" fill="rgb(237,70,4)" fg:x="29556" fg:w="19"/><text x="27.3395%" y="527.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkOpMeta&gt; for tremor_pipeline::OpMeta&gt;::from (316 samples, 0.29%)</title><rect x="26.9731%" y="533" width="0.2896%" height="15" fill="rgb(244,85,46)" fg:x="29429" fg:w="316"/><text x="27.2231%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (170 samples, 0.16%)</title><rect x="27.1069%" y="517" width="0.1558%" height="15" fill="rgb(223,39,52)" fg:x="29575" fg:w="170"/><text x="27.3569%" y="527.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (1,361 samples, 1.25%)</title><rect x="26.5570%" y="565" width="1.2474%" height="15" fill="rgb(218,200,14)" fg:x="28975" fg:w="1361"/><text x="26.8070%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,179 samples, 1.08%)</title><rect x="26.7238%" y="549" width="1.0806%" height="15" fill="rgb(208,171,16)" fg:x="29157" fg:w="1179"/><text x="26.9738%" y="559.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkEventPayload&gt; for tremor_script::srs::EventPayload&gt;::from (591 samples, 0.54%)</title><rect x="27.2627%" y="533" width="0.5417%" height="15" fill="rgb(234,200,18)" fg:x="29745" fg:w="591"/><text x="27.5127%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (548 samples, 0.50%)</title><rect x="27.3021%" y="517" width="0.5023%" height="15" fill="rgb(228,45,11)" fg:x="29788" fg:w="548"/><text x="27.5521%" y="527.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkValueAndMeta&gt; for tremor_script::srs::ValueAndMeta&gt;::from (515 samples, 0.47%)</title><rect x="27.3324%" y="501" width="0.4720%" height="15" fill="rgb(237,182,11)" fg:x="29821" fg:w="515"/><text x="27.5824%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (240 samples, 0.22%)</title><rect x="27.5844%" y="485" width="0.2200%" height="15" fill="rgb(241,175,49)" fg:x="30096" fg:w="240"/><text x="27.8344%" y="495.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (16 samples, 0.01%)</title><rect x="27.7897%" y="469" width="0.0147%" height="15" fill="rgb(247,38,35)" fg:x="30320" fg:w="16"/><text x="28.0397%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (154 samples, 0.14%)</title><rect x="27.8172%" y="549" width="0.1411%" height="15" fill="rgb(228,39,49)" fg:x="30350" fg:w="154"/><text x="28.0672%" y="559.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (18 samples, 0.02%)</title><rect x="27.9419%" y="533" width="0.0165%" height="15" fill="rgb(226,101,26)" fg:x="30486" fg:w="18"/><text x="28.1919%" y="543.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (16 samples, 0.01%)</title><rect x="27.9437%" y="517" width="0.0147%" height="15" fill="rgb(206,141,19)" fg:x="30488" fg:w="16"/><text x="28.1937%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (8,600 samples, 7.88%)</title><rect x="20.0889%" y="821" width="7.8823%" height="15" fill="rgb(211,200,13)" fg:x="21918" fg:w="8600"/><text x="20.3389%" y="831.50">tremor_runt..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,676 samples, 6.12%)</title><rect x="21.8523%" y="805" width="6.1189%" height="15" fill="rgb(241,121,6)" fg:x="23842" fg:w="6676"/><text x="22.1023%" y="815.50">&lt;async_f..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,676 samples, 6.12%)</title><rect x="21.8523%" y="789" width="6.1189%" height="15" fill="rgb(234,221,29)" fg:x="23842" fg:w="6676"/><text x="22.1023%" y="799.50">&lt;async_f..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (6,676 samples, 6.12%)</title><rect x="21.8523%" y="773" width="6.1189%" height="15" fill="rgb(229,136,5)" fg:x="23842" fg:w="6676"/><text x="22.1023%" y="783.50">&lt;core::t..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,676 samples, 6.12%)</title><rect x="21.8523%" y="757" width="6.1189%" height="15" fill="rgb(238,36,11)" fg:x="23842" fg:w="6676"/><text x="22.1023%" y="767.50">&lt;async_f..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (6,676 samples, 6.12%)</title><rect x="21.8523%" y="741" width="6.1189%" height="15" fill="rgb(251,55,41)" fg:x="23842" fg:w="6676"/><text x="22.1023%" y="751.50">async_ff..</text></g><g><title>std::panic::catch_unwind (6,676 samples, 6.12%)</title><rect x="21.8523%" y="725" width="6.1189%" height="15" fill="rgb(242,34,40)" fg:x="23842" fg:w="6676"/><text x="22.1023%" y="735.50">std::pan..</text></g><g><title>std::panicking::try (6,676 samples, 6.12%)</title><rect x="21.8523%" y="709" width="6.1189%" height="15" fill="rgb(215,42,17)" fg:x="23842" fg:w="6676"/><text x="22.1023%" y="719.50">std::pan..</text></g><g><title>std::panicking::try::do_call (6,676 samples, 6.12%)</title><rect x="21.8523%" y="693" width="6.1189%" height="15" fill="rgb(207,44,46)" fg:x="23842" fg:w="6676"/><text x="22.1023%" y="703.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,676 samples, 6.12%)</title><rect x="21.8523%" y="677" width="6.1189%" height="15" fill="rgb(211,206,28)" fg:x="23842" fg:w="6676"/><text x="22.1023%" y="687.50">&lt;core::p..</text></g><g><title>core::ops::function::FnOnce::call_once (6,676 samples, 6.12%)</title><rect x="21.8523%" y="661" width="6.1189%" height="15" fill="rgb(237,167,16)" fg:x="23842" fg:w="6676"/><text x="22.1023%" y="671.50">core::op..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (6,676 samples, 6.12%)</title><rect x="21.8523%" y="645" width="6.1189%" height="15" fill="rgb(233,66,6)" fg:x="23842" fg:w="6676"/><text x="22.1023%" y="655.50">async_ff..</text></g><g><title>async_ffi::FfiContext::with_context (6,676 samples, 6.12%)</title><rect x="21.8523%" y="629" width="6.1189%" height="15" fill="rgb(246,123,29)" fg:x="23842" fg:w="6676"/><text x="22.1023%" y="639.50">async_ff..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (6,676 samples, 6.12%)</title><rect x="21.8523%" y="613" width="6.1189%" height="15" fill="rgb(209,62,40)" fg:x="23842" fg:w="6676"/><text x="22.1023%" y="623.50">async_ff..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,676 samples, 6.12%)</title><rect x="21.8523%" y="597" width="6.1189%" height="15" fill="rgb(218,4,25)" fg:x="23842" fg:w="6676"/><text x="22.1023%" y="607.50">&lt;core::f..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (6,611 samples, 6.06%)</title><rect x="21.9119%" y="581" width="6.0593%" height="15" fill="rgb(253,91,49)" fg:x="23907" fg:w="6611"/><text x="22.1619%" y="591.50">&lt;tremor_..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (182 samples, 0.17%)</title><rect x="27.8044%" y="565" width="0.1668%" height="15" fill="rgb(228,155,29)" fg:x="30336" fg:w="182"/><text x="28.0544%" y="575.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::_::&lt;impl tremor_runtime::connectors::sink::EventSerializerOpaque_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::serialize (14 samples, 0.01%)</title><rect x="27.9584%" y="549" width="0.0128%" height="15" fill="rgb(243,57,37)" fg:x="30504" fg:w="14"/><text x="28.2084%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,618 samples, 7.90%)</title><rect x="20.0889%" y="837" width="7.8988%" height="15" fill="rgb(244,167,17)" fg:x="21918" fg:w="8618"/><text x="20.3389%" y="847.50">&lt;core::futu..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (18 samples, 0.02%)</title><rect x="27.9712%" y="821" width="0.0165%" height="15" fill="rgb(207,181,38)" fg:x="30518" fg:w="18"/><text x="28.2212%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (18 samples, 0.02%)</title><rect x="27.9712%" y="805" width="0.0165%" height="15" fill="rgb(211,8,23)" fg:x="30518" fg:w="18"/><text x="28.2212%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::pdk::PdkOpMeta&gt; (18 samples, 0.02%)</title><rect x="27.9712%" y="789" width="0.0165%" height="15" fill="rgb(235,11,44)" fg:x="30518" fg:w="18"/><text x="28.2212%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (18 samples, 0.02%)</title><rect x="27.9712%" y="773" width="0.0165%" height="15" fill="rgb(248,18,52)" fg:x="30518" fg:w="18"/><text x="28.2212%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="27.9712%" y="757" width="0.0165%" height="15" fill="rgb(208,4,7)" fg:x="30518" fg:w="18"/><text x="28.2212%" y="767.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (18 samples, 0.02%)</title><rect x="27.9712%" y="741" width="0.0165%" height="15" fill="rgb(240,17,39)" fg:x="30518" fg:w="18"/><text x="28.2212%" y="751.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (18 samples, 0.02%)</title><rect x="27.9712%" y="725" width="0.0165%" height="15" fill="rgb(207,170,3)" fg:x="30518" fg:w="18"/><text x="28.2212%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt; (18 samples, 0.02%)</title><rect x="27.9712%" y="709" width="0.0165%" height="15" fill="rgb(236,100,52)" fg:x="30518" fg:w="18"/><text x="28.2212%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (18 samples, 0.02%)</title><rect x="27.9712%" y="693" width="0.0165%" height="15" fill="rgb(246,78,51)" fg:x="30518" fg:w="18"/><text x="28.2212%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt; (18 samples, 0.02%)</title><rect x="27.9712%" y="677" width="0.0165%" height="15" fill="rgb(211,17,15)" fg:x="30518" fg:w="18"/><text x="28.2212%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue)&gt;&gt; (18 samples, 0.02%)</title><rect x="27.9712%" y="661" width="0.0165%" height="15" fill="rgb(209,59,46)" fg:x="30518" fg:w="18"/><text x="28.2212%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="27.9712%" y="645" width="0.0165%" height="15" fill="rgb(210,92,25)" fg:x="30518" fg:w="18"/><text x="28.2212%" y="655.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="27.9960%" y="661" width="0.0128%" height="15" fill="rgb(238,174,52)" fg:x="30545" fg:w="14"/><text x="28.2460%" y="671.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (24 samples, 0.02%)</title><rect x="27.9960%" y="677" width="0.0220%" height="15" fill="rgb(230,73,7)" fg:x="30545" fg:w="24"/><text x="28.2460%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (55 samples, 0.05%)</title><rect x="27.9941%" y="741" width="0.0504%" height="15" fill="rgb(243,124,40)" fg:x="30543" fg:w="55"/><text x="28.2441%" y="751.50"></text></g><g><title>std::collections::hash::map::RandomState::new (55 samples, 0.05%)</title><rect x="27.9941%" y="725" width="0.0504%" height="15" fill="rgb(244,170,11)" fg:x="30543" fg:w="55"/><text x="28.2441%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (55 samples, 0.05%)</title><rect x="27.9941%" y="709" width="0.0504%" height="15" fill="rgb(207,114,54)" fg:x="30543" fg:w="55"/><text x="28.2441%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (55 samples, 0.05%)</title><rect x="27.9941%" y="693" width="0.0504%" height="15" fill="rgb(205,42,20)" fg:x="30543" fg:w="55"/><text x="28.2441%" y="703.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (29 samples, 0.03%)</title><rect x="28.0180%" y="677" width="0.0266%" height="15" fill="rgb(230,30,28)" fg:x="30569" fg:w="29"/><text x="28.2680%" y="687.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="28.0858%" y="549" width="0.0101%" height="15" fill="rgb(205,73,54)" fg:x="30643" fg:w="11"/><text x="28.3358%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="28.1060%" y="501" width="0.0147%" height="15" fill="rgb(254,227,23)" fg:x="30665" fg:w="16"/><text x="28.3560%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (16 samples, 0.01%)</title><rect x="28.1060%" y="485" width="0.0147%" height="15" fill="rgb(228,202,34)" fg:x="30665" fg:w="16"/><text x="28.3560%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (11 samples, 0.01%)</title><rect x="28.1105%" y="469" width="0.0101%" height="15" fill="rgb(222,225,37)" fg:x="30670" fg:w="11"/><text x="28.3605%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::empty (22 samples, 0.02%)</title><rect x="28.1225%" y="501" width="0.0202%" height="15" fill="rgb(221,14,54)" fg:x="30683" fg:w="22"/><text x="28.3725%" y="511.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (22 samples, 0.02%)</title><rect x="28.1225%" y="485" width="0.0202%" height="15" fill="rgb(254,102,2)" fg:x="30683" fg:w="22"/><text x="28.3725%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (114 samples, 0.10%)</title><rect x="28.0959%" y="549" width="0.1045%" height="15" fill="rgb(232,104,17)" fg:x="30654" fg:w="114"/><text x="28.3459%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (114 samples, 0.10%)</title><rect x="28.0959%" y="533" width="0.1045%" height="15" fill="rgb(250,220,14)" fg:x="30654" fg:w="114"/><text x="28.3459%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (105 samples, 0.10%)</title><rect x="28.1041%" y="517" width="0.0962%" height="15" fill="rgb(241,158,9)" fg:x="30663" fg:w="105"/><text x="28.3541%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (63 samples, 0.06%)</title><rect x="28.1426%" y="501" width="0.0577%" height="15" fill="rgb(246,9,43)" fg:x="30705" fg:w="63"/><text x="28.3926%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (63 samples, 0.06%)</title><rect x="28.1426%" y="485" width="0.0577%" height="15" fill="rgb(206,73,33)" fg:x="30705" fg:w="63"/><text x="28.3926%" y="495.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (234 samples, 0.21%)</title><rect x="27.9941%" y="757" width="0.2145%" height="15" fill="rgb(222,79,8)" fg:x="30543" fg:w="234"/><text x="28.2441%" y="767.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (179 samples, 0.16%)</title><rect x="28.0445%" y="741" width="0.1641%" height="15" fill="rgb(234,8,54)" fg:x="30598" fg:w="179"/><text x="28.2945%" y="751.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (179 samples, 0.16%)</title><rect x="28.0445%" y="725" width="0.1641%" height="15" fill="rgb(209,134,38)" fg:x="30598" fg:w="179"/><text x="28.2945%" y="735.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (173 samples, 0.16%)</title><rect x="28.0500%" y="709" width="0.1586%" height="15" fill="rgb(230,127,29)" fg:x="30604" fg:w="173"/><text x="28.3000%" y="719.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (173 samples, 0.16%)</title><rect x="28.0500%" y="693" width="0.1586%" height="15" fill="rgb(242,44,41)" fg:x="30604" fg:w="173"/><text x="28.3000%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (171 samples, 0.16%)</title><rect x="28.0519%" y="677" width="0.1567%" height="15" fill="rgb(222,56,43)" fg:x="30606" fg:w="171"/><text x="28.3019%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (137 samples, 0.13%)</title><rect x="28.0830%" y="661" width="0.1256%" height="15" fill="rgb(238,39,47)" fg:x="30640" fg:w="137"/><text x="28.3330%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (137 samples, 0.13%)</title><rect x="28.0830%" y="645" width="0.1256%" height="15" fill="rgb(226,79,43)" fg:x="30640" fg:w="137"/><text x="28.3330%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (137 samples, 0.13%)</title><rect x="28.0830%" y="629" width="0.1256%" height="15" fill="rgb(242,105,53)" fg:x="30640" fg:w="137"/><text x="28.3330%" y="639.50"></text></g><g><title>alloc::alloc::alloc (135 samples, 0.12%)</title><rect x="28.0849%" y="613" width="0.1237%" height="15" fill="rgb(251,132,46)" fg:x="30642" fg:w="135"/><text x="28.3349%" y="623.50"></text></g><g><title>__rg_alloc (135 samples, 0.12%)</title><rect x="28.0849%" y="597" width="0.1237%" height="15" fill="rgb(231,77,14)" fg:x="30642" fg:w="135"/><text x="28.3349%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (135 samples, 0.12%)</title><rect x="28.0849%" y="581" width="0.1237%" height="15" fill="rgb(240,135,9)" fg:x="30642" fg:w="135"/><text x="28.3349%" y="591.50"></text></g><g><title>rust_alloc (135 samples, 0.12%)</title><rect x="28.0849%" y="565" width="0.1237%" height="15" fill="rgb(248,109,14)" fg:x="30642" fg:w="135"/><text x="28.3349%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (13 samples, 0.01%)</title><rect x="28.3094%" y="709" width="0.0119%" height="15" fill="rgb(227,146,52)" fg:x="30887" fg:w="13"/><text x="28.5594%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="28.2948%" y="725" width="0.0302%" height="15" fill="rgb(232,54,3)" fg:x="30871" fg:w="33"/><text x="28.5448%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.04%)</title><rect x="28.2856%" y="741" width="0.0440%" height="15" fill="rgb(229,201,43)" fg:x="30861" fg:w="48"/><text x="28.5356%" y="751.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (13 samples, 0.01%)</title><rect x="28.3296%" y="741" width="0.0119%" height="15" fill="rgb(252,161,33)" fg:x="30909" fg:w="13"/><text x="28.5796%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (13 samples, 0.01%)</title><rect x="28.3296%" y="725" width="0.0119%" height="15" fill="rgb(226,146,40)" fg:x="30909" fg:w="13"/><text x="28.5796%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (13 samples, 0.01%)</title><rect x="28.3296%" y="709" width="0.0119%" height="15" fill="rgb(219,47,25)" fg:x="30909" fg:w="13"/><text x="28.5796%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (180 samples, 0.16%)</title><rect x="28.2086%" y="757" width="0.1650%" height="15" fill="rgb(250,135,13)" fg:x="30777" fg:w="180"/><text x="28.4586%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;,&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from::{{closure}}&gt;&gt; (35 samples, 0.03%)</title><rect x="28.3415%" y="741" width="0.0321%" height="15" fill="rgb(219,229,18)" fg:x="30922" fg:w="35"/><text x="28.5915%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (35 samples, 0.03%)</title><rect x="28.3415%" y="725" width="0.0321%" height="15" fill="rgb(217,152,27)" fg:x="30922" fg:w="35"/><text x="28.5915%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="28.3479%" y="709" width="0.0257%" height="15" fill="rgb(225,71,47)" fg:x="30929" fg:w="28"/><text x="28.5979%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (26 samples, 0.02%)</title><rect x="28.3498%" y="693" width="0.0238%" height="15" fill="rgb(220,139,14)" fg:x="30931" fg:w="26"/><text x="28.5998%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (19 samples, 0.02%)</title><rect x="28.3562%" y="677" width="0.0174%" height="15" fill="rgb(247,54,32)" fg:x="30938" fg:w="19"/><text x="28.6062%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (19 samples, 0.02%)</title><rect x="28.3562%" y="661" width="0.0174%" height="15" fill="rgb(252,131,39)" fg:x="30938" fg:w="19"/><text x="28.6062%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (19 samples, 0.02%)</title><rect x="28.3562%" y="645" width="0.0174%" height="15" fill="rgb(210,108,39)" fg:x="30938" fg:w="19"/><text x="28.6062%" y="655.50"></text></g><g><title>core::mem::replace (19 samples, 0.02%)</title><rect x="28.3562%" y="629" width="0.0174%" height="15" fill="rgb(205,23,29)" fg:x="30938" fg:w="19"/><text x="28.6062%" y="639.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="28.3635%" y="613" width="0.0101%" height="15" fill="rgb(246,139,46)" fg:x="30946" fg:w="11"/><text x="28.6135%" y="623.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (9,048 samples, 8.29%)</title><rect x="20.0889%" y="853" width="8.2929%" height="15" fill="rgb(250,81,26)" fg:x="21918" fg:w="9048"/><text x="20.3389%" y="863.50">tremor_runti..</text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (430 samples, 0.39%)</title><rect x="27.9877%" y="837" width="0.3941%" height="15" fill="rgb(214,104,7)" fg:x="30536" fg:w="430"/><text x="28.2377%" y="847.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (430 samples, 0.39%)</title><rect x="27.9877%" y="821" width="0.3941%" height="15" fill="rgb(233,189,8)" fg:x="30536" fg:w="430"/><text x="28.2377%" y="831.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (430 samples, 0.39%)</title><rect x="27.9877%" y="805" width="0.3941%" height="15" fill="rgb(228,141,17)" fg:x="30536" fg:w="430"/><text x="28.2377%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (430 samples, 0.39%)</title><rect x="27.9877%" y="789" width="0.3941%" height="15" fill="rgb(247,157,1)" fg:x="30536" fg:w="430"/><text x="28.2377%" y="799.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (430 samples, 0.39%)</title><rect x="27.9877%" y="773" width="0.3941%" height="15" fill="rgb(249,225,5)" fg:x="30536" fg:w="430"/><text x="28.2377%" y="783.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="28.4854%" y="821" width="0.0101%" height="15" fill="rgb(242,55,13)" fg:x="31079" fg:w="11"/><text x="28.7354%" y="831.50"></text></g><g><title>rust_dealloc (17 samples, 0.02%)</title><rect x="28.4982%" y="805" width="0.0156%" height="15" fill="rgb(230,49,50)" fg:x="31093" fg:w="17"/><text x="28.7482%" y="815.50"></text></g><g><title>rust_dealloc (38 samples, 0.03%)</title><rect x="28.5211%" y="741" width="0.0348%" height="15" fill="rgb(241,111,38)" fg:x="31118" fg:w="38"/><text x="28.7711%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="28.6192%" y="709" width="0.0165%" height="15" fill="rgb(252,155,4)" fg:x="31225" fg:w="18"/><text x="28.8692%" y="719.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="28.6192%" y="693" width="0.0165%" height="15" fill="rgb(212,69,32)" fg:x="31225" fg:w="18"/><text x="28.8692%" y="703.50"></text></g><g><title>snmalloc::Remote::set_info (11 samples, 0.01%)</title><rect x="28.6357%" y="709" width="0.0101%" height="15" fill="rgb(243,107,47)" fg:x="31243" fg:w="11"/><text x="28.8857%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (94 samples, 0.09%)</title><rect x="28.5624%" y="741" width="0.0862%" height="15" fill="rgb(247,130,12)" fg:x="31163" fg:w="94"/><text x="28.8124%" y="751.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (75 samples, 0.07%)</title><rect x="28.5798%" y="725" width="0.0687%" height="15" fill="rgb(233,74,16)" fg:x="31182" fg:w="75"/><text x="28.8298%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (14 samples, 0.01%)</title><rect x="28.6485%" y="741" width="0.0128%" height="15" fill="rgb(208,58,18)" fg:x="31257" fg:w="14"/><text x="28.8985%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (14 samples, 0.01%)</title><rect x="28.6485%" y="725" width="0.0128%" height="15" fill="rgb(242,225,1)" fg:x="31257" fg:w="14"/><text x="28.8985%" y="735.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (14 samples, 0.01%)</title><rect x="28.6485%" y="709" width="0.0128%" height="15" fill="rgb(249,39,40)" fg:x="31257" fg:w="14"/><text x="28.8985%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (190 samples, 0.17%)</title><rect x="28.5211%" y="773" width="0.1741%" height="15" fill="rgb(207,72,44)" fg:x="31118" fg:w="190"/><text x="28.7711%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (190 samples, 0.17%)</title><rect x="28.5211%" y="757" width="0.1741%" height="15" fill="rgb(215,193,12)" fg:x="31118" fg:w="190"/><text x="28.7711%" y="767.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (37 samples, 0.03%)</title><rect x="28.6614%" y="741" width="0.0339%" height="15" fill="rgb(248,41,39)" fg:x="31271" fg:w="37"/><text x="28.9114%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (192 samples, 0.18%)</title><rect x="28.5211%" y="805" width="0.1760%" height="15" fill="rgb(253,85,4)" fg:x="31118" fg:w="192"/><text x="28.7711%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (192 samples, 0.18%)</title><rect x="28.5211%" y="789" width="0.1760%" height="15" fill="rgb(243,70,31)" fg:x="31118" fg:w="192"/><text x="28.7711%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (225 samples, 0.21%)</title><rect x="28.4982%" y="821" width="0.2062%" height="15" fill="rgb(253,195,26)" fg:x="31093" fg:w="225"/><text x="28.7482%" y="831.50"></text></g><g><title>rust_dealloc (271 samples, 0.25%)</title><rect x="28.4836%" y="837" width="0.2484%" height="15" fill="rgb(243,42,11)" fg:x="31077" fg:w="271"/><text x="28.7336%" y="847.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (30 samples, 0.03%)</title><rect x="28.7045%" y="821" width="0.0275%" height="15" fill="rgb(239,66,17)" fg:x="31318" fg:w="30"/><text x="28.9545%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (49 samples, 0.04%)</title><rect x="28.7320%" y="821" width="0.0449%" height="15" fill="rgb(217,132,21)" fg:x="31348" fg:w="49"/><text x="28.9820%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (49 samples, 0.04%)</title><rect x="28.7320%" y="805" width="0.0449%" height="15" fill="rgb(252,202,21)" fg:x="31348" fg:w="49"/><text x="28.9820%" y="815.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (42 samples, 0.04%)</title><rect x="28.7384%" y="789" width="0.0385%" height="15" fill="rgb(233,98,36)" fg:x="31355" fg:w="42"/><text x="28.9884%" y="799.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (31 samples, 0.03%)</title><rect x="28.7485%" y="773" width="0.0284%" height="15" fill="rgb(216,153,54)" fg:x="31366" fg:w="31"/><text x="28.9985%" y="783.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (31 samples, 0.03%)</title><rect x="28.7485%" y="757" width="0.0284%" height="15" fill="rgb(250,99,7)" fg:x="31366" fg:w="31"/><text x="28.9985%" y="767.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (31 samples, 0.03%)</title><rect x="28.7485%" y="741" width="0.0284%" height="15" fill="rgb(207,56,50)" fg:x="31366" fg:w="31"/><text x="28.9985%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (434 samples, 0.40%)</title><rect x="28.3818%" y="853" width="0.3978%" height="15" fill="rgb(244,61,34)" fg:x="30966" fg:w="434"/><text x="28.6318%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (52 samples, 0.05%)</title><rect x="28.7320%" y="837" width="0.0477%" height="15" fill="rgb(241,50,38)" fg:x="31348" fg:w="52"/><text x="28.9820%" y="847.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="29.5642%" y="837" width="0.0119%" height="15" fill="rgb(212,166,30)" fg:x="32256" fg:w="13"/><text x="29.8142%" y="847.50"></text></g><g><title>__memcpy_avx_unaligned_erms (510 samples, 0.47%)</title><rect x="29.9061%" y="805" width="0.4674%" height="15" fill="rgb(249,127,32)" fg:x="32629" fg:w="510"/><text x="30.1561%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 0.01%)</title><rect x="30.3992%" y="773" width="0.0101%" height="15" fill="rgb(209,103,0)" fg:x="33167" fg:w="11"/><text x="30.6492%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (12 samples, 0.01%)</title><rect x="30.3992%" y="789" width="0.0110%" height="15" fill="rgb(238,209,51)" fg:x="33167" fg:w="12"/><text x="30.6492%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (411 samples, 0.38%)</title><rect x="30.3735%" y="805" width="0.3767%" height="15" fill="rgb(237,56,23)" fg:x="33139" fg:w="411"/><text x="30.6235%" y="815.50"></text></g><g><title>core::ptr::write (371 samples, 0.34%)</title><rect x="30.4102%" y="789" width="0.3400%" height="15" fill="rgb(215,153,46)" fg:x="33179" fg:w="371"/><text x="30.6602%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (369 samples, 0.34%)</title><rect x="30.4120%" y="773" width="0.3382%" height="15" fill="rgb(224,49,31)" fg:x="33181" fg:w="369"/><text x="30.6620%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (32 samples, 0.03%)</title><rect x="30.7502%" y="805" width="0.0293%" height="15" fill="rgb(250,18,42)" fg:x="33550" fg:w="32"/><text x="31.0002%" y="815.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (16 samples, 0.01%)</title><rect x="30.7951%" y="773" width="0.0147%" height="15" fill="rgb(215,176,39)" fg:x="33599" fg:w="16"/><text x="31.0451%" y="783.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (16 samples, 0.01%)</title><rect x="30.7951%" y="757" width="0.0147%" height="15" fill="rgb(223,77,29)" fg:x="33599" fg:w="16"/><text x="31.0451%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (717 samples, 0.66%)</title><rect x="30.8116%" y="709" width="0.6572%" height="15" fill="rgb(234,94,52)" fg:x="33617" fg:w="717"/><text x="31.0616%" y="719.50"></text></g><g><title>__memcmp_avx2_movbe (608 samples, 0.56%)</title><rect x="30.9115%" y="693" width="0.5573%" height="15" fill="rgb(220,154,50)" fg:x="33726" fg:w="608"/><text x="31.1615%" y="703.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (743 samples, 0.68%)</title><rect x="30.7951%" y="789" width="0.6810%" height="15" fill="rgb(212,11,10)" fg:x="33599" fg:w="743"/><text x="31.0451%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (725 samples, 0.66%)</title><rect x="30.8116%" y="773" width="0.6645%" height="15" fill="rgb(205,166,19)" fg:x="33617" fg:w="725"/><text x="31.0616%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (725 samples, 0.66%)</title><rect x="30.8116%" y="757" width="0.6645%" height="15" fill="rgb(244,198,16)" fg:x="33617" fg:w="725"/><text x="31.0616%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (725 samples, 0.66%)</title><rect x="30.8116%" y="741" width="0.6645%" height="15" fill="rgb(219,69,12)" fg:x="33617" fg:w="725"/><text x="31.0616%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (725 samples, 0.66%)</title><rect x="30.8116%" y="725" width="0.6645%" height="15" fill="rgb(245,30,7)" fg:x="33617" fg:w="725"/><text x="31.0616%" y="735.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (788 samples, 0.72%)</title><rect x="30.7795%" y="805" width="0.7222%" height="15" fill="rgb(218,221,48)" fg:x="33582" fg:w="788"/><text x="31.0295%" y="815.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (28 samples, 0.03%)</title><rect x="31.4761%" y="789" width="0.0257%" height="15" fill="rgb(216,66,15)" fg:x="34342" fg:w="28"/><text x="31.7261%" y="799.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="32.1378%" y="773" width="0.0229%" height="15" fill="rgb(226,122,50)" fg:x="35064" fg:w="25"/><text x="32.3878%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (33 samples, 0.03%)</title><rect x="32.1663%" y="773" width="0.0302%" height="15" fill="rgb(239,156,16)" fg:x="35095" fg:w="33"/><text x="32.4163%" y="783.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="32.1828%" y="757" width="0.0137%" height="15" fill="rgb(224,27,38)" fg:x="35113" fg:w="15"/><text x="32.4328%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (15 samples, 0.01%)</title><rect x="32.1983%" y="757" width="0.0137%" height="15" fill="rgb(224,39,27)" fg:x="35130" fg:w="15"/><text x="32.4483%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (15 samples, 0.01%)</title><rect x="32.1983%" y="741" width="0.0137%" height="15" fill="rgb(215,92,29)" fg:x="35130" fg:w="15"/><text x="32.4483%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (333 samples, 0.31%)</title><rect x="32.1965%" y="773" width="0.3052%" height="15" fill="rgb(207,159,16)" fg:x="35128" fg:w="333"/><text x="32.4465%" y="783.50"></text></g><g><title>core::ptr::write (316 samples, 0.29%)</title><rect x="32.2121%" y="757" width="0.2896%" height="15" fill="rgb(238,163,47)" fg:x="35145" fg:w="316"/><text x="32.4621%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (312 samples, 0.29%)</title><rect x="32.2158%" y="741" width="0.2860%" height="15" fill="rgb(219,91,49)" fg:x="35149" fg:w="312"/><text x="32.4658%" y="751.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,083 samples, 0.99%)</title><rect x="31.5109%" y="789" width="0.9926%" height="15" fill="rgb(227,167,31)" fg:x="34380" fg:w="1083"/><text x="31.7609%" y="799.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,101 samples, 1.01%)</title><rect x="31.5018%" y="805" width="1.0091%" height="15" fill="rgb(234,80,54)" fg:x="34370" fg:w="1101"/><text x="31.7518%" y="815.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,103 samples, 2.84%)</title><rect x="29.6852%" y="821" width="2.8440%" height="15" fill="rgb(212,114,2)" fg:x="32388" fg:w="3103"/><text x="29.9352%" y="831.50">tr..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (20 samples, 0.02%)</title><rect x="32.5109%" y="805" width="0.0183%" height="15" fill="rgb(234,50,24)" fg:x="35471" fg:w="20"/><text x="32.7609%" y="815.50"></text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (117 samples, 0.11%)</title><rect x="32.5292%" y="821" width="0.1072%" height="15" fill="rgb(221,68,8)" fg:x="35491" fg:w="117"/><text x="32.7792%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,371 samples, 3.09%)</title><rect x="29.5770%" y="837" width="3.0897%" height="15" fill="rgb(254,180,31)" fg:x="32270" fg:w="3371"/><text x="29.8270%" y="847.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (33 samples, 0.03%)</title><rect x="32.6365%" y="821" width="0.0302%" height="15" fill="rgb(247,130,50)" fg:x="35608" fg:w="33"/><text x="32.8865%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,384 samples, 1.27%)</title><rect x="32.6667%" y="837" width="1.2685%" height="15" fill="rgb(211,109,4)" fg:x="35641" fg:w="1384"/><text x="32.9167%" y="847.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="33.9361%" y="821" width="0.0376%" height="15" fill="rgb(238,50,21)" fg:x="37026" fg:w="41"/><text x="34.1861%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (42 samples, 0.04%)</title><rect x="33.9361%" y="837" width="0.0385%" height="15" fill="rgb(225,57,45)" fg:x="37026" fg:w="42"/><text x="34.1861%" y="847.50"></text></g><g><title>async_global_executor::reactor::block_on (15,173 samples, 13.91%)</title><rect x="20.0889%" y="1189" width="13.9068%" height="15" fill="rgb(209,196,50)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="1199.50">async_global_executor..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (15,173 samples, 13.91%)</title><rect x="20.0889%" y="1173" width="13.9068%" height="15" fill="rgb(242,140,13)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="1183.50">async_global_executor..</text></g><g><title>async_io::driver::block_on (15,173 samples, 13.91%)</title><rect x="20.0889%" y="1157" width="13.9068%" height="15" fill="rgb(217,111,7)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="1167.50">async_io::driver::blo..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (15,173 samples, 13.91%)</title><rect x="20.0889%" y="1141" width="13.9068%" height="15" fill="rgb(253,193,51)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="1151.50">&lt;futures_lite::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,173 samples, 13.91%)</title><rect x="20.0889%" y="1125" width="13.9068%" height="15" fill="rgb(252,70,29)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="1135.50">&lt;core::future::from_g..</text></g><g><title>async_executor::Executor::run::{{closure}} (15,173 samples, 13.91%)</title><rect x="20.0889%" y="1109" width="13.9068%" height="15" fill="rgb(232,127,12)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="1119.50">async_executor::Execu..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (15,173 samples, 13.91%)</title><rect x="20.0889%" y="1093" width="13.9068%" height="15" fill="rgb(211,180,21)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="1103.50">&lt;futures_lite::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,173 samples, 13.91%)</title><rect x="20.0889%" y="1077" width="13.9068%" height="15" fill="rgb(229,72,13)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="1087.50">&lt;core::future::from_g..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (15,173 samples, 13.91%)</title><rect x="20.0889%" y="1061" width="13.9068%" height="15" fill="rgb(240,211,49)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="1071.50">async_executor::Execu..</text></g><g><title>async_task::runnable::Runnable::run (15,173 samples, 13.91%)</title><rect x="20.0889%" y="1045" width="13.9068%" height="15" fill="rgb(219,149,40)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="1055.50">async_task::runnable:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (15,173 samples, 13.91%)</title><rect x="20.0889%" y="1029" width="13.9068%" height="15" fill="rgb(210,127,46)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="1039.50">async_task::raw::RawT..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15,173 samples, 13.91%)</title><rect x="20.0889%" y="1013" width="13.9068%" height="15" fill="rgb(220,106,7)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="1023.50">&lt;core::pin::Pin&lt;P&gt; as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,173 samples, 13.91%)</title><rect x="20.0889%" y="997" width="13.9068%" height="15" fill="rgb(249,31,22)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="1007.50">&lt;core::future::from_g..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (15,173 samples, 13.91%)</title><rect x="20.0889%" y="981" width="13.9068%" height="15" fill="rgb(253,1,49)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="991.50">async_executor::Execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (15,173 samples, 13.91%)</title><rect x="20.0889%" y="965" width="13.9068%" height="15" fill="rgb(227,144,33)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="975.50">&lt;async_std::task::bui..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (15,173 samples, 13.91%)</title><rect x="20.0889%" y="949" width="13.9068%" height="15" fill="rgb(249,163,44)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="959.50">async_std::task::task..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15,173 samples, 13.91%)</title><rect x="20.0889%" y="933" width="13.9068%" height="15" fill="rgb(234,15,39)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="943.50">std::thread::local::L..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15,173 samples, 13.91%)</title><rect x="20.0889%" y="917" width="13.9068%" height="15" fill="rgb(207,66,16)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="927.50">std::thread::local::L..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (15,173 samples, 13.91%)</title><rect x="20.0889%" y="901" width="13.9068%" height="15" fill="rgb(233,112,24)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="911.50">async_std::task::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (15,173 samples, 13.91%)</title><rect x="20.0889%" y="885" width="13.9068%" height="15" fill="rgb(230,90,22)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="895.50">&lt;async_std::task::bui..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,173 samples, 13.91%)</title><rect x="20.0889%" y="869" width="13.9068%" height="15" fill="rgb(229,61,13)" fg:x="21918" fg:w="15173"/><text x="20.3389%" y="879.50">&lt;core::future::from_g..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,691 samples, 5.22%)</title><rect x="28.7796%" y="853" width="5.2161%" height="15" fill="rgb(225,57,24)" fg:x="31400" fg:w="5691"/><text x="29.0296%" y="863.50">tremor..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (22 samples, 0.02%)</title><rect x="33.9966%" y="725" width="0.0202%" height="15" fill="rgb(208,169,48)" fg:x="37092" fg:w="22"/><text x="34.2466%" y="735.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="34.3037%" y="709" width="0.0101%" height="15" fill="rgb(244,218,51)" fg:x="37427" fg:w="11"/><text x="34.5537%" y="719.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (49 samples, 0.04%)</title><rect x="35.6583%" y="629" width="0.0449%" height="15" fill="rgb(214,148,10)" fg:x="38905" fg:w="49"/><text x="35.9083%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 0.03%)</title><rect x="35.6721%" y="613" width="0.0312%" height="15" fill="rgb(225,174,27)" fg:x="38920" fg:w="34"/><text x="35.9221%" y="623.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (934 samples, 0.86%)</title><rect x="35.3531%" y="661" width="0.8561%" height="15" fill="rgb(230,96,26)" fg:x="38572" fg:w="934"/><text x="35.6031%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (651 samples, 0.60%)</title><rect x="35.6125%" y="645" width="0.5967%" height="15" fill="rgb(232,10,30)" fg:x="38855" fg:w="651"/><text x="35.8625%" y="655.50"></text></g><g><title>&lt;tremor_script::pdk::PdkEventPayload as core::convert::From&lt;tremor_script::srs::EventPayload&gt;&gt;::from (552 samples, 0.51%)</title><rect x="35.7032%" y="629" width="0.5059%" height="15" fill="rgb(222,8,50)" fg:x="38954" fg:w="552"/><text x="35.9532%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (143 samples, 0.13%)</title><rect x="36.0781%" y="613" width="0.1311%" height="15" fill="rgb(213,81,27)" fg:x="39363" fg:w="143"/><text x="36.3281%" y="623.50"></text></g><g><title>&lt;tremor_script::pdk::PdkValueAndMeta as core::convert::From&lt;tremor_script::srs::ValueAndMeta&gt;&gt;::from (129 samples, 0.12%)</title><rect x="36.0909%" y="597" width="0.1182%" height="15" fill="rgb(245,50,10)" fg:x="39377" fg:w="129"/><text x="36.3409%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (33 samples, 0.03%)</title><rect x="36.1789%" y="581" width="0.0302%" height="15" fill="rgb(216,100,18)" fg:x="39473" fg:w="33"/><text x="36.4289%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (273 samples, 0.25%)</title><rect x="36.2092%" y="661" width="0.2502%" height="15" fill="rgb(236,147,54)" fg:x="39506" fg:w="273"/><text x="36.4592%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,261 samples, 1.16%)</title><rect x="35.3449%" y="677" width="1.1558%" height="15" fill="rgb(205,143,26)" fg:x="38563" fg:w="1261"/><text x="35.5949%" y="687.50"></text></g><g><title>abi_stable::std_types::result::&lt;impl core::convert::From&lt;abi_stable::std_types::result::RResult&lt;T,E&gt;&gt; for core::result::Result&lt;T,E&gt;&gt;::from (45 samples, 0.04%)</title><rect x="36.4594%" y="661" width="0.0412%" height="15" fill="rgb(236,26,9)" fg:x="39779" fg:w="45"/><text x="36.7094%" y="671.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (148 samples, 0.14%)</title><rect x="36.5006%" y="645" width="0.1356%" height="15" fill="rgb(221,165,53)" fg:x="39824" fg:w="148"/><text x="36.7506%" y="655.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (144 samples, 0.13%)</title><rect x="36.5043%" y="629" width="0.1320%" height="15" fill="rgb(214,110,17)" fg:x="39828" fg:w="144"/><text x="36.7543%" y="639.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (144 samples, 0.13%)</title><rect x="36.5043%" y="613" width="0.1320%" height="15" fill="rgb(237,197,12)" fg:x="39828" fg:w="144"/><text x="36.7543%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (29 samples, 0.03%)</title><rect x="36.6674%" y="597" width="0.0266%" height="15" fill="rgb(205,84,17)" fg:x="40006" fg:w="29"/><text x="36.9174%" y="607.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (29 samples, 0.03%)</title><rect x="36.6674%" y="581" width="0.0266%" height="15" fill="rgb(237,18,45)" fg:x="40006" fg:w="29"/><text x="36.9174%" y="591.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (29 samples, 0.03%)</title><rect x="36.6674%" y="565" width="0.0266%" height="15" fill="rgb(221,87,14)" fg:x="40006" fg:w="29"/><text x="36.9174%" y="575.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.01%)</title><rect x="36.6940%" y="549" width="0.0147%" height="15" fill="rgb(238,186,15)" fg:x="40035" fg:w="16"/><text x="36.9440%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.01%)</title><rect x="36.6940%" y="533" width="0.0147%" height="15" fill="rgb(208,115,11)" fg:x="40035" fg:w="16"/><text x="36.9440%" y="543.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (16 samples, 0.01%)</title><rect x="36.6940%" y="517" width="0.0147%" height="15" fill="rgb(254,175,0)" fg:x="40035" fg:w="16"/><text x="36.9440%" y="527.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (914 samples, 0.84%)</title><rect x="36.6454%" y="629" width="0.8377%" height="15" fill="rgb(227,24,42)" fg:x="39982" fg:w="914"/><text x="36.8954%" y="639.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (904 samples, 0.83%)</title><rect x="36.6546%" y="613" width="0.8286%" height="15" fill="rgb(223,211,37)" fg:x="39992" fg:w="904"/><text x="36.9046%" y="623.50"></text></g><g><title>std::panic::catch_unwind (861 samples, 0.79%)</title><rect x="36.6940%" y="597" width="0.7891%" height="15" fill="rgb(235,49,27)" fg:x="40035" fg:w="861"/><text x="36.9440%" y="607.50"></text></g><g><title>std::panicking::try (861 samples, 0.79%)</title><rect x="36.6940%" y="581" width="0.7891%" height="15" fill="rgb(254,97,51)" fg:x="40035" fg:w="861"/><text x="36.9440%" y="591.50"></text></g><g><title>std::panicking::try::do_call (861 samples, 0.79%)</title><rect x="36.6940%" y="565" width="0.7891%" height="15" fill="rgb(249,51,40)" fg:x="40035" fg:w="861"/><text x="36.9440%" y="575.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (845 samples, 0.77%)</title><rect x="36.7087%" y="549" width="0.7745%" height="15" fill="rgb(210,128,45)" fg:x="40051" fg:w="845"/><text x="36.9587%" y="559.50"></text></g><g><title>core::task::wake::Context::waker (11 samples, 0.01%)</title><rect x="37.4832%" y="629" width="0.0101%" height="15" fill="rgb(224,137,50)" fg:x="40896" fg:w="11"/><text x="37.7332%" y="639.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (936 samples, 0.86%)</title><rect x="36.6363%" y="645" width="0.8579%" height="15" fill="rgb(242,15,9)" fg:x="39972" fg:w="936"/><text x="36.8863%" y="655.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,276 samples, 1.17%)</title><rect x="36.5006%" y="677" width="1.1695%" height="15" fill="rgb(233,187,41)" fg:x="39824" fg:w="1276"/><text x="36.7506%" y="687.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,276 samples, 1.17%)</title><rect x="36.5006%" y="661" width="1.1695%" height="15" fill="rgb(227,2,29)" fg:x="39824" fg:w="1276"/><text x="36.7506%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (192 samples, 0.18%)</title><rect x="37.4942%" y="645" width="0.1760%" height="15" fill="rgb(222,70,3)" fg:x="40908" fg:w="192"/><text x="37.7442%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (227 samples, 0.21%)</title><rect x="37.6701%" y="677" width="0.2081%" height="15" fill="rgb(213,11,42)" fg:x="41100" fg:w="227"/><text x="37.9201%" y="687.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (61 samples, 0.06%)</title><rect x="37.8782%" y="677" width="0.0559%" height="15" fill="rgb(225,150,9)" fg:x="41327" fg:w="61"/><text x="38.1282%" y="687.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (21 samples, 0.02%)</title><rect x="37.9341%" y="629" width="0.0192%" height="15" fill="rgb(230,162,45)" fg:x="41388" fg:w="21"/><text x="38.1841%" y="639.50"></text></g><g><title>async_ffi::DropBomb::with (21 samples, 0.02%)</title><rect x="37.9341%" y="613" width="0.0192%" height="15" fill="rgb(222,14,52)" fg:x="41388" fg:w="21"/><text x="38.1841%" y="623.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (12 samples, 0.01%)</title><rect x="37.9423%" y="597" width="0.0110%" height="15" fill="rgb(254,198,14)" fg:x="41397" fg:w="12"/><text x="38.1923%" y="607.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="37.9423%" y="581" width="0.0110%" height="15" fill="rgb(220,217,30)" fg:x="41397" fg:w="12"/><text x="38.1923%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}}&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="37.9423%" y="565" width="0.0110%" height="15" fill="rgb(215,146,41)" fg:x="41397" fg:w="12"/><text x="38.1923%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (33 samples, 0.03%)</title><rect x="37.9598%" y="565" width="0.0302%" height="15" fill="rgb(217,27,36)" fg:x="41416" fg:w="33"/><text x="38.2098%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (33 samples, 0.03%)</title><rect x="37.9598%" y="549" width="0.0302%" height="15" fill="rgb(219,218,39)" fg:x="41416" fg:w="33"/><text x="38.2098%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (24 samples, 0.02%)</title><rect x="37.9680%" y="533" width="0.0220%" height="15" fill="rgb(219,4,42)" fg:x="41425" fg:w="24"/><text x="38.2180%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (24 samples, 0.02%)</title><rect x="37.9680%" y="517" width="0.0220%" height="15" fill="rgb(249,119,36)" fg:x="41425" fg:w="24"/><text x="38.2180%" y="527.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (23 samples, 0.02%)</title><rect x="37.9689%" y="501" width="0.0211%" height="15" fill="rgb(209,23,33)" fg:x="41426" fg:w="23"/><text x="38.2189%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (38 samples, 0.03%)</title><rect x="37.9598%" y="597" width="0.0348%" height="15" fill="rgb(211,10,0)" fg:x="41416" fg:w="38"/><text x="38.2098%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (38 samples, 0.03%)</title><rect x="37.9598%" y="581" width="0.0348%" height="15" fill="rgb(208,99,37)" fg:x="41416" fg:w="38"/><text x="38.2098%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (42 samples, 0.04%)</title><rect x="37.9588%" y="613" width="0.0385%" height="15" fill="rgb(213,132,31)" fg:x="41415" fg:w="42"/><text x="38.2088%" y="623.50"></text></g><g><title>rust_dealloc (51 samples, 0.05%)</title><rect x="37.9533%" y="629" width="0.0467%" height="15" fill="rgb(243,129,40)" fg:x="41409" fg:w="51"/><text x="38.2033%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (83 samples, 0.08%)</title><rect x="37.9341%" y="677" width="0.0761%" height="15" fill="rgb(210,66,33)" fg:x="41388" fg:w="83"/><text x="38.1841%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (83 samples, 0.08%)</title><rect x="37.9341%" y="661" width="0.0761%" height="15" fill="rgb(209,189,4)" fg:x="41388" fg:w="83"/><text x="38.1841%" y="671.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.08%)</title><rect x="37.9341%" y="645" width="0.0761%" height="15" fill="rgb(214,107,37)" fg:x="41388" fg:w="83"/><text x="38.1841%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (11 samples, 0.01%)</title><rect x="38.0001%" y="629" width="0.0101%" height="15" fill="rgb(245,88,54)" fg:x="41460" fg:w="11"/><text x="38.2501%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (317 samples, 0.29%)</title><rect x="38.3621%" y="661" width="0.2905%" height="15" fill="rgb(205,146,20)" fg:x="41855" fg:w="317"/><text x="38.6121%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (222 samples, 0.20%)</title><rect x="38.6939%" y="565" width="0.2035%" height="15" fill="rgb(220,161,25)" fg:x="42217" fg:w="222"/><text x="38.9439%" y="575.50"></text></g><g><title>rust_alloc (23 samples, 0.02%)</title><rect x="38.9185%" y="421" width="0.0211%" height="15" fill="rgb(215,152,15)" fg:x="42462" fg:w="23"/><text x="39.1685%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (14 samples, 0.01%)</title><rect x="38.9432%" y="405" width="0.0128%" height="15" fill="rgb(233,192,44)" fg:x="42489" fg:w="14"/><text x="39.1932%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (14 samples, 0.01%)</title><rect x="38.9432%" y="389" width="0.0128%" height="15" fill="rgb(240,170,46)" fg:x="42489" fg:w="14"/><text x="39.1932%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="38.9432%" y="373" width="0.0128%" height="15" fill="rgb(207,104,33)" fg:x="42489" fg:w="14"/><text x="39.1932%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="38.9432%" y="357" width="0.0128%" height="15" fill="rgb(219,21,39)" fg:x="42489" fg:w="14"/><text x="39.1932%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="38.9432%" y="341" width="0.0128%" height="15" fill="rgb(214,133,29)" fg:x="42489" fg:w="14"/><text x="39.1932%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="38.9588%" y="341" width="0.0101%" height="15" fill="rgb(226,93,6)" fg:x="42506" fg:w="11"/><text x="39.2088%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="38.9588%" y="325" width="0.0101%" height="15" fill="rgb(252,222,34)" fg:x="42506" fg:w="11"/><text x="39.2088%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="38.9588%" y="357" width="0.0119%" height="15" fill="rgb(252,92,48)" fg:x="42506" fg:w="13"/><text x="39.2088%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (19 samples, 0.02%)</title><rect x="38.9561%" y="373" width="0.0174%" height="15" fill="rgb(245,223,24)" fg:x="42503" fg:w="19"/><text x="39.2061%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (111 samples, 0.10%)</title><rect x="38.9561%" y="405" width="0.1017%" height="15" fill="rgb(205,176,3)" fg:x="42503" fg:w="111"/><text x="39.2061%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (111 samples, 0.10%)</title><rect x="38.9561%" y="389" width="0.1017%" height="15" fill="rgb(235,151,15)" fg:x="42503" fg:w="111"/><text x="39.2061%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (92 samples, 0.08%)</title><rect x="38.9735%" y="373" width="0.0843%" height="15" fill="rgb(237,209,11)" fg:x="42522" fg:w="92"/><text x="39.2235%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (82 samples, 0.08%)</title><rect x="38.9826%" y="357" width="0.0752%" height="15" fill="rgb(243,227,24)" fg:x="42532" fg:w="82"/><text x="39.2326%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (82 samples, 0.08%)</title><rect x="38.9826%" y="341" width="0.0752%" height="15" fill="rgb(239,193,16)" fg:x="42532" fg:w="82"/><text x="39.2326%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (82 samples, 0.08%)</title><rect x="38.9826%" y="325" width="0.0752%" height="15" fill="rgb(231,27,9)" fg:x="42532" fg:w="82"/><text x="39.2326%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="39.0578%" y="405" width="0.0137%" height="15" fill="rgb(219,169,10)" fg:x="42614" fg:w="15"/><text x="39.3078%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (11 samples, 0.01%)</title><rect x="39.0825%" y="357" width="0.0101%" height="15" fill="rgb(244,229,43)" fg:x="42641" fg:w="11"/><text x="39.3325%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="39.0926%" y="357" width="0.0156%" height="15" fill="rgb(254,38,20)" fg:x="42652" fg:w="17"/><text x="39.3426%" y="367.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (17 samples, 0.02%)</title><rect x="39.0926%" y="341" width="0.0156%" height="15" fill="rgb(250,47,30)" fg:x="42652" fg:w="17"/><text x="39.3426%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="39.0715%" y="405" width="0.0376%" height="15" fill="rgb(224,124,36)" fg:x="42629" fg:w="41"/><text x="39.3215%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="39.0752%" y="389" width="0.0339%" height="15" fill="rgb(246,68,51)" fg:x="42633" fg:w="37"/><text x="39.3252%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="39.0780%" y="373" width="0.0312%" height="15" fill="rgb(253,43,49)" fg:x="42636" fg:w="34"/><text x="39.3280%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::empty (29 samples, 0.03%)</title><rect x="39.1091%" y="405" width="0.0266%" height="15" fill="rgb(219,54,36)" fg:x="42670" fg:w="29"/><text x="39.3591%" y="415.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (29 samples, 0.03%)</title><rect x="39.1091%" y="389" width="0.0266%" height="15" fill="rgb(227,133,34)" fg:x="42670" fg:w="29"/><text x="39.3591%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (371 samples, 0.34%)</title><rect x="38.9185%" y="453" width="0.3400%" height="15" fill="rgb(247,227,15)" fg:x="42462" fg:w="371"/><text x="39.1685%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (371 samples, 0.34%)</title><rect x="38.9185%" y="437" width="0.3400%" height="15" fill="rgb(229,96,14)" fg:x="42462" fg:w="371"/><text x="39.1685%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (346 samples, 0.32%)</title><rect x="38.9414%" y="421" width="0.3171%" height="15" fill="rgb(220,79,17)" fg:x="42487" fg:w="346"/><text x="39.1914%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (134 samples, 0.12%)</title><rect x="39.1357%" y="405" width="0.1228%" height="15" fill="rgb(205,131,53)" fg:x="42699" fg:w="134"/><text x="39.3857%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (134 samples, 0.12%)</title><rect x="39.1357%" y="389" width="0.1228%" height="15" fill="rgb(209,50,29)" fg:x="42699" fg:w="134"/><text x="39.3857%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (652 samples, 0.60%)</title><rect x="38.6728%" y="581" width="0.5976%" height="15" fill="rgb(245,86,46)" fg:x="42194" fg:w="652"/><text x="38.9228%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (407 samples, 0.37%)</title><rect x="38.8974%" y="565" width="0.3730%" height="15" fill="rgb(235,66,46)" fg:x="42439" fg:w="407"/><text x="39.1474%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (407 samples, 0.37%)</title><rect x="38.8974%" y="549" width="0.3730%" height="15" fill="rgb(232,148,31)" fg:x="42439" fg:w="407"/><text x="39.1474%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (407 samples, 0.37%)</title><rect x="38.8974%" y="533" width="0.3730%" height="15" fill="rgb(217,149,8)" fg:x="42439" fg:w="407"/><text x="39.1474%" y="543.50"></text></g><g><title>alloc::alloc::alloc (407 samples, 0.37%)</title><rect x="38.8974%" y="517" width="0.3730%" height="15" fill="rgb(209,183,11)" fg:x="42439" fg:w="407"/><text x="39.1474%" y="527.50"></text></g><g><title>__rg_alloc (407 samples, 0.37%)</title><rect x="38.8974%" y="501" width="0.3730%" height="15" fill="rgb(208,55,20)" fg:x="42439" fg:w="407"/><text x="39.1474%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (407 samples, 0.37%)</title><rect x="38.8974%" y="485" width="0.3730%" height="15" fill="rgb(218,39,14)" fg:x="42439" fg:w="407"/><text x="39.1474%" y="495.50"></text></g><g><title>rust_alloc (396 samples, 0.36%)</title><rect x="38.9075%" y="469" width="0.3630%" height="15" fill="rgb(216,169,33)" fg:x="42450" fg:w="396"/><text x="39.1575%" y="479.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="39.2585%" y="453" width="0.0119%" height="15" fill="rgb(233,80,24)" fg:x="42833" fg:w="13"/><text x="39.5085%" y="463.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (681 samples, 0.62%)</title><rect x="38.6573%" y="661" width="0.6242%" height="15" fill="rgb(213,179,31)" fg:x="42177" fg:w="681"/><text x="38.9073%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (664 samples, 0.61%)</title><rect x="38.6728%" y="645" width="0.6086%" height="15" fill="rgb(209,19,5)" fg:x="42194" fg:w="664"/><text x="38.9228%" y="655.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (664 samples, 0.61%)</title><rect x="38.6728%" y="629" width="0.6086%" height="15" fill="rgb(219,18,35)" fg:x="42194" fg:w="664"/><text x="38.9228%" y="639.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (664 samples, 0.61%)</title><rect x="38.6728%" y="613" width="0.6086%" height="15" fill="rgb(209,169,16)" fg:x="42194" fg:w="664"/><text x="38.9228%" y="623.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (664 samples, 0.61%)</title><rect x="38.6728%" y="597" width="0.6086%" height="15" fill="rgb(245,90,51)" fg:x="42194" fg:w="664"/><text x="38.9228%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (12 samples, 0.01%)</title><rect x="39.2704%" y="581" width="0.0110%" height="15" fill="rgb(220,99,45)" fg:x="42846" fg:w="12"/><text x="39.5204%" y="591.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (5,197 samples, 4.76%)</title><rect x="34.5869%" y="693" width="4.7633%" height="15" fill="rgb(249,89,25)" fg:x="37736" fg:w="5197"/><text x="34.8369%" y="703.50">tremor..</text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (1,462 samples, 1.34%)</title><rect x="38.0102%" y="677" width="1.3400%" height="15" fill="rgb(239,193,0)" fg:x="41471" fg:w="1462"/><text x="38.2602%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::_::&lt;impl tremor_runtime::connectors::sink::RawSink_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::on_event (66 samples, 0.06%)</title><rect x="39.2897%" y="661" width="0.0605%" height="15" fill="rgb(231,126,1)" fg:x="42867" fg:w="66"/><text x="39.5397%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (23 samples, 0.02%)</title><rect x="39.5536%" y="661" width="0.0211%" height="15" fill="rgb(243,166,3)" fg:x="43155" fg:w="23"/><text x="39.8036%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (23 samples, 0.02%)</title><rect x="39.5536%" y="645" width="0.0211%" height="15" fill="rgb(223,22,34)" fg:x="43155" fg:w="23"/><text x="39.8036%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (23 samples, 0.02%)</title><rect x="39.5536%" y="629" width="0.0211%" height="15" fill="rgb(251,52,51)" fg:x="43155" fg:w="23"/><text x="39.8036%" y="639.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (25 samples, 0.02%)</title><rect x="39.5821%" y="597" width="0.0229%" height="15" fill="rgb(221,165,28)" fg:x="43186" fg:w="25"/><text x="39.8321%" y="607.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="39.6435%" y="453" width="0.0165%" height="15" fill="rgb(218,121,47)" fg:x="43253" fg:w="18"/><text x="39.8935%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="39.6435%" y="437" width="0.0165%" height="15" fill="rgb(209,120,9)" fg:x="43253" fg:w="18"/><text x="39.8935%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (42 samples, 0.04%)</title><rect x="39.6297%" y="501" width="0.0385%" height="15" fill="rgb(236,68,12)" fg:x="43238" fg:w="42"/><text x="39.8797%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (42 samples, 0.04%)</title><rect x="39.6297%" y="485" width="0.0385%" height="15" fill="rgb(225,194,26)" fg:x="43238" fg:w="42"/><text x="39.8797%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (42 samples, 0.04%)</title><rect x="39.6297%" y="469" width="0.0385%" height="15" fill="rgb(231,84,39)" fg:x="43238" fg:w="42"/><text x="39.8797%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (61 samples, 0.06%)</title><rect x="39.6196%" y="565" width="0.0559%" height="15" fill="rgb(210,11,45)" fg:x="43227" fg:w="61"/><text x="39.8696%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (61 samples, 0.06%)</title><rect x="39.6196%" y="549" width="0.0559%" height="15" fill="rgb(224,54,52)" fg:x="43227" fg:w="61"/><text x="39.8696%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (61 samples, 0.06%)</title><rect x="39.6196%" y="533" width="0.0559%" height="15" fill="rgb(238,102,14)" fg:x="43227" fg:w="61"/><text x="39.8696%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (61 samples, 0.06%)</title><rect x="39.6196%" y="517" width="0.0559%" height="15" fill="rgb(243,160,52)" fg:x="43227" fg:w="61"/><text x="39.8696%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (74 samples, 0.07%)</title><rect x="39.6132%" y="581" width="0.0678%" height="15" fill="rgb(216,114,19)" fg:x="43220" fg:w="74"/><text x="39.8632%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,865 samples, 5.38%)</title><rect x="34.3174%" y="709" width="5.3756%" height="15" fill="rgb(244,166,37)" fg:x="37442" fg:w="5865"/><text x="34.5674%" y="719.50">&lt;core::..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (369 samples, 0.34%)</title><rect x="39.3548%" y="693" width="0.3382%" height="15" fill="rgb(246,29,44)" fg:x="42938" fg:w="369"/><text x="39.6048%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (152 samples, 0.14%)</title><rect x="39.5536%" y="677" width="0.1393%" height="15" fill="rgb(215,56,53)" fg:x="43155" fg:w="152"/><text x="39.8036%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::pdk::PdkOpMeta&gt; (129 samples, 0.12%)</title><rect x="39.5747%" y="661" width="0.1182%" height="15" fill="rgb(217,60,2)" fg:x="43178" fg:w="129"/><text x="39.8247%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (129 samples, 0.12%)</title><rect x="39.5747%" y="645" width="0.1182%" height="15" fill="rgb(207,26,24)" fg:x="43178" fg:w="129"/><text x="39.8247%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt; (129 samples, 0.12%)</title><rect x="39.5747%" y="629" width="0.1182%" height="15" fill="rgb(252,210,15)" fg:x="43178" fg:w="129"/><text x="39.8247%" y="639.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (129 samples, 0.12%)</title><rect x="39.5747%" y="613" width="0.1182%" height="15" fill="rgb(253,209,26)" fg:x="43178" fg:w="129"/><text x="39.8247%" y="623.50"></text></g><g><title>rust_dealloc (96 samples, 0.09%)</title><rect x="39.6050%" y="597" width="0.0880%" height="15" fill="rgb(238,170,14)" fg:x="43211" fg:w="96"/><text x="39.8550%" y="607.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="39.6810%" y="581" width="0.0119%" height="15" fill="rgb(216,178,15)" fg:x="43294" fg:w="13"/><text x="39.9310%" y="591.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (182 samples, 0.17%)</title><rect x="39.6930%" y="709" width="0.1668%" height="15" fill="rgb(250,197,2)" fg:x="43307" fg:w="182"/><text x="39.9430%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="39.8460%" y="693" width="0.0137%" height="15" fill="rgb(212,70,42)" fg:x="43474" fg:w="15"/><text x="40.0960%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (65 samples, 0.06%)</title><rect x="39.8827%" y="693" width="0.0596%" height="15" fill="rgb(227,213,9)" fg:x="43514" fg:w="65"/><text x="40.1327%" y="703.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (65 samples, 0.06%)</title><rect x="39.8827%" y="677" width="0.0596%" height="15" fill="rgb(245,99,25)" fg:x="43514" fg:w="65"/><text x="40.1327%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (36 samples, 0.03%)</title><rect x="39.9093%" y="661" width="0.0330%" height="15" fill="rgb(250,82,29)" fg:x="43543" fg:w="36"/><text x="40.1593%" y="671.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (249 samples, 0.23%)</title><rect x="39.9423%" y="693" width="0.2282%" height="15" fill="rgb(241,226,54)" fg:x="43579" fg:w="249"/><text x="40.1923%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (52 samples, 0.05%)</title><rect x="40.1228%" y="677" width="0.0477%" height="15" fill="rgb(221,99,41)" fg:x="43776" fg:w="52"/><text x="40.3728%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (21 samples, 0.02%)</title><rect x="40.1512%" y="661" width="0.0192%" height="15" fill="rgb(213,90,21)" fg:x="43807" fg:w="21"/><text x="40.4012%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (21 samples, 0.02%)</title><rect x="40.1512%" y="645" width="0.0192%" height="15" fill="rgb(205,208,24)" fg:x="43807" fg:w="21"/><text x="40.4012%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.02%)</title><rect x="40.1512%" y="629" width="0.0192%" height="15" fill="rgb(246,31,12)" fg:x="43807" fg:w="21"/><text x="40.4012%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.02%)</title><rect x="40.1512%" y="613" width="0.0192%" height="15" fill="rgb(213,154,6)" fg:x="43807" fg:w="21"/><text x="40.4012%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.02%)</title><rect x="40.1512%" y="597" width="0.0192%" height="15" fill="rgb(222,163,29)" fg:x="43807" fg:w="21"/><text x="40.4012%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="40.1512%" y="581" width="0.0192%" height="15" fill="rgb(227,201,8)" fg:x="43807" fg:w="21"/><text x="40.4012%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="40.1576%" y="565" width="0.0128%" height="15" fill="rgb(233,9,32)" fg:x="43814" fg:w="14"/><text x="40.4076%" y="575.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="40.1705%" y="693" width="0.0128%" height="15" fill="rgb(217,54,24)" fg:x="43828" fg:w="14"/><text x="40.4205%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="40.1705%" y="677" width="0.0128%" height="15" fill="rgb(235,192,0)" fg:x="43828" fg:w="14"/><text x="40.4205%" y="687.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (365 samples, 0.33%)</title><rect x="39.8598%" y="709" width="0.3345%" height="15" fill="rgb(235,45,9)" fg:x="43489" fg:w="365"/><text x="40.1098%" y="719.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (12 samples, 0.01%)</title><rect x="40.1833%" y="693" width="0.0110%" height="15" fill="rgb(246,42,40)" fg:x="43842" fg:w="12"/><text x="40.4333%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,709 samples, 1.57%)</title><rect x="40.1943%" y="709" width="1.5664%" height="15" fill="rgb(248,111,24)" fg:x="43854" fg:w="1709"/><text x="40.4443%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (12 samples, 0.01%)</title><rect x="41.7928%" y="453" width="0.0110%" height="15" fill="rgb(249,65,22)" fg:x="45598" fg:w="12"/><text x="42.0428%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (48 samples, 0.04%)</title><rect x="41.9110%" y="421" width="0.0440%" height="15" fill="rgb(238,111,51)" fg:x="45727" fg:w="48"/><text x="42.1610%" y="431.50"></text></g><g><title> (48 samples, 0.04%)</title><rect x="41.9110%" y="405" width="0.0440%" height="15" fill="rgb(250,118,22)" fg:x="45727" fg:w="48"/><text x="42.1610%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (185 samples, 0.17%)</title><rect x="41.8038%" y="453" width="0.1696%" height="15" fill="rgb(234,84,26)" fg:x="45610" fg:w="185"/><text x="42.0538%" y="463.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (167 samples, 0.15%)</title><rect x="41.8203%" y="437" width="0.1531%" height="15" fill="rgb(243,172,12)" fg:x="45628" fg:w="167"/><text x="42.0703%" y="447.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (19 samples, 0.02%)</title><rect x="41.9559%" y="421" width="0.0174%" height="15" fill="rgb(236,150,49)" fg:x="45776" fg:w="19"/><text x="42.2059%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (245 samples, 0.22%)</title><rect x="41.7900%" y="485" width="0.2246%" height="15" fill="rgb(225,197,26)" fg:x="45595" fg:w="245"/><text x="42.0400%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (245 samples, 0.22%)</title><rect x="41.7900%" y="469" width="0.2246%" height="15" fill="rgb(214,17,42)" fg:x="45595" fg:w="245"/><text x="42.0400%" y="479.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (45 samples, 0.04%)</title><rect x="41.9733%" y="453" width="0.0412%" height="15" fill="rgb(224,165,40)" fg:x="45795" fg:w="45"/><text x="42.2233%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (267 samples, 0.24%)</title><rect x="41.7772%" y="533" width="0.2447%" height="15" fill="rgb(246,100,4)" fg:x="45581" fg:w="267"/><text x="42.0272%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (253 samples, 0.23%)</title><rect x="41.7900%" y="517" width="0.2319%" height="15" fill="rgb(222,103,0)" fg:x="45595" fg:w="253"/><text x="42.0400%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (253 samples, 0.23%)</title><rect x="41.7900%" y="501" width="0.2319%" height="15" fill="rgb(227,189,26)" fg:x="45595" fg:w="253"/><text x="42.0400%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (287 samples, 0.26%)</title><rect x="41.7607%" y="709" width="0.2630%" height="15" fill="rgb(214,202,17)" fg:x="45563" fg:w="287"/><text x="42.0107%" y="719.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (287 samples, 0.26%)</title><rect x="41.7607%" y="693" width="0.2630%" height="15" fill="rgb(229,111,3)" fg:x="45563" fg:w="287"/><text x="42.0107%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (276 samples, 0.25%)</title><rect x="41.7708%" y="677" width="0.2530%" height="15" fill="rgb(229,172,15)" fg:x="45574" fg:w="276"/><text x="42.0208%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (276 samples, 0.25%)</title><rect x="41.7708%" y="661" width="0.2530%" height="15" fill="rgb(230,224,35)" fg:x="45574" fg:w="276"/><text x="42.0208%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (276 samples, 0.25%)</title><rect x="41.7708%" y="645" width="0.2530%" height="15" fill="rgb(251,141,6)" fg:x="45574" fg:w="276"/><text x="42.0208%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (276 samples, 0.25%)</title><rect x="41.7708%" y="629" width="0.2530%" height="15" fill="rgb(225,208,6)" fg:x="45574" fg:w="276"/><text x="42.0208%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (276 samples, 0.25%)</title><rect x="41.7708%" y="613" width="0.2530%" height="15" fill="rgb(246,181,16)" fg:x="45574" fg:w="276"/><text x="42.0208%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (276 samples, 0.25%)</title><rect x="41.7708%" y="597" width="0.2530%" height="15" fill="rgb(227,129,36)" fg:x="45574" fg:w="276"/><text x="42.0208%" y="607.50"></text></g><g><title>__rg_dealloc (276 samples, 0.25%)</title><rect x="41.7708%" y="581" width="0.2530%" height="15" fill="rgb(248,117,24)" fg:x="45574" fg:w="276"/><text x="42.0208%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (276 samples, 0.25%)</title><rect x="41.7708%" y="565" width="0.2530%" height="15" fill="rgb(214,185,35)" fg:x="45574" fg:w="276"/><text x="42.0208%" y="575.50"></text></g><g><title>rust_dealloc (276 samples, 0.25%)</title><rect x="41.7708%" y="549" width="0.2530%" height="15" fill="rgb(236,150,34)" fg:x="45574" fg:w="276"/><text x="42.0208%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="42.0237%" y="693" width="0.0128%" height="15" fill="rgb(243,228,27)" fg:x="45850" fg:w="14"/><text x="42.2737%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="42.0237%" y="709" width="0.0183%" height="15" fill="rgb(245,77,44)" fg:x="45850" fg:w="20"/><text x="42.2737%" y="719.50"></text></g><g><title>core::time::Duration::as_nanos (25 samples, 0.02%)</title><rect x="42.0851%" y="693" width="0.0229%" height="15" fill="rgb(235,214,42)" fg:x="45917" fg:w="25"/><text x="42.3351%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (129 samples, 0.12%)</title><rect x="42.2125%" y="645" width="0.1182%" height="15" fill="rgb(221,74,3)" fg:x="46056" fg:w="129"/><text x="42.4625%" y="655.50"></text></g><g><title>core::cmp::PartialOrd::ge (129 samples, 0.12%)</title><rect x="42.2125%" y="629" width="0.1182%" height="15" fill="rgb(206,121,29)" fg:x="46056" fg:w="129"/><text x="42.4625%" y="639.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (127 samples, 0.12%)</title><rect x="42.2144%" y="613" width="0.1164%" height="15" fill="rgb(249,131,53)" fg:x="46058" fg:w="127"/><text x="42.4644%" y="623.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (127 samples, 0.12%)</title><rect x="42.2144%" y="597" width="0.1164%" height="15" fill="rgb(236,170,29)" fg:x="46058" fg:w="127"/><text x="42.4644%" y="607.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (127 samples, 0.12%)</title><rect x="42.2144%" y="581" width="0.1164%" height="15" fill="rgb(247,96,15)" fg:x="46058" fg:w="127"/><text x="42.4644%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (77 samples, 0.07%)</title><rect x="42.2602%" y="565" width="0.0706%" height="15" fill="rgb(211,210,7)" fg:x="46108" fg:w="77"/><text x="42.5102%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (294 samples, 0.27%)</title><rect x="42.1081%" y="677" width="0.2695%" height="15" fill="rgb(240,88,50)" fg:x="45942" fg:w="294"/><text x="42.3581%" y="687.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (294 samples, 0.27%)</title><rect x="42.1081%" y="661" width="0.2695%" height="15" fill="rgb(209,229,26)" fg:x="45942" fg:w="294"/><text x="42.3581%" y="671.50"></text></g><g><title>core::time::Duration::new (51 samples, 0.05%)</title><rect x="42.3308%" y="645" width="0.0467%" height="15" fill="rgb(210,68,23)" fg:x="46185" fg:w="51"/><text x="42.5808%" y="655.50"></text></g><g><title>std::time::SystemTime::duration_since (307 samples, 0.28%)</title><rect x="42.1081%" y="693" width="0.2814%" height="15" fill="rgb(229,180,13)" fg:x="45942" fg:w="307"/><text x="42.3581%" y="703.50"></text></g><g><title>tremor_common::time::nanotime (13 samples, 0.01%)</title><rect x="42.3775%" y="677" width="0.0119%" height="15" fill="rgb(236,53,44)" fg:x="46236" fg:w="13"/><text x="42.6275%" y="687.50"></text></g><g><title>tremor_common::time::nanotime (1,665 samples, 1.53%)</title><rect x="42.0421%" y="709" width="1.5261%" height="15" fill="rgb(244,214,29)" fg:x="45870" fg:w="1665"/><text x="42.2921%" y="719.50"></text></g><g><title>std::time::SystemTime::now (1,286 samples, 1.18%)</title><rect x="42.3894%" y="693" width="1.1787%" height="15" fill="rgb(220,75,29)" fg:x="46249" fg:w="1286"/><text x="42.6394%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,286 samples, 1.18%)</title><rect x="42.3894%" y="677" width="1.1787%" height="15" fill="rgb(214,183,37)" fg:x="46249" fg:w="1286"/><text x="42.6394%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::now (1,286 samples, 1.18%)</title><rect x="42.3894%" y="661" width="1.1787%" height="15" fill="rgb(239,117,29)" fg:x="46249" fg:w="1286"/><text x="42.6394%" y="671.50"></text></g><g><title>__clock_gettime_2 (1,048 samples, 0.96%)</title><rect x="42.6076%" y="645" width="0.9605%" height="15" fill="rgb(237,171,35)" fg:x="46487" fg:w="1048"/><text x="42.8576%" y="655.50"></text></g><g><title>__vdso_clock_gettime (979 samples, 0.90%)</title><rect x="42.6708%" y="629" width="0.8973%" height="15" fill="rgb(229,178,53)" fg:x="46556" fg:w="979"/><text x="42.9208%" y="639.50"></text></g><g><title>[[vdso]] (611 samples, 0.56%)</title><rect x="43.0081%" y="613" width="0.5600%" height="15" fill="rgb(210,102,19)" fg:x="46924" fg:w="611"/><text x="43.2581%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (12 samples, 0.01%)</title><rect x="43.5681%" y="693" width="0.0110%" height="15" fill="rgb(235,127,22)" fg:x="47535" fg:w="12"/><text x="43.8181%" y="703.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="43.5865%" y="645" width="0.0128%" height="15" fill="rgb(244,31,31)" fg:x="47555" fg:w="14"/><text x="43.8365%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (14 samples, 0.01%)</title><rect x="43.5865%" y="629" width="0.0128%" height="15" fill="rgb(231,43,21)" fg:x="47555" fg:w="14"/><text x="43.8365%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="43.5865%" y="613" width="0.0128%" height="15" fill="rgb(217,131,35)" fg:x="47555" fg:w="14"/><text x="43.8365%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (13 samples, 0.01%)</title><rect x="43.5874%" y="597" width="0.0119%" height="15" fill="rgb(221,149,4)" fg:x="47556" fg:w="13"/><text x="43.8374%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (13 samples, 0.01%)</title><rect x="43.5874%" y="581" width="0.0119%" height="15" fill="rgb(232,170,28)" fg:x="47556" fg:w="13"/><text x="43.8374%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (13 samples, 0.01%)</title><rect x="43.5874%" y="565" width="0.0119%" height="15" fill="rgb(238,56,10)" fg:x="47556" fg:w="13"/><text x="43.8374%" y="575.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (40 samples, 0.04%)</title><rect x="43.5681%" y="709" width="0.0367%" height="15" fill="rgb(235,196,14)" fg:x="47535" fg:w="40"/><text x="43.8181%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (28 samples, 0.03%)</title><rect x="43.5791%" y="693" width="0.0257%" height="15" fill="rgb(216,45,48)" fg:x="47547" fg:w="28"/><text x="43.8291%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (28 samples, 0.03%)</title><rect x="43.5791%" y="677" width="0.0257%" height="15" fill="rgb(238,213,17)" fg:x="47547" fg:w="28"/><text x="43.8291%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="43.5791%" y="661" width="0.0257%" height="15" fill="rgb(212,13,2)" fg:x="47547" fg:w="28"/><text x="43.8291%" y="671.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies (27 samples, 0.02%)</title><rect x="43.6048%" y="709" width="0.0247%" height="15" fill="rgb(240,114,20)" fg:x="47575" fg:w="27"/><text x="43.8548%" y="719.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (10,510 samples, 9.63%)</title><rect x="34.0168%" y="725" width="9.6329%" height="15" fill="rgb(228,41,40)" fg:x="37114" fg:w="10510"/><text x="34.2668%" y="735.50">tremor_runtime..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::periodic_flush (15 samples, 0.01%)</title><rect x="43.6359%" y="709" width="0.0137%" height="15" fill="rgb(244,132,35)" fg:x="47609" fg:w="15"/><text x="43.8859%" y="719.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (10,540 samples, 9.66%)</title><rect x="33.9957%" y="1189" width="9.6604%" height="15" fill="rgb(253,189,4)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="1199.50">async_global_e..</text></g><g><title>std::panic::catch_unwind (10,540 samples, 9.66%)</title><rect x="33.9957%" y="1173" width="9.6604%" height="15" fill="rgb(224,37,19)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="1183.50">std::panic::ca..</text></g><g><title>std::panicking::try (10,540 samples, 9.66%)</title><rect x="33.9957%" y="1157" width="9.6604%" height="15" fill="rgb(235,223,18)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="1167.50">std::panicking..</text></g><g><title>std::panicking::try::do_call (10,540 samples, 9.66%)</title><rect x="33.9957%" y="1141" width="9.6604%" height="15" fill="rgb(235,163,25)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="1151.50">std::panicking..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (10,540 samples, 9.66%)</title><rect x="33.9957%" y="1125" width="9.6604%" height="15" fill="rgb(217,145,28)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="1135.50">async_global_e..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10,540 samples, 9.66%)</title><rect x="33.9957%" y="1109" width="9.6604%" height="15" fill="rgb(223,223,32)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="1119.50">std::thread::l..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,540 samples, 9.66%)</title><rect x="33.9957%" y="1093" width="9.6604%" height="15" fill="rgb(227,189,39)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="1103.50">std::thread::l..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (10,540 samples, 9.66%)</title><rect x="33.9957%" y="1077" width="9.6604%" height="15" fill="rgb(248,10,22)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="1087.50">async_global_e..</text></g><g><title>async_global_executor::reactor::block_on (10,540 samples, 9.66%)</title><rect x="33.9957%" y="1061" width="9.6604%" height="15" fill="rgb(248,46,39)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="1071.50">async_global_e..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (10,540 samples, 9.66%)</title><rect x="33.9957%" y="1045" width="9.6604%" height="15" fill="rgb(248,113,48)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="1055.50">async_global_e..</text></g><g><title>async_io::driver::block_on (10,540 samples, 9.66%)</title><rect x="33.9957%" y="1029" width="9.6604%" height="15" fill="rgb(245,16,25)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="1039.50">async_io::driv..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10,540 samples, 9.66%)</title><rect x="33.9957%" y="1013" width="9.6604%" height="15" fill="rgb(249,152,16)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="1023.50">&lt;futures_lite:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,540 samples, 9.66%)</title><rect x="33.9957%" y="997" width="9.6604%" height="15" fill="rgb(250,16,1)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="1007.50">&lt;core::future:..</text></g><g><title>async_executor::Executor::run::{{closure}} (10,540 samples, 9.66%)</title><rect x="33.9957%" y="981" width="9.6604%" height="15" fill="rgb(249,138,3)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="991.50">async_executor..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10,540 samples, 9.66%)</title><rect x="33.9957%" y="965" width="9.6604%" height="15" fill="rgb(227,71,41)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="975.50">&lt;futures_lite:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,540 samples, 9.66%)</title><rect x="33.9957%" y="949" width="9.6604%" height="15" fill="rgb(209,184,23)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="959.50">&lt;core::future:..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (10,540 samples, 9.66%)</title><rect x="33.9957%" y="933" width="9.6604%" height="15" fill="rgb(223,215,31)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="943.50">async_executor..</text></g><g><title>async_task::runnable::Runnable::run (10,540 samples, 9.66%)</title><rect x="33.9957%" y="917" width="9.6604%" height="15" fill="rgb(210,146,28)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="927.50">async_task::ru..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (10,540 samples, 9.66%)</title><rect x="33.9957%" y="901" width="9.6604%" height="15" fill="rgb(209,183,41)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="911.50">async_task::ra..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10,540 samples, 9.66%)</title><rect x="33.9957%" y="885" width="9.6604%" height="15" fill="rgb(209,224,45)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="895.50">&lt;core::pin::Pi..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,540 samples, 9.66%)</title><rect x="33.9957%" y="869" width="9.6604%" height="15" fill="rgb(224,209,51)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="879.50">&lt;core::future:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (10,540 samples, 9.66%)</title><rect x="33.9957%" y="853" width="9.6604%" height="15" fill="rgb(223,17,39)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="863.50">async_executor..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (10,540 samples, 9.66%)</title><rect x="33.9957%" y="837" width="9.6604%" height="15" fill="rgb(234,204,37)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="847.50">&lt;async_std::ta..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (10,540 samples, 9.66%)</title><rect x="33.9957%" y="821" width="9.6604%" height="15" fill="rgb(236,120,5)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="831.50">async_std::tas..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10,540 samples, 9.66%)</title><rect x="33.9957%" y="805" width="9.6604%" height="15" fill="rgb(248,97,27)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="815.50">std::thread::l..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,540 samples, 9.66%)</title><rect x="33.9957%" y="789" width="9.6604%" height="15" fill="rgb(240,66,17)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="799.50">std::thread::l..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (10,540 samples, 9.66%)</title><rect x="33.9957%" y="773" width="9.6604%" height="15" fill="rgb(210,79,3)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="783.50">async_std::tas..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (10,540 samples, 9.66%)</title><rect x="33.9957%" y="757" width="9.6604%" height="15" fill="rgb(214,176,27)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="767.50">&lt;async_std::ta..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,540 samples, 9.66%)</title><rect x="33.9957%" y="741" width="9.6604%" height="15" fill="rgb(235,185,3)" fg:x="37091" fg:w="10540"/><text x="34.2457%" y="751.50">&lt;core::future:..</text></g><g><title>__memcpy_avx_unaligned_erms (564 samples, 0.52%)</title><rect x="43.7450%" y="805" width="0.5169%" height="15" fill="rgb(227,24,12)" fg:x="47728" fg:w="564"/><text x="43.9950%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (603 samples, 0.55%)</title><rect x="43.7184%" y="821" width="0.5527%" height="15" fill="rgb(252,169,48)" fg:x="47699" fg:w="603"/><text x="43.9684%" y="831.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (886 samples, 0.81%)</title><rect x="43.6882%" y="837" width="0.8121%" height="15" fill="rgb(212,65,1)" fg:x="47666" fg:w="886"/><text x="43.9382%" y="847.50"></text></g><g><title>__memcpy_avx_unaligned_erms (250 samples, 0.23%)</title><rect x="44.2711%" y="821" width="0.2291%" height="15" fill="rgb(242,39,24)" fg:x="48302" fg:w="250"/><text x="44.5211%" y="831.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (920 samples, 0.84%)</title><rect x="43.6616%" y="869" width="0.8432%" height="15" fill="rgb(249,32,23)" fg:x="47637" fg:w="920"/><text x="43.9116%" y="879.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (920 samples, 0.84%)</title><rect x="43.6616%" y="853" width="0.8432%" height="15" fill="rgb(251,195,23)" fg:x="47637" fg:w="920"/><text x="43.9116%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (33 samples, 0.03%)</title><rect x="44.9347%" y="421" width="0.0302%" height="15" fill="rgb(236,174,8)" fg:x="49026" fg:w="33"/><text x="45.1847%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (42 samples, 0.04%)</title><rect x="44.9668%" y="389" width="0.0385%" height="15" fill="rgb(220,197,8)" fg:x="49061" fg:w="42"/><text x="45.2168%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (42 samples, 0.04%)</title><rect x="44.9668%" y="373" width="0.0385%" height="15" fill="rgb(240,108,37)" fg:x="49061" fg:w="42"/><text x="45.2168%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (11 samples, 0.01%)</title><rect x="45.0053%" y="373" width="0.0101%" height="15" fill="rgb(232,176,24)" fg:x="49103" fg:w="11"/><text x="45.2553%" y="383.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (69 samples, 0.06%)</title><rect x="44.9659%" y="405" width="0.0632%" height="15" fill="rgb(243,35,29)" fg:x="49060" fg:w="69"/><text x="45.2159%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (26 samples, 0.02%)</title><rect x="45.0053%" y="389" width="0.0238%" height="15" fill="rgb(210,37,18)" fg:x="49103" fg:w="26"/><text x="45.2553%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (15 samples, 0.01%)</title><rect x="45.0154%" y="373" width="0.0137%" height="15" fill="rgb(224,184,40)" fg:x="49114" fg:w="15"/><text x="45.2654%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (15 samples, 0.01%)</title><rect x="45.0154%" y="357" width="0.0137%" height="15" fill="rgb(236,39,29)" fg:x="49114" fg:w="15"/><text x="45.2654%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (582 samples, 0.53%)</title><rect x="44.5158%" y="469" width="0.5334%" height="15" fill="rgb(232,48,39)" fg:x="48569" fg:w="582"/><text x="44.7658%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (517 samples, 0.47%)</title><rect x="44.5754%" y="453" width="0.4739%" height="15" fill="rgb(236,34,42)" fg:x="48634" fg:w="517"/><text x="44.8254%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (131 samples, 0.12%)</title><rect x="44.9292%" y="437" width="0.1201%" height="15" fill="rgb(243,106,37)" fg:x="49020" fg:w="131"/><text x="45.1792%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (92 samples, 0.08%)</title><rect x="44.9649%" y="421" width="0.0843%" height="15" fill="rgb(218,96,6)" fg:x="49059" fg:w="92"/><text x="45.2149%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (22 samples, 0.02%)</title><rect x="45.0291%" y="405" width="0.0202%" height="15" fill="rgb(235,130,12)" fg:x="49129" fg:w="22"/><text x="45.2791%" y="415.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="45.0731%" y="309" width="0.0119%" height="15" fill="rgb(231,95,0)" fg:x="49177" fg:w="13"/><text x="45.3231%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="45.0850%" y="309" width="0.0312%" height="15" fill="rgb(228,12,23)" fg:x="49190" fg:w="34"/><text x="45.3350%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="45.0850%" y="293" width="0.0312%" height="15" fill="rgb(216,12,1)" fg:x="49190" fg:w="34"/><text x="45.3350%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="45.0905%" y="277" width="0.0257%" height="15" fill="rgb(219,59,3)" fg:x="49196" fg:w="28"/><text x="45.3405%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::take (19 samples, 0.02%)</title><rect x="45.0988%" y="261" width="0.0174%" height="15" fill="rgb(215,208,46)" fg:x="49205" fg:w="19"/><text x="45.3488%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (19 samples, 0.02%)</title><rect x="45.0988%" y="245" width="0.0174%" height="15" fill="rgb(254,224,29)" fg:x="49205" fg:w="19"/><text x="45.3488%" y="255.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (82 samples, 0.08%)</title><rect x="45.0493%" y="469" width="0.0752%" height="15" fill="rgb(232,14,29)" fg:x="49151" fg:w="82"/><text x="45.2993%" y="479.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (82 samples, 0.08%)</title><rect x="45.0493%" y="453" width="0.0752%" height="15" fill="rgb(208,45,52)" fg:x="49151" fg:w="82"/><text x="45.2993%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (82 samples, 0.08%)</title><rect x="45.0493%" y="437" width="0.0752%" height="15" fill="rgb(234,191,28)" fg:x="49151" fg:w="82"/><text x="45.2993%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (72 samples, 0.07%)</title><rect x="45.0584%" y="421" width="0.0660%" height="15" fill="rgb(244,67,43)" fg:x="49161" fg:w="72"/><text x="45.3084%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (72 samples, 0.07%)</title><rect x="45.0584%" y="405" width="0.0660%" height="15" fill="rgb(236,189,24)" fg:x="49161" fg:w="72"/><text x="45.3084%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (72 samples, 0.07%)</title><rect x="45.0584%" y="389" width="0.0660%" height="15" fill="rgb(239,214,33)" fg:x="49161" fg:w="72"/><text x="45.3084%" y="399.50"></text></g><g><title>alloc::alloc::alloc (70 samples, 0.06%)</title><rect x="45.0603%" y="373" width="0.0642%" height="15" fill="rgb(226,176,41)" fg:x="49163" fg:w="70"/><text x="45.3103%" y="383.50"></text></g><g><title>__rg_alloc (70 samples, 0.06%)</title><rect x="45.0603%" y="357" width="0.0642%" height="15" fill="rgb(248,47,8)" fg:x="49163" fg:w="70"/><text x="45.3103%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (70 samples, 0.06%)</title><rect x="45.0603%" y="341" width="0.0642%" height="15" fill="rgb(218,81,44)" fg:x="49163" fg:w="70"/><text x="45.3103%" y="351.50"></text></g><g><title>rust_alloc (56 samples, 0.05%)</title><rect x="45.0731%" y="325" width="0.0513%" height="15" fill="rgb(213,98,6)" fg:x="49177" fg:w="56"/><text x="45.3231%" y="335.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (30 samples, 0.03%)</title><rect x="45.1363%" y="405" width="0.0275%" height="15" fill="rgb(222,85,22)" fg:x="49246" fg:w="30"/><text x="45.3863%" y="415.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="45.2023%" y="261" width="0.0174%" height="15" fill="rgb(239,46,39)" fg:x="49318" fg:w="19"/><text x="45.4523%" y="271.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="45.2023%" y="245" width="0.0174%" height="15" fill="rgb(237,12,29)" fg:x="49318" fg:w="19"/><text x="45.4523%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (49 samples, 0.04%)</title><rect x="45.1895%" y="341" width="0.0449%" height="15" fill="rgb(214,77,8)" fg:x="49304" fg:w="49"/><text x="45.4395%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (49 samples, 0.04%)</title><rect x="45.1895%" y="325" width="0.0449%" height="15" fill="rgb(217,168,37)" fg:x="49304" fg:w="49"/><text x="45.4395%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (38 samples, 0.03%)</title><rect x="45.1996%" y="309" width="0.0348%" height="15" fill="rgb(221,217,23)" fg:x="49315" fg:w="38"/><text x="45.4496%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (38 samples, 0.03%)</title><rect x="45.1996%" y="293" width="0.0348%" height="15" fill="rgb(243,229,36)" fg:x="49315" fg:w="38"/><text x="45.4496%" y="303.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (38 samples, 0.03%)</title><rect x="45.1996%" y="277" width="0.0348%" height="15" fill="rgb(251,163,40)" fg:x="49315" fg:w="38"/><text x="45.4496%" y="287.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (16 samples, 0.01%)</title><rect x="45.2197%" y="261" width="0.0147%" height="15" fill="rgb(237,222,12)" fg:x="49337" fg:w="16"/><text x="45.4697%" y="271.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (16 samples, 0.01%)</title><rect x="45.2197%" y="245" width="0.0147%" height="15" fill="rgb(248,132,6)" fg:x="49337" fg:w="16"/><text x="45.4697%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (67 samples, 0.06%)</title><rect x="45.1748%" y="389" width="0.0614%" height="15" fill="rgb(227,167,50)" fg:x="49288" fg:w="67"/><text x="45.4248%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (51 samples, 0.05%)</title><rect x="45.1895%" y="373" width="0.0467%" height="15" fill="rgb(242,84,37)" fg:x="49304" fg:w="51"/><text x="45.4395%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (51 samples, 0.05%)</title><rect x="45.1895%" y="357" width="0.0467%" height="15" fill="rgb(212,4,50)" fg:x="49304" fg:w="51"/><text x="45.4395%" y="367.50"></text></g><g><title>rust_dealloc (83 samples, 0.08%)</title><rect x="45.1638%" y="405" width="0.0761%" height="15" fill="rgb(230,228,32)" fg:x="49276" fg:w="83"/><text x="45.4138%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (122 samples, 0.11%)</title><rect x="45.1299%" y="421" width="0.1118%" height="15" fill="rgb(248,217,23)" fg:x="49239" fg:w="122"/><text x="45.3799%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (827 samples, 0.76%)</title><rect x="44.5048%" y="549" width="0.7580%" height="15" fill="rgb(238,197,32)" fg:x="48557" fg:w="827"/><text x="44.7548%" y="559.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (827 samples, 0.76%)</title><rect x="44.5048%" y="533" width="0.7580%" height="15" fill="rgb(236,106,1)" fg:x="48557" fg:w="827"/><text x="44.7548%" y="543.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (816 samples, 0.75%)</title><rect x="44.5149%" y="517" width="0.7479%" height="15" fill="rgb(219,228,13)" fg:x="48568" fg:w="816"/><text x="44.7649%" y="527.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (815 samples, 0.75%)</title><rect x="44.5158%" y="501" width="0.7470%" height="15" fill="rgb(238,30,35)" fg:x="48569" fg:w="815"/><text x="44.7658%" y="511.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (815 samples, 0.75%)</title><rect x="44.5158%" y="485" width="0.7470%" height="15" fill="rgb(236,70,23)" fg:x="48569" fg:w="815"/><text x="44.7658%" y="495.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (145 samples, 0.13%)</title><rect x="45.1299%" y="469" width="0.1329%" height="15" fill="rgb(249,104,48)" fg:x="49239" fg:w="145"/><text x="45.3799%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (145 samples, 0.13%)</title><rect x="45.1299%" y="453" width="0.1329%" height="15" fill="rgb(254,117,50)" fg:x="49239" fg:w="145"/><text x="45.3799%" y="463.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (145 samples, 0.13%)</title><rect x="45.1299%" y="437" width="0.1329%" height="15" fill="rgb(223,152,4)" fg:x="49239" fg:w="145"/><text x="45.3799%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (23 samples, 0.02%)</title><rect x="45.2417%" y="421" width="0.0211%" height="15" fill="rgb(245,6,2)" fg:x="49361" fg:w="23"/><text x="45.4917%" y="431.50"></text></g><g><title>core::ptr::read (23 samples, 0.02%)</title><rect x="45.2417%" y="405" width="0.0211%" height="15" fill="rgb(249,150,24)" fg:x="49361" fg:w="23"/><text x="45.4917%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (14 samples, 0.01%)</title><rect x="45.2647%" y="517" width="0.0128%" height="15" fill="rgb(228,185,42)" fg:x="49386" fg:w="14"/><text x="45.5147%" y="527.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (13 samples, 0.01%)</title><rect x="45.3261%" y="405" width="0.0119%" height="15" fill="rgb(226,39,33)" fg:x="49453" fg:w="13"/><text x="45.5761%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="45.3261%" y="389" width="0.0119%" height="15" fill="rgb(221,166,19)" fg:x="49453" fg:w="13"/><text x="45.5761%" y="399.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (13 samples, 0.01%)</title><rect x="45.3261%" y="373" width="0.0119%" height="15" fill="rgb(209,109,2)" fg:x="49453" fg:w="13"/><text x="45.5761%" y="383.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_mut (19 samples, 0.02%)</title><rect x="45.3380%" y="405" width="0.0174%" height="15" fill="rgb(252,216,26)" fg:x="49466" fg:w="19"/><text x="45.5880%" y="415.50"></text></g><g><title>&lt;abi_stable::std_types::boxed::private::RBox&lt;T&gt; as abi_stable::pointer_trait::AsMutPtr&gt;::as_mut_ptr (19 samples, 0.02%)</title><rect x="45.3380%" y="389" width="0.0174%" height="15" fill="rgb(227,173,36)" fg:x="49466" fg:w="19"/><text x="45.5880%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.03%)</title><rect x="45.3774%" y="293" width="0.0339%" height="15" fill="rgb(209,90,7)" fg:x="49509" fg:w="37"/><text x="45.6274%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.03%)</title><rect x="45.3774%" y="373" width="0.0348%" height="15" fill="rgb(250,194,11)" fg:x="49509" fg:w="38"/><text x="45.6274%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.03%)</title><rect x="45.3774%" y="357" width="0.0348%" height="15" fill="rgb(220,72,50)" fg:x="49509" fg:w="38"/><text x="45.6274%" y="367.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.03%)</title><rect x="45.3774%" y="341" width="0.0348%" height="15" fill="rgb(222,106,48)" fg:x="49509" fg:w="38"/><text x="45.6274%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.03%)</title><rect x="45.3774%" y="325" width="0.0348%" height="15" fill="rgb(216,220,45)" fg:x="49509" fg:w="38"/><text x="45.6274%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.03%)</title><rect x="45.3774%" y="309" width="0.0348%" height="15" fill="rgb(234,112,18)" fg:x="49509" fg:w="38"/><text x="45.6274%" y="319.50"></text></g><g><title>abi_stable::erased_types::iterator::next (71 samples, 0.07%)</title><rect x="45.3554%" y="405" width="0.0651%" height="15" fill="rgb(206,179,9)" fg:x="49485" fg:w="71"/><text x="45.6054%" y="415.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (47 samples, 0.04%)</title><rect x="45.3774%" y="389" width="0.0431%" height="15" fill="rgb(215,115,40)" fg:x="49509" fg:w="47"/><text x="45.6274%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (109 samples, 0.10%)</title><rect x="45.3261%" y="453" width="0.0999%" height="15" fill="rgb(222,69,34)" fg:x="49453" fg:w="109"/><text x="45.5761%" y="463.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (109 samples, 0.10%)</title><rect x="45.3261%" y="437" width="0.0999%" height="15" fill="rgb(209,161,10)" fg:x="49453" fg:w="109"/><text x="45.5761%" y="447.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (109 samples, 0.10%)</title><rect x="45.3261%" y="421" width="0.0999%" height="15" fill="rgb(217,6,38)" fg:x="49453" fg:w="109"/><text x="45.5761%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="45.4260%" y="453" width="0.0101%" height="15" fill="rgb(229,229,48)" fg:x="49562" fg:w="11"/><text x="45.6760%" y="463.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (49 samples, 0.04%)</title><rect x="45.4590%" y="325" width="0.0449%" height="15" fill="rgb(225,21,28)" fg:x="49598" fg:w="49"/><text x="45.7090%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="45.4865%" y="309" width="0.0174%" height="15" fill="rgb(206,33,13)" fg:x="49628" fg:w="19"/><text x="45.7365%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (19 samples, 0.02%)</title><rect x="45.4865%" y="293" width="0.0174%" height="15" fill="rgb(242,178,17)" fg:x="49628" fg:w="19"/><text x="45.7365%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (19 samples, 0.02%)</title><rect x="45.4865%" y="277" width="0.0174%" height="15" fill="rgb(220,162,5)" fg:x="49628" fg:w="19"/><text x="45.7365%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue)&gt;&gt; (19 samples, 0.02%)</title><rect x="45.4865%" y="261" width="0.0174%" height="15" fill="rgb(210,33,43)" fg:x="49628" fg:w="19"/><text x="45.7365%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="45.4865%" y="245" width="0.0174%" height="15" fill="rgb(216,116,54)" fg:x="49628" fg:w="19"/><text x="45.7365%" y="255.50"></text></g><g><title>hashbrown::raw::RawIter&lt;T&gt;::drop_elements (15 samples, 0.01%)</title><rect x="45.4901%" y="229" width="0.0137%" height="15" fill="rgb(249,92,24)" fg:x="49632" fg:w="15"/><text x="45.7401%" y="239.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="45.5415%" y="181" width="0.0137%" height="15" fill="rgb(231,189,14)" fg:x="49688" fg:w="15"/><text x="45.7915%" y="191.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="45.5415%" y="165" width="0.0137%" height="15" fill="rgb(230,8,41)" fg:x="49688" fg:w="15"/><text x="45.7915%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (45 samples, 0.04%)</title><rect x="45.5222%" y="261" width="0.0412%" height="15" fill="rgb(249,7,27)" fg:x="49667" fg:w="45"/><text x="45.7722%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (45 samples, 0.04%)</title><rect x="45.5222%" y="245" width="0.0412%" height="15" fill="rgb(232,86,5)" fg:x="49667" fg:w="45"/><text x="45.7722%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (29 samples, 0.03%)</title><rect x="45.5369%" y="229" width="0.0266%" height="15" fill="rgb(224,175,18)" fg:x="49683" fg:w="29"/><text x="45.7869%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (29 samples, 0.03%)</title><rect x="45.5369%" y="213" width="0.0266%" height="15" fill="rgb(220,129,12)" fg:x="49683" fg:w="29"/><text x="45.7869%" y="223.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (29 samples, 0.03%)</title><rect x="45.5369%" y="197" width="0.0266%" height="15" fill="rgb(210,19,36)" fg:x="49683" fg:w="29"/><text x="45.7869%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (46 samples, 0.04%)</title><rect x="45.5222%" y="293" width="0.0422%" height="15" fill="rgb(219,96,14)" fg:x="49667" fg:w="46"/><text x="45.7722%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (46 samples, 0.04%)</title><rect x="45.5222%" y="277" width="0.0422%" height="15" fill="rgb(249,106,1)" fg:x="49667" fg:w="46"/><text x="45.7722%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (59 samples, 0.05%)</title><rect x="45.5121%" y="309" width="0.0541%" height="15" fill="rgb(249,155,20)" fg:x="49656" fg:w="59"/><text x="45.7621%" y="319.50"></text></g><g><title>rust_dealloc (73 samples, 0.07%)</title><rect x="45.5039%" y="325" width="0.0669%" height="15" fill="rgb(244,168,9)" fg:x="49647" fg:w="73"/><text x="45.7539%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (321 samples, 0.29%)</title><rect x="45.2775%" y="517" width="0.2942%" height="15" fill="rgb(216,23,50)" fg:x="49400" fg:w="321"/><text x="45.5275%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (321 samples, 0.29%)</title><rect x="45.2775%" y="501" width="0.2942%" height="15" fill="rgb(224,219,20)" fg:x="49400" fg:w="321"/><text x="45.5275%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (295 samples, 0.27%)</title><rect x="45.3013%" y="485" width="0.2704%" height="15" fill="rgb(222,156,15)" fg:x="49426" fg:w="295"/><text x="45.5513%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (268 samples, 0.25%)</title><rect x="45.3261%" y="469" width="0.2456%" height="15" fill="rgb(231,97,17)" fg:x="49453" fg:w="268"/><text x="45.5761%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;,tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkOpMeta&gt; for tremor_pipeline::OpMeta&gt;::from::{{closure}}&gt;&gt; (148 samples, 0.14%)</title><rect x="45.4360%" y="453" width="0.1356%" height="15" fill="rgb(218,70,48)" fg:x="49573" fg:w="148"/><text x="45.6860%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (148 samples, 0.14%)</title><rect x="45.4360%" y="437" width="0.1356%" height="15" fill="rgb(212,196,52)" fg:x="49573" fg:w="148"/><text x="45.6860%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (148 samples, 0.14%)</title><rect x="45.4360%" y="421" width="0.1356%" height="15" fill="rgb(243,203,18)" fg:x="49573" fg:w="148"/><text x="45.6860%" y="431.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (148 samples, 0.14%)</title><rect x="45.4360%" y="405" width="0.1356%" height="15" fill="rgb(252,125,41)" fg:x="49573" fg:w="148"/><text x="45.6860%" y="415.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (139 samples, 0.13%)</title><rect x="45.4443%" y="389" width="0.1274%" height="15" fill="rgb(223,180,33)" fg:x="49582" fg:w="139"/><text x="45.6943%" y="399.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (132 samples, 0.12%)</title><rect x="45.4507%" y="373" width="0.1210%" height="15" fill="rgb(254,159,46)" fg:x="49589" fg:w="132"/><text x="45.7007%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (132 samples, 0.12%)</title><rect x="45.4507%" y="357" width="0.1210%" height="15" fill="rgb(254,38,10)" fg:x="49589" fg:w="132"/><text x="45.7007%" y="367.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (132 samples, 0.12%)</title><rect x="45.4507%" y="341" width="0.1210%" height="15" fill="rgb(208,217,32)" fg:x="49589" fg:w="132"/><text x="45.7007%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (12 samples, 0.01%)</title><rect x="45.5717%" y="485" width="0.0110%" height="15" fill="rgb(221,120,13)" fg:x="49721" fg:w="12"/><text x="45.8217%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="45.5717%" y="501" width="0.0165%" height="15" fill="rgb(246,54,52)" fg:x="49721" fg:w="18"/><text x="45.8217%" y="511.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkOpMeta&gt; for tremor_pipeline::OpMeta&gt;::from (1,191 samples, 1.09%)</title><rect x="44.5048%" y="565" width="1.0916%" height="15" fill="rgb(242,34,25)" fg:x="48557" fg:w="1191"/><text x="44.7548%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (364 samples, 0.33%)</title><rect x="45.2628%" y="549" width="0.3336%" height="15" fill="rgb(247,209,9)" fg:x="49384" fg:w="364"/><text x="45.5128%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (364 samples, 0.33%)</title><rect x="45.2628%" y="533" width="0.3336%" height="15" fill="rgb(228,71,26)" fg:x="49384" fg:w="364"/><text x="45.5128%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value)&gt;&gt; (27 samples, 0.02%)</title><rect x="45.5717%" y="517" width="0.0247%" height="15" fill="rgb(222,145,49)" fg:x="49721" fg:w="27"/><text x="45.8217%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (19 samples, 0.02%)</title><rect x="45.7156%" y="373" width="0.0174%" height="15" fill="rgb(218,121,17)" fg:x="49878" fg:w="19"/><text x="45.9656%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (17 samples, 0.02%)</title><rect x="45.7174%" y="357" width="0.0156%" height="15" fill="rgb(244,50,7)" fg:x="49880" fg:w="17"/><text x="45.9674%" y="367.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="45.7174%" y="341" width="0.0156%" height="15" fill="rgb(246,229,37)" fg:x="49880" fg:w="17"/><text x="45.9674%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (69 samples, 0.06%)</title><rect x="45.7073%" y="405" width="0.0632%" height="15" fill="rgb(225,18,5)" fg:x="49869" fg:w="69"/><text x="45.9573%" y="415.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (60 samples, 0.05%)</title><rect x="45.7156%" y="389" width="0.0550%" height="15" fill="rgb(213,204,8)" fg:x="49878" fg:w="60"/><text x="45.9656%" y="399.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (41 samples, 0.04%)</title><rect x="45.7330%" y="373" width="0.0376%" height="15" fill="rgb(238,103,6)" fg:x="49897" fg:w="41"/><text x="45.9830%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="45.8118%" y="197" width="0.0156%" height="15" fill="rgb(222,25,35)" fg:x="49983" fg:w="17"/><text x="46.0618%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (17 samples, 0.02%)</title><rect x="45.8118%" y="181" width="0.0156%" height="15" fill="rgb(213,203,35)" fg:x="49983" fg:w="17"/><text x="46.0618%" y="191.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (13 samples, 0.01%)</title><rect x="45.8155%" y="165" width="0.0119%" height="15" fill="rgb(221,79,53)" fg:x="49987" fg:w="13"/><text x="46.0655%" y="175.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (12 samples, 0.01%)</title><rect x="45.8164%" y="149" width="0.0110%" height="15" fill="rgb(243,200,35)" fg:x="49988" fg:w="12"/><text x="46.0664%" y="159.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="45.8164%" y="133" width="0.0110%" height="15" fill="rgb(248,60,25)" fg:x="49988" fg:w="12"/><text x="46.0664%" y="143.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="45.8164%" y="117" width="0.0110%" height="15" fill="rgb(227,53,46)" fg:x="49988" fg:w="12"/><text x="46.0664%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (110 samples, 0.10%)</title><rect x="45.7999%" y="245" width="0.1008%" height="15" fill="rgb(216,120,32)" fg:x="49970" fg:w="110"/><text x="46.0499%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (102 samples, 0.09%)</title><rect x="45.8072%" y="229" width="0.0935%" height="15" fill="rgb(220,134,1)" fg:x="49978" fg:w="102"/><text x="46.0572%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (97 samples, 0.09%)</title><rect x="45.8118%" y="213" width="0.0889%" height="15" fill="rgb(237,168,5)" fg:x="49983" fg:w="97"/><text x="46.0618%" y="223.50"></text></g><g><title>snmalloc::FreeListIter::take (70 samples, 0.06%)</title><rect x="45.8366%" y="197" width="0.0642%" height="15" fill="rgb(231,100,33)" fg:x="50010" fg:w="70"/><text x="46.0866%" y="207.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (70 samples, 0.06%)</title><rect x="45.8366%" y="181" width="0.0642%" height="15" fill="rgb(236,177,47)" fg:x="50010" fg:w="70"/><text x="46.0866%" y="191.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (146 samples, 0.13%)</title><rect x="45.7706%" y="405" width="0.1338%" height="15" fill="rgb(235,7,49)" fg:x="49938" fg:w="146"/><text x="46.0206%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (146 samples, 0.13%)</title><rect x="45.7706%" y="389" width="0.1338%" height="15" fill="rgb(232,119,22)" fg:x="49938" fg:w="146"/><text x="46.0206%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (146 samples, 0.13%)</title><rect x="45.7706%" y="373" width="0.1338%" height="15" fill="rgb(254,73,53)" fg:x="49938" fg:w="146"/><text x="46.0206%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (125 samples, 0.11%)</title><rect x="45.7898%" y="357" width="0.1146%" height="15" fill="rgb(251,35,20)" fg:x="49959" fg:w="125"/><text x="46.0398%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (125 samples, 0.11%)</title><rect x="45.7898%" y="341" width="0.1146%" height="15" fill="rgb(241,119,20)" fg:x="49959" fg:w="125"/><text x="46.0398%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (125 samples, 0.11%)</title><rect x="45.7898%" y="325" width="0.1146%" height="15" fill="rgb(207,102,14)" fg:x="49959" fg:w="125"/><text x="46.0398%" y="335.50"></text></g><g><title>alloc::alloc::alloc (125 samples, 0.11%)</title><rect x="45.7898%" y="309" width="0.1146%" height="15" fill="rgb(248,201,50)" fg:x="49959" fg:w="125"/><text x="46.0398%" y="319.50"></text></g><g><title>__rg_alloc (125 samples, 0.11%)</title><rect x="45.7898%" y="293" width="0.1146%" height="15" fill="rgb(222,185,44)" fg:x="49959" fg:w="125"/><text x="46.0398%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (125 samples, 0.11%)</title><rect x="45.7898%" y="277" width="0.1146%" height="15" fill="rgb(218,107,18)" fg:x="49959" fg:w="125"/><text x="46.0398%" y="287.50"></text></g><g><title>rust_alloc (123 samples, 0.11%)</title><rect x="45.7917%" y="261" width="0.1127%" height="15" fill="rgb(237,177,39)" fg:x="49961" fg:w="123"/><text x="46.0417%" y="271.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (34 samples, 0.03%)</title><rect x="45.9328%" y="341" width="0.0312%" height="15" fill="rgb(246,69,6)" fg:x="50115" fg:w="34"/><text x="46.1828%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="45.9511%" y="325" width="0.0128%" height="15" fill="rgb(234,208,37)" fg:x="50135" fg:w="14"/><text x="46.2011%" y="335.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="45.9511%" y="309" width="0.0128%" height="15" fill="rgb(225,4,6)" fg:x="50135" fg:w="14"/><text x="46.2011%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="45.9511%" y="293" width="0.0128%" height="15" fill="rgb(233,45,0)" fg:x="50135" fg:w="14"/><text x="46.2011%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="45.9511%" y="277" width="0.0128%" height="15" fill="rgb(226,136,5)" fg:x="50135" fg:w="14"/><text x="46.2011%" y="287.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="45.9511%" y="261" width="0.0128%" height="15" fill="rgb(211,91,47)" fg:x="50135" fg:w="14"/><text x="46.2011%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="45.9511%" y="245" width="0.0128%" height="15" fill="rgb(242,88,51)" fg:x="50135" fg:w="14"/><text x="46.2011%" y="255.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (11 samples, 0.01%)</title><rect x="45.9915%" y="197" width="0.0101%" height="15" fill="rgb(230,91,28)" fg:x="50179" fg:w="11"/><text x="46.2415%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (36 samples, 0.03%)</title><rect x="45.9777%" y="245" width="0.0330%" height="15" fill="rgb(254,186,29)" fg:x="50164" fg:w="36"/><text x="46.2277%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (36 samples, 0.03%)</title><rect x="45.9777%" y="229" width="0.0330%" height="15" fill="rgb(238,6,4)" fg:x="50164" fg:w="36"/><text x="46.2277%" y="239.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (35 samples, 0.03%)</title><rect x="45.9786%" y="213" width="0.0321%" height="15" fill="rgb(221,151,16)" fg:x="50165" fg:w="35"/><text x="46.2286%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (44 samples, 0.04%)</title><rect x="45.9731%" y="277" width="0.0403%" height="15" fill="rgb(251,143,52)" fg:x="50159" fg:w="44"/><text x="46.2231%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (44 samples, 0.04%)</title><rect x="45.9731%" y="261" width="0.0403%" height="15" fill="rgb(206,90,15)" fg:x="50159" fg:w="44"/><text x="46.2231%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (49 samples, 0.04%)</title><rect x="45.9731%" y="309" width="0.0449%" height="15" fill="rgb(218,35,8)" fg:x="50159" fg:w="49"/><text x="46.2231%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (49 samples, 0.04%)</title><rect x="45.9731%" y="293" width="0.0449%" height="15" fill="rgb(239,215,6)" fg:x="50159" fg:w="49"/><text x="46.2231%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (59 samples, 0.05%)</title><rect x="45.9722%" y="325" width="0.0541%" height="15" fill="rgb(245,116,39)" fg:x="50158" fg:w="59"/><text x="46.2222%" y="335.50"></text></g><g><title>rust_dealloc (81 samples, 0.07%)</title><rect x="45.9640%" y="341" width="0.0742%" height="15" fill="rgb(242,65,28)" fg:x="50149" fg:w="81"/><text x="46.2140%" y="351.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="46.0263%" y="325" width="0.0119%" height="15" fill="rgb(252,132,53)" fg:x="50217" fg:w="13"/><text x="46.2763%" y="335.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (137 samples, 0.13%)</title><rect x="45.9145%" y="357" width="0.1256%" height="15" fill="rgb(224,159,50)" fg:x="50095" fg:w="137"/><text x="46.1645%" y="367.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (407 samples, 0.37%)</title><rect x="45.6991%" y="485" width="0.3730%" height="15" fill="rgb(224,93,4)" fg:x="49860" fg:w="407"/><text x="45.9491%" y="495.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (407 samples, 0.37%)</title><rect x="45.6991%" y="469" width="0.3730%" height="15" fill="rgb(208,81,34)" fg:x="49860" fg:w="407"/><text x="45.9491%" y="479.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (403 samples, 0.37%)</title><rect x="45.7028%" y="453" width="0.3694%" height="15" fill="rgb(233,92,54)" fg:x="49864" fg:w="403"/><text x="45.9528%" y="463.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (398 samples, 0.36%)</title><rect x="45.7073%" y="437" width="0.3648%" height="15" fill="rgb(237,21,14)" fg:x="49869" fg:w="398"/><text x="45.9573%" y="447.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (398 samples, 0.36%)</title><rect x="45.7073%" y="421" width="0.3648%" height="15" fill="rgb(249,128,51)" fg:x="49869" fg:w="398"/><text x="45.9573%" y="431.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (172 samples, 0.16%)</title><rect x="45.9145%" y="405" width="0.1576%" height="15" fill="rgb(223,129,24)" fg:x="50095" fg:w="172"/><text x="46.1645%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (172 samples, 0.16%)</title><rect x="45.9145%" y="389" width="0.1576%" height="15" fill="rgb(231,168,25)" fg:x="50095" fg:w="172"/><text x="46.1645%" y="399.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (172 samples, 0.16%)</title><rect x="45.9145%" y="373" width="0.1576%" height="15" fill="rgb(224,39,20)" fg:x="50095" fg:w="172"/><text x="46.1645%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (35 samples, 0.03%)</title><rect x="46.0401%" y="357" width="0.0321%" height="15" fill="rgb(225,152,53)" fg:x="50232" fg:w="35"/><text x="46.2901%" y="367.50"></text></g><g><title>core::ptr::read (35 samples, 0.03%)</title><rect x="46.0401%" y="341" width="0.0321%" height="15" fill="rgb(252,17,24)" fg:x="50232" fg:w="35"/><text x="46.2901%" y="351.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (18 samples, 0.02%)</title><rect x="46.0740%" y="453" width="0.0165%" height="15" fill="rgb(250,114,30)" fg:x="50269" fg:w="18"/><text x="46.3240%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="46.0804%" y="437" width="0.0101%" height="15" fill="rgb(229,5,4)" fg:x="50276" fg:w="11"/><text x="46.3304%" y="447.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="46.0804%" y="421" width="0.0101%" height="15" fill="rgb(225,176,49)" fg:x="50276" fg:w="11"/><text x="46.3304%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="46.0804%" y="405" width="0.0101%" height="15" fill="rgb(224,221,49)" fg:x="50276" fg:w="11"/><text x="46.3304%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="46.0804%" y="389" width="0.0101%" height="15" fill="rgb(253,169,27)" fg:x="50276" fg:w="11"/><text x="46.3304%" y="399.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="46.0804%" y="373" width="0.0101%" height="15" fill="rgb(211,206,16)" fg:x="50276" fg:w="11"/><text x="46.3304%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="46.0804%" y="357" width="0.0101%" height="15" fill="rgb(244,87,35)" fg:x="50276" fg:w="11"/><text x="46.3304%" y="367.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (37 samples, 0.03%)</title><rect x="46.1317%" y="309" width="0.0339%" height="15" fill="rgb(246,28,10)" fg:x="50332" fg:w="37"/><text x="46.3817%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (34 samples, 0.03%)</title><rect x="46.1345%" y="293" width="0.0312%" height="15" fill="rgb(229,12,44)" fg:x="50335" fg:w="34"/><text x="46.3845%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (81 samples, 0.07%)</title><rect x="46.1042%" y="357" width="0.0742%" height="15" fill="rgb(210,145,37)" fg:x="50302" fg:w="81"/><text x="46.3542%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (81 samples, 0.07%)</title><rect x="46.1042%" y="341" width="0.0742%" height="15" fill="rgb(227,112,52)" fg:x="50302" fg:w="81"/><text x="46.3542%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (81 samples, 0.07%)</title><rect x="46.1042%" y="325" width="0.0742%" height="15" fill="rgb(238,155,34)" fg:x="50302" fg:w="81"/><text x="46.3542%" y="335.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="46.1656%" y="309" width="0.0128%" height="15" fill="rgb(239,226,36)" fg:x="50369" fg:w="14"/><text x="46.4156%" y="319.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="46.1656%" y="293" width="0.0128%" height="15" fill="rgb(230,16,23)" fg:x="50369" fg:w="14"/><text x="46.4156%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (101 samples, 0.09%)</title><rect x="46.0969%" y="389" width="0.0926%" height="15" fill="rgb(236,171,36)" fg:x="50294" fg:w="101"/><text x="46.3469%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (101 samples, 0.09%)</title><rect x="46.0969%" y="373" width="0.0926%" height="15" fill="rgb(221,22,14)" fg:x="50294" fg:w="101"/><text x="46.3469%" y="383.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="46.1785%" y="357" width="0.0110%" height="15" fill="rgb(242,43,11)" fg:x="50383" fg:w="12"/><text x="46.4285%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (106 samples, 0.10%)</title><rect x="46.0969%" y="421" width="0.0972%" height="15" fill="rgb(232,69,23)" fg:x="50294" fg:w="106"/><text x="46.3469%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (106 samples, 0.10%)</title><rect x="46.0969%" y="405" width="0.0972%" height="15" fill="rgb(216,180,54)" fg:x="50294" fg:w="106"/><text x="46.3469%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (115 samples, 0.11%)</title><rect x="46.0960%" y="437" width="0.1054%" height="15" fill="rgb(216,5,24)" fg:x="50293" fg:w="115"/><text x="46.3460%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (152 samples, 0.14%)</title><rect x="46.0721%" y="469" width="0.1393%" height="15" fill="rgb(225,89,9)" fg:x="50267" fg:w="152"/><text x="46.3221%" y="479.50"></text></g><g><title>rust_dealloc (132 samples, 0.12%)</title><rect x="46.0905%" y="453" width="0.1210%" height="15" fill="rgb(243,75,33)" fg:x="50287" fg:w="132"/><text x="46.3405%" y="463.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="46.2014%" y="437" width="0.0101%" height="15" fill="rgb(247,141,45)" fg:x="50408" fg:w="11"/><text x="46.4514%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (169 samples, 0.15%)</title><rect x="46.0721%" y="485" width="0.1549%" height="15" fill="rgb(232,177,36)" fg:x="50267" fg:w="169"/><text x="46.3221%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (17 samples, 0.02%)</title><rect x="46.2114%" y="469" width="0.0156%" height="15" fill="rgb(219,125,36)" fg:x="50419" fg:w="17"/><text x="46.4614%" y="479.50"></text></g><g><title>core::ptr::read (17 samples, 0.02%)</title><rect x="46.2114%" y="453" width="0.0156%" height="15" fill="rgb(227,94,9)" fg:x="50419" fg:w="17"/><text x="46.4614%" y="463.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="46.2509%" y="357" width="0.0101%" height="15" fill="rgb(240,34,52)" fg:x="50462" fg:w="11"/><text x="46.5009%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::empty (13 samples, 0.01%)</title><rect x="46.2829%" y="309" width="0.0119%" height="15" fill="rgb(216,45,12)" fg:x="50497" fg:w="13"/><text x="46.5329%" y="319.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (13 samples, 0.01%)</title><rect x="46.2829%" y="293" width="0.0119%" height="15" fill="rgb(246,21,19)" fg:x="50497" fg:w="13"/><text x="46.5329%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (341 samples, 0.31%)</title><rect x="46.2609%" y="357" width="0.3125%" height="15" fill="rgb(213,98,42)" fg:x="50473" fg:w="341"/><text x="46.5109%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (338 samples, 0.31%)</title><rect x="46.2637%" y="341" width="0.3098%" height="15" fill="rgb(250,136,47)" fg:x="50476" fg:w="338"/><text x="46.5137%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (333 samples, 0.31%)</title><rect x="46.2683%" y="325" width="0.3052%" height="15" fill="rgb(251,124,27)" fg:x="50481" fg:w="333"/><text x="46.5183%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::take (304 samples, 0.28%)</title><rect x="46.2949%" y="309" width="0.2786%" height="15" fill="rgb(229,180,14)" fg:x="50510" fg:w="304"/><text x="46.5449%" y="319.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (304 samples, 0.28%)</title><rect x="46.2949%" y="293" width="0.2786%" height="15" fill="rgb(245,216,25)" fg:x="50510" fg:w="304"/><text x="46.5449%" y="303.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (380 samples, 0.35%)</title><rect x="46.2270%" y="485" width="0.3483%" height="15" fill="rgb(251,43,5)" fg:x="50436" fg:w="380"/><text x="46.4770%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (355 samples, 0.33%)</title><rect x="46.2499%" y="469" width="0.3254%" height="15" fill="rgb(250,128,24)" fg:x="50461" fg:w="355"/><text x="46.4999%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (355 samples, 0.33%)</title><rect x="46.2499%" y="453" width="0.3254%" height="15" fill="rgb(217,117,27)" fg:x="50461" fg:w="355"/><text x="46.4999%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (355 samples, 0.33%)</title><rect x="46.2499%" y="437" width="0.3254%" height="15" fill="rgb(245,147,4)" fg:x="50461" fg:w="355"/><text x="46.4999%" y="447.50"></text></g><g><title>alloc::alloc::alloc (354 samples, 0.32%)</title><rect x="46.2509%" y="421" width="0.3245%" height="15" fill="rgb(242,201,35)" fg:x="50462" fg:w="354"/><text x="46.5009%" y="431.50"></text></g><g><title>__rg_alloc (354 samples, 0.32%)</title><rect x="46.2509%" y="405" width="0.3245%" height="15" fill="rgb(218,181,1)" fg:x="50462" fg:w="354"/><text x="46.5009%" y="415.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (354 samples, 0.32%)</title><rect x="46.2509%" y="389" width="0.3245%" height="15" fill="rgb(222,6,29)" fg:x="50462" fg:w="354"/><text x="46.5009%" y="399.50"></text></g><g><title>rust_alloc (354 samples, 0.32%)</title><rect x="46.2509%" y="373" width="0.3245%" height="15" fill="rgb(208,186,3)" fg:x="50462" fg:w="354"/><text x="46.5009%" y="383.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_ref (14 samples, 0.01%)</title><rect x="46.7861%" y="405" width="0.0128%" height="15" fill="rgb(216,36,26)" fg:x="51046" fg:w="14"/><text x="47.0361%" y="415.50"></text></g><g><title>&lt;abi_stable::std_types::boxed::private::RBox&lt;T&gt; as abi_stable::pointer_trait::AsPtr&gt;::as_ptr (14 samples, 0.01%)</title><rect x="46.7861%" y="389" width="0.0128%" height="15" fill="rgb(248,201,23)" fg:x="51046" fg:w="14"/><text x="47.0361%" y="399.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (156 samples, 0.14%)</title><rect x="46.7990%" y="405" width="0.1430%" height="15" fill="rgb(251,170,31)" fg:x="51060" fg:w="156"/><text x="47.0490%" y="415.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (80 samples, 0.07%)</title><rect x="46.8686%" y="389" width="0.0733%" height="15" fill="rgb(207,110,25)" fg:x="51136" fg:w="80"/><text x="47.1186%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (53 samples, 0.05%)</title><rect x="46.8934%" y="373" width="0.0486%" height="15" fill="rgb(250,54,15)" fg:x="51163" fg:w="53"/><text x="47.1434%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (53 samples, 0.05%)</title><rect x="46.8934%" y="357" width="0.0486%" height="15" fill="rgb(227,68,33)" fg:x="51163" fg:w="53"/><text x="47.1434%" y="367.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (53 samples, 0.05%)</title><rect x="46.8934%" y="341" width="0.0486%" height="15" fill="rgb(238,34,41)" fg:x="51163" fg:w="53"/><text x="47.1434%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (53 samples, 0.05%)</title><rect x="46.8934%" y="325" width="0.0486%" height="15" fill="rgb(220,11,15)" fg:x="51163" fg:w="53"/><text x="47.1434%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (53 samples, 0.05%)</title><rect x="46.8934%" y="309" width="0.0486%" height="15" fill="rgb(246,111,35)" fg:x="51163" fg:w="53"/><text x="47.1434%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (193 samples, 0.18%)</title><rect x="46.7834%" y="453" width="0.1769%" height="15" fill="rgb(209,88,53)" fg:x="51043" fg:w="193"/><text x="47.0334%" y="463.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (193 samples, 0.18%)</title><rect x="46.7834%" y="437" width="0.1769%" height="15" fill="rgb(231,185,47)" fg:x="51043" fg:w="193"/><text x="47.0334%" y="447.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (193 samples, 0.18%)</title><rect x="46.7834%" y="421" width="0.1769%" height="15" fill="rgb(233,154,1)" fg:x="51043" fg:w="193"/><text x="47.0334%" y="431.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (20 samples, 0.02%)</title><rect x="46.9419%" y="405" width="0.0183%" height="15" fill="rgb(225,15,46)" fg:x="51216" fg:w="20"/><text x="47.1919%" y="415.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (20 samples, 0.02%)</title><rect x="46.9419%" y="389" width="0.0183%" height="15" fill="rgb(211,135,41)" fg:x="51216" fg:w="20"/><text x="47.1919%" y="399.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (11 samples, 0.01%)</title><rect x="46.9502%" y="373" width="0.0101%" height="15" fill="rgb(208,54,0)" fg:x="51225" fg:w="11"/><text x="47.2002%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.01%)</title><rect x="46.9603%" y="453" width="0.0101%" height="15" fill="rgb(244,136,14)" fg:x="51236" fg:w="11"/><text x="47.2103%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.01%)</title><rect x="47.0006%" y="373" width="0.0128%" height="15" fill="rgb(241,56,14)" fg:x="51280" fg:w="14"/><text x="47.2506%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (499 samples, 0.46%)</title><rect x="46.5753%" y="485" width="0.4574%" height="15" fill="rgb(205,80,24)" fg:x="50816" fg:w="499"/><text x="46.8253%" y="495.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::FromIterator&lt;(K,V)&gt; for halfbrown::HashMap&lt;K,V,S&gt;&gt;::from_iter (499 samples, 0.46%)</title><rect x="46.5753%" y="469" width="0.4574%" height="15" fill="rgb(220,57,4)" fg:x="50816" fg:w="499"/><text x="46.8253%" y="479.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (68 samples, 0.06%)</title><rect x="46.9703%" y="453" width="0.0623%" height="15" fill="rgb(226,193,50)" fg:x="51247" fg:w="68"/><text x="47.2203%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (35 samples, 0.03%)</title><rect x="47.0006%" y="437" width="0.0321%" height="15" fill="rgb(231,168,22)" fg:x="51280" fg:w="35"/><text x="47.2506%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::with_capacity (35 samples, 0.03%)</title><rect x="47.0006%" y="421" width="0.0321%" height="15" fill="rgb(254,215,14)" fg:x="51280" fg:w="35"/><text x="47.2506%" y="431.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::with_capacity_in (35 samples, 0.03%)</title><rect x="47.0006%" y="405" width="0.0321%" height="15" fill="rgb(211,115,16)" fg:x="51280" fg:w="35"/><text x="47.2506%" y="415.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::fallible_with_capacity (35 samples, 0.03%)</title><rect x="47.0006%" y="389" width="0.0321%" height="15" fill="rgb(236,210,16)" fg:x="51280" fg:w="35"/><text x="47.2506%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (21 samples, 0.02%)</title><rect x="47.0134%" y="373" width="0.0192%" height="15" fill="rgb(221,94,12)" fg:x="51294" fg:w="21"/><text x="47.2634%" y="383.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (2,767 samples, 2.54%)</title><rect x="44.5048%" y="597" width="2.5361%" height="15" fill="rgb(235,218,49)" fg:x="48557" fg:w="2767"/><text x="44.7548%" y="607.50">tr..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2,767 samples, 2.54%)</title><rect x="44.5048%" y="581" width="2.5361%" height="15" fill="rgb(217,114,14)" fg:x="48557" fg:w="2767"/><text x="44.7548%" y="591.50">&lt;T..</text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkEventPayload&gt; for tremor_script::srs::EventPayload&gt;::from (1,576 samples, 1.44%)</title><rect x="45.5964%" y="565" width="1.4445%" height="15" fill="rgb(216,145,22)" fg:x="49748" fg:w="1576"/><text x="45.8464%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,576 samples, 1.44%)</title><rect x="45.5964%" y="549" width="1.4445%" height="15" fill="rgb(217,112,39)" fg:x="49748" fg:w="1576"/><text x="45.8464%" y="559.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkValueAndMeta&gt; for tremor_script::srs::ValueAndMeta&gt;::from (1,576 samples, 1.44%)</title><rect x="45.5964%" y="533" width="1.4445%" height="15" fill="rgb(225,85,32)" fg:x="49748" fg:w="1576"/><text x="45.8464%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,576 samples, 1.44%)</title><rect x="45.5964%" y="517" width="1.4445%" height="15" fill="rgb(245,209,47)" fg:x="49748" fg:w="1576"/><text x="45.8464%" y="527.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (1,576 samples, 1.44%)</title><rect x="45.5964%" y="501" width="1.4445%" height="15" fill="rgb(218,220,15)" fg:x="49748" fg:w="1576"/><text x="45.8464%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (25 samples, 0.02%)</title><rect x="47.0556%" y="533" width="0.0229%" height="15" fill="rgb(222,202,31)" fg:x="51340" fg:w="25"/><text x="47.3056%" y="543.50"></text></g><g><title>&lt;abi_stable::std_types::result::RResult&lt;T,E&gt; as core::convert::From&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::from (25 samples, 0.02%)</title><rect x="47.0556%" y="517" width="0.0229%" height="15" fill="rgb(243,203,4)" fg:x="51340" fg:w="25"/><text x="47.3056%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (55 samples, 0.05%)</title><rect x="47.0785%" y="533" width="0.0504%" height="15" fill="rgb(237,92,17)" fg:x="51365" fg:w="55"/><text x="47.3285%" y="543.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (54 samples, 0.05%)</title><rect x="47.0794%" y="517" width="0.0495%" height="15" fill="rgb(231,119,7)" fg:x="51366" fg:w="54"/><text x="47.3294%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (44 samples, 0.04%)</title><rect x="47.0886%" y="501" width="0.0403%" height="15" fill="rgb(237,82,41)" fg:x="51376" fg:w="44"/><text x="47.3386%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (44 samples, 0.04%)</title><rect x="47.0886%" y="485" width="0.0403%" height="15" fill="rgb(226,81,48)" fg:x="51376" fg:w="44"/><text x="47.3386%" y="495.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (44 samples, 0.04%)</title><rect x="47.0886%" y="469" width="0.0403%" height="15" fill="rgb(234,70,51)" fg:x="51376" fg:w="44"/><text x="47.3386%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (20 samples, 0.02%)</title><rect x="47.1106%" y="453" width="0.0183%" height="15" fill="rgb(251,86,4)" fg:x="51400" fg:w="20"/><text x="47.3606%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 0.02%)</title><rect x="47.1106%" y="437" width="0.0183%" height="15" fill="rgb(244,144,28)" fg:x="51400" fg:w="20"/><text x="47.3606%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (131 samples, 0.12%)</title><rect x="47.1619%" y="517" width="0.1201%" height="15" fill="rgb(232,161,39)" fg:x="51456" fg:w="131"/><text x="47.4119%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (486 samples, 0.45%)</title><rect x="47.2902%" y="517" width="0.4454%" height="15" fill="rgb(247,34,51)" fg:x="51596" fg:w="486"/><text x="47.5402%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (11 samples, 0.01%)</title><rect x="47.7439%" y="517" width="0.0101%" height="15" fill="rgb(225,132,2)" fg:x="52091" fg:w="11"/><text x="47.9939%" y="527.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::clone::Clone&gt;::clone (56 samples, 0.05%)</title><rect x="47.7540%" y="517" width="0.0513%" height="15" fill="rgb(209,159,44)" fg:x="52102" fg:w="56"/><text x="48.0040%" y="527.50"></text></g><g><title>&lt;abi_stable::std_types::cow::RCow&lt;B&gt; as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="47.7732%" y="501" width="0.0321%" height="15" fill="rgb(251,214,1)" fg:x="52123" fg:w="35"/><text x="48.0232%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (11 samples, 0.01%)</title><rect x="47.8053%" y="517" width="0.0101%" height="15" fill="rgb(247,84,47)" fg:x="52158" fg:w="11"/><text x="48.0553%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (4,541 samples, 4.16%)</title><rect x="43.6616%" y="885" width="4.1620%" height="15" fill="rgb(240,111,43)" fg:x="47637" fg:w="4541"/><text x="43.9116%" y="895.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,621 samples, 3.32%)</title><rect x="44.5048%" y="869" width="3.3188%" height="15" fill="rgb(215,214,35)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="879.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (3,621 samples, 3.32%)</title><rect x="44.5048%" y="853" width="3.3188%" height="15" fill="rgb(248,207,23)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="863.50">tre..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,621 samples, 3.32%)</title><rect x="44.5048%" y="837" width="3.3188%" height="15" fill="rgb(214,186,4)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="847.50">&lt;as..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,621 samples, 3.32%)</title><rect x="44.5048%" y="821" width="3.3188%" height="15" fill="rgb(220,133,22)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="831.50">&lt;as..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (3,621 samples, 3.32%)</title><rect x="44.5048%" y="805" width="3.3188%" height="15" fill="rgb(239,134,19)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="815.50">&lt;co..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,621 samples, 3.32%)</title><rect x="44.5048%" y="789" width="3.3188%" height="15" fill="rgb(250,140,9)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="799.50">&lt;as..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (3,621 samples, 3.32%)</title><rect x="44.5048%" y="773" width="3.3188%" height="15" fill="rgb(225,59,14)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="783.50">asy..</text></g><g><title>std::panic::catch_unwind (3,621 samples, 3.32%)</title><rect x="44.5048%" y="757" width="3.3188%" height="15" fill="rgb(214,152,51)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="767.50">std..</text></g><g><title>std::panicking::try (3,621 samples, 3.32%)</title><rect x="44.5048%" y="741" width="3.3188%" height="15" fill="rgb(251,227,43)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="751.50">std..</text></g><g><title>std::panicking::try::do_call (3,621 samples, 3.32%)</title><rect x="44.5048%" y="725" width="3.3188%" height="15" fill="rgb(241,96,17)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="735.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,621 samples, 3.32%)</title><rect x="44.5048%" y="709" width="3.3188%" height="15" fill="rgb(234,198,43)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="719.50">&lt;co..</text></g><g><title>core::ops::function::FnOnce::call_once (3,621 samples, 3.32%)</title><rect x="44.5048%" y="693" width="3.3188%" height="15" fill="rgb(220,108,29)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="703.50">cor..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (3,621 samples, 3.32%)</title><rect x="44.5048%" y="677" width="3.3188%" height="15" fill="rgb(226,163,33)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="687.50">asy..</text></g><g><title>async_ffi::FfiContext::with_context (3,621 samples, 3.32%)</title><rect x="44.5048%" y="661" width="3.3188%" height="15" fill="rgb(205,194,45)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="671.50">asy..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (3,621 samples, 3.32%)</title><rect x="44.5048%" y="645" width="3.3188%" height="15" fill="rgb(206,143,44)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="655.50">asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,621 samples, 3.32%)</title><rect x="44.5048%" y="629" width="3.3188%" height="15" fill="rgb(236,136,36)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="639.50">&lt;co..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (3,621 samples, 3.32%)</title><rect x="44.5048%" y="613" width="3.3188%" height="15" fill="rgb(249,172,42)" fg:x="48557" fg:w="3621"/><text x="44.7548%" y="623.50">&lt;tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (853 samples, 0.78%)</title><rect x="47.0418%" y="597" width="0.7818%" height="15" fill="rgb(216,139,23)" fg:x="51325" fg:w="853"/><text x="47.2918%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (853 samples, 0.78%)</title><rect x="47.0418%" y="581" width="0.7818%" height="15" fill="rgb(207,166,20)" fg:x="51325" fg:w="853"/><text x="47.2918%" y="591.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (853 samples, 0.78%)</title><rect x="47.0418%" y="565" width="0.7818%" height="15" fill="rgb(210,209,22)" fg:x="51325" fg:w="853"/><text x="47.2918%" y="575.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (853 samples, 0.78%)</title><rect x="47.0418%" y="549" width="0.7818%" height="15" fill="rgb(232,118,20)" fg:x="51325" fg:w="853"/><text x="47.2918%" y="559.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (758 samples, 0.69%)</title><rect x="47.1289%" y="533" width="0.6947%" height="15" fill="rgb(238,113,42)" fg:x="51420" fg:w="758"/><text x="47.3789%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (37 samples, 0.03%)</title><rect x="47.8237%" y="885" width="0.0339%" height="15" fill="rgb(231,42,5)" fg:x="52178" fg:w="37"/><text x="48.0737%" y="895.50"></text></g><g><title>abi_stable::std_types::result::&lt;impl core::convert::From&lt;abi_stable::std_types::result::RResult&lt;T,E&gt;&gt; for core::result::Result&lt;T,E&gt;&gt;::from (13 samples, 0.01%)</title><rect x="49.2736%" y="821" width="0.0119%" height="15" fill="rgb(243,166,24)" fg:x="53760" fg:w="13"/><text x="49.5236%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (291 samples, 0.27%)</title><rect x="49.2736%" y="837" width="0.2667%" height="15" fill="rgb(237,226,12)" fg:x="53760" fg:w="291"/><text x="49.5236%" y="847.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (278 samples, 0.25%)</title><rect x="49.2856%" y="821" width="0.2548%" height="15" fill="rgb(229,133,24)" fg:x="53773" fg:w="278"/><text x="49.5356%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (245 samples, 0.22%)</title><rect x="49.3158%" y="805" width="0.2246%" height="15" fill="rgb(238,33,43)" fg:x="53806" fg:w="245"/><text x="49.5658%" y="815.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (317 samples, 0.29%)</title><rect x="49.5504%" y="773" width="0.2905%" height="15" fill="rgb(227,59,38)" fg:x="54062" fg:w="317"/><text x="49.8004%" y="783.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (343 samples, 0.31%)</title><rect x="49.5404%" y="805" width="0.3144%" height="15" fill="rgb(230,97,0)" fg:x="54051" fg:w="343"/><text x="49.7904%" y="815.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (332 samples, 0.30%)</title><rect x="49.5504%" y="789" width="0.3043%" height="15" fill="rgb(250,173,50)" fg:x="54062" fg:w="332"/><text x="49.8004%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (15 samples, 0.01%)</title><rect x="49.8410%" y="773" width="0.0137%" height="15" fill="rgb(240,15,50)" fg:x="54379" fg:w="15"/><text x="50.0910%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (313 samples, 0.29%)</title><rect x="49.9116%" y="757" width="0.2869%" height="15" fill="rgb(221,93,22)" fg:x="54456" fg:w="313"/><text x="50.1616%" y="767.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (313 samples, 0.29%)</title><rect x="49.9116%" y="741" width="0.2869%" height="15" fill="rgb(245,180,53)" fg:x="54456" fg:w="313"/><text x="50.1616%" y="751.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (313 samples, 0.29%)</title><rect x="49.9116%" y="725" width="0.2869%" height="15" fill="rgb(231,88,51)" fg:x="54456" fg:w="313"/><text x="50.1616%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (298 samples, 0.27%)</title><rect x="49.9253%" y="709" width="0.2731%" height="15" fill="rgb(240,58,21)" fg:x="54471" fg:w="298"/><text x="50.1753%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15 samples, 0.01%)</title><rect x="50.1984%" y="709" width="0.0137%" height="15" fill="rgb(237,21,10)" fg:x="54769" fg:w="15"/><text x="50.4484%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.01%)</title><rect x="50.1984%" y="693" width="0.0137%" height="15" fill="rgb(218,43,11)" fg:x="54769" fg:w="15"/><text x="50.4484%" y="703.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (15 samples, 0.01%)</title><rect x="50.1984%" y="677" width="0.0137%" height="15" fill="rgb(218,221,29)" fg:x="54769" fg:w="15"/><text x="50.4484%" y="687.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (939 samples, 0.86%)</title><rect x="49.8547%" y="805" width="0.8606%" height="15" fill="rgb(214,118,42)" fg:x="54394" fg:w="939"/><text x="50.1047%" y="815.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (921 samples, 0.84%)</title><rect x="49.8712%" y="789" width="0.8441%" height="15" fill="rgb(251,200,26)" fg:x="54412" fg:w="921"/><text x="50.1212%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (904 samples, 0.83%)</title><rect x="49.8868%" y="773" width="0.8286%" height="15" fill="rgb(237,101,39)" fg:x="54429" fg:w="904"/><text x="50.1368%" y="783.50"></text></g><g><title>std::panic::catch_unwind (564 samples, 0.52%)</title><rect x="50.1984%" y="757" width="0.5169%" height="15" fill="rgb(251,117,11)" fg:x="54769" fg:w="564"/><text x="50.4484%" y="767.50"></text></g><g><title>std::panicking::try (564 samples, 0.52%)</title><rect x="50.1984%" y="741" width="0.5169%" height="15" fill="rgb(216,223,23)" fg:x="54769" fg:w="564"/><text x="50.4484%" y="751.50"></text></g><g><title>std::panicking::try::do_call (564 samples, 0.52%)</title><rect x="50.1984%" y="725" width="0.5169%" height="15" fill="rgb(251,54,12)" fg:x="54769" fg:w="564"/><text x="50.4484%" y="735.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (549 samples, 0.50%)</title><rect x="50.2122%" y="709" width="0.5032%" height="15" fill="rgb(254,176,54)" fg:x="54784" fg:w="549"/><text x="50.4622%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (154 samples, 0.14%)</title><rect x="50.5742%" y="693" width="0.1411%" height="15" fill="rgb(210,32,8)" fg:x="55179" fg:w="154"/><text x="50.8242%" y="703.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,567 samples, 1.44%)</title><rect x="49.5404%" y="837" width="1.4362%" height="15" fill="rgb(235,52,38)" fg:x="54051" fg:w="1567"/><text x="49.7904%" y="847.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,567 samples, 1.44%)</title><rect x="49.5404%" y="821" width="1.4362%" height="15" fill="rgb(231,4,44)" fg:x="54051" fg:w="1567"/><text x="49.7904%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (285 samples, 0.26%)</title><rect x="50.7154%" y="805" width="0.2612%" height="15" fill="rgb(249,2,32)" fg:x="55333" fg:w="285"/><text x="50.9654%" y="815.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (55 samples, 0.05%)</title><rect x="50.9766%" y="837" width="0.0504%" height="15" fill="rgb(224,65,26)" fg:x="55618" fg:w="55"/><text x="51.2266%" y="847.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (28 samples, 0.03%)</title><rect x="51.0407%" y="789" width="0.0257%" height="15" fill="rgb(250,73,40)" fg:x="55688" fg:w="28"/><text x="51.2907%" y="799.50"></text></g><g><title>async_ffi::DropBomb::with (19 samples, 0.02%)</title><rect x="51.0490%" y="773" width="0.0174%" height="15" fill="rgb(253,177,16)" fg:x="55697" fg:w="19"/><text x="51.2990%" y="783.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (18 samples, 0.02%)</title><rect x="51.0499%" y="757" width="0.0165%" height="15" fill="rgb(217,32,34)" fg:x="55698" fg:w="18"/><text x="51.2999%" y="767.50"></text></g><g><title>core::mem::drop (18 samples, 0.02%)</title><rect x="51.0499%" y="741" width="0.0165%" height="15" fill="rgb(212,7,10)" fg:x="55698" fg:w="18"/><text x="51.2999%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}}&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="51.0499%" y="725" width="0.0165%" height="15" fill="rgb(245,89,8)" fg:x="55698" fg:w="18"/><text x="51.2999%" y="735.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="51.0673%" y="773" width="0.0119%" height="15" fill="rgb(237,16,53)" fg:x="55717" fg:w="13"/><text x="51.3173%" y="783.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (11 samples, 0.01%)</title><rect x="51.0985%" y="645" width="0.0101%" height="15" fill="rgb(250,204,30)" fg:x="55751" fg:w="11"/><text x="51.3485%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="51.0866%" y="693" width="0.0284%" height="15" fill="rgb(208,77,27)" fg:x="55738" fg:w="31"/><text x="51.3366%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="51.0866%" y="677" width="0.0284%" height="15" fill="rgb(250,204,28)" fg:x="55738" fg:w="31"/><text x="51.3366%" y="687.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (31 samples, 0.03%)</title><rect x="51.0866%" y="661" width="0.0284%" height="15" fill="rgb(244,63,21)" fg:x="55738" fg:w="31"/><text x="51.3366%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (39 samples, 0.04%)</title><rect x="51.0811%" y="725" width="0.0357%" height="15" fill="rgb(236,85,44)" fg:x="55732" fg:w="39"/><text x="51.3311%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (39 samples, 0.04%)</title><rect x="51.0811%" y="709" width="0.0357%" height="15" fill="rgb(215,98,4)" fg:x="55732" fg:w="39"/><text x="51.3311%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (49 samples, 0.04%)</title><rect x="51.0811%" y="757" width="0.0449%" height="15" fill="rgb(235,38,11)" fg:x="55732" fg:w="49"/><text x="51.3311%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (49 samples, 0.04%)</title><rect x="51.0811%" y="741" width="0.0449%" height="15" fill="rgb(254,186,25)" fg:x="55732" fg:w="49"/><text x="51.3311%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (60 samples, 0.05%)</title><rect x="51.0792%" y="773" width="0.0550%" height="15" fill="rgb(225,55,31)" fg:x="55730" fg:w="60"/><text x="51.3292%" y="783.50"></text></g><g><title>rust_dealloc (80 samples, 0.07%)</title><rect x="51.0664%" y="789" width="0.0733%" height="15" fill="rgb(211,15,21)" fg:x="55716" fg:w="80"/><text x="51.3164%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (137 samples, 0.13%)</title><rect x="51.0270%" y="837" width="0.1256%" height="15" fill="rgb(215,187,41)" fg:x="55673" fg:w="137"/><text x="51.2770%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (137 samples, 0.13%)</title><rect x="51.0270%" y="821" width="0.1256%" height="15" fill="rgb(248,69,32)" fg:x="55673" fg:w="137"/><text x="51.2770%" y="831.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (137 samples, 0.13%)</title><rect x="51.0270%" y="805" width="0.1256%" height="15" fill="rgb(252,102,52)" fg:x="55673" fg:w="137"/><text x="51.2770%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (14 samples, 0.01%)</title><rect x="51.1397%" y="789" width="0.0128%" height="15" fill="rgb(253,140,32)" fg:x="55796" fg:w="14"/><text x="51.3897%" y="799.50"></text></g><g><title>abi_stable::sabi_trait::robject::RObject&lt;P,I,V&gt;::sabi_as_rmut (16 samples, 0.01%)</title><rect x="51.1608%" y="821" width="0.0147%" height="15" fill="rgb(216,56,42)" fg:x="55819" fg:w="16"/><text x="51.4108%" y="831.50"></text></g><g><title>abi_stable::pointer_trait::AsMutPtr::as_rmut (16 samples, 0.01%)</title><rect x="51.1608%" y="805" width="0.0147%" height="15" fill="rgb(216,184,14)" fg:x="55819" fg:w="16"/><text x="51.4108%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (15 samples, 0.01%)</title><rect x="51.1617%" y="789" width="0.0137%" height="15" fill="rgb(237,187,27)" fg:x="55820" fg:w="15"/><text x="51.4117%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="51.2424%" y="533" width="0.0137%" height="15" fill="rgb(219,65,3)" fg:x="55908" fg:w="15"/><text x="51.4924%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (96 samples, 0.09%)</title><rect x="51.2424%" y="565" width="0.0880%" height="15" fill="rgb(245,83,25)" fg:x="55908" fg:w="96"/><text x="51.4924%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (96 samples, 0.09%)</title><rect x="51.2424%" y="549" width="0.0880%" height="15" fill="rgb(214,205,45)" fg:x="55908" fg:w="96"/><text x="51.4924%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (81 samples, 0.07%)</title><rect x="51.2561%" y="533" width="0.0742%" height="15" fill="rgb(241,20,18)" fg:x="55923" fg:w="81"/><text x="51.5061%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (68 samples, 0.06%)</title><rect x="51.2680%" y="517" width="0.0623%" height="15" fill="rgb(232,163,23)" fg:x="55936" fg:w="68"/><text x="51.5180%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (68 samples, 0.06%)</title><rect x="51.2680%" y="501" width="0.0623%" height="15" fill="rgb(214,5,46)" fg:x="55936" fg:w="68"/><text x="51.5180%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (68 samples, 0.06%)</title><rect x="51.2680%" y="485" width="0.0623%" height="15" fill="rgb(229,78,17)" fg:x="55936" fg:w="68"/><text x="51.5180%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="51.3368%" y="533" width="0.0257%" height="15" fill="rgb(248,89,10)" fg:x="56011" fg:w="28"/><text x="51.5868%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="51.3414%" y="517" width="0.0211%" height="15" fill="rgb(248,54,15)" fg:x="56016" fg:w="23"/><text x="51.5914%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (23 samples, 0.02%)</title><rect x="51.3414%" y="501" width="0.0211%" height="15" fill="rgb(223,116,6)" fg:x="56016" fg:w="23"/><text x="51.5914%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="51.3368%" y="565" width="0.0266%" height="15" fill="rgb(205,125,38)" fg:x="56011" fg:w="29"/><text x="51.5868%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="51.3368%" y="549" width="0.0266%" height="15" fill="rgb(251,78,38)" fg:x="56011" fg:w="29"/><text x="51.5868%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::empty (17 samples, 0.02%)</title><rect x="51.3634%" y="565" width="0.0156%" height="15" fill="rgb(253,78,28)" fg:x="56040" fg:w="17"/><text x="51.6134%" y="575.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (17 samples, 0.02%)</title><rect x="51.3634%" y="549" width="0.0156%" height="15" fill="rgb(209,120,3)" fg:x="56040" fg:w="17"/><text x="51.6134%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (247 samples, 0.23%)</title><rect x="51.2204%" y="613" width="0.2264%" height="15" fill="rgb(238,229,9)" fg:x="55884" fg:w="247"/><text x="51.4704%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (247 samples, 0.23%)</title><rect x="51.2204%" y="597" width="0.2264%" height="15" fill="rgb(253,159,18)" fg:x="55884" fg:w="247"/><text x="51.4704%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (229 samples, 0.21%)</title><rect x="51.2369%" y="581" width="0.2099%" height="15" fill="rgb(244,42,34)" fg:x="55902" fg:w="229"/><text x="51.4869%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (74 samples, 0.07%)</title><rect x="51.3789%" y="565" width="0.0678%" height="15" fill="rgb(224,8,7)" fg:x="56057" fg:w="74"/><text x="51.6289%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (74 samples, 0.07%)</title><rect x="51.3789%" y="549" width="0.0678%" height="15" fill="rgb(210,201,45)" fg:x="56057" fg:w="74"/><text x="51.6289%" y="559.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (311 samples, 0.29%)</title><rect x="51.1755%" y="821" width="0.2850%" height="15" fill="rgb(252,185,21)" fg:x="55835" fg:w="311"/><text x="51.4255%" y="831.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (282 samples, 0.26%)</title><rect x="51.2021%" y="805" width="0.2585%" height="15" fill="rgb(223,131,1)" fg:x="55864" fg:w="282"/><text x="51.4521%" y="815.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (282 samples, 0.26%)</title><rect x="51.2021%" y="789" width="0.2585%" height="15" fill="rgb(245,141,16)" fg:x="55864" fg:w="282"/><text x="51.4521%" y="799.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (282 samples, 0.26%)</title><rect x="51.2021%" y="773" width="0.2585%" height="15" fill="rgb(229,55,45)" fg:x="55864" fg:w="282"/><text x="51.4521%" y="783.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (282 samples, 0.26%)</title><rect x="51.2021%" y="757" width="0.2585%" height="15" fill="rgb(208,92,15)" fg:x="55864" fg:w="282"/><text x="51.4521%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (282 samples, 0.26%)</title><rect x="51.2021%" y="741" width="0.2585%" height="15" fill="rgb(234,185,47)" fg:x="55864" fg:w="282"/><text x="51.4521%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (272 samples, 0.25%)</title><rect x="51.2112%" y="725" width="0.2493%" height="15" fill="rgb(253,104,50)" fg:x="55874" fg:w="272"/><text x="51.4612%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (272 samples, 0.25%)</title><rect x="51.2112%" y="709" width="0.2493%" height="15" fill="rgb(205,70,7)" fg:x="55874" fg:w="272"/><text x="51.4612%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (272 samples, 0.25%)</title><rect x="51.2112%" y="693" width="0.2493%" height="15" fill="rgb(240,178,43)" fg:x="55874" fg:w="272"/><text x="51.4612%" y="703.50"></text></g><g><title>alloc::alloc::alloc (269 samples, 0.25%)</title><rect x="51.2140%" y="677" width="0.2466%" height="15" fill="rgb(214,112,2)" fg:x="55877" fg:w="269"/><text x="51.4640%" y="687.50"></text></g><g><title>__rg_alloc (269 samples, 0.25%)</title><rect x="51.2140%" y="661" width="0.2466%" height="15" fill="rgb(206,46,17)" fg:x="55877" fg:w="269"/><text x="51.4640%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (269 samples, 0.25%)</title><rect x="51.2140%" y="645" width="0.2466%" height="15" fill="rgb(225,220,16)" fg:x="55877" fg:w="269"/><text x="51.4640%" y="655.50"></text></g><g><title>rust_alloc (269 samples, 0.25%)</title><rect x="51.2140%" y="629" width="0.2466%" height="15" fill="rgb(238,65,40)" fg:x="55877" fg:w="269"/><text x="51.4640%" y="639.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="51.4468%" y="613" width="0.0137%" height="15" fill="rgb(230,151,21)" fg:x="56131" fg:w="15"/><text x="51.6968%" y="623.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (3,231 samples, 2.96%)</title><rect x="48.5477%" y="853" width="2.9614%" height="15" fill="rgb(218,58,49)" fg:x="52968" fg:w="3231"/><text x="48.7977%" y="863.50">tre..</text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_TO&lt;_ErasedPtr&gt;::pull_data (389 samples, 0.36%)</title><rect x="51.1526%" y="837" width="0.3565%" height="15" fill="rgb(219,179,14)" fg:x="55810" fg:w="389"/><text x="51.4026%" y="847.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::_::&lt;impl tremor_runtime::connectors::source::RawSource_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::pull_data (47 samples, 0.04%)</title><rect x="51.4660%" y="821" width="0.0431%" height="15" fill="rgb(223,72,1)" fg:x="56152" fg:w="47"/><text x="51.7160%" y="831.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::control_plane::{{closure}} (446 samples, 0.41%)</title><rect x="51.5091%" y="853" width="0.4088%" height="15" fill="rgb(238,126,10)" fg:x="56199" fg:w="446"/><text x="51.7591%" y="863.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::needs_control_plane_msg (384 samples, 0.35%)</title><rect x="51.5659%" y="837" width="0.3520%" height="15" fill="rgb(224,206,38)" fg:x="56261" fg:w="384"/><text x="51.8159%" y="847.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (370 samples, 0.34%)</title><rect x="51.5788%" y="821" width="0.3391%" height="15" fill="rgb(212,201,54)" fg:x="56275" fg:w="370"/><text x="51.8288%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (357 samples, 0.33%)</title><rect x="51.5907%" y="805" width="0.3272%" height="15" fill="rgb(218,154,48)" fg:x="56288" fg:w="357"/><text x="51.8407%" y="815.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (214 samples, 0.20%)</title><rect x="51.7217%" y="789" width="0.1961%" height="15" fill="rgb(232,93,24)" fg:x="56431" fg:w="214"/><text x="51.9717%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (196 samples, 0.18%)</title><rect x="51.7382%" y="773" width="0.1796%" height="15" fill="rgb(245,30,21)" fg:x="56449" fg:w="196"/><text x="51.9882%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (196 samples, 0.18%)</title><rect x="51.7382%" y="757" width="0.1796%" height="15" fill="rgb(242,148,29)" fg:x="56449" fg:w="196"/><text x="51.9882%" y="767.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (16 samples, 0.01%)</title><rect x="52.8940%" y="821" width="0.0147%" height="15" fill="rgb(244,153,54)" fg:x="57710" fg:w="16"/><text x="53.1440%" y="831.50"></text></g><g><title>&lt;abi_stable::std_types::utypeid::UTypeId as core::cmp::PartialEq&gt;::eq (234 samples, 0.21%)</title><rect x="52.9582%" y="773" width="0.2145%" height="15" fill="rgb(252,87,22)" fg:x="57780" fg:w="234"/><text x="53.2082%" y="783.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (227 samples, 0.21%)</title><rect x="52.9646%" y="757" width="0.2081%" height="15" fill="rgb(210,51,29)" fg:x="57787" fg:w="227"/><text x="53.2146%" y="767.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (227 samples, 0.21%)</title><rect x="52.9646%" y="741" width="0.2081%" height="15" fill="rgb(242,136,47)" fg:x="57787" fg:w="227"/><text x="53.2146%" y="751.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (42 samples, 0.04%)</title><rect x="53.1726%" y="773" width="0.0385%" height="15" fill="rgb(238,68,4)" fg:x="58014" fg:w="42"/><text x="53.4226%" y="783.50"></text></g><g><title>abi_stable::std_types::utypeid::new_utypeid (32 samples, 0.03%)</title><rect x="53.1818%" y="757" width="0.0293%" height="15" fill="rgb(242,161,30)" fg:x="58024" fg:w="32"/><text x="53.4318%" y="767.50"></text></g><g><title>abi_stable::std_types::utypeid::UTypeId::new (25 samples, 0.02%)</title><rect x="53.1882%" y="741" width="0.0229%" height="15" fill="rgb(218,58,44)" fg:x="58031" fg:w="25"/><text x="53.4382%" y="751.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (282 samples, 0.26%)</title><rect x="52.9582%" y="789" width="0.2585%" height="15" fill="rgb(252,125,32)" fg:x="57780" fg:w="282"/><text x="53.2082%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (388 samples, 0.36%)</title><rect x="52.8729%" y="837" width="0.3556%" height="15" fill="rgb(219,178,0)" fg:x="57687" fg:w="388"/><text x="53.1229%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::convert::From&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (349 samples, 0.32%)</title><rect x="52.9087%" y="821" width="0.3199%" height="15" fill="rgb(213,152,7)" fg:x="57726" fg:w="349"/><text x="53.1587%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (333 samples, 0.31%)</title><rect x="52.9233%" y="805" width="0.3052%" height="15" fill="rgb(249,109,34)" fg:x="57742" fg:w="333"/><text x="53.1733%" y="815.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::ops::deref::Deref&gt;::deref (12 samples, 0.01%)</title><rect x="53.2285%" y="837" width="0.0110%" height="15" fill="rgb(232,96,21)" fg:x="58075" fg:w="12"/><text x="53.4785%" y="847.50"></text></g><g><title>__memcpy_avx_unaligned_erms (763 samples, 0.70%)</title><rect x="53.2450%" y="837" width="0.6993%" height="15" fill="rgb(228,27,39)" fg:x="58093" fg:w="763"/><text x="53.4950%" y="847.50"></text></g><g><title>abi_stable::std_types::option::ROption&lt;T&gt;::map (19 samples, 0.02%)</title><rect x="53.9444%" y="837" width="0.0174%" height="15" fill="rgb(211,182,52)" fg:x="58856" fg:w="19"/><text x="54.1944%" y="847.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="53.9948%" y="645" width="0.0101%" height="15" fill="rgb(234,178,38)" fg:x="58911" fg:w="11"/><text x="54.2448%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (16 samples, 0.01%)</title><rect x="54.0195%" y="549" width="0.0147%" height="15" fill="rgb(221,111,3)" fg:x="58938" fg:w="16"/><text x="54.2695%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (21 samples, 0.02%)</title><rect x="54.0177%" y="565" width="0.0192%" height="15" fill="rgb(228,175,21)" fg:x="58936" fg:w="21"/><text x="54.2677%" y="575.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (16 samples, 0.01%)</title><rect x="54.0406%" y="549" width="0.0147%" height="15" fill="rgb(228,174,43)" fg:x="58961" fg:w="16"/><text x="54.2906%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (110 samples, 0.10%)</title><rect x="54.0177%" y="597" width="0.1008%" height="15" fill="rgb(211,191,0)" fg:x="58936" fg:w="110"/><text x="54.2677%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (110 samples, 0.10%)</title><rect x="54.0177%" y="581" width="0.1008%" height="15" fill="rgb(253,117,3)" fg:x="58936" fg:w="110"/><text x="54.2677%" y="591.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (89 samples, 0.08%)</title><rect x="54.0369%" y="565" width="0.0816%" height="15" fill="rgb(241,127,19)" fg:x="58957" fg:w="89"/><text x="54.2869%" y="575.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (69 samples, 0.06%)</title><rect x="54.0553%" y="549" width="0.0632%" height="15" fill="rgb(218,103,12)" fg:x="58977" fg:w="69"/><text x="54.3053%" y="559.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (69 samples, 0.06%)</title><rect x="54.0553%" y="533" width="0.0632%" height="15" fill="rgb(236,214,43)" fg:x="58977" fg:w="69"/><text x="54.3053%" y="543.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (69 samples, 0.06%)</title><rect x="54.0553%" y="517" width="0.0632%" height="15" fill="rgb(244,144,19)" fg:x="58977" fg:w="69"/><text x="54.3053%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="54.1185%" y="597" width="0.0119%" height="15" fill="rgb(246,188,10)" fg:x="59046" fg:w="13"/><text x="54.3685%" y="607.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (12 samples, 0.01%)</title><rect x="54.1194%" y="581" width="0.0110%" height="15" fill="rgb(212,193,33)" fg:x="59047" fg:w="12"/><text x="54.3694%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::empty (12 samples, 0.01%)</title><rect x="54.1378%" y="597" width="0.0110%" height="15" fill="rgb(241,51,29)" fg:x="59067" fg:w="12"/><text x="54.3878%" y="607.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (12 samples, 0.01%)</title><rect x="54.1378%" y="581" width="0.0110%" height="15" fill="rgb(211,58,19)" fg:x="59067" fg:w="12"/><text x="54.3878%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (260 samples, 0.24%)</title><rect x="54.0049%" y="645" width="0.2383%" height="15" fill="rgb(229,111,26)" fg:x="58922" fg:w="260"/><text x="54.2549%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (260 samples, 0.24%)</title><rect x="54.0049%" y="629" width="0.2383%" height="15" fill="rgb(213,115,40)" fg:x="58922" fg:w="260"/><text x="54.2549%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (251 samples, 0.23%)</title><rect x="54.0131%" y="613" width="0.2301%" height="15" fill="rgb(209,56,44)" fg:x="58931" fg:w="251"/><text x="54.2631%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::take (103 samples, 0.09%)</title><rect x="54.1488%" y="597" width="0.0944%" height="15" fill="rgb(230,108,32)" fg:x="59079" fg:w="103"/><text x="54.3988%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (103 samples, 0.09%)</title><rect x="54.1488%" y="581" width="0.0944%" height="15" fill="rgb(216,165,31)" fg:x="59079" fg:w="103"/><text x="54.3988%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (315 samples, 0.29%)</title><rect x="53.9719%" y="773" width="0.2887%" height="15" fill="rgb(218,122,21)" fg:x="58886" fg:w="315"/><text x="54.2219%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (301 samples, 0.28%)</title><rect x="53.9847%" y="757" width="0.2759%" height="15" fill="rgb(223,224,47)" fg:x="58900" fg:w="301"/><text x="54.2347%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (301 samples, 0.28%)</title><rect x="53.9847%" y="741" width="0.2759%" height="15" fill="rgb(238,102,44)" fg:x="58900" fg:w="301"/><text x="54.2347%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (301 samples, 0.28%)</title><rect x="53.9847%" y="725" width="0.2759%" height="15" fill="rgb(236,46,40)" fg:x="58900" fg:w="301"/><text x="54.2347%" y="735.50"></text></g><g><title>alloc::alloc::alloc (296 samples, 0.27%)</title><rect x="53.9893%" y="709" width="0.2713%" height="15" fill="rgb(247,202,50)" fg:x="58905" fg:w="296"/><text x="54.2393%" y="719.50"></text></g><g><title>__rg_alloc (296 samples, 0.27%)</title><rect x="53.9893%" y="693" width="0.2713%" height="15" fill="rgb(209,99,20)" fg:x="58905" fg:w="296"/><text x="54.2393%" y="703.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (296 samples, 0.27%)</title><rect x="53.9893%" y="677" width="0.2713%" height="15" fill="rgb(252,27,34)" fg:x="58905" fg:w="296"/><text x="54.2393%" y="687.50"></text></g><g><title>rust_alloc (290 samples, 0.27%)</title><rect x="53.9948%" y="661" width="0.2658%" height="15" fill="rgb(215,206,23)" fg:x="58911" fg:w="290"/><text x="54.2448%" y="671.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (19 samples, 0.02%)</title><rect x="54.2432%" y="645" width="0.0174%" height="15" fill="rgb(212,135,36)" fg:x="59182" fg:w="19"/><text x="54.4932%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (330 samples, 0.30%)</title><rect x="53.9664%" y="837" width="0.3025%" height="15" fill="rgb(240,189,1)" fg:x="58880" fg:w="330"/><text x="54.2164%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (324 samples, 0.30%)</title><rect x="53.9719%" y="821" width="0.2970%" height="15" fill="rgb(242,56,20)" fg:x="58886" fg:w="324"/><text x="54.2219%" y="831.50"></text></g><g><title>value_trait::Builder::object (324 samples, 0.30%)</title><rect x="53.9719%" y="805" width="0.2970%" height="15" fill="rgb(247,132,33)" fg:x="58886" fg:w="324"/><text x="54.2219%" y="815.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (324 samples, 0.30%)</title><rect x="53.9719%" y="789" width="0.2970%" height="15" fill="rgb(208,149,11)" fg:x="58886" fg:w="324"/><text x="54.2219%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt;&gt; (28 samples, 0.03%)</title><rect x="54.2707%" y="837" width="0.0257%" height="15" fill="rgb(211,33,11)" fg:x="59212" fg:w="28"/><text x="54.5207%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="54.3999%" y="741" width="0.0183%" height="15" fill="rgb(221,29,38)" fg:x="59353" fg:w="20"/><text x="54.6499%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (19 samples, 0.02%)</title><rect x="54.4008%" y="725" width="0.0174%" height="15" fill="rgb(206,182,49)" fg:x="59354" fg:w="19"/><text x="54.6508%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (149 samples, 0.14%)</title><rect x="54.2963%" y="837" width="0.1366%" height="15" fill="rgb(216,140,1)" fg:x="59240" fg:w="149"/><text x="54.5463%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (77 samples, 0.07%)</title><rect x="54.3623%" y="821" width="0.0706%" height="15" fill="rgb(232,57,40)" fg:x="59312" fg:w="77"/><text x="54.6123%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (61 samples, 0.06%)</title><rect x="54.3770%" y="805" width="0.0559%" height="15" fill="rgb(224,186,18)" fg:x="59328" fg:w="61"/><text x="54.6270%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (61 samples, 0.06%)</title><rect x="54.3770%" y="789" width="0.0559%" height="15" fill="rgb(215,121,11)" fg:x="59328" fg:w="61"/><text x="54.6270%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (36 samples, 0.03%)</title><rect x="54.3999%" y="773" width="0.0330%" height="15" fill="rgb(245,147,10)" fg:x="59353" fg:w="36"/><text x="54.6499%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (36 samples, 0.03%)</title><rect x="54.3999%" y="757" width="0.0330%" height="15" fill="rgb(238,153,13)" fg:x="59353" fg:w="36"/><text x="54.6499%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (16 samples, 0.01%)</title><rect x="54.4182%" y="741" width="0.0147%" height="15" fill="rgb(233,108,0)" fg:x="59373" fg:w="16"/><text x="54.6682%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="54.4182%" y="725" width="0.0147%" height="15" fill="rgb(212,157,17)" fg:x="59373" fg:w="16"/><text x="54.6682%" y="735.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="54.4402%" y="805" width="0.0119%" height="15" fill="rgb(225,213,38)" fg:x="59397" fg:w="13"/><text x="54.6902%" y="815.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="54.4659%" y="741" width="0.0119%" height="15" fill="rgb(248,16,11)" fg:x="59425" fg:w="13"/><text x="54.7159%" y="751.50"></text></g><g><title>sizeclass_to_size (14 samples, 0.01%)</title><rect x="54.4778%" y="741" width="0.0128%" height="15" fill="rgb(241,33,4)" fg:x="59438" fg:w="14"/><text x="54.7278%" y="751.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (14 samples, 0.01%)</title><rect x="54.4778%" y="725" width="0.0128%" height="15" fill="rgb(222,26,43)" fg:x="59438" fg:w="14"/><text x="54.7278%" y="735.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="54.5245%" y="693" width="0.0192%" height="15" fill="rgb(243,29,36)" fg:x="59489" fg:w="21"/><text x="54.7745%" y="703.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="54.5245%" y="677" width="0.0192%" height="15" fill="rgb(241,9,27)" fg:x="59489" fg:w="21"/><text x="54.7745%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (68 samples, 0.06%)</title><rect x="54.4906%" y="741" width="0.0623%" height="15" fill="rgb(205,117,26)" fg:x="59452" fg:w="68"/><text x="54.7406%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (68 samples, 0.06%)</title><rect x="54.4906%" y="725" width="0.0623%" height="15" fill="rgb(209,80,39)" fg:x="59452" fg:w="68"/><text x="54.7406%" y="735.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (63 samples, 0.06%)</title><rect x="54.4952%" y="709" width="0.0577%" height="15" fill="rgb(239,155,6)" fg:x="59457" fg:w="63"/><text x="54.7452%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (104 samples, 0.10%)</title><rect x="54.4595%" y="773" width="0.0953%" height="15" fill="rgb(212,104,12)" fg:x="59418" fg:w="104"/><text x="54.7095%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (104 samples, 0.10%)</title><rect x="54.4595%" y="757" width="0.0953%" height="15" fill="rgb(234,204,3)" fg:x="59418" fg:w="104"/><text x="54.7095%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (106 samples, 0.10%)</title><rect x="54.4595%" y="805" width="0.0972%" height="15" fill="rgb(251,218,7)" fg:x="59418" fg:w="106"/><text x="54.7095%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (106 samples, 0.10%)</title><rect x="54.4595%" y="789" width="0.0972%" height="15" fill="rgb(221,81,32)" fg:x="59418" fg:w="106"/><text x="54.7095%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (129 samples, 0.12%)</title><rect x="54.4402%" y="821" width="0.1182%" height="15" fill="rgb(214,152,26)" fg:x="59397" fg:w="129"/><text x="54.6902%" y="831.50"></text></g><g><title>rust_dealloc (144 samples, 0.13%)</title><rect x="54.4329%" y="837" width="0.1320%" height="15" fill="rgb(223,22,3)" fg:x="59389" fg:w="144"/><text x="54.6829%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (64 samples, 0.06%)</title><rect x="54.6639%" y="773" width="0.0587%" height="15" fill="rgb(207,174,7)" fg:x="59641" fg:w="64"/><text x="54.9139%" y="783.50"></text></g><g><title>core::cmp::PartialOrd::ge (64 samples, 0.06%)</title><rect x="54.6639%" y="757" width="0.0587%" height="15" fill="rgb(224,19,52)" fg:x="59641" fg:w="64"/><text x="54.9139%" y="767.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (64 samples, 0.06%)</title><rect x="54.6639%" y="741" width="0.0587%" height="15" fill="rgb(228,24,14)" fg:x="59641" fg:w="64"/><text x="54.9139%" y="751.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (64 samples, 0.06%)</title><rect x="54.6639%" y="725" width="0.0587%" height="15" fill="rgb(230,153,43)" fg:x="59641" fg:w="64"/><text x="54.9139%" y="735.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (64 samples, 0.06%)</title><rect x="54.6639%" y="709" width="0.0587%" height="15" fill="rgb(231,106,12)" fg:x="59641" fg:w="64"/><text x="54.9139%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (27 samples, 0.02%)</title><rect x="54.6978%" y="693" width="0.0247%" height="15" fill="rgb(215,92,2)" fg:x="59678" fg:w="27"/><text x="54.9478%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (150 samples, 0.14%)</title><rect x="54.6070%" y="805" width="0.1375%" height="15" fill="rgb(249,143,25)" fg:x="59579" fg:w="150"/><text x="54.8570%" y="815.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (150 samples, 0.14%)</title><rect x="54.6070%" y="789" width="0.1375%" height="15" fill="rgb(252,7,35)" fg:x="59579" fg:w="150"/><text x="54.8570%" y="799.50"></text></g><g><title>core::time::Duration::new (24 samples, 0.02%)</title><rect x="54.7225%" y="773" width="0.0220%" height="15" fill="rgb(216,69,40)" fg:x="59705" fg:w="24"/><text x="54.9725%" y="783.50"></text></g><g><title>std::time::SystemTime::duration_since (164 samples, 0.15%)</title><rect x="54.6070%" y="821" width="0.1503%" height="15" fill="rgb(240,36,33)" fg:x="59579" fg:w="164"/><text x="54.8570%" y="831.50"></text></g><g><title>tremor_common::time::nanotime (14 samples, 0.01%)</title><rect x="54.7445%" y="805" width="0.0128%" height="15" fill="rgb(231,128,14)" fg:x="59729" fg:w="14"/><text x="54.9945%" y="815.50"></text></g><g><title>tremor_common::time::nanotime (822 samples, 0.75%)</title><rect x="54.5731%" y="837" width="0.7534%" height="15" fill="rgb(245,143,14)" fg:x="59542" fg:w="822"/><text x="54.8231%" y="847.50"></text></g><g><title>std::time::SystemTime::now (621 samples, 0.57%)</title><rect x="54.7573%" y="821" width="0.5692%" height="15" fill="rgb(222,130,28)" fg:x="59743" fg:w="621"/><text x="55.0073%" y="831.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (621 samples, 0.57%)</title><rect x="54.7573%" y="805" width="0.5692%" height="15" fill="rgb(212,10,48)" fg:x="59743" fg:w="621"/><text x="55.0073%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::now (621 samples, 0.57%)</title><rect x="54.7573%" y="789" width="0.5692%" height="15" fill="rgb(254,118,45)" fg:x="59743" fg:w="621"/><text x="55.0073%" y="799.50"></text></g><g><title>__clock_gettime_2 (498 samples, 0.46%)</title><rect x="54.8701%" y="773" width="0.4564%" height="15" fill="rgb(228,6,45)" fg:x="59866" fg:w="498"/><text x="55.1201%" y="783.50"></text></g><g><title>__vdso_clock_gettime (447 samples, 0.41%)</title><rect x="54.9168%" y="757" width="0.4097%" height="15" fill="rgb(241,18,35)" fg:x="59917" fg:w="447"/><text x="55.1668%" y="767.50"></text></g><g><title>[[vdso]] (311 samples, 0.29%)</title><rect x="55.0415%" y="741" width="0.2850%" height="15" fill="rgb(227,214,53)" fg:x="60053" fg:w="311"/><text x="55.2915%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,727 samples, 3.42%)</title><rect x="51.9179%" y="853" width="3.4160%" height="15" fill="rgb(224,107,51)" fg:x="56645" fg:w="3727"/><text x="52.1679%" y="863.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,735 samples, 7.09%)</title><rect x="48.2993%" y="869" width="7.0895%" height="15" fill="rgb(248,60,28)" fg:x="52697" fg:w="7735"/><text x="48.5493%" y="879.50">&lt;core::fut..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (60 samples, 0.05%)</title><rect x="55.3339%" y="853" width="0.0550%" height="15" fill="rgb(249,101,23)" fg:x="60372" fg:w="60"/><text x="55.5839%" y="863.50"></text></g><g><title>__memcpy_avx_unaligned_erms (904 samples, 0.83%)</title><rect x="55.3943%" y="869" width="0.8286%" height="15" fill="rgb(228,51,19)" fg:x="60438" fg:w="904"/><text x="55.6443%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (27 samples, 0.02%)</title><rect x="56.2257%" y="853" width="0.0247%" height="15" fill="rgb(213,20,6)" fg:x="61345" fg:w="27"/><text x="56.4757%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (35 samples, 0.03%)</title><rect x="56.2257%" y="869" width="0.0321%" height="15" fill="rgb(212,124,10)" fg:x="61345" fg:w="35"/><text x="56.4757%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (9,186 samples, 8.42%)</title><rect x="47.8576%" y="885" width="8.4194%" height="15" fill="rgb(248,3,40)" fg:x="52215" fg:w="9186"/><text x="48.1076%" y="895.50">tremor_runti..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::should_pull_data (21 samples, 0.02%)</title><rect x="56.2577%" y="869" width="0.0192%" height="15" fill="rgb(223,178,23)" fg:x="61380" fg:w="21"/><text x="56.5077%" y="879.50"></text></g><g><title>__memcpy_avx_unaligned_erms (382 samples, 0.35%)</title><rect x="56.3338%" y="853" width="0.3501%" height="15" fill="rgb(240,132,45)" fg:x="61463" fg:w="382"/><text x="56.5838%" y="863.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (15 samples, 0.01%)</title><rect x="56.9066%" y="837" width="0.0137%" height="15" fill="rgb(245,164,36)" fg:x="62088" fg:w="15"/><text x="57.1566%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.04%)</title><rect x="56.9204%" y="821" width="0.0357%" height="15" fill="rgb(231,188,53)" fg:x="62103" fg:w="39"/><text x="57.1704%" y="831.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (415 samples, 0.38%)</title><rect x="56.9204%" y="837" width="0.3804%" height="15" fill="rgb(237,198,39)" fg:x="62103" fg:w="415"/><text x="57.1704%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (376 samples, 0.34%)</title><rect x="56.9561%" y="821" width="0.3446%" height="15" fill="rgb(223,120,35)" fg:x="62142" fg:w="376"/><text x="57.2061%" y="831.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (374 samples, 0.34%)</title><rect x="56.9580%" y="805" width="0.3428%" height="15" fill="rgb(253,107,49)" fg:x="62144" fg:w="374"/><text x="57.2080%" y="815.50"></text></g><g><title>core::ptr::read (374 samples, 0.34%)</title><rect x="56.9580%" y="789" width="0.3428%" height="15" fill="rgb(216,44,31)" fg:x="62144" fg:w="374"/><text x="57.2080%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (368 samples, 0.34%)</title><rect x="56.9635%" y="773" width="0.3373%" height="15" fill="rgb(253,87,21)" fg:x="62150" fg:w="368"/><text x="57.2135%" y="783.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="57.3008%" y="837" width="0.0128%" height="15" fill="rgb(226,18,2)" fg:x="62518" fg:w="14"/><text x="57.5508%" y="847.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="57.3393%" y="533" width="0.0156%" height="15" fill="rgb(216,8,46)" fg:x="62560" fg:w="17"/><text x="57.5893%" y="543.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="57.3768%" y="405" width="0.0119%" height="15" fill="rgb(226,140,39)" fg:x="62601" fg:w="13"/><text x="57.6268%" y="415.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="57.3768%" y="389" width="0.0119%" height="15" fill="rgb(221,194,54)" fg:x="62601" fg:w="13"/><text x="57.6268%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (24 samples, 0.02%)</title><rect x="57.3713%" y="453" width="0.0220%" height="15" fill="rgb(213,92,11)" fg:x="62595" fg:w="24"/><text x="57.6213%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (24 samples, 0.02%)</title><rect x="57.3713%" y="437" width="0.0220%" height="15" fill="rgb(229,162,46)" fg:x="62595" fg:w="24"/><text x="57.6213%" y="447.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (23 samples, 0.02%)</title><rect x="57.3723%" y="421" width="0.0211%" height="15" fill="rgb(214,111,36)" fg:x="62596" fg:w="23"/><text x="57.6223%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (30 samples, 0.03%)</title><rect x="57.3713%" y="469" width="0.0275%" height="15" fill="rgb(207,6,21)" fg:x="62595" fg:w="30"/><text x="57.6213%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (53 samples, 0.05%)</title><rect x="57.3668%" y="485" width="0.0486%" height="15" fill="rgb(213,127,38)" fg:x="62590" fg:w="53"/><text x="57.6168%" y="495.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="57.4053%" y="469" width="0.0101%" height="15" fill="rgb(238,118,32)" fg:x="62632" fg:w="11"/><text x="57.6553%" y="479.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="57.4053%" y="453" width="0.0101%" height="15" fill="rgb(240,139,39)" fg:x="62632" fg:w="11"/><text x="57.6553%" y="463.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="57.4053%" y="437" width="0.0101%" height="15" fill="rgb(235,10,37)" fg:x="62632" fg:w="11"/><text x="57.6553%" y="447.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="57.4053%" y="421" width="0.0101%" height="15" fill="rgb(249,171,38)" fg:x="62632" fg:w="11"/><text x="57.6553%" y="431.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (31 samples, 0.03%)</title><rect x="57.4245%" y="469" width="0.0284%" height="15" fill="rgb(242,144,32)" fg:x="62653" fg:w="31"/><text x="57.6745%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (278 samples, 0.25%)</title><rect x="57.3658%" y="517" width="0.2548%" height="15" fill="rgb(217,117,21)" fg:x="62589" fg:w="278"/><text x="57.6158%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (278 samples, 0.25%)</title><rect x="57.3658%" y="501" width="0.2548%" height="15" fill="rgb(249,87,1)" fg:x="62589" fg:w="278"/><text x="57.6158%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (224 samples, 0.21%)</title><rect x="57.4153%" y="485" width="0.2053%" height="15" fill="rgb(248,196,48)" fg:x="62643" fg:w="224"/><text x="57.6653%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (183 samples, 0.17%)</title><rect x="57.4529%" y="469" width="0.1677%" height="15" fill="rgb(251,206,33)" fg:x="62684" fg:w="183"/><text x="57.7029%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (183 samples, 0.17%)</title><rect x="57.4529%" y="453" width="0.1677%" height="15" fill="rgb(232,141,28)" fg:x="62684" fg:w="183"/><text x="57.7029%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (183 samples, 0.17%)</title><rect x="57.4529%" y="437" width="0.1677%" height="15" fill="rgb(209,167,14)" fg:x="62684" fg:w="183"/><text x="57.7029%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::empty (73 samples, 0.07%)</title><rect x="57.6234%" y="517" width="0.0669%" height="15" fill="rgb(225,11,50)" fg:x="62870" fg:w="73"/><text x="57.8734%" y="527.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (73 samples, 0.07%)</title><rect x="57.6234%" y="501" width="0.0669%" height="15" fill="rgb(209,50,20)" fg:x="62870" fg:w="73"/><text x="57.8734%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (863 samples, 0.79%)</title><rect x="57.3383%" y="565" width="0.7910%" height="15" fill="rgb(212,17,46)" fg:x="62559" fg:w="863"/><text x="57.5883%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (862 samples, 0.79%)</title><rect x="57.3393%" y="549" width="0.7901%" height="15" fill="rgb(216,101,39)" fg:x="62560" fg:w="862"/><text x="57.5893%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (838 samples, 0.77%)</title><rect x="57.3613%" y="533" width="0.7681%" height="15" fill="rgb(212,228,48)" fg:x="62584" fg:w="838"/><text x="57.6113%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::take (479 samples, 0.44%)</title><rect x="57.6903%" y="517" width="0.4390%" height="15" fill="rgb(250,6,50)" fg:x="62943" fg:w="479"/><text x="57.9403%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (479 samples, 0.44%)</title><rect x="57.6903%" y="501" width="0.4390%" height="15" fill="rgb(250,160,48)" fg:x="62943" fg:w="479"/><text x="57.9403%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (901 samples, 0.83%)</title><rect x="57.3136%" y="709" width="0.8258%" height="15" fill="rgb(244,216,33)" fg:x="62532" fg:w="901"/><text x="57.5636%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (901 samples, 0.83%)</title><rect x="57.3136%" y="693" width="0.8258%" height="15" fill="rgb(207,157,5)" fg:x="62532" fg:w="901"/><text x="57.5636%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (895 samples, 0.82%)</title><rect x="57.3191%" y="677" width="0.8203%" height="15" fill="rgb(228,199,8)" fg:x="62538" fg:w="895"/><text x="57.5691%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (895 samples, 0.82%)</title><rect x="57.3191%" y="661" width="0.8203%" height="15" fill="rgb(227,80,20)" fg:x="62538" fg:w="895"/><text x="57.5691%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (895 samples, 0.82%)</title><rect x="57.3191%" y="645" width="0.8203%" height="15" fill="rgb(222,9,33)" fg:x="62538" fg:w="895"/><text x="57.5691%" y="655.50"></text></g><g><title>alloc::alloc::alloc (881 samples, 0.81%)</title><rect x="57.3319%" y="629" width="0.8075%" height="15" fill="rgb(239,44,28)" fg:x="62552" fg:w="881"/><text x="57.5819%" y="639.50"></text></g><g><title>__rg_alloc (881 samples, 0.81%)</title><rect x="57.3319%" y="613" width="0.8075%" height="15" fill="rgb(249,187,43)" fg:x="62552" fg:w="881"/><text x="57.5819%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (881 samples, 0.81%)</title><rect x="57.3319%" y="597" width="0.8075%" height="15" fill="rgb(216,141,28)" fg:x="62552" fg:w="881"/><text x="57.5819%" y="607.50"></text></g><g><title>rust_alloc (880 samples, 0.81%)</title><rect x="57.3328%" y="581" width="0.8066%" height="15" fill="rgb(230,154,53)" fg:x="62553" fg:w="880"/><text x="57.5828%" y="591.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="58.1293%" y="565" width="0.0101%" height="15" fill="rgb(227,82,4)" fg:x="63422" fg:w="11"/><text x="58.3793%" y="575.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (950 samples, 0.87%)</title><rect x="57.3136%" y="837" width="0.8707%" height="15" fill="rgb(220,107,16)" fg:x="62532" fg:w="950"/><text x="57.5636%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (950 samples, 0.87%)</title><rect x="57.3136%" y="821" width="0.8707%" height="15" fill="rgb(207,187,2)" fg:x="62532" fg:w="950"/><text x="57.5636%" y="831.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (950 samples, 0.87%)</title><rect x="57.3136%" y="805" width="0.8707%" height="15" fill="rgb(210,162,52)" fg:x="62532" fg:w="950"/><text x="57.5636%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (950 samples, 0.87%)</title><rect x="57.3136%" y="789" width="0.8707%" height="15" fill="rgb(217,216,49)" fg:x="62532" fg:w="950"/><text x="57.5636%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (950 samples, 0.87%)</title><rect x="57.3136%" y="773" width="0.8707%" height="15" fill="rgb(218,146,49)" fg:x="62532" fg:w="950"/><text x="57.5636%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (950 samples, 0.87%)</title><rect x="57.3136%" y="757" width="0.8707%" height="15" fill="rgb(216,55,40)" fg:x="62532" fg:w="950"/><text x="57.5636%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (950 samples, 0.87%)</title><rect x="57.3136%" y="741" width="0.8707%" height="15" fill="rgb(208,196,21)" fg:x="62532" fg:w="950"/><text x="57.5636%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (950 samples, 0.87%)</title><rect x="57.3136%" y="725" width="0.8707%" height="15" fill="rgb(242,117,42)" fg:x="62532" fg:w="950"/><text x="57.5636%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (49 samples, 0.04%)</title><rect x="58.1394%" y="709" width="0.0449%" height="15" fill="rgb(210,11,23)" fg:x="63433" fg:w="49"/><text x="58.3894%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.04%)</title><rect x="58.1394%" y="693" width="0.0449%" height="15" fill="rgb(217,110,2)" fg:x="63433" fg:w="49"/><text x="58.3894%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (37 samples, 0.03%)</title><rect x="58.1504%" y="677" width="0.0339%" height="15" fill="rgb(229,77,54)" fg:x="63445" fg:w="37"/><text x="58.4004%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,107 samples, 1.01%)</title><rect x="58.1843%" y="837" width="1.0146%" height="15" fill="rgb(218,53,16)" fg:x="63482" fg:w="1107"/><text x="58.4343%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (13 samples, 0.01%)</title><rect x="59.1989%" y="837" width="0.0119%" height="15" fill="rgb(215,38,13)" fg:x="64589" fg:w="13"/><text x="59.4489%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (15 samples, 0.01%)</title><rect x="59.2109%" y="837" width="0.0137%" height="15" fill="rgb(235,42,18)" fg:x="64602" fg:w="15"/><text x="59.4609%" y="847.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="59.2109%" y="821" width="0.0137%" height="15" fill="rgb(219,66,54)" fg:x="64602" fg:w="15"/><text x="59.4609%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (19 samples, 0.02%)</title><rect x="59.2246%" y="837" width="0.0174%" height="15" fill="rgb(222,205,4)" fg:x="64617" fg:w="19"/><text x="59.4746%" y="847.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="59.2246%" y="821" width="0.0174%" height="15" fill="rgb(227,213,46)" fg:x="64617" fg:w="19"/><text x="59.4746%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="59.2420%" y="837" width="0.0183%" height="15" fill="rgb(250,145,42)" fg:x="64636" fg:w="20"/><text x="59.4920%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (22 samples, 0.02%)</title><rect x="59.2603%" y="837" width="0.0202%" height="15" fill="rgb(219,15,2)" fg:x="64656" fg:w="22"/><text x="59.5103%" y="847.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (21 samples, 0.02%)</title><rect x="59.2979%" y="789" width="0.0192%" height="15" fill="rgb(231,181,52)" fg:x="64697" fg:w="21"/><text x="59.5479%" y="799.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (389 samples, 0.36%)</title><rect x="59.2979%" y="805" width="0.3565%" height="15" fill="rgb(235,1,42)" fg:x="64697" fg:w="389"/><text x="59.5479%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (368 samples, 0.34%)</title><rect x="59.3172%" y="789" width="0.3373%" height="15" fill="rgb(249,88,27)" fg:x="64718" fg:w="368"/><text x="59.5672%" y="799.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (368 samples, 0.34%)</title><rect x="59.3172%" y="773" width="0.3373%" height="15" fill="rgb(235,145,16)" fg:x="64718" fg:w="368"/><text x="59.5672%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (368 samples, 0.34%)</title><rect x="59.3172%" y="757" width="0.3373%" height="15" fill="rgb(237,114,19)" fg:x="64718" fg:w="368"/><text x="59.5672%" y="767.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (368 samples, 0.34%)</title><rect x="59.3172%" y="741" width="0.3373%" height="15" fill="rgb(238,51,50)" fg:x="64718" fg:w="368"/><text x="59.5672%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (368 samples, 0.34%)</title><rect x="59.3172%" y="725" width="0.3373%" height="15" fill="rgb(205,194,25)" fg:x="64718" fg:w="368"/><text x="59.5672%" y="735.50"></text></g><g><title>__memcmp_avx2_movbe (283 samples, 0.26%)</title><rect x="59.3951%" y="709" width="0.2594%" height="15" fill="rgb(215,203,17)" fg:x="64803" fg:w="283"/><text x="59.6451%" y="719.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (409 samples, 0.37%)</title><rect x="59.2805%" y="837" width="0.3749%" height="15" fill="rgb(233,112,49)" fg:x="64678" fg:w="409"/><text x="59.5305%" y="847.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (392 samples, 0.36%)</title><rect x="59.2961%" y="821" width="0.3593%" height="15" fill="rgb(241,130,26)" fg:x="64695" fg:w="392"/><text x="59.5461%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,711 samples, 3.40%)</title><rect x="56.2770%" y="869" width="3.4013%" height="15" fill="rgb(252,223,19)" fg:x="61401" fg:w="3711"/><text x="56.5270%" y="879.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,267 samples, 2.99%)</title><rect x="56.6839%" y="853" width="2.9944%" height="15" fill="rgb(211,95,25)" fg:x="61845" fg:w="3267"/><text x="56.9339%" y="863.50">tre..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (25 samples, 0.02%)</title><rect x="59.6554%" y="837" width="0.0229%" height="15" fill="rgb(251,182,27)" fg:x="65087" fg:w="25"/><text x="59.9054%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (25 samples, 0.02%)</title><rect x="59.6554%" y="821" width="0.0229%" height="15" fill="rgb(238,24,4)" fg:x="65087" fg:w="25"/><text x="59.9054%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (25 samples, 0.02%)</title><rect x="59.6554%" y="805" width="0.0229%" height="15" fill="rgb(224,220,25)" fg:x="65087" fg:w="25"/><text x="59.9054%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (21 samples, 0.02%)</title><rect x="59.6590%" y="789" width="0.0192%" height="15" fill="rgb(239,133,26)" fg:x="65091" fg:w="21"/><text x="59.9090%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17,490 samples, 16.03%)</title><rect x="43.6579%" y="1173" width="16.0304%" height="15" fill="rgb(211,94,48)" fg:x="47633" fg:w="17490"/><text x="43.9079%" y="1183.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,486 samples, 16.03%)</title><rect x="43.6616%" y="1157" width="16.0268%" height="15" fill="rgb(239,87,6)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="1167.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}} (17,486 samples, 16.03%)</title><rect x="43.6616%" y="1141" width="16.0268%" height="15" fill="rgb(227,62,0)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="1151.50">async_executor::Executor:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17,486 samples, 16.03%)</title><rect x="43.6616%" y="1125" width="16.0268%" height="15" fill="rgb(211,226,4)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="1135.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,486 samples, 16.03%)</title><rect x="43.6616%" y="1109" width="16.0268%" height="15" fill="rgb(253,38,52)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="1119.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (17,486 samples, 16.03%)</title><rect x="43.6616%" y="1093" width="16.0268%" height="15" fill="rgb(229,126,40)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="1103.50">async_executor::Executor:..</text></g><g><title>async_task::runnable::Runnable::run (17,486 samples, 16.03%)</title><rect x="43.6616%" y="1077" width="16.0268%" height="15" fill="rgb(229,165,44)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="1087.50">async_task::runnable::Run..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (17,486 samples, 16.03%)</title><rect x="43.6616%" y="1061" width="16.0268%" height="15" fill="rgb(247,95,47)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="1071.50">async_task::raw::RawTask&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (17,486 samples, 16.03%)</title><rect x="43.6616%" y="1045" width="16.0268%" height="15" fill="rgb(216,140,30)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="1055.50">&lt;core::pin::Pin&lt;P&gt; as cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,486 samples, 16.03%)</title><rect x="43.6616%" y="1029" width="16.0268%" height="15" fill="rgb(246,214,8)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="1039.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (17,486 samples, 16.03%)</title><rect x="43.6616%" y="1013" width="16.0268%" height="15" fill="rgb(227,224,15)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="1023.50">async_executor::Executor:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (17,486 samples, 16.03%)</title><rect x="43.6616%" y="997" width="16.0268%" height="15" fill="rgb(233,175,4)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="1007.50">&lt;async_std::task::builder..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (17,486 samples, 16.03%)</title><rect x="43.6616%" y="981" width="16.0268%" height="15" fill="rgb(221,66,45)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="991.50">async_std::task::task_loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17,486 samples, 16.03%)</title><rect x="43.6616%" y="965" width="16.0268%" height="15" fill="rgb(221,178,18)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="975.50">std::thread::local::Local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17,486 samples, 16.03%)</title><rect x="43.6616%" y="949" width="16.0268%" height="15" fill="rgb(213,81,29)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="959.50">std::thread::local::Local..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (17,486 samples, 16.03%)</title><rect x="43.6616%" y="933" width="16.0268%" height="15" fill="rgb(220,89,49)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="943.50">async_std::task::task_loc..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (17,486 samples, 16.03%)</title><rect x="43.6616%" y="917" width="16.0268%" height="15" fill="rgb(227,60,33)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="927.50">&lt;async_std::task::builder..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,486 samples, 16.03%)</title><rect x="43.6616%" y="901" width="16.0268%" height="15" fill="rgb(205,113,12)" fg:x="47637" fg:w="17486"/><text x="43.9116%" y="911.50">&lt;core::future::from_gener..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,722 samples, 3.41%)</title><rect x="56.2770%" y="885" width="3.4114%" height="15" fill="rgb(211,32,1)" fg:x="61401" fg:w="3722"/><text x="56.5270%" y="895.50">tre..</text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="59.6783%" y="869" width="0.0101%" height="15" fill="rgb(246,2,12)" fg:x="65112" fg:w="11"/><text x="59.9283%" y="879.50"></text></g><g><title>async_io::driver::block_on (17,499 samples, 16.04%)</title><rect x="43.6561%" y="1189" width="16.0387%" height="15" fill="rgb(243,37,27)" fg:x="47631" fg:w="17499"/><text x="43.9061%" y="1199.50">async_io::driver::block_on</text></g><g><title>__memcpy_avx_unaligned_erms (583 samples, 0.53%)</title><rect x="59.7379%" y="917" width="0.5343%" height="15" fill="rgb(248,211,31)" fg:x="65177" fg:w="583"/><text x="59.9879%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (623 samples, 0.57%)</title><rect x="60.2997%" y="901" width="0.5710%" height="15" fill="rgb(242,146,47)" fg:x="65790" fg:w="623"/><text x="60.5497%" y="911.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (64 samples, 0.06%)</title><rect x="60.8707%" y="901" width="0.0587%" height="15" fill="rgb(206,70,20)" fg:x="66413" fg:w="64"/><text x="61.1207%" y="911.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (70 samples, 0.06%)</title><rect x="60.9440%" y="805" width="0.0642%" height="15" fill="rgb(215,10,51)" fg:x="66493" fg:w="70"/><text x="61.1940%" y="815.50"></text></g><g><title>__GI___lll_lock_wake (13 samples, 0.01%)</title><rect x="60.9963%" y="789" width="0.0119%" height="15" fill="rgb(243,178,53)" fg:x="66550" fg:w="13"/><text x="61.2463%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (75 samples, 0.07%)</title><rect x="60.9404%" y="885" width="0.0687%" height="15" fill="rgb(233,221,20)" fg:x="66489" fg:w="75"/><text x="61.1904%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (73 samples, 0.07%)</title><rect x="60.9422%" y="869" width="0.0669%" height="15" fill="rgb(218,95,35)" fg:x="66491" fg:w="73"/><text x="61.1922%" y="879.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.07%)</title><rect x="60.9422%" y="853" width="0.0669%" height="15" fill="rgb(229,13,5)" fg:x="66491" fg:w="73"/><text x="61.1922%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (72 samples, 0.07%)</title><rect x="60.9431%" y="837" width="0.0660%" height="15" fill="rgb(252,164,30)" fg:x="66492" fg:w="72"/><text x="61.1931%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (71 samples, 0.07%)</title><rect x="60.9440%" y="821" width="0.0651%" height="15" fill="rgb(232,68,36)" fg:x="66493" fg:w="71"/><text x="61.1940%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (46 samples, 0.04%)</title><rect x="61.0091%" y="885" width="0.0422%" height="15" fill="rgb(219,59,54)" fg:x="66564" fg:w="46"/><text x="61.2591%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (46 samples, 0.04%)</title><rect x="61.0091%" y="869" width="0.0422%" height="15" fill="rgb(250,92,33)" fg:x="66564" fg:w="46"/><text x="61.2591%" y="879.50"></text></g><g><title>event_listener::Inner::lock (180 samples, 0.16%)</title><rect x="61.0531%" y="885" width="0.1650%" height="15" fill="rgb(229,162,54)" fg:x="66612" fg:w="180"/><text x="61.3031%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (180 samples, 0.16%)</title><rect x="61.0531%" y="869" width="0.1650%" height="15" fill="rgb(244,114,52)" fg:x="66612" fg:w="180"/><text x="61.3031%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (179 samples, 0.16%)</title><rect x="61.0540%" y="853" width="0.1641%" height="15" fill="rgb(212,211,43)" fg:x="66613" fg:w="179"/><text x="61.3040%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (173 samples, 0.16%)</title><rect x="61.0595%" y="837" width="0.1586%" height="15" fill="rgb(226,147,8)" fg:x="66619" fg:w="173"/><text x="61.3095%" y="847.50"></text></g><g><title>___pthread_mutex_lock (173 samples, 0.16%)</title><rect x="61.0595%" y="821" width="0.1586%" height="15" fill="rgb(226,23,13)" fg:x="66619" fg:w="173"/><text x="61.3095%" y="831.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,306 samples, 1.20%)</title><rect x="60.2722%" y="917" width="1.1970%" height="15" fill="rgb(240,63,4)" fg:x="65760" fg:w="1306"/><text x="60.5222%" y="927.50"></text></g><g><title>event_listener::Event::notify (589 samples, 0.54%)</title><rect x="60.9294%" y="901" width="0.5398%" height="15" fill="rgb(221,1,32)" fg:x="66477" fg:w="589"/><text x="61.1794%" y="911.50"></text></g><g><title>event_listener::full_fence (274 samples, 0.25%)</title><rect x="61.2181%" y="885" width="0.2511%" height="15" fill="rgb(242,117,10)" fg:x="66792" fg:w="274"/><text x="61.4681%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (265 samples, 0.24%)</title><rect x="61.2263%" y="869" width="0.2429%" height="15" fill="rgb(249,172,44)" fg:x="66801" fg:w="265"/><text x="61.4763%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (265 samples, 0.24%)</title><rect x="61.2263%" y="853" width="0.2429%" height="15" fill="rgb(244,46,45)" fg:x="66801" fg:w="265"/><text x="61.4763%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,959 samples, 1.80%)</title><rect x="59.6966%" y="997" width="1.7955%" height="15" fill="rgb(206,43,17)" fg:x="65132" fg:w="1959"/><text x="59.9466%" y="1007.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,959 samples, 1.80%)</title><rect x="59.6966%" y="981" width="1.7955%" height="15" fill="rgb(239,218,39)" fg:x="65132" fg:w="1959"/><text x="59.9466%" y="991.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,959 samples, 1.80%)</title><rect x="59.6966%" y="965" width="1.7955%" height="15" fill="rgb(208,169,54)" fg:x="65132" fg:w="1959"/><text x="59.9466%" y="975.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,959 samples, 1.80%)</title><rect x="59.6966%" y="949" width="1.7955%" height="15" fill="rgb(247,25,42)" fg:x="65132" fg:w="1959"/><text x="59.9466%" y="959.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,959 samples, 1.80%)</title><rect x="59.6966%" y="933" width="1.7955%" height="15" fill="rgb(226,23,31)" fg:x="65132" fg:w="1959"/><text x="59.9466%" y="943.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (16 samples, 0.01%)</title><rect x="61.4775%" y="917" width="0.0147%" height="15" fill="rgb(247,16,28)" fg:x="67075" fg:w="16"/><text x="61.7275%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 0.03%)</title><rect x="61.5077%" y="549" width="0.0266%" height="15" fill="rgb(231,147,38)" fg:x="67108" fg:w="29"/><text x="61.7577%" y="559.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (12 samples, 0.01%)</title><rect x="61.5380%" y="501" width="0.0110%" height="15" fill="rgb(253,81,48)" fg:x="67141" fg:w="12"/><text x="61.7880%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="61.5380%" y="485" width="0.0110%" height="15" fill="rgb(249,222,43)" fg:x="67141" fg:w="12"/><text x="61.7880%" y="495.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (12 samples, 0.01%)</title><rect x="61.5380%" y="469" width="0.0110%" height="15" fill="rgb(221,3,27)" fg:x="67141" fg:w="12"/><text x="61.7880%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="61.5572%" y="469" width="0.0183%" height="15" fill="rgb(228,180,5)" fg:x="67162" fg:w="20"/><text x="61.8072%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="61.5572%" y="453" width="0.0183%" height="15" fill="rgb(227,131,42)" fg:x="67162" fg:w="20"/><text x="61.8072%" y="463.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="61.5572%" y="437" width="0.0183%" height="15" fill="rgb(212,3,39)" fg:x="67162" fg:w="20"/><text x="61.8072%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="61.5572%" y="421" width="0.0183%" height="15" fill="rgb(226,45,5)" fg:x="67162" fg:w="20"/><text x="61.8072%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="61.5572%" y="405" width="0.0183%" height="15" fill="rgb(215,167,45)" fg:x="67162" fg:w="20"/><text x="61.8072%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="61.5572%" y="389" width="0.0183%" height="15" fill="rgb(250,218,53)" fg:x="67162" fg:w="20"/><text x="61.8072%" y="399.50"></text></g><g><title>abi_stable::erased_types::iterator::next (30 samples, 0.03%)</title><rect x="61.5526%" y="501" width="0.0275%" height="15" fill="rgb(207,140,0)" fg:x="67157" fg:w="30"/><text x="61.8026%" y="511.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (25 samples, 0.02%)</title><rect x="61.5572%" y="485" width="0.0229%" height="15" fill="rgb(238,133,51)" fg:x="67162" fg:w="25"/><text x="61.8072%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="61.5801%" y="469" width="0.0128%" height="15" fill="rgb(218,203,53)" fg:x="67187" fg:w="14"/><text x="61.8301%" y="479.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (14 samples, 0.01%)</title><rect x="61.5801%" y="453" width="0.0128%" height="15" fill="rgb(226,184,25)" fg:x="67187" fg:w="14"/><text x="61.8301%" y="463.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (100 samples, 0.09%)</title><rect x="61.5343%" y="533" width="0.0917%" height="15" fill="rgb(231,121,21)" fg:x="67137" fg:w="100"/><text x="61.7843%" y="543.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (100 samples, 0.09%)</title><rect x="61.5343%" y="517" width="0.0917%" height="15" fill="rgb(251,14,34)" fg:x="67137" fg:w="100"/><text x="61.7843%" y="527.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (50 samples, 0.05%)</title><rect x="61.5801%" y="501" width="0.0458%" height="15" fill="rgb(249,193,11)" fg:x="67187" fg:w="50"/><text x="61.8301%" y="511.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (50 samples, 0.05%)</title><rect x="61.5801%" y="485" width="0.0458%" height="15" fill="rgb(220,172,37)" fg:x="67187" fg:w="50"/><text x="61.8301%" y="495.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (36 samples, 0.03%)</title><rect x="61.5930%" y="469" width="0.0330%" height="15" fill="rgb(231,229,43)" fg:x="67201" fg:w="36"/><text x="61.8430%" y="479.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (35 samples, 0.03%)</title><rect x="61.6525%" y="421" width="0.0321%" height="15" fill="rgb(250,161,5)" fg:x="67266" fg:w="35"/><text x="61.9025%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="61.6672%" y="405" width="0.0174%" height="15" fill="rgb(218,225,18)" fg:x="67282" fg:w="19"/><text x="61.9172%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (19 samples, 0.02%)</title><rect x="61.6672%" y="389" width="0.0174%" height="15" fill="rgb(245,45,42)" fg:x="67282" fg:w="19"/><text x="61.9172%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (19 samples, 0.02%)</title><rect x="61.6672%" y="373" width="0.0174%" height="15" fill="rgb(211,115,1)" fg:x="67282" fg:w="19"/><text x="61.9172%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue)&gt;&gt; (19 samples, 0.02%)</title><rect x="61.6672%" y="357" width="0.0174%" height="15" fill="rgb(248,133,52)" fg:x="67282" fg:w="19"/><text x="61.9172%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="61.6672%" y="341" width="0.0174%" height="15" fill="rgb(238,100,21)" fg:x="67282" fg:w="19"/><text x="61.9172%" y="351.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (29 samples, 0.03%)</title><rect x="61.7506%" y="277" width="0.0266%" height="15" fill="rgb(247,144,11)" fg:x="67373" fg:w="29"/><text x="62.0006%" y="287.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (28 samples, 0.03%)</title><rect x="61.7515%" y="261" width="0.0257%" height="15" fill="rgb(206,164,16)" fg:x="67374" fg:w="28"/><text x="62.0015%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (63 samples, 0.06%)</title><rect x="61.7286%" y="325" width="0.0577%" height="15" fill="rgb(222,34,3)" fg:x="67349" fg:w="63"/><text x="61.9786%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (63 samples, 0.06%)</title><rect x="61.7286%" y="309" width="0.0577%" height="15" fill="rgb(248,82,4)" fg:x="67349" fg:w="63"/><text x="61.9786%" y="319.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (63 samples, 0.06%)</title><rect x="61.7286%" y="293" width="0.0577%" height="15" fill="rgb(228,81,46)" fg:x="67349" fg:w="63"/><text x="61.9786%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (93 samples, 0.09%)</title><rect x="61.7057%" y="357" width="0.0852%" height="15" fill="rgb(227,67,47)" fg:x="67324" fg:w="93"/><text x="61.9557%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (93 samples, 0.09%)</title><rect x="61.7057%" y="341" width="0.0852%" height="15" fill="rgb(215,93,53)" fg:x="67324" fg:w="93"/><text x="61.9557%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (95 samples, 0.09%)</title><rect x="61.7057%" y="389" width="0.0871%" height="15" fill="rgb(248,194,39)" fg:x="67324" fg:w="95"/><text x="61.9557%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (95 samples, 0.09%)</title><rect x="61.7057%" y="373" width="0.0871%" height="15" fill="rgb(215,5,19)" fg:x="67324" fg:w="95"/><text x="61.9557%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (116 samples, 0.11%)</title><rect x="61.6929%" y="405" width="0.1063%" height="15" fill="rgb(226,215,51)" fg:x="67310" fg:w="116"/><text x="61.9429%" y="415.50"></text></g><g><title>rust_dealloc (131 samples, 0.12%)</title><rect x="61.6846%" y="421" width="0.1201%" height="15" fill="rgb(225,56,26)" fg:x="67301" fg:w="131"/><text x="61.9346%" y="431.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (343 samples, 0.31%)</title><rect x="61.4921%" y="725" width="0.3144%" height="15" fill="rgb(222,75,29)" fg:x="67091" fg:w="343"/><text x="61.7421%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (343 samples, 0.31%)</title><rect x="61.4921%" y="709" width="0.3144%" height="15" fill="rgb(236,139,6)" fg:x="67091" fg:w="343"/><text x="61.7421%" y="719.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkEventPayload&gt; for tremor_script::srs::EventPayload&gt;::from (343 samples, 0.31%)</title><rect x="61.4921%" y="693" width="0.3144%" height="15" fill="rgb(223,137,36)" fg:x="67091" fg:w="343"/><text x="61.7421%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (343 samples, 0.31%)</title><rect x="61.4921%" y="677" width="0.3144%" height="15" fill="rgb(226,99,2)" fg:x="67091" fg:w="343"/><text x="61.7421%" y="687.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkValueAndMeta&gt; for tremor_script::srs::ValueAndMeta&gt;::from (343 samples, 0.31%)</title><rect x="61.4921%" y="661" width="0.3144%" height="15" fill="rgb(206,133,23)" fg:x="67091" fg:w="343"/><text x="61.7421%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (343 samples, 0.31%)</title><rect x="61.4921%" y="645" width="0.3144%" height="15" fill="rgb(243,173,15)" fg:x="67091" fg:w="343"/><text x="61.7421%" y="655.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (343 samples, 0.31%)</title><rect x="61.4921%" y="629" width="0.3144%" height="15" fill="rgb(228,69,28)" fg:x="67091" fg:w="343"/><text x="61.7421%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (343 samples, 0.31%)</title><rect x="61.4921%" y="613" width="0.3144%" height="15" fill="rgb(212,51,22)" fg:x="67091" fg:w="343"/><text x="61.7421%" y="623.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::FromIterator&lt;(K,V)&gt; for halfbrown::HashMap&lt;K,V,S&gt;&gt;::from_iter (343 samples, 0.31%)</title><rect x="61.4921%" y="597" width="0.3144%" height="15" fill="rgb(227,113,0)" fg:x="67091" fg:w="343"/><text x="61.7421%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (343 samples, 0.31%)</title><rect x="61.4921%" y="581" width="0.3144%" height="15" fill="rgb(252,84,27)" fg:x="67091" fg:w="343"/><text x="61.7421%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (343 samples, 0.31%)</title><rect x="61.4921%" y="565" width="0.3144%" height="15" fill="rgb(223,145,39)" fg:x="67091" fg:w="343"/><text x="61.7421%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (297 samples, 0.27%)</title><rect x="61.5343%" y="549" width="0.2722%" height="15" fill="rgb(239,219,30)" fg:x="67137" fg:w="297"/><text x="61.7843%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt; (197 samples, 0.18%)</title><rect x="61.6260%" y="533" width="0.1806%" height="15" fill="rgb(224,196,39)" fg:x="67237" fg:w="197"/><text x="61.8760%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (197 samples, 0.18%)</title><rect x="61.6260%" y="517" width="0.1806%" height="15" fill="rgb(205,35,43)" fg:x="67237" fg:w="197"/><text x="61.8760%" y="527.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (197 samples, 0.18%)</title><rect x="61.6260%" y="501" width="0.1806%" height="15" fill="rgb(228,201,21)" fg:x="67237" fg:w="197"/><text x="61.8760%" y="511.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (187 samples, 0.17%)</title><rect x="61.6351%" y="485" width="0.1714%" height="15" fill="rgb(237,118,16)" fg:x="67247" fg:w="187"/><text x="61.8851%" y="495.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (178 samples, 0.16%)</title><rect x="61.6434%" y="469" width="0.1631%" height="15" fill="rgb(241,17,19)" fg:x="67256" fg:w="178"/><text x="61.8934%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (178 samples, 0.16%)</title><rect x="61.6434%" y="453" width="0.1631%" height="15" fill="rgb(214,10,25)" fg:x="67256" fg:w="178"/><text x="61.8934%" y="463.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (178 samples, 0.16%)</title><rect x="61.6434%" y="437" width="0.1631%" height="15" fill="rgb(238,37,29)" fg:x="67256" fg:w="178"/><text x="61.8934%" y="447.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="61.8129%" y="325" width="0.0119%" height="15" fill="rgb(253,83,25)" fg:x="67441" fg:w="13"/><text x="62.0629%" y="335.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="61.8248%" y="325" width="0.0110%" height="15" fill="rgb(234,192,12)" fg:x="67454" fg:w="12"/><text x="62.0748%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::empty (36 samples, 0.03%)</title><rect x="61.8523%" y="309" width="0.0330%" height="15" fill="rgb(241,216,45)" fg:x="67484" fg:w="36"/><text x="62.1023%" y="319.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (36 samples, 0.03%)</title><rect x="61.8523%" y="293" width="0.0330%" height="15" fill="rgb(242,22,33)" fg:x="67484" fg:w="36"/><text x="62.1023%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (318 samples, 0.29%)</title><rect x="61.8129%" y="357" width="0.2915%" height="15" fill="rgb(231,105,49)" fg:x="67441" fg:w="318"/><text x="62.0629%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (318 samples, 0.29%)</title><rect x="61.8129%" y="341" width="0.2915%" height="15" fill="rgb(218,204,15)" fg:x="67441" fg:w="318"/><text x="62.0629%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (293 samples, 0.27%)</title><rect x="61.8358%" y="325" width="0.2685%" height="15" fill="rgb(235,138,41)" fg:x="67466" fg:w="293"/><text x="62.0858%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::take (239 samples, 0.22%)</title><rect x="61.8853%" y="309" width="0.2191%" height="15" fill="rgb(246,0,9)" fg:x="67520" fg:w="239"/><text x="62.1353%" y="319.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (239 samples, 0.22%)</title><rect x="61.8853%" y="293" width="0.2191%" height="15" fill="rgb(210,74,4)" fg:x="67520" fg:w="239"/><text x="62.1353%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (332 samples, 0.30%)</title><rect x="61.8065%" y="661" width="0.3043%" height="15" fill="rgb(250,60,41)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (332 samples, 0.30%)</title><rect x="61.8065%" y="645" width="0.3043%" height="15" fill="rgb(220,115,12)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (332 samples, 0.30%)</title><rect x="61.8065%" y="629" width="0.3043%" height="15" fill="rgb(237,100,13)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="639.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (332 samples, 0.30%)</title><rect x="61.8065%" y="613" width="0.3043%" height="15" fill="rgb(213,55,26)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="623.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (332 samples, 0.30%)</title><rect x="61.8065%" y="597" width="0.3043%" height="15" fill="rgb(216,17,4)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once (332 samples, 0.30%)</title><rect x="61.8065%" y="581" width="0.3043%" height="15" fill="rgb(220,153,47)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (332 samples, 0.30%)</title><rect x="61.8065%" y="565" width="0.3043%" height="15" fill="rgb(215,131,9)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="575.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (332 samples, 0.30%)</title><rect x="61.8065%" y="549" width="0.3043%" height="15" fill="rgb(233,46,42)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (332 samples, 0.30%)</title><rect x="61.8065%" y="533" width="0.3043%" height="15" fill="rgb(226,86,7)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (332 samples, 0.30%)</title><rect x="61.8065%" y="517" width="0.3043%" height="15" fill="rgb(239,226,21)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (332 samples, 0.30%)</title><rect x="61.8065%" y="501" width="0.3043%" height="15" fill="rgb(244,137,22)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (332 samples, 0.30%)</title><rect x="61.8065%" y="485" width="0.3043%" height="15" fill="rgb(211,139,35)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (332 samples, 0.30%)</title><rect x="61.8065%" y="469" width="0.3043%" height="15" fill="rgb(214,62,50)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (332 samples, 0.30%)</title><rect x="61.8065%" y="453" width="0.3043%" height="15" fill="rgb(212,113,44)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (332 samples, 0.30%)</title><rect x="61.8065%" y="437" width="0.3043%" height="15" fill="rgb(226,150,43)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="447.50"></text></g><g><title>alloc::alloc::alloc (332 samples, 0.30%)</title><rect x="61.8065%" y="421" width="0.3043%" height="15" fill="rgb(250,71,37)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="431.50"></text></g><g><title>__rg_alloc (332 samples, 0.30%)</title><rect x="61.8065%" y="405" width="0.3043%" height="15" fill="rgb(219,76,19)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="415.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (332 samples, 0.30%)</title><rect x="61.8065%" y="389" width="0.3043%" height="15" fill="rgb(250,39,11)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="399.50"></text></g><g><title>rust_alloc (332 samples, 0.30%)</title><rect x="61.8065%" y="373" width="0.3043%" height="15" fill="rgb(230,64,31)" fg:x="67434" fg:w="332"/><text x="62.0565%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (35 samples, 0.03%)</title><rect x="62.1108%" y="645" width="0.0321%" height="15" fill="rgb(208,222,23)" fg:x="67766" fg:w="35"/><text x="62.3608%" y="655.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (35 samples, 0.03%)</title><rect x="62.1108%" y="629" width="0.0321%" height="15" fill="rgb(227,125,18)" fg:x="67766" fg:w="35"/><text x="62.3608%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (646 samples, 0.59%)</title><rect x="62.1741%" y="629" width="0.5921%" height="15" fill="rgb(234,210,9)" fg:x="67835" fg:w="646"/><text x="62.4241%" y="639.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="62.7881%" y="581" width="0.0101%" height="15" fill="rgb(217,127,24)" fg:x="68505" fg:w="11"/><text x="63.0381%" y="591.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="62.7881%" y="565" width="0.0101%" height="15" fill="rgb(239,141,48)" fg:x="68505" fg:w="11"/><text x="63.0381%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (17 samples, 0.02%)</title><rect x="62.8028%" y="565" width="0.0156%" height="15" fill="rgb(227,109,8)" fg:x="68521" fg:w="17"/><text x="63.0528%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (17 samples, 0.02%)</title><rect x="62.8028%" y="549" width="0.0156%" height="15" fill="rgb(235,184,23)" fg:x="68521" fg:w="17"/><text x="63.0528%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (17 samples, 0.02%)</title><rect x="62.8028%" y="533" width="0.0156%" height="15" fill="rgb(227,226,48)" fg:x="68521" fg:w="17"/><text x="63.0528%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="62.8028%" y="517" width="0.0156%" height="15" fill="rgb(206,150,11)" fg:x="68521" fg:w="17"/><text x="63.0528%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="62.8028%" y="501" width="0.0156%" height="15" fill="rgb(254,2,33)" fg:x="68521" fg:w="17"/><text x="63.0528%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (113 samples, 0.10%)</title><rect x="62.8184%" y="565" width="0.1036%" height="15" fill="rgb(243,160,20)" fg:x="68538" fg:w="113"/><text x="63.0684%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (113 samples, 0.10%)</title><rect x="62.8184%" y="549" width="0.1036%" height="15" fill="rgb(218,208,30)" fg:x="68538" fg:w="113"/><text x="63.0684%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (103 samples, 0.09%)</title><rect x="62.8276%" y="533" width="0.0944%" height="15" fill="rgb(224,120,49)" fg:x="68548" fg:w="103"/><text x="63.0776%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (90 samples, 0.08%)</title><rect x="62.8395%" y="517" width="0.0825%" height="15" fill="rgb(246,12,2)" fg:x="68561" fg:w="90"/><text x="63.0895%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (90 samples, 0.08%)</title><rect x="62.8395%" y="501" width="0.0825%" height="15" fill="rgb(236,117,3)" fg:x="68561" fg:w="90"/><text x="63.0895%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (90 samples, 0.08%)</title><rect x="62.8395%" y="485" width="0.0825%" height="15" fill="rgb(216,128,52)" fg:x="68561" fg:w="90"/><text x="63.0895%" y="495.50"></text></g><g><title>snmalloc::CDLLNodeBase&lt;snmalloc::CDLLNode&lt;snmalloc::CapPtrCBChunk&gt;, snmalloc::CapPtrCBChunk&gt;::is_empty (12 samples, 0.01%)</title><rect x="62.9229%" y="549" width="0.0110%" height="15" fill="rgb(246,145,19)" fg:x="68652" fg:w="12"/><text x="63.1729%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="62.9220%" y="565" width="0.0284%" height="15" fill="rgb(222,11,46)" fg:x="68651" fg:w="31"/><text x="63.1720%" y="575.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (18 samples, 0.02%)</title><rect x="62.9339%" y="549" width="0.0165%" height="15" fill="rgb(245,82,36)" fg:x="68664" fg:w="18"/><text x="63.1839%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (33 samples, 0.03%)</title><rect x="62.9504%" y="565" width="0.0302%" height="15" fill="rgb(250,73,51)" fg:x="68682" fg:w="33"/><text x="63.2004%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="62.9540%" y="549" width="0.0266%" height="15" fill="rgb(221,189,23)" fg:x="68686" fg:w="29"/><text x="63.2040%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="62.9586%" y="533" width="0.0220%" height="15" fill="rgb(210,33,7)" fg:x="68691" fg:w="24"/><text x="63.2086%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="62.9650%" y="517" width="0.0156%" height="15" fill="rgb(210,107,22)" fg:x="68698" fg:w="17"/><text x="63.2150%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (16 samples, 0.01%)</title><rect x="62.9660%" y="501" width="0.0147%" height="15" fill="rgb(222,116,37)" fg:x="68699" fg:w="16"/><text x="63.2160%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (34 samples, 0.03%)</title><rect x="62.9806%" y="565" width="0.0312%" height="15" fill="rgb(254,17,48)" fg:x="68715" fg:w="34"/><text x="63.2306%" y="575.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (34 samples, 0.03%)</title><rect x="62.9806%" y="549" width="0.0312%" height="15" fill="rgb(224,36,32)" fg:x="68715" fg:w="34"/><text x="63.2306%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (443 samples, 0.41%)</title><rect x="62.7790%" y="613" width="0.4060%" height="15" fill="rgb(232,90,46)" fg:x="68495" fg:w="443"/><text x="63.0290%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (443 samples, 0.41%)</title><rect x="62.7790%" y="597" width="0.4060%" height="15" fill="rgb(241,66,40)" fg:x="68495" fg:w="443"/><text x="63.0290%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (422 samples, 0.39%)</title><rect x="62.7982%" y="581" width="0.3868%" height="15" fill="rgb(249,184,29)" fg:x="68516" fg:w="422"/><text x="63.0482%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (189 samples, 0.17%)</title><rect x="63.0118%" y="565" width="0.1732%" height="15" fill="rgb(231,181,1)" fg:x="68749" fg:w="189"/><text x="63.2618%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (189 samples, 0.17%)</title><rect x="63.0118%" y="549" width="0.1732%" height="15" fill="rgb(224,94,2)" fg:x="68749" fg:w="189"/><text x="63.2618%" y="559.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (3,820 samples, 3.50%)</title><rect x="59.6966%" y="1013" width="3.5012%" height="15" fill="rgb(229,170,15)" fg:x="65132" fg:w="3820"/><text x="59.9466%" y="1023.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,861 samples, 1.71%)</title><rect x="61.4921%" y="997" width="1.7057%" height="15" fill="rgb(240,127,35)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="1007.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,861 samples, 1.71%)</title><rect x="61.4921%" y="981" width="1.7057%" height="15" fill="rgb(248,196,34)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="991.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,861 samples, 1.71%)</title><rect x="61.4921%" y="965" width="1.7057%" height="15" fill="rgb(236,137,7)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="975.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,861 samples, 1.71%)</title><rect x="61.4921%" y="949" width="1.7057%" height="15" fill="rgb(235,127,16)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="959.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,861 samples, 1.71%)</title><rect x="61.4921%" y="933" width="1.7057%" height="15" fill="rgb(250,192,54)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,861 samples, 1.71%)</title><rect x="61.4921%" y="917" width="1.7057%" height="15" fill="rgb(218,98,20)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="927.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,861 samples, 1.71%)</title><rect x="61.4921%" y="901" width="1.7057%" height="15" fill="rgb(230,176,47)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1,861 samples, 1.71%)</title><rect x="61.4921%" y="885" width="1.7057%" height="15" fill="rgb(244,2,33)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="895.50"></text></g><g><title>std::panicking::try (1,861 samples, 1.71%)</title><rect x="61.4921%" y="869" width="1.7057%" height="15" fill="rgb(231,100,17)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="879.50"></text></g><g><title>std::panicking::try::do_call (1,861 samples, 1.71%)</title><rect x="61.4921%" y="853" width="1.7057%" height="15" fill="rgb(245,23,12)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,861 samples, 1.71%)</title><rect x="61.4921%" y="837" width="1.7057%" height="15" fill="rgb(249,55,22)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,861 samples, 1.71%)</title><rect x="61.4921%" y="821" width="1.7057%" height="15" fill="rgb(207,134,9)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="831.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,861 samples, 1.71%)</title><rect x="61.4921%" y="805" width="1.7057%" height="15" fill="rgb(218,134,0)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="815.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,861 samples, 1.71%)</title><rect x="61.4921%" y="789" width="1.7057%" height="15" fill="rgb(213,212,33)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,861 samples, 1.71%)</title><rect x="61.4921%" y="773" width="1.7057%" height="15" fill="rgb(252,106,18)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,861 samples, 1.71%)</title><rect x="61.4921%" y="757" width="1.7057%" height="15" fill="rgb(208,126,42)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="767.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,861 samples, 1.71%)</title><rect x="61.4921%" y="741" width="1.7057%" height="15" fill="rgb(246,175,29)" fg:x="67091" fg:w="1861"/><text x="61.7421%" y="751.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,518 samples, 1.39%)</title><rect x="61.8065%" y="725" width="1.3913%" height="15" fill="rgb(215,13,50)" fg:x="67434" fg:w="1518"/><text x="62.0565%" y="735.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,518 samples, 1.39%)</title><rect x="61.8065%" y="709" width="1.3913%" height="15" fill="rgb(216,172,15)" fg:x="67434" fg:w="1518"/><text x="62.0565%" y="719.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,518 samples, 1.39%)</title><rect x="61.8065%" y="693" width="1.3913%" height="15" fill="rgb(212,103,13)" fg:x="67434" fg:w="1518"/><text x="62.0565%" y="703.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,518 samples, 1.39%)</title><rect x="61.8065%" y="677" width="1.3913%" height="15" fill="rgb(231,171,36)" fg:x="67434" fg:w="1518"/><text x="62.0565%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,186 samples, 1.09%)</title><rect x="62.1108%" y="661" width="1.0870%" height="15" fill="rgb(250,123,20)" fg:x="67766" fg:w="1186"/><text x="62.3608%" y="671.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (1,151 samples, 1.05%)</title><rect x="62.1429%" y="645" width="1.0549%" height="15" fill="rgb(212,53,50)" fg:x="67801" fg:w="1151"/><text x="62.3929%" y="655.50"></text></g><g><title>rust_alloc (464 samples, 0.43%)</title><rect x="62.7726%" y="629" width="0.4253%" height="15" fill="rgb(243,54,12)" fg:x="68488" fg:w="464"/><text x="63.0226%" y="639.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="63.1850%" y="613" width="0.0128%" height="15" fill="rgb(234,101,34)" fg:x="68938" fg:w="14"/><text x="63.4350%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="64.8440%" y="677" width="0.0128%" height="15" fill="rgb(254,67,22)" fg:x="70748" fg:w="14"/><text x="65.0940%" y="687.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (14 samples, 0.01%)</title><rect x="64.8440%" y="661" width="0.0128%" height="15" fill="rgb(250,35,47)" fg:x="70748" fg:w="14"/><text x="65.0940%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="64.9356%" y="373" width="0.0137%" height="15" fill="rgb(226,126,38)" fg:x="70848" fg:w="15"/><text x="65.1856%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (61 samples, 0.06%)</title><rect x="64.9356%" y="405" width="0.0559%" height="15" fill="rgb(216,138,53)" fg:x="70848" fg:w="61"/><text x="65.1856%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (61 samples, 0.06%)</title><rect x="64.9356%" y="389" width="0.0559%" height="15" fill="rgb(246,199,43)" fg:x="70848" fg:w="61"/><text x="65.1856%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (46 samples, 0.04%)</title><rect x="64.9494%" y="373" width="0.0422%" height="15" fill="rgb(232,125,11)" fg:x="70863" fg:w="46"/><text x="65.1994%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (39 samples, 0.04%)</title><rect x="64.9558%" y="357" width="0.0357%" height="15" fill="rgb(218,219,45)" fg:x="70870" fg:w="39"/><text x="65.2058%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (39 samples, 0.04%)</title><rect x="64.9558%" y="341" width="0.0357%" height="15" fill="rgb(216,102,54)" fg:x="70870" fg:w="39"/><text x="65.2058%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (39 samples, 0.04%)</title><rect x="64.9558%" y="325" width="0.0357%" height="15" fill="rgb(250,228,7)" fg:x="70870" fg:w="39"/><text x="65.2058%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::empty (65 samples, 0.06%)</title><rect x="65.0007%" y="405" width="0.0596%" height="15" fill="rgb(226,125,25)" fg:x="70919" fg:w="65"/><text x="65.2507%" y="415.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (65 samples, 0.06%)</title><rect x="65.0007%" y="389" width="0.0596%" height="15" fill="rgb(224,165,27)" fg:x="70919" fg:w="65"/><text x="65.2507%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (712 samples, 0.65%)</title><rect x="64.9044%" y="453" width="0.6526%" height="15" fill="rgb(233,86,3)" fg:x="70814" fg:w="712"/><text x="65.1544%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (699 samples, 0.64%)</title><rect x="64.9164%" y="437" width="0.6407%" height="15" fill="rgb(228,116,20)" fg:x="70827" fg:w="699"/><text x="65.1664%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (687 samples, 0.63%)</title><rect x="64.9274%" y="421" width="0.6297%" height="15" fill="rgb(209,192,17)" fg:x="70839" fg:w="687"/><text x="65.1774%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (542 samples, 0.50%)</title><rect x="65.0603%" y="405" width="0.4968%" height="15" fill="rgb(224,88,34)" fg:x="70984" fg:w="542"/><text x="65.3103%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (542 samples, 0.50%)</title><rect x="65.0603%" y="389" width="0.4968%" height="15" fill="rgb(233,38,6)" fg:x="70984" fg:w="542"/><text x="65.3103%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (773 samples, 0.71%)</title><rect x="64.8568%" y="597" width="0.7085%" height="15" fill="rgb(212,59,30)" fg:x="70762" fg:w="773"/><text x="65.1068%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (773 samples, 0.71%)</title><rect x="64.8568%" y="581" width="0.7085%" height="15" fill="rgb(213,80,3)" fg:x="70762" fg:w="773"/><text x="65.1068%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (768 samples, 0.70%)</title><rect x="64.8614%" y="565" width="0.7039%" height="15" fill="rgb(251,178,7)" fg:x="70767" fg:w="768"/><text x="65.1114%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (768 samples, 0.70%)</title><rect x="64.8614%" y="549" width="0.7039%" height="15" fill="rgb(213,154,26)" fg:x="70767" fg:w="768"/><text x="65.1114%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (768 samples, 0.70%)</title><rect x="64.8614%" y="533" width="0.7039%" height="15" fill="rgb(238,165,49)" fg:x="70767" fg:w="768"/><text x="65.1114%" y="543.50"></text></g><g><title>alloc::alloc::alloc (762 samples, 0.70%)</title><rect x="64.8669%" y="517" width="0.6984%" height="15" fill="rgb(248,91,46)" fg:x="70773" fg:w="762"/><text x="65.1169%" y="527.50"></text></g><g><title>__rg_alloc (762 samples, 0.70%)</title><rect x="64.8669%" y="501" width="0.6984%" height="15" fill="rgb(244,21,52)" fg:x="70773" fg:w="762"/><text x="65.1169%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (762 samples, 0.70%)</title><rect x="64.8669%" y="485" width="0.6984%" height="15" fill="rgb(247,122,20)" fg:x="70773" fg:w="762"/><text x="65.1169%" y="495.50"></text></g><g><title>rust_alloc (734 samples, 0.67%)</title><rect x="64.8925%" y="469" width="0.6727%" height="15" fill="rgb(218,27,9)" fg:x="70801" fg:w="734"/><text x="65.1425%" y="479.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (905 samples, 0.83%)</title><rect x="64.8000%" y="709" width="0.8295%" height="15" fill="rgb(246,7,6)" fg:x="70700" fg:w="905"/><text x="65.0500%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (885 samples, 0.81%)</title><rect x="64.8183%" y="693" width="0.8111%" height="15" fill="rgb(227,135,54)" fg:x="70720" fg:w="885"/><text x="65.0683%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (843 samples, 0.77%)</title><rect x="64.8568%" y="677" width="0.7727%" height="15" fill="rgb(247,14,11)" fg:x="70762" fg:w="843"/><text x="65.1068%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (843 samples, 0.77%)</title><rect x="64.8568%" y="661" width="0.7727%" height="15" fill="rgb(206,149,34)" fg:x="70762" fg:w="843"/><text x="65.1068%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (843 samples, 0.77%)</title><rect x="64.8568%" y="645" width="0.7727%" height="15" fill="rgb(227,228,4)" fg:x="70762" fg:w="843"/><text x="65.1068%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (843 samples, 0.77%)</title><rect x="64.8568%" y="629" width="0.7727%" height="15" fill="rgb(238,218,28)" fg:x="70762" fg:w="843"/><text x="65.1068%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (843 samples, 0.77%)</title><rect x="64.8568%" y="613" width="0.7727%" height="15" fill="rgb(252,86,40)" fg:x="70762" fg:w="843"/><text x="65.1068%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (70 samples, 0.06%)</title><rect x="65.5653%" y="597" width="0.0642%" height="15" fill="rgb(251,225,11)" fg:x="71535" fg:w="70"/><text x="65.8153%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (70 samples, 0.06%)</title><rect x="65.5653%" y="581" width="0.0642%" height="15" fill="rgb(206,46,49)" fg:x="71535" fg:w="70"/><text x="65.8153%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (69 samples, 0.06%)</title><rect x="65.5662%" y="565" width="0.0632%" height="15" fill="rgb(245,128,24)" fg:x="71536" fg:w="69"/><text x="65.8162%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (35 samples, 0.03%)</title><rect x="65.6432%" y="693" width="0.0321%" height="15" fill="rgb(219,177,34)" fg:x="71620" fg:w="35"/><text x="65.8932%" y="703.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (11 samples, 0.01%)</title><rect x="65.6652%" y="677" width="0.0101%" height="15" fill="rgb(218,60,48)" fg:x="71644" fg:w="11"/><text x="65.9152%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (126 samples, 0.12%)</title><rect x="65.7037%" y="357" width="0.1155%" height="15" fill="rgb(221,11,5)" fg:x="71686" fg:w="126"/><text x="65.9537%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (126 samples, 0.12%)</title><rect x="65.7037%" y="341" width="0.1155%" height="15" fill="rgb(220,148,13)" fg:x="71686" fg:w="126"/><text x="65.9537%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (112 samples, 0.10%)</title><rect x="65.7165%" y="325" width="0.1027%" height="15" fill="rgb(210,16,3)" fg:x="71700" fg:w="112"/><text x="65.9665%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::take (97 samples, 0.09%)</title><rect x="65.7303%" y="309" width="0.0889%" height="15" fill="rgb(236,80,2)" fg:x="71715" fg:w="97"/><text x="65.9803%" y="319.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (97 samples, 0.09%)</title><rect x="65.7303%" y="293" width="0.0889%" height="15" fill="rgb(239,129,19)" fg:x="71715" fg:w="97"/><text x="65.9803%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (158 samples, 0.14%)</title><rect x="65.6798%" y="501" width="0.1448%" height="15" fill="rgb(220,106,35)" fg:x="71660" fg:w="158"/><text x="65.9298%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (158 samples, 0.14%)</title><rect x="65.6798%" y="485" width="0.1448%" height="15" fill="rgb(252,139,45)" fg:x="71660" fg:w="158"/><text x="65.9298%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (154 samples, 0.14%)</title><rect x="65.6835%" y="469" width="0.1411%" height="15" fill="rgb(229,8,36)" fg:x="71664" fg:w="154"/><text x="65.9335%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (154 samples, 0.14%)</title><rect x="65.6835%" y="453" width="0.1411%" height="15" fill="rgb(230,126,33)" fg:x="71664" fg:w="154"/><text x="65.9335%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (154 samples, 0.14%)</title><rect x="65.6835%" y="437" width="0.1411%" height="15" fill="rgb(239,140,21)" fg:x="71664" fg:w="154"/><text x="65.9335%" y="447.50"></text></g><g><title>alloc::alloc::alloc (152 samples, 0.14%)</title><rect x="65.6853%" y="421" width="0.1393%" height="15" fill="rgb(254,104,9)" fg:x="71666" fg:w="152"/><text x="65.9353%" y="431.50"></text></g><g><title>__rg_alloc (152 samples, 0.14%)</title><rect x="65.6853%" y="405" width="0.1393%" height="15" fill="rgb(239,52,14)" fg:x="71666" fg:w="152"/><text x="65.9353%" y="415.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (152 samples, 0.14%)</title><rect x="65.6853%" y="389" width="0.1393%" height="15" fill="rgb(208,227,44)" fg:x="71666" fg:w="152"/><text x="65.9353%" y="399.50"></text></g><g><title>rust_alloc (140 samples, 0.13%)</title><rect x="65.6963%" y="373" width="0.1283%" height="15" fill="rgb(246,18,19)" fg:x="71678" fg:w="140"/><text x="65.9463%" y="383.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (211 samples, 0.19%)</title><rect x="65.6753%" y="613" width="0.1934%" height="15" fill="rgb(235,228,25)" fg:x="71655" fg:w="211"/><text x="65.9253%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (211 samples, 0.19%)</title><rect x="65.6753%" y="597" width="0.1934%" height="15" fill="rgb(240,156,20)" fg:x="71655" fg:w="211"/><text x="65.9253%" y="607.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (206 samples, 0.19%)</title><rect x="65.6798%" y="581" width="0.1888%" height="15" fill="rgb(224,8,20)" fg:x="71660" fg:w="206"/><text x="65.9298%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (206 samples, 0.19%)</title><rect x="65.6798%" y="565" width="0.1888%" height="15" fill="rgb(214,12,52)" fg:x="71660" fg:w="206"/><text x="65.9298%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (206 samples, 0.19%)</title><rect x="65.6798%" y="549" width="0.1888%" height="15" fill="rgb(211,220,47)" fg:x="71660" fg:w="206"/><text x="65.9298%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (206 samples, 0.19%)</title><rect x="65.6798%" y="533" width="0.1888%" height="15" fill="rgb(250,173,5)" fg:x="71660" fg:w="206"/><text x="65.9298%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (206 samples, 0.19%)</title><rect x="65.6798%" y="517" width="0.1888%" height="15" fill="rgb(250,125,52)" fg:x="71660" fg:w="206"/><text x="65.9298%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (48 samples, 0.04%)</title><rect x="65.8247%" y="501" width="0.0440%" height="15" fill="rgb(209,133,18)" fg:x="71818" fg:w="48"/><text x="66.0747%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (43 samples, 0.04%)</title><rect x="65.8292%" y="485" width="0.0394%" height="15" fill="rgb(216,173,22)" fg:x="71823" fg:w="43"/><text x="66.0792%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned_erms (38 samples, 0.03%)</title><rect x="65.8338%" y="469" width="0.0348%" height="15" fill="rgb(205,3,22)" fg:x="71828" fg:w="38"/><text x="66.0838%" y="479.50"></text></g><g><title>aligned_size (22 samples, 0.02%)</title><rect x="65.9044%" y="469" width="0.0202%" height="15" fill="rgb(248,22,20)" fg:x="71905" fg:w="22"/><text x="66.1544%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (171 samples, 0.16%)</title><rect x="65.9246%" y="469" width="0.1567%" height="15" fill="rgb(233,6,29)" fg:x="71927" fg:w="171"/><text x="66.1746%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (170 samples, 0.16%)</title><rect x="65.9255%" y="453" width="0.1558%" height="15" fill="rgb(240,22,54)" fg:x="71928" fg:w="170"/><text x="66.1755%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (157 samples, 0.14%)</title><rect x="65.9374%" y="437" width="0.1439%" height="15" fill="rgb(231,133,32)" fg:x="71941" fg:w="157"/><text x="66.1874%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (142 samples, 0.13%)</title><rect x="65.9511%" y="421" width="0.1301%" height="15" fill="rgb(248,193,4)" fg:x="71956" fg:w="142"/><text x="66.2011%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (142 samples, 0.13%)</title><rect x="65.9511%" y="405" width="0.1301%" height="15" fill="rgb(211,178,46)" fg:x="71956" fg:w="142"/><text x="66.2011%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (221 samples, 0.20%)</title><rect x="65.8815%" y="565" width="0.2026%" height="15" fill="rgb(224,5,42)" fg:x="71880" fg:w="221"/><text x="66.1315%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (221 samples, 0.20%)</title><rect x="65.8815%" y="549" width="0.2026%" height="15" fill="rgb(239,176,25)" fg:x="71880" fg:w="221"/><text x="66.1315%" y="559.50"></text></g><g><title>alloc::alloc::alloc (209 samples, 0.19%)</title><rect x="65.8925%" y="533" width="0.1916%" height="15" fill="rgb(245,187,50)" fg:x="71892" fg:w="209"/><text x="66.1425%" y="543.50"></text></g><g><title>__rg_alloc (209 samples, 0.19%)</title><rect x="65.8925%" y="517" width="0.1916%" height="15" fill="rgb(248,24,15)" fg:x="71892" fg:w="209"/><text x="66.1425%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (209 samples, 0.19%)</title><rect x="65.8925%" y="501" width="0.1916%" height="15" fill="rgb(205,166,13)" fg:x="71892" fg:w="209"/><text x="66.1425%" y="511.50"></text></g><g><title>rust_alloc (196 samples, 0.18%)</title><rect x="65.9044%" y="485" width="0.1796%" height="15" fill="rgb(208,114,23)" fg:x="71905" fg:w="196"/><text x="66.1544%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (236 samples, 0.22%)</title><rect x="65.8742%" y="613" width="0.2163%" height="15" fill="rgb(239,127,18)" fg:x="71872" fg:w="236"/><text x="66.1242%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (228 samples, 0.21%)</title><rect x="65.8815%" y="597" width="0.2090%" height="15" fill="rgb(219,154,28)" fg:x="71880" fg:w="228"/><text x="66.1315%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (228 samples, 0.21%)</title><rect x="65.8815%" y="581" width="0.2090%" height="15" fill="rgb(225,157,23)" fg:x="71880" fg:w="228"/><text x="66.1315%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (463 samples, 0.42%)</title><rect x="65.6753%" y="629" width="0.4244%" height="15" fill="rgb(219,8,6)" fg:x="71655" fg:w="463"/><text x="65.9253%" y="639.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,981 samples, 1.82%)</title><rect x="64.2959%" y="725" width="1.8157%" height="15" fill="rgb(212,47,6)" fg:x="70150" fg:w="1981"/><text x="64.5459%" y="735.50">&lt;..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (526 samples, 0.48%)</title><rect x="65.6294%" y="709" width="0.4821%" height="15" fill="rgb(224,190,4)" fg:x="71605" fg:w="526"/><text x="65.8794%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (476 samples, 0.44%)</title><rect x="65.6753%" y="693" width="0.4363%" height="15" fill="rgb(239,183,29)" fg:x="71655" fg:w="476"/><text x="65.9253%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (476 samples, 0.44%)</title><rect x="65.6753%" y="677" width="0.4363%" height="15" fill="rgb(213,57,7)" fg:x="71655" fg:w="476"/><text x="65.9253%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (476 samples, 0.44%)</title><rect x="65.6753%" y="661" width="0.4363%" height="15" fill="rgb(216,148,1)" fg:x="71655" fg:w="476"/><text x="65.9253%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (476 samples, 0.44%)</title><rect x="65.6753%" y="645" width="0.4363%" height="15" fill="rgb(236,182,29)" fg:x="71655" fg:w="476"/><text x="65.9253%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (13 samples, 0.01%)</title><rect x="66.0996%" y="629" width="0.0119%" height="15" fill="rgb(244,120,48)" fg:x="72118" fg:w="13"/><text x="66.3496%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (69 samples, 0.06%)</title><rect x="66.2289%" y="693" width="0.0632%" height="15" fill="rgb(206,71,34)" fg:x="72259" fg:w="69"/><text x="66.4789%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (36 samples, 0.03%)</title><rect x="66.2591%" y="677" width="0.0330%" height="15" fill="rgb(242,32,6)" fg:x="72292" fg:w="36"/><text x="66.5091%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="66.2976%" y="533" width="0.0137%" height="15" fill="rgb(241,35,3)" fg:x="72334" fg:w="15"/><text x="66.5476%" y="543.50"></text></g><g><title>rust_alloc (57 samples, 0.05%)</title><rect x="66.3242%" y="469" width="0.0522%" height="15" fill="rgb(222,62,19)" fg:x="72363" fg:w="57"/><text x="66.5742%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (23 samples, 0.02%)</title><rect x="66.4067%" y="341" width="0.0211%" height="15" fill="rgb(223,110,41)" fg:x="72453" fg:w="23"/><text x="66.6567%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (23 samples, 0.02%)</title><rect x="66.4067%" y="325" width="0.0211%" height="15" fill="rgb(208,224,4)" fg:x="72453" fg:w="23"/><text x="66.6567%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (47 samples, 0.04%)</title><rect x="66.3984%" y="389" width="0.0431%" height="15" fill="rgb(241,137,19)" fg:x="72444" fg:w="47"/><text x="66.6484%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (47 samples, 0.04%)</title><rect x="66.3984%" y="373" width="0.0431%" height="15" fill="rgb(244,24,17)" fg:x="72444" fg:w="47"/><text x="66.6484%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (39 samples, 0.04%)</title><rect x="66.4058%" y="357" width="0.0357%" height="15" fill="rgb(245,178,49)" fg:x="72452" fg:w="39"/><text x="66.6558%" y="367.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="66.4278%" y="341" width="0.0137%" height="15" fill="rgb(219,160,38)" fg:x="72476" fg:w="15"/><text x="66.6778%" y="351.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="66.4278%" y="325" width="0.0137%" height="15" fill="rgb(228,137,14)" fg:x="72476" fg:w="15"/><text x="66.6778%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (69 samples, 0.06%)</title><rect x="66.3966%" y="405" width="0.0632%" height="15" fill="rgb(237,134,11)" fg:x="72442" fg:w="69"/><text x="66.6466%" y="415.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (20 samples, 0.02%)</title><rect x="66.4415%" y="389" width="0.0183%" height="15" fill="rgb(211,126,44)" fg:x="72491" fg:w="20"/><text x="66.6915%" y="399.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (20 samples, 0.02%)</title><rect x="66.4415%" y="373" width="0.0183%" height="15" fill="rgb(226,171,33)" fg:x="72491" fg:w="20"/><text x="66.6915%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (20 samples, 0.02%)</title><rect x="66.4415%" y="357" width="0.0183%" height="15" fill="rgb(253,99,13)" fg:x="72491" fg:w="20"/><text x="66.6915%" y="367.50"></text></g><g><title>snmalloc::bits::align_down (20 samples, 0.02%)</title><rect x="66.4415%" y="341" width="0.0183%" height="15" fill="rgb(244,48,7)" fg:x="72491" fg:w="20"/><text x="66.6915%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (104 samples, 0.10%)</title><rect x="66.3883%" y="421" width="0.0953%" height="15" fill="rgb(244,217,54)" fg:x="72433" fg:w="104"/><text x="66.6383%" y="431.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (21 samples, 0.02%)</title><rect x="66.4644%" y="405" width="0.0192%" height="15" fill="rgb(224,15,18)" fg:x="72516" fg:w="21"/><text x="66.7144%" y="415.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (21 samples, 0.02%)</title><rect x="66.4644%" y="389" width="0.0192%" height="15" fill="rgb(244,99,12)" fg:x="72516" fg:w="21"/><text x="66.7144%" y="399.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (21 samples, 0.02%)</title><rect x="66.4644%" y="373" width="0.0192%" height="15" fill="rgb(233,226,8)" fg:x="72516" fg:w="21"/><text x="66.7144%" y="383.50"></text></g><g><title>snmalloc::bits::align_down (21 samples, 0.02%)</title><rect x="66.4644%" y="357" width="0.0192%" height="15" fill="rgb(229,211,3)" fg:x="72516" fg:w="21"/><text x="66.7144%" y="367.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (54 samples, 0.05%)</title><rect x="66.5157%" y="405" width="0.0495%" height="15" fill="rgb(216,140,21)" fg:x="72572" fg:w="54"/><text x="66.7657%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (541 samples, 0.50%)</title><rect x="66.3883%" y="453" width="0.4959%" height="15" fill="rgb(234,122,30)" fg:x="72433" fg:w="541"/><text x="66.6383%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (541 samples, 0.50%)</title><rect x="66.3883%" y="437" width="0.4959%" height="15" fill="rgb(236,25,46)" fg:x="72433" fg:w="541"/><text x="66.6383%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (437 samples, 0.40%)</title><rect x="66.4837%" y="421" width="0.4005%" height="15" fill="rgb(217,52,54)" fg:x="72537" fg:w="437"/><text x="66.7337%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (348 samples, 0.32%)</title><rect x="66.5652%" y="405" width="0.3190%" height="15" fill="rgb(222,29,26)" fg:x="72626" fg:w="348"/><text x="66.8152%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (348 samples, 0.32%)</title><rect x="66.5652%" y="389" width="0.3190%" height="15" fill="rgb(216,177,29)" fg:x="72626" fg:w="348"/><text x="66.8152%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (348 samples, 0.32%)</title><rect x="66.5652%" y="373" width="0.3190%" height="15" fill="rgb(247,136,51)" fg:x="72626" fg:w="348"/><text x="66.8152%" y="383.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (11 samples, 0.01%)</title><rect x="66.8961%" y="421" width="0.0101%" height="15" fill="rgb(231,47,47)" fg:x="72987" fg:w="11"/><text x="67.1461%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (11 samples, 0.01%)</title><rect x="66.8961%" y="405" width="0.0101%" height="15" fill="rgb(211,192,36)" fg:x="72987" fg:w="11"/><text x="67.1461%" y="415.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="66.8961%" y="389" width="0.0101%" height="15" fill="rgb(229,156,32)" fg:x="72987" fg:w="11"/><text x="67.1461%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (35 samples, 0.03%)</title><rect x="66.8842%" y="453" width="0.0321%" height="15" fill="rgb(248,213,20)" fg:x="72974" fg:w="35"/><text x="67.1342%" y="463.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (22 samples, 0.02%)</title><rect x="66.8961%" y="437" width="0.0202%" height="15" fill="rgb(217,64,7)" fg:x="72987" fg:w="22"/><text x="67.1461%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (21 samples, 0.02%)</title><rect x="66.9227%" y="405" width="0.0192%" height="15" fill="rgb(232,142,8)" fg:x="73016" fg:w="21"/><text x="67.1727%" y="415.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (16 samples, 0.01%)</title><rect x="66.9273%" y="389" width="0.0147%" height="15" fill="rgb(224,92,44)" fg:x="73021" fg:w="16"/><text x="67.1773%" y="399.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (11 samples, 0.01%)</title><rect x="66.9319%" y="373" width="0.0101%" height="15" fill="rgb(214,169,17)" fg:x="73026" fg:w="11"/><text x="67.1819%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (55 samples, 0.05%)</title><rect x="66.9163%" y="453" width="0.0504%" height="15" fill="rgb(210,59,37)" fg:x="73009" fg:w="55"/><text x="67.1663%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (52 samples, 0.05%)</title><rect x="66.9190%" y="437" width="0.0477%" height="15" fill="rgb(214,116,48)" fg:x="73012" fg:w="52"/><text x="67.1690%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.04%)</title><rect x="66.9218%" y="421" width="0.0449%" height="15" fill="rgb(244,191,6)" fg:x="73015" fg:w="49"/><text x="67.1718%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.02%)</title><rect x="66.9419%" y="405" width="0.0247%" height="15" fill="rgb(241,50,52)" fg:x="73037" fg:w="27"/><text x="67.1919%" y="415.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (24 samples, 0.02%)</title><rect x="66.9447%" y="389" width="0.0220%" height="15" fill="rgb(236,75,39)" fg:x="73040" fg:w="24"/><text x="67.1947%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::empty (54 samples, 0.05%)</title><rect x="66.9667%" y="453" width="0.0495%" height="15" fill="rgb(236,99,0)" fg:x="73064" fg:w="54"/><text x="67.2167%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (54 samples, 0.05%)</title><rect x="66.9667%" y="437" width="0.0495%" height="15" fill="rgb(207,202,15)" fg:x="73064" fg:w="54"/><text x="67.2167%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,026 samples, 0.94%)</title><rect x="66.2921%" y="645" width="0.9404%" height="15" fill="rgb(233,207,14)" fg:x="72328" fg:w="1026"/><text x="66.5421%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,026 samples, 0.94%)</title><rect x="66.2921%" y="629" width="0.9404%" height="15" fill="rgb(226,27,51)" fg:x="72328" fg:w="1026"/><text x="66.5421%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,026 samples, 0.94%)</title><rect x="66.2921%" y="613" width="0.9404%" height="15" fill="rgb(206,104,42)" fg:x="72328" fg:w="1026"/><text x="66.5421%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,026 samples, 0.94%)</title><rect x="66.2921%" y="597" width="0.9404%" height="15" fill="rgb(212,225,4)" fg:x="72328" fg:w="1026"/><text x="66.5421%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,021 samples, 0.94%)</title><rect x="66.2967%" y="581" width="0.9358%" height="15" fill="rgb(233,96,42)" fg:x="72333" fg:w="1021"/><text x="66.5467%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1,020 samples, 0.93%)</title><rect x="66.2976%" y="565" width="0.9349%" height="15" fill="rgb(229,21,32)" fg:x="72334" fg:w="1020"/><text x="66.5476%" y="575.50"></text></g><g><title>__rg_alloc (1,020 samples, 0.93%)</title><rect x="66.2976%" y="549" width="0.9349%" height="15" fill="rgb(226,216,24)" fg:x="72334" fg:w="1020"/><text x="66.5476%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,005 samples, 0.92%)</title><rect x="66.3114%" y="533" width="0.9211%" height="15" fill="rgb(221,163,17)" fg:x="72349" fg:w="1005"/><text x="66.5614%" y="543.50"></text></g><g><title>rust_alloc (998 samples, 0.91%)</title><rect x="66.3178%" y="517" width="0.9147%" height="15" fill="rgb(216,216,42)" fg:x="72356" fg:w="998"/><text x="66.5678%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (991 samples, 0.91%)</title><rect x="66.3242%" y="501" width="0.9083%" height="15" fill="rgb(240,118,7)" fg:x="72363" fg:w="991"/><text x="66.5742%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (991 samples, 0.91%)</title><rect x="66.3242%" y="485" width="0.9083%" height="15" fill="rgb(221,67,37)" fg:x="72363" fg:w="991"/><text x="66.5742%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (930 samples, 0.85%)</title><rect x="66.3801%" y="469" width="0.8524%" height="15" fill="rgb(241,32,44)" fg:x="72424" fg:w="930"/><text x="66.6301%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (236 samples, 0.22%)</title><rect x="67.0162%" y="453" width="0.2163%" height="15" fill="rgb(235,204,43)" fg:x="73118" fg:w="236"/><text x="67.2662%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (236 samples, 0.22%)</title><rect x="67.0162%" y="437" width="0.2163%" height="15" fill="rgb(213,116,10)" fg:x="73118" fg:w="236"/><text x="67.2662%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,476 samples, 1.35%)</title><rect x="66.2921%" y="661" width="1.3528%" height="15" fill="rgb(239,15,48)" fg:x="72328" fg:w="1476"/><text x="66.5421%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (450 samples, 0.41%)</title><rect x="67.2325%" y="645" width="0.4124%" height="15" fill="rgb(207,123,36)" fg:x="73354" fg:w="450"/><text x="67.4825%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (450 samples, 0.41%)</title><rect x="67.2325%" y="629" width="0.4124%" height="15" fill="rgb(209,103,30)" fg:x="73354" fg:w="450"/><text x="67.4825%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (438 samples, 0.40%)</title><rect x="67.2435%" y="613" width="0.4014%" height="15" fill="rgb(238,100,19)" fg:x="73366" fg:w="438"/><text x="67.4935%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,550 samples, 1.42%)</title><rect x="66.2289%" y="709" width="1.4206%" height="15" fill="rgb(244,30,14)" fg:x="72259" fg:w="1550"/><text x="66.4789%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,481 samples, 1.36%)</title><rect x="66.2921%" y="693" width="1.3574%" height="15" fill="rgb(249,174,6)" fg:x="72328" fg:w="1481"/><text x="66.5421%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1,481 samples, 1.36%)</title><rect x="66.2921%" y="677" width="1.3574%" height="15" fill="rgb(235,213,41)" fg:x="72328" fg:w="1481"/><text x="66.5421%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (4,871 samples, 4.46%)</title><rect x="63.1978%" y="981" width="4.4645%" height="15" fill="rgb(213,118,6)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="991.50">tremo..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,871 samples, 4.46%)</title><rect x="63.1978%" y="965" width="4.4645%" height="15" fill="rgb(235,44,51)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="975.50">&lt;asyn..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,871 samples, 4.46%)</title><rect x="63.1978%" y="949" width="4.4645%" height="15" fill="rgb(217,9,53)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="959.50">&lt;asyn..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (4,871 samples, 4.46%)</title><rect x="63.1978%" y="933" width="4.4645%" height="15" fill="rgb(237,172,34)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="943.50">&lt;core..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,871 samples, 4.46%)</title><rect x="63.1978%" y="917" width="4.4645%" height="15" fill="rgb(206,206,11)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="927.50">&lt;asyn..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (4,871 samples, 4.46%)</title><rect x="63.1978%" y="901" width="4.4645%" height="15" fill="rgb(214,149,29)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="911.50">async..</text></g><g><title>std::panic::catch_unwind (4,871 samples, 4.46%)</title><rect x="63.1978%" y="885" width="4.4645%" height="15" fill="rgb(208,123,3)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="895.50">std::..</text></g><g><title>std::panicking::try (4,871 samples, 4.46%)</title><rect x="63.1978%" y="869" width="4.4645%" height="15" fill="rgb(229,126,4)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="879.50">std::..</text></g><g><title>std::panicking::try::do_call (4,871 samples, 4.46%)</title><rect x="63.1978%" y="853" width="4.4645%" height="15" fill="rgb(222,92,36)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="863.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,871 samples, 4.46%)</title><rect x="63.1978%" y="837" width="4.4645%" height="15" fill="rgb(216,39,41)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="847.50">&lt;core..</text></g><g><title>core::ops::function::FnOnce::call_once (4,871 samples, 4.46%)</title><rect x="63.1978%" y="821" width="4.4645%" height="15" fill="rgb(253,127,28)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="831.50">core:..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (4,871 samples, 4.46%)</title><rect x="63.1978%" y="805" width="4.4645%" height="15" fill="rgb(249,152,51)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="815.50">async..</text></g><g><title>async_ffi::FfiContext::with_context (4,871 samples, 4.46%)</title><rect x="63.1978%" y="789" width="4.4645%" height="15" fill="rgb(209,123,42)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="799.50">async..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (4,871 samples, 4.46%)</title><rect x="63.1978%" y="773" width="4.4645%" height="15" fill="rgb(241,118,22)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="783.50">async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,871 samples, 4.46%)</title><rect x="63.1978%" y="757" width="4.4645%" height="15" fill="rgb(208,25,7)" fg:x="68952" fg:w="4871"/><text x="63.4478%" y="767.50">&lt;core..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (4,758 samples, 4.36%)</title><rect x="63.3014%" y="741" width="4.3609%" height="15" fill="rgb(243,144,39)" fg:x="69065" fg:w="4758"/><text x="63.5514%" y="751.50">&lt;trem..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,692 samples, 1.55%)</title><rect x="66.1115%" y="725" width="1.5508%" height="15" fill="rgb(250,50,5)" fg:x="72131" fg:w="1692"/><text x="66.3615%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="67.6495%" y="709" width="0.0128%" height="15" fill="rgb(207,67,11)" fg:x="73809" fg:w="14"/><text x="67.8995%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (14 samples, 0.01%)</title><rect x="67.6495%" y="693" width="0.0128%" height="15" fill="rgb(245,204,40)" fg:x="73809" fg:w="14"/><text x="67.8995%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="67.6770%" y="949" width="0.0192%" height="15" fill="rgb(238,228,24)" fg:x="73839" fg:w="21"/><text x="67.9270%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (15 samples, 0.01%)</title><rect x="67.9483%" y="933" width="0.0137%" height="15" fill="rgb(217,116,22)" fg:x="74135" fg:w="15"/><text x="68.1983%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11 samples, 0.01%)</title><rect x="67.9520%" y="917" width="0.0101%" height="15" fill="rgb(234,98,12)" fg:x="74139" fg:w="11"/><text x="68.2020%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 0.01%)</title><rect x="67.9520%" y="901" width="0.0101%" height="15" fill="rgb(242,170,50)" fg:x="74139" fg:w="11"/><text x="68.2020%" y="911.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (681 samples, 0.62%)</title><rect x="67.9694%" y="933" width="0.6242%" height="15" fill="rgb(235,7,5)" fg:x="74158" fg:w="681"/><text x="68.2194%" y="943.50"></text></g><g><title>core::ptr::read (641 samples, 0.59%)</title><rect x="68.0060%" y="917" width="0.5875%" height="15" fill="rgb(241,114,28)" fg:x="74198" fg:w="641"/><text x="68.2560%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (623 samples, 0.57%)</title><rect x="68.0225%" y="901" width="0.5710%" height="15" fill="rgb(246,112,42)" fg:x="74216" fg:w="623"/><text x="68.2725%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="68.5936%" y="933" width="0.0165%" height="15" fill="rgb(248,228,14)" fg:x="74839" fg:w="18"/><text x="68.8436%" y="943.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="68.6101%" y="933" width="0.0110%" height="15" fill="rgb(208,133,18)" fg:x="74857" fg:w="12"/><text x="68.8601%" y="943.50"></text></g><g><title>rust_alloc (29 samples, 0.03%)</title><rect x="68.6495%" y="629" width="0.0266%" height="15" fill="rgb(207,35,49)" fg:x="74900" fg:w="29"/><text x="68.8995%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="68.6889%" y="613" width="0.0275%" height="15" fill="rgb(205,68,36)" fg:x="74943" fg:w="30"/><text x="68.9389%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (30 samples, 0.03%)</title><rect x="68.6889%" y="597" width="0.0275%" height="15" fill="rgb(245,62,40)" fg:x="74943" fg:w="30"/><text x="68.9389%" y="607.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (24 samples, 0.02%)</title><rect x="68.6944%" y="581" width="0.0220%" height="15" fill="rgb(228,27,24)" fg:x="74949" fg:w="24"/><text x="68.9444%" y="591.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (17 samples, 0.02%)</title><rect x="68.7008%" y="565" width="0.0156%" height="15" fill="rgb(253,19,12)" fg:x="74956" fg:w="17"/><text x="68.9508%" y="575.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="68.7008%" y="549" width="0.0156%" height="15" fill="rgb(232,28,20)" fg:x="74956" fg:w="17"/><text x="68.9508%" y="559.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="68.7008%" y="533" width="0.0156%" height="15" fill="rgb(218,35,51)" fg:x="74956" fg:w="17"/><text x="68.9508%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::empty (55 samples, 0.05%)</title><rect x="68.7255%" y="613" width="0.0504%" height="15" fill="rgb(212,90,40)" fg:x="74983" fg:w="55"/><text x="68.9755%" y="623.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (55 samples, 0.05%)</title><rect x="68.7255%" y="597" width="0.0504%" height="15" fill="rgb(220,172,12)" fg:x="74983" fg:w="55"/><text x="68.9755%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (403 samples, 0.37%)</title><rect x="68.6495%" y="661" width="0.3694%" height="15" fill="rgb(226,159,20)" fg:x="74900" fg:w="403"/><text x="68.8995%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (403 samples, 0.37%)</title><rect x="68.6495%" y="645" width="0.3694%" height="15" fill="rgb(234,205,16)" fg:x="74900" fg:w="403"/><text x="68.8995%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (369 samples, 0.34%)</title><rect x="68.6806%" y="629" width="0.3382%" height="15" fill="rgb(207,9,39)" fg:x="74934" fg:w="369"/><text x="68.9306%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::take (265 samples, 0.24%)</title><rect x="68.7759%" y="613" width="0.2429%" height="15" fill="rgb(249,143,15)" fg:x="75038" fg:w="265"/><text x="69.0259%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (265 samples, 0.24%)</title><rect x="68.7759%" y="597" width="0.2429%" height="15" fill="rgb(253,133,29)" fg:x="75038" fg:w="265"/><text x="69.0259%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (439 samples, 0.40%)</title><rect x="68.6211%" y="805" width="0.4024%" height="15" fill="rgb(221,187,0)" fg:x="74869" fg:w="439"/><text x="68.8711%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (439 samples, 0.40%)</title><rect x="68.6211%" y="789" width="0.4024%" height="15" fill="rgb(205,204,26)" fg:x="74869" fg:w="439"/><text x="68.8711%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (430 samples, 0.39%)</title><rect x="68.6293%" y="773" width="0.3941%" height="15" fill="rgb(224,68,54)" fg:x="74878" fg:w="430"/><text x="68.8793%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (430 samples, 0.39%)</title><rect x="68.6293%" y="757" width="0.3941%" height="15" fill="rgb(209,67,4)" fg:x="74878" fg:w="430"/><text x="68.8793%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (430 samples, 0.39%)</title><rect x="68.6293%" y="741" width="0.3941%" height="15" fill="rgb(228,229,18)" fg:x="74878" fg:w="430"/><text x="68.8793%" y="751.50"></text></g><g><title>alloc::alloc::alloc (417 samples, 0.38%)</title><rect x="68.6412%" y="725" width="0.3822%" height="15" fill="rgb(231,89,13)" fg:x="74891" fg:w="417"/><text x="68.8912%" y="735.50"></text></g><g><title>__rg_alloc (417 samples, 0.38%)</title><rect x="68.6412%" y="709" width="0.3822%" height="15" fill="rgb(210,182,18)" fg:x="74891" fg:w="417"/><text x="68.8912%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (417 samples, 0.38%)</title><rect x="68.6412%" y="693" width="0.3822%" height="15" fill="rgb(240,105,2)" fg:x="74891" fg:w="417"/><text x="68.8912%" y="703.50"></text></g><g><title>rust_alloc (415 samples, 0.38%)</title><rect x="68.6431%" y="677" width="0.3804%" height="15" fill="rgb(207,170,50)" fg:x="74893" fg:w="415"/><text x="68.8931%" y="687.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (475 samples, 0.44%)</title><rect x="68.6211%" y="933" width="0.4354%" height="15" fill="rgb(232,133,24)" fg:x="74869" fg:w="475"/><text x="68.8711%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (475 samples, 0.44%)</title><rect x="68.6211%" y="917" width="0.4354%" height="15" fill="rgb(235,166,27)" fg:x="74869" fg:w="475"/><text x="68.8711%" y="927.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (475 samples, 0.44%)</title><rect x="68.6211%" y="901" width="0.4354%" height="15" fill="rgb(209,19,13)" fg:x="74869" fg:w="475"/><text x="68.8711%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (475 samples, 0.44%)</title><rect x="68.6211%" y="885" width="0.4354%" height="15" fill="rgb(226,79,39)" fg:x="74869" fg:w="475"/><text x="68.8711%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (475 samples, 0.44%)</title><rect x="68.6211%" y="869" width="0.4354%" height="15" fill="rgb(222,163,10)" fg:x="74869" fg:w="475"/><text x="68.8711%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (475 samples, 0.44%)</title><rect x="68.6211%" y="853" width="0.4354%" height="15" fill="rgb(214,44,19)" fg:x="74869" fg:w="475"/><text x="68.8711%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (475 samples, 0.44%)</title><rect x="68.6211%" y="837" width="0.4354%" height="15" fill="rgb(210,217,13)" fg:x="74869" fg:w="475"/><text x="68.8711%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (475 samples, 0.44%)</title><rect x="68.6211%" y="821" width="0.4354%" height="15" fill="rgb(237,61,54)" fg:x="74869" fg:w="475"/><text x="68.8711%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (36 samples, 0.03%)</title><rect x="69.0234%" y="805" width="0.0330%" height="15" fill="rgb(226,184,24)" fg:x="75308" fg:w="36"/><text x="69.2734%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 0.03%)</title><rect x="69.0234%" y="789" width="0.0330%" height="15" fill="rgb(223,226,4)" fg:x="75308" fg:w="36"/><text x="69.2734%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (27 samples, 0.02%)</title><rect x="69.0317%" y="773" width="0.0247%" height="15" fill="rgb(210,26,41)" fg:x="75317" fg:w="27"/><text x="69.2817%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (654 samples, 0.60%)</title><rect x="69.0564%" y="933" width="0.5994%" height="15" fill="rgb(220,221,6)" fg:x="75344" fg:w="654"/><text x="69.3064%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (354 samples, 0.32%)</title><rect x="69.6723%" y="917" width="0.3245%" height="15" fill="rgb(225,89,49)" fg:x="76016" fg:w="354"/><text x="69.9223%" y="927.50"></text></g><g><title>aligned_size (17 samples, 0.02%)</title><rect x="70.0032%" y="805" width="0.0156%" height="15" fill="rgb(218,70,45)" fg:x="76377" fg:w="17"/><text x="70.2532%" y="815.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (25 samples, 0.02%)</title><rect x="70.0509%" y="645" width="0.0229%" height="15" fill="rgb(238,166,21)" fg:x="76429" fg:w="25"/><text x="70.3009%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (25 samples, 0.02%)</title><rect x="70.0509%" y="629" width="0.0229%" height="15" fill="rgb(224,141,44)" fg:x="76429" fg:w="25"/><text x="70.3009%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (48 samples, 0.04%)</title><rect x="70.0454%" y="693" width="0.0440%" height="15" fill="rgb(230,12,49)" fg:x="76423" fg:w="48"/><text x="70.2954%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (48 samples, 0.04%)</title><rect x="70.0454%" y="677" width="0.0440%" height="15" fill="rgb(212,174,12)" fg:x="76423" fg:w="48"/><text x="70.2954%" y="687.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (48 samples, 0.04%)</title><rect x="70.0454%" y="661" width="0.0440%" height="15" fill="rgb(246,67,9)" fg:x="76423" fg:w="48"/><text x="70.2954%" y="671.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (17 samples, 0.02%)</title><rect x="70.0738%" y="645" width="0.0156%" height="15" fill="rgb(239,35,23)" fg:x="76454" fg:w="17"/><text x="70.3238%" y="655.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (17 samples, 0.02%)</title><rect x="70.0738%" y="629" width="0.0156%" height="15" fill="rgb(211,167,0)" fg:x="76454" fg:w="17"/><text x="70.3238%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (56 samples, 0.05%)</title><rect x="70.0454%" y="709" width="0.0513%" height="15" fill="rgb(225,119,45)" fg:x="76423" fg:w="56"/><text x="70.2954%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (86 samples, 0.08%)</title><rect x="70.0344%" y="725" width="0.0788%" height="15" fill="rgb(210,162,6)" fg:x="76411" fg:w="86"/><text x="70.2844%" y="735.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="70.0985%" y="709" width="0.0147%" height="15" fill="rgb(208,118,35)" fg:x="76481" fg:w="16"/><text x="70.3485%" y="719.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="70.0985%" y="693" width="0.0147%" height="15" fill="rgb(239,4,53)" fg:x="76481" fg:w="16"/><text x="70.3485%" y="703.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (16 samples, 0.01%)</title><rect x="70.0985%" y="677" width="0.0147%" height="15" fill="rgb(213,130,21)" fg:x="76481" fg:w="16"/><text x="70.3485%" y="687.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.01%)</title><rect x="70.0985%" y="661" width="0.0147%" height="15" fill="rgb(235,148,0)" fg:x="76481" fg:w="16"/><text x="70.3485%" y="671.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (57 samples, 0.05%)</title><rect x="70.1554%" y="709" width="0.0522%" height="15" fill="rgb(244,224,18)" fg:x="76543" fg:w="57"/><text x="70.4054%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (609 samples, 0.56%)</title><rect x="70.0344%" y="757" width="0.5582%" height="15" fill="rgb(211,214,4)" fg:x="76411" fg:w="609"/><text x="70.2844%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (609 samples, 0.56%)</title><rect x="70.0344%" y="741" width="0.5582%" height="15" fill="rgb(206,119,25)" fg:x="76411" fg:w="609"/><text x="70.2844%" y="751.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (523 samples, 0.48%)</title><rect x="70.1132%" y="725" width="0.4794%" height="15" fill="rgb(243,93,47)" fg:x="76497" fg:w="523"/><text x="70.3632%" y="735.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (420 samples, 0.38%)</title><rect x="70.2076%" y="709" width="0.3850%" height="15" fill="rgb(224,194,6)" fg:x="76600" fg:w="420"/><text x="70.4576%" y="719.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (420 samples, 0.38%)</title><rect x="70.2076%" y="693" width="0.3850%" height="15" fill="rgb(243,229,6)" fg:x="76600" fg:w="420"/><text x="70.4576%" y="703.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (420 samples, 0.38%)</title><rect x="70.2076%" y="677" width="0.3850%" height="15" fill="rgb(207,23,50)" fg:x="76600" fg:w="420"/><text x="70.4576%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (15 samples, 0.01%)</title><rect x="70.6017%" y="725" width="0.0137%" height="15" fill="rgb(253,192,32)" fg:x="77030" fg:w="15"/><text x="70.8517%" y="735.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (15 samples, 0.01%)</title><rect x="70.6017%" y="709" width="0.0137%" height="15" fill="rgb(213,21,6)" fg:x="77030" fg:w="15"/><text x="70.8517%" y="719.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="70.6017%" y="693" width="0.0137%" height="15" fill="rgb(243,151,13)" fg:x="77030" fg:w="15"/><text x="70.8517%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (21 samples, 0.02%)</title><rect x="70.6155%" y="725" width="0.0192%" height="15" fill="rgb(233,165,41)" fg:x="77045" fg:w="21"/><text x="70.8655%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (21 samples, 0.02%)</title><rect x="70.6155%" y="709" width="0.0192%" height="15" fill="rgb(246,176,45)" fg:x="77045" fg:w="21"/><text x="70.8655%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.04%)</title><rect x="70.5925%" y="757" width="0.0449%" height="15" fill="rgb(217,170,52)" fg:x="77020" fg:w="49"/><text x="70.8425%" y="767.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (42 samples, 0.04%)</title><rect x="70.5990%" y="741" width="0.0385%" height="15" fill="rgb(214,203,54)" fg:x="77027" fg:w="42"/><text x="70.8490%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (915 samples, 0.84%)</title><rect x="70.0188%" y="805" width="0.8386%" height="15" fill="rgb(248,215,49)" fg:x="76394" fg:w="915"/><text x="70.2688%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (915 samples, 0.84%)</title><rect x="70.0188%" y="789" width="0.8386%" height="15" fill="rgb(208,46,10)" fg:x="76394" fg:w="915"/><text x="70.2688%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (905 samples, 0.83%)</title><rect x="70.0280%" y="773" width="0.8295%" height="15" fill="rgb(254,5,31)" fg:x="76404" fg:w="905"/><text x="70.2780%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::take (222 samples, 0.20%)</title><rect x="70.6540%" y="757" width="0.2035%" height="15" fill="rgb(222,104,33)" fg:x="77087" fg:w="222"/><text x="70.9040%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (222 samples, 0.20%)</title><rect x="70.6540%" y="741" width="0.2035%" height="15" fill="rgb(248,49,16)" fg:x="77087" fg:w="222"/><text x="70.9040%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,315 samples, 1.21%)</title><rect x="69.6558%" y="933" width="1.2053%" height="15" fill="rgb(232,198,41)" fg:x="75998" fg:w="1315"/><text x="69.9058%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (943 samples, 0.86%)</title><rect x="69.9968%" y="917" width="0.8643%" height="15" fill="rgb(214,125,3)" fg:x="76370" fg:w="943"/><text x="70.2468%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (943 samples, 0.86%)</title><rect x="69.9968%" y="901" width="0.8643%" height="15" fill="rgb(229,220,28)" fg:x="76370" fg:w="943"/><text x="70.2468%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (943 samples, 0.86%)</title><rect x="69.9968%" y="885" width="0.8643%" height="15" fill="rgb(222,64,37)" fg:x="76370" fg:w="943"/><text x="70.2468%" y="895.50"></text></g><g><title>alloc::alloc::alloc (943 samples, 0.86%)</title><rect x="69.9968%" y="869" width="0.8643%" height="15" fill="rgb(249,184,13)" fg:x="76370" fg:w="943"/><text x="70.2468%" y="879.50"></text></g><g><title>__rg_alloc (943 samples, 0.86%)</title><rect x="69.9968%" y="853" width="0.8643%" height="15" fill="rgb(252,176,6)" fg:x="76370" fg:w="943"/><text x="70.2468%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (943 samples, 0.86%)</title><rect x="69.9968%" y="837" width="0.8643%" height="15" fill="rgb(228,153,7)" fg:x="76370" fg:w="943"/><text x="70.2468%" y="847.50"></text></g><g><title>rust_alloc (936 samples, 0.86%)</title><rect x="70.0032%" y="821" width="0.8579%" height="15" fill="rgb(242,193,5)" fg:x="76377" fg:w="936"/><text x="70.2532%" y="831.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (13 samples, 0.01%)</title><rect x="70.8712%" y="901" width="0.0119%" height="15" fill="rgb(232,140,9)" fg:x="77324" fg:w="13"/><text x="71.1212%" y="911.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (13 samples, 0.01%)</title><rect x="70.8712%" y="885" width="0.0119%" height="15" fill="rgb(213,222,16)" fg:x="77324" fg:w="13"/><text x="71.1212%" y="895.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (13 samples, 0.01%)</title><rect x="70.8712%" y="869" width="0.0119%" height="15" fill="rgb(222,75,50)" fg:x="77324" fg:w="13"/><text x="71.1212%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (13 samples, 0.01%)</title><rect x="70.8712%" y="853" width="0.0119%" height="15" fill="rgb(205,180,2)" fg:x="77324" fg:w="13"/><text x="71.1212%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (11 samples, 0.01%)</title><rect x="70.8730%" y="837" width="0.0101%" height="15" fill="rgb(216,34,7)" fg:x="77326" fg:w="11"/><text x="71.1230%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="70.8840%" y="837" width="0.0110%" height="15" fill="rgb(253,16,32)" fg:x="77338" fg:w="12"/><text x="71.1340%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (18 samples, 0.02%)</title><rect x="70.8831%" y="901" width="0.0165%" height="15" fill="rgb(208,97,28)" fg:x="77337" fg:w="18"/><text x="71.1331%" y="911.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="70.8831%" y="885" width="0.0165%" height="15" fill="rgb(225,92,11)" fg:x="77337" fg:w="18"/><text x="71.1331%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (17 samples, 0.02%)</title><rect x="70.8840%" y="869" width="0.0156%" height="15" fill="rgb(243,38,12)" fg:x="77338" fg:w="17"/><text x="71.1340%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="70.8840%" y="853" width="0.0156%" height="15" fill="rgb(208,139,16)" fg:x="77338" fg:w="17"/><text x="71.1340%" y="863.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="70.8611%" y="917" width="0.0422%" height="15" fill="rgb(227,24,9)" fg:x="77313" fg:w="46"/><text x="71.1111%" y="927.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="70.9106%" y="885" width="0.0119%" height="15" fill="rgb(206,62,11)" fg:x="77367" fg:w="13"/><text x="71.1606%" y="895.50"></text></g><g><title>rust_dealloc (32 samples, 0.03%)</title><rect x="70.9225%" y="821" width="0.0293%" height="15" fill="rgb(228,134,27)" fg:x="77380" fg:w="32"/><text x="71.1725%" y="831.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="70.9903%" y="773" width="0.0192%" height="15" fill="rgb(205,55,33)" fg:x="77454" fg:w="21"/><text x="71.2403%" y="783.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="70.9967%" y="757" width="0.0128%" height="15" fill="rgb(243,75,43)" fg:x="77461" fg:w="14"/><text x="71.2467%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (62 samples, 0.06%)</title><rect x="70.9610%" y="821" width="0.0568%" height="15" fill="rgb(223,27,42)" fg:x="77422" fg:w="62"/><text x="71.2110%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (62 samples, 0.06%)</title><rect x="70.9610%" y="805" width="0.0568%" height="15" fill="rgb(232,189,33)" fg:x="77422" fg:w="62"/><text x="71.2110%" y="815.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (50 samples, 0.05%)</title><rect x="70.9720%" y="789" width="0.0458%" height="15" fill="rgb(210,9,39)" fg:x="77434" fg:w="50"/><text x="71.2220%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (115 samples, 0.11%)</title><rect x="70.9225%" y="853" width="0.1054%" height="15" fill="rgb(242,85,26)" fg:x="77380" fg:w="115"/><text x="71.1725%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (115 samples, 0.11%)</title><rect x="70.9225%" y="837" width="0.1054%" height="15" fill="rgb(248,44,4)" fg:x="77380" fg:w="115"/><text x="71.1725%" y="847.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="71.0178%" y="821" width="0.0101%" height="15" fill="rgb(250,96,46)" fg:x="77484" fg:w="11"/><text x="71.2678%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (125 samples, 0.11%)</title><rect x="70.9225%" y="885" width="0.1146%" height="15" fill="rgb(229,116,26)" fg:x="77380" fg:w="125"/><text x="71.1725%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (125 samples, 0.11%)</title><rect x="70.9225%" y="869" width="0.1146%" height="15" fill="rgb(246,94,34)" fg:x="77380" fg:w="125"/><text x="71.1725%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (148 samples, 0.14%)</title><rect x="70.9106%" y="901" width="0.1356%" height="15" fill="rgb(251,73,21)" fg:x="77367" fg:w="148"/><text x="71.1606%" y="911.50"></text></g><g><title>rust_dealloc (169 samples, 0.15%)</title><rect x="70.9033%" y="917" width="0.1549%" height="15" fill="rgb(254,121,25)" fg:x="77359" fg:w="169"/><text x="71.1533%" y="927.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="71.0462%" y="901" width="0.0119%" height="15" fill="rgb(215,161,49)" fg:x="77515" fg:w="13"/><text x="71.2962%" y="911.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (16 samples, 0.01%)</title><rect x="71.0609%" y="901" width="0.0147%" height="15" fill="rgb(221,43,13)" fg:x="77531" fg:w="16"/><text x="71.3109%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (244 samples, 0.22%)</title><rect x="70.8611%" y="933" width="0.2236%" height="15" fill="rgb(249,5,37)" fg:x="77313" fg:w="244"/><text x="71.1111%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (28 samples, 0.03%)</title><rect x="71.0591%" y="917" width="0.0257%" height="15" fill="rgb(226,25,44)" fg:x="77529" fg:w="28"/><text x="71.3091%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (12 samples, 0.01%)</title><rect x="71.1012%" y="933" width="0.0110%" height="15" fill="rgb(238,189,16)" fg:x="77575" fg:w="12"/><text x="71.3512%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (63 samples, 0.06%)</title><rect x="71.1122%" y="933" width="0.0577%" height="15" fill="rgb(251,186,8)" fg:x="77587" fg:w="63"/><text x="71.3622%" y="943.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (63 samples, 0.06%)</title><rect x="71.1122%" y="917" width="0.0577%" height="15" fill="rgb(254,34,31)" fg:x="77587" fg:w="63"/><text x="71.3622%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (62 samples, 0.06%)</title><rect x="71.1131%" y="901" width="0.0568%" height="15" fill="rgb(225,215,27)" fg:x="77588" fg:w="62"/><text x="71.3631%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (62 samples, 0.06%)</title><rect x="71.1131%" y="885" width="0.0568%" height="15" fill="rgb(221,192,48)" fg:x="77588" fg:w="62"/><text x="71.3631%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (49 samples, 0.04%)</title><rect x="71.1251%" y="869" width="0.0449%" height="15" fill="rgb(219,137,20)" fg:x="77601" fg:w="49"/><text x="71.3751%" y="879.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (49 samples, 0.04%)</title><rect x="71.1251%" y="853" width="0.0449%" height="15" fill="rgb(219,84,11)" fg:x="77601" fg:w="49"/><text x="71.3751%" y="863.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (49 samples, 0.04%)</title><rect x="71.1251%" y="837" width="0.0449%" height="15" fill="rgb(224,10,23)" fg:x="77601" fg:w="49"/><text x="71.3751%" y="847.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (44 samples, 0.04%)</title><rect x="71.1296%" y="821" width="0.0403%" height="15" fill="rgb(248,22,39)" fg:x="77606" fg:w="44"/><text x="71.3796%" y="831.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (28 samples, 0.03%)</title><rect x="71.1443%" y="805" width="0.0257%" height="15" fill="rgb(212,154,20)" fg:x="77622" fg:w="28"/><text x="71.3943%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (8,812 samples, 8.08%)</title><rect x="63.1978%" y="1013" width="8.0766%" height="15" fill="rgb(236,199,50)" fg:x="68952" fg:w="8812"/><text x="63.4478%" y="1023.50">tremor_runt..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,812 samples, 8.08%)</title><rect x="63.1978%" y="997" width="8.0766%" height="15" fill="rgb(211,9,17)" fg:x="68952" fg:w="8812"/><text x="63.4478%" y="1007.50">&lt;core::futu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,941 samples, 3.61%)</title><rect x="67.6623%" y="981" width="3.6121%" height="15" fill="rgb(243,216,36)" fg:x="73823" fg:w="3941"/><text x="67.9123%" y="991.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,941 samples, 3.61%)</title><rect x="67.6623%" y="965" width="3.6121%" height="15" fill="rgb(250,2,10)" fg:x="73823" fg:w="3941"/><text x="67.9123%" y="975.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,904 samples, 3.58%)</title><rect x="67.6963%" y="949" width="3.5782%" height="15" fill="rgb(226,50,48)" fg:x="73860" fg:w="3904"/><text x="67.9463%" y="959.50">trem..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (108 samples, 0.10%)</title><rect x="71.1755%" y="933" width="0.0990%" height="15" fill="rgb(243,81,16)" fg:x="77656" fg:w="108"/><text x="71.4255%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (108 samples, 0.10%)</title><rect x="71.1755%" y="917" width="0.0990%" height="15" fill="rgb(250,14,2)" fg:x="77656" fg:w="108"/><text x="71.4255%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (108 samples, 0.10%)</title><rect x="71.1755%" y="901" width="0.0990%" height="15" fill="rgb(233,135,29)" fg:x="77656" fg:w="108"/><text x="71.4255%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (74 samples, 0.07%)</title><rect x="71.2066%" y="885" width="0.0678%" height="15" fill="rgb(224,64,43)" fg:x="77690" fg:w="74"/><text x="71.4566%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (64 samples, 0.06%)</title><rect x="71.3863%" y="949" width="0.0587%" height="15" fill="rgb(238,84,13)" fg:x="77886" fg:w="64"/><text x="71.6363%" y="959.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (52 samples, 0.05%)</title><rect x="71.3973%" y="933" width="0.0477%" height="15" fill="rgb(253,48,26)" fg:x="77898" fg:w="52"/><text x="71.6473%" y="943.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 0.01%)</title><rect x="71.4449%" y="949" width="0.0101%" height="15" fill="rgb(205,223,31)" fg:x="77950" fg:w="11"/><text x="71.6949%" y="959.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (865 samples, 0.79%)</title><rect x="71.2965%" y="965" width="0.7928%" height="15" fill="rgb(221,41,32)" fg:x="77788" fg:w="865"/><text x="71.5465%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (692 samples, 0.63%)</title><rect x="71.4550%" y="949" width="0.6343%" height="15" fill="rgb(213,158,31)" fg:x="77961" fg:w="692"/><text x="71.7050%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (407 samples, 0.37%)</title><rect x="72.0893%" y="965" width="0.3730%" height="15" fill="rgb(245,126,43)" fg:x="78653" fg:w="407"/><text x="72.3393%" y="975.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,297 samples, 1.19%)</title><rect x="71.2745%" y="997" width="1.1888%" height="15" fill="rgb(227,7,22)" fg:x="77764" fg:w="1297"/><text x="71.5245%" y="1007.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,297 samples, 1.19%)</title><rect x="71.2745%" y="981" width="1.1888%" height="15" fill="rgb(252,90,44)" fg:x="77764" fg:w="1297"/><text x="71.5245%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (13,984 samples, 12.82%)</title><rect x="59.6957%" y="1189" width="12.8170%" height="15" fill="rgb(253,91,0)" fg:x="65131" fg:w="13984"/><text x="59.9457%" y="1199.50">async_task::raw::Ra..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (13,983 samples, 12.82%)</title><rect x="59.6966%" y="1173" width="12.8161%" height="15" fill="rgb(252,175,49)" fg:x="65132" fg:w="13983"/><text x="59.9466%" y="1183.50">&lt;core::pin::Pin&lt;P&gt; ..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,983 samples, 12.82%)</title><rect x="59.6966%" y="1157" width="12.8161%" height="15" fill="rgb(246,150,1)" fg:x="65132" fg:w="13983"/><text x="59.9466%" y="1167.50">&lt;core::future::from..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (13,983 samples, 12.82%)</title><rect x="59.6966%" y="1141" width="12.8161%" height="15" fill="rgb(241,192,25)" fg:x="65132" fg:w="13983"/><text x="59.9466%" y="1151.50">async_executor::Exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (13,983 samples, 12.82%)</title><rect x="59.6966%" y="1125" width="12.8161%" height="15" fill="rgb(239,187,11)" fg:x="65132" fg:w="13983"/><text x="59.9466%" y="1135.50">&lt;async_std::task::b..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (13,983 samples, 12.82%)</title><rect x="59.6966%" y="1109" width="12.8161%" height="15" fill="rgb(218,202,51)" fg:x="65132" fg:w="13983"/><text x="59.9466%" y="1119.50">async_std::task::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13,983 samples, 12.82%)</title><rect x="59.6966%" y="1093" width="12.8161%" height="15" fill="rgb(225,176,8)" fg:x="65132" fg:w="13983"/><text x="59.9466%" y="1103.50">std::thread::local:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,983 samples, 12.82%)</title><rect x="59.6966%" y="1077" width="12.8161%" height="15" fill="rgb(219,122,41)" fg:x="65132" fg:w="13983"/><text x="59.9466%" y="1087.50">std::thread::local:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (13,983 samples, 12.82%)</title><rect x="59.6966%" y="1061" width="12.8161%" height="15" fill="rgb(248,140,20)" fg:x="65132" fg:w="13983"/><text x="59.9466%" y="1071.50">async_std::task::ta..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (13,983 samples, 12.82%)</title><rect x="59.6966%" y="1045" width="12.8161%" height="15" fill="rgb(245,41,37)" fg:x="65132" fg:w="13983"/><text x="59.9466%" y="1055.50">&lt;async_std::task::b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,983 samples, 12.82%)</title><rect x="59.6966%" y="1029" width="12.8161%" height="15" fill="rgb(235,82,39)" fg:x="65132" fg:w="13983"/><text x="59.9466%" y="1039.50">&lt;core::future::from..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,351 samples, 1.24%)</title><rect x="71.2745%" y="1013" width="1.2383%" height="15" fill="rgb(230,108,42)" fg:x="77764" fg:w="1351"/><text x="71.5245%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (54 samples, 0.05%)</title><rect x="72.4632%" y="997" width="0.0495%" height="15" fill="rgb(215,150,50)" fg:x="79061" fg:w="54"/><text x="72.7132%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (54 samples, 0.05%)</title><rect x="72.4632%" y="981" width="0.0495%" height="15" fill="rgb(233,212,5)" fg:x="79061" fg:w="54"/><text x="72.7132%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (54 samples, 0.05%)</title><rect x="72.4632%" y="965" width="0.0495%" height="15" fill="rgb(245,80,22)" fg:x="79061" fg:w="54"/><text x="72.7132%" y="975.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="72.4632%" y="949" width="0.0495%" height="15" fill="rgb(238,129,16)" fg:x="79061" fg:w="54"/><text x="72.7132%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (54 samples, 0.05%)</title><rect x="72.4632%" y="933" width="0.0495%" height="15" fill="rgb(240,19,0)" fg:x="79061" fg:w="54"/><text x="72.7132%" y="943.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="72.4632%" y="917" width="0.0495%" height="15" fill="rgb(232,42,35)" fg:x="79061" fg:w="54"/><text x="72.7132%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (25 samples, 0.02%)</title><rect x="72.4898%" y="901" width="0.0229%" height="15" fill="rgb(223,130,24)" fg:x="79090" fg:w="25"/><text x="72.7398%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (25 samples, 0.02%)</title><rect x="72.4898%" y="885" width="0.0229%" height="15" fill="rgb(237,16,22)" fg:x="79090" fg:w="25"/><text x="72.7398%" y="895.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="72.4907%" y="869" width="0.0220%" height="15" fill="rgb(248,192,20)" fg:x="79091" fg:w="24"/><text x="72.7407%" y="879.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="72.4907%" y="853" width="0.0220%" height="15" fill="rgb(233,167,2)" fg:x="79091" fg:w="24"/><text x="72.7407%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="72.4907%" y="837" width="0.0220%" height="15" fill="rgb(252,71,44)" fg:x="79091" fg:w="24"/><text x="72.7407%" y="847.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (27 samples, 0.02%)</title><rect x="72.5228%" y="1189" width="0.0247%" height="15" fill="rgb(238,37,47)" fg:x="79126" fg:w="27"/><text x="72.7728%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="72.5485%" y="1189" width="0.0110%" height="15" fill="rgb(214,202,54)" fg:x="79154" fg:w="12"/><text x="72.7985%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (27 samples, 0.02%)</title><rect x="72.5595%" y="1189" width="0.0247%" height="15" fill="rgb(254,165,40)" fg:x="79166" fg:w="27"/><text x="72.8095%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="72.5842%" y="1189" width="0.0183%" height="15" fill="rgb(246,173,38)" fg:x="79193" fg:w="20"/><text x="72.8342%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (35 samples, 0.03%)</title><rect x="72.6025%" y="1189" width="0.0321%" height="15" fill="rgb(215,3,27)" fg:x="79213" fg:w="35"/><text x="72.8525%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="72.6346%" y="1189" width="0.0211%" height="15" fill="rgb(239,169,51)" fg:x="79248" fg:w="23"/><text x="72.8846%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (13 samples, 0.01%)</title><rect x="72.6557%" y="1189" width="0.0119%" height="15" fill="rgb(212,5,25)" fg:x="79271" fg:w="13"/><text x="72.9057%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (12 samples, 0.01%)</title><rect x="72.6676%" y="1189" width="0.0110%" height="15" fill="rgb(243,45,17)" fg:x="79284" fg:w="12"/><text x="72.9176%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (12 samples, 0.01%)</title><rect x="72.6676%" y="1173" width="0.0110%" height="15" fill="rgb(242,97,9)" fg:x="79284" fg:w="12"/><text x="72.9176%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (12 samples, 0.01%)</title><rect x="72.6676%" y="1157" width="0.0110%" height="15" fill="rgb(228,71,31)" fg:x="79284" fg:w="12"/><text x="72.9176%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (42 samples, 0.04%)</title><rect x="72.6786%" y="1189" width="0.0385%" height="15" fill="rgb(252,184,16)" fg:x="79296" fg:w="42"/><text x="72.9286%" y="1199.50"></text></g><g><title>event_listener::Event::notify (52 samples, 0.05%)</title><rect x="72.7199%" y="1189" width="0.0477%" height="15" fill="rgb(236,169,46)" fg:x="79341" fg:w="52"/><text x="72.9699%" y="1199.50"></text></g><g><title>event_listener::full_fence (32 samples, 0.03%)</title><rect x="72.7382%" y="1173" width="0.0293%" height="15" fill="rgb(207,17,47)" fg:x="79361" fg:w="32"/><text x="72.9882%" y="1183.50"></text></g><g><title>polling::epoll::Poller::wait (32 samples, 0.03%)</title><rect x="72.7868%" y="1189" width="0.0293%" height="15" fill="rgb(206,201,28)" fg:x="79414" fg:w="32"/><text x="73.0368%" y="1199.50"></text></g><g><title>rust_alloc (90 samples, 0.08%)</title><rect x="72.8161%" y="1189" width="0.0825%" height="15" fill="rgb(224,184,23)" fg:x="79446" fg:w="90"/><text x="73.0661%" y="1199.50"></text></g><g><title>rust_dealloc (26 samples, 0.02%)</title><rect x="72.8986%" y="1189" width="0.0238%" height="15" fill="rgb(208,139,48)" fg:x="79536" fg:w="26"/><text x="73.1486%" y="1199.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (24 samples, 0.02%)</title><rect x="72.9004%" y="1173" width="0.0220%" height="15" fill="rgb(208,130,10)" fg:x="79538" fg:w="24"/><text x="73.1504%" y="1183.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (24 samples, 0.02%)</title><rect x="72.9004%" y="1157" width="0.0220%" height="15" fill="rgb(211,213,45)" fg:x="79538" fg:w="24"/><text x="73.1504%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (24 samples, 0.02%)</title><rect x="72.9004%" y="1141" width="0.0220%" height="15" fill="rgb(235,100,30)" fg:x="79538" fg:w="24"/><text x="73.1504%" y="1151.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (24 samples, 0.02%)</title><rect x="72.9004%" y="1125" width="0.0220%" height="15" fill="rgb(206,144,31)" fg:x="79538" fg:w="24"/><text x="73.1504%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (24 samples, 0.02%)</title><rect x="72.9004%" y="1109" width="0.0220%" height="15" fill="rgb(224,200,26)" fg:x="79538" fg:w="24"/><text x="73.1504%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (24 samples, 0.02%)</title><rect x="72.9004%" y="1093" width="0.0220%" height="15" fill="rgb(247,104,53)" fg:x="79538" fg:w="24"/><text x="73.1504%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (24 samples, 0.02%)</title><rect x="72.9004%" y="1077" width="0.0220%" height="15" fill="rgb(220,14,17)" fg:x="79538" fg:w="24"/><text x="73.1504%" y="1087.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (24 samples, 0.02%)</title><rect x="72.9004%" y="1061" width="0.0220%" height="15" fill="rgb(230,140,40)" fg:x="79538" fg:w="24"/><text x="73.1504%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (14 samples, 0.01%)</title><rect x="72.9352%" y="1189" width="0.0128%" height="15" fill="rgb(229,2,41)" fg:x="79576" fg:w="14"/><text x="73.1852%" y="1199.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (46 samples, 0.04%)</title><rect x="72.9545%" y="1189" width="0.0422%" height="15" fill="rgb(232,89,16)" fg:x="79597" fg:w="46"/><text x="73.2045%" y="1199.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="73.0003%" y="965" width="0.0119%" height="15" fill="rgb(247,59,52)" fg:x="79647" fg:w="13"/><text x="73.2503%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (13 samples, 0.01%)</title><rect x="73.0003%" y="949" width="0.0119%" height="15" fill="rgb(226,110,21)" fg:x="79647" fg:w="13"/><text x="73.2503%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.01%)</title><rect x="73.0003%" y="933" width="0.0119%" height="15" fill="rgb(224,176,43)" fg:x="79647" fg:w="13"/><text x="73.2503%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.01%)</title><rect x="73.0003%" y="917" width="0.0119%" height="15" fill="rgb(221,73,6)" fg:x="79647" fg:w="13"/><text x="73.2503%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (11 samples, 0.01%)</title><rect x="73.0122%" y="965" width="0.0101%" height="15" fill="rgb(232,78,19)" fg:x="79660" fg:w="11"/><text x="73.2622%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (11 samples, 0.01%)</title><rect x="73.0122%" y="949" width="0.0101%" height="15" fill="rgb(233,112,48)" fg:x="79660" fg:w="11"/><text x="73.2622%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="73.0122%" y="933" width="0.0101%" height="15" fill="rgb(243,131,47)" fg:x="79660" fg:w="11"/><text x="73.2622%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (11 samples, 0.01%)</title><rect x="73.0122%" y="917" width="0.0101%" height="15" fill="rgb(226,51,1)" fg:x="79660" fg:w="11"/><text x="73.2622%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (11 samples, 0.01%)</title><rect x="73.0122%" y="901" width="0.0101%" height="15" fill="rgb(247,58,7)" fg:x="79660" fg:w="11"/><text x="73.2622%" y="911.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="73.0122%" y="885" width="0.0101%" height="15" fill="rgb(209,7,32)" fg:x="79660" fg:w="11"/><text x="73.2622%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="73.0003%" y="981" width="0.0266%" height="15" fill="rgb(209,39,41)" fg:x="79647" fg:w="29"/><text x="73.2503%" y="991.50"></text></g><g><title>async_executor::Sleepers::notify (12 samples, 0.01%)</title><rect x="73.0269%" y="853" width="0.0110%" height="15" fill="rgb(226,182,46)" fg:x="79676" fg:w="12"/><text x="73.2769%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (45 samples, 0.04%)</title><rect x="73.0388%" y="789" width="0.0412%" height="15" fill="rgb(230,219,10)" fg:x="79689" fg:w="45"/><text x="73.2888%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (47 samples, 0.04%)</title><rect x="73.0379%" y="853" width="0.0431%" height="15" fill="rgb(227,175,30)" fg:x="79688" fg:w="47"/><text x="73.2879%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="73.0379%" y="837" width="0.0431%" height="15" fill="rgb(217,2,50)" fg:x="79688" fg:w="47"/><text x="73.2879%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (46 samples, 0.04%)</title><rect x="73.0388%" y="821" width="0.0422%" height="15" fill="rgb(229,160,0)" fg:x="79689" fg:w="46"/><text x="73.2888%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (46 samples, 0.04%)</title><rect x="73.0388%" y="805" width="0.0422%" height="15" fill="rgb(207,78,37)" fg:x="79689" fg:w="46"/><text x="73.2888%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (25 samples, 0.02%)</title><rect x="73.0810%" y="853" width="0.0229%" height="15" fill="rgb(225,57,0)" fg:x="79735" fg:w="25"/><text x="73.3310%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (25 samples, 0.02%)</title><rect x="73.0810%" y="837" width="0.0229%" height="15" fill="rgb(232,154,2)" fg:x="79735" fg:w="25"/><text x="73.3310%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (30 samples, 0.03%)</title><rect x="73.1268%" y="773" width="0.0275%" height="15" fill="rgb(241,212,25)" fg:x="79785" fg:w="30"/><text x="73.3768%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_swap (30 samples, 0.03%)</title><rect x="73.1268%" y="757" width="0.0275%" height="15" fill="rgb(226,69,20)" fg:x="79785" fg:w="30"/><text x="73.3768%" y="767.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (34 samples, 0.03%)</title><rect x="73.1543%" y="773" width="0.0312%" height="15" fill="rgb(247,184,54)" fg:x="79815" fg:w="34"/><text x="73.4043%" y="783.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (34 samples, 0.03%)</title><rect x="73.1543%" y="757" width="0.0312%" height="15" fill="rgb(210,145,0)" fg:x="79815" fg:w="34"/><text x="73.4043%" y="767.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (34 samples, 0.03%)</title><rect x="73.1543%" y="741" width="0.0312%" height="15" fill="rgb(253,82,12)" fg:x="79815" fg:w="34"/><text x="73.4043%" y="751.50"></text></g><g><title>__GI___pthread_cond_signal (34 samples, 0.03%)</title><rect x="73.1543%" y="725" width="0.0312%" height="15" fill="rgb(245,42,11)" fg:x="79815" fg:w="34"/><text x="73.4043%" y="735.50"></text></g><g><title>parking::Unparker::unpark (106 samples, 0.10%)</title><rect x="73.1149%" y="805" width="0.0972%" height="15" fill="rgb(219,147,32)" fg:x="79772" fg:w="106"/><text x="73.3649%" y="815.50"></text></g><g><title>parking::Inner::unpark (95 samples, 0.09%)</title><rect x="73.1250%" y="789" width="0.0871%" height="15" fill="rgb(246,12,7)" fg:x="79783" fg:w="95"/><text x="73.3750%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.03%)</title><rect x="73.1855%" y="773" width="0.0266%" height="15" fill="rgb(243,50,9)" fg:x="79849" fg:w="29"/><text x="73.4355%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (29 samples, 0.03%)</title><rect x="73.1855%" y="757" width="0.0266%" height="15" fill="rgb(219,149,6)" fg:x="79849" fg:w="29"/><text x="73.4355%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (29 samples, 0.03%)</title><rect x="73.1855%" y="741" width="0.0266%" height="15" fill="rgb(241,51,42)" fg:x="79849" fg:w="29"/><text x="73.4355%" y="751.50"></text></g><g><title>___pthread_mutex_lock (29 samples, 0.03%)</title><rect x="73.1855%" y="725" width="0.0266%" height="15" fill="rgb(226,128,27)" fg:x="79849" fg:w="29"/><text x="73.4355%" y="735.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (124 samples, 0.11%)</title><rect x="73.1039%" y="821" width="0.1137%" height="15" fill="rgb(244,144,4)" fg:x="79760" fg:w="124"/><text x="73.3539%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (33 samples, 0.03%)</title><rect x="73.2175%" y="821" width="0.0302%" height="15" fill="rgb(221,4,13)" fg:x="79884" fg:w="33"/><text x="73.4675%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="73.2175%" y="805" width="0.0302%" height="15" fill="rgb(208,170,28)" fg:x="79884" fg:w="33"/><text x="73.4675%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (32 samples, 0.03%)</title><rect x="73.2185%" y="789" width="0.0293%" height="15" fill="rgb(226,131,13)" fg:x="79885" fg:w="32"/><text x="73.4685%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (32 samples, 0.03%)</title><rect x="73.2185%" y="773" width="0.0293%" height="15" fill="rgb(215,72,41)" fg:x="79885" fg:w="32"/><text x="73.4685%" y="783.50"></text></g><g><title>core::task::wake::Waker::wake (158 samples, 0.14%)</title><rect x="73.1039%" y="853" width="0.1448%" height="15" fill="rgb(243,108,20)" fg:x="79760" fg:w="158"/><text x="73.3539%" y="863.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (158 samples, 0.14%)</title><rect x="73.1039%" y="837" width="0.1448%" height="15" fill="rgb(230,189,17)" fg:x="79760" fg:w="158"/><text x="73.3539%" y="847.50"></text></g><g><title>async_executor::State::notify (282 samples, 0.26%)</title><rect x="73.0269%" y="869" width="0.2585%" height="15" fill="rgb(220,50,17)" fg:x="79676" fg:w="282"/><text x="73.2769%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (40 samples, 0.04%)</title><rect x="73.2487%" y="853" width="0.0367%" height="15" fill="rgb(248,152,48)" fg:x="79918" fg:w="40"/><text x="73.4987%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (38 samples, 0.03%)</title><rect x="73.2505%" y="837" width="0.0348%" height="15" fill="rgb(244,91,11)" fg:x="79920" fg:w="38"/><text x="73.5005%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (36 samples, 0.03%)</title><rect x="73.2524%" y="821" width="0.0330%" height="15" fill="rgb(220,157,5)" fg:x="79922" fg:w="36"/><text x="73.5024%" y="831.50"></text></g><g><title>___pthread_mutex_lock (36 samples, 0.03%)</title><rect x="73.2524%" y="805" width="0.0330%" height="15" fill="rgb(253,137,8)" fg:x="79922" fg:w="36"/><text x="73.5024%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (54 samples, 0.05%)</title><rect x="73.2982%" y="837" width="0.0495%" height="15" fill="rgb(217,137,51)" fg:x="79972" fg:w="54"/><text x="73.5482%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (54 samples, 0.05%)</title><rect x="73.2982%" y="821" width="0.0495%" height="15" fill="rgb(218,209,53)" fg:x="79972" fg:w="54"/><text x="73.5482%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (25 samples, 0.02%)</title><rect x="73.3477%" y="837" width="0.0229%" height="15" fill="rgb(249,137,25)" fg:x="80026" fg:w="25"/><text x="73.5977%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_or (25 samples, 0.02%)</title><rect x="73.3477%" y="821" width="0.0229%" height="15" fill="rgb(239,155,26)" fg:x="80026" fg:w="25"/><text x="73.5977%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (409 samples, 0.37%)</title><rect x="73.0003%" y="1061" width="0.3749%" height="15" fill="rgb(227,85,46)" fg:x="79647" fg:w="409"/><text x="73.2503%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (409 samples, 0.37%)</title><rect x="73.0003%" y="1045" width="0.3749%" height="15" fill="rgb(251,107,43)" fg:x="79647" fg:w="409"/><text x="73.2503%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (409 samples, 0.37%)</title><rect x="73.0003%" y="1029" width="0.3749%" height="15" fill="rgb(234,170,33)" fg:x="79647" fg:w="409"/><text x="73.2503%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (409 samples, 0.37%)</title><rect x="73.0003%" y="1013" width="0.3749%" height="15" fill="rgb(206,29,35)" fg:x="79647" fg:w="409"/><text x="73.2503%" y="1023.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (409 samples, 0.37%)</title><rect x="73.0003%" y="997" width="0.3749%" height="15" fill="rgb(227,138,25)" fg:x="79647" fg:w="409"/><text x="73.2503%" y="1007.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (380 samples, 0.35%)</title><rect x="73.0269%" y="981" width="0.3483%" height="15" fill="rgb(249,131,35)" fg:x="79676" fg:w="380"/><text x="73.2769%" y="991.50"></text></g><g><title>event_listener::Event::notify (380 samples, 0.35%)</title><rect x="73.0269%" y="965" width="0.3483%" height="15" fill="rgb(239,6,40)" fg:x="79676" fg:w="380"/><text x="73.2769%" y="975.50"></text></g><g><title>event_listener::List::notify (380 samples, 0.35%)</title><rect x="73.0269%" y="949" width="0.3483%" height="15" fill="rgb(246,136,47)" fg:x="79676" fg:w="380"/><text x="73.2769%" y="959.50"></text></g><g><title>core::task::wake::Waker::wake (380 samples, 0.35%)</title><rect x="73.0269%" y="933" width="0.3483%" height="15" fill="rgb(253,58,26)" fg:x="79676" fg:w="380"/><text x="73.2769%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (380 samples, 0.35%)</title><rect x="73.0269%" y="917" width="0.3483%" height="15" fill="rgb(237,141,10)" fg:x="79676" fg:w="380"/><text x="73.2769%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (380 samples, 0.35%)</title><rect x="73.0269%" y="901" width="0.3483%" height="15" fill="rgb(234,156,12)" fg:x="79676" fg:w="380"/><text x="73.2769%" y="911.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (380 samples, 0.35%)</title><rect x="73.0269%" y="885" width="0.3483%" height="15" fill="rgb(243,224,36)" fg:x="79676" fg:w="380"/><text x="73.2769%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (98 samples, 0.09%)</title><rect x="73.2854%" y="869" width="0.0898%" height="15" fill="rgb(205,229,51)" fg:x="79958" fg:w="98"/><text x="73.5354%" y="879.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (90 samples, 0.08%)</title><rect x="73.2927%" y="853" width="0.0825%" height="15" fill="rgb(223,189,4)" fg:x="79966" fg:w="90"/><text x="73.5427%" y="863.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (64 samples, 0.06%)</title><rect x="73.3752%" y="1029" width="0.0587%" height="15" fill="rgb(249,167,54)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (64 samples, 0.06%)</title><rect x="73.3752%" y="1013" width="0.0587%" height="15" fill="rgb(218,34,28)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (64 samples, 0.06%)</title><rect x="73.3752%" y="997" width="0.0587%" height="15" fill="rgb(232,109,42)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (64 samples, 0.06%)</title><rect x="73.3752%" y="981" width="0.0587%" height="15" fill="rgb(248,214,46)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (64 samples, 0.06%)</title><rect x="73.3752%" y="965" width="0.0587%" height="15" fill="rgb(244,216,40)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (64 samples, 0.06%)</title><rect x="73.3752%" y="949" width="0.0587%" height="15" fill="rgb(231,226,31)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (64 samples, 0.06%)</title><rect x="73.3752%" y="933" width="0.0587%" height="15" fill="rgb(238,38,43)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (64 samples, 0.06%)</title><rect x="73.3752%" y="917" width="0.0587%" height="15" fill="rgb(208,88,43)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (64 samples, 0.06%)</title><rect x="73.3752%" y="901" width="0.0587%" height="15" fill="rgb(205,136,37)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (64 samples, 0.06%)</title><rect x="73.3752%" y="885" width="0.0587%" height="15" fill="rgb(237,34,14)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (64 samples, 0.06%)</title><rect x="73.3752%" y="869" width="0.0587%" height="15" fill="rgb(236,193,44)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (64 samples, 0.06%)</title><rect x="73.3752%" y="853" width="0.0587%" height="15" fill="rgb(231,48,10)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="863.50"></text></g><g><title>alloc::alloc::alloc (64 samples, 0.06%)</title><rect x="73.3752%" y="837" width="0.0587%" height="15" fill="rgb(213,141,34)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="847.50"></text></g><g><title>__rg_alloc (64 samples, 0.06%)</title><rect x="73.3752%" y="821" width="0.0587%" height="15" fill="rgb(249,130,34)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (64 samples, 0.06%)</title><rect x="73.3752%" y="805" width="0.0587%" height="15" fill="rgb(219,42,41)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="815.50"></text></g><g><title>rust_alloc (64 samples, 0.06%)</title><rect x="73.3752%" y="789" width="0.0587%" height="15" fill="rgb(224,100,54)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (64 samples, 0.06%)</title><rect x="73.3752%" y="773" width="0.0587%" height="15" fill="rgb(229,200,27)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (64 samples, 0.06%)</title><rect x="73.3752%" y="757" width="0.0587%" height="15" fill="rgb(217,118,10)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (64 samples, 0.06%)</title><rect x="73.3752%" y="741" width="0.0587%" height="15" fill="rgb(206,22,3)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (64 samples, 0.06%)</title><rect x="73.3752%" y="725" width="0.0587%" height="15" fill="rgb(232,163,46)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (64 samples, 0.06%)</title><rect x="73.3752%" y="709" width="0.0587%" height="15" fill="rgb(206,95,13)" fg:x="80056" fg:w="64"/><text x="73.6252%" y="719.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (54 samples, 0.05%)</title><rect x="73.3844%" y="693" width="0.0495%" height="15" fill="rgb(253,154,18)" fg:x="80066" fg:w="54"/><text x="73.6344%" y="703.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (40 samples, 0.04%)</title><rect x="73.3972%" y="677" width="0.0367%" height="15" fill="rgb(219,32,23)" fg:x="80080" fg:w="40"/><text x="73.6472%" y="687.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (40 samples, 0.04%)</title><rect x="73.3972%" y="661" width="0.0367%" height="15" fill="rgb(230,191,45)" fg:x="80080" fg:w="40"/><text x="73.6472%" y="671.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (40 samples, 0.04%)</title><rect x="73.3972%" y="645" width="0.0367%" height="15" fill="rgb(229,64,36)" fg:x="80080" fg:w="40"/><text x="73.6472%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (57 samples, 0.05%)</title><rect x="73.4338%" y="629" width="0.0522%" height="15" fill="rgb(205,129,25)" fg:x="80120" fg:w="57"/><text x="73.6838%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (57 samples, 0.05%)</title><rect x="73.4338%" y="613" width="0.0522%" height="15" fill="rgb(254,112,7)" fg:x="80120" fg:w="57"/><text x="73.6838%" y="623.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (47 samples, 0.04%)</title><rect x="73.4430%" y="597" width="0.0431%" height="15" fill="rgb(226,53,48)" fg:x="80130" fg:w="47"/><text x="73.6930%" y="607.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (34 samples, 0.03%)</title><rect x="73.4549%" y="581" width="0.0312%" height="15" fill="rgb(214,153,38)" fg:x="80143" fg:w="34"/><text x="73.7049%" y="591.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="73.4549%" y="565" width="0.0312%" height="15" fill="rgb(243,101,7)" fg:x="80143" fg:w="34"/><text x="73.7049%" y="575.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="73.4549%" y="549" width="0.0312%" height="15" fill="rgb(240,140,22)" fg:x="80143" fg:w="34"/><text x="73.7049%" y="559.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (88 samples, 0.08%)</title><rect x="73.4338%" y="933" width="0.0807%" height="15" fill="rgb(235,114,2)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (88 samples, 0.08%)</title><rect x="73.4338%" y="917" width="0.0807%" height="15" fill="rgb(242,59,12)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (88 samples, 0.08%)</title><rect x="73.4338%" y="901" width="0.0807%" height="15" fill="rgb(252,134,9)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (88 samples, 0.08%)</title><rect x="73.4338%" y="885" width="0.0807%" height="15" fill="rgb(236,4,44)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (88 samples, 0.08%)</title><rect x="73.4338%" y="869" width="0.0807%" height="15" fill="rgb(254,172,41)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (88 samples, 0.08%)</title><rect x="73.4338%" y="853" width="0.0807%" height="15" fill="rgb(244,63,20)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (88 samples, 0.08%)</title><rect x="73.4338%" y="837" width="0.0807%" height="15" fill="rgb(250,73,31)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (88 samples, 0.08%)</title><rect x="73.4338%" y="821" width="0.0807%" height="15" fill="rgb(241,38,36)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (88 samples, 0.08%)</title><rect x="73.4338%" y="805" width="0.0807%" height="15" fill="rgb(245,211,2)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (88 samples, 0.08%)</title><rect x="73.4338%" y="789" width="0.0807%" height="15" fill="rgb(206,120,28)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (88 samples, 0.08%)</title><rect x="73.4338%" y="773" width="0.0807%" height="15" fill="rgb(211,59,34)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (88 samples, 0.08%)</title><rect x="73.4338%" y="757" width="0.0807%" height="15" fill="rgb(233,168,5)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="767.50"></text></g><g><title>alloc::alloc::alloc (88 samples, 0.08%)</title><rect x="73.4338%" y="741" width="0.0807%" height="15" fill="rgb(234,33,13)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="751.50"></text></g><g><title>__rg_alloc (88 samples, 0.08%)</title><rect x="73.4338%" y="725" width="0.0807%" height="15" fill="rgb(231,150,26)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="735.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (88 samples, 0.08%)</title><rect x="73.4338%" y="709" width="0.0807%" height="15" fill="rgb(217,191,4)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="719.50"></text></g><g><title>rust_alloc (88 samples, 0.08%)</title><rect x="73.4338%" y="693" width="0.0807%" height="15" fill="rgb(246,198,38)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (88 samples, 0.08%)</title><rect x="73.4338%" y="677" width="0.0807%" height="15" fill="rgb(245,64,37)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (88 samples, 0.08%)</title><rect x="73.4338%" y="661" width="0.0807%" height="15" fill="rgb(250,30,36)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (88 samples, 0.08%)</title><rect x="73.4338%" y="645" width="0.0807%" height="15" fill="rgb(217,86,53)" fg:x="80120" fg:w="88"/><text x="73.6838%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="73.4861%" y="629" width="0.0284%" height="15" fill="rgb(228,157,16)" fg:x="80177" fg:w="31"/><text x="73.7361%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="73.4861%" y="613" width="0.0284%" height="15" fill="rgb(217,59,31)" fg:x="80177" fg:w="31"/><text x="73.7361%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="73.4861%" y="597" width="0.0284%" height="15" fill="rgb(237,138,41)" fg:x="80177" fg:w="31"/><text x="73.7361%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="73.4861%" y="581" width="0.0284%" height="15" fill="rgb(227,91,49)" fg:x="80177" fg:w="31"/><text x="73.7361%" y="591.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (31 samples, 0.03%)</title><rect x="73.4861%" y="565" width="0.0284%" height="15" fill="rgb(247,21,44)" fg:x="80177" fg:w="31"/><text x="73.7361%" y="575.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (16 samples, 0.01%)</title><rect x="73.4998%" y="549" width="0.0147%" height="15" fill="rgb(219,210,51)" fg:x="80192" fg:w="16"/><text x="73.7498%" y="559.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="73.4998%" y="533" width="0.0147%" height="15" fill="rgb(209,140,6)" fg:x="80192" fg:w="16"/><text x="73.7498%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="73.5145%" y="709" width="0.0110%" height="15" fill="rgb(221,188,24)" fg:x="80208" fg:w="12"/><text x="73.7645%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.04%)</title><rect x="73.5145%" y="741" width="0.0440%" height="15" fill="rgb(232,154,20)" fg:x="80208" fg:w="48"/><text x="73.7645%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (48 samples, 0.04%)</title><rect x="73.5145%" y="725" width="0.0440%" height="15" fill="rgb(244,137,50)" fg:x="80208" fg:w="48"/><text x="73.7645%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (36 samples, 0.03%)</title><rect x="73.5255%" y="709" width="0.0330%" height="15" fill="rgb(225,185,43)" fg:x="80220" fg:w="36"/><text x="73.7755%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (29 samples, 0.03%)</title><rect x="73.5319%" y="693" width="0.0266%" height="15" fill="rgb(213,205,38)" fg:x="80227" fg:w="29"/><text x="73.7819%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (29 samples, 0.03%)</title><rect x="73.5319%" y="677" width="0.0266%" height="15" fill="rgb(236,73,12)" fg:x="80227" fg:w="29"/><text x="73.7819%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (29 samples, 0.03%)</title><rect x="73.5319%" y="661" width="0.0266%" height="15" fill="rgb(235,219,13)" fg:x="80227" fg:w="29"/><text x="73.7819%" y="671.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (202 samples, 0.19%)</title><rect x="73.3752%" y="1045" width="0.1851%" height="15" fill="rgb(218,59,36)" fg:x="80056" fg:w="202"/><text x="73.6252%" y="1055.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (138 samples, 0.13%)</title><rect x="73.4338%" y="1029" width="0.1265%" height="15" fill="rgb(205,110,39)" fg:x="80120" fg:w="138"/><text x="73.6838%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (138 samples, 0.13%)</title><rect x="73.4338%" y="1013" width="0.1265%" height="15" fill="rgb(218,206,42)" fg:x="80120" fg:w="138"/><text x="73.6838%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (138 samples, 0.13%)</title><rect x="73.4338%" y="997" width="0.1265%" height="15" fill="rgb(248,125,24)" fg:x="80120" fg:w="138"/><text x="73.6838%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (138 samples, 0.13%)</title><rect x="73.4338%" y="981" width="0.1265%" height="15" fill="rgb(242,28,27)" fg:x="80120" fg:w="138"/><text x="73.6838%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (138 samples, 0.13%)</title><rect x="73.4338%" y="965" width="0.1265%" height="15" fill="rgb(216,228,15)" fg:x="80120" fg:w="138"/><text x="73.6838%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (138 samples, 0.13%)</title><rect x="73.4338%" y="949" width="0.1265%" height="15" fill="rgb(235,116,46)" fg:x="80120" fg:w="138"/><text x="73.6838%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (50 samples, 0.05%)</title><rect x="73.5145%" y="933" width="0.0458%" height="15" fill="rgb(224,18,32)" fg:x="80208" fg:w="50"/><text x="73.7645%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (50 samples, 0.05%)</title><rect x="73.5145%" y="917" width="0.0458%" height="15" fill="rgb(252,5,12)" fg:x="80208" fg:w="50"/><text x="73.7645%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (50 samples, 0.05%)</title><rect x="73.5145%" y="901" width="0.0458%" height="15" fill="rgb(251,36,5)" fg:x="80208" fg:w="50"/><text x="73.7645%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (50 samples, 0.05%)</title><rect x="73.5145%" y="885" width="0.0458%" height="15" fill="rgb(217,53,14)" fg:x="80208" fg:w="50"/><text x="73.7645%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (50 samples, 0.05%)</title><rect x="73.5145%" y="869" width="0.0458%" height="15" fill="rgb(215,86,45)" fg:x="80208" fg:w="50"/><text x="73.7645%" y="879.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.05%)</title><rect x="73.5145%" y="853" width="0.0458%" height="15" fill="rgb(242,169,11)" fg:x="80208" fg:w="50"/><text x="73.7645%" y="863.50"></text></g><g><title>__rg_alloc (50 samples, 0.05%)</title><rect x="73.5145%" y="837" width="0.0458%" height="15" fill="rgb(211,213,45)" fg:x="80208" fg:w="50"/><text x="73.7645%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (50 samples, 0.05%)</title><rect x="73.5145%" y="821" width="0.0458%" height="15" fill="rgb(205,88,11)" fg:x="80208" fg:w="50"/><text x="73.7645%" y="831.50"></text></g><g><title>rust_alloc (50 samples, 0.05%)</title><rect x="73.5145%" y="805" width="0.0458%" height="15" fill="rgb(252,69,26)" fg:x="80208" fg:w="50"/><text x="73.7645%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="73.5145%" y="789" width="0.0458%" height="15" fill="rgb(246,123,37)" fg:x="80208" fg:w="50"/><text x="73.7645%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="73.5145%" y="773" width="0.0458%" height="15" fill="rgb(212,205,5)" fg:x="80208" fg:w="50"/><text x="73.7645%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="73.5145%" y="757" width="0.0458%" height="15" fill="rgb(253,148,0)" fg:x="80208" fg:w="50"/><text x="73.7645%" y="767.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (22 samples, 0.02%)</title><rect x="73.5952%" y="725" width="0.0202%" height="15" fill="rgb(239,22,4)" fg:x="80296" fg:w="22"/><text x="73.8452%" y="735.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="73.5961%" y="709" width="0.0192%" height="15" fill="rgb(226,26,53)" fg:x="80297" fg:w="21"/><text x="73.8461%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (60 samples, 0.05%)</title><rect x="73.5777%" y="773" width="0.0550%" height="15" fill="rgb(225,229,45)" fg:x="80277" fg:w="60"/><text x="73.8277%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (60 samples, 0.05%)</title><rect x="73.5777%" y="757" width="0.0550%" height="15" fill="rgb(220,60,37)" fg:x="80277" fg:w="60"/><text x="73.8277%" y="767.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (51 samples, 0.05%)</title><rect x="73.5860%" y="741" width="0.0467%" height="15" fill="rgb(217,180,35)" fg:x="80286" fg:w="51"/><text x="73.8360%" y="751.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="73.6153%" y="725" width="0.0174%" height="15" fill="rgb(229,7,53)" fg:x="80318" fg:w="19"/><text x="73.8653%" y="735.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (19 samples, 0.02%)</title><rect x="73.6153%" y="709" width="0.0174%" height="15" fill="rgb(254,137,3)" fg:x="80318" fg:w="19"/><text x="73.8653%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (81 samples, 0.07%)</title><rect x="73.5759%" y="789" width="0.0742%" height="15" fill="rgb(215,140,41)" fg:x="80275" fg:w="81"/><text x="73.8259%" y="799.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="73.6327%" y="773" width="0.0174%" height="15" fill="rgb(250,80,15)" fg:x="80337" fg:w="19"/><text x="73.8827%" y="783.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="73.6327%" y="757" width="0.0174%" height="15" fill="rgb(252,191,6)" fg:x="80337" fg:w="19"/><text x="73.8827%" y="767.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (19 samples, 0.02%)</title><rect x="73.6327%" y="741" width="0.0174%" height="15" fill="rgb(246,217,18)" fg:x="80337" fg:w="19"/><text x="73.8827%" y="751.50"></text></g><g><title>snmalloc::bits::align_down (19 samples, 0.02%)</title><rect x="73.6327%" y="725" width="0.0174%" height="15" fill="rgb(223,93,7)" fg:x="80337" fg:w="19"/><text x="73.8827%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (123 samples, 0.11%)</title><rect x="73.5603%" y="805" width="0.1127%" height="15" fill="rgb(225,55,52)" fg:x="80258" fg:w="123"/><text x="73.8103%" y="815.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="73.6584%" y="789" width="0.0147%" height="15" fill="rgb(240,31,24)" fg:x="80365" fg:w="16"/><text x="73.9084%" y="799.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="73.6584%" y="773" width="0.0147%" height="15" fill="rgb(205,56,52)" fg:x="80365" fg:w="16"/><text x="73.9084%" y="783.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (16 samples, 0.01%)</title><rect x="73.6584%" y="757" width="0.0147%" height="15" fill="rgb(246,146,12)" fg:x="80365" fg:w="16"/><text x="73.9084%" y="767.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.01%)</title><rect x="73.6584%" y="741" width="0.0147%" height="15" fill="rgb(239,84,36)" fg:x="80365" fg:w="16"/><text x="73.9084%" y="751.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (64 samples, 0.06%)</title><rect x="73.7088%" y="789" width="0.0587%" height="15" fill="rgb(207,41,40)" fg:x="80420" fg:w="64"/><text x="73.9588%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (669 samples, 0.61%)</title><rect x="73.5603%" y="837" width="0.6132%" height="15" fill="rgb(241,179,25)" fg:x="80258" fg:w="669"/><text x="73.8103%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (669 samples, 0.61%)</title><rect x="73.5603%" y="821" width="0.6132%" height="15" fill="rgb(210,0,34)" fg:x="80258" fg:w="669"/><text x="73.8103%" y="831.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (546 samples, 0.50%)</title><rect x="73.6731%" y="805" width="0.5004%" height="15" fill="rgb(225,217,29)" fg:x="80381" fg:w="546"/><text x="73.9231%" y="815.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (443 samples, 0.41%)</title><rect x="73.7675%" y="789" width="0.4060%" height="15" fill="rgb(216,191,38)" fg:x="80484" fg:w="443"/><text x="74.0175%" y="799.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (443 samples, 0.41%)</title><rect x="73.7675%" y="773" width="0.4060%" height="15" fill="rgb(232,140,52)" fg:x="80484" fg:w="443"/><text x="74.0175%" y="783.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (443 samples, 0.41%)</title><rect x="73.7675%" y="757" width="0.4060%" height="15" fill="rgb(223,158,51)" fg:x="80484" fg:w="443"/><text x="74.0175%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (678 samples, 0.62%)</title><rect x="73.5603%" y="1045" width="0.6214%" height="15" fill="rgb(235,29,51)" fg:x="80258" fg:w="678"/><text x="73.8103%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (678 samples, 0.62%)</title><rect x="73.5603%" y="1029" width="0.6214%" height="15" fill="rgb(215,181,18)" fg:x="80258" fg:w="678"/><text x="73.8103%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (678 samples, 0.62%)</title><rect x="73.5603%" y="1013" width="0.6214%" height="15" fill="rgb(227,125,34)" fg:x="80258" fg:w="678"/><text x="73.8103%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (678 samples, 0.62%)</title><rect x="73.5603%" y="997" width="0.6214%" height="15" fill="rgb(230,197,49)" fg:x="80258" fg:w="678"/><text x="73.8103%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (678 samples, 0.62%)</title><rect x="73.5603%" y="981" width="0.6214%" height="15" fill="rgb(239,141,16)" fg:x="80258" fg:w="678"/><text x="73.8103%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (678 samples, 0.62%)</title><rect x="73.5603%" y="965" width="0.6214%" height="15" fill="rgb(225,105,43)" fg:x="80258" fg:w="678"/><text x="73.8103%" y="975.50"></text></g><g><title>alloc::alloc::alloc (678 samples, 0.62%)</title><rect x="73.5603%" y="949" width="0.6214%" height="15" fill="rgb(214,131,14)" fg:x="80258" fg:w="678"/><text x="73.8103%" y="959.50"></text></g><g><title>__rg_alloc (678 samples, 0.62%)</title><rect x="73.5603%" y="933" width="0.6214%" height="15" fill="rgb(229,177,11)" fg:x="80258" fg:w="678"/><text x="73.8103%" y="943.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (678 samples, 0.62%)</title><rect x="73.5603%" y="917" width="0.6214%" height="15" fill="rgb(231,180,14)" fg:x="80258" fg:w="678"/><text x="73.8103%" y="927.50"></text></g><g><title>rust_alloc (678 samples, 0.62%)</title><rect x="73.5603%" y="901" width="0.6214%" height="15" fill="rgb(232,88,2)" fg:x="80258" fg:w="678"/><text x="73.8103%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (678 samples, 0.62%)</title><rect x="73.5603%" y="885" width="0.6214%" height="15" fill="rgb(205,220,8)" fg:x="80258" fg:w="678"/><text x="73.8103%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (678 samples, 0.62%)</title><rect x="73.5603%" y="869" width="0.6214%" height="15" fill="rgb(225,23,53)" fg:x="80258" fg:w="678"/><text x="73.8103%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (678 samples, 0.62%)</title><rect x="73.5603%" y="853" width="0.6214%" height="15" fill="rgb(213,62,29)" fg:x="80258" fg:w="678"/><text x="73.8103%" y="863.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (358 samples, 0.33%)</title><rect x="74.4201%" y="1013" width="0.3281%" height="15" fill="rgb(227,75,7)" fg:x="81196" fg:w="358"/><text x="74.6701%" y="1023.50"></text></g><g><title>aligned_size (22 samples, 0.02%)</title><rect x="74.7977%" y="821" width="0.0202%" height="15" fill="rgb(207,105,14)" fg:x="81608" fg:w="22"/><text x="75.0477%" y="831.50"></text></g><g><title>rust_alloc (16 samples, 0.01%)</title><rect x="74.8252%" y="789" width="0.0147%" height="15" fill="rgb(245,62,29)" fg:x="81638" fg:w="16"/><text x="75.0752%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (14 samples, 0.01%)</title><rect x="74.8545%" y="709" width="0.0128%" height="15" fill="rgb(236,202,4)" fg:x="81670" fg:w="14"/><text x="75.1045%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (14 samples, 0.01%)</title><rect x="74.8545%" y="693" width="0.0128%" height="15" fill="rgb(250,67,1)" fg:x="81670" fg:w="14"/><text x="75.1045%" y="703.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (14 samples, 0.01%)</title><rect x="74.8545%" y="677" width="0.0128%" height="15" fill="rgb(253,115,44)" fg:x="81670" fg:w="14"/><text x="75.1045%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (15 samples, 0.01%)</title><rect x="74.8545%" y="725" width="0.0137%" height="15" fill="rgb(251,139,18)" fg:x="81670" fg:w="15"/><text x="75.1045%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (23 samples, 0.02%)</title><rect x="74.8517%" y="741" width="0.0211%" height="15" fill="rgb(218,22,32)" fg:x="81667" fg:w="23"/><text x="75.1017%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (116 samples, 0.11%)</title><rect x="74.8517%" y="773" width="0.1063%" height="15" fill="rgb(243,53,5)" fg:x="81667" fg:w="116"/><text x="75.1017%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (116 samples, 0.11%)</title><rect x="74.8517%" y="757" width="0.1063%" height="15" fill="rgb(227,56,16)" fg:x="81667" fg:w="116"/><text x="75.1017%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (93 samples, 0.09%)</title><rect x="74.8728%" y="741" width="0.0852%" height="15" fill="rgb(245,53,0)" fg:x="81690" fg:w="93"/><text x="75.1228%" y="751.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (77 samples, 0.07%)</title><rect x="74.8875%" y="725" width="0.0706%" height="15" fill="rgb(216,170,35)" fg:x="81706" fg:w="77"/><text x="75.1375%" y="735.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (77 samples, 0.07%)</title><rect x="74.8875%" y="709" width="0.0706%" height="15" fill="rgb(211,200,8)" fg:x="81706" fg:w="77"/><text x="75.1375%" y="719.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (77 samples, 0.07%)</title><rect x="74.8875%" y="693" width="0.0706%" height="15" fill="rgb(228,204,44)" fg:x="81706" fg:w="77"/><text x="75.1375%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (322 samples, 0.30%)</title><rect x="74.8243%" y="821" width="0.2951%" height="15" fill="rgb(214,121,17)" fg:x="81637" fg:w="322"/><text x="75.0743%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (321 samples, 0.29%)</title><rect x="74.8252%" y="805" width="0.2942%" height="15" fill="rgb(233,64,38)" fg:x="81638" fg:w="321"/><text x="75.0752%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (297 samples, 0.27%)</title><rect x="74.8472%" y="789" width="0.2722%" height="15" fill="rgb(253,54,19)" fg:x="81662" fg:w="297"/><text x="75.0972%" y="799.50"></text></g><g><title>snmalloc::FreeListIter::take (158 samples, 0.14%)</title><rect x="74.9746%" y="773" width="0.1448%" height="15" fill="rgb(253,94,18)" fg:x="81801" fg:w="158"/><text x="75.2246%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (158 samples, 0.14%)</title><rect x="74.9746%" y="757" width="0.1448%" height="15" fill="rgb(227,57,52)" fg:x="81801" fg:w="158"/><text x="75.2246%" y="767.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (820 samples, 0.75%)</title><rect x="74.3742%" y="1029" width="0.7516%" height="15" fill="rgb(230,228,50)" fg:x="81146" fg:w="820"/><text x="74.6242%" y="1039.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (412 samples, 0.38%)</title><rect x="74.7482%" y="1013" width="0.3776%" height="15" fill="rgb(217,205,27)" fg:x="81554" fg:w="412"/><text x="74.9982%" y="1023.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (411 samples, 0.38%)</title><rect x="74.7491%" y="997" width="0.3767%" height="15" fill="rgb(252,71,50)" fg:x="81555" fg:w="411"/><text x="74.9991%" y="1007.50"></text></g><g><title>value_trait::Builder::object (411 samples, 0.38%)</title><rect x="74.7491%" y="981" width="0.3767%" height="15" fill="rgb(209,86,4)" fg:x="81555" fg:w="411"/><text x="74.9991%" y="991.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (411 samples, 0.38%)</title><rect x="74.7491%" y="965" width="0.3767%" height="15" fill="rgb(229,94,0)" fg:x="81555" fg:w="411"/><text x="74.9991%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (411 samples, 0.38%)</title><rect x="74.7491%" y="949" width="0.3767%" height="15" fill="rgb(252,223,21)" fg:x="81555" fg:w="411"/><text x="74.9991%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (386 samples, 0.35%)</title><rect x="74.7720%" y="933" width="0.3538%" height="15" fill="rgb(230,210,4)" fg:x="81580" fg:w="386"/><text x="75.0220%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (383 samples, 0.35%)</title><rect x="74.7748%" y="917" width="0.3510%" height="15" fill="rgb(240,149,38)" fg:x="81583" fg:w="383"/><text x="75.0248%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (383 samples, 0.35%)</title><rect x="74.7748%" y="901" width="0.3510%" height="15" fill="rgb(254,105,20)" fg:x="81583" fg:w="383"/><text x="75.0248%" y="911.50"></text></g><g><title>alloc::alloc::alloc (383 samples, 0.35%)</title><rect x="74.7748%" y="885" width="0.3510%" height="15" fill="rgb(253,87,46)" fg:x="81583" fg:w="383"/><text x="75.0248%" y="895.50"></text></g><g><title>__rg_alloc (383 samples, 0.35%)</title><rect x="74.7748%" y="869" width="0.3510%" height="15" fill="rgb(253,116,33)" fg:x="81583" fg:w="383"/><text x="75.0248%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (383 samples, 0.35%)</title><rect x="74.7748%" y="853" width="0.3510%" height="15" fill="rgb(229,198,5)" fg:x="81583" fg:w="383"/><text x="75.0248%" y="863.50"></text></g><g><title>rust_alloc (358 samples, 0.33%)</title><rect x="74.7977%" y="837" width="0.3281%" height="15" fill="rgb(242,38,37)" fg:x="81608" fg:w="358"/><text x="75.0477%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (17 samples, 0.02%)</title><rect x="75.1340%" y="1029" width="0.0156%" height="15" fill="rgb(242,69,53)" fg:x="81975" fg:w="17"/><text x="75.3840%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (17 samples, 0.02%)</title><rect x="75.1340%" y="1013" width="0.0156%" height="15" fill="rgb(249,80,16)" fg:x="81975" fg:w="17"/><text x="75.3840%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (17 samples, 0.02%)</title><rect x="75.1340%" y="997" width="0.0156%" height="15" fill="rgb(206,128,11)" fg:x="81975" fg:w="17"/><text x="75.3840%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="75.2019%" y="917" width="0.0110%" height="15" fill="rgb(212,35,20)" fg:x="82049" fg:w="12"/><text x="75.4519%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (83 samples, 0.08%)</title><rect x="75.1496%" y="1013" width="0.0761%" height="15" fill="rgb(236,79,13)" fg:x="81992" fg:w="83"/><text x="75.3996%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (83 samples, 0.08%)</title><rect x="75.1496%" y="997" width="0.0761%" height="15" fill="rgb(233,123,3)" fg:x="81992" fg:w="83"/><text x="75.3996%" y="1007.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (61 samples, 0.06%)</title><rect x="75.1698%" y="981" width="0.0559%" height="15" fill="rgb(214,93,52)" fg:x="82014" fg:w="61"/><text x="75.4198%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (43 samples, 0.04%)</title><rect x="75.1863%" y="965" width="0.0394%" height="15" fill="rgb(251,37,40)" fg:x="82032" fg:w="43"/><text x="75.4363%" y="975.50"></text></g><g><title>core::mem::drop (26 samples, 0.02%)</title><rect x="75.2019%" y="949" width="0.0238%" height="15" fill="rgb(227,80,54)" fg:x="82049" fg:w="26"/><text x="75.4519%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="75.2019%" y="933" width="0.0238%" height="15" fill="rgb(254,48,11)" fg:x="82049" fg:w="26"/><text x="75.4519%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="75.2129%" y="917" width="0.0128%" height="15" fill="rgb(235,193,26)" fg:x="82061" fg:w="14"/><text x="75.4629%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="75.2129%" y="901" width="0.0128%" height="15" fill="rgb(229,99,21)" fg:x="82061" fg:w="14"/><text x="75.4629%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="75.2129%" y="885" width="0.0128%" height="15" fill="rgb(211,140,41)" fg:x="82061" fg:w="14"/><text x="75.4629%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="75.3925%" y="901" width="0.0412%" height="15" fill="rgb(240,227,30)" fg:x="82257" fg:w="45"/><text x="75.6425%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (41 samples, 0.04%)</title><rect x="75.3962%" y="885" width="0.0376%" height="15" fill="rgb(215,224,45)" fg:x="82261" fg:w="41"/><text x="75.6462%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (233 samples, 0.21%)</title><rect x="75.2404%" y="997" width="0.2136%" height="15" fill="rgb(206,123,31)" fg:x="82091" fg:w="233"/><text x="75.4904%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (109 samples, 0.10%)</title><rect x="75.3540%" y="981" width="0.0999%" height="15" fill="rgb(210,138,16)" fg:x="82215" fg:w="109"/><text x="75.6040%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (92 samples, 0.08%)</title><rect x="75.3696%" y="965" width="0.0843%" height="15" fill="rgb(228,57,28)" fg:x="82232" fg:w="92"/><text x="75.6196%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (92 samples, 0.08%)</title><rect x="75.3696%" y="949" width="0.0843%" height="15" fill="rgb(242,170,10)" fg:x="82232" fg:w="92"/><text x="75.6196%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (67 samples, 0.06%)</title><rect x="75.3925%" y="933" width="0.0614%" height="15" fill="rgb(228,214,39)" fg:x="82257" fg:w="67"/><text x="75.6425%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (67 samples, 0.06%)</title><rect x="75.3925%" y="917" width="0.0614%" height="15" fill="rgb(218,179,33)" fg:x="82257" fg:w="67"/><text x="75.6425%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (22 samples, 0.02%)</title><rect x="75.4338%" y="901" width="0.0202%" height="15" fill="rgb(235,193,39)" fg:x="82302" fg:w="22"/><text x="75.6838%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="75.4338%" y="885" width="0.0202%" height="15" fill="rgb(219,221,36)" fg:x="82302" fg:w="22"/><text x="75.6838%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (22 samples, 0.02%)</title><rect x="75.4338%" y="869" width="0.0202%" height="15" fill="rgb(248,218,19)" fg:x="82302" fg:w="22"/><text x="75.6838%" y="879.50"></text></g><g><title>rust_dealloc (18 samples, 0.02%)</title><rect x="75.4686%" y="965" width="0.0165%" height="15" fill="rgb(205,50,9)" fg:x="82340" fg:w="18"/><text x="75.7186%" y="975.50"></text></g><g><title>size_to_sizeclass (16 samples, 0.01%)</title><rect x="75.4851%" y="965" width="0.0147%" height="15" fill="rgb(238,81,28)" fg:x="82358" fg:w="16"/><text x="75.7351%" y="975.50"></text></g><g><title>rust_dealloc (28 samples, 0.03%)</title><rect x="75.5052%" y="901" width="0.0257%" height="15" fill="rgb(235,110,19)" fg:x="82380" fg:w="28"/><text x="75.7552%" y="911.50"></text></g><g><title>sizeclass_to_size (12 samples, 0.01%)</title><rect x="75.5309%" y="901" width="0.0110%" height="15" fill="rgb(214,7,14)" fg:x="82408" fg:w="12"/><text x="75.7809%" y="911.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (12 samples, 0.01%)</title><rect x="75.5309%" y="885" width="0.0110%" height="15" fill="rgb(211,77,3)" fg:x="82408" fg:w="12"/><text x="75.7809%" y="895.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (48 samples, 0.04%)</title><rect x="75.5777%" y="853" width="0.0440%" height="15" fill="rgb(229,5,9)" fg:x="82459" fg:w="48"/><text x="75.8277%" y="863.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (46 samples, 0.04%)</title><rect x="75.5795%" y="837" width="0.0422%" height="15" fill="rgb(225,90,11)" fg:x="82461" fg:w="46"/><text x="75.8295%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (114 samples, 0.10%)</title><rect x="75.5447%" y="901" width="0.1045%" height="15" fill="rgb(242,56,8)" fg:x="82423" fg:w="114"/><text x="75.7947%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (114 samples, 0.10%)</title><rect x="75.5447%" y="885" width="0.1045%" height="15" fill="rgb(249,212,39)" fg:x="82423" fg:w="114"/><text x="75.7947%" y="895.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (112 samples, 0.10%)</title><rect x="75.5465%" y="869" width="0.1027%" height="15" fill="rgb(236,90,9)" fg:x="82425" fg:w="112"/><text x="75.7965%" y="879.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (30 samples, 0.03%)</title><rect x="75.6216%" y="853" width="0.0275%" height="15" fill="rgb(206,88,35)" fg:x="82507" fg:w="30"/><text x="75.8716%" y="863.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (30 samples, 0.03%)</title><rect x="75.6216%" y="837" width="0.0275%" height="15" fill="rgb(205,126,30)" fg:x="82507" fg:w="30"/><text x="75.8716%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (187 samples, 0.17%)</title><rect x="75.4997%" y="933" width="0.1714%" height="15" fill="rgb(230,176,12)" fg:x="82374" fg:w="187"/><text x="75.7497%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (187 samples, 0.17%)</title><rect x="75.4997%" y="917" width="0.1714%" height="15" fill="rgb(243,19,9)" fg:x="82374" fg:w="187"/><text x="75.7497%" y="927.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (24 samples, 0.02%)</title><rect x="75.6491%" y="901" width="0.0220%" height="15" fill="rgb(245,171,17)" fg:x="82537" fg:w="24"/><text x="75.8991%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (190 samples, 0.17%)</title><rect x="75.4997%" y="965" width="0.1741%" height="15" fill="rgb(227,52,21)" fg:x="82374" fg:w="190"/><text x="75.7497%" y="975.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (190 samples, 0.17%)</title><rect x="75.4997%" y="949" width="0.1741%" height="15" fill="rgb(238,69,14)" fg:x="82374" fg:w="190"/><text x="75.7497%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (226 samples, 0.21%)</title><rect x="75.4686%" y="981" width="0.2071%" height="15" fill="rgb(241,156,39)" fg:x="82340" fg:w="226"/><text x="75.7186%" y="991.50"></text></g><g><title>rust_dealloc (247 samples, 0.23%)</title><rect x="75.4539%" y="997" width="0.2264%" height="15" fill="rgb(212,227,28)" fg:x="82324" fg:w="247"/><text x="75.7039%" y="1007.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (13 samples, 0.01%)</title><rect x="75.6821%" y="981" width="0.0119%" height="15" fill="rgb(209,118,27)" fg:x="82573" fg:w="13"/><text x="75.9321%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (595 samples, 0.55%)</title><rect x="75.1496%" y="1029" width="0.5453%" height="15" fill="rgb(226,102,5)" fg:x="81992" fg:w="595"/><text x="75.3996%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (512 samples, 0.47%)</title><rect x="75.2257%" y="1013" width="0.4693%" height="15" fill="rgb(223,34,3)" fg:x="82075" fg:w="512"/><text x="75.4757%" y="1023.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (16 samples, 0.01%)</title><rect x="75.6803%" y="997" width="0.0147%" height="15" fill="rgb(221,81,38)" fg:x="82571" fg:w="16"/><text x="75.9303%" y="1007.50"></text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (14 samples, 0.01%)</title><rect x="75.6950%" y="1029" width="0.0128%" height="15" fill="rgb(236,219,28)" fg:x="82587" fg:w="14"/><text x="75.9450%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.01%)</title><rect x="75.6977%" y="1013" width="0.0101%" height="15" fill="rgb(213,200,14)" fg:x="82590" fg:w="11"/><text x="75.9477%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,962 samples, 2.71%)</title><rect x="72.9967%" y="1189" width="2.7148%" height="15" fill="rgb(240,33,19)" fg:x="79643" fg:w="2962"/><text x="73.2467%" y="1199.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,958 samples, 2.71%)</title><rect x="73.0003%" y="1173" width="2.7111%" height="15" fill="rgb(233,113,27)" fg:x="79647" fg:w="2958"/><text x="73.2503%" y="1183.50">st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,958 samples, 2.71%)</title><rect x="73.0003%" y="1157" width="2.7111%" height="15" fill="rgb(220,221,18)" fg:x="79647" fg:w="2958"/><text x="73.2503%" y="1167.50">as..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,958 samples, 2.71%)</title><rect x="73.0003%" y="1141" width="2.7111%" height="15" fill="rgb(238,92,8)" fg:x="79647" fg:w="2958"/><text x="73.2503%" y="1151.50">&lt;a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,958 samples, 2.71%)</title><rect x="73.0003%" y="1125" width="2.7111%" height="15" fill="rgb(222,164,16)" fg:x="79647" fg:w="2958"/><text x="73.2503%" y="1135.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (2,958 samples, 2.71%)</title><rect x="73.0003%" y="1109" width="2.7111%" height="15" fill="rgb(241,119,3)" fg:x="79647" fg:w="2958"/><text x="73.2503%" y="1119.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,958 samples, 2.71%)</title><rect x="73.0003%" y="1093" width="2.7111%" height="15" fill="rgb(241,44,8)" fg:x="79647" fg:w="2958"/><text x="73.2503%" y="1103.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (2,958 samples, 2.71%)</title><rect x="73.0003%" y="1077" width="2.7111%" height="15" fill="rgb(230,36,40)" fg:x="79647" fg:w="2958"/><text x="73.2503%" y="1087.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_events (2,549 samples, 2.34%)</title><rect x="73.3752%" y="1061" width="2.3363%" height="15" fill="rgb(243,16,36)" fg:x="80056" fg:w="2549"/><text x="73.6252%" y="1071.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_event (1,668 samples, 1.53%)</title><rect x="74.1827%" y="1045" width="1.5288%" height="15" fill="rgb(231,4,26)" fg:x="80937" fg:w="1668"/><text x="74.4327%" y="1055.50"></text></g><g><title>tremor_common::time::nanotime (17 samples, 0.02%)</title><rect x="75.7115%" y="1189" width="0.0156%" height="15" fill="rgb(240,9,31)" fg:x="82605" fg:w="17"/><text x="75.9615%" y="1199.50"></text></g><g><title>std::time::SystemTime::now (17 samples, 0.02%)</title><rect x="75.7115%" y="1173" width="0.0156%" height="15" fill="rgb(207,173,15)" fg:x="82605" fg:w="17"/><text x="75.9615%" y="1183.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (17 samples, 0.02%)</title><rect x="75.7115%" y="1157" width="0.0156%" height="15" fill="rgb(224,192,53)" fg:x="82605" fg:w="17"/><text x="75.9615%" y="1167.50"></text></g><g><title>std::sys::unix::time::inner::now (17 samples, 0.02%)</title><rect x="75.7115%" y="1141" width="0.0156%" height="15" fill="rgb(223,67,28)" fg:x="82605" fg:w="17"/><text x="75.9615%" y="1151.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (14 samples, 0.01%)</title><rect x="75.7271%" y="1189" width="0.0128%" height="15" fill="rgb(211,20,47)" fg:x="82622" fg:w="14"/><text x="75.9771%" y="1199.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (18 samples, 0.02%)</title><rect x="75.7463%" y="1189" width="0.0165%" height="15" fill="rgb(240,228,2)" fg:x="82643" fg:w="18"/><text x="75.9963%" y="1199.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (15 samples, 0.01%)</title><rect x="75.7655%" y="1189" width="0.0137%" height="15" fill="rgb(248,151,12)" fg:x="82664" fg:w="15"/><text x="76.0155%" y="1199.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.04%)</title><rect x="76.3008%" y="949" width="0.0449%" height="15" fill="rgb(244,8,39)" fg:x="83248" fg:w="49"/><text x="76.5508%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (49 samples, 0.04%)</title><rect x="76.3008%" y="933" width="0.0449%" height="15" fill="rgb(222,26,8)" fg:x="83248" fg:w="49"/><text x="76.5508%" y="943.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (42 samples, 0.04%)</title><rect x="76.3072%" y="917" width="0.0385%" height="15" fill="rgb(213,106,44)" fg:x="83255" fg:w="42"/><text x="76.5572%" y="927.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (30 samples, 0.03%)</title><rect x="76.3182%" y="901" width="0.0275%" height="15" fill="rgb(214,129,20)" fg:x="83267" fg:w="30"/><text x="76.5682%" y="911.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (30 samples, 0.03%)</title><rect x="76.3182%" y="885" width="0.0275%" height="15" fill="rgb(212,32,13)" fg:x="83267" fg:w="30"/><text x="76.5682%" y="895.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (30 samples, 0.03%)</title><rect x="76.3182%" y="869" width="0.0275%" height="15" fill="rgb(208,168,33)" fg:x="83267" fg:w="30"/><text x="76.5682%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (281 samples, 0.26%)</title><rect x="76.2816%" y="997" width="0.2576%" height="15" fill="rgb(231,207,8)" fg:x="83227" fg:w="281"/><text x="76.5316%" y="1007.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (280 samples, 0.26%)</title><rect x="76.2825%" y="981" width="0.2566%" height="15" fill="rgb(235,219,23)" fg:x="83228" fg:w="280"/><text x="76.5325%" y="991.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (264 samples, 0.24%)</title><rect x="76.2971%" y="965" width="0.2420%" height="15" fill="rgb(226,216,26)" fg:x="83244" fg:w="264"/><text x="76.5471%" y="975.50"></text></g><g><title>snmalloc::FreeListIter::take (198 samples, 0.18%)</title><rect x="76.3576%" y="949" width="0.1815%" height="15" fill="rgb(239,137,16)" fg:x="83310" fg:w="198"/><text x="76.6076%" y="959.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (198 samples, 0.18%)</title><rect x="76.3576%" y="933" width="0.1815%" height="15" fill="rgb(207,12,36)" fg:x="83310" fg:w="198"/><text x="76.6076%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (308 samples, 0.28%)</title><rect x="76.2669%" y="1109" width="0.2823%" height="15" fill="rgb(210,214,24)" fg:x="83211" fg:w="308"/><text x="76.5169%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (308 samples, 0.28%)</title><rect x="76.2669%" y="1093" width="0.2823%" height="15" fill="rgb(206,56,30)" fg:x="83211" fg:w="308"/><text x="76.5169%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (308 samples, 0.28%)</title><rect x="76.2669%" y="1077" width="0.2823%" height="15" fill="rgb(228,143,26)" fg:x="83211" fg:w="308"/><text x="76.5169%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (304 samples, 0.28%)</title><rect x="76.2706%" y="1061" width="0.2786%" height="15" fill="rgb(216,218,46)" fg:x="83215" fg:w="304"/><text x="76.5206%" y="1071.50"></text></g><g><title>__rg_alloc (304 samples, 0.28%)</title><rect x="76.2706%" y="1045" width="0.2786%" height="15" fill="rgb(206,6,19)" fg:x="83215" fg:w="304"/><text x="76.5206%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (304 samples, 0.28%)</title><rect x="76.2706%" y="1029" width="0.2786%" height="15" fill="rgb(239,177,51)" fg:x="83215" fg:w="304"/><text x="76.5206%" y="1039.50"></text></g><g><title>rust_alloc (303 samples, 0.28%)</title><rect x="76.2715%" y="1013" width="0.2777%" height="15" fill="rgb(216,55,25)" fg:x="83216" fg:w="303"/><text x="76.5215%" y="1023.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="76.5391%" y="997" width="0.0101%" height="15" fill="rgb(231,163,29)" fg:x="83508" fg:w="11"/><text x="76.7891%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (14 samples, 0.01%)</title><rect x="76.5492%" y="1109" width="0.0128%" height="15" fill="rgb(232,149,50)" fg:x="83519" fg:w="14"/><text x="76.7992%" y="1119.50"></text></g><g><title>alloc::slice::hack::into_vec (14 samples, 0.01%)</title><rect x="76.5492%" y="1093" width="0.0128%" height="15" fill="rgb(223,142,48)" fg:x="83519" fg:w="14"/><text x="76.7992%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (14 samples, 0.01%)</title><rect x="76.5492%" y="1077" width="0.0128%" height="15" fill="rgb(245,83,23)" fg:x="83519" fg:w="14"/><text x="76.7992%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="76.5620%" y="1109" width="0.0128%" height="15" fill="rgb(224,63,2)" fg:x="83533" fg:w="14"/><text x="76.8120%" y="1119.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (877 samples, 0.80%)</title><rect x="75.7820%" y="1125" width="0.8038%" height="15" fill="rgb(218,65,53)" fg:x="82682" fg:w="877"/><text x="76.0320%" y="1135.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (153 samples, 0.14%)</title><rect x="76.8003%" y="1109" width="0.1402%" height="15" fill="rgb(221,84,29)" fg:x="83793" fg:w="153"/><text x="77.0503%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (14 samples, 0.01%)</title><rect x="76.9855%" y="885" width="0.0128%" height="15" fill="rgb(234,0,32)" fg:x="83995" fg:w="14"/><text x="77.2355%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (71 samples, 0.07%)</title><rect x="76.9855%" y="917" width="0.0651%" height="15" fill="rgb(206,20,16)" fg:x="83995" fg:w="71"/><text x="77.2355%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (71 samples, 0.07%)</title><rect x="76.9855%" y="901" width="0.0651%" height="15" fill="rgb(244,172,18)" fg:x="83995" fg:w="71"/><text x="77.2355%" y="911.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (57 samples, 0.05%)</title><rect x="76.9983%" y="885" width="0.0522%" height="15" fill="rgb(254,133,1)" fg:x="84009" fg:w="57"/><text x="77.2483%" y="895.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (48 samples, 0.04%)</title><rect x="77.0066%" y="869" width="0.0440%" height="15" fill="rgb(222,206,41)" fg:x="84018" fg:w="48"/><text x="77.2566%" y="879.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (48 samples, 0.04%)</title><rect x="77.0066%" y="853" width="0.0440%" height="15" fill="rgb(212,3,42)" fg:x="84018" fg:w="48"/><text x="77.2566%" y="863.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (48 samples, 0.04%)</title><rect x="77.0066%" y="837" width="0.0440%" height="15" fill="rgb(241,11,4)" fg:x="84018" fg:w="48"/><text x="77.2566%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="77.0560%" y="917" width="0.0339%" height="15" fill="rgb(205,19,26)" fg:x="84072" fg:w="37"/><text x="77.3060%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="77.0570%" y="901" width="0.0330%" height="15" fill="rgb(210,179,32)" fg:x="84073" fg:w="36"/><text x="77.3070%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="77.0588%" y="885" width="0.0312%" height="15" fill="rgb(227,116,49)" fg:x="84075" fg:w="34"/><text x="77.3088%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="77.0588%" y="869" width="0.0312%" height="15" fill="rgb(211,146,6)" fg:x="84075" fg:w="34"/><text x="77.3088%" y="879.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (34 samples, 0.03%)</title><rect x="77.0588%" y="853" width="0.0312%" height="15" fill="rgb(219,44,39)" fg:x="84075" fg:w="34"/><text x="77.3088%" y="863.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (16 samples, 0.01%)</title><rect x="77.0753%" y="837" width="0.0147%" height="15" fill="rgb(234,128,11)" fg:x="84093" fg:w="16"/><text x="77.3253%" y="847.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="77.0753%" y="821" width="0.0147%" height="15" fill="rgb(220,183,53)" fg:x="84093" fg:w="16"/><text x="77.3253%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (182 samples, 0.17%)</title><rect x="76.9781%" y="965" width="0.1668%" height="15" fill="rgb(213,219,32)" fg:x="83987" fg:w="182"/><text x="77.2281%" y="975.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (181 samples, 0.17%)</title><rect x="76.9791%" y="949" width="0.1659%" height="15" fill="rgb(232,156,16)" fg:x="83988" fg:w="181"/><text x="77.2291%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (174 samples, 0.16%)</title><rect x="76.9855%" y="933" width="0.1595%" height="15" fill="rgb(246,135,34)" fg:x="83995" fg:w="174"/><text x="77.2355%" y="943.50"></text></g><g><title>snmalloc::FreeListIter::take (57 samples, 0.05%)</title><rect x="77.0927%" y="917" width="0.0522%" height="15" fill="rgb(241,99,0)" fg:x="84112" fg:w="57"/><text x="77.3427%" y="927.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (57 samples, 0.05%)</title><rect x="77.0927%" y="901" width="0.0522%" height="15" fill="rgb(222,103,45)" fg:x="84112" fg:w="57"/><text x="77.3427%" y="911.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (230 samples, 0.21%)</title><rect x="76.9406%" y="1109" width="0.2108%" height="15" fill="rgb(212,57,4)" fg:x="83946" fg:w="230"/><text x="77.1906%" y="1119.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (230 samples, 0.21%)</title><rect x="76.9406%" y="1093" width="0.2108%" height="15" fill="rgb(215,68,47)" fg:x="83946" fg:w="230"/><text x="77.1906%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (204 samples, 0.19%)</title><rect x="76.9644%" y="1077" width="0.1870%" height="15" fill="rgb(230,84,2)" fg:x="83972" fg:w="204"/><text x="77.2144%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (204 samples, 0.19%)</title><rect x="76.9644%" y="1061" width="0.1870%" height="15" fill="rgb(220,102,14)" fg:x="83972" fg:w="204"/><text x="77.2144%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (204 samples, 0.19%)</title><rect x="76.9644%" y="1045" width="0.1870%" height="15" fill="rgb(240,10,32)" fg:x="83972" fg:w="204"/><text x="77.2144%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (204 samples, 0.19%)</title><rect x="76.9644%" y="1029" width="0.1870%" height="15" fill="rgb(215,47,27)" fg:x="83972" fg:w="204"/><text x="77.2144%" y="1039.50"></text></g><g><title>__rg_alloc (204 samples, 0.19%)</title><rect x="76.9644%" y="1013" width="0.1870%" height="15" fill="rgb(233,188,43)" fg:x="83972" fg:w="204"/><text x="77.2144%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (204 samples, 0.19%)</title><rect x="76.9644%" y="997" width="0.1870%" height="15" fill="rgb(253,190,1)" fg:x="83972" fg:w="204"/><text x="77.2144%" y="1007.50"></text></g><g><title>rust_alloc (199 samples, 0.18%)</title><rect x="76.9690%" y="981" width="0.1824%" height="15" fill="rgb(206,114,52)" fg:x="83977" fg:w="199"/><text x="77.2190%" y="991.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (33 samples, 0.03%)</title><rect x="77.1825%" y="949" width="0.0302%" height="15" fill="rgb(233,120,37)" fg:x="84210" fg:w="33"/><text x="77.4325%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (33 samples, 0.03%)</title><rect x="77.1825%" y="933" width="0.0302%" height="15" fill="rgb(214,52,39)" fg:x="84210" fg:w="33"/><text x="77.4325%" y="943.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (25 samples, 0.02%)</title><rect x="77.1899%" y="917" width="0.0229%" height="15" fill="rgb(223,80,29)" fg:x="84218" fg:w="25"/><text x="77.4399%" y="927.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (21 samples, 0.02%)</title><rect x="77.1935%" y="901" width="0.0192%" height="15" fill="rgb(230,101,40)" fg:x="84222" fg:w="21"/><text x="77.4435%" y="911.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (21 samples, 0.02%)</title><rect x="77.1935%" y="885" width="0.0192%" height="15" fill="rgb(219,211,8)" fg:x="84222" fg:w="21"/><text x="77.4435%" y="895.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (21 samples, 0.02%)</title><rect x="77.1935%" y="869" width="0.0192%" height="15" fill="rgb(252,126,28)" fg:x="84222" fg:w="21"/><text x="77.4435%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (209 samples, 0.19%)</title><rect x="77.1679%" y="997" width="0.1916%" height="15" fill="rgb(215,56,38)" fg:x="84194" fg:w="209"/><text x="77.4179%" y="1007.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (205 samples, 0.19%)</title><rect x="77.1715%" y="981" width="0.1879%" height="15" fill="rgb(249,55,44)" fg:x="84198" fg:w="205"/><text x="77.4215%" y="991.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (196 samples, 0.18%)</title><rect x="77.1798%" y="965" width="0.1796%" height="15" fill="rgb(220,221,32)" fg:x="84207" fg:w="196"/><text x="77.4298%" y="975.50"></text></g><g><title>snmalloc::FreeListIter::take (143 samples, 0.13%)</title><rect x="77.2284%" y="949" width="0.1311%" height="15" fill="rgb(212,216,41)" fg:x="84260" fg:w="143"/><text x="77.4784%" y="959.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (143 samples, 0.13%)</title><rect x="77.2284%" y="933" width="0.1311%" height="15" fill="rgb(228,213,43)" fg:x="84260" fg:w="143"/><text x="77.4784%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (238 samples, 0.22%)</title><rect x="77.1514%" y="1109" width="0.2181%" height="15" fill="rgb(211,31,26)" fg:x="84176" fg:w="238"/><text x="77.4014%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (238 samples, 0.22%)</title><rect x="77.1514%" y="1093" width="0.2181%" height="15" fill="rgb(229,202,19)" fg:x="84176" fg:w="238"/><text x="77.4014%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (238 samples, 0.22%)</title><rect x="77.1514%" y="1077" width="0.2181%" height="15" fill="rgb(229,105,46)" fg:x="84176" fg:w="238"/><text x="77.4014%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (238 samples, 0.22%)</title><rect x="77.1514%" y="1061" width="0.2181%" height="15" fill="rgb(235,108,1)" fg:x="84176" fg:w="238"/><text x="77.4014%" y="1071.50"></text></g><g><title>__rg_alloc (238 samples, 0.22%)</title><rect x="77.1514%" y="1045" width="0.2181%" height="15" fill="rgb(245,111,35)" fg:x="84176" fg:w="238"/><text x="77.4014%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (238 samples, 0.22%)</title><rect x="77.1514%" y="1029" width="0.2181%" height="15" fill="rgb(219,185,31)" fg:x="84176" fg:w="238"/><text x="77.4014%" y="1039.50"></text></g><g><title>rust_alloc (220 samples, 0.20%)</title><rect x="77.1679%" y="1013" width="0.2016%" height="15" fill="rgb(214,4,43)" fg:x="84194" fg:w="220"/><text x="77.4179%" y="1023.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="77.3594%" y="997" width="0.0101%" height="15" fill="rgb(235,227,40)" fg:x="84403" fg:w="11"/><text x="77.6094%" y="1007.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::new (44 samples, 0.04%)</title><rect x="77.3695%" y="1109" width="0.0403%" height="15" fill="rgb(230,88,30)" fg:x="84414" fg:w="44"/><text x="77.6195%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (36 samples, 0.03%)</title><rect x="77.7792%" y="1093" width="0.0330%" height="15" fill="rgb(216,217,1)" fg:x="84861" fg:w="36"/><text x="78.0292%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (48 samples, 0.04%)</title><rect x="78.0890%" y="949" width="0.0440%" height="15" fill="rgb(248,139,50)" fg:x="85199" fg:w="48"/><text x="78.3390%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (34 samples, 0.03%)</title><rect x="78.1018%" y="933" width="0.0312%" height="15" fill="rgb(233,1,21)" fg:x="85213" fg:w="34"/><text x="78.3518%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="78.1147%" y="917" width="0.0183%" height="15" fill="rgb(215,183,12)" fg:x="85227" fg:w="20"/><text x="78.3647%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.01%)</title><rect x="78.1183%" y="901" width="0.0147%" height="15" fill="rgb(229,104,42)" fg:x="85231" fg:w="16"/><text x="78.3683%" y="911.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (254 samples, 0.23%)</title><rect x="77.9103%" y="1029" width="0.2328%" height="15" fill="rgb(243,34,48)" fg:x="85004" fg:w="254"/><text x="78.1603%" y="1039.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (245 samples, 0.22%)</title><rect x="77.9185%" y="1013" width="0.2246%" height="15" fill="rgb(239,11,44)" fg:x="85013" fg:w="245"/><text x="78.1685%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (74 samples, 0.07%)</title><rect x="78.0752%" y="997" width="0.0678%" height="15" fill="rgb(231,98,35)" fg:x="85184" fg:w="74"/><text x="78.3252%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (59 samples, 0.05%)</title><rect x="78.0890%" y="981" width="0.0541%" height="15" fill="rgb(233,28,25)" fg:x="85199" fg:w="59"/><text x="78.3390%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (59 samples, 0.05%)</title><rect x="78.0890%" y="965" width="0.0541%" height="15" fill="rgb(234,123,11)" fg:x="85199" fg:w="59"/><text x="78.3390%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="78.1330%" y="949" width="0.0101%" height="15" fill="rgb(220,69,3)" fg:x="85247" fg:w="11"/><text x="78.3830%" y="959.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (324 samples, 0.30%)</title><rect x="77.8470%" y="1045" width="0.2970%" height="15" fill="rgb(214,64,36)" fg:x="84935" fg:w="324"/><text x="78.0970%" y="1055.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (358 samples, 0.33%)</title><rect x="77.8470%" y="1061" width="0.3281%" height="15" fill="rgb(211,138,32)" fg:x="84935" fg:w="358"/><text x="78.0970%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (34 samples, 0.03%)</title><rect x="78.1440%" y="1045" width="0.0312%" height="15" fill="rgb(213,118,47)" fg:x="85259" fg:w="34"/><text x="78.3940%" y="1055.50"></text></g><g><title>core::ptr::write (34 samples, 0.03%)</title><rect x="78.1440%" y="1029" width="0.0312%" height="15" fill="rgb(243,124,49)" fg:x="85259" fg:w="34"/><text x="78.3940%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (21 samples, 0.02%)</title><rect x="78.1953%" y="853" width="0.0192%" height="15" fill="rgb(221,30,28)" fg:x="85315" fg:w="21"/><text x="78.4453%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (113 samples, 0.10%)</title><rect x="78.1953%" y="885" width="0.1036%" height="15" fill="rgb(246,37,13)" fg:x="85315" fg:w="113"/><text x="78.4453%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (113 samples, 0.10%)</title><rect x="78.1953%" y="869" width="0.1036%" height="15" fill="rgb(249,66,14)" fg:x="85315" fg:w="113"/><text x="78.4453%" y="879.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (92 samples, 0.08%)</title><rect x="78.2146%" y="853" width="0.0843%" height="15" fill="rgb(213,166,5)" fg:x="85336" fg:w="92"/><text x="78.4646%" y="863.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (74 samples, 0.07%)</title><rect x="78.2311%" y="837" width="0.0678%" height="15" fill="rgb(221,66,24)" fg:x="85354" fg:w="74"/><text x="78.4811%" y="847.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (74 samples, 0.07%)</title><rect x="78.2311%" y="821" width="0.0678%" height="15" fill="rgb(210,132,17)" fg:x="85354" fg:w="74"/><text x="78.4811%" y="831.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (74 samples, 0.07%)</title><rect x="78.2311%" y="805" width="0.0678%" height="15" fill="rgb(243,202,5)" fg:x="85354" fg:w="74"/><text x="78.4811%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="78.3035%" y="885" width="0.0147%" height="15" fill="rgb(233,70,48)" fg:x="85433" fg:w="16"/><text x="78.5535%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="78.3035%" y="869" width="0.0147%" height="15" fill="rgb(238,41,26)" fg:x="85433" fg:w="16"/><text x="78.5535%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="78.3035%" y="853" width="0.0147%" height="15" fill="rgb(241,19,31)" fg:x="85433" fg:w="16"/><text x="78.5535%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="78.3035%" y="837" width="0.0147%" height="15" fill="rgb(214,76,10)" fg:x="85433" fg:w="16"/><text x="78.5535%" y="847.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (16 samples, 0.01%)</title><rect x="78.3035%" y="821" width="0.0147%" height="15" fill="rgb(254,202,22)" fg:x="85433" fg:w="16"/><text x="78.5535%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (185 samples, 0.17%)</title><rect x="78.1843%" y="933" width="0.1696%" height="15" fill="rgb(214,72,24)" fg:x="85303" fg:w="185"/><text x="78.4343%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (185 samples, 0.17%)</title><rect x="78.1843%" y="917" width="0.1696%" height="15" fill="rgb(221,92,46)" fg:x="85303" fg:w="185"/><text x="78.4343%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (181 samples, 0.17%)</title><rect x="78.1880%" y="901" width="0.1659%" height="15" fill="rgb(246,13,50)" fg:x="85307" fg:w="181"/><text x="78.4380%" y="911.50"></text></g><g><title>snmalloc::FreeListIter::take (38 samples, 0.03%)</title><rect x="78.3191%" y="885" width="0.0348%" height="15" fill="rgb(240,165,38)" fg:x="85450" fg:w="38"/><text x="78.5691%" y="895.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (38 samples, 0.03%)</title><rect x="78.3191%" y="869" width="0.0348%" height="15" fill="rgb(241,24,51)" fg:x="85450" fg:w="38"/><text x="78.5691%" y="879.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (592 samples, 0.54%)</title><rect x="77.8122%" y="1093" width="0.5426%" height="15" fill="rgb(227,51,44)" fg:x="84897" fg:w="592"/><text x="78.0622%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (558 samples, 0.51%)</title><rect x="77.8434%" y="1077" width="0.5114%" height="15" fill="rgb(231,121,3)" fg:x="84931" fg:w="558"/><text x="78.0934%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (196 samples, 0.18%)</title><rect x="78.1752%" y="1061" width="0.1796%" height="15" fill="rgb(245,3,41)" fg:x="85293" fg:w="196"/><text x="78.4252%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (196 samples, 0.18%)</title><rect x="78.1752%" y="1045" width="0.1796%" height="15" fill="rgb(214,13,26)" fg:x="85293" fg:w="196"/><text x="78.4252%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (196 samples, 0.18%)</title><rect x="78.1752%" y="1029" width="0.1796%" height="15" fill="rgb(252,75,11)" fg:x="85293" fg:w="196"/><text x="78.4252%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (196 samples, 0.18%)</title><rect x="78.1752%" y="1013" width="0.1796%" height="15" fill="rgb(218,226,17)" fg:x="85293" fg:w="196"/><text x="78.4252%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (196 samples, 0.18%)</title><rect x="78.1752%" y="997" width="0.1796%" height="15" fill="rgb(248,89,38)" fg:x="85293" fg:w="196"/><text x="78.4252%" y="1007.50"></text></g><g><title>__rg_alloc (196 samples, 0.18%)</title><rect x="78.1752%" y="981" width="0.1796%" height="15" fill="rgb(237,73,46)" fg:x="85293" fg:w="196"/><text x="78.4252%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (196 samples, 0.18%)</title><rect x="78.1752%" y="965" width="0.1796%" height="15" fill="rgb(242,78,33)" fg:x="85293" fg:w="196"/><text x="78.4252%" y="975.50"></text></g><g><title>rust_alloc (196 samples, 0.18%)</title><rect x="78.1752%" y="949" width="0.1796%" height="15" fill="rgb(235,60,3)" fg:x="85293" fg:w="196"/><text x="78.4252%" y="959.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (1,328 samples, 1.22%)</title><rect x="77.4098%" y="1109" width="1.2172%" height="15" fill="rgb(216,172,19)" fg:x="84458" fg:w="1328"/><text x="77.6598%" y="1119.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (297 samples, 0.27%)</title><rect x="78.3548%" y="1093" width="0.2722%" height="15" fill="rgb(227,6,42)" fg:x="85489" fg:w="297"/><text x="78.6048%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (3,109 samples, 2.85%)</title><rect x="75.7793%" y="1189" width="2.8495%" height="15" fill="rgb(223,207,42)" fg:x="82679" fg:w="3109"/><text x="76.0293%" y="1199.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,109 samples, 2.85%)</title><rect x="75.7793%" y="1173" width="2.8495%" height="15" fill="rgb(246,138,30)" fg:x="82679" fg:w="3109"/><text x="76.0293%" y="1183.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,108 samples, 2.85%)</title><rect x="75.7802%" y="1157" width="2.8486%" height="15" fill="rgb(251,199,47)" fg:x="82680" fg:w="3108"/><text x="76.0302%" y="1167.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,108 samples, 2.85%)</title><rect x="75.7802%" y="1141" width="2.8486%" height="15" fill="rgb(228,218,44)" fg:x="82680" fg:w="3108"/><text x="76.0302%" y="1151.50">tr..</text></g><g><title>tremor_script::srs::EventPayload::try_new (2,229 samples, 2.04%)</title><rect x="76.5859%" y="1125" width="2.0430%" height="15" fill="rgb(220,68,6)" fg:x="83559" fg:w="2229"/><text x="76.8359%" y="1135.50">t..</text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (15 samples, 0.01%)</title><rect x="78.6288%" y="1189" width="0.0137%" height="15" fill="rgb(240,60,26)" fg:x="85788" fg:w="15"/><text x="78.8788%" y="1199.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (11 samples, 0.01%)</title><rect x="78.6591%" y="1189" width="0.0101%" height="15" fill="rgb(211,200,19)" fg:x="85821" fg:w="11"/><text x="78.9091%" y="1199.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="78.8992%" y="1045" width="0.0229%" height="15" fill="rgb(242,145,30)" fg:x="86083" fg:w="25"/><text x="79.1492%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (25 samples, 0.02%)</title><rect x="78.8992%" y="1029" width="0.0229%" height="15" fill="rgb(225,64,13)" fg:x="86083" fg:w="25"/><text x="79.1492%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.02%)</title><rect x="78.8992%" y="1013" width="0.0229%" height="15" fill="rgb(218,103,35)" fg:x="86083" fg:w="25"/><text x="79.1492%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.02%)</title><rect x="78.8992%" y="997" width="0.0229%" height="15" fill="rgb(216,93,46)" fg:x="86083" fg:w="25"/><text x="79.1492%" y="1007.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="78.9221%" y="1045" width="0.0119%" height="15" fill="rgb(225,159,27)" fg:x="86108" fg:w="13"/><text x="79.1721%" y="1055.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (16 samples, 0.01%)</title><rect x="78.9341%" y="1045" width="0.0147%" height="15" fill="rgb(225,204,11)" fg:x="86121" fg:w="16"/><text x="79.1841%" y="1055.50"></text></g><g><title>core::mem::replace (16 samples, 0.01%)</title><rect x="78.9341%" y="1029" width="0.0147%" height="15" fill="rgb(205,56,4)" fg:x="86121" fg:w="16"/><text x="79.1841%" y="1039.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="78.9350%" y="1013" width="0.0137%" height="15" fill="rgb(206,6,35)" fg:x="86122" fg:w="15"/><text x="79.1850%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (185 samples, 0.17%)</title><rect x="79.0156%" y="1029" width="0.1696%" height="15" fill="rgb(247,73,52)" fg:x="86210" fg:w="185"/><text x="79.2656%" y="1039.50"></text></g><g><title>core::mem::replace (185 samples, 0.17%)</title><rect x="79.0156%" y="1013" width="0.1696%" height="15" fill="rgb(246,97,4)" fg:x="86210" fg:w="185"/><text x="79.2656%" y="1023.50"></text></g><g><title>core::ptr::read (185 samples, 0.17%)</title><rect x="79.0156%" y="997" width="0.1696%" height="15" fill="rgb(212,37,15)" fg:x="86210" fg:w="185"/><text x="79.2656%" y="1007.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (308 samples, 0.28%)</title><rect x="78.9487%" y="1045" width="0.2823%" height="15" fill="rgb(208,130,40)" fg:x="86137" fg:w="308"/><text x="79.1987%" y="1055.50"></text></g><g><title>core::mem::drop (50 samples, 0.05%)</title><rect x="79.1852%" y="1029" width="0.0458%" height="15" fill="rgb(236,55,29)" fg:x="86395" fg:w="50"/><text x="79.4352%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (50 samples, 0.05%)</title><rect x="79.1852%" y="1013" width="0.0458%" height="15" fill="rgb(209,156,45)" fg:x="86395" fg:w="50"/><text x="79.4352%" y="1023.50"></text></g><g><title>core::mem::drop (32 samples, 0.03%)</title><rect x="79.2310%" y="1045" width="0.0293%" height="15" fill="rgb(249,107,4)" fg:x="86445" fg:w="32"/><text x="79.4810%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (32 samples, 0.03%)</title><rect x="79.2310%" y="1029" width="0.0293%" height="15" fill="rgb(227,7,13)" fg:x="86445" fg:w="32"/><text x="79.4810%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (32 samples, 0.03%)</title><rect x="79.2310%" y="1013" width="0.0293%" height="15" fill="rgb(250,129,14)" fg:x="86445" fg:w="32"/><text x="79.4810%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="79.2310%" y="997" width="0.0293%" height="15" fill="rgb(229,92,13)" fg:x="86445" fg:w="32"/><text x="79.4810%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (32 samples, 0.03%)</title><rect x="79.2310%" y="981" width="0.0293%" height="15" fill="rgb(245,98,39)" fg:x="86445" fg:w="32"/><text x="79.4810%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (31 samples, 0.03%)</title><rect x="79.2319%" y="965" width="0.0284%" height="15" fill="rgb(234,135,48)" fg:x="86446" fg:w="31"/><text x="79.4819%" y="975.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (31 samples, 0.03%)</title><rect x="79.2319%" y="949" width="0.0284%" height="15" fill="rgb(230,98,28)" fg:x="86446" fg:w="31"/><text x="79.4819%" y="959.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="79.2603%" y="1029" width="0.0137%" height="15" fill="rgb(223,121,0)" fg:x="86477" fg:w="15"/><text x="79.5103%" y="1039.50"></text></g><g><title>std::sync::poison::Flag::done (16 samples, 0.01%)</title><rect x="79.2842%" y="997" width="0.0147%" height="15" fill="rgb(234,173,33)" fg:x="86503" fg:w="16"/><text x="79.5342%" y="1007.50"></text></g><g><title>std::thread::panicking (16 samples, 0.01%)</title><rect x="79.2842%" y="981" width="0.0147%" height="15" fill="rgb(245,47,8)" fg:x="86503" fg:w="16"/><text x="79.5342%" y="991.50"></text></g><g><title>std::panicking::panicking (16 samples, 0.01%)</title><rect x="79.2842%" y="965" width="0.0147%" height="15" fill="rgb(205,17,20)" fg:x="86503" fg:w="16"/><text x="79.5342%" y="975.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (16 samples, 0.01%)</title><rect x="79.2842%" y="949" width="0.0147%" height="15" fill="rgb(232,151,16)" fg:x="86503" fg:w="16"/><text x="79.5342%" y="959.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="79.2988%" y="981" width="0.0110%" height="15" fill="rgb(208,30,32)" fg:x="86519" fg:w="12"/><text x="79.5488%" y="991.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (327 samples, 0.30%)</title><rect x="79.3098%" y="965" width="0.2997%" height="15" fill="rgb(254,26,3)" fg:x="86531" fg:w="327"/><text x="79.5598%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (393 samples, 0.36%)</title><rect x="79.2603%" y="1045" width="0.3602%" height="15" fill="rgb(240,177,30)" fg:x="86477" fg:w="393"/><text x="79.5103%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (378 samples, 0.35%)</title><rect x="79.2741%" y="1029" width="0.3465%" height="15" fill="rgb(248,76,44)" fg:x="86492" fg:w="378"/><text x="79.5241%" y="1039.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (378 samples, 0.35%)</title><rect x="79.2741%" y="1013" width="0.3465%" height="15" fill="rgb(241,186,54)" fg:x="86492" fg:w="378"/><text x="79.5241%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (351 samples, 0.32%)</title><rect x="79.2988%" y="997" width="0.3217%" height="15" fill="rgb(249,171,29)" fg:x="86519" fg:w="351"/><text x="79.5488%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (339 samples, 0.31%)</title><rect x="79.3098%" y="981" width="0.3107%" height="15" fill="rgb(237,151,44)" fg:x="86531" fg:w="339"/><text x="79.5598%" y="991.50"></text></g><g><title>___pthread_mutex_unlock (12 samples, 0.01%)</title><rect x="79.6096%" y="965" width="0.0110%" height="15" fill="rgb(228,174,30)" fg:x="86858" fg:w="12"/><text x="79.8596%" y="975.50"></text></g><g><title>core::task::wake::Waker::will_wake (27 samples, 0.02%)</title><rect x="79.6205%" y="1045" width="0.0247%" height="15" fill="rgb(252,14,37)" fg:x="86870" fg:w="27"/><text x="79.8705%" y="1055.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (27 samples, 0.02%)</title><rect x="79.6205%" y="1029" width="0.0247%" height="15" fill="rgb(207,111,40)" fg:x="86870" fg:w="27"/><text x="79.8705%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (20 samples, 0.02%)</title><rect x="79.6270%" y="1013" width="0.0183%" height="15" fill="rgb(248,171,54)" fg:x="86877" fg:w="20"/><text x="79.8770%" y="1023.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="79.6334%" y="997" width="0.0119%" height="15" fill="rgb(211,127,2)" fg:x="86884" fg:w="13"/><text x="79.8834%" y="1007.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="79.6535%" y="1013" width="0.0156%" height="15" fill="rgb(236,87,47)" fg:x="86906" fg:w="17"/><text x="79.9035%" y="1023.50"></text></g><g><title>std::sync::poison::Flag::borrow (17 samples, 0.02%)</title><rect x="79.6535%" y="997" width="0.0156%" height="15" fill="rgb(223,190,45)" fg:x="86906" fg:w="17"/><text x="79.9035%" y="1007.50"></text></g><g><title>std::thread::panicking (12 samples, 0.01%)</title><rect x="79.6581%" y="981" width="0.0110%" height="15" fill="rgb(215,5,16)" fg:x="86911" fg:w="12"/><text x="79.9081%" y="991.50"></text></g><g><title>std::panicking::panicking (12 samples, 0.01%)</title><rect x="79.6581%" y="965" width="0.0110%" height="15" fill="rgb(252,82,33)" fg:x="86911" fg:w="12"/><text x="79.9081%" y="975.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (12 samples, 0.01%)</title><rect x="79.6581%" y="949" width="0.0110%" height="15" fill="rgb(247,213,44)" fg:x="86911" fg:w="12"/><text x="79.9081%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="79.6581%" y="933" width="0.0110%" height="15" fill="rgb(205,196,44)" fg:x="86911" fg:w="12"/><text x="79.9081%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="79.6581%" y="917" width="0.0110%" height="15" fill="rgb(237,96,54)" fg:x="86911" fg:w="12"/><text x="79.9081%" y="927.50"></text></g><g><title>event_listener::Inner::lock (622 samples, 0.57%)</title><rect x="79.6453%" y="1045" width="0.5701%" height="15" fill="rgb(230,113,34)" fg:x="86897" fg:w="622"/><text x="79.8953%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (613 samples, 0.56%)</title><rect x="79.6535%" y="1029" width="0.5618%" height="15" fill="rgb(221,224,12)" fg:x="86906" fg:w="613"/><text x="79.9035%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (596 samples, 0.55%)</title><rect x="79.6691%" y="1013" width="0.5463%" height="15" fill="rgb(219,112,44)" fg:x="86923" fg:w="596"/><text x="79.9191%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (579 samples, 0.53%)</title><rect x="79.6847%" y="997" width="0.5307%" height="15" fill="rgb(210,31,13)" fg:x="86940" fg:w="579"/><text x="79.9347%" y="1007.50"></text></g><g><title>___pthread_mutex_lock (579 samples, 0.53%)</title><rect x="79.6847%" y="981" width="0.5307%" height="15" fill="rgb(230,25,16)" fg:x="86940" fg:w="579"/><text x="79.9347%" y="991.50"></text></g><g><title>__GI___lll_lock_wait (55 samples, 0.05%)</title><rect x="80.1650%" y="965" width="0.0504%" height="15" fill="rgb(246,108,53)" fg:x="87464" fg:w="55"/><text x="80.4150%" y="975.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,551 samples, 1.42%)</title><rect x="78.8232%" y="1061" width="1.4216%" height="15" fill="rgb(241,172,50)" fg:x="86000" fg:w="1551"/><text x="79.0732%" y="1071.50"></text></g><g><title>event_listener::List::remove (32 samples, 0.03%)</title><rect x="80.2154%" y="1045" width="0.0293%" height="15" fill="rgb(235,141,10)" fg:x="87519" fg:w="32"/><text x="80.4654%" y="1055.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (25 samples, 0.02%)</title><rect x="80.2218%" y="1029" width="0.0229%" height="15" fill="rgb(220,174,43)" fg:x="87526" fg:w="25"/><text x="80.4718%" y="1039.50"></text></g><g><title>core::mem::replace (25 samples, 0.02%)</title><rect x="80.2218%" y="1013" width="0.0229%" height="15" fill="rgb(215,181,40)" fg:x="87526" fg:w="25"/><text x="80.4718%" y="1023.50"></text></g><g><title>core::ptr::read (24 samples, 0.02%)</title><rect x="80.2227%" y="997" width="0.0220%" height="15" fill="rgb(230,97,2)" fg:x="87527" fg:w="24"/><text x="80.4727%" y="1007.50"></text></g><g><title>concurrent_queue::full_fence (40 samples, 0.04%)</title><rect x="80.4115%" y="1013" width="0.0367%" height="15" fill="rgb(211,25,27)" fg:x="87733" fg:w="40"/><text x="80.6615%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (40 samples, 0.04%)</title><rect x="80.4115%" y="997" width="0.0367%" height="15" fill="rgb(230,87,26)" fg:x="87733" fg:w="40"/><text x="80.6615%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (40 samples, 0.04%)</title><rect x="80.4115%" y="981" width="0.0367%" height="15" fill="rgb(227,160,17)" fg:x="87733" fg:w="40"/><text x="80.6615%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (40 samples, 0.04%)</title><rect x="80.4115%" y="965" width="0.0367%" height="15" fill="rgb(244,85,34)" fg:x="87733" fg:w="40"/><text x="80.6615%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (204 samples, 0.19%)</title><rect x="80.4528%" y="1013" width="0.1870%" height="15" fill="rgb(207,70,0)" fg:x="87778" fg:w="204"/><text x="80.7028%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (204 samples, 0.19%)</title><rect x="80.4528%" y="997" width="0.1870%" height="15" fill="rgb(223,129,7)" fg:x="87778" fg:w="204"/><text x="80.7028%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (324 samples, 0.30%)</title><rect x="80.6398%" y="1013" width="0.2970%" height="15" fill="rgb(246,105,7)" fg:x="87982" fg:w="324"/><text x="80.8898%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (321 samples, 0.29%)</title><rect x="80.6425%" y="997" width="0.2942%" height="15" fill="rgb(215,154,42)" fg:x="87985" fg:w="321"/><text x="80.8925%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (744 samples, 0.68%)</title><rect x="80.2612%" y="1045" width="0.6819%" height="15" fill="rgb(220,215,30)" fg:x="87569" fg:w="744"/><text x="80.5112%" y="1055.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (705 samples, 0.65%)</title><rect x="80.2970%" y="1029" width="0.6462%" height="15" fill="rgb(228,81,51)" fg:x="87608" fg:w="705"/><text x="80.5470%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (13 samples, 0.01%)</title><rect x="80.9523%" y="1029" width="0.0119%" height="15" fill="rgb(247,71,54)" fg:x="88323" fg:w="13"/><text x="81.2023%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (11 samples, 0.01%)</title><rect x="80.9541%" y="1013" width="0.0101%" height="15" fill="rgb(234,176,34)" fg:x="88325" fg:w="11"/><text x="81.2041%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="80.9541%" y="997" width="0.0101%" height="15" fill="rgb(241,103,54)" fg:x="88325" fg:w="11"/><text x="81.2041%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (11 samples, 0.01%)</title><rect x="80.9541%" y="981" width="0.0101%" height="15" fill="rgb(228,22,34)" fg:x="88325" fg:w="11"/><text x="81.2041%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (11 samples, 0.01%)</title><rect x="80.9541%" y="965" width="0.0101%" height="15" fill="rgb(241,179,48)" fg:x="88325" fg:w="11"/><text x="81.2041%" y="975.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="80.9541%" y="949" width="0.0101%" height="15" fill="rgb(235,167,37)" fg:x="88325" fg:w="11"/><text x="81.2041%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="80.9642%" y="1029" width="0.0128%" height="15" fill="rgb(213,109,30)" fg:x="88336" fg:w="14"/><text x="81.2142%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="80.9642%" y="1013" width="0.0128%" height="15" fill="rgb(222,172,16)" fg:x="88336" fg:w="14"/><text x="81.2142%" y="1023.50"></text></g><g><title>event_listener::Inner::lock (40 samples, 0.04%)</title><rect x="80.9770%" y="1029" width="0.0367%" height="15" fill="rgb(233,192,5)" fg:x="88350" fg:w="40"/><text x="81.2270%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (40 samples, 0.04%)</title><rect x="80.9770%" y="1013" width="0.0367%" height="15" fill="rgb(247,189,41)" fg:x="88350" fg:w="40"/><text x="81.2270%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (39 samples, 0.04%)</title><rect x="80.9780%" y="997" width="0.0357%" height="15" fill="rgb(218,134,47)" fg:x="88351" fg:w="39"/><text x="81.2280%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (37 samples, 0.03%)</title><rect x="80.9798%" y="981" width="0.0339%" height="15" fill="rgb(216,29,3)" fg:x="88353" fg:w="37"/><text x="81.2298%" y="991.50"></text></g><g><title>___pthread_mutex_lock (37 samples, 0.03%)</title><rect x="80.9798%" y="965" width="0.0339%" height="15" fill="rgb(246,140,12)" fg:x="88353" fg:w="37"/><text x="81.2298%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (12 samples, 0.01%)</title><rect x="81.0220%" y="933" width="0.0110%" height="15" fill="rgb(230,136,11)" fg:x="88399" fg:w="12"/><text x="81.2720%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="81.0220%" y="917" width="0.0110%" height="15" fill="rgb(247,22,47)" fg:x="88399" fg:w="12"/><text x="81.2720%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="81.0220%" y="901" width="0.0110%" height="15" fill="rgb(218,84,22)" fg:x="88399" fg:w="12"/><text x="81.2720%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (11 samples, 0.01%)</title><rect x="81.0229%" y="885" width="0.0101%" height="15" fill="rgb(216,87,39)" fg:x="88400" fg:w="11"/><text x="81.2729%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="81.0229%" y="869" width="0.0101%" height="15" fill="rgb(221,178,8)" fg:x="88400" fg:w="11"/><text x="81.2729%" y="879.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (31 samples, 0.03%)</title><rect x="81.0623%" y="853" width="0.0284%" height="15" fill="rgb(230,42,11)" fg:x="88443" fg:w="31"/><text x="81.3123%" y="863.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (31 samples, 0.03%)</title><rect x="81.0623%" y="837" width="0.0284%" height="15" fill="rgb(237,229,4)" fg:x="88443" fg:w="31"/><text x="81.3123%" y="847.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (31 samples, 0.03%)</title><rect x="81.0623%" y="821" width="0.0284%" height="15" fill="rgb(222,31,33)" fg:x="88443" fg:w="31"/><text x="81.3123%" y="831.50"></text></g><g><title>__GI___pthread_cond_signal (31 samples, 0.03%)</title><rect x="81.0623%" y="805" width="0.0284%" height="15" fill="rgb(210,17,39)" fg:x="88443" fg:w="31"/><text x="81.3123%" y="815.50"></text></g><g><title>parking::Unparker::unpark (85 samples, 0.08%)</title><rect x="81.0421%" y="885" width="0.0779%" height="15" fill="rgb(244,93,20)" fg:x="88421" fg:w="85"/><text x="81.2921%" y="895.50"></text></g><g><title>parking::Inner::unpark (78 samples, 0.07%)</title><rect x="81.0485%" y="869" width="0.0715%" height="15" fill="rgb(210,40,47)" fg:x="88428" fg:w="78"/><text x="81.2985%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.03%)</title><rect x="81.0907%" y="853" width="0.0293%" height="15" fill="rgb(239,211,47)" fg:x="88474" fg:w="32"/><text x="81.3407%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (32 samples, 0.03%)</title><rect x="81.0907%" y="837" width="0.0293%" height="15" fill="rgb(251,223,49)" fg:x="88474" fg:w="32"/><text x="81.3407%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (31 samples, 0.03%)</title><rect x="81.0916%" y="821" width="0.0284%" height="15" fill="rgb(221,149,5)" fg:x="88475" fg:w="31"/><text x="81.3416%" y="831.50"></text></g><g><title>___pthread_mutex_lock (31 samples, 0.03%)</title><rect x="81.0916%" y="805" width="0.0284%" height="15" fill="rgb(219,224,51)" fg:x="88475" fg:w="31"/><text x="81.3416%" y="815.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (95 samples, 0.09%)</title><rect x="81.0348%" y="901" width="0.0871%" height="15" fill="rgb(223,7,8)" fg:x="88413" fg:w="95"/><text x="81.2848%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (102 samples, 0.09%)</title><rect x="81.0348%" y="933" width="0.0935%" height="15" fill="rgb(241,217,22)" fg:x="88413" fg:w="102"/><text x="81.2848%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (102 samples, 0.09%)</title><rect x="81.0348%" y="917" width="0.0935%" height="15" fill="rgb(248,209,0)" fg:x="88413" fg:w="102"/><text x="81.2848%" y="927.50"></text></g><g><title>async_executor::State::notify (137 samples, 0.13%)</title><rect x="81.0210%" y="949" width="0.1256%" height="15" fill="rgb(217,205,4)" fg:x="88398" fg:w="137"/><text x="81.2710%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="81.1283%" y="933" width="0.0183%" height="15" fill="rgb(228,124,39)" fg:x="88515" fg:w="20"/><text x="81.3783%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="81.1283%" y="917" width="0.0183%" height="15" fill="rgb(250,116,42)" fg:x="88515" fg:w="20"/><text x="81.3783%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (16 samples, 0.01%)</title><rect x="81.1319%" y="901" width="0.0147%" height="15" fill="rgb(223,202,9)" fg:x="88519" fg:w="16"/><text x="81.3819%" y="911.50"></text></g><g><title>___pthread_mutex_lock (16 samples, 0.01%)</title><rect x="81.1319%" y="885" width="0.0147%" height="15" fill="rgb(242,222,40)" fg:x="88519" fg:w="16"/><text x="81.3819%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (23 samples, 0.02%)</title><rect x="81.1604%" y="917" width="0.0211%" height="15" fill="rgb(229,99,46)" fg:x="88550" fg:w="23"/><text x="81.4104%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (23 samples, 0.02%)</title><rect x="81.1604%" y="901" width="0.0211%" height="15" fill="rgb(225,56,46)" fg:x="88550" fg:w="23"/><text x="81.4104%" y="911.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (186 samples, 0.17%)</title><rect x="81.0201%" y="965" width="0.1705%" height="15" fill="rgb(227,94,5)" fg:x="88397" fg:w="186"/><text x="81.2701%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (48 samples, 0.04%)</title><rect x="81.1466%" y="949" width="0.0440%" height="15" fill="rgb(205,112,38)" fg:x="88535" fg:w="48"/><text x="81.3966%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (43 samples, 0.04%)</title><rect x="81.1512%" y="933" width="0.0394%" height="15" fill="rgb(231,133,46)" fg:x="88540" fg:w="43"/><text x="81.4012%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (28 samples, 0.03%)</title><rect x="81.1906%" y="965" width="0.0257%" height="15" fill="rgb(217,16,9)" fg:x="88583" fg:w="28"/><text x="81.4406%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (28 samples, 0.03%)</title><rect x="81.1906%" y="949" width="0.0257%" height="15" fill="rgb(249,173,9)" fg:x="88583" fg:w="28"/><text x="81.4406%" y="959.50"></text></g><g><title>event_listener::List::notify (228 samples, 0.21%)</title><rect x="81.0137%" y="1029" width="0.2090%" height="15" fill="rgb(205,163,53)" fg:x="88390" fg:w="228"/><text x="81.2637%" y="1039.50"></text></g><g><title>core::task::wake::Waker::wake (226 samples, 0.21%)</title><rect x="81.0155%" y="1013" width="0.2071%" height="15" fill="rgb(217,54,41)" fg:x="88392" fg:w="226"/><text x="81.2655%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (226 samples, 0.21%)</title><rect x="81.0155%" y="997" width="0.2071%" height="15" fill="rgb(228,216,12)" fg:x="88392" fg:w="226"/><text x="81.2655%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (222 samples, 0.20%)</title><rect x="81.0192%" y="981" width="0.2035%" height="15" fill="rgb(244,228,15)" fg:x="88396" fg:w="222"/><text x="81.2692%" y="991.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,726 samples, 1.58%)</title><rect x="80.2447%" y="1061" width="1.5820%" height="15" fill="rgb(221,176,53)" fg:x="87551" fg:w="1726"/><text x="80.4947%" y="1071.50"></text></g><g><title>event_listener::Event::notify (964 samples, 0.88%)</title><rect x="80.9431%" y="1045" width="0.8836%" height="15" fill="rgb(205,94,34)" fg:x="88313" fg:w="964"/><text x="81.1931%" y="1055.50"></text></g><g><title>event_listener::full_fence (659 samples, 0.60%)</title><rect x="81.2227%" y="1029" width="0.6040%" height="15" fill="rgb(213,110,48)" fg:x="88618" fg:w="659"/><text x="81.4727%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (659 samples, 0.60%)</title><rect x="81.2227%" y="1013" width="0.6040%" height="15" fill="rgb(236,142,28)" fg:x="88618" fg:w="659"/><text x="81.4727%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (659 samples, 0.60%)</title><rect x="81.2227%" y="997" width="0.6040%" height="15" fill="rgb(225,135,29)" fg:x="88618" fg:w="659"/><text x="81.4727%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (25 samples, 0.02%)</title><rect x="81.8267%" y="1061" width="0.0229%" height="15" fill="rgb(252,45,31)" fg:x="89277" fg:w="25"/><text x="82.0767%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (32 samples, 0.03%)</title><rect x="81.8606%" y="1013" width="0.0293%" height="15" fill="rgb(211,187,50)" fg:x="89314" fg:w="32"/><text x="82.1106%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (31 samples, 0.03%)</title><rect x="81.8615%" y="997" width="0.0284%" height="15" fill="rgb(229,109,7)" fg:x="89315" fg:w="31"/><text x="82.1115%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="81.8615%" y="981" width="0.0284%" height="15" fill="rgb(251,131,51)" fg:x="89315" fg:w="31"/><text x="82.1115%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (31 samples, 0.03%)</title><rect x="81.8615%" y="965" width="0.0284%" height="15" fill="rgb(251,180,35)" fg:x="89315" fg:w="31"/><text x="82.1115%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (30 samples, 0.03%)</title><rect x="81.8624%" y="949" width="0.0275%" height="15" fill="rgb(211,46,32)" fg:x="89316" fg:w="30"/><text x="82.1124%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (30 samples, 0.03%)</title><rect x="81.8624%" y="933" width="0.0275%" height="15" fill="rgb(248,123,17)" fg:x="89316" fg:w="30"/><text x="82.1124%" y="943.50"></text></g><g><title>event_listener::Inner::lock (50 samples, 0.05%)</title><rect x="81.8908%" y="1013" width="0.0458%" height="15" fill="rgb(227,141,18)" fg:x="89347" fg:w="50"/><text x="82.1408%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.05%)</title><rect x="81.8908%" y="997" width="0.0458%" height="15" fill="rgb(216,102,9)" fg:x="89347" fg:w="50"/><text x="82.1408%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (44 samples, 0.04%)</title><rect x="81.8963%" y="981" width="0.0403%" height="15" fill="rgb(253,47,13)" fg:x="89353" fg:w="44"/><text x="82.1463%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (37 samples, 0.03%)</title><rect x="81.9028%" y="965" width="0.0339%" height="15" fill="rgb(226,93,23)" fg:x="89360" fg:w="37"/><text x="82.1528%" y="975.50"></text></g><g><title>___pthread_mutex_lock (37 samples, 0.03%)</title><rect x="81.9028%" y="949" width="0.0339%" height="15" fill="rgb(247,104,17)" fg:x="89360" fg:w="37"/><text x="82.1528%" y="959.50"></text></g><g><title>__GI___lll_lock_wait (12 samples, 0.01%)</title><rect x="81.9257%" y="933" width="0.0110%" height="15" fill="rgb(233,203,26)" fg:x="89385" fg:w="12"/><text x="82.1757%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (92 samples, 0.08%)</title><rect x="81.8578%" y="1029" width="0.0843%" height="15" fill="rgb(244,98,49)" fg:x="89311" fg:w="92"/><text x="82.1078%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (128 samples, 0.12%)</title><rect x="81.8496%" y="1061" width="0.1173%" height="15" fill="rgb(235,134,22)" fg:x="89302" fg:w="128"/><text x="82.0996%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (119 samples, 0.11%)</title><rect x="81.8578%" y="1045" width="0.1091%" height="15" fill="rgb(221,70,32)" fg:x="89311" fg:w="119"/><text x="82.1078%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (27 samples, 0.02%)</title><rect x="81.9422%" y="1029" width="0.0247%" height="15" fill="rgb(238,15,50)" fg:x="89403" fg:w="27"/><text x="82.1922%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="81.9422%" y="1013" width="0.0247%" height="15" fill="rgb(215,221,48)" fg:x="89403" fg:w="27"/><text x="82.1922%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (27 samples, 0.02%)</title><rect x="81.9422%" y="997" width="0.0247%" height="15" fill="rgb(236,73,3)" fg:x="89403" fg:w="27"/><text x="82.1922%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_sub (27 samples, 0.02%)</title><rect x="81.9422%" y="981" width="0.0247%" height="15" fill="rgb(250,107,11)" fg:x="89403" fg:w="27"/><text x="82.1922%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="81.9706%" y="1045" width="0.0275%" height="15" fill="rgb(242,39,14)" fg:x="89434" fg:w="30"/><text x="82.2206%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (30 samples, 0.03%)</title><rect x="81.9706%" y="1029" width="0.0275%" height="15" fill="rgb(248,164,37)" fg:x="89434" fg:w="30"/><text x="82.2206%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_add (30 samples, 0.03%)</title><rect x="81.9706%" y="1013" width="0.0275%" height="15" fill="rgb(217,60,12)" fg:x="89434" fg:w="30"/><text x="82.2206%" y="1023.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (21 samples, 0.02%)</title><rect x="81.9981%" y="965" width="0.0192%" height="15" fill="rgb(240,125,29)" fg:x="89464" fg:w="21"/><text x="82.2481%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (22 samples, 0.02%)</title><rect x="81.9981%" y="1045" width="0.0202%" height="15" fill="rgb(208,207,28)" fg:x="89464" fg:w="22"/><text x="82.2481%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (22 samples, 0.02%)</title><rect x="81.9981%" y="1029" width="0.0202%" height="15" fill="rgb(209,159,27)" fg:x="89464" fg:w="22"/><text x="82.2481%" y="1039.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="81.9981%" y="1013" width="0.0202%" height="15" fill="rgb(251,176,53)" fg:x="89464" fg:w="22"/><text x="82.2481%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (22 samples, 0.02%)</title><rect x="81.9981%" y="997" width="0.0202%" height="15" fill="rgb(211,85,7)" fg:x="89464" fg:w="22"/><text x="82.2481%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (22 samples, 0.02%)</title><rect x="81.9981%" y="981" width="0.0202%" height="15" fill="rgb(216,64,54)" fg:x="89464" fg:w="22"/><text x="82.2481%" y="991.50"></text></g><g><title>event_listener::Inner::lock (24 samples, 0.02%)</title><rect x="82.0192%" y="1045" width="0.0220%" height="15" fill="rgb(217,54,24)" fg:x="89487" fg:w="24"/><text x="82.2692%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (24 samples, 0.02%)</title><rect x="82.0192%" y="1029" width="0.0220%" height="15" fill="rgb(208,206,53)" fg:x="89487" fg:w="24"/><text x="82.2692%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (23 samples, 0.02%)</title><rect x="82.0201%" y="1013" width="0.0211%" height="15" fill="rgb(251,74,39)" fg:x="89488" fg:w="23"/><text x="82.2701%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (23 samples, 0.02%)</title><rect x="82.0201%" y="997" width="0.0211%" height="15" fill="rgb(226,47,5)" fg:x="89488" fg:w="23"/><text x="82.2701%" y="1007.50"></text></g><g><title>___pthread_mutex_lock (22 samples, 0.02%)</title><rect x="82.0210%" y="981" width="0.0202%" height="15" fill="rgb(234,111,33)" fg:x="89489" fg:w="22"/><text x="82.2710%" y="991.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3,592 samples, 3.29%)</title><rect x="78.7663%" y="1077" width="3.2922%" height="15" fill="rgb(251,14,10)" fg:x="85938" fg:w="3592"/><text x="79.0163%" y="1087.50">&lt;as..</text></g><g><title>event_listener::Event::listen (100 samples, 0.09%)</title><rect x="81.9669%" y="1061" width="0.0917%" height="15" fill="rgb(232,43,0)" fg:x="89430" fg:w="100"/><text x="82.2169%" y="1071.50"></text></g><g><title>event_listener::full_fence (17 samples, 0.02%)</title><rect x="82.0430%" y="1045" width="0.0156%" height="15" fill="rgb(222,68,43)" fg:x="89513" fg:w="17"/><text x="82.2930%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (17 samples, 0.02%)</title><rect x="82.0430%" y="1029" width="0.0156%" height="15" fill="rgb(217,24,23)" fg:x="89513" fg:w="17"/><text x="82.2930%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.02%)</title><rect x="82.0430%" y="1013" width="0.0156%" height="15" fill="rgb(229,209,14)" fg:x="89513" fg:w="17"/><text x="82.2930%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (692 samples, 0.63%)</title><rect x="82.0613%" y="1077" width="0.6343%" height="15" fill="rgb(250,149,48)" fg:x="89533" fg:w="692"/><text x="82.3113%" y="1087.50"></text></g><g><title>__memcpy_avx_unaligned_erms (183 samples, 0.17%)</title><rect x="82.7038%" y="1061" width="0.1677%" height="15" fill="rgb(210,120,37)" fg:x="90234" fg:w="183"/><text x="82.9538%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (628 samples, 0.58%)</title><rect x="82.8862%" y="1029" width="0.5756%" height="15" fill="rgb(210,21,8)" fg:x="90433" fg:w="628"/><text x="83.1362%" y="1039.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="83.4939%" y="853" width="0.0101%" height="15" fill="rgb(243,145,7)" fg:x="91096" fg:w="11"/><text x="83.7439%" y="863.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (21 samples, 0.02%)</title><rect x="83.5397%" y="821" width="0.0192%" height="15" fill="rgb(238,178,32)" fg:x="91146" fg:w="21"/><text x="83.7897%" y="831.50"></text></g><g><title> (21 samples, 0.02%)</title><rect x="83.5397%" y="805" width="0.0192%" height="15" fill="rgb(222,4,10)" fg:x="91146" fg:w="21"/><text x="83.7897%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (62 samples, 0.06%)</title><rect x="83.5104%" y="853" width="0.0568%" height="15" fill="rgb(239,7,37)" fg:x="91114" fg:w="62"/><text x="83.7604%" y="863.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (48 samples, 0.04%)</title><rect x="83.5232%" y="837" width="0.0440%" height="15" fill="rgb(215,31,37)" fg:x="91128" fg:w="48"/><text x="83.7732%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (102 samples, 0.09%)</title><rect x="83.4930%" y="885" width="0.0935%" height="15" fill="rgb(224,83,33)" fg:x="91095" fg:w="102"/><text x="83.7430%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (102 samples, 0.09%)</title><rect x="83.4930%" y="869" width="0.0935%" height="15" fill="rgb(239,55,3)" fg:x="91095" fg:w="102"/><text x="83.7430%" y="879.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (17 samples, 0.02%)</title><rect x="83.5709%" y="853" width="0.0156%" height="15" fill="rgb(247,92,11)" fg:x="91180" fg:w="17"/><text x="83.8209%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (108 samples, 0.10%)</title><rect x="83.4930%" y="917" width="0.0990%" height="15" fill="rgb(239,200,7)" fg:x="91095" fg:w="108"/><text x="83.7430%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (108 samples, 0.10%)</title><rect x="83.4930%" y="901" width="0.0990%" height="15" fill="rgb(227,115,8)" fg:x="91095" fg:w="108"/><text x="83.7430%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (128 samples, 0.12%)</title><rect x="83.4774%" y="933" width="0.1173%" height="15" fill="rgb(215,189,27)" fg:x="91078" fg:w="128"/><text x="83.7274%" y="943.50"></text></g><g><title>rust_dealloc (154 samples, 0.14%)</title><rect x="83.4664%" y="949" width="0.1411%" height="15" fill="rgb(251,216,39)" fg:x="91066" fg:w="154"/><text x="83.7164%" y="959.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="83.5947%" y="933" width="0.0128%" height="15" fill="rgb(207,29,47)" fg:x="91206" fg:w="14"/><text x="83.8447%" y="943.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,338 samples, 4.89%)</title><rect x="78.7168%" y="1093" width="4.8925%" height="15" fill="rgb(210,71,34)" fg:x="85884" fg:w="5338"/><text x="78.9668%" y="1103.50">&lt;async..</text></g><g><title>core::option::Option&lt;T&gt;::map (997 samples, 0.91%)</title><rect x="82.6956%" y="1077" width="0.9138%" height="15" fill="rgb(253,217,51)" fg:x="90225" fg:w="997"/><text x="82.9456%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (805 samples, 0.74%)</title><rect x="82.8715%" y="1061" width="0.7378%" height="15" fill="rgb(222,117,46)" fg:x="90417" fg:w="805"/><text x="83.1215%" y="1071.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (805 samples, 0.74%)</title><rect x="82.8715%" y="1045" width="0.7378%" height="15" fill="rgb(226,132,6)" fg:x="90417" fg:w="805"/><text x="83.1215%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (161 samples, 0.15%)</title><rect x="83.4618%" y="1029" width="0.1476%" height="15" fill="rgb(254,145,51)" fg:x="91061" fg:w="161"/><text x="83.7118%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (161 samples, 0.15%)</title><rect x="83.4618%" y="1013" width="0.1476%" height="15" fill="rgb(231,199,27)" fg:x="91061" fg:w="161"/><text x="83.7118%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (161 samples, 0.15%)</title><rect x="83.4618%" y="997" width="0.1476%" height="15" fill="rgb(245,158,14)" fg:x="91061" fg:w="161"/><text x="83.7118%" y="1007.50"></text></g><g><title>__rg_dealloc (161 samples, 0.15%)</title><rect x="83.4618%" y="981" width="0.1476%" height="15" fill="rgb(240,113,14)" fg:x="91061" fg:w="161"/><text x="83.7118%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (161 samples, 0.15%)</title><rect x="83.4618%" y="965" width="0.1476%" height="15" fill="rgb(210,20,13)" fg:x="91061" fg:w="161"/><text x="83.7118%" y="975.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,728 samples, 5.25%)</title><rect x="78.6866%" y="1109" width="5.2500%" height="15" fill="rgb(241,144,13)" fg:x="85851" fg:w="5728"/><text x="78.9366%" y="1119.50">&lt;async..</text></g><g><title>__memcpy_avx_unaligned_erms (357 samples, 0.33%)</title><rect x="83.6094%" y="1093" width="0.3272%" height="15" fill="rgb(235,43,34)" fg:x="91222" fg:w="357"/><text x="83.8594%" y="1103.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,153 samples, 5.64%)</title><rect x="78.6692%" y="1173" width="5.6395%" height="15" fill="rgb(208,36,20)" fg:x="85832" fg:w="6153"/><text x="78.9192%" y="1183.50">&lt;async_..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,153 samples, 5.64%)</title><rect x="78.6692%" y="1157" width="5.6395%" height="15" fill="rgb(239,204,10)" fg:x="85832" fg:w="6153"/><text x="78.9192%" y="1167.50">&lt;tremor..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,153 samples, 5.64%)</title><rect x="78.6692%" y="1141" width="5.6395%" height="15" fill="rgb(217,84,43)" fg:x="85832" fg:w="6153"/><text x="78.9192%" y="1151.50">&lt;async_..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,153 samples, 5.64%)</title><rect x="78.6692%" y="1125" width="5.6395%" height="15" fill="rgb(241,170,50)" fg:x="85832" fg:w="6153"/><text x="78.9192%" y="1135.50">&lt;tremor..</text></g><g><title>__memcpy_avx_unaligned_erms (406 samples, 0.37%)</title><rect x="83.9366%" y="1109" width="0.3721%" height="15" fill="rgb(226,205,29)" fg:x="91579" fg:w="406"/><text x="84.1866%" y="1119.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.04%)</title><rect x="84.3948%" y="1093" width="0.0367%" height="15" fill="rgb(233,113,1)" fg:x="92079" fg:w="40"/><text x="84.6448%" y="1103.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="84.4361%" y="1077" width="0.0211%" height="15" fill="rgb(253,98,13)" fg:x="92124" fg:w="23"/><text x="84.6861%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (23 samples, 0.02%)</title><rect x="84.4361%" y="1061" width="0.0211%" height="15" fill="rgb(211,115,12)" fg:x="92124" fg:w="23"/><text x="84.6861%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (22 samples, 0.02%)</title><rect x="84.4370%" y="1045" width="0.0202%" height="15" fill="rgb(208,12,16)" fg:x="92125" fg:w="22"/><text x="84.6870%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_add (22 samples, 0.02%)</title><rect x="84.4370%" y="1029" width="0.0202%" height="15" fill="rgb(237,193,54)" fg:x="92125" fg:w="22"/><text x="84.6870%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (28 samples, 0.03%)</title><rect x="84.4709%" y="997" width="0.0257%" height="15" fill="rgb(243,22,42)" fg:x="92162" fg:w="28"/><text x="84.7209%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (36 samples, 0.03%)</title><rect x="84.4654%" y="1077" width="0.0330%" height="15" fill="rgb(233,151,36)" fg:x="92156" fg:w="36"/><text x="84.7154%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (35 samples, 0.03%)</title><rect x="84.4663%" y="1061" width="0.0321%" height="15" fill="rgb(237,57,45)" fg:x="92157" fg:w="35"/><text x="84.7163%" y="1071.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="84.4663%" y="1045" width="0.0321%" height="15" fill="rgb(221,88,17)" fg:x="92157" fg:w="35"/><text x="84.7163%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (30 samples, 0.03%)</title><rect x="84.4709%" y="1029" width="0.0275%" height="15" fill="rgb(230,79,15)" fg:x="92162" fg:w="30"/><text x="84.7209%" y="1039.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (30 samples, 0.03%)</title><rect x="84.4709%" y="1013" width="0.0275%" height="15" fill="rgb(213,57,13)" fg:x="92162" fg:w="30"/><text x="84.7209%" y="1023.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (114 samples, 0.10%)</title><rect x="84.4315%" y="1093" width="0.1045%" height="15" fill="rgb(222,116,39)" fg:x="92119" fg:w="114"/><text x="84.6815%" y="1103.50"></text></g><g><title>event_listener::Inner::lock (38 samples, 0.03%)</title><rect x="84.5012%" y="1077" width="0.0348%" height="15" fill="rgb(245,107,2)" fg:x="92195" fg:w="38"/><text x="84.7512%" y="1087.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (36 samples, 0.03%)</title><rect x="84.5030%" y="1061" width="0.0330%" height="15" fill="rgb(238,1,10)" fg:x="92197" fg:w="36"/><text x="84.7530%" y="1071.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (36 samples, 0.03%)</title><rect x="84.5030%" y="1045" width="0.0330%" height="15" fill="rgb(249,4,48)" fg:x="92197" fg:w="36"/><text x="84.7530%" y="1055.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (36 samples, 0.03%)</title><rect x="84.5030%" y="1029" width="0.0330%" height="15" fill="rgb(223,151,18)" fg:x="92197" fg:w="36"/><text x="84.7530%" y="1039.50"></text></g><g><title>___pthread_mutex_lock (36 samples, 0.03%)</title><rect x="84.5030%" y="1013" width="0.0330%" height="15" fill="rgb(227,65,43)" fg:x="92197" fg:w="36"/><text x="84.7530%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (60 samples, 0.05%)</title><rect x="84.5360%" y="1093" width="0.0550%" height="15" fill="rgb(218,40,45)" fg:x="92233" fg:w="60"/><text x="84.7860%" y="1103.50"></text></g><g><title>__memcpy_avx_unaligned_erms (62 samples, 0.06%)</title><rect x="84.6139%" y="1077" width="0.0568%" height="15" fill="rgb(252,121,31)" fg:x="92318" fg:w="62"/><text x="84.8639%" y="1087.50"></text></g><g><title>__memcpy_avx_unaligned_erms (324 samples, 0.30%)</title><rect x="84.7935%" y="1061" width="0.2970%" height="15" fill="rgb(219,158,43)" fg:x="92514" fg:w="324"/><text x="85.0435%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (36 samples, 0.03%)</title><rect x="85.2051%" y="1045" width="0.0330%" height="15" fill="rgb(231,162,42)" fg:x="92963" fg:w="36"/><text x="85.4551%" y="1055.50"></text></g><g><title>concurrent_queue::full_fence (59 samples, 0.05%)</title><rect x="85.2381%" y="1045" width="0.0541%" height="15" fill="rgb(217,179,25)" fg:x="92999" fg:w="59"/><text x="85.4881%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (52 samples, 0.05%)</title><rect x="85.2445%" y="1029" width="0.0477%" height="15" fill="rgb(206,212,31)" fg:x="93006" fg:w="52"/><text x="85.4945%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (52 samples, 0.05%)</title><rect x="85.2445%" y="1013" width="0.0477%" height="15" fill="rgb(235,144,12)" fg:x="93006" fg:w="52"/><text x="85.4945%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (52 samples, 0.05%)</title><rect x="85.2445%" y="997" width="0.0477%" height="15" fill="rgb(213,51,10)" fg:x="93006" fg:w="52"/><text x="85.4945%" y="1007.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (23 samples, 0.02%)</title><rect x="85.2921%" y="1045" width="0.0211%" height="15" fill="rgb(231,145,14)" fg:x="93058" fg:w="23"/><text x="85.5421%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (236 samples, 0.22%)</title><rect x="85.3132%" y="1045" width="0.2163%" height="15" fill="rgb(235,15,28)" fg:x="93081" fg:w="236"/><text x="85.5632%" y="1055.50"></text></g><g><title>core::ptr::write (236 samples, 0.22%)</title><rect x="85.3132%" y="1029" width="0.2163%" height="15" fill="rgb(237,206,10)" fg:x="93081" fg:w="236"/><text x="85.5632%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (229 samples, 0.21%)</title><rect x="85.3196%" y="1013" width="0.2099%" height="15" fill="rgb(236,227,27)" fg:x="93088" fg:w="229"/><text x="85.5696%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (235 samples, 0.22%)</title><rect x="85.5295%" y="1045" width="0.2154%" height="15" fill="rgb(246,83,35)" fg:x="93317" fg:w="235"/><text x="85.7795%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (235 samples, 0.22%)</title><rect x="85.5295%" y="1029" width="0.2154%" height="15" fill="rgb(220,136,24)" fg:x="93317" fg:w="235"/><text x="85.7795%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (383 samples, 0.35%)</title><rect x="85.7449%" y="1045" width="0.3510%" height="15" fill="rgb(217,3,25)" fg:x="93552" fg:w="383"/><text x="85.9949%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (379 samples, 0.35%)</title><rect x="85.7486%" y="1029" width="0.3474%" height="15" fill="rgb(239,24,14)" fg:x="93556" fg:w="379"/><text x="85.9986%" y="1039.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,566 samples, 1.44%)</title><rect x="84.6707%" y="1077" width="1.4353%" height="15" fill="rgb(244,16,53)" fg:x="92380" fg:w="1566"/><text x="84.9207%" y="1087.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,108 samples, 1.02%)</title><rect x="85.0905%" y="1061" width="1.0155%" height="15" fill="rgb(208,175,44)" fg:x="92838" fg:w="1108"/><text x="85.3405%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (11 samples, 0.01%)</title><rect x="86.0960%" y="1045" width="0.0101%" height="15" fill="rgb(252,18,48)" fg:x="93935" fg:w="11"/><text x="86.3460%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_store (11 samples, 0.01%)</title><rect x="86.0960%" y="1029" width="0.0101%" height="15" fill="rgb(234,199,32)" fg:x="93935" fg:w="11"/><text x="86.3460%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (16 samples, 0.01%)</title><rect x="86.1427%" y="1061" width="0.0147%" height="15" fill="rgb(225,77,54)" fg:x="93986" fg:w="16"/><text x="86.3927%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="86.1427%" y="1045" width="0.0147%" height="15" fill="rgb(225,42,25)" fg:x="93986" fg:w="16"/><text x="86.3927%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (16 samples, 0.01%)</title><rect x="86.1427%" y="1029" width="0.0147%" height="15" fill="rgb(242,227,46)" fg:x="93986" fg:w="16"/><text x="86.3927%" y="1039.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="86.1436%" y="1013" width="0.0137%" height="15" fill="rgb(246,197,35)" fg:x="93987" fg:w="15"/><text x="86.3936%" y="1023.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="86.1436%" y="997" width="0.0137%" height="15" fill="rgb(215,159,26)" fg:x="93987" fg:w="15"/><text x="86.3936%" y="1007.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (41 samples, 0.04%)</title><rect x="86.1702%" y="933" width="0.0376%" height="15" fill="rgb(212,194,50)" fg:x="94016" fg:w="41"/><text x="86.4202%" y="943.50"></text></g><g><title>parking::Unparker::unpark (38 samples, 0.03%)</title><rect x="86.1730%" y="917" width="0.0348%" height="15" fill="rgb(246,132,1)" fg:x="94019" fg:w="38"/><text x="86.4230%" y="927.50"></text></g><g><title>parking::Inner::unpark (35 samples, 0.03%)</title><rect x="86.1757%" y="901" width="0.0321%" height="15" fill="rgb(217,71,7)" fg:x="94022" fg:w="35"/><text x="86.4257%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="86.1940%" y="885" width="0.0137%" height="15" fill="rgb(252,59,32)" fg:x="94042" fg:w="15"/><text x="86.4440%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="86.1940%" y="869" width="0.0137%" height="15" fill="rgb(253,204,25)" fg:x="94042" fg:w="15"/><text x="86.4440%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="86.1949%" y="853" width="0.0128%" height="15" fill="rgb(232,21,16)" fg:x="94043" fg:w="14"/><text x="86.4449%" y="863.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="86.1949%" y="837" width="0.0128%" height="15" fill="rgb(248,90,29)" fg:x="94043" fg:w="14"/><text x="86.4449%" y="847.50"></text></g><g><title>core::task::wake::Waker::wake (43 samples, 0.04%)</title><rect x="86.1702%" y="965" width="0.0394%" height="15" fill="rgb(249,223,7)" fg:x="94016" fg:w="43"/><text x="86.4202%" y="975.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (43 samples, 0.04%)</title><rect x="86.1702%" y="949" width="0.0394%" height="15" fill="rgb(231,119,42)" fg:x="94016" fg:w="43"/><text x="86.4202%" y="959.50"></text></g><g><title>async_executor::State::notify (60 samples, 0.05%)</title><rect x="86.1592%" y="981" width="0.0550%" height="15" fill="rgb(215,41,35)" fg:x="94004" fg:w="60"/><text x="86.4092%" y="991.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (74 samples, 0.07%)</title><rect x="86.1592%" y="997" width="0.0678%" height="15" fill="rgb(220,44,45)" fg:x="94004" fg:w="74"/><text x="86.4092%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (14 samples, 0.01%)</title><rect x="86.2142%" y="981" width="0.0128%" height="15" fill="rgb(253,197,36)" fg:x="94064" fg:w="14"/><text x="86.4642%" y="991.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (14 samples, 0.01%)</title><rect x="86.2142%" y="965" width="0.0128%" height="15" fill="rgb(245,225,54)" fg:x="94064" fg:w="14"/><text x="86.4642%" y="975.50"></text></g><g><title>event_listener::List::notify (86 samples, 0.08%)</title><rect x="86.1574%" y="1061" width="0.0788%" height="15" fill="rgb(239,94,37)" fg:x="94002" fg:w="86"/><text x="86.4074%" y="1071.50"></text></g><g><title>core::task::wake::Waker::wake (84 samples, 0.08%)</title><rect x="86.1592%" y="1045" width="0.0770%" height="15" fill="rgb(242,217,10)" fg:x="94004" fg:w="84"/><text x="86.4092%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (84 samples, 0.08%)</title><rect x="86.1592%" y="1029" width="0.0770%" height="15" fill="rgb(250,193,7)" fg:x="94004" fg:w="84"/><text x="86.4092%" y="1039.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (84 samples, 0.08%)</title><rect x="86.1592%" y="1013" width="0.0770%" height="15" fill="rgb(230,104,19)" fg:x="94004" fg:w="84"/><text x="86.4092%" y="1023.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,983 samples, 2.73%)</title><rect x="84.5910%" y="1093" width="2.7341%" height="15" fill="rgb(230,181,4)" fg:x="92293" fg:w="2983"/><text x="84.8410%" y="1103.50">as..</text></g><g><title>event_listener::Event::notify (1,330 samples, 1.22%)</title><rect x="86.1060%" y="1077" width="1.2190%" height="15" fill="rgb(216,219,49)" fg:x="93946" fg:w="1330"/><text x="86.3560%" y="1087.50"></text></g><g><title>event_listener::full_fence (1,188 samples, 1.09%)</title><rect x="86.2362%" y="1061" width="1.0889%" height="15" fill="rgb(254,144,0)" fg:x="94088" fg:w="1188"/><text x="86.4862%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,174 samples, 1.08%)</title><rect x="86.2490%" y="1045" width="1.0760%" height="15" fill="rgb(205,209,38)" fg:x="94102" fg:w="1174"/><text x="86.4990%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,174 samples, 1.08%)</title><rect x="86.2490%" y="1029" width="1.0760%" height="15" fill="rgb(240,21,42)" fg:x="94102" fg:w="1174"/><text x="86.4990%" y="1039.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (11 samples, 0.01%)</title><rect x="87.3251%" y="1093" width="0.0101%" height="15" fill="rgb(241,132,3)" fg:x="95276" fg:w="11"/><text x="87.5751%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (426 samples, 0.39%)</title><rect x="87.3351%" y="1093" width="0.3904%" height="15" fill="rgb(225,14,2)" fg:x="95287" fg:w="426"/><text x="87.5851%" y="1103.50"></text></g><g><title>core::mem::replace (426 samples, 0.39%)</title><rect x="87.3351%" y="1077" width="0.3904%" height="15" fill="rgb(210,141,35)" fg:x="95287" fg:w="426"/><text x="87.5851%" y="1087.50"></text></g><g><title>core::ptr::read (413 samples, 0.38%)</title><rect x="87.3471%" y="1061" width="0.3785%" height="15" fill="rgb(251,14,44)" fg:x="95300" fg:w="413"/><text x="87.5971%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (388 samples, 0.36%)</title><rect x="87.3700%" y="1045" width="0.3556%" height="15" fill="rgb(247,48,18)" fg:x="95325" fg:w="388"/><text x="87.6200%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (391 samples, 0.36%)</title><rect x="87.7256%" y="1093" width="0.3584%" height="15" fill="rgb(225,0,40)" fg:x="95713" fg:w="391"/><text x="87.9756%" y="1103.50"></text></g><g><title>__memcpy_avx_unaligned_erms (380 samples, 0.35%)</title><rect x="87.7357%" y="1077" width="0.3483%" height="15" fill="rgb(221,31,33)" fg:x="95724" fg:w="380"/><text x="87.9857%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (65 samples, 0.06%)</title><rect x="88.0904%" y="1077" width="0.0596%" height="15" fill="rgb(237,42,40)" fg:x="96111" fg:w="65"/><text x="88.3404%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (65 samples, 0.06%)</title><rect x="88.0904%" y="1061" width="0.0596%" height="15" fill="rgb(233,51,29)" fg:x="96111" fg:w="65"/><text x="88.3404%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_add (65 samples, 0.06%)</title><rect x="88.0904%" y="1045" width="0.0596%" height="15" fill="rgb(226,58,20)" fg:x="96111" fg:w="65"/><text x="88.3404%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (59 samples, 0.05%)</title><rect x="88.1499%" y="1077" width="0.0541%" height="15" fill="rgb(208,98,7)" fg:x="96176" fg:w="59"/><text x="88.3999%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (57 samples, 0.05%)</title><rect x="88.1518%" y="1061" width="0.0522%" height="15" fill="rgb(228,143,44)" fg:x="96178" fg:w="57"/><text x="88.4018%" y="1071.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.05%)</title><rect x="88.1518%" y="1045" width="0.0522%" height="15" fill="rgb(246,55,38)" fg:x="96178" fg:w="57"/><text x="88.4018%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (56 samples, 0.05%)</title><rect x="88.1527%" y="1029" width="0.0513%" height="15" fill="rgb(247,87,16)" fg:x="96179" fg:w="56"/><text x="88.4027%" y="1039.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (56 samples, 0.05%)</title><rect x="88.1527%" y="1013" width="0.0513%" height="15" fill="rgb(234,129,42)" fg:x="96179" fg:w="56"/><text x="88.4027%" y="1023.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (56 samples, 0.05%)</title><rect x="88.1527%" y="997" width="0.0513%" height="15" fill="rgb(220,82,16)" fg:x="96179" fg:w="56"/><text x="88.4027%" y="1007.50"></text></g><g><title>event_listener::Inner::lock (27 samples, 0.02%)</title><rect x="88.2049%" y="1077" width="0.0247%" height="15" fill="rgb(211,88,4)" fg:x="96236" fg:w="27"/><text x="88.4549%" y="1087.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.02%)</title><rect x="88.2049%" y="1061" width="0.0247%" height="15" fill="rgb(248,151,21)" fg:x="96236" fg:w="27"/><text x="88.4549%" y="1071.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (27 samples, 0.02%)</title><rect x="88.2049%" y="1045" width="0.0247%" height="15" fill="rgb(238,163,6)" fg:x="96236" fg:w="27"/><text x="88.4549%" y="1055.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.02%)</title><rect x="88.2049%" y="1029" width="0.0247%" height="15" fill="rgb(209,183,11)" fg:x="96236" fg:w="27"/><text x="88.4549%" y="1039.50"></text></g><g><title>___pthread_mutex_lock (26 samples, 0.02%)</title><rect x="88.2059%" y="1013" width="0.0238%" height="15" fill="rgb(219,37,20)" fg:x="96237" fg:w="26"/><text x="88.4559%" y="1023.50"></text></g><g><title>event_listener::Event::listen (183 samples, 0.17%)</title><rect x="88.0867%" y="1093" width="0.1677%" height="15" fill="rgb(210,158,4)" fg:x="96107" fg:w="183"/><text x="88.3367%" y="1103.50"></text></g><g><title>event_listener::full_fence (21 samples, 0.02%)</title><rect x="88.2352%" y="1077" width="0.0192%" height="15" fill="rgb(221,167,53)" fg:x="96269" fg:w="21"/><text x="88.4852%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (20 samples, 0.02%)</title><rect x="88.2361%" y="1061" width="0.0183%" height="15" fill="rgb(237,151,45)" fg:x="96270" fg:w="20"/><text x="88.4861%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.02%)</title><rect x="88.2361%" y="1045" width="0.0183%" height="15" fill="rgb(231,39,3)" fg:x="96270" fg:w="20"/><text x="88.4861%" y="1055.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (33 samples, 0.03%)</title><rect x="88.2608%" y="997" width="0.0302%" height="15" fill="rgb(212,167,28)" fg:x="96297" fg:w="33"/><text x="88.5108%" y="1007.50"></text></g><g><title>__GI___lll_lock_wake (17 samples, 0.02%)</title><rect x="88.2755%" y="981" width="0.0156%" height="15" fill="rgb(232,178,8)" fg:x="96313" fg:w="17"/><text x="88.5255%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (37 samples, 0.03%)</title><rect x="88.2590%" y="1077" width="0.0339%" height="15" fill="rgb(225,151,20)" fg:x="96295" fg:w="37"/><text x="88.5090%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (37 samples, 0.03%)</title><rect x="88.2590%" y="1061" width="0.0339%" height="15" fill="rgb(238,3,37)" fg:x="96295" fg:w="37"/><text x="88.5090%" y="1071.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="88.2590%" y="1045" width="0.0339%" height="15" fill="rgb(251,147,42)" fg:x="96295" fg:w="37"/><text x="88.5090%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (36 samples, 0.03%)</title><rect x="88.2599%" y="1029" width="0.0330%" height="15" fill="rgb(208,173,10)" fg:x="96296" fg:w="36"/><text x="88.5099%" y="1039.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (35 samples, 0.03%)</title><rect x="88.2608%" y="1013" width="0.0321%" height="15" fill="rgb(246,225,4)" fg:x="96297" fg:w="35"/><text x="88.5108%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="88.2929%" y="1077" width="0.0192%" height="15" fill="rgb(248,102,6)" fg:x="96332" fg:w="21"/><text x="88.5429%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="88.2929%" y="1061" width="0.0192%" height="15" fill="rgb(232,6,21)" fg:x="96332" fg:w="21"/><text x="88.5429%" y="1071.50"></text></g><g><title>event_listener::Inner::lock (104 samples, 0.10%)</title><rect x="88.3131%" y="1077" width="0.0953%" height="15" fill="rgb(221,179,22)" fg:x="96354" fg:w="104"/><text x="88.5631%" y="1087.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (103 samples, 0.09%)</title><rect x="88.3140%" y="1061" width="0.0944%" height="15" fill="rgb(252,50,20)" fg:x="96355" fg:w="103"/><text x="88.5640%" y="1071.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (94 samples, 0.09%)</title><rect x="88.3223%" y="1045" width="0.0862%" height="15" fill="rgb(222,56,38)" fg:x="96364" fg:w="94"/><text x="88.5723%" y="1055.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (92 samples, 0.08%)</title><rect x="88.3241%" y="1029" width="0.0843%" height="15" fill="rgb(206,193,29)" fg:x="96366" fg:w="92"/><text x="88.5741%" y="1039.50"></text></g><g><title>___pthread_mutex_lock (92 samples, 0.08%)</title><rect x="88.3241%" y="1013" width="0.0843%" height="15" fill="rgb(239,192,45)" fg:x="96366" fg:w="92"/><text x="88.5741%" y="1023.50"></text></g><g><title>__GI___lll_lock_wait (55 samples, 0.05%)</title><rect x="88.3580%" y="997" width="0.0504%" height="15" fill="rgb(254,18,36)" fg:x="96403" fg:w="55"/><text x="88.6080%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (10,914 samples, 10.00%)</title><rect x="78.6692%" y="1189" width="10.0032%" height="15" fill="rgb(221,127,11)" fg:x="85832" fg:w="10914"/><text x="78.9192%" y="1199.50">tremor_runtime..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,761 samples, 4.36%)</title><rect x="84.3087%" y="1173" width="4.3637%" height="15" fill="rgb(234,146,35)" fg:x="91985" fg:w="4761"/><text x="84.5587%" y="1183.50">&lt;core..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (4,761 samples, 4.36%)</title><rect x="84.3087%" y="1157" width="4.3637%" height="15" fill="rgb(254,201,37)" fg:x="91985" fg:w="4761"/><text x="84.5587%" y="1167.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,761 samples, 4.36%)</title><rect x="84.3087%" y="1141" width="4.3637%" height="15" fill="rgb(211,202,23)" fg:x="91985" fg:w="4761"/><text x="84.5587%" y="1151.50">&lt;core..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (4,761 samples, 4.36%)</title><rect x="84.3087%" y="1125" width="4.3637%" height="15" fill="rgb(237,91,2)" fg:x="91985" fg:w="4761"/><text x="84.5587%" y="1135.50">tremo..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (4,761 samples, 4.36%)</title><rect x="84.3087%" y="1109" width="4.3637%" height="15" fill="rgb(226,228,36)" fg:x="91985" fg:w="4761"/><text x="84.5587%" y="1119.50">&lt;asyn..</text></g><g><title>event_listener::Event::notify (456 samples, 0.42%)</title><rect x="88.2544%" y="1093" width="0.4179%" height="15" fill="rgb(213,63,50)" fg:x="96290" fg:w="456"/><text x="88.5044%" y="1103.50"></text></g><g><title>event_listener::full_fence (284 samples, 0.26%)</title><rect x="88.4121%" y="1077" width="0.2603%" height="15" fill="rgb(235,194,19)" fg:x="96462" fg:w="284"/><text x="88.6621%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (277 samples, 0.25%)</title><rect x="88.4185%" y="1061" width="0.2539%" height="15" fill="rgb(207,204,18)" fg:x="96469" fg:w="277"/><text x="88.6685%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (277 samples, 0.25%)</title><rect x="88.4185%" y="1045" width="0.2539%" height="15" fill="rgb(248,8,7)" fg:x="96469" fg:w="277"/><text x="88.6685%" y="1055.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (41 samples, 0.04%)</title><rect x="88.6724%" y="1189" width="0.0376%" height="15" fill="rgb(223,145,47)" fg:x="96746" fg:w="41"/><text x="88.9224%" y="1199.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (97 samples, 0.09%)</title><rect x="88.7100%" y="1189" width="0.0889%" height="15" fill="rgb(228,84,11)" fg:x="96787" fg:w="97"/><text x="88.9600%" y="1199.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="88.7879%" y="1173" width="0.0110%" height="15" fill="rgb(218,76,45)" fg:x="96872" fg:w="12"/><text x="89.0379%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="88.7879%" y="1157" width="0.0110%" height="15" fill="rgb(223,80,15)" fg:x="96872" fg:w="12"/><text x="89.0379%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="88.7879%" y="1141" width="0.0110%" height="15" fill="rgb(219,218,33)" fg:x="96872" fg:w="12"/><text x="89.0379%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="88.7879%" y="1125" width="0.0110%" height="15" fill="rgb(208,51,11)" fg:x="96872" fg:w="12"/><text x="89.0379%" y="1135.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="88.7879%" y="1109" width="0.0110%" height="15" fill="rgb(229,165,39)" fg:x="96872" fg:w="12"/><text x="89.0379%" y="1119.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="88.7879%" y="1093" width="0.0110%" height="15" fill="rgb(241,100,24)" fg:x="96872" fg:w="12"/><text x="89.0379%" y="1103.50"></text></g><g><title>[unknown] (90,297 samples, 82.76%)</title><rect x="6.0795%" y="1205" width="82.7616%" height="15" fill="rgb(228,14,23)" fg:x="6633" fg:w="90297"/><text x="6.3295%" y="1215.50">[unknown]</text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (35 samples, 0.03%)</title><rect x="88.8089%" y="1189" width="0.0321%" height="15" fill="rgb(247,116,52)" fg:x="96895" fg:w="35"/><text x="89.0589%" y="1199.50"></text></g><g><title>async_channel::bounded (11 samples, 0.01%)</title><rect x="88.8456%" y="965" width="0.0101%" height="15" fill="rgb(216,149,33)" fg:x="96935" fg:w="11"/><text x="89.0956%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="88.8456%" y="949" width="0.0101%" height="15" fill="rgb(238,142,29)" fg:x="96935" fg:w="11"/><text x="89.0956%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="88.8456%" y="933" width="0.0101%" height="15" fill="rgb(224,83,40)" fg:x="96935" fg:w="11"/><text x="89.0956%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="88.8456%" y="917" width="0.0101%" height="15" fill="rgb(234,165,11)" fg:x="96935" fg:w="11"/><text x="89.0956%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="88.8456%" y="901" width="0.0101%" height="15" fill="rgb(215,96,23)" fg:x="96935" fg:w="11"/><text x="89.0956%" y="911.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="88.8456%" y="885" width="0.0101%" height="15" fill="rgb(233,179,26)" fg:x="96935" fg:w="11"/><text x="89.0956%" y="895.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="88.8456%" y="869" width="0.0101%" height="15" fill="rgb(225,129,33)" fg:x="96935" fg:w="11"/><text x="89.0956%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="88.8456%" y="853" width="0.0101%" height="15" fill="rgb(237,49,13)" fg:x="96935" fg:w="11"/><text x="89.0956%" y="863.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="88.8456%" y="837" width="0.0101%" height="15" fill="rgb(211,3,31)" fg:x="96935" fg:w="11"/><text x="89.0956%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="88.8456%" y="821" width="0.0101%" height="15" fill="rgb(216,152,19)" fg:x="96935" fg:w="11"/><text x="89.0956%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="88.8456%" y="805" width="0.0101%" height="15" fill="rgb(251,121,35)" fg:x="96935" fg:w="11"/><text x="89.0956%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="88.8456%" y="789" width="0.0101%" height="15" fill="rgb(210,217,47)" fg:x="96935" fg:w="11"/><text x="89.0956%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="88.8456%" y="773" width="0.0101%" height="15" fill="rgb(244,116,22)" fg:x="96935" fg:w="11"/><text x="89.0956%" y="783.50"></text></g><g><title>snmalloc::init_thread_allocator (11 samples, 0.01%)</title><rect x="88.8456%" y="757" width="0.0101%" height="15" fill="rgb(228,17,21)" fg:x="96935" fg:w="11"/><text x="89.0956%" y="767.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="89.0308%" y="613" width="0.0147%" height="15" fill="rgb(240,149,34)" fg:x="97137" fg:w="16"/><text x="89.2808%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (22 samples, 0.02%)</title><rect x="89.1307%" y="597" width="0.0202%" height="15" fill="rgb(208,125,47)" fg:x="97246" fg:w="22"/><text x="89.3807%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="89.2370%" y="517" width="0.0110%" height="15" fill="rgb(249,186,39)" fg:x="97362" fg:w="12"/><text x="89.4870%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (40 samples, 0.04%)</title><rect x="89.2507%" y="501" width="0.0367%" height="15" fill="rgb(240,220,33)" fg:x="97377" fg:w="40"/><text x="89.5007%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (31 samples, 0.03%)</title><rect x="89.2590%" y="485" width="0.0284%" height="15" fill="rgb(243,110,23)" fg:x="97386" fg:w="31"/><text x="89.5090%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (25 samples, 0.02%)</title><rect x="89.2645%" y="469" width="0.0229%" height="15" fill="rgb(219,163,46)" fg:x="97392" fg:w="25"/><text x="89.5145%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.03%)</title><rect x="89.2874%" y="501" width="0.0330%" height="15" fill="rgb(216,126,30)" fg:x="97417" fg:w="36"/><text x="89.5374%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (18 samples, 0.02%)</title><rect x="89.3039%" y="485" width="0.0165%" height="15" fill="rgb(208,139,11)" fg:x="97435" fg:w="18"/><text x="89.5539%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (18 samples, 0.02%)</title><rect x="89.3039%" y="469" width="0.0165%" height="15" fill="rgb(213,118,36)" fg:x="97435" fg:w="18"/><text x="89.5539%" y="479.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="89.3204%" y="501" width="0.0156%" height="15" fill="rgb(226,43,17)" fg:x="97453" fg:w="17"/><text x="89.5704%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (150 samples, 0.14%)</title><rect x="89.2278%" y="533" width="0.1375%" height="15" fill="rgb(254,217,4)" fg:x="97352" fg:w="150"/><text x="89.4778%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (128 samples, 0.12%)</title><rect x="89.2480%" y="517" width="0.1173%" height="15" fill="rgb(210,134,47)" fg:x="97374" fg:w="128"/><text x="89.4980%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (32 samples, 0.03%)</title><rect x="89.3360%" y="501" width="0.0293%" height="15" fill="rgb(237,24,49)" fg:x="97470" fg:w="32"/><text x="89.5860%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (32 samples, 0.03%)</title><rect x="89.3360%" y="485" width="0.0293%" height="15" fill="rgb(251,39,46)" fg:x="97470" fg:w="32"/><text x="89.5860%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (22 samples, 0.02%)</title><rect x="89.3451%" y="469" width="0.0202%" height="15" fill="rgb(251,220,3)" fg:x="97480" fg:w="22"/><text x="89.5951%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (22 samples, 0.02%)</title><rect x="89.3451%" y="453" width="0.0202%" height="15" fill="rgb(228,105,12)" fg:x="97480" fg:w="22"/><text x="89.5951%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (235 samples, 0.22%)</title><rect x="89.1508%" y="565" width="0.2154%" height="15" fill="rgb(215,196,1)" fg:x="97268" fg:w="235"/><text x="89.4008%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (194 samples, 0.18%)</title><rect x="89.1884%" y="549" width="0.1778%" height="15" fill="rgb(214,33,39)" fg:x="97309" fg:w="194"/><text x="89.4384%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (242 samples, 0.22%)</title><rect x="89.1508%" y="597" width="0.2218%" height="15" fill="rgb(220,19,52)" fg:x="97268" fg:w="242"/><text x="89.4008%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (242 samples, 0.22%)</title><rect x="89.1508%" y="581" width="0.2218%" height="15" fill="rgb(221,78,38)" fg:x="97268" fg:w="242"/><text x="89.4008%" y="591.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (512 samples, 0.47%)</title><rect x="89.5477%" y="565" width="0.4693%" height="15" fill="rgb(253,30,16)" fg:x="97701" fg:w="512"/><text x="89.7977%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (341 samples, 0.31%)</title><rect x="89.7044%" y="549" width="0.3125%" height="15" fill="rgb(242,65,0)" fg:x="97872" fg:w="341"/><text x="89.9544%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (341 samples, 0.31%)</title><rect x="89.7044%" y="533" width="0.3125%" height="15" fill="rgb(235,201,12)" fg:x="97872" fg:w="341"/><text x="89.9544%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (697 samples, 0.64%)</title><rect x="89.3983%" y="581" width="0.6388%" height="15" fill="rgb(233,161,9)" fg:x="97538" fg:w="697"/><text x="89.6483%" y="591.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (22 samples, 0.02%)</title><rect x="90.0170%" y="565" width="0.0202%" height="15" fill="rgb(241,207,41)" fg:x="98213" fg:w="22"/><text x="90.2670%" y="575.50"></text></g><g><title>async_executor::steal (727 samples, 0.67%)</title><rect x="89.3726%" y="597" width="0.6663%" height="15" fill="rgb(212,69,46)" fg:x="97510" fg:w="727"/><text x="89.6226%" y="607.50"></text></g><g><title>concurrent_queue::full_fence (911 samples, 0.83%)</title><rect x="90.5229%" y="565" width="0.8350%" height="15" fill="rgb(239,69,45)" fg:x="98765" fg:w="911"/><text x="90.7729%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (906 samples, 0.83%)</title><rect x="90.5275%" y="549" width="0.8304%" height="15" fill="rgb(242,117,48)" fg:x="98770" fg:w="906"/><text x="90.7775%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (906 samples, 0.83%)</title><rect x="90.5275%" y="533" width="0.8304%" height="15" fill="rgb(228,41,36)" fg:x="98770" fg:w="906"/><text x="90.7775%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (906 samples, 0.83%)</title><rect x="90.5275%" y="517" width="0.8304%" height="15" fill="rgb(212,3,32)" fg:x="98770" fg:w="906"/><text x="90.7775%" y="527.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,366 samples, 1.25%)</title><rect x="90.2058%" y="581" width="1.2520%" height="15" fill="rgb(233,41,49)" fg:x="98419" fg:w="1366"/><text x="90.4558%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (109 samples, 0.10%)</title><rect x="91.3579%" y="565" width="0.0999%" height="15" fill="rgb(252,170,49)" fg:x="99676" fg:w="109"/><text x="91.6079%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (97 samples, 0.09%)</title><rect x="91.3689%" y="549" width="0.0889%" height="15" fill="rgb(229,53,26)" fg:x="99688" fg:w="97"/><text x="91.6189%" y="559.50"></text></g><g><title>concurrent_queue::full_fence (339 samples, 0.31%)</title><rect x="91.5063%" y="565" width="0.3107%" height="15" fill="rgb(217,157,12)" fg:x="99838" fg:w="339"/><text x="91.7563%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (334 samples, 0.31%)</title><rect x="91.5109%" y="549" width="0.3061%" height="15" fill="rgb(227,17,9)" fg:x="99843" fg:w="334"/><text x="91.7609%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (334 samples, 0.31%)</title><rect x="91.5109%" y="533" width="0.3061%" height="15" fill="rgb(218,84,12)" fg:x="99843" fg:w="334"/><text x="91.7609%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (334 samples, 0.31%)</title><rect x="91.5109%" y="517" width="0.3061%" height="15" fill="rgb(212,79,24)" fg:x="99843" fg:w="334"/><text x="91.7609%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (27 samples, 0.02%)</title><rect x="91.8226%" y="549" width="0.0247%" height="15" fill="rgb(217,222,37)" fg:x="100183" fg:w="27"/><text x="92.0726%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (27 samples, 0.02%)</title><rect x="91.8226%" y="533" width="0.0247%" height="15" fill="rgb(246,208,8)" fg:x="100183" fg:w="27"/><text x="92.0726%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (28 samples, 0.03%)</title><rect x="91.8226%" y="565" width="0.0257%" height="15" fill="rgb(244,133,10)" fg:x="100183" fg:w="28"/><text x="92.0726%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (27 samples, 0.02%)</title><rect x="91.8537%" y="565" width="0.0247%" height="15" fill="rgb(209,219,41)" fg:x="100217" fg:w="27"/><text x="92.1037%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (27 samples, 0.02%)</title><rect x="91.8537%" y="549" width="0.0247%" height="15" fill="rgb(253,175,45)" fg:x="100217" fg:w="27"/><text x="92.1037%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (93 samples, 0.09%)</title><rect x="91.8785%" y="565" width="0.0852%" height="15" fill="rgb(235,100,37)" fg:x="100244" fg:w="93"/><text x="92.1285%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (93 samples, 0.09%)</title><rect x="91.8785%" y="549" width="0.0852%" height="15" fill="rgb(225,87,19)" fg:x="100244" fg:w="93"/><text x="92.1285%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (99 samples, 0.09%)</title><rect x="91.9637%" y="565" width="0.0907%" height="15" fill="rgb(217,152,17)" fg:x="100337" fg:w="99"/><text x="92.2137%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_or (99 samples, 0.09%)</title><rect x="91.9637%" y="549" width="0.0907%" height="15" fill="rgb(235,72,13)" fg:x="100337" fg:w="99"/><text x="92.2137%" y="559.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,416 samples, 2.21%)</title><rect x="90.0390%" y="597" width="2.2144%" height="15" fill="rgb(233,140,18)" fg:x="98237" fg:w="2416"/><text x="90.2890%" y="607.50">c..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (868 samples, 0.80%)</title><rect x="91.4578%" y="581" width="0.7956%" height="15" fill="rgb(207,212,28)" fg:x="99785" fg:w="868"/><text x="91.7078%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (217 samples, 0.20%)</title><rect x="92.0544%" y="565" width="0.1989%" height="15" fill="rgb(220,130,25)" fg:x="100436" fg:w="217"/><text x="92.3044%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (217 samples, 0.20%)</title><rect x="92.0544%" y="549" width="0.1989%" height="15" fill="rgb(205,55,34)" fg:x="100436" fg:w="217"/><text x="92.3044%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (139 samples, 0.13%)</title><rect x="92.2836%" y="533" width="0.1274%" height="15" fill="rgb(237,54,35)" fg:x="100686" fg:w="139"/><text x="92.5336%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (139 samples, 0.13%)</title><rect x="92.2836%" y="517" width="0.1274%" height="15" fill="rgb(208,67,23)" fg:x="100686" fg:w="139"/><text x="92.5336%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (324 samples, 0.30%)</title><rect x="92.2533%" y="597" width="0.2970%" height="15" fill="rgb(206,207,50)" fg:x="100653" fg:w="324"/><text x="92.5033%" y="607.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (324 samples, 0.30%)</title><rect x="92.2533%" y="581" width="0.2970%" height="15" fill="rgb(213,211,42)" fg:x="100653" fg:w="324"/><text x="92.5033%" y="591.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (321 samples, 0.29%)</title><rect x="92.2561%" y="565" width="0.2942%" height="15" fill="rgb(252,197,50)" fg:x="100656" fg:w="321"/><text x="92.5061%" y="575.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (298 samples, 0.27%)</title><rect x="92.2772%" y="549" width="0.2731%" height="15" fill="rgb(251,211,41)" fg:x="100679" fg:w="298"/><text x="92.5272%" y="559.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (152 samples, 0.14%)</title><rect x="92.4110%" y="533" width="0.1393%" height="15" fill="rgb(229,211,5)" fg:x="100825" fg:w="152"/><text x="92.6610%" y="543.50"></text></g><g><title>___pthread_rwlock_unlock (152 samples, 0.14%)</title><rect x="92.4110%" y="517" width="0.1393%" height="15" fill="rgb(239,36,31)" fg:x="100825" fg:w="152"/><text x="92.6610%" y="527.50"></text></g><g><title>fastrand::Rng::gen_u64 (15 samples, 0.01%)</title><rect x="92.5805%" y="501" width="0.0137%" height="15" fill="rgb(248,67,31)" fg:x="101010" fg:w="15"/><text x="92.8305%" y="511.50"></text></g><g><title>fastrand::Rng::usize (27 samples, 0.02%)</title><rect x="92.5769%" y="533" width="0.0247%" height="15" fill="rgb(249,55,44)" fg:x="101006" fg:w="27"/><text x="92.8269%" y="543.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (25 samples, 0.02%)</title><rect x="92.5787%" y="517" width="0.0229%" height="15" fill="rgb(216,82,12)" fg:x="101008" fg:w="25"/><text x="92.8287%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (37 samples, 0.03%)</title><rect x="92.5695%" y="565" width="0.0339%" height="15" fill="rgb(242,174,1)" fg:x="100998" fg:w="37"/><text x="92.8195%" y="575.50"></text></g><g><title>fastrand::usize::{{closure}} (29 samples, 0.03%)</title><rect x="92.5769%" y="549" width="0.0266%" height="15" fill="rgb(208,120,29)" fg:x="101006" fg:w="29"/><text x="92.8269%" y="559.50"></text></g><g><title>fastrand::usize (58 samples, 0.05%)</title><rect x="92.5558%" y="597" width="0.0532%" height="15" fill="rgb(221,105,43)" fg:x="100983" fg:w="58"/><text x="92.8058%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 samples, 0.05%)</title><rect x="92.5631%" y="581" width="0.0458%" height="15" fill="rgb(234,124,22)" fg:x="100991" fg:w="50"/><text x="92.8131%" y="591.50"></text></g><g><title>std::sync::poison::Flag::get (16 samples, 0.01%)</title><rect x="92.6090%" y="549" width="0.0147%" height="15" fill="rgb(212,23,30)" fg:x="101041" fg:w="16"/><text x="92.8590%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (16 samples, 0.01%)</title><rect x="92.6090%" y="533" width="0.0147%" height="15" fill="rgb(219,122,53)" fg:x="101041" fg:w="16"/><text x="92.8590%" y="543.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="92.6090%" y="581" width="0.0183%" height="15" fill="rgb(248,84,24)" fg:x="101041" fg:w="20"/><text x="92.8590%" y="591.50"></text></g><g><title>std::sync::poison::Flag::borrow (20 samples, 0.02%)</title><rect x="92.6090%" y="565" width="0.0183%" height="15" fill="rgb(245,115,18)" fg:x="101041" fg:w="20"/><text x="92.8590%" y="575.50"></text></g><g><title>___pthread_rwlock_rdlock (219 samples, 0.20%)</title><rect x="92.6502%" y="549" width="0.2007%" height="15" fill="rgb(227,176,51)" fg:x="101086" fg:w="219"/><text x="92.9002%" y="559.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (4,247 samples, 3.89%)</title><rect x="89.0454%" y="613" width="3.8926%" height="15" fill="rgb(229,63,42)" fg:x="97153" fg:w="4247"/><text x="89.2954%" y="623.50">asyn..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (359 samples, 0.33%)</title><rect x="92.6090%" y="597" width="0.3290%" height="15" fill="rgb(247,202,24)" fg:x="101041" fg:w="359"/><text x="92.8590%" y="607.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (339 samples, 0.31%)</title><rect x="92.6273%" y="581" width="0.3107%" height="15" fill="rgb(244,173,20)" fg:x="101061" fg:w="339"/><text x="92.8773%" y="591.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (333 samples, 0.31%)</title><rect x="92.6328%" y="565" width="0.3052%" height="15" fill="rgb(242,81,47)" fg:x="101067" fg:w="333"/><text x="92.8828%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (95 samples, 0.09%)</title><rect x="92.8509%" y="549" width="0.0871%" height="15" fill="rgb(231,185,54)" fg:x="101305" fg:w="95"/><text x="93.1009%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_add (95 samples, 0.09%)</title><rect x="92.8509%" y="533" width="0.0871%" height="15" fill="rgb(243,55,32)" fg:x="101305" fg:w="95"/><text x="93.1009%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (33 samples, 0.03%)</title><rect x="92.9453%" y="597" width="0.0302%" height="15" fill="rgb(208,167,19)" fg:x="101408" fg:w="33"/><text x="93.1953%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="92.9453%" y="581" width="0.0302%" height="15" fill="rgb(231,72,35)" fg:x="101408" fg:w="33"/><text x="93.1953%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (31 samples, 0.03%)</title><rect x="92.9472%" y="565" width="0.0284%" height="15" fill="rgb(250,173,51)" fg:x="101410" fg:w="31"/><text x="93.1972%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (30 samples, 0.03%)</title><rect x="92.9481%" y="549" width="0.0275%" height="15" fill="rgb(209,5,22)" fg:x="101411" fg:w="30"/><text x="93.1981%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (30 samples, 0.03%)</title><rect x="92.9481%" y="533" width="0.0275%" height="15" fill="rgb(250,174,19)" fg:x="101411" fg:w="30"/><text x="93.1981%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (56 samples, 0.05%)</title><rect x="92.9756%" y="597" width="0.0513%" height="15" fill="rgb(217,3,49)" fg:x="101441" fg:w="56"/><text x="93.2256%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (56 samples, 0.05%)</title><rect x="92.9756%" y="581" width="0.0513%" height="15" fill="rgb(218,225,5)" fg:x="101441" fg:w="56"/><text x="93.2256%" y="591.50"></text></g><g><title>async_io::reactor::Reactor::notify (14 samples, 0.01%)</title><rect x="93.0315%" y="549" width="0.0128%" height="15" fill="rgb(236,89,11)" fg:x="101502" fg:w="14"/><text x="93.2815%" y="559.50"></text></g><g><title>polling::Poller::notify (11 samples, 0.01%)</title><rect x="93.0342%" y="533" width="0.0101%" height="15" fill="rgb(206,33,28)" fg:x="101505" fg:w="11"/><text x="93.2842%" y="543.50"></text></g><g><title>core::mem::drop (15 samples, 0.01%)</title><rect x="93.0975%" y="517" width="0.0137%" height="15" fill="rgb(241,56,42)" fg:x="101574" fg:w="15"/><text x="93.3475%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (15 samples, 0.01%)</title><rect x="93.0975%" y="501" width="0.0137%" height="15" fill="rgb(222,44,11)" fg:x="101574" fg:w="15"/><text x="93.3475%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="93.0975%" y="485" width="0.0137%" height="15" fill="rgb(234,111,20)" fg:x="101574" fg:w="15"/><text x="93.3475%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="93.1002%" y="469" width="0.0110%" height="15" fill="rgb(237,77,6)" fg:x="101577" fg:w="12"/><text x="93.3502%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.01%)</title><rect x="93.1002%" y="453" width="0.0110%" height="15" fill="rgb(235,111,23)" fg:x="101577" fg:w="12"/><text x="93.3502%" y="463.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="93.1002%" y="437" width="0.0110%" height="15" fill="rgb(251,135,29)" fg:x="101577" fg:w="12"/><text x="93.3502%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (100 samples, 0.09%)</title><rect x="93.1112%" y="517" width="0.0917%" height="15" fill="rgb(217,57,1)" fg:x="101589" fg:w="100"/><text x="93.3612%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (100 samples, 0.09%)</title><rect x="93.1112%" y="501" width="0.0917%" height="15" fill="rgb(249,119,31)" fg:x="101589" fg:w="100"/><text x="93.3612%" y="511.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (119 samples, 0.11%)</title><rect x="93.2029%" y="517" width="0.1091%" height="15" fill="rgb(233,164,33)" fg:x="101689" fg:w="119"/><text x="93.4529%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (119 samples, 0.11%)</title><rect x="93.2029%" y="501" width="0.1091%" height="15" fill="rgb(250,217,43)" fg:x="101689" fg:w="119"/><text x="93.4529%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (119 samples, 0.11%)</title><rect x="93.2029%" y="485" width="0.1091%" height="15" fill="rgb(232,154,50)" fg:x="101689" fg:w="119"/><text x="93.4529%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (119 samples, 0.11%)</title><rect x="93.2029%" y="469" width="0.1091%" height="15" fill="rgb(227,190,8)" fg:x="101689" fg:w="119"/><text x="93.4529%" y="479.50"></text></g><g><title>parking::Unparker::unpark (389 samples, 0.36%)</title><rect x="93.0480%" y="549" width="0.3565%" height="15" fill="rgb(209,217,32)" fg:x="101520" fg:w="389"/><text x="93.2980%" y="559.50"></text></g><g><title>parking::Inner::unpark (336 samples, 0.31%)</title><rect x="93.0966%" y="533" width="0.3080%" height="15" fill="rgb(243,203,50)" fg:x="101573" fg:w="336"/><text x="93.3466%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (101 samples, 0.09%)</title><rect x="93.3119%" y="517" width="0.0926%" height="15" fill="rgb(232,152,27)" fg:x="101808" fg:w="101"/><text x="93.5619%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (98 samples, 0.09%)</title><rect x="93.3147%" y="501" width="0.0898%" height="15" fill="rgb(240,34,29)" fg:x="101811" fg:w="98"/><text x="93.5647%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (90 samples, 0.08%)</title><rect x="93.3220%" y="485" width="0.0825%" height="15" fill="rgb(215,185,52)" fg:x="101819" fg:w="90"/><text x="93.5720%" y="495.50"></text></g><g><title>___pthread_mutex_lock (90 samples, 0.08%)</title><rect x="93.3220%" y="469" width="0.0825%" height="15" fill="rgb(240,89,49)" fg:x="101819" fg:w="90"/><text x="93.5720%" y="479.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (428 samples, 0.39%)</title><rect x="93.0287%" y="565" width="0.3923%" height="15" fill="rgb(225,12,52)" fg:x="101499" fg:w="428"/><text x="93.2787%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18 samples, 0.02%)</title><rect x="93.4045%" y="549" width="0.0165%" height="15" fill="rgb(239,128,45)" fg:x="101909" fg:w="18"/><text x="93.6545%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.02%)</title><rect x="93.4045%" y="533" width="0.0165%" height="15" fill="rgb(211,78,47)" fg:x="101909" fg:w="18"/><text x="93.6545%" y="543.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (18 samples, 0.02%)</title><rect x="93.4045%" y="517" width="0.0165%" height="15" fill="rgb(232,31,21)" fg:x="101909" fg:w="18"/><text x="93.6545%" y="527.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (18 samples, 0.02%)</title><rect x="93.4045%" y="501" width="0.0165%" height="15" fill="rgb(222,168,14)" fg:x="101909" fg:w="18"/><text x="93.6545%" y="511.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (17 samples, 0.02%)</title><rect x="93.4054%" y="485" width="0.0156%" height="15" fill="rgb(209,128,24)" fg:x="101910" fg:w="17"/><text x="93.6554%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (17 samples, 0.02%)</title><rect x="93.4054%" y="469" width="0.0156%" height="15" fill="rgb(249,35,13)" fg:x="101910" fg:w="17"/><text x="93.6554%" y="479.50"></text></g><g><title>core::task::wake::Waker::wake (486 samples, 0.45%)</title><rect x="93.0269%" y="597" width="0.4454%" height="15" fill="rgb(218,7,2)" fg:x="101497" fg:w="486"/><text x="93.2769%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (486 samples, 0.45%)</title><rect x="93.0269%" y="581" width="0.4454%" height="15" fill="rgb(238,107,27)" fg:x="101497" fg:w="486"/><text x="93.2769%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (56 samples, 0.05%)</title><rect x="93.4210%" y="565" width="0.0513%" height="15" fill="rgb(217,88,38)" fg:x="101927" fg:w="56"/><text x="93.6710%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="93.4210%" y="549" width="0.0513%" height="15" fill="rgb(230,207,0)" fg:x="101927" fg:w="56"/><text x="93.6710%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (55 samples, 0.05%)</title><rect x="93.4219%" y="533" width="0.0504%" height="15" fill="rgb(249,64,54)" fg:x="101928" fg:w="55"/><text x="93.6719%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (55 samples, 0.05%)</title><rect x="93.4219%" y="517" width="0.0504%" height="15" fill="rgb(231,7,11)" fg:x="101928" fg:w="55"/><text x="93.6719%" y="527.50"></text></g><g><title>async_executor::State::notify (611 samples, 0.56%)</title><rect x="92.9380%" y="613" width="0.5600%" height="15" fill="rgb(205,149,21)" fg:x="101400" fg:w="611"/><text x="93.1880%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (28 samples, 0.03%)</title><rect x="93.4723%" y="597" width="0.0257%" height="15" fill="rgb(215,126,34)" fg:x="101983" fg:w="28"/><text x="93.7223%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (26 samples, 0.02%)</title><rect x="93.4742%" y="581" width="0.0238%" height="15" fill="rgb(241,132,45)" fg:x="101985" fg:w="26"/><text x="93.7242%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (23 samples, 0.02%)</title><rect x="93.4769%" y="565" width="0.0211%" height="15" fill="rgb(252,69,32)" fg:x="101988" fg:w="23"/><text x="93.7269%" y="575.50"></text></g><g><title>___pthread_mutex_lock (23 samples, 0.02%)</title><rect x="93.4769%" y="549" width="0.0211%" height="15" fill="rgb(232,204,19)" fg:x="101988" fg:w="23"/><text x="93.7269%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (119 samples, 0.11%)</title><rect x="93.5127%" y="581" width="0.1091%" height="15" fill="rgb(249,15,47)" fg:x="102027" fg:w="119"/><text x="93.7627%" y="591.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (118 samples, 0.11%)</title><rect x="93.5136%" y="565" width="0.1082%" height="15" fill="rgb(209,227,23)" fg:x="102028" fg:w="118"/><text x="93.7636%" y="575.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (117 samples, 0.11%)</title><rect x="93.5145%" y="549" width="0.1072%" height="15" fill="rgb(248,92,24)" fg:x="102029" fg:w="117"/><text x="93.7645%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (117 samples, 0.11%)</title><rect x="93.5145%" y="533" width="0.1072%" height="15" fill="rgb(247,59,2)" fg:x="102029" fg:w="117"/><text x="93.7645%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (117 samples, 0.11%)</title><rect x="93.5145%" y="517" width="0.1072%" height="15" fill="rgb(221,30,5)" fg:x="102029" fg:w="117"/><text x="93.7645%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (117 samples, 0.11%)</title><rect x="93.5145%" y="501" width="0.1072%" height="15" fill="rgb(208,108,53)" fg:x="102029" fg:w="117"/><text x="93.7645%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (34 samples, 0.03%)</title><rect x="93.6217%" y="581" width="0.0312%" height="15" fill="rgb(211,183,26)" fg:x="102146" fg:w="34"/><text x="93.8717%" y="591.50"></text></g><g><title>async_executor::Sleepers::insert (183 samples, 0.17%)</title><rect x="93.5108%" y="597" width="0.1677%" height="15" fill="rgb(232,132,4)" fg:x="102025" fg:w="183"/><text x="93.7608%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (28 samples, 0.03%)</title><rect x="93.6529%" y="581" width="0.0257%" height="15" fill="rgb(253,128,37)" fg:x="102180" fg:w="28"/><text x="93.9029%" y="591.50"></text></g><g><title>core::ptr::write (25 samples, 0.02%)</title><rect x="93.6557%" y="565" width="0.0229%" height="15" fill="rgb(221,58,24)" fg:x="102183" fg:w="25"/><text x="93.9057%" y="575.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="93.7281%" y="581" width="0.0577%" height="15" fill="rgb(230,54,45)" fg:x="102262" fg:w="63"/><text x="93.9781%" y="591.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (61 samples, 0.06%)</title><rect x="93.7299%" y="565" width="0.0559%" height="15" fill="rgb(254,21,18)" fg:x="102264" fg:w="61"/><text x="93.9799%" y="575.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (59 samples, 0.05%)</title><rect x="93.7317%" y="549" width="0.0541%" height="15" fill="rgb(221,108,0)" fg:x="102266" fg:w="59"/><text x="93.9817%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (59 samples, 0.05%)</title><rect x="93.7317%" y="533" width="0.0541%" height="15" fill="rgb(206,95,1)" fg:x="102266" fg:w="59"/><text x="93.9817%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (59 samples, 0.05%)</title><rect x="93.7317%" y="517" width="0.0541%" height="15" fill="rgb(237,52,5)" fg:x="102266" fg:w="59"/><text x="93.9817%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (59 samples, 0.05%)</title><rect x="93.7317%" y="501" width="0.0541%" height="15" fill="rgb(218,150,34)" fg:x="102266" fg:w="59"/><text x="93.9817%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="93.7858%" y="581" width="0.0119%" height="15" fill="rgb(235,194,28)" fg:x="102325" fg:w="13"/><text x="94.0358%" y="591.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="93.7858%" y="565" width="0.0119%" height="15" fill="rgb(245,92,18)" fg:x="102325" fg:w="13"/><text x="94.0358%" y="575.50"></text></g><g><title>async_executor::Sleepers::update (136 samples, 0.12%)</title><rect x="93.6850%" y="597" width="0.1247%" height="15" fill="rgb(253,203,53)" fg:x="102215" fg:w="136"/><text x="93.9350%" y="607.50"></text></g><g><title>core::task::wake::Waker::will_wake (13 samples, 0.01%)</title><rect x="93.7977%" y="581" width="0.0119%" height="15" fill="rgb(249,185,47)" fg:x="102338" fg:w="13"/><text x="94.0477%" y="591.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (13 samples, 0.01%)</title><rect x="93.7977%" y="565" width="0.0119%" height="15" fill="rgb(252,194,52)" fg:x="102338" fg:w="13"/><text x="94.0477%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.01%)</title><rect x="93.7996%" y="549" width="0.0101%" height="15" fill="rgb(210,53,36)" fg:x="102340" fg:w="11"/><text x="94.0496%" y="559.50"></text></g><g><title>std::sync::poison::Flag::done (11 samples, 0.01%)</title><rect x="93.8096%" y="565" width="0.0101%" height="15" fill="rgb(237,37,25)" fg:x="102351" fg:w="11"/><text x="94.0596%" y="575.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (237 samples, 0.22%)</title><rect x="93.8225%" y="533" width="0.2172%" height="15" fill="rgb(242,116,27)" fg:x="102365" fg:w="237"/><text x="94.0725%" y="543.50"></text></g><g><title>__GI___lll_lock_wake (13 samples, 0.01%)</title><rect x="94.0278%" y="517" width="0.0119%" height="15" fill="rgb(213,185,26)" fg:x="102589" fg:w="13"/><text x="94.2778%" y="527.50"></text></g><g><title>___pthread_mutex_unlock (11 samples, 0.01%)</title><rect x="94.0397%" y="533" width="0.0101%" height="15" fill="rgb(225,204,8)" fg:x="102602" fg:w="11"/><text x="94.2897%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (263 samples, 0.24%)</title><rect x="93.8096%" y="597" width="0.2411%" height="15" fill="rgb(254,111,37)" fg:x="102351" fg:w="263"/><text x="94.0596%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (263 samples, 0.24%)</title><rect x="93.8096%" y="581" width="0.2411%" height="15" fill="rgb(242,35,9)" fg:x="102351" fg:w="263"/><text x="94.0596%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (252 samples, 0.23%)</title><rect x="93.8197%" y="565" width="0.2310%" height="15" fill="rgb(232,138,49)" fg:x="102362" fg:w="252"/><text x="94.0697%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (249 samples, 0.23%)</title><rect x="93.8225%" y="549" width="0.2282%" height="15" fill="rgb(247,56,4)" fg:x="102365" fg:w="249"/><text x="94.0725%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (167 samples, 0.15%)</title><rect x="94.0507%" y="597" width="0.1531%" height="15" fill="rgb(226,179,17)" fg:x="102614" fg:w="167"/><text x="94.3007%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (167 samples, 0.15%)</title><rect x="94.0507%" y="581" width="0.1531%" height="15" fill="rgb(216,163,45)" fg:x="102614" fg:w="167"/><text x="94.3007%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (92 samples, 0.08%)</title><rect x="94.2037%" y="597" width="0.0843%" height="15" fill="rgb(211,157,3)" fg:x="102781" fg:w="92"/><text x="94.4537%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_store (92 samples, 0.08%)</title><rect x="94.2037%" y="581" width="0.0843%" height="15" fill="rgb(234,44,20)" fg:x="102781" fg:w="92"/><text x="94.4537%" y="591.50"></text></g><g><title>std::sync::poison::Flag::get (12 samples, 0.01%)</title><rect x="94.2899%" y="549" width="0.0110%" height="15" fill="rgb(254,138,23)" fg:x="102875" fg:w="12"/><text x="94.5399%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (12 samples, 0.01%)</title><rect x="94.2899%" y="533" width="0.0110%" height="15" fill="rgb(206,119,39)" fg:x="102875" fg:w="12"/><text x="94.5399%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="94.2908%" y="517" width="0.0101%" height="15" fill="rgb(231,105,52)" fg:x="102876" fg:w="11"/><text x="94.5408%" y="527.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="94.2881%" y="581" width="0.0174%" height="15" fill="rgb(250,20,5)" fg:x="102873" fg:w="19"/><text x="94.5381%" y="591.50"></text></g><g><title>std::sync::poison::Flag::borrow (17 samples, 0.02%)</title><rect x="94.2899%" y="565" width="0.0156%" height="15" fill="rgb(215,198,30)" fg:x="102875" fg:w="17"/><text x="94.5399%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (1,557 samples, 1.43%)</title><rect x="93.4980%" y="613" width="1.4271%" height="15" fill="rgb(246,142,8)" fg:x="102011" fg:w="1557"/><text x="93.7480%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (695 samples, 0.64%)</title><rect x="94.2881%" y="597" width="0.6370%" height="15" fill="rgb(243,26,38)" fg:x="102873" fg:w="695"/><text x="94.5381%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (676 samples, 0.62%)</title><rect x="94.3055%" y="581" width="0.6196%" height="15" fill="rgb(205,133,28)" fg:x="102892" fg:w="676"/><text x="94.5555%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (606 samples, 0.56%)</title><rect x="94.3696%" y="565" width="0.5554%" height="15" fill="rgb(212,34,0)" fg:x="102962" fg:w="606"/><text x="94.6196%" y="575.50"></text></g><g><title>___pthread_mutex_lock (606 samples, 0.56%)</title><rect x="94.3696%" y="549" width="0.5554%" height="15" fill="rgb(251,226,22)" fg:x="102962" fg:w="606"/><text x="94.6196%" y="559.50"></text></g><g><title>__GI___lll_lock_wait (60 samples, 0.05%)</title><rect x="94.8701%" y="533" width="0.0550%" height="15" fill="rgb(252,119,9)" fg:x="103508" fg:w="60"/><text x="95.1201%" y="543.50"></text></g><g><title>async_executor::Sleepers::remove (57 samples, 0.05%)</title><rect x="94.9297%" y="597" width="0.0522%" height="15" fill="rgb(213,150,50)" fg:x="103573" fg:w="57"/><text x="95.1797%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (31 samples, 0.03%)</title><rect x="94.9535%" y="581" width="0.0284%" height="15" fill="rgb(212,24,39)" fg:x="103599" fg:w="31"/><text x="95.2035%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (31 samples, 0.03%)</title><rect x="94.9535%" y="565" width="0.0284%" height="15" fill="rgb(213,46,39)" fg:x="103599" fg:w="31"/><text x="95.2035%" y="575.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="94.9535%" y="549" width="0.0284%" height="15" fill="rgb(239,106,12)" fg:x="103599" fg:w="31"/><text x="95.2035%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (31 samples, 0.03%)</title><rect x="94.9535%" y="533" width="0.0284%" height="15" fill="rgb(249,229,21)" fg:x="103599" fg:w="31"/><text x="95.2035%" y="543.50"></text></g><g><title>core::mem::drop (29 samples, 0.03%)</title><rect x="94.9553%" y="517" width="0.0266%" height="15" fill="rgb(212,158,3)" fg:x="103601" fg:w="29"/><text x="95.2053%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (29 samples, 0.03%)</title><rect x="94.9553%" y="501" width="0.0266%" height="15" fill="rgb(253,26,48)" fg:x="103601" fg:w="29"/><text x="95.2053%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="94.9553%" y="485" width="0.0266%" height="15" fill="rgb(238,178,20)" fg:x="103601" fg:w="29"/><text x="95.2053%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (29 samples, 0.03%)</title><rect x="94.9553%" y="469" width="0.0266%" height="15" fill="rgb(208,86,15)" fg:x="103601" fg:w="29"/><text x="95.2053%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (29 samples, 0.03%)</title><rect x="94.9553%" y="453" width="0.0266%" height="15" fill="rgb(239,42,53)" fg:x="103601" fg:w="29"/><text x="95.2053%" y="463.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (51 samples, 0.05%)</title><rect x="94.9837%" y="533" width="0.0467%" height="15" fill="rgb(245,226,8)" fg:x="103632" fg:w="51"/><text x="95.2337%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (56 samples, 0.05%)</title><rect x="94.9819%" y="597" width="0.0513%" height="15" fill="rgb(216,176,32)" fg:x="103630" fg:w="56"/><text x="95.2319%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="94.9819%" y="581" width="0.0513%" height="15" fill="rgb(231,186,21)" fg:x="103630" fg:w="56"/><text x="95.2319%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (54 samples, 0.05%)</title><rect x="94.9837%" y="565" width="0.0495%" height="15" fill="rgb(205,95,49)" fg:x="103632" fg:w="54"/><text x="95.2337%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (54 samples, 0.05%)</title><rect x="94.9837%" y="549" width="0.0495%" height="15" fill="rgb(217,145,8)" fg:x="103632" fg:w="54"/><text x="95.2337%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (56 samples, 0.05%)</title><rect x="95.0332%" y="597" width="0.0513%" height="15" fill="rgb(239,144,48)" fg:x="103686" fg:w="56"/><text x="95.2832%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (56 samples, 0.05%)</title><rect x="95.0332%" y="581" width="0.0513%" height="15" fill="rgb(214,189,23)" fg:x="103686" fg:w="56"/><text x="95.2832%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (83 samples, 0.08%)</title><rect x="95.0846%" y="597" width="0.0761%" height="15" fill="rgb(229,157,17)" fg:x="103742" fg:w="83"/><text x="95.3346%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (83 samples, 0.08%)</title><rect x="95.0846%" y="581" width="0.0761%" height="15" fill="rgb(230,5,48)" fg:x="103742" fg:w="83"/><text x="95.3346%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,903 samples, 6.33%)</title><rect x="88.9318%" y="677" width="6.3269%" height="15" fill="rgb(224,156,48)" fg:x="97029" fg:w="6903"/><text x="89.1818%" y="687.50">&lt;core::f..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (6,900 samples, 6.32%)</title><rect x="88.9345%" y="661" width="6.3242%" height="15" fill="rgb(223,14,29)" fg:x="97032" fg:w="6900"/><text x="89.1845%" y="671.50">async_ex..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (6,890 samples, 6.32%)</title><rect x="88.9437%" y="645" width="6.3150%" height="15" fill="rgb(229,96,36)" fg:x="97042" fg:w="6890"/><text x="89.1937%" y="655.50">&lt;futures..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (6,859 samples, 6.29%)</title><rect x="88.9721%" y="629" width="6.2866%" height="15" fill="rgb(231,102,53)" fg:x="97073" fg:w="6859"/><text x="89.2221%" y="639.50">async_ex..</text></g><g><title>async_executor::Ticker::wake (364 samples, 0.33%)</title><rect x="94.9251%" y="613" width="0.3336%" height="15" fill="rgb(210,77,38)" fg:x="103568" fg:w="364"/><text x="95.1751%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (107 samples, 0.10%)</title><rect x="95.1606%" y="597" width="0.0981%" height="15" fill="rgb(235,131,6)" fg:x="103825" fg:w="107"/><text x="95.4106%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (100 samples, 0.09%)</title><rect x="95.1670%" y="581" width="0.0917%" height="15" fill="rgb(252,55,38)" fg:x="103832" fg:w="100"/><text x="95.4170%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (97 samples, 0.09%)</title><rect x="95.1698%" y="565" width="0.0889%" height="15" fill="rgb(246,38,14)" fg:x="103835" fg:w="97"/><text x="95.4198%" y="575.50"></text></g><g><title>___pthread_mutex_lock (97 samples, 0.09%)</title><rect x="95.1698%" y="549" width="0.0889%" height="15" fill="rgb(242,27,5)" fg:x="103835" fg:w="97"/><text x="95.4198%" y="559.50"></text></g><g><title>__GI___lll_lock_wait (24 samples, 0.02%)</title><rect x="95.2367%" y="533" width="0.0220%" height="15" fill="rgb(228,65,35)" fg:x="103908" fg:w="24"/><text x="95.4867%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,985 samples, 6.40%)</title><rect x="88.9052%" y="709" width="6.4021%" height="15" fill="rgb(245,93,11)" fg:x="97000" fg:w="6985"/><text x="89.1552%" y="719.50">&lt;core::f..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (6,984 samples, 6.40%)</title><rect x="88.9061%" y="693" width="6.4012%" height="15" fill="rgb(213,1,31)" fg:x="97001" fg:w="6984"/><text x="89.1561%" y="703.50">async_ex..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (50 samples, 0.05%)</title><rect x="95.2614%" y="677" width="0.0458%" height="15" fill="rgb(237,205,14)" fg:x="103935" fg:w="50"/><text x="95.5114%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_add (50 samples, 0.05%)</title><rect x="95.2614%" y="661" width="0.0458%" height="15" fill="rgb(232,118,45)" fg:x="103935" fg:w="50"/><text x="95.5114%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (74 samples, 0.07%)</title><rect x="95.4191%" y="581" width="0.0678%" height="15" fill="rgb(218,5,6)" fg:x="104107" fg:w="74"/><text x="95.6691%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (73 samples, 0.07%)</title><rect x="95.4200%" y="565" width="0.0669%" height="15" fill="rgb(251,87,51)" fg:x="104108" fg:w="73"/><text x="95.6700%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (43 samples, 0.04%)</title><rect x="95.4906%" y="565" width="0.0394%" height="15" fill="rgb(207,225,20)" fg:x="104185" fg:w="43"/><text x="95.7406%" y="575.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (11 samples, 0.01%)</title><rect x="95.5382%" y="549" width="0.0101%" height="15" fill="rgb(222,78,54)" fg:x="104237" fg:w="11"/><text x="95.7882%" y="559.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (196 samples, 0.18%)</title><rect x="95.3742%" y="677" width="0.1796%" height="15" fill="rgb(232,85,16)" fg:x="104058" fg:w="196"/><text x="95.6242%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (196 samples, 0.18%)</title><rect x="95.3742%" y="661" width="0.1796%" height="15" fill="rgb(244,25,33)" fg:x="104058" fg:w="196"/><text x="95.6242%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (192 samples, 0.18%)</title><rect x="95.3778%" y="645" width="0.1760%" height="15" fill="rgb(233,24,36)" fg:x="104062" fg:w="192"/><text x="95.6278%" y="655.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (149 samples, 0.14%)</title><rect x="95.4173%" y="629" width="0.1366%" height="15" fill="rgb(253,49,54)" fg:x="104105" fg:w="149"/><text x="95.6673%" y="639.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (149 samples, 0.14%)</title><rect x="95.4173%" y="613" width="0.1366%" height="15" fill="rgb(245,12,22)" fg:x="104105" fg:w="149"/><text x="95.6673%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (148 samples, 0.14%)</title><rect x="95.4182%" y="597" width="0.1356%" height="15" fill="rgb(253,141,28)" fg:x="104106" fg:w="148"/><text x="95.6682%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (73 samples, 0.07%)</title><rect x="95.4869%" y="581" width="0.0669%" height="15" fill="rgb(225,207,27)" fg:x="104181" fg:w="73"/><text x="95.7369%" y="591.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (19 samples, 0.02%)</title><rect x="95.5364%" y="565" width="0.0174%" height="15" fill="rgb(220,84,2)" fg:x="104235" fg:w="19"/><text x="95.7864%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (46 samples, 0.04%)</title><rect x="95.5538%" y="677" width="0.0422%" height="15" fill="rgb(224,37,37)" fg:x="104254" fg:w="46"/><text x="95.8038%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (43 samples, 0.04%)</title><rect x="95.5566%" y="661" width="0.0394%" height="15" fill="rgb(220,143,18)" fg:x="104257" fg:w="43"/><text x="95.8066%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (43 samples, 0.04%)</title><rect x="95.5566%" y="645" width="0.0394%" height="15" fill="rgb(210,88,33)" fg:x="104257" fg:w="43"/><text x="95.8066%" y="655.50"></text></g><g><title>parking::Unparker::unpark (31 samples, 0.03%)</title><rect x="95.6052%" y="581" width="0.0284%" height="15" fill="rgb(219,87,51)" fg:x="104310" fg:w="31"/><text x="95.8552%" y="591.50"></text></g><g><title>parking::Inner::unpark (27 samples, 0.02%)</title><rect x="95.6088%" y="565" width="0.0247%" height="15" fill="rgb(211,7,35)" fg:x="104314" fg:w="27"/><text x="95.8588%" y="575.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (37 samples, 0.03%)</title><rect x="95.6006%" y="597" width="0.0339%" height="15" fill="rgb(232,77,2)" fg:x="104305" fg:w="37"/><text x="95.8506%" y="607.50"></text></g><g><title>core::task::wake::Waker::wake (40 samples, 0.04%)</title><rect x="95.6006%" y="629" width="0.0367%" height="15" fill="rgb(249,94,25)" fg:x="104305" fg:w="40"/><text x="95.8506%" y="639.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (40 samples, 0.04%)</title><rect x="95.6006%" y="613" width="0.0367%" height="15" fill="rgb(215,112,2)" fg:x="104305" fg:w="40"/><text x="95.8506%" y="623.50"></text></g><g><title>async_executor::State::notify (46 samples, 0.04%)</title><rect x="95.5960%" y="645" width="0.0422%" height="15" fill="rgb(226,115,48)" fg:x="104300" fg:w="46"/><text x="95.8460%" y="655.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (62 samples, 0.06%)</title><rect x="95.5960%" y="661" width="0.0568%" height="15" fill="rgb(249,196,10)" fg:x="104300" fg:w="62"/><text x="95.8460%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (16 samples, 0.01%)</title><rect x="95.6381%" y="645" width="0.0147%" height="15" fill="rgb(237,109,14)" fg:x="104346" fg:w="16"/><text x="95.8881%" y="655.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (11 samples, 0.01%)</title><rect x="95.6427%" y="629" width="0.0101%" height="15" fill="rgb(217,103,53)" fg:x="104351" fg:w="11"/><text x="95.8927%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (63 samples, 0.06%)</title><rect x="95.5960%" y="677" width="0.0577%" height="15" fill="rgb(244,137,9)" fg:x="104300" fg:w="63"/><text x="95.8460%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (244 samples, 0.22%)</title><rect x="95.6537%" y="677" width="0.2236%" height="15" fill="rgb(227,201,3)" fg:x="104363" fg:w="244"/><text x="95.9037%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (244 samples, 0.22%)</title><rect x="95.6537%" y="661" width="0.2236%" height="15" fill="rgb(243,94,6)" fg:x="104363" fg:w="244"/><text x="95.9037%" y="671.50"></text></g><g><title>async_task::runnable::Runnable::run (620 samples, 0.57%)</title><rect x="95.3100%" y="709" width="0.5683%" height="15" fill="rgb(235,118,5)" fg:x="103988" fg:w="620"/><text x="95.5600%" y="719.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (600 samples, 0.55%)</title><rect x="95.3284%" y="693" width="0.5499%" height="15" fill="rgb(247,10,30)" fg:x="104008" fg:w="600"/><text x="95.5784%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (7,649 samples, 7.01%)</title><rect x="88.8905%" y="773" width="7.0107%" height="15" fill="rgb(205,26,28)" fg:x="96984" fg:w="7649"/><text x="89.1405%" y="783.50">async_exe..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (7,648 samples, 7.01%)</title><rect x="88.8914%" y="757" width="7.0098%" height="15" fill="rgb(206,99,35)" fg:x="96985" fg:w="7648"/><text x="89.1414%" y="767.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,648 samples, 7.01%)</title><rect x="88.8914%" y="741" width="7.0098%" height="15" fill="rgb(238,130,40)" fg:x="96985" fg:w="7648"/><text x="89.1414%" y="751.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (7,644 samples, 7.01%)</title><rect x="88.8951%" y="725" width="7.0061%" height="15" fill="rgb(224,126,31)" fg:x="96989" fg:w="7644"/><text x="89.1451%" y="735.50">async_exe..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (25 samples, 0.02%)</title><rect x="95.8783%" y="709" width="0.0229%" height="15" fill="rgb(254,105,17)" fg:x="104608" fg:w="25"/><text x="96.1283%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (25 samples, 0.02%)</title><rect x="95.8783%" y="693" width="0.0229%" height="15" fill="rgb(216,87,36)" fg:x="104608" fg:w="25"/><text x="96.1283%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="95.9690%" y="501" width="0.0101%" height="15" fill="rgb(240,21,12)" fg:x="104707" fg:w="11"/><text x="96.2190%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="95.9681%" y="565" width="0.0119%" height="15" fill="rgb(245,192,34)" fg:x="104706" fg:w="13"/><text x="96.2181%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (13 samples, 0.01%)</title><rect x="95.9681%" y="549" width="0.0119%" height="15" fill="rgb(226,100,49)" fg:x="104706" fg:w="13"/><text x="96.2181%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.01%)</title><rect x="95.9681%" y="533" width="0.0119%" height="15" fill="rgb(245,188,27)" fg:x="104706" fg:w="13"/><text x="96.2181%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.01%)</title><rect x="95.9681%" y="517" width="0.0119%" height="15" fill="rgb(212,170,8)" fg:x="104706" fg:w="13"/><text x="96.2181%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (41 samples, 0.04%)</title><rect x="96.0029%" y="533" width="0.0376%" height="15" fill="rgb(217,113,29)" fg:x="104744" fg:w="41"/><text x="96.2529%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (41 samples, 0.04%)</title><rect x="96.0029%" y="517" width="0.0376%" height="15" fill="rgb(237,30,3)" fg:x="104744" fg:w="41"/><text x="96.2529%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (41 samples, 0.04%)</title><rect x="96.0029%" y="501" width="0.0376%" height="15" fill="rgb(227,19,28)" fg:x="104744" fg:w="41"/><text x="96.2529%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (41 samples, 0.04%)</title><rect x="96.0029%" y="485" width="0.0376%" height="15" fill="rgb(239,172,45)" fg:x="104744" fg:w="41"/><text x="96.2529%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (130 samples, 0.12%)</title><rect x="95.9874%" y="549" width="0.1192%" height="15" fill="rgb(254,55,39)" fg:x="104727" fg:w="130"/><text x="96.2374%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (72 samples, 0.07%)</title><rect x="96.0405%" y="533" width="0.0660%" height="15" fill="rgb(249,208,12)" fg:x="104785" fg:w="72"/><text x="96.2905%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (72 samples, 0.07%)</title><rect x="96.0405%" y="517" width="0.0660%" height="15" fill="rgb(240,52,13)" fg:x="104785" fg:w="72"/><text x="96.2905%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (50 samples, 0.05%)</title><rect x="96.1184%" y="533" width="0.0458%" height="15" fill="rgb(252,149,13)" fg:x="104870" fg:w="50"/><text x="96.3684%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (50 samples, 0.05%)</title><rect x="96.1184%" y="517" width="0.0458%" height="15" fill="rgb(232,81,48)" fg:x="104870" fg:w="50"/><text x="96.3684%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (50 samples, 0.05%)</title><rect x="96.1184%" y="501" width="0.0458%" height="15" fill="rgb(222,144,2)" fg:x="104870" fg:w="50"/><text x="96.3684%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (50 samples, 0.05%)</title><rect x="96.1184%" y="485" width="0.0458%" height="15" fill="rgb(216,81,32)" fg:x="104870" fg:w="50"/><text x="96.3684%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (212 samples, 0.19%)</title><rect x="95.9800%" y="565" width="0.1943%" height="15" fill="rgb(244,78,51)" fg:x="104719" fg:w="212"/><text x="96.2300%" y="575.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (74 samples, 0.07%)</title><rect x="96.1065%" y="549" width="0.0678%" height="15" fill="rgb(217,66,21)" fg:x="104857" fg:w="74"/><text x="96.3565%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.02%)</title><rect x="96.1762%" y="501" width="0.0183%" height="15" fill="rgb(247,101,42)" fg:x="104933" fg:w="20"/><text x="96.4262%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (20 samples, 0.02%)</title><rect x="96.1762%" y="485" width="0.0183%" height="15" fill="rgb(227,81,39)" fg:x="104933" fg:w="20"/><text x="96.4262%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (63 samples, 0.06%)</title><rect x="96.1743%" y="565" width="0.0577%" height="15" fill="rgb(220,223,44)" fg:x="104931" fg:w="63"/><text x="96.4243%" y="575.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.06%)</title><rect x="96.1743%" y="549" width="0.0577%" height="15" fill="rgb(205,218,2)" fg:x="104931" fg:w="63"/><text x="96.4243%" y="559.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (62 samples, 0.06%)</title><rect x="96.1752%" y="533" width="0.0568%" height="15" fill="rgb(212,207,28)" fg:x="104932" fg:w="62"/><text x="96.4252%" y="543.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (62 samples, 0.06%)</title><rect x="96.1752%" y="517" width="0.0568%" height="15" fill="rgb(224,12,41)" fg:x="104932" fg:w="62"/><text x="96.4252%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (41 samples, 0.04%)</title><rect x="96.1945%" y="501" width="0.0376%" height="15" fill="rgb(216,118,12)" fg:x="104953" fg:w="41"/><text x="96.4445%" y="511.50"></text></g><g><title>___pthread_rwlock_unlock (41 samples, 0.04%)</title><rect x="96.1945%" y="485" width="0.0376%" height="15" fill="rgb(252,97,46)" fg:x="104953" fg:w="41"/><text x="96.4445%" y="495.50"></text></g><g><title>fastrand::usize (15 samples, 0.01%)</title><rect x="96.2339%" y="565" width="0.0137%" height="15" fill="rgb(244,206,19)" fg:x="104996" fg:w="15"/><text x="96.4839%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.01%)</title><rect x="96.2348%" y="549" width="0.0128%" height="15" fill="rgb(231,84,31)" fg:x="104997" fg:w="14"/><text x="96.4848%" y="559.50"></text></g><g><title>___pthread_rwlock_rdlock (53 samples, 0.05%)</title><rect x="96.2532%" y="517" width="0.0486%" height="15" fill="rgb(244,133,0)" fg:x="105017" fg:w="53"/><text x="96.5032%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (415 samples, 0.38%)</title><rect x="95.9599%" y="581" width="0.3804%" height="15" fill="rgb(223,15,50)" fg:x="104697" fg:w="415"/><text x="96.2099%" y="591.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (101 samples, 0.09%)</title><rect x="96.2477%" y="565" width="0.0926%" height="15" fill="rgb(250,118,49)" fg:x="105011" fg:w="101"/><text x="96.4977%" y="575.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (99 samples, 0.09%)</title><rect x="96.2495%" y="549" width="0.0907%" height="15" fill="rgb(248,25,38)" fg:x="105013" fg:w="99"/><text x="96.4995%" y="559.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (96 samples, 0.09%)</title><rect x="96.2522%" y="533" width="0.0880%" height="15" fill="rgb(215,70,14)" fg:x="105016" fg:w="96"/><text x="96.5022%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (42 samples, 0.04%)</title><rect x="96.3017%" y="517" width="0.0385%" height="15" fill="rgb(215,28,15)" fg:x="105070" fg:w="42"/><text x="96.5517%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (42 samples, 0.04%)</title><rect x="96.3017%" y="501" width="0.0385%" height="15" fill="rgb(243,6,28)" fg:x="105070" fg:w="42"/><text x="96.5517%" y="511.50"></text></g><g><title>async_executor::Sleepers::update (14 samples, 0.01%)</title><rect x="96.3512%" y="565" width="0.0128%" height="15" fill="rgb(222,130,1)" fg:x="105124" fg:w="14"/><text x="96.6012%" y="575.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (46 samples, 0.04%)</title><rect x="96.3696%" y="501" width="0.0422%" height="15" fill="rgb(236,166,44)" fg:x="105144" fg:w="46"/><text x="96.6196%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (56 samples, 0.05%)</title><rect x="96.3641%" y="565" width="0.0513%" height="15" fill="rgb(221,108,14)" fg:x="105138" fg:w="56"/><text x="96.6141%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="96.3641%" y="549" width="0.0513%" height="15" fill="rgb(252,3,45)" fg:x="105138" fg:w="56"/><text x="96.6141%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (53 samples, 0.05%)</title><rect x="96.3668%" y="533" width="0.0486%" height="15" fill="rgb(237,68,30)" fg:x="105141" fg:w="53"/><text x="96.6168%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (50 samples, 0.05%)</title><rect x="96.3696%" y="517" width="0.0458%" height="15" fill="rgb(211,79,22)" fg:x="105144" fg:w="50"/><text x="96.6196%" y="527.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (595 samples, 0.55%)</title><rect x="95.9342%" y="693" width="0.5453%" height="15" fill="rgb(252,185,21)" fg:x="104669" fg:w="595"/><text x="96.1842%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (587 samples, 0.54%)</title><rect x="95.9415%" y="677" width="0.5380%" height="15" fill="rgb(225,189,26)" fg:x="104677" fg:w="587"/><text x="96.1915%" y="687.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (583 samples, 0.53%)</title><rect x="95.9452%" y="661" width="0.5343%" height="15" fill="rgb(241,30,40)" fg:x="104681" fg:w="583"/><text x="96.1952%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (580 samples, 0.53%)</title><rect x="95.9479%" y="645" width="0.5316%" height="15" fill="rgb(235,215,44)" fg:x="104684" fg:w="580"/><text x="96.1979%" y="655.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (578 samples, 0.53%)</title><rect x="95.9498%" y="629" width="0.5298%" height="15" fill="rgb(205,8,29)" fg:x="104686" fg:w="578"/><text x="96.1998%" y="639.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (576 samples, 0.53%)</title><rect x="95.9516%" y="613" width="0.5279%" height="15" fill="rgb(241,137,42)" fg:x="104688" fg:w="576"/><text x="96.2016%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (570 samples, 0.52%)</title><rect x="95.9571%" y="597" width="0.5224%" height="15" fill="rgb(237,155,2)" fg:x="104694" fg:w="570"/><text x="96.2071%" y="607.50"></text></g><g><title>async_executor::Ticker::sleep (152 samples, 0.14%)</title><rect x="96.3402%" y="581" width="0.1393%" height="15" fill="rgb(245,29,42)" fg:x="105112" fg:w="152"/><text x="96.5902%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (70 samples, 0.06%)</title><rect x="96.4154%" y="565" width="0.0642%" height="15" fill="rgb(234,101,35)" fg:x="105194" fg:w="70"/><text x="96.6654%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (69 samples, 0.06%)</title><rect x="96.4163%" y="549" width="0.0632%" height="15" fill="rgb(228,64,37)" fg:x="105195" fg:w="69"/><text x="96.6663%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (69 samples, 0.06%)</title><rect x="96.4163%" y="533" width="0.0632%" height="15" fill="rgb(217,214,36)" fg:x="105195" fg:w="69"/><text x="96.6663%" y="543.50"></text></g><g><title>___pthread_mutex_lock (69 samples, 0.06%)</title><rect x="96.4163%" y="517" width="0.0632%" height="15" fill="rgb(243,70,3)" fg:x="105195" fg:w="69"/><text x="96.6663%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (30 samples, 0.03%)</title><rect x="96.5354%" y="629" width="0.0275%" height="15" fill="rgb(253,158,52)" fg:x="105325" fg:w="30"/><text x="96.7854%" y="639.50"></text></g><g><title>core::mem::replace (30 samples, 0.03%)</title><rect x="96.5354%" y="613" width="0.0275%" height="15" fill="rgb(234,111,54)" fg:x="105325" fg:w="30"/><text x="96.7854%" y="623.50"></text></g><g><title>core::ptr::read (29 samples, 0.03%)</title><rect x="96.5364%" y="597" width="0.0266%" height="15" fill="rgb(217,70,32)" fg:x="105326" fg:w="29"/><text x="96.7864%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (49 samples, 0.04%)</title><rect x="96.5254%" y="645" width="0.0449%" height="15" fill="rgb(234,18,33)" fg:x="105314" fg:w="49"/><text x="96.7754%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (38 samples, 0.03%)</title><rect x="96.5767%" y="565" width="0.0348%" height="15" fill="rgb(234,12,49)" fg:x="105370" fg:w="38"/><text x="96.8267%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (48 samples, 0.04%)</title><rect x="96.5703%" y="645" width="0.0440%" height="15" fill="rgb(236,10,21)" fg:x="105363" fg:w="48"/><text x="96.8203%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (45 samples, 0.04%)</title><rect x="96.5730%" y="629" width="0.0412%" height="15" fill="rgb(248,182,45)" fg:x="105366" fg:w="45"/><text x="96.8230%" y="639.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="96.5730%" y="613" width="0.0412%" height="15" fill="rgb(217,95,36)" fg:x="105366" fg:w="45"/><text x="96.8230%" y="623.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (42 samples, 0.04%)</title><rect x="96.5758%" y="597" width="0.0385%" height="15" fill="rgb(212,110,31)" fg:x="105369" fg:w="42"/><text x="96.8258%" y="607.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (41 samples, 0.04%)</title><rect x="96.5767%" y="581" width="0.0376%" height="15" fill="rgb(206,32,53)" fg:x="105370" fg:w="41"/><text x="96.8267%" y="591.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (227 samples, 0.21%)</title><rect x="96.5171%" y="661" width="0.2081%" height="15" fill="rgb(246,141,37)" fg:x="105305" fg:w="227"/><text x="96.7671%" y="671.50"></text></g><g><title>event_listener::Inner::lock (117 samples, 0.11%)</title><rect x="96.6179%" y="645" width="0.1072%" height="15" fill="rgb(219,16,7)" fg:x="105415" fg:w="117"/><text x="96.8679%" y="655.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (117 samples, 0.11%)</title><rect x="96.6179%" y="629" width="0.1072%" height="15" fill="rgb(230,205,45)" fg:x="105415" fg:w="117"/><text x="96.8679%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (113 samples, 0.10%)</title><rect x="96.6216%" y="613" width="0.1036%" height="15" fill="rgb(231,43,49)" fg:x="105419" fg:w="113"/><text x="96.8716%" y="623.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (108 samples, 0.10%)</title><rect x="96.6262%" y="597" width="0.0990%" height="15" fill="rgb(212,106,34)" fg:x="105424" fg:w="108"/><text x="96.8762%" y="607.50"></text></g><g><title>___pthread_mutex_lock (108 samples, 0.10%)</title><rect x="96.6262%" y="581" width="0.0990%" height="15" fill="rgb(206,83,17)" fg:x="105424" fg:w="108"/><text x="96.8762%" y="591.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (87 samples, 0.08%)</title><rect x="96.7252%" y="661" width="0.0797%" height="15" fill="rgb(244,154,49)" fg:x="105532" fg:w="87"/><text x="96.9752%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (86 samples, 0.08%)</title><rect x="96.7261%" y="645" width="0.0788%" height="15" fill="rgb(244,149,49)" fg:x="105533" fg:w="86"/><text x="96.9761%" y="655.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (58 samples, 0.05%)</title><rect x="96.7518%" y="629" width="0.0532%" height="15" fill="rgb(227,134,18)" fg:x="105561" fg:w="58"/><text x="97.0018%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (56 samples, 0.05%)</title><rect x="96.7536%" y="613" width="0.0513%" height="15" fill="rgb(237,116,36)" fg:x="105563" fg:w="56"/><text x="97.0036%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (56 samples, 0.05%)</title><rect x="96.7536%" y="597" width="0.0513%" height="15" fill="rgb(205,129,40)" fg:x="105563" fg:w="56"/><text x="97.0036%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (56 samples, 0.05%)</title><rect x="96.7536%" y="581" width="0.0513%" height="15" fill="rgb(236,178,4)" fg:x="105563" fg:w="56"/><text x="97.0036%" y="591.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (960 samples, 0.88%)</title><rect x="95.9296%" y="725" width="0.8799%" height="15" fill="rgb(251,76,53)" fg:x="104664" fg:w="960"/><text x="96.1796%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (957 samples, 0.88%)</title><rect x="95.9324%" y="709" width="0.8771%" height="15" fill="rgb(242,92,40)" fg:x="104667" fg:w="957"/><text x="96.1824%" y="719.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (360 samples, 0.33%)</title><rect x="96.4795%" y="693" width="0.3300%" height="15" fill="rgb(209,45,30)" fg:x="105264" fg:w="360"/><text x="96.7295%" y="703.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (340 samples, 0.31%)</title><rect x="96.4979%" y="677" width="0.3116%" height="15" fill="rgb(218,157,36)" fg:x="105284" fg:w="340"/><text x="96.7479%" y="687.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,668 samples, 7.94%)</title><rect x="88.8749%" y="805" width="7.9446%" height="15" fill="rgb(222,186,16)" fg:x="96967" fg:w="8668"/><text x="89.1249%" y="815.50">&lt;futures_li..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,656 samples, 7.93%)</title><rect x="88.8859%" y="789" width="7.9336%" height="15" fill="rgb(254,72,35)" fg:x="96979" fg:w="8656"/><text x="89.1359%" y="799.50">&lt;core::futu..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,002 samples, 0.92%)</title><rect x="95.9012%" y="773" width="0.9184%" height="15" fill="rgb(224,25,35)" fg:x="104633" fg:w="1002"/><text x="96.1512%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (980 samples, 0.90%)</title><rect x="95.9214%" y="757" width="0.8982%" height="15" fill="rgb(206,135,52)" fg:x="104655" fg:w="980"/><text x="96.1714%" y="767.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (973 samples, 0.89%)</title><rect x="95.9278%" y="741" width="0.8918%" height="15" fill="rgb(229,174,47)" fg:x="104662" fg:w="973"/><text x="96.1778%" y="751.50"></text></g><g><title>async_io::reactor::Reactor::get (17 samples, 0.02%)</title><rect x="96.8251%" y="805" width="0.0156%" height="15" fill="rgb(242,184,21)" fg:x="105641" fg:w="17"/><text x="97.0751%" y="815.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.02%)</title><rect x="96.8251%" y="789" width="0.0156%" height="15" fill="rgb(213,22,45)" fg:x="105641" fg:w="17"/><text x="97.0751%" y="799.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (17 samples, 0.02%)</title><rect x="96.8251%" y="773" width="0.0156%" height="15" fill="rgb(237,81,54)" fg:x="105641" fg:w="17"/><text x="97.0751%" y="783.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (17 samples, 0.02%)</title><rect x="96.8251%" y="757" width="0.0156%" height="15" fill="rgb(248,177,18)" fg:x="105641" fg:w="17"/><text x="97.0751%" y="767.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (17 samples, 0.02%)</title><rect x="96.8251%" y="741" width="0.0156%" height="15" fill="rgb(254,31,16)" fg:x="105641" fg:w="17"/><text x="97.0751%" y="751.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (195 samples, 0.18%)</title><rect x="96.8407%" y="805" width="0.1787%" height="15" fill="rgb(235,20,31)" fg:x="105658" fg:w="195"/><text x="97.0907%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (195 samples, 0.18%)</title><rect x="96.8407%" y="789" width="0.1787%" height="15" fill="rgb(240,56,43)" fg:x="105658" fg:w="195"/><text x="97.0907%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (192 samples, 0.18%)</title><rect x="96.8434%" y="773" width="0.1760%" height="15" fill="rgb(237,197,51)" fg:x="105661" fg:w="192"/><text x="97.0934%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (189 samples, 0.17%)</title><rect x="96.8462%" y="757" width="0.1732%" height="15" fill="rgb(241,162,44)" fg:x="105664" fg:w="189"/><text x="97.0962%" y="767.50"></text></g><g><title>__GI___pthread_mutex_trylock (189 samples, 0.17%)</title><rect x="96.8462%" y="741" width="0.1732%" height="15" fill="rgb(224,23,20)" fg:x="105664" fg:w="189"/><text x="97.0962%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (21 samples, 0.02%)</title><rect x="97.0505%" y="613" width="0.0192%" height="15" fill="rgb(250,109,34)" fg:x="105887" fg:w="21"/><text x="97.3005%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (21 samples, 0.02%)</title><rect x="97.0505%" y="597" width="0.0192%" height="15" fill="rgb(214,175,50)" fg:x="105887" fg:w="21"/><text x="97.3005%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (21 samples, 0.02%)</title><rect x="97.0505%" y="581" width="0.0192%" height="15" fill="rgb(213,182,5)" fg:x="105887" fg:w="21"/><text x="97.3005%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (21 samples, 0.02%)</title><rect x="97.0505%" y="565" width="0.0192%" height="15" fill="rgb(209,199,19)" fg:x="105887" fg:w="21"/><text x="97.3005%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (21 samples, 0.02%)</title><rect x="97.0505%" y="549" width="0.0192%" height="15" fill="rgb(236,224,42)" fg:x="105887" fg:w="21"/><text x="97.3005%" y="559.50"></text></g><g><title>rust_dealloc (25 samples, 0.02%)</title><rect x="97.0478%" y="629" width="0.0229%" height="15" fill="rgb(246,226,29)" fg:x="105884" fg:w="25"/><text x="97.2978%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (28 samples, 0.03%)</title><rect x="97.0478%" y="725" width="0.0257%" height="15" fill="rgb(227,223,11)" fg:x="105884" fg:w="28"/><text x="97.2978%" y="735.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (28 samples, 0.03%)</title><rect x="97.0478%" y="709" width="0.0257%" height="15" fill="rgb(219,7,51)" fg:x="105884" fg:w="28"/><text x="97.2978%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.03%)</title><rect x="97.0478%" y="693" width="0.0257%" height="15" fill="rgb(245,167,10)" fg:x="105884" fg:w="28"/><text x="97.2978%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.03%)</title><rect x="97.0478%" y="677" width="0.0257%" height="15" fill="rgb(237,224,16)" fg:x="105884" fg:w="28"/><text x="97.2978%" y="687.50"></text></g><g><title>__rg_dealloc (28 samples, 0.03%)</title><rect x="97.0478%" y="661" width="0.0257%" height="15" fill="rgb(226,132,13)" fg:x="105884" fg:w="28"/><text x="97.2978%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (28 samples, 0.03%)</title><rect x="97.0478%" y="645" width="0.0257%" height="15" fill="rgb(214,140,3)" fg:x="105884" fg:w="28"/><text x="97.2978%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (32 samples, 0.03%)</title><rect x="97.0460%" y="757" width="0.0293%" height="15" fill="rgb(221,177,4)" fg:x="105882" fg:w="32"/><text x="97.2960%" y="767.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (30 samples, 0.03%)</title><rect x="97.0478%" y="741" width="0.0275%" height="15" fill="rgb(238,139,3)" fg:x="105884" fg:w="30"/><text x="97.2978%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="97.0460%" y="773" width="0.0302%" height="15" fill="rgb(216,17,39)" fg:x="105882" fg:w="33"/><text x="97.2960%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="97.0762%" y="773" width="0.0147%" height="15" fill="rgb(238,120,9)" fg:x="105915" fg:w="16"/><text x="97.3262%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="97.0762%" y="757" width="0.0147%" height="15" fill="rgb(244,92,53)" fg:x="105915" fg:w="16"/><text x="97.3262%" y="767.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (16 samples, 0.01%)</title><rect x="97.0762%" y="741" width="0.0147%" height="15" fill="rgb(224,148,33)" fg:x="105915" fg:w="16"/><text x="97.3262%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (11 samples, 0.01%)</title><rect x="97.1101%" y="741" width="0.0101%" height="15" fill="rgb(243,6,36)" fg:x="105952" fg:w="11"/><text x="97.3601%" y="751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (16 samples, 0.01%)</title><rect x="97.1202%" y="709" width="0.0147%" height="15" fill="rgb(230,102,11)" fg:x="105963" fg:w="16"/><text x="97.3702%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (21 samples, 0.02%)</title><rect x="97.1202%" y="725" width="0.0192%" height="15" fill="rgb(234,148,36)" fg:x="105963" fg:w="21"/><text x="97.3702%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (22 samples, 0.02%)</title><rect x="97.1202%" y="741" width="0.0202%" height="15" fill="rgb(251,153,25)" fg:x="105963" fg:w="22"/><text x="97.3702%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="97.1569%" y="373" width="0.0192%" height="15" fill="rgb(215,129,8)" fg:x="106003" fg:w="21"/><text x="97.4069%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="97.1578%" y="357" width="0.0183%" height="15" fill="rgb(224,128,35)" fg:x="106004" fg:w="20"/><text x="97.4078%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="97.1514%" y="421" width="0.0284%" height="15" fill="rgb(237,56,52)" fg:x="105997" fg:w="31"/><text x="97.4014%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="97.1514%" y="405" width="0.0284%" height="15" fill="rgb(234,213,19)" fg:x="105997" fg:w="31"/><text x="97.4014%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (28 samples, 0.03%)</title><rect x="97.1541%" y="389" width="0.0257%" height="15" fill="rgb(252,82,23)" fg:x="106000" fg:w="28"/><text x="97.4041%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (39 samples, 0.04%)</title><rect x="97.1505%" y="437" width="0.0357%" height="15" fill="rgb(254,201,21)" fg:x="105996" fg:w="39"/><text x="97.4005%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (53 samples, 0.05%)</title><rect x="97.1450%" y="453" width="0.0486%" height="15" fill="rgb(250,186,11)" fg:x="105990" fg:w="53"/><text x="97.3950%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (38 samples, 0.03%)</title><rect x="97.2128%" y="437" width="0.0348%" height="15" fill="rgb(211,174,5)" fg:x="106064" fg:w="38"/><text x="97.4628%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (353 samples, 0.32%)</title><rect x="97.1440%" y="485" width="0.3235%" height="15" fill="rgb(214,121,10)" fg:x="105989" fg:w="353"/><text x="97.3940%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (353 samples, 0.32%)</title><rect x="97.1440%" y="469" width="0.3235%" height="15" fill="rgb(241,66,2)" fg:x="105989" fg:w="353"/><text x="97.3940%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (299 samples, 0.27%)</title><rect x="97.1935%" y="453" width="0.2740%" height="15" fill="rgb(220,167,19)" fg:x="106043" fg:w="299"/><text x="97.4435%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (240 samples, 0.22%)</title><rect x="97.2476%" y="437" width="0.2200%" height="15" fill="rgb(231,54,50)" fg:x="106102" fg:w="240"/><text x="97.4976%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (240 samples, 0.22%)</title><rect x="97.2476%" y="421" width="0.2200%" height="15" fill="rgb(239,217,53)" fg:x="106102" fg:w="240"/><text x="97.4976%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (240 samples, 0.22%)</title><rect x="97.2476%" y="405" width="0.2200%" height="15" fill="rgb(248,8,0)" fg:x="106102" fg:w="240"/><text x="97.4976%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (16 samples, 0.01%)</title><rect x="97.4731%" y="485" width="0.0147%" height="15" fill="rgb(229,118,37)" fg:x="106348" fg:w="16"/><text x="97.7231%" y="495.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (16 samples, 0.01%)</title><rect x="97.4731%" y="469" width="0.0147%" height="15" fill="rgb(253,223,43)" fg:x="106348" fg:w="16"/><text x="97.7231%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (424 samples, 0.39%)</title><rect x="97.1404%" y="533" width="0.3886%" height="15" fill="rgb(211,77,36)" fg:x="105985" fg:w="424"/><text x="97.3904%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (424 samples, 0.39%)</title><rect x="97.1404%" y="517" width="0.3886%" height="15" fill="rgb(219,3,53)" fg:x="105985" fg:w="424"/><text x="97.3904%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (424 samples, 0.39%)</title><rect x="97.1404%" y="501" width="0.3886%" height="15" fill="rgb(244,45,42)" fg:x="105985" fg:w="424"/><text x="97.3904%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (45 samples, 0.04%)</title><rect x="97.4877%" y="485" width="0.0412%" height="15" fill="rgb(225,95,27)" fg:x="106364" fg:w="45"/><text x="97.7377%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (45 samples, 0.04%)</title><rect x="97.4877%" y="469" width="0.0412%" height="15" fill="rgb(207,74,8)" fg:x="106364" fg:w="45"/><text x="97.7377%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (429 samples, 0.39%)</title><rect x="97.1404%" y="677" width="0.3932%" height="15" fill="rgb(243,63,36)" fg:x="105985" fg:w="429"/><text x="97.3904%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (429 samples, 0.39%)</title><rect x="97.1404%" y="661" width="0.3932%" height="15" fill="rgb(211,180,12)" fg:x="105985" fg:w="429"/><text x="97.3904%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (429 samples, 0.39%)</title><rect x="97.1404%" y="645" width="0.3932%" height="15" fill="rgb(254,166,49)" fg:x="105985" fg:w="429"/><text x="97.3904%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (429 samples, 0.39%)</title><rect x="97.1404%" y="629" width="0.3932%" height="15" fill="rgb(205,19,0)" fg:x="105985" fg:w="429"/><text x="97.3904%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (429 samples, 0.39%)</title><rect x="97.1404%" y="613" width="0.3932%" height="15" fill="rgb(224,172,32)" fg:x="105985" fg:w="429"/><text x="97.3904%" y="623.50"></text></g><g><title>alloc::alloc::alloc (429 samples, 0.39%)</title><rect x="97.1404%" y="597" width="0.3932%" height="15" fill="rgb(254,136,30)" fg:x="105985" fg:w="429"/><text x="97.3904%" y="607.50"></text></g><g><title>__rg_alloc (429 samples, 0.39%)</title><rect x="97.1404%" y="581" width="0.3932%" height="15" fill="rgb(246,19,35)" fg:x="105985" fg:w="429"/><text x="97.3904%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (429 samples, 0.39%)</title><rect x="97.1404%" y="565" width="0.3932%" height="15" fill="rgb(219,24,36)" fg:x="105985" fg:w="429"/><text x="97.3904%" y="575.50"></text></g><g><title>rust_alloc (429 samples, 0.39%)</title><rect x="97.1404%" y="549" width="0.3932%" height="15" fill="rgb(251,55,1)" fg:x="105985" fg:w="429"/><text x="97.3904%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (430 samples, 0.39%)</title><rect x="97.1404%" y="725" width="0.3941%" height="15" fill="rgb(218,117,39)" fg:x="105985" fg:w="430"/><text x="97.3904%" y="735.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (430 samples, 0.39%)</title><rect x="97.1404%" y="709" width="0.3941%" height="15" fill="rgb(248,169,11)" fg:x="105985" fg:w="430"/><text x="97.3904%" y="719.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (430 samples, 0.39%)</title><rect x="97.1404%" y="693" width="0.3941%" height="15" fill="rgb(244,40,44)" fg:x="105985" fg:w="430"/><text x="97.3904%" y="703.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (432 samples, 0.40%)</title><rect x="97.1404%" y="741" width="0.3959%" height="15" fill="rgb(234,62,37)" fg:x="105985" fg:w="432"/><text x="97.3904%" y="751.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (475 samples, 0.44%)</title><rect x="97.1037%" y="757" width="0.4354%" height="15" fill="rgb(207,117,42)" fg:x="105945" fg:w="475"/><text x="97.3537%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (491 samples, 0.45%)</title><rect x="97.0909%" y="773" width="0.4500%" height="15" fill="rgb(213,43,2)" fg:x="105931" fg:w="491"/><text x="97.3409%" y="783.50"></text></g><g><title>concurrent_queue::full_fence (16 samples, 0.01%)</title><rect x="97.5565%" y="725" width="0.0147%" height="15" fill="rgb(244,202,51)" fg:x="106439" fg:w="16"/><text x="97.8065%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (16 samples, 0.01%)</title><rect x="97.5565%" y="709" width="0.0147%" height="15" fill="rgb(253,174,46)" fg:x="106439" fg:w="16"/><text x="97.8065%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.01%)</title><rect x="97.5565%" y="693" width="0.0147%" height="15" fill="rgb(251,23,1)" fg:x="106439" fg:w="16"/><text x="97.8065%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.01%)</title><rect x="97.5565%" y="677" width="0.0147%" height="15" fill="rgb(253,26,1)" fg:x="106439" fg:w="16"/><text x="97.8065%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (41 samples, 0.04%)</title><rect x="97.5409%" y="773" width="0.0376%" height="15" fill="rgb(216,89,31)" fg:x="106422" fg:w="41"/><text x="97.7909%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (32 samples, 0.03%)</title><rect x="97.5491%" y="757" width="0.0293%" height="15" fill="rgb(209,109,5)" fg:x="106431" fg:w="32"/><text x="97.7991%" y="767.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (30 samples, 0.03%)</title><rect x="97.5510%" y="741" width="0.0275%" height="15" fill="rgb(229,63,13)" fg:x="106433" fg:w="30"/><text x="97.8010%" y="751.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (68 samples, 0.06%)</title><rect x="97.5785%" y="693" width="0.0623%" height="15" fill="rgb(238,137,54)" fg:x="106463" fg:w="68"/><text x="97.8285%" y="703.50"></text></g><g><title>core::mem::drop (70 samples, 0.06%)</title><rect x="97.5785%" y="773" width="0.0642%" height="15" fill="rgb(228,1,9)" fg:x="106463" fg:w="70"/><text x="97.8285%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (70 samples, 0.06%)</title><rect x="97.5785%" y="757" width="0.0642%" height="15" fill="rgb(249,120,48)" fg:x="106463" fg:w="70"/><text x="97.8285%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.06%)</title><rect x="97.5785%" y="741" width="0.0642%" height="15" fill="rgb(209,72,36)" fg:x="106463" fg:w="70"/><text x="97.8285%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (70 samples, 0.06%)</title><rect x="97.5785%" y="725" width="0.0642%" height="15" fill="rgb(247,98,49)" fg:x="106463" fg:w="70"/><text x="97.8285%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (70 samples, 0.06%)</title><rect x="97.5785%" y="709" width="0.0642%" height="15" fill="rgb(233,75,36)" fg:x="106463" fg:w="70"/><text x="97.8285%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.01%)</title><rect x="97.6491%" y="773" width="0.0137%" height="15" fill="rgb(225,14,24)" fg:x="106540" fg:w="15"/><text x="97.8991%" y="783.50"></text></g><g><title>async_io::reactor::Reactor::process_timers::{{closure}} (14 samples, 0.01%)</title><rect x="97.6500%" y="757" width="0.0128%" height="15" fill="rgb(237,193,20)" fg:x="106541" fg:w="14"/><text x="97.9000%" y="767.50"></text></g><g><title>std::time::Instant::saturating_duration_since (14 samples, 0.01%)</title><rect x="97.6500%" y="741" width="0.0128%" height="15" fill="rgb(239,122,19)" fg:x="106541" fg:w="14"/><text x="97.9000%" y="751.50"></text></g><g><title>std::time::Instant::checked_duration_since (14 samples, 0.01%)</title><rect x="97.6500%" y="725" width="0.0128%" height="15" fill="rgb(231,220,10)" fg:x="106541" fg:w="14"/><text x="97.9000%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (14 samples, 0.01%)</title><rect x="97.6500%" y="709" width="0.0128%" height="15" fill="rgb(220,66,15)" fg:x="106541" fg:w="14"/><text x="97.9000%" y="719.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (13 samples, 0.01%)</title><rect x="97.6509%" y="693" width="0.0119%" height="15" fill="rgb(215,171,52)" fg:x="106542" fg:w="13"/><text x="97.9009%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.03%)</title><rect x="97.6656%" y="773" width="0.0293%" height="15" fill="rgb(241,169,50)" fg:x="106558" fg:w="32"/><text x="97.9156%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (31 samples, 0.03%)</title><rect x="97.6665%" y="757" width="0.0284%" height="15" fill="rgb(236,189,0)" fg:x="106559" fg:w="31"/><text x="97.9165%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (30 samples, 0.03%)</title><rect x="97.6674%" y="741" width="0.0275%" height="15" fill="rgb(217,147,20)" fg:x="106560" fg:w="30"/><text x="97.9174%" y="751.50"></text></g><g><title>___pthread_mutex_lock (30 samples, 0.03%)</title><rect x="97.6674%" y="725" width="0.0275%" height="15" fill="rgb(206,188,39)" fg:x="106560" fg:w="30"/><text x="97.9174%" y="735.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (783 samples, 0.72%)</title><rect x="97.0368%" y="789" width="0.7177%" height="15" fill="rgb(227,118,25)" fg:x="105872" fg:w="783"/><text x="97.2868%" y="799.50"></text></g><g><title>std::time::Instant::now (65 samples, 0.06%)</title><rect x="97.6949%" y="773" width="0.0596%" height="15" fill="rgb(248,171,40)" fg:x="106590" fg:w="65"/><text x="97.9449%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (65 samples, 0.06%)</title><rect x="97.6949%" y="757" width="0.0596%" height="15" fill="rgb(251,90,54)" fg:x="106590" fg:w="65"/><text x="97.9449%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::now (65 samples, 0.06%)</title><rect x="97.6949%" y="741" width="0.0596%" height="15" fill="rgb(234,11,46)" fg:x="106590" fg:w="65"/><text x="97.9449%" y="751.50"></text></g><g><title>__clock_gettime_2 (64 samples, 0.06%)</title><rect x="97.6958%" y="725" width="0.0587%" height="15" fill="rgb(229,134,13)" fg:x="106591" fg:w="64"/><text x="97.9458%" y="735.50"></text></g><g><title>__vdso_clock_gettime (56 samples, 0.05%)</title><rect x="97.7031%" y="709" width="0.0513%" height="15" fill="rgb(223,129,3)" fg:x="106599" fg:w="56"/><text x="97.9531%" y="719.50"></text></g><g><title>[[vdso]] (35 samples, 0.03%)</title><rect x="97.7224%" y="693" width="0.0321%" height="15" fill="rgb(221,124,13)" fg:x="106620" fg:w="35"/><text x="97.9724%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.02%)</title><rect x="97.7572%" y="789" width="0.0229%" height="15" fill="rgb(234,3,18)" fg:x="106658" fg:w="25"/><text x="98.0072%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.02%)</title><rect x="97.7572%" y="773" width="0.0229%" height="15" fill="rgb(249,199,20)" fg:x="106658" fg:w="25"/><text x="98.0072%" y="783.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (45 samples, 0.04%)</title><rect x="97.7902%" y="709" width="0.0412%" height="15" fill="rgb(224,134,6)" fg:x="106694" fg:w="45"/><text x="98.0402%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (51 samples, 0.05%)</title><rect x="97.7865%" y="773" width="0.0467%" height="15" fill="rgb(254,83,26)" fg:x="106690" fg:w="51"/><text x="98.0365%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="97.7865%" y="757" width="0.0467%" height="15" fill="rgb(217,88,9)" fg:x="106690" fg:w="51"/><text x="98.0365%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (47 samples, 0.04%)</title><rect x="97.7902%" y="741" width="0.0431%" height="15" fill="rgb(225,73,2)" fg:x="106694" fg:w="47"/><text x="98.0402%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (47 samples, 0.04%)</title><rect x="97.7902%" y="725" width="0.0431%" height="15" fill="rgb(226,44,39)" fg:x="106694" fg:w="47"/><text x="98.0402%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (46 samples, 0.04%)</title><rect x="97.8333%" y="773" width="0.0422%" height="15" fill="rgb(228,53,17)" fg:x="106741" fg:w="46"/><text x="98.0833%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_swap (46 samples, 0.04%)</title><rect x="97.8333%" y="757" width="0.0422%" height="15" fill="rgb(212,27,27)" fg:x="106741" fg:w="46"/><text x="98.0833%" y="767.50"></text></g><g><title>__libc_read (31 samples, 0.03%)</title><rect x="97.9158%" y="757" width="0.0284%" height="15" fill="rgb(241,50,6)" fg:x="106831" fg:w="31"/><text x="98.1658%" y="767.50"></text></g><g><title>epoll_wait (54 samples, 0.05%)</title><rect x="97.9442%" y="757" width="0.0495%" height="15" fill="rgb(225,28,51)" fg:x="106862" fg:w="54"/><text x="98.1942%" y="767.50"></text></g><g><title>__GI_epoll_ctl (44 samples, 0.04%)</title><rect x="98.0010%" y="725" width="0.0403%" height="15" fill="rgb(215,33,16)" fg:x="106924" fg:w="44"/><text x="98.2510%" y="735.50"></text></g><g><title>polling::epoll::Poller::ctl (54 samples, 0.05%)</title><rect x="98.0001%" y="741" width="0.0495%" height="15" fill="rgb(243,40,39)" fg:x="106923" fg:w="54"/><text x="98.2501%" y="751.50"></text></g><g><title>polling::epoll::Poller::modify (59 samples, 0.05%)</title><rect x="97.9964%" y="757" width="0.0541%" height="15" fill="rgb(225,11,42)" fg:x="106919" fg:w="59"/><text x="98.2464%" y="767.50"></text></g><g><title>polling::epoll::Poller::wait (212 samples, 0.19%)</title><rect x="97.8754%" y="773" width="0.1943%" height="15" fill="rgb(241,220,38)" fg:x="106787" fg:w="212"/><text x="98.1254%" y="783.50"></text></g><g><title>syscall (15 samples, 0.01%)</title><rect x="98.0560%" y="757" width="0.0137%" height="15" fill="rgb(244,52,35)" fg:x="106984" fg:w="15"/><text x="98.3060%" y="767.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,179 samples, 1.08%)</title><rect x="97.0194%" y="805" width="1.0806%" height="15" fill="rgb(246,42,46)" fg:x="105853" fg:w="1179"/><text x="97.2694%" y="815.50"></text></g><g><title>polling::Poller::wait (349 samples, 0.32%)</title><rect x="97.7801%" y="789" width="0.3199%" height="15" fill="rgb(205,184,13)" fg:x="106683" fg:w="349"/><text x="98.0301%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (33 samples, 0.03%)</title><rect x="98.0697%" y="773" width="0.0302%" height="15" fill="rgb(209,48,36)" fg:x="106999" fg:w="33"/><text x="98.3197%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (32 samples, 0.03%)</title><rect x="98.0707%" y="757" width="0.0293%" height="15" fill="rgb(244,34,51)" fg:x="107000" fg:w="32"/><text x="98.3207%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (29 samples, 0.03%)</title><rect x="98.0734%" y="741" width="0.0266%" height="15" fill="rgb(221,107,33)" fg:x="107003" fg:w="29"/><text x="98.3234%" y="751.50"></text></g><g><title>__GI___pthread_mutex_trylock (29 samples, 0.03%)</title><rect x="98.0734%" y="725" width="0.0266%" height="15" fill="rgb(224,203,12)" fg:x="107003" fg:w="29"/><text x="98.3234%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (24 samples, 0.02%)</title><rect x="98.1000%" y="805" width="0.0220%" height="15" fill="rgb(230,215,18)" fg:x="107032" fg:w="24"/><text x="98.3500%" y="815.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="98.1000%" y="789" width="0.0220%" height="15" fill="rgb(206,185,35)" fg:x="107032" fg:w="24"/><text x="98.3500%" y="799.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (24 samples, 0.02%)</title><rect x="98.1000%" y="773" width="0.0220%" height="15" fill="rgb(228,140,34)" fg:x="107032" fg:w="24"/><text x="98.3500%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (24 samples, 0.02%)</title><rect x="98.1000%" y="757" width="0.0220%" height="15" fill="rgb(208,93,13)" fg:x="107032" fg:w="24"/><text x="98.3500%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_store (24 samples, 0.02%)</title><rect x="98.1000%" y="741" width="0.0220%" height="15" fill="rgb(221,193,39)" fg:x="107032" fg:w="24"/><text x="98.3500%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::reactor::ReactorLock&gt; (22 samples, 0.02%)</title><rect x="98.1220%" y="805" width="0.0202%" height="15" fill="rgb(241,132,34)" fg:x="107056" fg:w="22"/><text x="98.3720%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;polling::Event&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="98.1220%" y="789" width="0.0202%" height="15" fill="rgb(221,141,10)" fg:x="107056" fg:w="22"/><text x="98.3720%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="98.1220%" y="773" width="0.0202%" height="15" fill="rgb(226,90,31)" fg:x="107056" fg:w="22"/><text x="98.3720%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (20 samples, 0.02%)</title><rect x="98.1238%" y="757" width="0.0183%" height="15" fill="rgb(243,75,5)" fg:x="107058" fg:w="20"/><text x="98.3738%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (20 samples, 0.02%)</title><rect x="98.1238%" y="741" width="0.0183%" height="15" fill="rgb(227,156,21)" fg:x="107058" fg:w="20"/><text x="98.3738%" y="751.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (19 samples, 0.02%)</title><rect x="98.1247%" y="725" width="0.0174%" height="15" fill="rgb(250,195,8)" fg:x="107059" fg:w="19"/><text x="98.3747%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (17 samples, 0.02%)</title><rect x="98.1431%" y="805" width="0.0156%" height="15" fill="rgb(220,134,5)" fg:x="107079" fg:w="17"/><text x="98.3931%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_store (17 samples, 0.02%)</title><rect x="98.1431%" y="789" width="0.0156%" height="15" fill="rgb(246,106,34)" fg:x="107079" fg:w="17"/><text x="98.3931%" y="799.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (73 samples, 0.07%)</title><rect x="98.1742%" y="773" width="0.0669%" height="15" fill="rgb(205,1,4)" fg:x="107113" fg:w="73"/><text x="98.4242%" y="783.50"></text></g><g><title>__GI___lll_lock_wake (46 samples, 0.04%)</title><rect x="98.1990%" y="757" width="0.0422%" height="15" fill="rgb(224,151,29)" fg:x="107140" fg:w="46"/><text x="98.4490%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (131 samples, 0.12%)</title><rect x="98.2457%" y="773" width="0.1201%" height="15" fill="rgb(251,196,0)" fg:x="107191" fg:w="131"/><text x="98.4957%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (131 samples, 0.12%)</title><rect x="98.2457%" y="757" width="0.1201%" height="15" fill="rgb(212,127,0)" fg:x="107191" fg:w="131"/><text x="98.4957%" y="767.50"></text></g><g><title>std::sync::poison::Flag::get (14 samples, 0.01%)</title><rect x="98.3658%" y="757" width="0.0128%" height="15" fill="rgb(236,71,53)" fg:x="107322" fg:w="14"/><text x="98.6158%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (14 samples, 0.01%)</title><rect x="98.3658%" y="741" width="0.0128%" height="15" fill="rgb(227,99,0)" fg:x="107322" fg:w="14"/><text x="98.6158%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="98.3658%" y="725" width="0.0128%" height="15" fill="rgb(239,89,21)" fg:x="107322" fg:w="14"/><text x="98.6158%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (27 samples, 0.02%)</title><rect x="98.5262%" y="709" width="0.0247%" height="15" fill="rgb(243,122,19)" fg:x="107497" fg:w="27"/><text x="98.7762%" y="719.50"></text></g><g><title>__condvar_confirm_wakeup (34 samples, 0.03%)</title><rect x="98.5509%" y="709" width="0.0312%" height="15" fill="rgb(229,192,45)" fg:x="107524" fg:w="34"/><text x="98.8009%" y="719.50"></text></g><g><title>__condvar_dec_grefs (146 samples, 0.13%)</title><rect x="98.5821%" y="709" width="0.1338%" height="15" fill="rgb(235,165,35)" fg:x="107558" fg:w="146"/><text x="98.8321%" y="719.50"></text></g><g><title>__GI___pthread_disable_asynccancel (15 samples, 0.01%)</title><rect x="98.8717%" y="693" width="0.0137%" height="15" fill="rgb(253,202,0)" fg:x="107874" fg:w="15"/><text x="99.1217%" y="703.50"></text></g><g><title>__futex_abstimed_wait_common (192 samples, 0.18%)</title><rect x="98.7159%" y="709" width="0.1760%" height="15" fill="rgb(235,51,20)" fg:x="107704" fg:w="192"/><text x="98.9659%" y="719.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (603 samples, 0.55%)</title><rect x="98.3786%" y="741" width="0.5527%" height="15" fill="rgb(218,95,46)" fg:x="107336" fg:w="603"/><text x="98.6286%" y="751.50"></text></g><g><title>__GI___pthread_cond_wait (603 samples, 0.55%)</title><rect x="98.3786%" y="725" width="0.5527%" height="15" fill="rgb(212,81,10)" fg:x="107336" fg:w="603"/><text x="98.6286%" y="735.50"></text></g><g><title>__pthread_mutex_cond_lock (33 samples, 0.03%)</title><rect x="98.9011%" y="709" width="0.0302%" height="15" fill="rgb(240,59,0)" fg:x="107906" fg:w="33"/><text x="99.1511%" y="719.50"></text></g><g><title>std::sync::condvar::Condvar::wait (640 samples, 0.59%)</title><rect x="98.3658%" y="773" width="0.5866%" height="15" fill="rgb(212,191,42)" fg:x="107322" fg:w="640"/><text x="98.6158%" y="783.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (626 samples, 0.57%)</title><rect x="98.3786%" y="757" width="0.5738%" height="15" fill="rgb(233,140,3)" fg:x="107336" fg:w="626"/><text x="98.6286%" y="767.50"></text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (23 samples, 0.02%)</title><rect x="98.9313%" y="741" width="0.0211%" height="15" fill="rgb(215,69,23)" fg:x="107939" fg:w="23"/><text x="99.1813%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (23 samples, 0.02%)</title><rect x="98.9313%" y="725" width="0.0211%" height="15" fill="rgb(240,202,20)" fg:x="107939" fg:w="23"/><text x="99.1813%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (23 samples, 0.02%)</title><rect x="98.9313%" y="709" width="0.0211%" height="15" fill="rgb(209,146,50)" fg:x="107939" fg:w="23"/><text x="99.1813%" y="719.50"></text></g><g><title>parking::Parker::park (900 samples, 0.82%)</title><rect x="98.1642%" y="805" width="0.8249%" height="15" fill="rgb(253,102,54)" fg:x="107102" fg:w="900"/><text x="98.4142%" y="815.50"></text></g><g><title>parking::Inner::park (899 samples, 0.82%)</title><rect x="98.1651%" y="789" width="0.8240%" height="15" fill="rgb(250,173,47)" fg:x="107103" fg:w="899"/><text x="98.4151%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (40 samples, 0.04%)</title><rect x="98.9524%" y="773" width="0.0367%" height="15" fill="rgb(232,142,7)" fg:x="107962" fg:w="40"/><text x="99.2024%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (35 samples, 0.03%)</title><rect x="98.9570%" y="757" width="0.0321%" height="15" fill="rgb(230,157,47)" fg:x="107967" fg:w="35"/><text x="99.2070%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (34 samples, 0.03%)</title><rect x="98.9579%" y="741" width="0.0312%" height="15" fill="rgb(214,177,35)" fg:x="107968" fg:w="34"/><text x="99.2079%" y="751.50"></text></g><g><title>___pthread_mutex_lock (34 samples, 0.03%)</title><rect x="98.9579%" y="725" width="0.0312%" height="15" fill="rgb(234,119,46)" fg:x="107968" fg:w="34"/><text x="99.2079%" y="735.50"></text></g><g><title>parking::Parker::park_timeout (183 samples, 0.17%)</title><rect x="98.9890%" y="805" width="0.1677%" height="15" fill="rgb(241,180,50)" fg:x="108002" fg:w="183"/><text x="99.2390%" y="815.50"></text></g><g><title>parking::Inner::park (177 samples, 0.16%)</title><rect x="98.9945%" y="789" width="0.1622%" height="15" fill="rgb(221,54,25)" fg:x="108008" fg:w="177"/><text x="99.2445%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (166 samples, 0.15%)</title><rect x="99.0046%" y="773" width="0.1521%" height="15" fill="rgb(209,157,44)" fg:x="108019" fg:w="166"/><text x="99.2546%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (166 samples, 0.15%)</title><rect x="99.0046%" y="757" width="0.1521%" height="15" fill="rgb(246,115,41)" fg:x="108019" fg:w="166"/><text x="99.2546%" y="767.50"></text></g><g><title>std::panic::catch_unwind (11,297 samples, 10.35%)</title><rect x="88.8456%" y="1093" width="10.3542%" height="15" fill="rgb(229,86,1)" fg:x="96935" fg:w="11297"/><text x="89.0956%" y="1103.50">std::panic::cat..</text></g><g><title>std::panicking::try (11,297 samples, 10.35%)</title><rect x="88.8456%" y="1077" width="10.3542%" height="15" fill="rgb(240,108,53)" fg:x="96935" fg:w="11297"/><text x="89.0956%" y="1087.50">std::panicking:..</text></g><g><title>std::panicking::try::do_call (11,297 samples, 10.35%)</title><rect x="88.8456%" y="1061" width="10.3542%" height="15" fill="rgb(227,134,2)" fg:x="96935" fg:w="11297"/><text x="89.0956%" y="1071.50">std::panicking:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11,297 samples, 10.35%)</title><rect x="88.8456%" y="1045" width="10.3542%" height="15" fill="rgb(213,129,25)" fg:x="96935" fg:w="11297"/><text x="89.0956%" y="1055.50">&lt;core::panic::u..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (11,297 samples, 10.35%)</title><rect x="88.8456%" y="1029" width="10.3542%" height="15" fill="rgb(226,35,21)" fg:x="96935" fg:w="11297"/><text x="89.0956%" y="1039.50">std::thread::Bu..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11,297 samples, 10.35%)</title><rect x="88.8456%" y="1013" width="10.3542%" height="15" fill="rgb(208,129,26)" fg:x="96935" fg:w="11297"/><text x="89.0956%" y="1023.50">std::sys_common..</text></g><g><title>core::ops::function::FnOnce::call_once (11,297 samples, 10.35%)</title><rect x="88.8456%" y="997" width="10.3542%" height="15" fill="rgb(224,83,6)" fg:x="96935" fg:w="11297"/><text x="89.0956%" y="1007.50">core::ops::func..</text></g><g><title>async_global_executor::threading::thread_main_loop (11,297 samples, 10.35%)</title><rect x="88.8456%" y="981" width="10.3542%" height="15" fill="rgb(227,52,39)" fg:x="96935" fg:w="11297"/><text x="89.0956%" y="991.50">async_global_ex..</text></g><g><title>std::panic::catch_unwind (11,286 samples, 10.34%)</title><rect x="88.8557%" y="965" width="10.3442%" height="15" fill="rgb(241,30,17)" fg:x="96946" fg:w="11286"/><text x="89.1057%" y="975.50">std::panic::cat..</text></g><g><title>std::panicking::try (11,286 samples, 10.34%)</title><rect x="88.8557%" y="949" width="10.3442%" height="15" fill="rgb(246,186,42)" fg:x="96946" fg:w="11286"/><text x="89.1057%" y="959.50">std::panicking:..</text></g><g><title>std::panicking::try::do_call (11,286 samples, 10.34%)</title><rect x="88.8557%" y="933" width="10.3442%" height="15" fill="rgb(221,169,15)" fg:x="96946" fg:w="11286"/><text x="89.1057%" y="943.50">std::panicking:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (11,286 samples, 10.34%)</title><rect x="88.8557%" y="917" width="10.3442%" height="15" fill="rgb(235,108,21)" fg:x="96946" fg:w="11286"/><text x="89.1057%" y="927.50">async_global_ex..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,286 samples, 10.34%)</title><rect x="88.8557%" y="901" width="10.3442%" height="15" fill="rgb(219,148,30)" fg:x="96946" fg:w="11286"/><text x="89.1057%" y="911.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,286 samples, 10.34%)</title><rect x="88.8557%" y="885" width="10.3442%" height="15" fill="rgb(220,109,5)" fg:x="96946" fg:w="11286"/><text x="89.1057%" y="895.50">std::thread::lo..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (11,286 samples, 10.34%)</title><rect x="88.8557%" y="869" width="10.3442%" height="15" fill="rgb(213,203,48)" fg:x="96946" fg:w="11286"/><text x="89.1057%" y="879.50">async_global_ex..</text></g><g><title>async_global_executor::reactor::block_on (11,286 samples, 10.34%)</title><rect x="88.8557%" y="853" width="10.3442%" height="15" fill="rgb(244,71,33)" fg:x="96946" fg:w="11286"/><text x="89.1057%" y="863.50">async_global_ex..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (11,286 samples, 10.34%)</title><rect x="88.8557%" y="837" width="10.3442%" height="15" fill="rgb(209,23,2)" fg:x="96946" fg:w="11286"/><text x="89.1057%" y="847.50">async_global_ex..</text></g><g><title>async_io::driver::block_on (11,286 samples, 10.34%)</title><rect x="88.8557%" y="821" width="10.3442%" height="15" fill="rgb(219,97,7)" fg:x="96946" fg:w="11286"/><text x="89.1057%" y="831.50">async_io::drive..</text></g><g><title>std::time::Instant::now (36 samples, 0.03%)</title><rect x="99.1669%" y="805" width="0.0330%" height="15" fill="rgb(216,161,23)" fg:x="108196" fg:w="36"/><text x="99.4169%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (36 samples, 0.03%)</title><rect x="99.1669%" y="789" width="0.0330%" height="15" fill="rgb(207,45,42)" fg:x="108196" fg:w="36"/><text x="99.4169%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::now (36 samples, 0.03%)</title><rect x="99.1669%" y="773" width="0.0330%" height="15" fill="rgb(241,61,4)" fg:x="108196" fg:w="36"/><text x="99.4169%" y="783.50"></text></g><g><title>__clock_gettime_2 (31 samples, 0.03%)</title><rect x="99.1714%" y="757" width="0.0284%" height="15" fill="rgb(236,170,1)" fg:x="108201" fg:w="31"/><text x="99.4214%" y="767.50"></text></g><g><title>__vdso_clock_gettime (25 samples, 0.02%)</title><rect x="99.1769%" y="741" width="0.0229%" height="15" fill="rgb(239,72,5)" fg:x="108207" fg:w="25"/><text x="99.4269%" y="751.50"></text></g><g><title>[[vdso]] (18 samples, 0.02%)</title><rect x="99.1834%" y="725" width="0.0165%" height="15" fill="rgb(214,13,50)" fg:x="108214" fg:w="18"/><text x="99.4334%" y="735.50"></text></g><g><title>__GI___clone (11,307 samples, 10.36%)</title><rect x="88.8410%" y="1205" width="10.3634%" height="15" fill="rgb(224,88,9)" fg:x="96930" fg:w="11307"/><text x="89.0910%" y="1215.50">__GI___clone</text></g><g><title>start_thread (11,303 samples, 10.36%)</title><rect x="88.8447%" y="1189" width="10.3597%" height="15" fill="rgb(238,192,34)" fg:x="96934" fg:w="11303"/><text x="89.0947%" y="1199.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (11,302 samples, 10.36%)</title><rect x="88.8456%" y="1173" width="10.3588%" height="15" fill="rgb(217,203,50)" fg:x="96935" fg:w="11302"/><text x="89.0956%" y="1183.50">std::sys::unix:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11,302 samples, 10.36%)</title><rect x="88.8456%" y="1157" width="10.3588%" height="15" fill="rgb(241,123,32)" fg:x="96935" fg:w="11302"/><text x="89.0956%" y="1167.50">&lt;alloc::boxed::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11,302 samples, 10.36%)</title><rect x="88.8456%" y="1141" width="10.3588%" height="15" fill="rgb(248,151,39)" fg:x="96935" fg:w="11302"/><text x="89.0956%" y="1151.50">&lt;alloc::boxed::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (11,302 samples, 10.36%)</title><rect x="88.8456%" y="1125" width="10.3588%" height="15" fill="rgb(208,89,6)" fg:x="96935" fg:w="11302"/><text x="89.0956%" y="1135.50">core::ops::func..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (11,302 samples, 10.36%)</title><rect x="88.8456%" y="1109" width="10.3588%" height="15" fill="rgb(254,43,26)" fg:x="96935" fg:w="11302"/><text x="89.0956%" y="1119.50">std::thread::Bu..</text></g><g><title>anon.704b378fac5dc6238355d8a8086309c7.10.llvm.11899312567597393491 (29 samples, 0.03%)</title><rect x="99.2475%" y="1205" width="0.0266%" height="15" fill="rgb(216,158,13)" fg:x="108284" fg:w="29"/><text x="99.4975%" y="1215.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="99.2475%" y="1189" width="0.0266%" height="15" fill="rgb(212,47,37)" fg:x="108284" fg:w="29"/><text x="99.4975%" y="1199.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (11 samples, 0.01%)</title><rect x="99.2741%" y="1189" width="0.0101%" height="15" fill="rgb(254,16,10)" fg:x="108313" fg:w="11"/><text x="99.5241%" y="1199.50"></text></g><g><title>anon.71e5b5c751f2f55dad6b0b336b32f453.18.llvm.8327217511132763441 (22 samples, 0.02%)</title><rect x="99.2741%" y="1205" width="0.0202%" height="15" fill="rgb(223,228,16)" fg:x="108313" fg:w="22"/><text x="99.5241%" y="1215.50"></text></g><g><title>abi_stable::erased_types::iterator::next (11 samples, 0.01%)</title><rect x="99.2842%" y="1189" width="0.0101%" height="15" fill="rgb(249,108,50)" fg:x="108324" fg:w="11"/><text x="99.5342%" y="1199.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="99.2979%" y="1189" width="0.0119%" height="15" fill="rgb(208,220,5)" fg:x="108339" fg:w="13"/><text x="99.5479%" y="1199.50"></text></g><g><title>anon.abc78cc5583050b6b67ff97e820827fc.14.llvm.14730796635267274446 (36 samples, 0.03%)</title><rect x="99.2979%" y="1205" width="0.0330%" height="15" fill="rgb(217,89,48)" fg:x="108339" fg:w="36"/><text x="99.5479%" y="1215.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="99.3098%" y="1189" width="0.0211%" height="15" fill="rgb(212,113,41)" fg:x="108352" fg:w="23"/><text x="99.5598%" y="1199.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (34 samples, 0.03%)</title><rect x="99.3318%" y="1189" width="0.0312%" height="15" fill="rgb(231,127,5)" fg:x="108376" fg:w="34"/><text x="99.5818%" y="1199.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (34 samples, 0.03%)</title><rect x="99.3318%" y="1173" width="0.0312%" height="15" fill="rgb(217,141,17)" fg:x="108376" fg:w="34"/><text x="99.5818%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (34 samples, 0.03%)</title><rect x="99.3318%" y="1157" width="0.0312%" height="15" fill="rgb(245,125,54)" fg:x="108376" fg:w="34"/><text x="99.5818%" y="1167.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (34 samples, 0.03%)</title><rect x="99.3318%" y="1141" width="0.0312%" height="15" fill="rgb(248,125,3)" fg:x="108376" fg:w="34"/><text x="99.5818%" y="1151.50"></text></g><g><title>anon.cf5b369754f469a95f7b3df78c6a1de7.35.llvm.13184787943170355473 (44 samples, 0.04%)</title><rect x="99.3318%" y="1205" width="0.0403%" height="15" fill="rgb(236,119,51)" fg:x="108376" fg:w="44"/><text x="99.5818%" y="1215.50"></text></g><g><title>async_executor::steal (73 samples, 0.07%)</title><rect x="99.3923%" y="1205" width="0.0669%" height="15" fill="rgb(239,99,8)" fg:x="108442" fg:w="73"/><text x="99.6423%" y="1215.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (31 samples, 0.03%)</title><rect x="99.4684%" y="1205" width="0.0284%" height="15" fill="rgb(224,228,4)" fg:x="108525" fg:w="31"/><text x="99.7184%" y="1215.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (31 samples, 0.03%)</title><rect x="99.5014%" y="1205" width="0.0284%" height="15" fill="rgb(220,131,45)" fg:x="108561" fg:w="31"/><text x="99.7514%" y="1215.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (19 samples, 0.02%)</title><rect x="99.5298%" y="1205" width="0.0174%" height="15" fill="rgb(215,62,5)" fg:x="108592" fg:w="19"/><text x="99.7798%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="99.5472%" y="1205" width="0.0101%" height="15" fill="rgb(253,12,24)" fg:x="108611" fg:w="11"/><text x="99.7972%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (146 samples, 0.13%)</title><rect x="99.5637%" y="1205" width="0.1338%" height="15" fill="rgb(248,120,50)" fg:x="108629" fg:w="146"/><text x="99.8137%" y="1215.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (15 samples, 0.01%)</title><rect x="99.7150%" y="1205" width="0.0137%" height="15" fill="rgb(245,194,10)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="99.7150%" y="1189" width="0.0137%" height="15" fill="rgb(241,149,38)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="1199.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (15 samples, 0.01%)</title><rect x="99.7150%" y="1173" width="0.0137%" height="15" fill="rgb(219,215,7)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="1183.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="99.7150%" y="1157" width="0.0137%" height="15" fill="rgb(208,120,31)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="1167.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="99.7150%" y="1141" width="0.0137%" height="15" fill="rgb(244,30,8)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="1151.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (15 samples, 0.01%)</title><rect x="99.7150%" y="1125" width="0.0137%" height="15" fill="rgb(238,35,44)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="1135.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (15 samples, 0.01%)</title><rect x="99.7150%" y="1109" width="0.0137%" height="15" fill="rgb(243,218,37)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (15 samples, 0.01%)</title><rect x="99.7150%" y="1093" width="0.0137%" height="15" fill="rgb(218,169,10)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.01%)</title><rect x="99.7150%" y="1077" width="0.0137%" height="15" fill="rgb(221,144,10)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="1087.50"></text></g><g><title>std::panicking::try (15 samples, 0.01%)</title><rect x="99.7150%" y="1061" width="0.0137%" height="15" fill="rgb(226,41,38)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.01%)</title><rect x="99.7150%" y="1045" width="0.0137%" height="15" fill="rgb(228,3,1)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15 samples, 0.01%)</title><rect x="99.7150%" y="1029" width="0.0137%" height="15" fill="rgb(209,129,12)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.01%)</title><rect x="99.7150%" y="1013" width="0.0137%" height="15" fill="rgb(213,136,33)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="1023.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (15 samples, 0.01%)</title><rect x="99.7150%" y="997" width="0.0137%" height="15" fill="rgb(209,181,29)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="1007.50"></text></g><g><title>async_ffi::FfiContext::with_context (15 samples, 0.01%)</title><rect x="99.7150%" y="981" width="0.0137%" height="15" fill="rgb(234,173,18)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="991.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (15 samples, 0.01%)</title><rect x="99.7150%" y="965" width="0.0137%" height="15" fill="rgb(227,73,47)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="99.7150%" y="949" width="0.0137%" height="15" fill="rgb(234,9,34)" fg:x="108794" fg:w="15"/><text x="99.9650%" y="959.50"></text></g><g><title>async-std/runti (108,745 samples, 99.67%)</title><rect x="0.0596%" y="1221" width="99.6700%" height="15" fill="rgb(235,172,15)" fg:x="65" fg:w="108745"/><text x="0.3096%" y="1231.50">async-std/runti</text></g><g><title>blocking-1 (23 samples, 0.02%)</title><rect x="99.7296%" y="1221" width="0.0211%" height="15" fill="rgb(245,61,2)" fg:x="108810" fg:w="23"/><text x="99.9796%" y="1231.50"></text></g><g><title>__GI___clone (23 samples, 0.02%)</title><rect x="99.7296%" y="1205" width="0.0211%" height="15" fill="rgb(238,39,47)" fg:x="108810" fg:w="23"/><text x="99.9796%" y="1215.50"></text></g><g><title>start_thread (18 samples, 0.02%)</title><rect x="99.7342%" y="1189" width="0.0165%" height="15" fill="rgb(234,37,24)" fg:x="108815" fg:w="18"/><text x="99.9842%" y="1199.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (18 samples, 0.02%)</title><rect x="99.7342%" y="1173" width="0.0165%" height="15" fill="rgb(248,223,24)" fg:x="108815" fg:w="18"/><text x="99.9842%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.7342%" y="1157" width="0.0165%" height="15" fill="rgb(223,12,15)" fg:x="108815" fg:w="18"/><text x="99.9842%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.7342%" y="1141" width="0.0165%" height="15" fill="rgb(249,6,3)" fg:x="108815" fg:w="18"/><text x="99.9842%" y="1151.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (18 samples, 0.02%)</title><rect x="99.7342%" y="1125" width="0.0165%" height="15" fill="rgb(237,105,33)" fg:x="108815" fg:w="18"/><text x="99.9842%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (18 samples, 0.02%)</title><rect x="99.7342%" y="1109" width="0.0165%" height="15" fill="rgb(252,208,35)" fg:x="108815" fg:w="18"/><text x="99.9842%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="99.7342%" y="1093" width="0.0165%" height="15" fill="rgb(215,181,35)" fg:x="108815" fg:w="18"/><text x="99.9842%" y="1103.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="99.7342%" y="1077" width="0.0165%" height="15" fill="rgb(246,212,3)" fg:x="108815" fg:w="18"/><text x="99.9842%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="99.7342%" y="1061" width="0.0165%" height="15" fill="rgb(247,156,24)" fg:x="108815" fg:w="18"/><text x="99.9842%" y="1071.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.7342%" y="1045" width="0.0165%" height="15" fill="rgb(248,9,31)" fg:x="108815" fg:w="18"/><text x="99.9842%" y="1055.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="99.7342%" y="1029" width="0.0165%" height="15" fill="rgb(234,26,45)" fg:x="108815" fg:w="18"/><text x="99.9842%" y="1039.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 0.02%)</title><rect x="99.7342%" y="1013" width="0.0165%" height="15" fill="rgb(249,11,32)" fg:x="108815" fg:w="18"/><text x="99.9842%" y="1023.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (18 samples, 0.02%)</title><rect x="99.7342%" y="997" width="0.0165%" height="15" fill="rgb(249,162,33)" fg:x="108815" fg:w="18"/><text x="99.9842%" y="1007.50"></text></g><g><title>blocking::Executor::main_loop (18 samples, 0.02%)</title><rect x="99.7342%" y="981" width="0.0165%" height="15" fill="rgb(232,4,32)" fg:x="108815" fg:w="18"/><text x="99.9842%" y="991.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (17 samples, 0.02%)</title><rect x="99.7351%" y="965" width="0.0156%" height="15" fill="rgb(212,5,45)" fg:x="108816" fg:w="17"/><text x="99.9851%" y="975.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (17 samples, 0.02%)</title><rect x="99.7351%" y="949" width="0.0156%" height="15" fill="rgb(227,95,13)" fg:x="108816" fg:w="17"/><text x="99.9851%" y="959.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (17 samples, 0.02%)</title><rect x="99.7351%" y="933" width="0.0156%" height="15" fill="rgb(223,205,10)" fg:x="108816" fg:w="17"/><text x="99.9851%" y="943.50"></text></g><g><title>___pthread_cond_timedwait (17 samples, 0.02%)</title><rect x="99.7351%" y="917" width="0.0156%" height="15" fill="rgb(222,178,8)" fg:x="108816" fg:w="17"/><text x="99.9851%" y="927.50"></text></g><g><title>__futex_abstimed_wait_common (14 samples, 0.01%)</title><rect x="99.7379%" y="901" width="0.0128%" height="15" fill="rgb(216,13,22)" fg:x="108819" fg:w="14"/><text x="99.9879%" y="911.50"></text></g><g><title>blocking-2 (12 samples, 0.01%)</title><rect x="99.7507%" y="1221" width="0.0110%" height="15" fill="rgb(240,167,12)" fg:x="108833" fg:w="12"/><text x="100.0007%" y="1231.50"></text></g><g><title>__GI___clone (11 samples, 0.01%)</title><rect x="99.7516%" y="1205" width="0.0101%" height="15" fill="rgb(235,68,35)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="1215.50"></text></g><g><title>start_thread (11 samples, 0.01%)</title><rect x="99.7516%" y="1189" width="0.0101%" height="15" fill="rgb(253,40,27)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="1199.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (11 samples, 0.01%)</title><rect x="99.7516%" y="1173" width="0.0101%" height="15" fill="rgb(214,19,28)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="99.7516%" y="1157" width="0.0101%" height="15" fill="rgb(210,167,45)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="99.7516%" y="1141" width="0.0101%" height="15" fill="rgb(232,97,40)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="1151.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (11 samples, 0.01%)</title><rect x="99.7516%" y="1125" width="0.0101%" height="15" fill="rgb(250,35,23)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (11 samples, 0.01%)</title><rect x="99.7516%" y="1109" width="0.0101%" height="15" fill="rgb(248,47,53)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="99.7516%" y="1093" width="0.0101%" height="15" fill="rgb(226,58,50)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="1103.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="99.7516%" y="1077" width="0.0101%" height="15" fill="rgb(217,105,26)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="99.7516%" y="1061" width="0.0101%" height="15" fill="rgb(208,64,1)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="1071.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="99.7516%" y="1045" width="0.0101%" height="15" fill="rgb(214,80,1)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="1055.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="99.7516%" y="1029" width="0.0101%" height="15" fill="rgb(206,175,26)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="1039.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 0.01%)</title><rect x="99.7516%" y="1013" width="0.0101%" height="15" fill="rgb(235,156,37)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="1023.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (11 samples, 0.01%)</title><rect x="99.7516%" y="997" width="0.0101%" height="15" fill="rgb(213,100,9)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="1007.50"></text></g><g><title>blocking::Executor::main_loop (11 samples, 0.01%)</title><rect x="99.7516%" y="981" width="0.0101%" height="15" fill="rgb(241,15,13)" fg:x="108834" fg:w="11"/><text x="100.0016%" y="991.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (48 samples, 0.04%)</title><rect x="99.7654%" y="981" width="0.0440%" height="15" fill="rgb(205,97,43)" fg:x="108849" fg:w="48"/><text x="100.0154%" y="991.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (48 samples, 0.04%)</title><rect x="99.7654%" y="965" width="0.0440%" height="15" fill="rgb(216,106,32)" fg:x="108849" fg:w="48"/><text x="100.0154%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (48 samples, 0.04%)</title><rect x="99.7654%" y="949" width="0.0440%" height="15" fill="rgb(226,200,8)" fg:x="108849" fg:w="48"/><text x="100.0154%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (48 samples, 0.04%)</title><rect x="99.7654%" y="933" width="0.0440%" height="15" fill="rgb(244,54,29)" fg:x="108849" fg:w="48"/><text x="100.0154%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (48 samples, 0.04%)</title><rect x="99.7654%" y="917" width="0.0440%" height="15" fill="rgb(252,169,12)" fg:x="108849" fg:w="48"/><text x="100.0154%" y="927.50"></text></g><g><title>___pthread_mutex_lock (48 samples, 0.04%)</title><rect x="99.7654%" y="901" width="0.0440%" height="15" fill="rgb(231,199,11)" fg:x="108849" fg:w="48"/><text x="100.0154%" y="911.50"></text></g><g><title>__GI___lll_lock_wait (48 samples, 0.04%)</title><rect x="99.7654%" y="885" width="0.0440%" height="15" fill="rgb(233,191,18)" fg:x="108849" fg:w="48"/><text x="100.0154%" y="895.50"></text></g><g><title>tokio-runtime-w (52 samples, 0.05%)</title><rect x="99.7626%" y="1221" width="0.0477%" height="15" fill="rgb(215,83,47)" fg:x="108846" fg:w="52"/><text x="100.0126%" y="1231.50"></text></g><g><title>__GI___clone (49 samples, 0.04%)</title><rect x="99.7654%" y="1205" width="0.0449%" height="15" fill="rgb(251,67,19)" fg:x="108849" fg:w="49"/><text x="100.0154%" y="1215.50"></text></g><g><title>start_thread (49 samples, 0.04%)</title><rect x="99.7654%" y="1189" width="0.0449%" height="15" fill="rgb(240,7,20)" fg:x="108849" fg:w="49"/><text x="100.0154%" y="1199.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (49 samples, 0.04%)</title><rect x="99.7654%" y="1173" width="0.0449%" height="15" fill="rgb(210,150,26)" fg:x="108849" fg:w="49"/><text x="100.0154%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (49 samples, 0.04%)</title><rect x="99.7654%" y="1157" width="0.0449%" height="15" fill="rgb(228,75,42)" fg:x="108849" fg:w="49"/><text x="100.0154%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (49 samples, 0.04%)</title><rect x="99.7654%" y="1141" width="0.0449%" height="15" fill="rgb(237,134,48)" fg:x="108849" fg:w="49"/><text x="100.0154%" y="1151.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (49 samples, 0.04%)</title><rect x="99.7654%" y="1125" width="0.0449%" height="15" fill="rgb(205,80,50)" fg:x="108849" fg:w="49"/><text x="100.0154%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (49 samples, 0.04%)</title><rect x="99.7654%" y="1109" width="0.0449%" height="15" fill="rgb(217,74,48)" fg:x="108849" fg:w="49"/><text x="100.0154%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (49 samples, 0.04%)</title><rect x="99.7654%" y="1093" width="0.0449%" height="15" fill="rgb(205,82,50)" fg:x="108849" fg:w="49"/><text x="100.0154%" y="1103.50"></text></g><g><title>std::panicking::try (49 samples, 0.04%)</title><rect x="99.7654%" y="1077" width="0.0449%" height="15" fill="rgb(228,1,33)" fg:x="108849" fg:w="49"/><text x="100.0154%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (49 samples, 0.04%)</title><rect x="99.7654%" y="1061" width="0.0449%" height="15" fill="rgb(214,50,23)" fg:x="108849" fg:w="49"/><text x="100.0154%" y="1071.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (49 samples, 0.04%)</title><rect x="99.7654%" y="1045" width="0.0449%" height="15" fill="rgb(210,62,9)" fg:x="108849" fg:w="49"/><text x="100.0154%" y="1055.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (49 samples, 0.04%)</title><rect x="99.7654%" y="1029" width="0.0449%" height="15" fill="rgb(210,104,37)" fg:x="108849" fg:w="49"/><text x="100.0154%" y="1039.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (49 samples, 0.04%)</title><rect x="99.7654%" y="1013" width="0.0449%" height="15" fill="rgb(232,104,43)" fg:x="108849" fg:w="49"/><text x="100.0154%" y="1023.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (49 samples, 0.04%)</title><rect x="99.7654%" y="997" width="0.0449%" height="15" fill="rgb(244,52,6)" fg:x="108849" fg:w="49"/><text x="100.0154%" y="1007.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="99.8139%" y="1205" width="0.0192%" height="15" fill="rgb(211,174,52)" fg:x="108902" fg:w="21"/><text x="100.0639%" y="1215.50"></text></g><g><title>__GI___clone (172 samples, 0.16%)</title><rect x="99.8332%" y="1205" width="0.1576%" height="15" fill="rgb(229,48,4)" fg:x="108923" fg:w="172"/><text x="100.0832%" y="1215.50"></text></g><g><title>all (109,105 samples, 100%)</title><rect x="0.0000%" y="1237" width="100.0000%" height="15" fill="rgb(205,155,16)" fg:x="0" fg:w="109105"/><text x="0.2500%" y="1247.50"></text></g><g><title>tremor-pdk (207 samples, 0.19%)</title><rect x="99.8103%" y="1221" width="0.1897%" height="15" fill="rgb(211,141,53)" fg:x="108898" fg:w="207"/><text x="100.0603%" y="1231.50"></text></g></svg></svg>