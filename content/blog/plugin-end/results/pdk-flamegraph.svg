<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1237.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="108862"><g><title>async_io::reactor::Reactor::lock (11 samples, 0.01%)</title><rect x="0.0037%" y="933" width="0.0101%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="11"/><text x="0.2537%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="0.0037%" y="917" width="0.0101%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="11"/><text x="0.2537%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.01%)</title><rect x="0.0037%" y="901" width="0.0101%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="11"/><text x="0.2537%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (11 samples, 0.01%)</title><rect x="0.0037%" y="885" width="0.0101%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="11"/><text x="0.2537%" y="895.50"></text></g><g><title>___pthread_mutex_lock (11 samples, 0.01%)</title><rect x="0.0037%" y="869" width="0.0101%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="11"/><text x="0.2537%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (11 samples, 0.01%)</title><rect x="0.0037%" y="853" width="0.0101%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="11"/><text x="0.2537%" y="863.50"></text></g><g><title>___pthread_cond_timedwait (41 samples, 0.04%)</title><rect x="0.0312%" y="853" width="0.0377%" height="15" fill="rgb(207,160,47)" fg:x="34" fg:w="41"/><text x="0.2812%" y="863.50"></text></g><g><title>__futex_abstimed_wait_common (40 samples, 0.04%)</title><rect x="0.0322%" y="837" width="0.0367%" height="15" fill="rgb(228,23,34)" fg:x="35" fg:w="40"/><text x="0.2822%" y="847.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (47 samples, 0.04%)</title><rect x="0.0276%" y="901" width="0.0432%" height="15" fill="rgb(218,30,26)" fg:x="30" fg:w="47"/><text x="0.2776%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (46 samples, 0.04%)</title><rect x="0.0285%" y="885" width="0.0423%" height="15" fill="rgb(220,122,19)" fg:x="31" fg:w="46"/><text x="0.2785%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (46 samples, 0.04%)</title><rect x="0.0285%" y="869" width="0.0423%" height="15" fill="rgb(250,228,42)" fg:x="31" fg:w="46"/><text x="0.2785%" y="879.50"></text></g><g><title>async-io (78 samples, 0.07%)</title><rect x="0.0009%" y="1189" width="0.0717%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="78"/><text x="0.2509%" y="1199.50"></text></g><g><title>__GI___clone (76 samples, 0.07%)</title><rect x="0.0028%" y="1173" width="0.0698%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="76"/><text x="0.2528%" y="1183.50"></text></g><g><title>start_thread (76 samples, 0.07%)</title><rect x="0.0028%" y="1157" width="0.0698%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="76"/><text x="0.2528%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (76 samples, 0.07%)</title><rect x="0.0028%" y="1141" width="0.0698%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="76"/><text x="0.2528%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (76 samples, 0.07%)</title><rect x="0.0028%" y="1125" width="0.0698%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="76"/><text x="0.2528%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (76 samples, 0.07%)</title><rect x="0.0028%" y="1109" width="0.0698%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="76"/><text x="0.2528%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (76 samples, 0.07%)</title><rect x="0.0028%" y="1093" width="0.0698%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="76"/><text x="0.2528%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (76 samples, 0.07%)</title><rect x="0.0028%" y="1077" width="0.0698%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="76"/><text x="0.2528%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (76 samples, 0.07%)</title><rect x="0.0028%" y="1061" width="0.0698%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="76"/><text x="0.2528%" y="1071.50"></text></g><g><title>std::panicking::try (76 samples, 0.07%)</title><rect x="0.0028%" y="1045" width="0.0698%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="76"/><text x="0.2528%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (76 samples, 0.07%)</title><rect x="0.0028%" y="1029" width="0.0698%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="76"/><text x="0.2528%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (76 samples, 0.07%)</title><rect x="0.0028%" y="1013" width="0.0698%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="76"/><text x="0.2528%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (76 samples, 0.07%)</title><rect x="0.0028%" y="997" width="0.0698%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="76"/><text x="0.2528%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (76 samples, 0.07%)</title><rect x="0.0028%" y="981" width="0.0698%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="76"/><text x="0.2528%" y="991.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (76 samples, 0.07%)</title><rect x="0.0028%" y="965" width="0.0698%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="76"/><text x="0.2528%" y="975.50"></text></g><g><title>async_io::driver::main_loop (76 samples, 0.07%)</title><rect x="0.0028%" y="949" width="0.0698%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="76"/><text x="0.2528%" y="959.50"></text></g><g><title>parking::Parker::park_timeout (50 samples, 0.05%)</title><rect x="0.0266%" y="933" width="0.0459%" height="15" fill="rgb(238,160,17)" fg:x="29" fg:w="50"/><text x="0.2766%" y="943.50"></text></g><g><title>parking::Inner::park (50 samples, 0.05%)</title><rect x="0.0266%" y="917" width="0.0459%" height="15" fill="rgb(214,148,48)" fg:x="29" fg:w="50"/><text x="0.2766%" y="927.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="0.3628%" y="1173" width="0.0285%" height="15" fill="rgb(232,36,49)" fg:x="395" fg:w="31"/><text x="0.6128%" y="1183.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="0.4051%" y="1173" width="0.0156%" height="15" fill="rgb(209,103,24)" fg:x="441" fg:w="17"/><text x="0.6551%" y="1183.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (15 samples, 0.01%)</title><rect x="0.4069%" y="1157" width="0.0138%" height="15" fill="rgb(229,88,8)" fg:x="443" fg:w="15"/><text x="0.6569%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.05%)</title><rect x="0.4207%" y="1173" width="0.0542%" height="15" fill="rgb(213,181,19)" fg:x="458" fg:w="59"/><text x="0.6707%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="0.4749%" y="1173" width="0.0303%" height="15" fill="rgb(254,191,54)" fg:x="517" fg:w="33"/><text x="0.7249%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (33 samples, 0.03%)</title><rect x="0.4749%" y="1157" width="0.0303%" height="15" fill="rgb(241,83,37)" fg:x="517" fg:w="33"/><text x="0.7249%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (58 samples, 0.05%)</title><rect x="0.5052%" y="1173" width="0.0533%" height="15" fill="rgb(233,36,39)" fg:x="550" fg:w="58"/><text x="0.7552%" y="1183.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (45 samples, 0.04%)</title><rect x="0.5172%" y="1157" width="0.0413%" height="15" fill="rgb(226,3,54)" fg:x="563" fg:w="45"/><text x="0.7672%" y="1167.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (12 samples, 0.01%)</title><rect x="0.5971%" y="1141" width="0.0110%" height="15" fill="rgb(245,192,40)" fg:x="650" fg:w="12"/><text x="0.8471%" y="1151.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (12 samples, 0.01%)</title><rect x="0.5971%" y="1125" width="0.0110%" height="15" fill="rgb(238,167,29)" fg:x="650" fg:w="12"/><text x="0.8471%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (12 samples, 0.01%)</title><rect x="0.5971%" y="1109" width="0.0110%" height="15" fill="rgb(232,182,51)" fg:x="650" fg:w="12"/><text x="0.8471%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (12 samples, 0.01%)</title><rect x="0.5971%" y="1093" width="0.0110%" height="15" fill="rgb(231,60,39)" fg:x="650" fg:w="12"/><text x="0.8471%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="0.5971%" y="1077" width="0.0110%" height="15" fill="rgb(208,69,12)" fg:x="650" fg:w="12"/><text x="0.8471%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="0.5971%" y="1061" width="0.0110%" height="15" fill="rgb(235,93,37)" fg:x="650" fg:w="12"/><text x="0.8471%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="0.5971%" y="1045" width="0.0110%" height="15" fill="rgb(213,116,39)" fg:x="650" fg:w="12"/><text x="0.8471%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="0.5971%" y="1029" width="0.0110%" height="15" fill="rgb(222,207,29)" fg:x="650" fg:w="12"/><text x="0.8471%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="0.5971%" y="1013" width="0.0110%" height="15" fill="rgb(206,96,30)" fg:x="650" fg:w="12"/><text x="0.8471%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="0.5971%" y="997" width="0.0110%" height="15" fill="rgb(218,138,4)" fg:x="650" fg:w="12"/><text x="0.8471%" y="1007.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="0.5971%" y="981" width="0.0110%" height="15" fill="rgb(250,191,14)" fg:x="650" fg:w="12"/><text x="0.8471%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="0.5971%" y="965" width="0.0110%" height="15" fill="rgb(239,60,40)" fg:x="650" fg:w="12"/><text x="0.8471%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (57 samples, 0.05%)</title><rect x="0.5649%" y="1157" width="0.0524%" height="15" fill="rgb(206,27,48)" fg:x="615" fg:w="57"/><text x="0.8149%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (26 samples, 0.02%)</title><rect x="0.6173%" y="1157" width="0.0239%" height="15" fill="rgb(225,35,8)" fg:x="672" fg:w="26"/><text x="0.8673%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="0.6412%" y="1157" width="0.0193%" height="15" fill="rgb(250,213,24)" fg:x="698" fg:w="21"/><text x="0.8912%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="0.6605%" y="1157" width="0.0303%" height="15" fill="rgb(247,123,22)" fg:x="719" fg:w="33"/><text x="0.9105%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="0.6908%" y="1157" width="0.0423%" height="15" fill="rgb(231,138,38)" fg:x="752" fg:w="46"/><text x="0.9408%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="0.7330%" y="1157" width="0.0129%" height="15" fill="rgb(231,145,46)" fg:x="798" fg:w="14"/><text x="0.9830%" y="1167.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="0.7459%" y="1157" width="0.0331%" height="15" fill="rgb(251,118,11)" fg:x="812" fg:w="36"/><text x="0.9959%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (22 samples, 0.02%)</title><rect x="0.7588%" y="1141" width="0.0202%" height="15" fill="rgb(217,147,25)" fg:x="826" fg:w="22"/><text x="1.0088%" y="1151.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="0.7588%" y="1125" width="0.0202%" height="15" fill="rgb(247,81,37)" fg:x="826" fg:w="22"/><text x="1.0088%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (22 samples, 0.02%)</title><rect x="0.7588%" y="1109" width="0.0202%" height="15" fill="rgb(209,12,38)" fg:x="826" fg:w="22"/><text x="1.0088%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="0.7588%" y="1093" width="0.0202%" height="15" fill="rgb(227,1,9)" fg:x="826" fg:w="22"/><text x="1.0088%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="0.7588%" y="1077" width="0.0202%" height="15" fill="rgb(248,47,43)" fg:x="826" fg:w="22"/><text x="1.0088%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="0.7588%" y="1061" width="0.0202%" height="15" fill="rgb(221,10,30)" fg:x="826" fg:w="22"/><text x="1.0088%" y="1071.50"></text></g><g><title>__rg_dealloc (22 samples, 0.02%)</title><rect x="0.7588%" y="1045" width="0.0202%" height="15" fill="rgb(210,229,1)" fg:x="826" fg:w="22"/><text x="1.0088%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (22 samples, 0.02%)</title><rect x="0.7588%" y="1029" width="0.0202%" height="15" fill="rgb(222,148,37)" fg:x="826" fg:w="22"/><text x="1.0088%" y="1039.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (207 samples, 0.19%)</title><rect x="0.7790%" y="1157" width="0.1901%" height="15" fill="rgb(234,67,33)" fg:x="848" fg:w="207"/><text x="1.0290%" y="1167.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (24 samples, 0.02%)</title><rect x="1.0619%" y="1141" width="0.0220%" height="15" fill="rgb(247,98,35)" fg:x="1156" fg:w="24"/><text x="1.3119%" y="1151.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (17 samples, 0.02%)</title><rect x="1.0683%" y="1125" width="0.0156%" height="15" fill="rgb(247,138,52)" fg:x="1163" fg:w="17"/><text x="1.3183%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (91 samples, 0.08%)</title><rect x="1.0839%" y="1141" width="0.0836%" height="15" fill="rgb(213,79,30)" fg:x="1180" fg:w="91"/><text x="1.3339%" y="1151.50"></text></g><g><title>core::mem::replace (91 samples, 0.08%)</title><rect x="1.0839%" y="1125" width="0.0836%" height="15" fill="rgb(246,177,23)" fg:x="1180" fg:w="91"/><text x="1.3339%" y="1135.50"></text></g><g><title>core::ptr::read (91 samples, 0.08%)</title><rect x="1.0839%" y="1109" width="0.0836%" height="15" fill="rgb(230,62,27)" fg:x="1180" fg:w="91"/><text x="1.3339%" y="1119.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (211 samples, 0.19%)</title><rect x="0.9746%" y="1157" width="0.1938%" height="15" fill="rgb(216,154,8)" fg:x="1061" fg:w="211"/><text x="1.2246%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (49 samples, 0.05%)</title><rect x="1.5717%" y="1125" width="0.0450%" height="15" fill="rgb(244,35,45)" fg:x="1711" fg:w="49"/><text x="1.8217%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (49 samples, 0.05%)</title><rect x="1.5717%" y="1109" width="0.0450%" height="15" fill="rgb(251,115,12)" fg:x="1711" fg:w="49"/><text x="1.8217%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (123 samples, 0.11%)</title><rect x="1.5056%" y="1141" width="0.1130%" height="15" fill="rgb(240,54,50)" fg:x="1639" fg:w="123"/><text x="1.7556%" y="1151.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="1.6186%" y="1125" width="0.0358%" height="15" fill="rgb(233,84,52)" fg:x="1762" fg:w="39"/><text x="1.8686%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="1.6287%" y="1109" width="0.0257%" height="15" fill="rgb(207,117,47)" fg:x="1773" fg:w="28"/><text x="1.8787%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (28 samples, 0.03%)</title><rect x="1.6287%" y="1093" width="0.0257%" height="15" fill="rgb(249,43,39)" fg:x="1773" fg:w="28"/><text x="1.8787%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (28 samples, 0.03%)</title><rect x="1.6287%" y="1077" width="0.0257%" height="15" fill="rgb(209,38,44)" fg:x="1773" fg:w="28"/><text x="1.8787%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (28 samples, 0.03%)</title><rect x="1.6287%" y="1061" width="0.0257%" height="15" fill="rgb(236,212,23)" fg:x="1773" fg:w="28"/><text x="1.8787%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.03%)</title><rect x="1.6287%" y="1045" width="0.0257%" height="15" fill="rgb(242,79,21)" fg:x="1773" fg:w="28"/><text x="1.8787%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.03%)</title><rect x="1.6287%" y="1029" width="0.0257%" height="15" fill="rgb(211,96,35)" fg:x="1773" fg:w="28"/><text x="1.8787%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.03%)</title><rect x="1.6287%" y="1013" width="0.0257%" height="15" fill="rgb(253,215,40)" fg:x="1773" fg:w="28"/><text x="1.8787%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (21 samples, 0.02%)</title><rect x="1.6351%" y="997" width="0.0193%" height="15" fill="rgb(211,81,21)" fg:x="1780" fg:w="21"/><text x="1.8851%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.02%)</title><rect x="1.6351%" y="981" width="0.0193%" height="15" fill="rgb(208,190,38)" fg:x="1780" fg:w="21"/><text x="1.8851%" y="991.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (61 samples, 0.06%)</title><rect x="1.6186%" y="1141" width="0.0560%" height="15" fill="rgb(235,213,38)" fg:x="1762" fg:w="61"/><text x="1.8686%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (22 samples, 0.02%)</title><rect x="1.6544%" y="1125" width="0.0202%" height="15" fill="rgb(237,122,38)" fg:x="1801" fg:w="22"/><text x="1.9044%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="1.6544%" y="1109" width="0.0202%" height="15" fill="rgb(244,218,35)" fg:x="1801" fg:w="22"/><text x="1.9044%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.02%)</title><rect x="1.6544%" y="1093" width="0.0202%" height="15" fill="rgb(240,68,47)" fg:x="1801" fg:w="22"/><text x="1.9044%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.02%)</title><rect x="1.6544%" y="1077" width="0.0202%" height="15" fill="rgb(210,16,53)" fg:x="1801" fg:w="22"/><text x="1.9044%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.02%)</title><rect x="1.6544%" y="1061" width="0.0202%" height="15" fill="rgb(235,124,12)" fg:x="1801" fg:w="22"/><text x="1.9044%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (13 samples, 0.01%)</title><rect x="1.6627%" y="1045" width="0.0119%" height="15" fill="rgb(224,169,11)" fg:x="1810" fg:w="13"/><text x="1.9127%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="1.6627%" y="1029" width="0.0119%" height="15" fill="rgb(250,166,2)" fg:x="1810" fg:w="13"/><text x="1.9127%" y="1039.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (29 samples, 0.03%)</title><rect x="1.6746%" y="1141" width="0.0266%" height="15" fill="rgb(242,216,29)" fg:x="1823" fg:w="29"/><text x="1.9246%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="1.6746%" y="1125" width="0.0266%" height="15" fill="rgb(230,116,27)" fg:x="1823" fg:w="29"/><text x="1.9246%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="1.6746%" y="1109" width="0.0266%" height="15" fill="rgb(228,99,48)" fg:x="1823" fg:w="29"/><text x="1.9246%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (29 samples, 0.03%)</title><rect x="1.6746%" y="1093" width="0.0266%" height="15" fill="rgb(253,11,6)" fg:x="1823" fg:w="29"/><text x="1.9246%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (28 samples, 0.03%)</title><rect x="1.6755%" y="1077" width="0.0257%" height="15" fill="rgb(247,143,39)" fg:x="1824" fg:w="28"/><text x="1.9255%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="1.7573%" y="1125" width="0.0165%" height="15" fill="rgb(236,97,10)" fg:x="1913" fg:w="18"/><text x="2.0073%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="1.7628%" y="1109" width="0.0110%" height="15" fill="rgb(233,208,19)" fg:x="1919" fg:w="12"/><text x="2.0128%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="1.7628%" y="1093" width="0.0110%" height="15" fill="rgb(216,164,2)" fg:x="1919" fg:w="12"/><text x="2.0128%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="1.7628%" y="1077" width="0.0110%" height="15" fill="rgb(220,129,5)" fg:x="1919" fg:w="12"/><text x="2.0128%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="1.7628%" y="1061" width="0.0110%" height="15" fill="rgb(242,17,10)" fg:x="1919" fg:w="12"/><text x="2.0128%" y="1071.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="1.7628%" y="1045" width="0.0110%" height="15" fill="rgb(242,107,0)" fg:x="1919" fg:w="12"/><text x="2.0128%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="1.7628%" y="1029" width="0.0110%" height="15" fill="rgb(251,28,31)" fg:x="1919" fg:w="12"/><text x="2.0128%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (72 samples, 0.07%)</title><rect x="1.7159%" y="1141" width="0.0661%" height="15" fill="rgb(233,223,10)" fg:x="1868" fg:w="72"/><text x="1.9659%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (27 samples, 0.02%)</title><rect x="1.7821%" y="1141" width="0.0248%" height="15" fill="rgb(215,21,27)" fg:x="1940" fg:w="27"/><text x="2.0321%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (65 samples, 0.06%)</title><rect x="1.8069%" y="1141" width="0.0597%" height="15" fill="rgb(232,23,21)" fg:x="1967" fg:w="65"/><text x="2.0569%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (843 samples, 0.77%)</title><rect x="1.1703%" y="1157" width="0.7744%" height="15" fill="rgb(244,5,23)" fg:x="1274" fg:w="843"/><text x="1.4203%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (85 samples, 0.08%)</title><rect x="1.8666%" y="1141" width="0.0781%" height="15" fill="rgb(226,81,46)" fg:x="2032" fg:w="85"/><text x="2.1166%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.02%)</title><rect x="1.9447%" y="1157" width="0.0220%" height="15" fill="rgb(247,70,30)" fg:x="2117" fg:w="24"/><text x="2.1947%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (31 samples, 0.03%)</title><rect x="2.0439%" y="1141" width="0.0285%" height="15" fill="rgb(212,68,19)" fg:x="2225" fg:w="31"/><text x="2.2939%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (31 samples, 0.03%)</title><rect x="2.0439%" y="1125" width="0.0285%" height="15" fill="rgb(240,187,13)" fg:x="2225" fg:w="31"/><text x="2.2939%" y="1135.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="2.0439%" y="1109" width="0.0285%" height="15" fill="rgb(223,113,26)" fg:x="2225" fg:w="31"/><text x="2.2939%" y="1119.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (31 samples, 0.03%)</title><rect x="2.0439%" y="1093" width="0.0285%" height="15" fill="rgb(206,192,2)" fg:x="2225" fg:w="31"/><text x="2.2939%" y="1103.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (31 samples, 0.03%)</title><rect x="2.0439%" y="1077" width="0.0285%" height="15" fill="rgb(241,108,4)" fg:x="2225" fg:w="31"/><text x="2.2939%" y="1087.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (135 samples, 0.12%)</title><rect x="1.9667%" y="1157" width="0.1240%" height="15" fill="rgb(247,173,49)" fg:x="2141" fg:w="135"/><text x="2.2167%" y="1167.50"></text></g><g><title>event_listener::Inner::lock (20 samples, 0.02%)</title><rect x="2.0723%" y="1141" width="0.0184%" height="15" fill="rgb(224,114,35)" fg:x="2256" fg:w="20"/><text x="2.3223%" y="1151.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="2.0723%" y="1125" width="0.0184%" height="15" fill="rgb(245,159,27)" fg:x="2256" fg:w="20"/><text x="2.3223%" y="1135.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="2.0723%" y="1109" width="0.0184%" height="15" fill="rgb(245,172,44)" fg:x="2256" fg:w="20"/><text x="2.3223%" y="1119.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.02%)</title><rect x="2.0723%" y="1093" width="0.0184%" height="15" fill="rgb(236,23,11)" fg:x="2256" fg:w="20"/><text x="2.3223%" y="1103.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="2.0907%" y="1157" width="0.0129%" height="15" fill="rgb(205,117,38)" fg:x="2276" fg:w="14"/><text x="2.3407%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (26 samples, 0.02%)</title><rect x="2.1367%" y="1109" width="0.0239%" height="15" fill="rgb(237,72,25)" fg:x="2326" fg:w="26"/><text x="2.3867%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (74 samples, 0.07%)</title><rect x="2.1036%" y="1157" width="0.0680%" height="15" fill="rgb(244,70,9)" fg:x="2290" fg:w="74"/><text x="2.3536%" y="1167.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (64 samples, 0.06%)</title><rect x="2.1128%" y="1141" width="0.0588%" height="15" fill="rgb(217,125,39)" fg:x="2300" fg:w="64"/><text x="2.3628%" y="1151.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (49 samples, 0.05%)</title><rect x="2.1265%" y="1125" width="0.0450%" height="15" fill="rgb(235,36,10)" fg:x="2315" fg:w="49"/><text x="2.3765%" y="1135.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (46 samples, 0.04%)</title><rect x="2.1716%" y="1157" width="0.0423%" height="15" fill="rgb(251,123,47)" fg:x="2364" fg:w="46"/><text x="2.4216%" y="1167.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (28 samples, 0.03%)</title><rect x="2.1881%" y="1141" width="0.0257%" height="15" fill="rgb(221,13,13)" fg:x="2382" fg:w="28"/><text x="2.4381%" y="1151.50"></text></g><g><title>&lt;tremor_script::pdk::PdkEventPayload as core::convert::From&lt;tremor_script::srs::EventPayload&gt;&gt;::from (28 samples, 0.03%)</title><rect x="2.1881%" y="1125" width="0.0257%" height="15" fill="rgb(238,131,9)" fg:x="2382" fg:w="28"/><text x="2.4381%" y="1135.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (28 samples, 0.03%)</title><rect x="2.1881%" y="1109" width="0.0257%" height="15" fill="rgb(211,50,8)" fg:x="2382" fg:w="28"/><text x="2.4381%" y="1119.50"></text></g><g><title>&lt;tremor_script::pdk::PdkValueAndMeta as core::convert::From&lt;tremor_script::srs::ValueAndMeta&gt;&gt;::from (28 samples, 0.03%)</title><rect x="2.1881%" y="1093" width="0.0257%" height="15" fill="rgb(245,182,24)" fg:x="2382" fg:w="28"/><text x="2.4381%" y="1103.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (28 samples, 0.03%)</title><rect x="2.1881%" y="1077" width="0.0257%" height="15" fill="rgb(242,14,37)" fg:x="2382" fg:w="28"/><text x="2.4381%" y="1087.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (34 samples, 0.03%)</title><rect x="2.2138%" y="1157" width="0.0312%" height="15" fill="rgb(246,228,12)" fg:x="2410" fg:w="34"/><text x="2.4638%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (13 samples, 0.01%)</title><rect x="2.2450%" y="1157" width="0.0119%" height="15" fill="rgb(213,55,15)" fg:x="2444" fg:w="13"/><text x="2.4950%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (213 samples, 0.20%)</title><rect x="2.2579%" y="1157" width="0.1957%" height="15" fill="rgb(209,9,3)" fg:x="2458" fg:w="213"/><text x="2.5079%" y="1167.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (100 samples, 0.09%)</title><rect x="2.3617%" y="1141" width="0.0919%" height="15" fill="rgb(230,59,30)" fg:x="2571" fg:w="100"/><text x="2.6117%" y="1151.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (73 samples, 0.07%)</title><rect x="2.3865%" y="1125" width="0.0671%" height="15" fill="rgb(209,121,21)" fg:x="2598" fg:w="73"/><text x="2.6365%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.01%)</title><rect x="2.4407%" y="1109" width="0.0129%" height="15" fill="rgb(220,109,13)" fg:x="2657" fg:w="14"/><text x="2.6907%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="2.4811%" y="1141" width="0.0101%" height="15" fill="rgb(232,18,1)" fg:x="2701" fg:w="11"/><text x="2.7311%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="2.4811%" y="1125" width="0.0101%" height="15" fill="rgb(215,41,42)" fg:x="2701" fg:w="11"/><text x="2.7311%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="2.4811%" y="1109" width="0.0101%" height="15" fill="rgb(224,123,36)" fg:x="2701" fg:w="11"/><text x="2.7311%" y="1119.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="2.4811%" y="1093" width="0.0101%" height="15" fill="rgb(240,125,3)" fg:x="2701" fg:w="11"/><text x="2.7311%" y="1103.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="2.4811%" y="1077" width="0.0101%" height="15" fill="rgb(205,98,50)" fg:x="2701" fg:w="11"/><text x="2.7311%" y="1087.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (52 samples, 0.05%)</title><rect x="2.4536%" y="1157" width="0.0478%" height="15" fill="rgb(205,185,37)" fg:x="2671" fg:w="52"/><text x="2.7036%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.01%)</title><rect x="2.4912%" y="1141" width="0.0101%" height="15" fill="rgb(238,207,15)" fg:x="2712" fg:w="11"/><text x="2.7412%" y="1151.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (57 samples, 0.05%)</title><rect x="2.5013%" y="1157" width="0.0524%" height="15" fill="rgb(213,199,42)" fg:x="2723" fg:w="57"/><text x="2.7513%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="2.5344%" y="1141" width="0.0193%" height="15" fill="rgb(235,201,11)" fg:x="2759" fg:w="21"/><text x="2.7844%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (12 samples, 0.01%)</title><rect x="2.5427%" y="1125" width="0.0110%" height="15" fill="rgb(207,46,11)" fg:x="2768" fg:w="12"/><text x="2.7927%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (12 samples, 0.01%)</title><rect x="2.5427%" y="1109" width="0.0110%" height="15" fill="rgb(241,35,35)" fg:x="2768" fg:w="12"/><text x="2.7927%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="2.5427%" y="1093" width="0.0110%" height="15" fill="rgb(243,32,47)" fg:x="2768" fg:w="12"/><text x="2.7927%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="2.5427%" y="1077" width="0.0110%" height="15" fill="rgb(247,202,23)" fg:x="2768" fg:w="12"/><text x="2.7927%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="2.5427%" y="1061" width="0.0110%" height="15" fill="rgb(219,102,11)" fg:x="2768" fg:w="12"/><text x="2.7927%" y="1071.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="2.5427%" y="1045" width="0.0110%" height="15" fill="rgb(243,110,44)" fg:x="2768" fg:w="12"/><text x="2.7927%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="2.5427%" y="1029" width="0.0110%" height="15" fill="rgb(222,74,54)" fg:x="2768" fg:w="12"/><text x="2.7927%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="2.5831%" y="1157" width="0.0101%" height="15" fill="rgb(216,99,12)" fg:x="2812" fg:w="11"/><text x="2.8331%" y="1167.50"></text></g><g><title>___pthread_mutex_lock (55 samples, 0.05%)</title><rect x="2.5941%" y="1157" width="0.0505%" height="15" fill="rgb(226,22,26)" fg:x="2824" fg:w="55"/><text x="2.8441%" y="1167.50"></text></g><g><title>___pthread_rwlock_unlock (14 samples, 0.01%)</title><rect x="2.6474%" y="1157" width="0.0129%" height="15" fill="rgb(217,163,10)" fg:x="2882" fg:w="14"/><text x="2.8974%" y="1167.50"></text></g><g><title>__clock_gettime_2 (25 samples, 0.02%)</title><rect x="2.6602%" y="1157" width="0.0230%" height="15" fill="rgb(213,25,53)" fg:x="2896" fg:w="25"/><text x="2.9102%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (53 samples, 0.05%)</title><rect x="2.6915%" y="1157" width="0.0487%" height="15" fill="rgb(252,105,26)" fg:x="2930" fg:w="53"/><text x="2.9415%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (31 samples, 0.03%)</title><rect x="2.7438%" y="1157" width="0.0285%" height="15" fill="rgb(220,39,43)" fg:x="2987" fg:w="31"/><text x="2.9938%" y="1167.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (22 samples, 0.02%)</title><rect x="2.7843%" y="1157" width="0.0202%" height="15" fill="rgb(229,68,48)" fg:x="3031" fg:w="22"/><text x="3.0343%" y="1167.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (112 samples, 0.10%)</title><rect x="2.8045%" y="1157" width="0.1029%" height="15" fill="rgb(252,8,32)" fg:x="3053" fg:w="112"/><text x="3.0545%" y="1167.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (67 samples, 0.06%)</title><rect x="2.8458%" y="1141" width="0.0615%" height="15" fill="rgb(223,20,43)" fg:x="3098" fg:w="67"/><text x="3.0958%" y="1151.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (67 samples, 0.06%)</title><rect x="2.8458%" y="1125" width="0.0615%" height="15" fill="rgb(229,81,49)" fg:x="3098" fg:w="67"/><text x="3.0958%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (67 samples, 0.06%)</title><rect x="2.8458%" y="1109" width="0.0615%" height="15" fill="rgb(236,28,36)" fg:x="3098" fg:w="67"/><text x="3.0958%" y="1119.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (51 samples, 0.05%)</title><rect x="2.8605%" y="1093" width="0.0468%" height="15" fill="rgb(249,185,26)" fg:x="3114" fg:w="51"/><text x="3.1105%" y="1103.50"></text></g><g><title>core::ops::function::FnOnce::call_once (51 samples, 0.05%)</title><rect x="2.8605%" y="1077" width="0.0468%" height="15" fill="rgb(249,174,33)" fg:x="3114" fg:w="51"/><text x="3.1105%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (51 samples, 0.05%)</title><rect x="2.8605%" y="1061" width="0.0468%" height="15" fill="rgb(233,201,37)" fg:x="3114" fg:w="51"/><text x="3.1105%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (51 samples, 0.05%)</title><rect x="2.8605%" y="1045" width="0.0468%" height="15" fill="rgb(221,78,26)" fg:x="3114" fg:w="51"/><text x="3.1105%" y="1055.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (131 samples, 0.12%)</title><rect x="2.9083%" y="1157" width="0.1203%" height="15" fill="rgb(250,127,30)" fg:x="3166" fg:w="131"/><text x="3.1583%" y="1167.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (105 samples, 0.10%)</title><rect x="2.9322%" y="1141" width="0.0965%" height="15" fill="rgb(230,49,44)" fg:x="3192" fg:w="105"/><text x="3.1822%" y="1151.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (105 samples, 0.10%)</title><rect x="2.9322%" y="1125" width="0.0965%" height="15" fill="rgb(229,67,23)" fg:x="3192" fg:w="105"/><text x="3.1822%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="3.0644%" y="949" width="0.0138%" height="15" fill="rgb(249,83,47)" fg:x="3336" fg:w="15"/><text x="3.3144%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="3.0644%" y="933" width="0.0138%" height="15" fill="rgb(215,43,3)" fg:x="3336" fg:w="15"/><text x="3.3144%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.01%)</title><rect x="3.0644%" y="917" width="0.0138%" height="15" fill="rgb(238,154,13)" fg:x="3336" fg:w="15"/><text x="3.3144%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="3.0644%" y="901" width="0.0138%" height="15" fill="rgb(219,56,2)" fg:x="3336" fg:w="15"/><text x="3.3144%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="3.0644%" y="885" width="0.0138%" height="15" fill="rgb(233,0,4)" fg:x="3336" fg:w="15"/><text x="3.3144%" y="895.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="3.0644%" y="869" width="0.0138%" height="15" fill="rgb(235,30,7)" fg:x="3336" fg:w="15"/><text x="3.3144%" y="879.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="3.0644%" y="853" width="0.0138%" height="15" fill="rgb(250,79,13)" fg:x="3336" fg:w="15"/><text x="3.3144%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="3.0644%" y="837" width="0.0138%" height="15" fill="rgb(211,146,34)" fg:x="3336" fg:w="15"/><text x="3.3144%" y="847.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="3.0644%" y="1061" width="0.0211%" height="15" fill="rgb(228,22,38)" fg:x="3336" fg:w="23"/><text x="3.3144%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (23 samples, 0.02%)</title><rect x="3.0644%" y="1045" width="0.0211%" height="15" fill="rgb(235,168,5)" fg:x="3336" fg:w="23"/><text x="3.3144%" y="1055.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (23 samples, 0.02%)</title><rect x="3.0644%" y="1029" width="0.0211%" height="15" fill="rgb(221,155,16)" fg:x="3336" fg:w="23"/><text x="3.3144%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (23 samples, 0.02%)</title><rect x="3.0644%" y="1013" width="0.0211%" height="15" fill="rgb(215,215,53)" fg:x="3336" fg:w="23"/><text x="3.3144%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.02%)</title><rect x="3.0644%" y="997" width="0.0211%" height="15" fill="rgb(223,4,10)" fg:x="3336" fg:w="23"/><text x="3.3144%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.02%)</title><rect x="3.0644%" y="981" width="0.0211%" height="15" fill="rgb(234,103,6)" fg:x="3336" fg:w="23"/><text x="3.3144%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.02%)</title><rect x="3.0644%" y="965" width="0.0211%" height="15" fill="rgb(227,97,0)" fg:x="3336" fg:w="23"/><text x="3.3144%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (68 samples, 0.06%)</title><rect x="3.0286%" y="1157" width="0.0625%" height="15" fill="rgb(234,150,53)" fg:x="3297" fg:w="68"/><text x="3.2786%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (29 samples, 0.03%)</title><rect x="3.0644%" y="1141" width="0.0266%" height="15" fill="rgb(228,201,54)" fg:x="3336" fg:w="29"/><text x="3.3144%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (29 samples, 0.03%)</title><rect x="3.0644%" y="1125" width="0.0266%" height="15" fill="rgb(222,22,37)" fg:x="3336" fg:w="29"/><text x="3.3144%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29 samples, 0.03%)</title><rect x="3.0644%" y="1109" width="0.0266%" height="15" fill="rgb(237,53,32)" fg:x="3336" fg:w="29"/><text x="3.3144%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (29 samples, 0.03%)</title><rect x="3.0644%" y="1093" width="0.0266%" height="15" fill="rgb(233,25,53)" fg:x="3336" fg:w="29"/><text x="3.3144%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29 samples, 0.03%)</title><rect x="3.0644%" y="1077" width="0.0266%" height="15" fill="rgb(210,40,34)" fg:x="3336" fg:w="29"/><text x="3.3144%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.07%)</title><rect x="3.2151%" y="1093" width="0.0735%" height="15" fill="rgb(241,220,44)" fg:x="3500" fg:w="80"/><text x="3.4651%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (80 samples, 0.07%)</title><rect x="3.2151%" y="1077" width="0.0735%" height="15" fill="rgb(235,28,35)" fg:x="3500" fg:w="80"/><text x="3.4651%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (80 samples, 0.07%)</title><rect x="3.2151%" y="1061" width="0.0735%" height="15" fill="rgb(210,56,17)" fg:x="3500" fg:w="80"/><text x="3.4651%" y="1071.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (80 samples, 0.07%)</title><rect x="3.2151%" y="1045" width="0.0735%" height="15" fill="rgb(224,130,29)" fg:x="3500" fg:w="80"/><text x="3.4651%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (88 samples, 0.08%)</title><rect x="3.2151%" y="1109" width="0.0808%" height="15" fill="rgb(235,212,8)" fg:x="3500" fg:w="88"/><text x="3.4651%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="3.2959%" y="1093" width="0.0514%" height="15" fill="rgb(223,33,50)" fg:x="3588" fg:w="56"/><text x="3.5459%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (56 samples, 0.05%)</title><rect x="3.2959%" y="1077" width="0.0514%" height="15" fill="rgb(219,149,13)" fg:x="3588" fg:w="56"/><text x="3.5459%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (56 samples, 0.05%)</title><rect x="3.2959%" y="1061" width="0.0514%" height="15" fill="rgb(250,156,29)" fg:x="3588" fg:w="56"/><text x="3.5459%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (56 samples, 0.05%)</title><rect x="3.2959%" y="1045" width="0.0514%" height="15" fill="rgb(216,193,19)" fg:x="3588" fg:w="56"/><text x="3.5459%" y="1055.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (56 samples, 0.05%)</title><rect x="3.2959%" y="1029" width="0.0514%" height="15" fill="rgb(216,135,14)" fg:x="3588" fg:w="56"/><text x="3.5459%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (75 samples, 0.07%)</title><rect x="3.2959%" y="1109" width="0.0689%" height="15" fill="rgb(241,47,5)" fg:x="3588" fg:w="75"/><text x="3.5459%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (19 samples, 0.02%)</title><rect x="3.3474%" y="1093" width="0.0175%" height="15" fill="rgb(233,42,35)" fg:x="3644" fg:w="19"/><text x="3.5974%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="3.3474%" y="1077" width="0.0175%" height="15" fill="rgb(231,13,6)" fg:x="3644" fg:w="19"/><text x="3.5974%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="3.3474%" y="1061" width="0.0175%" height="15" fill="rgb(207,181,40)" fg:x="3644" fg:w="19"/><text x="3.5974%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="3.3474%" y="1045" width="0.0175%" height="15" fill="rgb(254,173,49)" fg:x="3644" fg:w="19"/><text x="3.5974%" y="1055.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="3.3474%" y="1029" width="0.0175%" height="15" fill="rgb(221,1,38)" fg:x="3644" fg:w="19"/><text x="3.5974%" y="1039.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="3.3474%" y="1013" width="0.0175%" height="15" fill="rgb(206,124,46)" fg:x="3644" fg:w="19"/><text x="3.5974%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (317 samples, 0.29%)</title><rect x="3.0911%" y="1157" width="0.2912%" height="15" fill="rgb(249,21,11)" fg:x="3365" fg:w="317"/><text x="3.3411%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (182 samples, 0.17%)</title><rect x="3.2151%" y="1141" width="0.1672%" height="15" fill="rgb(222,201,40)" fg:x="3500" fg:w="182"/><text x="3.4651%" y="1151.50"></text></g><g><title>core::mem::drop (182 samples, 0.17%)</title><rect x="3.2151%" y="1125" width="0.1672%" height="15" fill="rgb(235,61,29)" fg:x="3500" fg:w="182"/><text x="3.4651%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="3.3648%" y="1109" width="0.0175%" height="15" fill="rgb(219,207,3)" fg:x="3663" fg:w="19"/><text x="3.6148%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="3.3648%" y="1093" width="0.0175%" height="15" fill="rgb(222,56,46)" fg:x="3663" fg:w="19"/><text x="3.6148%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (19 samples, 0.02%)</title><rect x="3.3648%" y="1077" width="0.0175%" height="15" fill="rgb(239,76,54)" fg:x="3663" fg:w="19"/><text x="3.6148%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="3.3648%" y="1061" width="0.0175%" height="15" fill="rgb(231,124,27)" fg:x="3663" fg:w="19"/><text x="3.6148%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (19 samples, 0.02%)</title><rect x="3.3648%" y="1045" width="0.0175%" height="15" fill="rgb(249,195,6)" fg:x="3663" fg:w="19"/><text x="3.6148%" y="1055.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (26 samples, 0.02%)</title><rect x="3.3924%" y="1157" width="0.0239%" height="15" fill="rgb(237,174,47)" fg:x="3693" fg:w="26"/><text x="3.6424%" y="1167.50"></text></g><g><title>async_executor::State::notify (11 samples, 0.01%)</title><rect x="3.4236%" y="1157" width="0.0101%" height="15" fill="rgb(206,201,31)" fg:x="3727" fg:w="11"/><text x="3.6736%" y="1167.50"></text></g><g><title>async_executor::Ticker::sleep (40 samples, 0.04%)</title><rect x="3.4337%" y="1157" width="0.0367%" height="15" fill="rgb(231,57,52)" fg:x="3738" fg:w="40"/><text x="3.6837%" y="1167.50"></text></g><g><title>async_executor::Ticker::wake (13 samples, 0.01%)</title><rect x="3.4704%" y="1157" width="0.0119%" height="15" fill="rgb(248,177,22)" fg:x="3778" fg:w="13"/><text x="3.7204%" y="1167.50"></text></g><g><title>async_executor::steal (80 samples, 0.07%)</title><rect x="3.4824%" y="1157" width="0.0735%" height="15" fill="rgb(215,211,37)" fg:x="3791" fg:w="80"/><text x="3.7324%" y="1167.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (15 samples, 0.01%)</title><rect x="3.5559%" y="1157" width="0.0138%" height="15" fill="rgb(241,128,51)" fg:x="3871" fg:w="15"/><text x="3.8059%" y="1167.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (110 samples, 0.10%)</title><rect x="3.5697%" y="1157" width="0.1010%" height="15" fill="rgb(227,165,31)" fg:x="3886" fg:w="110"/><text x="3.8197%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (22 samples, 0.02%)</title><rect x="3.6808%" y="1157" width="0.0202%" height="15" fill="rgb(228,167,24)" fg:x="4007" fg:w="22"/><text x="3.9308%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (113 samples, 0.10%)</title><rect x="3.7019%" y="1157" width="0.1038%" height="15" fill="rgb(228,143,12)" fg:x="4030" fg:w="113"/><text x="3.9519%" y="1167.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (14 samples, 0.01%)</title><rect x="3.7929%" y="1141" width="0.0129%" height="15" fill="rgb(249,149,8)" fg:x="4129" fg:w="14"/><text x="4.0429%" y="1151.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="3.7929%" y="1125" width="0.0129%" height="15" fill="rgb(243,35,44)" fg:x="4129" fg:w="14"/><text x="4.0429%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (107 samples, 0.10%)</title><rect x="3.8057%" y="1157" width="0.0983%" height="15" fill="rgb(246,89,9)" fg:x="4143" fg:w="107"/><text x="4.0557%" y="1167.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (17 samples, 0.02%)</title><rect x="3.9040%" y="1157" width="0.0156%" height="15" fill="rgb(233,213,13)" fg:x="4250" fg:w="17"/><text x="4.1540%" y="1167.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (14 samples, 0.01%)</title><rect x="3.9196%" y="1157" width="0.0129%" height="15" fill="rgb(233,141,41)" fg:x="4267" fg:w="14"/><text x="4.1696%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (57 samples, 0.05%)</title><rect x="3.9325%" y="1157" width="0.0524%" height="15" fill="rgb(239,167,4)" fg:x="4281" fg:w="57"/><text x="4.1825%" y="1167.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="3.9509%" y="1141" width="0.0340%" height="15" fill="rgb(209,217,16)" fg:x="4301" fg:w="37"/><text x="4.2009%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (47 samples, 0.04%)</title><rect x="3.9849%" y="1157" width="0.0432%" height="15" fill="rgb(219,88,35)" fg:x="4338" fg:w="47"/><text x="4.2349%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt; (47 samples, 0.04%)</title><rect x="3.9849%" y="1141" width="0.0432%" height="15" fill="rgb(220,193,23)" fg:x="4338" fg:w="47"/><text x="4.2349%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="4.0280%" y="1157" width="0.0175%" height="15" fill="rgb(230,90,52)" fg:x="4385" fg:w="19"/><text x="4.2780%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (24 samples, 0.02%)</title><rect x="4.0455%" y="1157" width="0.0220%" height="15" fill="rgb(252,106,19)" fg:x="4404" fg:w="24"/><text x="4.2955%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="4.0675%" y="1157" width="0.0101%" height="15" fill="rgb(206,74,20)" fg:x="4428" fg:w="11"/><text x="4.3175%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (41 samples, 0.04%)</title><rect x="4.0776%" y="1157" width="0.0377%" height="15" fill="rgb(230,138,44)" fg:x="4439" fg:w="41"/><text x="4.3276%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (41 samples, 0.04%)</title><rect x="4.0776%" y="1141" width="0.0377%" height="15" fill="rgb(235,182,43)" fg:x="4439" fg:w="41"/><text x="4.3276%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="4.1153%" y="1157" width="0.0101%" height="15" fill="rgb(242,16,51)" fg:x="4480" fg:w="11"/><text x="4.3653%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (189 samples, 0.17%)</title><rect x="4.1291%" y="1157" width="0.1736%" height="15" fill="rgb(248,9,4)" fg:x="4495" fg:w="189"/><text x="4.3791%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (23 samples, 0.02%)</title><rect x="4.3045%" y="1109" width="0.0211%" height="15" fill="rgb(210,31,22)" fg:x="4686" fg:w="23"/><text x="4.5545%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (23 samples, 0.02%)</title><rect x="4.3045%" y="1093" width="0.0211%" height="15" fill="rgb(239,54,39)" fg:x="4686" fg:w="23"/><text x="4.5545%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (23 samples, 0.02%)</title><rect x="4.3045%" y="1077" width="0.0211%" height="15" fill="rgb(230,99,41)" fg:x="4686" fg:w="23"/><text x="4.5545%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (29 samples, 0.03%)</title><rect x="4.3045%" y="1141" width="0.0266%" height="15" fill="rgb(253,106,12)" fg:x="4686" fg:w="29"/><text x="4.5545%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (29 samples, 0.03%)</title><rect x="4.3045%" y="1125" width="0.0266%" height="15" fill="rgb(213,46,41)" fg:x="4686" fg:w="29"/><text x="4.5545%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (20 samples, 0.02%)</title><rect x="4.3312%" y="1141" width="0.0184%" height="15" fill="rgb(215,133,35)" fg:x="4715" fg:w="20"/><text x="4.5812%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (20 samples, 0.02%)</title><rect x="4.3312%" y="1125" width="0.0184%" height="15" fill="rgb(213,28,5)" fg:x="4715" fg:w="20"/><text x="4.5812%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (20 samples, 0.02%)</title><rect x="4.3312%" y="1109" width="0.0184%" height="15" fill="rgb(215,77,49)" fg:x="4715" fg:w="20"/><text x="4.5812%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (27 samples, 0.02%)</title><rect x="4.3495%" y="1125" width="0.0248%" height="15" fill="rgb(248,100,22)" fg:x="4735" fg:w="27"/><text x="4.5995%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (27 samples, 0.02%)</title><rect x="4.3495%" y="1109" width="0.0248%" height="15" fill="rgb(208,67,9)" fg:x="4735" fg:w="27"/><text x="4.5995%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (98 samples, 0.09%)</title><rect x="4.3027%" y="1157" width="0.0900%" height="15" fill="rgb(219,133,21)" fg:x="4684" fg:w="98"/><text x="4.5527%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (47 samples, 0.04%)</title><rect x="4.3495%" y="1141" width="0.0432%" height="15" fill="rgb(246,46,29)" fg:x="4735" fg:w="47"/><text x="4.5995%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (20 samples, 0.02%)</title><rect x="4.3743%" y="1125" width="0.0184%" height="15" fill="rgb(246,185,52)" fg:x="4762" fg:w="20"/><text x="4.6243%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (199 samples, 0.18%)</title><rect x="4.3936%" y="1157" width="0.1828%" height="15" fill="rgb(252,136,11)" fg:x="4783" fg:w="199"/><text x="4.6436%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (45 samples, 0.04%)</title><rect x="4.5351%" y="1141" width="0.0413%" height="15" fill="rgb(219,138,53)" fg:x="4937" fg:w="45"/><text x="4.7851%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (45 samples, 0.04%)</title><rect x="4.5351%" y="1125" width="0.0413%" height="15" fill="rgb(211,51,23)" fg:x="4937" fg:w="45"/><text x="4.7851%" y="1135.50"></text></g><g><title>event_listener::Event::inner (16 samples, 0.01%)</title><rect x="4.5810%" y="1141" width="0.0147%" height="15" fill="rgb(247,221,28)" fg:x="4987" fg:w="16"/><text x="4.8310%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (16 samples, 0.01%)</title><rect x="4.5810%" y="1125" width="0.0147%" height="15" fill="rgb(251,222,45)" fg:x="4987" fg:w="16"/><text x="4.8310%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.01%)</title><rect x="4.5810%" y="1109" width="0.0147%" height="15" fill="rgb(217,162,53)" fg:x="4987" fg:w="16"/><text x="4.8310%" y="1119.50"></text></g><g><title>event_listener::Event::listen (21 samples, 0.02%)</title><rect x="4.5774%" y="1157" width="0.0193%" height="15" fill="rgb(229,93,14)" fg:x="4983" fg:w="21"/><text x="4.8274%" y="1167.50"></text></g><g><title>event_listener::Event::notify (183 samples, 0.17%)</title><rect x="4.5966%" y="1157" width="0.1681%" height="15" fill="rgb(209,67,49)" fg:x="5004" fg:w="183"/><text x="4.8466%" y="1167.50"></text></g><g><title>event_listener::full_fence (68 samples, 0.06%)</title><rect x="4.7023%" y="1141" width="0.0625%" height="15" fill="rgb(213,87,29)" fg:x="5119" fg:w="68"/><text x="4.9523%" y="1151.50"></text></g><g><title>event_listener::List::notify (27 samples, 0.02%)</title><rect x="4.7647%" y="1157" width="0.0248%" height="15" fill="rgb(205,151,52)" fg:x="5187" fg:w="27"/><text x="5.0147%" y="1167.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (52 samples, 0.05%)</title><rect x="4.7896%" y="1157" width="0.0478%" height="15" fill="rgb(253,215,39)" fg:x="5214" fg:w="52"/><text x="5.0396%" y="1167.50"></text></g><g><title>parking::Inner::park (52 samples, 0.05%)</title><rect x="4.8456%" y="1157" width="0.0478%" height="15" fill="rgb(221,220,41)" fg:x="5275" fg:w="52"/><text x="5.0956%" y="1167.50"></text></g><g><title>parking::Unparker::unpark (23 samples, 0.02%)</title><rect x="4.8934%" y="1157" width="0.0211%" height="15" fill="rgb(218,133,21)" fg:x="5327" fg:w="23"/><text x="5.1434%" y="1167.50"></text></g><g><title>polling::epoll::Poller::modify (23 samples, 0.02%)</title><rect x="4.9172%" y="1157" width="0.0211%" height="15" fill="rgb(221,193,43)" fg:x="5353" fg:w="23"/><text x="5.1672%" y="1167.50"></text></g><g><title>rust_alloc (60 samples, 0.06%)</title><rect x="4.9384%" y="1157" width="0.0551%" height="15" fill="rgb(240,128,52)" fg:x="5376" fg:w="60"/><text x="5.1884%" y="1167.50"></text></g><g><title>rust_dealloc (17 samples, 0.02%)</title><rect x="4.9935%" y="1157" width="0.0156%" height="15" fill="rgb(253,114,12)" fg:x="5436" fg:w="17"/><text x="5.2435%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (46 samples, 0.04%)</title><rect x="5.0256%" y="1157" width="0.0423%" height="15" fill="rgb(215,223,47)" fg:x="5471" fg:w="46"/><text x="5.2756%" y="1167.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (40 samples, 0.04%)</title><rect x="5.0688%" y="1157" width="0.0367%" height="15" fill="rgb(248,225,23)" fg:x="5518" fg:w="40"/><text x="5.3188%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (26 samples, 0.02%)</title><rect x="5.1055%" y="1157" width="0.0239%" height="15" fill="rgb(250,108,0)" fg:x="5558" fg:w="26"/><text x="5.3555%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.01%)</title><rect x="5.1193%" y="1141" width="0.0101%" height="15" fill="rgb(228,208,7)" fg:x="5573" fg:w="11"/><text x="5.3693%" y="1151.50"></text></g><g><title>tremor_common::time::nanotime (59 samples, 0.05%)</title><rect x="5.1294%" y="1157" width="0.0542%" height="15" fill="rgb(244,45,10)" fg:x="5584" fg:w="59"/><text x="5.3794%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (59 samples, 0.05%)</title><rect x="5.1294%" y="1141" width="0.0542%" height="15" fill="rgb(207,125,25)" fg:x="5584" fg:w="59"/><text x="5.3794%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (59 samples, 0.05%)</title><rect x="5.1294%" y="1125" width="0.0542%" height="15" fill="rgb(210,195,18)" fg:x="5584" fg:w="59"/><text x="5.3794%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (59 samples, 0.05%)</title><rect x="5.1294%" y="1109" width="0.0542%" height="15" fill="rgb(249,80,12)" fg:x="5584" fg:w="59"/><text x="5.3794%" y="1119.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (52 samples, 0.05%)</title><rect x="5.1836%" y="1157" width="0.0478%" height="15" fill="rgb(221,65,9)" fg:x="5643" fg:w="52"/><text x="5.4336%" y="1167.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.01%)</title><rect x="5.2167%" y="1141" width="0.0147%" height="15" fill="rgb(235,49,36)" fg:x="5679" fg:w="16"/><text x="5.4667%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (78 samples, 0.07%)</title><rect x="5.2397%" y="1157" width="0.0717%" height="15" fill="rgb(225,32,20)" fg:x="5704" fg:w="78"/><text x="5.4897%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (26 samples, 0.02%)</title><rect x="5.2874%" y="1141" width="0.0239%" height="15" fill="rgb(215,141,46)" fg:x="5756" fg:w="26"/><text x="5.5374%" y="1151.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (26 samples, 0.02%)</title><rect x="5.2874%" y="1125" width="0.0239%" height="15" fill="rgb(250,160,47)" fg:x="5756" fg:w="26"/><text x="5.5374%" y="1135.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (26 samples, 0.02%)</title><rect x="5.2874%" y="1109" width="0.0239%" height="15" fill="rgb(216,222,40)" fg:x="5756" fg:w="26"/><text x="5.5374%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (26 samples, 0.02%)</title><rect x="5.2874%" y="1093" width="0.0239%" height="15" fill="rgb(234,217,39)" fg:x="5756" fg:w="26"/><text x="5.5374%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (26 samples, 0.02%)</title><rect x="5.2874%" y="1077" width="0.0239%" height="15" fill="rgb(207,178,40)" fg:x="5756" fg:w="26"/><text x="5.5374%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.01%)</title><rect x="5.2985%" y="1061" width="0.0129%" height="15" fill="rgb(221,136,13)" fg:x="5768" fg:w="14"/><text x="5.5485%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="5.2985%" y="1045" width="0.0129%" height="15" fill="rgb(249,199,10)" fg:x="5768" fg:w="14"/><text x="5.5485%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="5.2985%" y="1029" width="0.0129%" height="15" fill="rgb(249,222,13)" fg:x="5768" fg:w="14"/><text x="5.5485%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="5.2985%" y="1013" width="0.0129%" height="15" fill="rgb(244,185,38)" fg:x="5768" fg:w="14"/><text x="5.5485%" y="1023.50"></text></g><g><title>__rg_alloc (14 samples, 0.01%)</title><rect x="5.2985%" y="997" width="0.0129%" height="15" fill="rgb(236,202,9)" fg:x="5768" fg:w="14"/><text x="5.5485%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.01%)</title><rect x="5.2985%" y="981" width="0.0129%" height="15" fill="rgb(250,229,37)" fg:x="5768" fg:w="14"/><text x="5.5485%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.04%)</title><rect x="5.3729%" y="1141" width="0.0423%" height="15" fill="rgb(206,174,23)" fg:x="5849" fg:w="46"/><text x="5.6229%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (46 samples, 0.04%)</title><rect x="5.3729%" y="1125" width="0.0423%" height="15" fill="rgb(211,33,43)" fg:x="5849" fg:w="46"/><text x="5.6229%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (132 samples, 0.12%)</title><rect x="5.3113%" y="1157" width="0.1213%" height="15" fill="rgb(245,58,50)" fg:x="5782" fg:w="132"/><text x="5.5613%" y="1167.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (14 samples, 0.01%)</title><rect x="5.4197%" y="1141" width="0.0129%" height="15" fill="rgb(244,68,36)" fg:x="5900" fg:w="14"/><text x="5.6697%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (22 samples, 0.02%)</title><rect x="5.4326%" y="1157" width="0.0202%" height="15" fill="rgb(232,229,15)" fg:x="5914" fg:w="22"/><text x="5.6826%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (11 samples, 0.01%)</title><rect x="5.4427%" y="1141" width="0.0101%" height="15" fill="rgb(254,30,23)" fg:x="5925" fg:w="11"/><text x="5.6927%" y="1151.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (11 samples, 0.01%)</title><rect x="5.4427%" y="1125" width="0.0101%" height="15" fill="rgb(235,160,14)" fg:x="5925" fg:w="11"/><text x="5.6927%" y="1135.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="5.4427%" y="1109" width="0.0101%" height="15" fill="rgb(212,155,44)" fg:x="5925" fg:w="11"/><text x="5.6927%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="5.4427%" y="1093" width="0.0101%" height="15" fill="rgb(226,2,50)" fg:x="5925" fg:w="11"/><text x="5.6927%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="5.4427%" y="1077" width="0.0101%" height="15" fill="rgb(234,177,6)" fg:x="5925" fg:w="11"/><text x="5.6927%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="5.4427%" y="1061" width="0.0101%" height="15" fill="rgb(217,24,9)" fg:x="5925" fg:w="11"/><text x="5.6927%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="5.4427%" y="1045" width="0.0101%" height="15" fill="rgb(220,13,46)" fg:x="5925" fg:w="11"/><text x="5.6927%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="5.4427%" y="1029" width="0.0101%" height="15" fill="rgb(239,221,27)" fg:x="5925" fg:w="11"/><text x="5.6927%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="5.4427%" y="1013" width="0.0101%" height="15" fill="rgb(222,198,25)" fg:x="5925" fg:w="11"/><text x="5.6927%" y="1023.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="5.4427%" y="997" width="0.0101%" height="15" fill="rgb(211,99,13)" fg:x="5925" fg:w="11"/><text x="5.6927%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="5.4427%" y="981" width="0.0101%" height="15" fill="rgb(232,111,31)" fg:x="5925" fg:w="11"/><text x="5.6927%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (15 samples, 0.01%)</title><rect x="5.4546%" y="1157" width="0.0138%" height="15" fill="rgb(245,82,37)" fg:x="5938" fg:w="15"/><text x="5.7046%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="5.5529%" y="1013" width="0.0119%" height="15" fill="rgb(227,149,46)" fg:x="6045" fg:w="13"/><text x="5.8029%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="5.5529%" y="997" width="0.0119%" height="15" fill="rgb(218,36,50)" fg:x="6045" fg:w="13"/><text x="5.8029%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="5.5529%" y="981" width="0.0119%" height="15" fill="rgb(226,80,48)" fg:x="6045" fg:w="13"/><text x="5.8029%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="5.5529%" y="965" width="0.0119%" height="15" fill="rgb(238,224,15)" fg:x="6045" fg:w="13"/><text x="5.8029%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="5.5529%" y="949" width="0.0119%" height="15" fill="rgb(241,136,10)" fg:x="6045" fg:w="13"/><text x="5.8029%" y="959.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="5.5529%" y="933" width="0.0119%" height="15" fill="rgb(208,32,45)" fg:x="6045" fg:w="13"/><text x="5.8029%" y="943.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="5.5529%" y="917" width="0.0119%" height="15" fill="rgb(207,135,9)" fg:x="6045" fg:w="13"/><text x="5.8029%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="5.5529%" y="901" width="0.0119%" height="15" fill="rgb(206,86,44)" fg:x="6045" fg:w="13"/><text x="5.8029%" y="911.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="5.5529%" y="1141" width="0.0285%" height="15" fill="rgb(245,177,15)" fg:x="6045" fg:w="31"/><text x="5.8029%" y="1151.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="5.5529%" y="1125" width="0.0285%" height="15" fill="rgb(206,64,50)" fg:x="6045" fg:w="31"/><text x="5.8029%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (31 samples, 0.03%)</title><rect x="5.5529%" y="1109" width="0.0285%" height="15" fill="rgb(234,36,40)" fg:x="6045" fg:w="31"/><text x="5.8029%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (31 samples, 0.03%)</title><rect x="5.5529%" y="1093" width="0.0285%" height="15" fill="rgb(213,64,8)" fg:x="6045" fg:w="31"/><text x="5.8029%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (31 samples, 0.03%)</title><rect x="5.5529%" y="1077" width="0.0285%" height="15" fill="rgb(210,75,36)" fg:x="6045" fg:w="31"/><text x="5.8029%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 0.03%)</title><rect x="5.5529%" y="1061" width="0.0285%" height="15" fill="rgb(229,88,21)" fg:x="6045" fg:w="31"/><text x="5.8029%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (31 samples, 0.03%)</title><rect x="5.5529%" y="1045" width="0.0285%" height="15" fill="rgb(252,204,47)" fg:x="6045" fg:w="31"/><text x="5.8029%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 0.03%)</title><rect x="5.5529%" y="1029" width="0.0285%" height="15" fill="rgb(208,77,27)" fg:x="6045" fg:w="31"/><text x="5.8029%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (18 samples, 0.02%)</title><rect x="5.5648%" y="1013" width="0.0165%" height="15" fill="rgb(221,76,26)" fg:x="6058" fg:w="18"/><text x="5.8148%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.02%)</title><rect x="5.5648%" y="997" width="0.0165%" height="15" fill="rgb(225,139,18)" fg:x="6058" fg:w="18"/><text x="5.8148%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="5.5878%" y="1141" width="0.0101%" height="15" fill="rgb(230,137,11)" fg:x="6083" fg:w="11"/><text x="5.8378%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="5.5878%" y="1125" width="0.0101%" height="15" fill="rgb(212,28,1)" fg:x="6083" fg:w="11"/><text x="5.8378%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="5.5878%" y="1109" width="0.0101%" height="15" fill="rgb(248,164,17)" fg:x="6083" fg:w="11"/><text x="5.8378%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="5.5878%" y="1093" width="0.0101%" height="15" fill="rgb(222,171,42)" fg:x="6083" fg:w="11"/><text x="5.8378%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="5.5878%" y="1077" width="0.0101%" height="15" fill="rgb(243,84,45)" fg:x="6083" fg:w="11"/><text x="5.8378%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="5.5878%" y="1061" width="0.0101%" height="15" fill="rgb(252,49,23)" fg:x="6083" fg:w="11"/><text x="5.8378%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="5.5878%" y="1045" width="0.0101%" height="15" fill="rgb(215,19,7)" fg:x="6083" fg:w="11"/><text x="5.8378%" y="1055.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="5.5878%" y="1029" width="0.0101%" height="15" fill="rgb(238,81,41)" fg:x="6083" fg:w="11"/><text x="5.8378%" y="1039.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="5.5878%" y="1013" width="0.0101%" height="15" fill="rgb(210,199,37)" fg:x="6083" fg:w="11"/><text x="5.8378%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="5.5979%" y="1141" width="0.0101%" height="15" fill="rgb(244,192,49)" fg:x="6094" fg:w="11"/><text x="5.8479%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="5.5979%" y="1125" width="0.0101%" height="15" fill="rgb(226,211,11)" fg:x="6094" fg:w="11"/><text x="5.8479%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (11 samples, 0.01%)</title><rect x="5.5979%" y="1109" width="0.0101%" height="15" fill="rgb(236,162,54)" fg:x="6094" fg:w="11"/><text x="5.8479%" y="1119.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="5.5979%" y="1093" width="0.0101%" height="15" fill="rgb(220,229,9)" fg:x="6094" fg:w="11"/><text x="5.8479%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="5.5979%" y="1077" width="0.0101%" height="15" fill="rgb(250,87,22)" fg:x="6094" fg:w="11"/><text x="5.8479%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="5.5979%" y="1061" width="0.0101%" height="15" fill="rgb(239,43,17)" fg:x="6094" fg:w="11"/><text x="5.8479%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="5.5979%" y="1045" width="0.0101%" height="15" fill="rgb(231,177,25)" fg:x="6094" fg:w="11"/><text x="5.8479%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="5.5979%" y="1029" width="0.0101%" height="15" fill="rgb(219,179,1)" fg:x="6094" fg:w="11"/><text x="5.8479%" y="1039.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="5.5979%" y="1013" width="0.0101%" height="15" fill="rgb(238,219,53)" fg:x="6094" fg:w="11"/><text x="5.8479%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="5.5979%" y="997" width="0.0101%" height="15" fill="rgb(232,167,36)" fg:x="6094" fg:w="11"/><text x="5.8479%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (12 samples, 0.01%)</title><rect x="5.6080%" y="1125" width="0.0110%" height="15" fill="rgb(244,19,51)" fg:x="6105" fg:w="12"/><text x="5.8580%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="5.6080%" y="1109" width="0.0110%" height="15" fill="rgb(224,6,22)" fg:x="6105" fg:w="12"/><text x="5.8580%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (12 samples, 0.01%)</title><rect x="5.6080%" y="1093" width="0.0110%" height="15" fill="rgb(224,145,5)" fg:x="6105" fg:w="12"/><text x="5.8580%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (174 samples, 0.16%)</title><rect x="5.4684%" y="1157" width="0.1598%" height="15" fill="rgb(234,130,49)" fg:x="5953" fg:w="174"/><text x="5.7184%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (22 samples, 0.02%)</title><rect x="5.6080%" y="1141" width="0.0202%" height="15" fill="rgb(254,6,2)" fg:x="6105" fg:w="22"/><text x="5.8580%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (34 samples, 0.03%)</title><rect x="5.6282%" y="1157" width="0.0312%" height="15" fill="rgb(208,96,46)" fg:x="6127" fg:w="34"/><text x="5.8782%" y="1167.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="5.7238%" y="1141" width="0.0110%" height="15" fill="rgb(239,3,39)" fg:x="6231" fg:w="12"/><text x="5.9738%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.02%)</title><rect x="5.7412%" y="1109" width="0.0175%" height="15" fill="rgb(233,210,1)" fg:x="6250" fg:w="19"/><text x="5.9912%" y="1119.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="5.7412%" y="1093" width="0.0175%" height="15" fill="rgb(244,137,37)" fg:x="6250" fg:w="19"/><text x="5.9912%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (123 samples, 0.11%)</title><rect x="5.6650%" y="1157" width="0.1130%" height="15" fill="rgb(240,136,2)" fg:x="6167" fg:w="123"/><text x="5.9150%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.04%)</title><rect x="5.7348%" y="1141" width="0.0432%" height="15" fill="rgb(239,18,37)" fg:x="6243" fg:w="47"/><text x="5.9848%" y="1151.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (47 samples, 0.04%)</title><rect x="5.7348%" y="1125" width="0.0432%" height="15" fill="rgb(218,185,22)" fg:x="6243" fg:w="47"/><text x="5.9848%" y="1135.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (11 samples, 0.01%)</title><rect x="5.7679%" y="1109" width="0.0101%" height="15" fill="rgb(225,218,4)" fg:x="6279" fg:w="11"/><text x="6.0179%" y="1119.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (11 samples, 0.01%)</title><rect x="5.7679%" y="1093" width="0.0101%" height="15" fill="rgb(230,182,32)" fg:x="6279" fg:w="11"/><text x="6.0179%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="5.7679%" y="1077" width="0.0101%" height="15" fill="rgb(242,56,43)" fg:x="6279" fg:w="11"/><text x="6.0179%" y="1087.50"></text></g><g><title>core::ptr::write (11 samples, 0.01%)</title><rect x="5.7679%" y="1061" width="0.0101%" height="15" fill="rgb(233,99,24)" fg:x="6279" fg:w="11"/><text x="6.0179%" y="1071.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (19 samples, 0.02%)</title><rect x="5.7780%" y="1157" width="0.0175%" height="15" fill="rgb(234,209,42)" fg:x="6290" fg:w="19"/><text x="6.0280%" y="1167.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (12 samples, 0.01%)</title><rect x="5.8175%" y="1141" width="0.0110%" height="15" fill="rgb(227,7,12)" fg:x="6333" fg:w="12"/><text x="6.0675%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="5.8175%" y="1125" width="0.0110%" height="15" fill="rgb(245,203,43)" fg:x="6333" fg:w="12"/><text x="6.0675%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="5.8175%" y="1109" width="0.0110%" height="15" fill="rgb(238,205,33)" fg:x="6333" fg:w="12"/><text x="6.0675%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="5.8175%" y="1093" width="0.0110%" height="15" fill="rgb(231,56,7)" fg:x="6333" fg:w="12"/><text x="6.0675%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="5.8175%" y="1077" width="0.0110%" height="15" fill="rgb(244,186,29)" fg:x="6333" fg:w="12"/><text x="6.0675%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="5.8175%" y="1061" width="0.0110%" height="15" fill="rgb(234,111,31)" fg:x="6333" fg:w="12"/><text x="6.0675%" y="1071.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="5.8175%" y="1045" width="0.0110%" height="15" fill="rgb(241,149,10)" fg:x="6333" fg:w="12"/><text x="6.0675%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="5.8175%" y="1029" width="0.0110%" height="15" fill="rgb(249,206,44)" fg:x="6333" fg:w="12"/><text x="6.0675%" y="1039.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (93 samples, 0.09%)</title><rect x="5.7954%" y="1157" width="0.0854%" height="15" fill="rgb(251,153,30)" fg:x="6309" fg:w="93"/><text x="6.0454%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (48 samples, 0.04%)</title><rect x="5.8367%" y="1141" width="0.0441%" height="15" fill="rgb(239,152,38)" fg:x="6354" fg:w="48"/><text x="6.0867%" y="1151.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="5.9745%" y="1141" width="0.0101%" height="15" fill="rgb(249,139,47)" fg:x="6504" fg:w="11"/><text x="6.2245%" y="1151.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (29 samples, 0.03%)</title><rect x="5.9846%" y="1141" width="0.0266%" height="15" fill="rgb(244,64,35)" fg:x="6515" fg:w="29"/><text x="6.2346%" y="1151.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (29 samples, 0.03%)</title><rect x="5.9846%" y="1125" width="0.0266%" height="15" fill="rgb(216,46,15)" fg:x="6515" fg:w="29"/><text x="6.2346%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="6.0113%" y="1141" width="0.0110%" height="15" fill="rgb(250,74,19)" fg:x="6544" fg:w="12"/><text x="6.2613%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="6.0113%" y="1125" width="0.0110%" height="15" fill="rgb(249,42,33)" fg:x="6544" fg:w="12"/><text x="6.2613%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="6.0113%" y="1109" width="0.0110%" height="15" fill="rgb(242,149,17)" fg:x="6544" fg:w="12"/><text x="6.2613%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="6.0113%" y="1093" width="0.0110%" height="15" fill="rgb(244,29,21)" fg:x="6544" fg:w="12"/><text x="6.2613%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="6.0113%" y="1077" width="0.0110%" height="15" fill="rgb(220,130,37)" fg:x="6544" fg:w="12"/><text x="6.2613%" y="1087.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="6.0113%" y="1061" width="0.0110%" height="15" fill="rgb(211,67,2)" fg:x="6544" fg:w="12"/><text x="6.2613%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="6.0113%" y="1045" width="0.0110%" height="15" fill="rgb(235,68,52)" fg:x="6544" fg:w="12"/><text x="6.2613%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (15 samples, 0.01%)</title><rect x="6.0223%" y="1109" width="0.0138%" height="15" fill="rgb(246,142,3)" fg:x="6556" fg:w="15"/><text x="6.2723%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (15 samples, 0.01%)</title><rect x="6.0223%" y="1093" width="0.0138%" height="15" fill="rgb(241,25,7)" fg:x="6556" fg:w="15"/><text x="6.2723%" y="1103.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (15 samples, 0.01%)</title><rect x="6.0223%" y="1077" width="0.0138%" height="15" fill="rgb(242,119,39)" fg:x="6556" fg:w="15"/><text x="6.2723%" y="1087.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (174 samples, 0.16%)</title><rect x="5.8808%" y="1157" width="0.1598%" height="15" fill="rgb(241,98,45)" fg:x="6402" fg:w="174"/><text x="6.1308%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 0.02%)</title><rect x="6.0223%" y="1141" width="0.0184%" height="15" fill="rgb(254,28,30)" fg:x="6556" fg:w="20"/><text x="6.2723%" y="1151.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::FromIterator&lt;(K,V)&gt; for halfbrown::HashMap&lt;K,V,S&gt;&gt;::from_iter (20 samples, 0.02%)</title><rect x="6.0223%" y="1125" width="0.0184%" height="15" fill="rgb(241,142,54)" fg:x="6556" fg:w="20"/><text x="6.2723%" y="1135.50"></text></g><g><title>[anon] (5,997 samples, 5.51%)</title><rect x="0.5649%" y="1173" width="5.5088%" height="15" fill="rgb(222,85,15)" fg:x="615" fg:w="5997"/><text x="0.8149%" y="1183.50">[anon]</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (31 samples, 0.03%)</title><rect x="6.0453%" y="1157" width="0.0285%" height="15" fill="rgb(210,85,47)" fg:x="6581" fg:w="31"/><text x="6.2953%" y="1167.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (21 samples, 0.02%)</title><rect x="6.0545%" y="1141" width="0.0193%" height="15" fill="rgb(224,206,25)" fg:x="6591" fg:w="21"/><text x="6.3045%" y="1151.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="6.0737%" y="1173" width="0.0156%" height="15" fill="rgb(243,201,19)" fg:x="6612" fg:w="17"/><text x="6.3237%" y="1183.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (12 samples, 0.01%)</title><rect x="6.0967%" y="1157" width="0.0110%" height="15" fill="rgb(236,59,4)" fg:x="6637" fg:w="12"/><text x="6.3467%" y="1167.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (30 samples, 0.03%)</title><rect x="6.1096%" y="1157" width="0.0276%" height="15" fill="rgb(254,179,45)" fg:x="6651" fg:w="30"/><text x="6.3596%" y="1167.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (30 samples, 0.03%)</title><rect x="6.1096%" y="1141" width="0.0276%" height="15" fill="rgb(226,14,10)" fg:x="6651" fg:w="30"/><text x="6.3596%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (30 samples, 0.03%)</title><rect x="6.1096%" y="1125" width="0.0276%" height="15" fill="rgb(244,27,41)" fg:x="6651" fg:w="30"/><text x="6.3596%" y="1135.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (30 samples, 0.03%)</title><rect x="6.1096%" y="1109" width="0.0276%" height="15" fill="rgb(235,35,32)" fg:x="6651" fg:w="30"/><text x="6.3596%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="6.1491%" y="1141" width="0.0101%" height="15" fill="rgb(218,68,31)" fg:x="6694" fg:w="11"/><text x="6.3991%" y="1151.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="6.1491%" y="1125" width="0.0101%" height="15" fill="rgb(207,120,37)" fg:x="6694" fg:w="11"/><text x="6.3991%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="6.1491%" y="1109" width="0.0101%" height="15" fill="rgb(227,98,0)" fg:x="6694" fg:w="11"/><text x="6.3991%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="6.1491%" y="1093" width="0.0101%" height="15" fill="rgb(207,7,3)" fg:x="6694" fg:w="11"/><text x="6.3991%" y="1103.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="6.1491%" y="1077" width="0.0101%" height="15" fill="rgb(206,98,19)" fg:x="6694" fg:w="11"/><text x="6.3991%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="6.1491%" y="1061" width="0.0101%" height="15" fill="rgb(217,5,26)" fg:x="6694" fg:w="11"/><text x="6.3991%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (22 samples, 0.02%)</title><rect x="6.1463%" y="1157" width="0.0202%" height="15" fill="rgb(235,190,38)" fg:x="6691" fg:w="22"/><text x="6.3963%" y="1167.50"></text></g><g><title>[tremor-pdk] (106 samples, 0.10%)</title><rect x="6.0894%" y="1173" width="0.0974%" height="15" fill="rgb(247,86,24)" fg:x="6629" fg:w="106"/><text x="6.3394%" y="1183.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (91 samples, 0.08%)</title><rect x="6.1867%" y="1157" width="0.0836%" height="15" fill="rgb(205,101,16)" fg:x="6735" fg:w="91"/><text x="6.4367%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="6.2703%" y="1157" width="0.0101%" height="15" fill="rgb(246,168,33)" fg:x="6826" fg:w="11"/><text x="6.5203%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.04%)</title><rect x="6.2804%" y="1157" width="0.0432%" height="15" fill="rgb(231,114,1)" fg:x="6837" fg:w="47"/><text x="6.5304%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (133 samples, 0.12%)</title><rect x="6.3236%" y="1157" width="0.1222%" height="15" fill="rgb(207,184,53)" fg:x="6884" fg:w="133"/><text x="6.5736%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="6.4458%" y="1157" width="0.0202%" height="15" fill="rgb(224,95,51)" fg:x="7017" fg:w="22"/><text x="6.6958%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (77 samples, 0.07%)</title><rect x="6.4660%" y="1157" width="0.0707%" height="15" fill="rgb(212,188,45)" fg:x="7039" fg:w="77"/><text x="6.7160%" y="1167.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="6.5367%" y="1157" width="0.0110%" height="15" fill="rgb(223,154,38)" fg:x="7116" fg:w="12"/><text x="6.7867%" y="1167.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (141 samples, 0.13%)</title><rect x="6.5477%" y="1157" width="0.1295%" height="15" fill="rgb(251,22,52)" fg:x="7128" fg:w="141"/><text x="6.7977%" y="1167.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (39 samples, 0.04%)</title><rect x="6.6414%" y="1141" width="0.0358%" height="15" fill="rgb(229,209,22)" fg:x="7230" fg:w="39"/><text x="6.8914%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (17 samples, 0.02%)</title><rect x="6.9519%" y="373" width="0.0156%" height="15" fill="rgb(234,138,34)" fg:x="7568" fg:w="17"/><text x="7.2019%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="6.9850%" y="325" width="0.0129%" height="15" fill="rgb(212,95,11)" fg:x="7604" fg:w="14"/><text x="7.2350%" y="335.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="6.9979%" y="309" width="0.0110%" height="15" fill="rgb(240,179,47)" fg:x="7618" fg:w="12"/><text x="7.2479%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (21 samples, 0.02%)</title><rect x="6.9979%" y="325" width="0.0193%" height="15" fill="rgb(240,163,11)" fg:x="7618" fg:w="21"/><text x="7.2479%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (26 samples, 0.02%)</title><rect x="7.0686%" y="69" width="0.0239%" height="15" fill="rgb(236,37,12)" fg:x="7695" fg:w="26"/><text x="7.3186%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (26 samples, 0.02%)</title><rect x="7.0686%" y="53" width="0.0239%" height="15" fill="rgb(232,164,16)" fg:x="7695" fg:w="26"/><text x="7.3186%" y="63.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (26 samples, 0.02%)</title><rect x="7.0686%" y="37" width="0.0239%" height="15" fill="rgb(244,205,15)" fg:x="7695" fg:w="26"/><text x="7.3186%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (41 samples, 0.04%)</title><rect x="7.0649%" y="101" width="0.0377%" height="15" fill="rgb(223,117,47)" fg:x="7691" fg:w="41"/><text x="7.3149%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (41 samples, 0.04%)</title><rect x="7.0649%" y="85" width="0.0377%" height="15" fill="rgb(244,107,35)" fg:x="7691" fg:w="41"/><text x="7.3149%" y="95.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="7.0925%" y="69" width="0.0101%" height="15" fill="rgb(205,140,8)" fg:x="7721" fg:w="11"/><text x="7.3425%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (95 samples, 0.09%)</title><rect x="7.0245%" y="293" width="0.0873%" height="15" fill="rgb(228,84,46)" fg:x="7647" fg:w="95"/><text x="7.2745%" y="303.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (95 samples, 0.09%)</title><rect x="7.0245%" y="277" width="0.0873%" height="15" fill="rgb(254,188,9)" fg:x="7647" fg:w="95"/><text x="7.2745%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (95 samples, 0.09%)</title><rect x="7.0245%" y="261" width="0.0873%" height="15" fill="rgb(206,112,54)" fg:x="7647" fg:w="95"/><text x="7.2745%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (95 samples, 0.09%)</title><rect x="7.0245%" y="245" width="0.0873%" height="15" fill="rgb(216,84,49)" fg:x="7647" fg:w="95"/><text x="7.2745%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (95 samples, 0.09%)</title><rect x="7.0245%" y="229" width="0.0873%" height="15" fill="rgb(214,194,35)" fg:x="7647" fg:w="95"/><text x="7.2745%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (79 samples, 0.07%)</title><rect x="7.0392%" y="213" width="0.0726%" height="15" fill="rgb(249,28,3)" fg:x="7663" fg:w="79"/><text x="7.2892%" y="223.50"></text></g><g><title>__rg_dealloc (79 samples, 0.07%)</title><rect x="7.0392%" y="197" width="0.0726%" height="15" fill="rgb(222,56,52)" fg:x="7663" fg:w="79"/><text x="7.2892%" y="207.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (79 samples, 0.07%)</title><rect x="7.0392%" y="181" width="0.0726%" height="15" fill="rgb(245,217,50)" fg:x="7663" fg:w="79"/><text x="7.2892%" y="191.50"></text></g><g><title>rust_dealloc (68 samples, 0.06%)</title><rect x="7.0493%" y="165" width="0.0625%" height="15" fill="rgb(213,201,24)" fg:x="7674" fg:w="68"/><text x="7.2993%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (60 samples, 0.06%)</title><rect x="7.0566%" y="149" width="0.0551%" height="15" fill="rgb(248,116,28)" fg:x="7682" fg:w="60"/><text x="7.3066%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (51 samples, 0.05%)</title><rect x="7.0649%" y="133" width="0.0468%" height="15" fill="rgb(219,72,43)" fg:x="7691" fg:w="51"/><text x="7.3149%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (51 samples, 0.05%)</title><rect x="7.0649%" y="117" width="0.0468%" height="15" fill="rgb(209,138,14)" fg:x="7691" fg:w="51"/><text x="7.3149%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (165 samples, 0.15%)</title><rect x="6.9730%" y="373" width="0.1516%" height="15" fill="rgb(222,18,33)" fg:x="7591" fg:w="165"/><text x="7.2230%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (158 samples, 0.15%)</title><rect x="6.9795%" y="357" width="0.1451%" height="15" fill="rgb(213,199,7)" fg:x="7598" fg:w="158"/><text x="7.2295%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (152 samples, 0.14%)</title><rect x="6.9850%" y="341" width="0.1396%" height="15" fill="rgb(250,110,10)" fg:x="7604" fg:w="152"/><text x="7.2350%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (117 samples, 0.11%)</title><rect x="7.0171%" y="325" width="0.1075%" height="15" fill="rgb(248,123,6)" fg:x="7639" fg:w="117"/><text x="7.2671%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (117 samples, 0.11%)</title><rect x="7.0171%" y="309" width="0.1075%" height="15" fill="rgb(206,91,31)" fg:x="7639" fg:w="117"/><text x="7.2671%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (14 samples, 0.01%)</title><rect x="7.1118%" y="293" width="0.0129%" height="15" fill="rgb(211,154,13)" fg:x="7742" fg:w="14"/><text x="7.3618%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (193 samples, 0.18%)</title><rect x="6.9519%" y="389" width="0.1773%" height="15" fill="rgb(225,148,7)" fg:x="7568" fg:w="193"/><text x="7.2019%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (88 samples, 0.08%)</title><rect x="7.1292%" y="389" width="0.0808%" height="15" fill="rgb(220,160,43)" fg:x="7761" fg:w="88"/><text x="7.3792%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (62 samples, 0.06%)</title><rect x="7.1531%" y="373" width="0.0570%" height="15" fill="rgb(213,52,39)" fg:x="7787" fg:w="62"/><text x="7.4031%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (62 samples, 0.06%)</title><rect x="7.1531%" y="357" width="0.0570%" height="15" fill="rgb(243,137,7)" fg:x="7787" fg:w="62"/><text x="7.4031%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="7.2128%" y="341" width="0.0156%" height="15" fill="rgb(230,79,13)" fg:x="7852" fg:w="17"/><text x="7.4628%" y="351.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (444 samples, 0.41%)</title><rect x="6.8279%" y="885" width="0.4079%" height="15" fill="rgb(247,105,23)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (444 samples, 0.41%)</title><rect x="6.8279%" y="869" width="0.4079%" height="15" fill="rgb(223,179,41)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="879.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (444 samples, 0.41%)</title><rect x="6.8279%" y="853" width="0.4079%" height="15" fill="rgb(218,9,34)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="863.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (444 samples, 0.41%)</title><rect x="6.8279%" y="837" width="0.4079%" height="15" fill="rgb(222,106,8)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="847.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (444 samples, 0.41%)</title><rect x="6.8279%" y="821" width="0.4079%" height="15" fill="rgb(211,220,0)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="831.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (444 samples, 0.41%)</title><rect x="6.8279%" y="805" width="0.4079%" height="15" fill="rgb(229,52,16)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="815.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (444 samples, 0.41%)</title><rect x="6.8279%" y="789" width="0.4079%" height="15" fill="rgb(212,155,18)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (444 samples, 0.41%)</title><rect x="6.8279%" y="773" width="0.4079%" height="15" fill="rgb(242,21,14)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="783.50"></text></g><g><title>std::panic::catch_unwind (444 samples, 0.41%)</title><rect x="6.8279%" y="757" width="0.4079%" height="15" fill="rgb(222,19,48)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="767.50"></text></g><g><title>std::panicking::try (444 samples, 0.41%)</title><rect x="6.8279%" y="741" width="0.4079%" height="15" fill="rgb(232,45,27)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="751.50"></text></g><g><title>std::panicking::try::do_call (444 samples, 0.41%)</title><rect x="6.8279%" y="725" width="0.4079%" height="15" fill="rgb(249,103,42)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (444 samples, 0.41%)</title><rect x="6.8279%" y="709" width="0.4079%" height="15" fill="rgb(246,81,33)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (444 samples, 0.41%)</title><rect x="6.8279%" y="693" width="0.4079%" height="15" fill="rgb(252,33,42)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="703.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (444 samples, 0.41%)</title><rect x="6.8279%" y="677" width="0.4079%" height="15" fill="rgb(209,212,41)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="687.50"></text></g><g><title>async_ffi::FfiContext::with_context (444 samples, 0.41%)</title><rect x="6.8279%" y="661" width="0.4079%" height="15" fill="rgb(207,154,6)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="671.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (444 samples, 0.41%)</title><rect x="6.8279%" y="645" width="0.4079%" height="15" fill="rgb(223,64,47)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (444 samples, 0.41%)</title><rect x="6.8279%" y="629" width="0.4079%" height="15" fill="rgb(211,161,38)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (444 samples, 0.41%)</title><rect x="6.8279%" y="613" width="0.4079%" height="15" fill="rgb(219,138,40)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="623.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (444 samples, 0.41%)</title><rect x="6.8279%" y="597" width="0.4079%" height="15" fill="rgb(241,228,46)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (444 samples, 0.41%)</title><rect x="6.8279%" y="581" width="0.4079%" height="15" fill="rgb(223,209,38)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="591.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (444 samples, 0.41%)</title><rect x="6.8279%" y="565" width="0.4079%" height="15" fill="rgb(236,164,45)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="575.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (444 samples, 0.41%)</title><rect x="6.8279%" y="549" width="0.4079%" height="15" fill="rgb(231,15,5)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (444 samples, 0.41%)</title><rect x="6.8279%" y="533" width="0.4079%" height="15" fill="rgb(252,35,15)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="543.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (444 samples, 0.41%)</title><rect x="6.8279%" y="517" width="0.4079%" height="15" fill="rgb(248,181,18)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (444 samples, 0.41%)</title><rect x="6.8279%" y="501" width="0.4079%" height="15" fill="rgb(233,39,42)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (444 samples, 0.41%)</title><rect x="6.8279%" y="485" width="0.4079%" height="15" fill="rgb(238,110,33)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="495.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (444 samples, 0.41%)</title><rect x="6.8279%" y="469" width="0.4079%" height="15" fill="rgb(233,195,10)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (444 samples, 0.41%)</title><rect x="6.8279%" y="453" width="0.4079%" height="15" fill="rgb(254,105,3)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (444 samples, 0.41%)</title><rect x="6.8279%" y="437" width="0.4079%" height="15" fill="rgb(221,225,9)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="447.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (444 samples, 0.41%)</title><rect x="6.8279%" y="421" width="0.4079%" height="15" fill="rgb(224,227,45)" fg:x="7433" fg:w="444"/><text x="7.0779%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (309 samples, 0.28%)</title><rect x="6.9519%" y="405" width="0.2838%" height="15" fill="rgb(229,198,43)" fg:x="7568" fg:w="309"/><text x="7.2019%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (28 samples, 0.03%)</title><rect x="7.2100%" y="389" width="0.0257%" height="15" fill="rgb(206,209,35)" fg:x="7849" fg:w="28"/><text x="7.4600%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.03%)</title><rect x="7.2100%" y="373" width="0.0257%" height="15" fill="rgb(245,195,53)" fg:x="7849" fg:w="28"/><text x="7.4600%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 0.02%)</title><rect x="7.2128%" y="357" width="0.0230%" height="15" fill="rgb(240,92,26)" fg:x="7852" fg:w="25"/><text x="7.4628%" y="367.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (39 samples, 0.04%)</title><rect x="7.2946%" y="757" width="0.0358%" height="15" fill="rgb(207,40,23)" fg:x="7941" fg:w="39"/><text x="7.5446%" y="767.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (584 samples, 0.54%)</title><rect x="6.8279%" y="1141" width="0.5365%" height="15" fill="rgb(223,111,35)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (584 samples, 0.54%)</title><rect x="6.8279%" y="1125" width="0.5365%" height="15" fill="rgb(229,147,28)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (584 samples, 0.54%)</title><rect x="6.8279%" y="1109" width="0.5365%" height="15" fill="rgb(211,29,28)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (584 samples, 0.54%)</title><rect x="6.8279%" y="1093" width="0.5365%" height="15" fill="rgb(228,72,33)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (584 samples, 0.54%)</title><rect x="6.8279%" y="1077" width="0.5365%" height="15" fill="rgb(205,214,31)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (584 samples, 0.54%)</title><rect x="6.8279%" y="1061" width="0.5365%" height="15" fill="rgb(224,111,15)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (584 samples, 0.54%)</title><rect x="6.8279%" y="1045" width="0.5365%" height="15" fill="rgb(253,21,26)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (584 samples, 0.54%)</title><rect x="6.8279%" y="1029" width="0.5365%" height="15" fill="rgb(245,139,43)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="1039.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (584 samples, 0.54%)</title><rect x="6.8279%" y="1013" width="0.5365%" height="15" fill="rgb(252,170,7)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="1023.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (584 samples, 0.54%)</title><rect x="6.8279%" y="997" width="0.5365%" height="15" fill="rgb(231,118,14)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="1007.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (584 samples, 0.54%)</title><rect x="6.8279%" y="981" width="0.5365%" height="15" fill="rgb(238,83,0)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (584 samples, 0.54%)</title><rect x="6.8279%" y="965" width="0.5365%" height="15" fill="rgb(221,39,39)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (584 samples, 0.54%)</title><rect x="6.8279%" y="949" width="0.5365%" height="15" fill="rgb(222,119,46)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="959.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (584 samples, 0.54%)</title><rect x="6.8279%" y="933" width="0.5365%" height="15" fill="rgb(222,165,49)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="943.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (584 samples, 0.54%)</title><rect x="6.8279%" y="917" width="0.5365%" height="15" fill="rgb(219,113,52)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (584 samples, 0.54%)</title><rect x="6.8279%" y="901" width="0.5365%" height="15" fill="rgb(214,7,15)" fg:x="7433" fg:w="584"/><text x="7.0779%" y="911.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (140 samples, 0.13%)</title><rect x="7.2358%" y="885" width="0.1286%" height="15" fill="rgb(235,32,4)" fg:x="7877" fg:w="140"/><text x="7.4858%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (140 samples, 0.13%)</title><rect x="7.2358%" y="869" width="0.1286%" height="15" fill="rgb(238,90,54)" fg:x="7877" fg:w="140"/><text x="7.4858%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (140 samples, 0.13%)</title><rect x="7.2358%" y="853" width="0.1286%" height="15" fill="rgb(213,208,19)" fg:x="7877" fg:w="140"/><text x="7.4858%" y="863.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (140 samples, 0.13%)</title><rect x="7.2358%" y="837" width="0.1286%" height="15" fill="rgb(233,156,4)" fg:x="7877" fg:w="140"/><text x="7.4858%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (116 samples, 0.11%)</title><rect x="7.2578%" y="821" width="0.1066%" height="15" fill="rgb(207,194,5)" fg:x="7901" fg:w="116"/><text x="7.5078%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (107 samples, 0.10%)</title><rect x="7.2661%" y="805" width="0.0983%" height="15" fill="rgb(206,111,30)" fg:x="7910" fg:w="107"/><text x="7.5161%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (107 samples, 0.10%)</title><rect x="7.2661%" y="789" width="0.0983%" height="15" fill="rgb(243,70,54)" fg:x="7910" fg:w="107"/><text x="7.5161%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (107 samples, 0.10%)</title><rect x="7.2661%" y="773" width="0.0983%" height="15" fill="rgb(242,28,8)" fg:x="7910" fg:w="107"/><text x="7.5161%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (37 samples, 0.03%)</title><rect x="7.3304%" y="757" width="0.0340%" height="15" fill="rgb(219,106,18)" fg:x="7980" fg:w="37"/><text x="7.5804%" y="767.50"></text></g><g><title>event_listener::Inner::lock (22 samples, 0.02%)</title><rect x="7.3736%" y="901" width="0.0202%" height="15" fill="rgb(244,222,10)" fg:x="8027" fg:w="22"/><text x="7.6236%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.02%)</title><rect x="7.3736%" y="885" width="0.0202%" height="15" fill="rgb(236,179,52)" fg:x="8027" fg:w="22"/><text x="7.6236%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.02%)</title><rect x="7.3736%" y="869" width="0.0202%" height="15" fill="rgb(213,23,39)" fg:x="8027" fg:w="22"/><text x="7.6236%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="7.3809%" y="853" width="0.0129%" height="15" fill="rgb(238,48,10)" fg:x="8035" fg:w="14"/><text x="7.6309%" y="863.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="7.3809%" y="837" width="0.0129%" height="15" fill="rgb(251,196,23)" fg:x="8035" fg:w="14"/><text x="7.6309%" y="847.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (36 samples, 0.03%)</title><rect x="7.3644%" y="917" width="0.0331%" height="15" fill="rgb(250,152,24)" fg:x="8017" fg:w="36"/><text x="7.6144%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (259 samples, 0.24%)</title><rect x="7.5058%" y="869" width="0.2379%" height="15" fill="rgb(209,150,17)" fg:x="8171" fg:w="259"/><text x="7.7558%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (333 samples, 0.31%)</title><rect x="7.7474%" y="869" width="0.3059%" height="15" fill="rgb(234,202,34)" fg:x="8434" fg:w="333"/><text x="7.9974%" y="879.50"></text></g><g><title>core::ptr::read (333 samples, 0.31%)</title><rect x="7.7474%" y="853" width="0.3059%" height="15" fill="rgb(253,148,53)" fg:x="8434" fg:w="333"/><text x="7.9974%" y="863.50"></text></g><g><title>__memcpy_avx_unaligned_erms (333 samples, 0.31%)</title><rect x="7.7474%" y="837" width="0.3059%" height="15" fill="rgb(218,129,16)" fg:x="8434" fg:w="333"/><text x="7.9974%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (334 samples, 0.31%)</title><rect x="8.0533%" y="869" width="0.3068%" height="15" fill="rgb(216,85,19)" fg:x="8767" fg:w="334"/><text x="8.3033%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (334 samples, 0.31%)</title><rect x="8.0533%" y="853" width="0.3068%" height="15" fill="rgb(235,228,7)" fg:x="8767" fg:w="334"/><text x="8.3033%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (413 samples, 0.38%)</title><rect x="8.3601%" y="869" width="0.3794%" height="15" fill="rgb(245,175,0)" fg:x="9101" fg:w="413"/><text x="8.6101%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (412 samples, 0.38%)</title><rect x="8.3610%" y="853" width="0.3785%" height="15" fill="rgb(208,168,36)" fg:x="9102" fg:w="412"/><text x="8.6110%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,463 samples, 1.34%)</title><rect x="7.3974%" y="901" width="1.3439%" height="15" fill="rgb(246,171,24)" fg:x="8053" fg:w="1463"/><text x="7.6474%" y="911.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,463 samples, 1.34%)</title><rect x="7.3974%" y="885" width="1.3439%" height="15" fill="rgb(215,142,24)" fg:x="8053" fg:w="1463"/><text x="7.6474%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (17 samples, 0.02%)</title><rect x="8.7459%" y="837" width="0.0156%" height="15" fill="rgb(250,187,7)" fg:x="9521" fg:w="17"/><text x="8.9959%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.01%)</title><rect x="8.7469%" y="821" width="0.0147%" height="15" fill="rgb(228,66,33)" fg:x="9522" fg:w="16"/><text x="8.9969%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.01%)</title><rect x="8.7469%" y="805" width="0.0147%" height="15" fill="rgb(234,215,21)" fg:x="9522" fg:w="16"/><text x="8.9969%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (40 samples, 0.04%)</title><rect x="8.7717%" y="789" width="0.0367%" height="15" fill="rgb(222,191,20)" fg:x="9549" fg:w="40"/><text x="9.0217%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="8.7717%" y="773" width="0.0367%" height="15" fill="rgb(245,79,54)" fg:x="9549" fg:w="40"/><text x="9.0217%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (39 samples, 0.04%)</title><rect x="8.7726%" y="757" width="0.0358%" height="15" fill="rgb(240,10,37)" fg:x="9550" fg:w="39"/><text x="9.0226%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (39 samples, 0.04%)</title><rect x="8.7726%" y="741" width="0.0358%" height="15" fill="rgb(214,192,32)" fg:x="9550" fg:w="39"/><text x="9.0226%" y="751.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (39 samples, 0.04%)</title><rect x="8.7726%" y="725" width="0.0358%" height="15" fill="rgb(209,36,54)" fg:x="9550" fg:w="39"/><text x="9.0226%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (24 samples, 0.02%)</title><rect x="8.8084%" y="789" width="0.0220%" height="15" fill="rgb(220,10,11)" fg:x="9589" fg:w="24"/><text x="9.0584%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.02%)</title><rect x="8.8084%" y="773" width="0.0220%" height="15" fill="rgb(221,106,17)" fg:x="9589" fg:w="24"/><text x="9.0584%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (29 samples, 0.03%)</title><rect x="8.8626%" y="709" width="0.0266%" height="15" fill="rgb(251,142,44)" fg:x="9648" fg:w="29"/><text x="9.1126%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (29 samples, 0.03%)</title><rect x="8.8626%" y="693" width="0.0266%" height="15" fill="rgb(238,13,15)" fg:x="9648" fg:w="29"/><text x="9.1126%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (28 samples, 0.03%)</title><rect x="8.8892%" y="709" width="0.0257%" height="15" fill="rgb(208,107,27)" fg:x="9677" fg:w="28"/><text x="9.1392%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (28 samples, 0.03%)</title><rect x="8.8892%" y="693" width="0.0257%" height="15" fill="rgb(205,136,37)" fg:x="9677" fg:w="28"/><text x="9.1392%" y="703.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (28 samples, 0.03%)</title><rect x="8.8892%" y="677" width="0.0257%" height="15" fill="rgb(250,205,27)" fg:x="9677" fg:w="28"/><text x="9.1392%" y="687.50"></text></g><g><title>__GI___pthread_cond_signal (28 samples, 0.03%)</title><rect x="8.8892%" y="661" width="0.0257%" height="15" fill="rgb(210,80,43)" fg:x="9677" fg:w="28"/><text x="9.1392%" y="671.50"></text></g><g><title>parking::Unparker::unpark (96 samples, 0.09%)</title><rect x="8.8461%" y="741" width="0.0882%" height="15" fill="rgb(247,160,36)" fg:x="9630" fg:w="96"/><text x="9.0961%" y="751.50"></text></g><g><title>parking::Inner::unpark (85 samples, 0.08%)</title><rect x="8.8562%" y="725" width="0.0781%" height="15" fill="rgb(234,13,49)" fg:x="9641" fg:w="85"/><text x="9.1062%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.02%)</title><rect x="8.9150%" y="709" width="0.0193%" height="15" fill="rgb(234,122,0)" fg:x="9705" fg:w="21"/><text x="9.1650%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (21 samples, 0.02%)</title><rect x="8.9150%" y="693" width="0.0193%" height="15" fill="rgb(207,146,38)" fg:x="9705" fg:w="21"/><text x="9.1650%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.02%)</title><rect x="8.9159%" y="677" width="0.0184%" height="15" fill="rgb(207,177,25)" fg:x="9706" fg:w="20"/><text x="9.1659%" y="687.50"></text></g><g><title>___pthread_mutex_lock (20 samples, 0.02%)</title><rect x="8.9159%" y="661" width="0.0184%" height="15" fill="rgb(211,178,42)" fg:x="9706" fg:w="20"/><text x="9.1659%" y="671.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (115 samples, 0.11%)</title><rect x="8.8304%" y="757" width="0.1056%" height="15" fill="rgb(230,69,54)" fg:x="9613" fg:w="115"/><text x="9.0804%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake (135 samples, 0.12%)</title><rect x="8.8304%" y="789" width="0.1240%" height="15" fill="rgb(214,135,41)" fg:x="9613" fg:w="135"/><text x="9.0804%" y="799.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (135 samples, 0.12%)</title><rect x="8.8304%" y="773" width="0.1240%" height="15" fill="rgb(237,67,25)" fg:x="9613" fg:w="135"/><text x="9.0804%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="8.9361%" y="757" width="0.0184%" height="15" fill="rgb(222,189,50)" fg:x="9728" fg:w="20"/><text x="9.1861%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="8.9361%" y="741" width="0.0184%" height="15" fill="rgb(245,148,34)" fg:x="9728" fg:w="20"/><text x="9.1861%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (19 samples, 0.02%)</title><rect x="8.9370%" y="725" width="0.0175%" height="15" fill="rgb(222,29,6)" fg:x="9729" fg:w="19"/><text x="9.1870%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (19 samples, 0.02%)</title><rect x="8.9370%" y="709" width="0.0175%" height="15" fill="rgb(221,189,43)" fg:x="9729" fg:w="19"/><text x="9.1870%" y="719.50"></text></g><g><title>async_executor::State::notify (276 samples, 0.25%)</title><rect x="8.7652%" y="805" width="0.2535%" height="15" fill="rgb(207,36,27)" fg:x="9542" fg:w="276"/><text x="9.0152%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (70 samples, 0.06%)</title><rect x="8.9545%" y="789" width="0.0643%" height="15" fill="rgb(217,90,24)" fg:x="9748" fg:w="70"/><text x="9.2045%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (69 samples, 0.06%)</title><rect x="8.9554%" y="773" width="0.0634%" height="15" fill="rgb(224,66,35)" fg:x="9749" fg:w="69"/><text x="9.2054%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (60 samples, 0.06%)</title><rect x="8.9636%" y="757" width="0.0551%" height="15" fill="rgb(221,13,50)" fg:x="9758" fg:w="60"/><text x="9.2136%" y="767.50"></text></g><g><title>___pthread_mutex_lock (60 samples, 0.06%)</title><rect x="8.9636%" y="741" width="0.0551%" height="15" fill="rgb(236,68,49)" fg:x="9758" fg:w="60"/><text x="9.2136%" y="751.50"></text></g><g><title>__GI___lll_lock_wait (13 samples, 0.01%)</title><rect x="9.0068%" y="725" width="0.0119%" height="15" fill="rgb(229,146,28)" fg:x="9805" fg:w="13"/><text x="9.2568%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (58 samples, 0.05%)</title><rect x="9.0344%" y="773" width="0.0533%" height="15" fill="rgb(225,31,38)" fg:x="9835" fg:w="58"/><text x="9.2844%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (58 samples, 0.05%)</title><rect x="9.0344%" y="757" width="0.0533%" height="15" fill="rgb(250,208,3)" fg:x="9835" fg:w="58"/><text x="9.2844%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (28 samples, 0.03%)</title><rect x="9.0877%" y="773" width="0.0257%" height="15" fill="rgb(246,54,23)" fg:x="9893" fg:w="28"/><text x="9.3377%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_or (28 samples, 0.03%)</title><rect x="9.0877%" y="757" width="0.0257%" height="15" fill="rgb(243,76,11)" fg:x="9893" fg:w="28"/><text x="9.3377%" y="767.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (387 samples, 0.36%)</title><rect x="8.7643%" y="821" width="0.3555%" height="15" fill="rgb(245,21,50)" fg:x="9541" fg:w="387"/><text x="9.0143%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (110 samples, 0.10%)</title><rect x="9.0188%" y="805" width="0.1010%" height="15" fill="rgb(228,9,43)" fg:x="9818" fg:w="110"/><text x="9.2688%" y="815.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (104 samples, 0.10%)</title><rect x="9.0243%" y="789" width="0.0955%" height="15" fill="rgb(208,100,47)" fg:x="9824" fg:w="104"/><text x="9.2743%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (61 samples, 0.06%)</title><rect x="9.1198%" y="821" width="0.0560%" height="15" fill="rgb(232,26,8)" fg:x="9928" fg:w="61"/><text x="9.3698%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (61 samples, 0.06%)</title><rect x="9.1198%" y="805" width="0.0560%" height="15" fill="rgb(216,166,38)" fg:x="9928" fg:w="61"/><text x="9.3698%" y="815.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,957 samples, 1.80%)</title><rect x="7.3974%" y="917" width="1.7977%" height="15" fill="rgb(251,202,51)" fg:x="8053" fg:w="1957"/><text x="7.6474%" y="927.50">a..</text></g><g><title>event_listener::Event::notify (494 samples, 0.45%)</title><rect x="8.7413%" y="901" width="0.4538%" height="15" fill="rgb(254,216,34)" fg:x="9516" fg:w="494"/><text x="8.9913%" y="911.50"></text></g><g><title>event_listener::List::notify (494 samples, 0.45%)</title><rect x="8.7413%" y="885" width="0.4538%" height="15" fill="rgb(251,32,27)" fg:x="9516" fg:w="494"/><text x="8.9913%" y="895.50"></text></g><g><title>core::task::wake::Waker::wake (489 samples, 0.45%)</title><rect x="8.7459%" y="869" width="0.4492%" height="15" fill="rgb(208,127,28)" fg:x="9521" fg:w="489"/><text x="8.9959%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (489 samples, 0.45%)</title><rect x="8.7459%" y="853" width="0.4492%" height="15" fill="rgb(224,137,22)" fg:x="9521" fg:w="489"/><text x="8.9959%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (472 samples, 0.43%)</title><rect x="8.7616%" y="837" width="0.4336%" height="15" fill="rgb(254,70,32)" fg:x="9538" fg:w="472"/><text x="9.0116%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="9.1758%" y="821" width="0.0193%" height="15" fill="rgb(229,75,37)" fg:x="9989" fg:w="21"/><text x="9.4258%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="9.1758%" y="805" width="0.0193%" height="15" fill="rgb(252,64,23)" fg:x="9989" fg:w="21"/><text x="9.4258%" y="815.50"></text></g><g><title>event_listener::Inner::lock (12 samples, 0.01%)</title><rect x="9.2034%" y="901" width="0.0110%" height="15" fill="rgb(232,162,48)" fg:x="10019" fg:w="12"/><text x="9.4534%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.01%)</title><rect x="9.2034%" y="885" width="0.0110%" height="15" fill="rgb(246,160,12)" fg:x="10019" fg:w="12"/><text x="9.4534%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="9.2034%" y="869" width="0.0110%" height="15" fill="rgb(247,166,0)" fg:x="10019" fg:w="12"/><text x="9.4534%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="9.2034%" y="853" width="0.0110%" height="15" fill="rgb(249,219,21)" fg:x="10019" fg:w="12"/><text x="9.4534%" y="863.50"></text></g><g><title>___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="9.2034%" y="837" width="0.0110%" height="15" fill="rgb(205,209,3)" fg:x="10019" fg:w="12"/><text x="9.4534%" y="847.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,015 samples, 1.85%)</title><rect x="7.3644%" y="997" width="1.8510%" height="15" fill="rgb(243,44,1)" fg:x="8017" fg:w="2015"/><text x="7.6144%" y="1007.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,015 samples, 1.85%)</title><rect x="7.3644%" y="981" width="1.8510%" height="15" fill="rgb(206,159,16)" fg:x="8017" fg:w="2015"/><text x="7.6144%" y="991.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,015 samples, 1.85%)</title><rect x="7.3644%" y="965" width="1.8510%" height="15" fill="rgb(244,77,30)" fg:x="8017" fg:w="2015"/><text x="7.6144%" y="975.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,015 samples, 1.85%)</title><rect x="7.3644%" y="949" width="1.8510%" height="15" fill="rgb(218,69,12)" fg:x="8017" fg:w="2015"/><text x="7.6144%" y="959.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,015 samples, 1.85%)</title><rect x="7.3644%" y="933" width="1.8510%" height="15" fill="rgb(212,87,7)" fg:x="8017" fg:w="2015"/><text x="7.6144%" y="943.50">&lt;..</text></g><g><title>event_listener::Event::listen (22 samples, 0.02%)</title><rect x="9.1951%" y="917" width="0.0202%" height="15" fill="rgb(245,114,25)" fg:x="10010" fg:w="22"/><text x="9.4451%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (191 samples, 0.18%)</title><rect x="9.3972%" y="517" width="0.1755%" height="15" fill="rgb(210,61,42)" fg:x="10230" fg:w="191"/><text x="9.6472%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (189 samples, 0.17%)</title><rect x="9.3991%" y="501" width="0.1736%" height="15" fill="rgb(211,52,33)" fg:x="10232" fg:w="189"/><text x="9.6491%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (179 samples, 0.16%)</title><rect x="9.4082%" y="485" width="0.1644%" height="15" fill="rgb(234,58,33)" fg:x="10242" fg:w="179"/><text x="9.6582%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (162 samples, 0.15%)</title><rect x="9.4239%" y="469" width="0.1488%" height="15" fill="rgb(220,115,36)" fg:x="10259" fg:w="162"/><text x="9.6739%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (162 samples, 0.15%)</title><rect x="9.4239%" y="453" width="0.1488%" height="15" fill="rgb(243,153,54)" fg:x="10259" fg:w="162"/><text x="9.6739%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (205 samples, 0.19%)</title><rect x="9.3871%" y="629" width="0.1883%" height="15" fill="rgb(251,47,18)" fg:x="10219" fg:w="205"/><text x="9.6371%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (205 samples, 0.19%)</title><rect x="9.3871%" y="613" width="0.1883%" height="15" fill="rgb(242,102,42)" fg:x="10219" fg:w="205"/><text x="9.6371%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (205 samples, 0.19%)</title><rect x="9.3871%" y="597" width="0.1883%" height="15" fill="rgb(234,31,38)" fg:x="10219" fg:w="205"/><text x="9.6371%" y="607.50"></text></g><g><title>alloc::alloc::alloc (204 samples, 0.19%)</title><rect x="9.3880%" y="581" width="0.1874%" height="15" fill="rgb(221,117,51)" fg:x="10220" fg:w="204"/><text x="9.6380%" y="591.50"></text></g><g><title>__rg_alloc (204 samples, 0.19%)</title><rect x="9.3880%" y="565" width="0.1874%" height="15" fill="rgb(212,20,18)" fg:x="10220" fg:w="204"/><text x="9.6380%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (204 samples, 0.19%)</title><rect x="9.3880%" y="549" width="0.1874%" height="15" fill="rgb(245,133,36)" fg:x="10220" fg:w="204"/><text x="9.6380%" y="559.50"></text></g><g><title>rust_alloc (203 samples, 0.19%)</title><rect x="9.3890%" y="533" width="0.1865%" height="15" fill="rgb(212,6,19)" fg:x="10221" fg:w="203"/><text x="9.6390%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (55 samples, 0.05%)</title><rect x="9.6553%" y="565" width="0.0505%" height="15" fill="rgb(218,1,36)" fg:x="10511" fg:w="55"/><text x="9.9053%" y="575.50"></text></g><g><title>core::cmp::PartialOrd::ge (55 samples, 0.05%)</title><rect x="9.6553%" y="549" width="0.0505%" height="15" fill="rgb(246,84,54)" fg:x="10511" fg:w="55"/><text x="9.9053%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (55 samples, 0.05%)</title><rect x="9.6553%" y="533" width="0.0505%" height="15" fill="rgb(242,110,6)" fg:x="10511" fg:w="55"/><text x="9.9053%" y="543.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (55 samples, 0.05%)</title><rect x="9.6553%" y="517" width="0.0505%" height="15" fill="rgb(214,47,5)" fg:x="10511" fg:w="55"/><text x="9.9053%" y="527.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (55 samples, 0.05%)</title><rect x="9.6553%" y="501" width="0.0505%" height="15" fill="rgb(218,159,25)" fg:x="10511" fg:w="55"/><text x="9.9053%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (27 samples, 0.02%)</title><rect x="9.6811%" y="485" width="0.0248%" height="15" fill="rgb(215,211,28)" fg:x="10539" fg:w="27"/><text x="9.9311%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (110 samples, 0.10%)</title><rect x="9.6214%" y="597" width="0.1010%" height="15" fill="rgb(238,59,32)" fg:x="10474" fg:w="110"/><text x="9.8714%" y="607.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (110 samples, 0.10%)</title><rect x="9.6214%" y="581" width="0.1010%" height="15" fill="rgb(226,82,3)" fg:x="10474" fg:w="110"/><text x="9.8714%" y="591.50"></text></g><g><title>core::time::Duration::new (18 samples, 0.02%)</title><rect x="9.7059%" y="565" width="0.0165%" height="15" fill="rgb(240,164,32)" fg:x="10566" fg:w="18"/><text x="9.9559%" y="575.50"></text></g><g><title>std::time::SystemTime::duration_since (118 samples, 0.11%)</title><rect x="9.6214%" y="613" width="0.1084%" height="15" fill="rgb(232,46,7)" fg:x="10474" fg:w="118"/><text x="9.8714%" y="623.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (3,048 samples, 2.80%)</title><rect x="7.3644%" y="1013" width="2.7999%" height="15" fill="rgb(229,129,53)" fg:x="8017" fg:w="3048"/><text x="7.6144%" y="1023.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,033 samples, 0.95%)</title><rect x="9.2153%" y="997" width="0.9489%" height="15" fill="rgb(234,188,29)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="1007.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,033 samples, 0.95%)</title><rect x="9.2153%" y="981" width="0.9489%" height="15" fill="rgb(246,141,4)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="991.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,033 samples, 0.95%)</title><rect x="9.2153%" y="965" width="0.9489%" height="15" fill="rgb(229,23,39)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="975.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,033 samples, 0.95%)</title><rect x="9.2153%" y="949" width="0.9489%" height="15" fill="rgb(206,12,3)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="959.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,033 samples, 0.95%)</title><rect x="9.2153%" y="933" width="0.9489%" height="15" fill="rgb(252,226,20)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,033 samples, 0.95%)</title><rect x="9.2153%" y="917" width="0.9489%" height="15" fill="rgb(216,123,35)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="927.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,033 samples, 0.95%)</title><rect x="9.2153%" y="901" width="0.9489%" height="15" fill="rgb(212,68,40)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1,033 samples, 0.95%)</title><rect x="9.2153%" y="885" width="0.9489%" height="15" fill="rgb(254,125,32)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="895.50"></text></g><g><title>std::panicking::try (1,033 samples, 0.95%)</title><rect x="9.2153%" y="869" width="0.9489%" height="15" fill="rgb(253,97,22)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="879.50"></text></g><g><title>std::panicking::try::do_call (1,033 samples, 0.95%)</title><rect x="9.2153%" y="853" width="0.9489%" height="15" fill="rgb(241,101,14)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,033 samples, 0.95%)</title><rect x="9.2153%" y="837" width="0.9489%" height="15" fill="rgb(238,103,29)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,033 samples, 0.95%)</title><rect x="9.2153%" y="821" width="0.9489%" height="15" fill="rgb(233,195,47)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="831.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,033 samples, 0.95%)</title><rect x="9.2153%" y="805" width="0.9489%" height="15" fill="rgb(246,218,30)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="815.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,033 samples, 0.95%)</title><rect x="9.2153%" y="789" width="0.9489%" height="15" fill="rgb(219,145,47)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,033 samples, 0.95%)</title><rect x="9.2153%" y="773" width="0.9489%" height="15" fill="rgb(243,12,26)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,033 samples, 0.95%)</title><rect x="9.2153%" y="757" width="0.9489%" height="15" fill="rgb(214,87,16)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="767.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,033 samples, 0.95%)</title><rect x="9.2153%" y="741" width="0.9489%" height="15" fill="rgb(208,99,42)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="751.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,033 samples, 0.95%)</title><rect x="9.2153%" y="725" width="0.9489%" height="15" fill="rgb(253,99,2)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="735.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,033 samples, 0.95%)</title><rect x="9.2153%" y="709" width="0.9489%" height="15" fill="rgb(220,168,23)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="719.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,033 samples, 0.95%)</title><rect x="9.2153%" y="693" width="0.9489%" height="15" fill="rgb(242,38,24)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="703.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,033 samples, 0.95%)</title><rect x="9.2153%" y="677" width="0.9489%" height="15" fill="rgb(225,182,9)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,033 samples, 0.95%)</title><rect x="9.2153%" y="661" width="0.9489%" height="15" fill="rgb(243,178,37)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="671.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (1,033 samples, 0.95%)</title><rect x="9.2153%" y="645" width="0.9489%" height="15" fill="rgb(232,139,19)" fg:x="10032" fg:w="1033"/><text x="9.4653%" y="655.50"></text></g><g><title>tremor_common::time::nanotime (617 samples, 0.57%)</title><rect x="9.5975%" y="629" width="0.5668%" height="15" fill="rgb(225,201,24)" fg:x="10448" fg:w="617"/><text x="9.8475%" y="639.50"></text></g><g><title>std::time::SystemTime::now (473 samples, 0.43%)</title><rect x="9.7297%" y="613" width="0.4345%" height="15" fill="rgb(221,47,46)" fg:x="10592" fg:w="473"/><text x="9.9797%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (473 samples, 0.43%)</title><rect x="9.7297%" y="597" width="0.4345%" height="15" fill="rgb(249,23,13)" fg:x="10592" fg:w="473"/><text x="9.9797%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::now (473 samples, 0.43%)</title><rect x="9.7297%" y="581" width="0.4345%" height="15" fill="rgb(219,9,5)" fg:x="10592" fg:w="473"/><text x="9.9797%" y="591.50"></text></g><g><title>__clock_gettime_2 (382 samples, 0.35%)</title><rect x="9.8133%" y="565" width="0.3509%" height="15" fill="rgb(254,171,16)" fg:x="10683" fg:w="382"/><text x="10.0633%" y="575.50"></text></g><g><title>__vdso_clock_gettime (369 samples, 0.34%)</title><rect x="9.8253%" y="549" width="0.3390%" height="15" fill="rgb(230,171,20)" fg:x="10696" fg:w="369"/><text x="10.0753%" y="559.50"></text></g><g><title>[[vdso]] (245 samples, 0.23%)</title><rect x="9.9392%" y="533" width="0.2251%" height="15" fill="rgb(210,71,41)" fg:x="10820" fg:w="245"/><text x="10.1892%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="10.1670%" y="261" width="0.0119%" height="15" fill="rgb(206,173,20)" fg:x="11068" fg:w="13"/><text x="10.4170%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (18 samples, 0.02%)</title><rect x="10.1642%" y="277" width="0.0165%" height="15" fill="rgb(233,88,34)" fg:x="11065" fg:w="18"/><text x="10.4142%" y="287.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (87 samples, 0.08%)</title><rect x="10.1642%" y="613" width="0.0799%" height="15" fill="rgb(223,209,46)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (87 samples, 0.08%)</title><rect x="10.1642%" y="597" width="0.0799%" height="15" fill="rgb(250,43,18)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="607.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (87 samples, 0.08%)</title><rect x="10.1642%" y="581" width="0.0799%" height="15" fill="rgb(208,13,10)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (87 samples, 0.08%)</title><rect x="10.1642%" y="565" width="0.0799%" height="15" fill="rgb(212,200,36)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (87 samples, 0.08%)</title><rect x="10.1642%" y="549" width="0.0799%" height="15" fill="rgb(225,90,30)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (87 samples, 0.08%)</title><rect x="10.1642%" y="533" width="0.0799%" height="15" fill="rgb(236,182,39)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (87 samples, 0.08%)</title><rect x="10.1642%" y="517" width="0.0799%" height="15" fill="rgb(212,144,35)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (87 samples, 0.08%)</title><rect x="10.1642%" y="501" width="0.0799%" height="15" fill="rgb(228,63,44)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (87 samples, 0.08%)</title><rect x="10.1642%" y="485" width="0.0799%" height="15" fill="rgb(228,109,6)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (87 samples, 0.08%)</title><rect x="10.1642%" y="469" width="0.0799%" height="15" fill="rgb(238,117,24)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (87 samples, 0.08%)</title><rect x="10.1642%" y="453" width="0.0799%" height="15" fill="rgb(242,26,26)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87 samples, 0.08%)</title><rect x="10.1642%" y="437" width="0.0799%" height="15" fill="rgb(221,92,48)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="447.50"></text></g><g><title>alloc::alloc::alloc (87 samples, 0.08%)</title><rect x="10.1642%" y="421" width="0.0799%" height="15" fill="rgb(209,209,32)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="431.50"></text></g><g><title>__rg_alloc (87 samples, 0.08%)</title><rect x="10.1642%" y="405" width="0.0799%" height="15" fill="rgb(221,70,22)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="415.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (87 samples, 0.08%)</title><rect x="10.1642%" y="389" width="0.0799%" height="15" fill="rgb(248,145,5)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="399.50"></text></g><g><title>rust_alloc (87 samples, 0.08%)</title><rect x="10.1642%" y="373" width="0.0799%" height="15" fill="rgb(226,116,26)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="10.1642%" y="357" width="0.0799%" height="15" fill="rgb(244,5,17)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="10.1642%" y="341" width="0.0799%" height="15" fill="rgb(252,159,33)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="10.1642%" y="325" width="0.0799%" height="15" fill="rgb(206,71,0)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="10.1642%" y="309" width="0.0799%" height="15" fill="rgb(233,118,54)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (87 samples, 0.08%)</title><rect x="10.1642%" y="293" width="0.0799%" height="15" fill="rgb(234,83,48)" fg:x="11065" fg:w="87"/><text x="10.4142%" y="303.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (69 samples, 0.06%)</title><rect x="10.1808%" y="277" width="0.0634%" height="15" fill="rgb(228,3,54)" fg:x="11083" fg:w="69"/><text x="10.4308%" y="287.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (57 samples, 0.05%)</title><rect x="10.1918%" y="261" width="0.0524%" height="15" fill="rgb(226,155,13)" fg:x="11095" fg:w="57"/><text x="10.4418%" y="271.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (57 samples, 0.05%)</title><rect x="10.1918%" y="245" width="0.0524%" height="15" fill="rgb(241,28,37)" fg:x="11095" fg:w="57"/><text x="10.4418%" y="255.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (57 samples, 0.05%)</title><rect x="10.1918%" y="229" width="0.0524%" height="15" fill="rgb(233,93,10)" fg:x="11095" fg:w="57"/><text x="10.4418%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (11 samples, 0.01%)</title><rect x="10.2442%" y="389" width="0.0101%" height="15" fill="rgb(225,113,19)" fg:x="11152" fg:w="11"/><text x="10.4942%" y="399.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (137 samples, 0.13%)</title><rect x="10.1642%" y="725" width="0.1258%" height="15" fill="rgb(241,2,18)" fg:x="11065" fg:w="137"/><text x="10.4142%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (137 samples, 0.13%)</title><rect x="10.1642%" y="709" width="0.1258%" height="15" fill="rgb(228,207,21)" fg:x="11065" fg:w="137"/><text x="10.4142%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (137 samples, 0.13%)</title><rect x="10.1642%" y="693" width="0.1258%" height="15" fill="rgb(213,211,35)" fg:x="11065" fg:w="137"/><text x="10.4142%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (137 samples, 0.13%)</title><rect x="10.1642%" y="677" width="0.1258%" height="15" fill="rgb(209,83,10)" fg:x="11065" fg:w="137"/><text x="10.4142%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (137 samples, 0.13%)</title><rect x="10.1642%" y="661" width="0.1258%" height="15" fill="rgb(209,164,1)" fg:x="11065" fg:w="137"/><text x="10.4142%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (137 samples, 0.13%)</title><rect x="10.1642%" y="645" width="0.1258%" height="15" fill="rgb(213,184,43)" fg:x="11065" fg:w="137"/><text x="10.4142%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (137 samples, 0.13%)</title><rect x="10.1642%" y="629" width="0.1258%" height="15" fill="rgb(231,61,34)" fg:x="11065" fg:w="137"/><text x="10.4142%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (50 samples, 0.05%)</title><rect x="10.2442%" y="613" width="0.0459%" height="15" fill="rgb(235,75,3)" fg:x="11152" fg:w="50"/><text x="10.4942%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (50 samples, 0.05%)</title><rect x="10.2442%" y="597" width="0.0459%" height="15" fill="rgb(220,106,47)" fg:x="11152" fg:w="50"/><text x="10.4942%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (50 samples, 0.05%)</title><rect x="10.2442%" y="581" width="0.0459%" height="15" fill="rgb(210,196,33)" fg:x="11152" fg:w="50"/><text x="10.4942%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (50 samples, 0.05%)</title><rect x="10.2442%" y="565" width="0.0459%" height="15" fill="rgb(229,154,42)" fg:x="11152" fg:w="50"/><text x="10.4942%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (50 samples, 0.05%)</title><rect x="10.2442%" y="549" width="0.0459%" height="15" fill="rgb(228,114,26)" fg:x="11152" fg:w="50"/><text x="10.4942%" y="559.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.05%)</title><rect x="10.2442%" y="533" width="0.0459%" height="15" fill="rgb(208,144,1)" fg:x="11152" fg:w="50"/><text x="10.4942%" y="543.50"></text></g><g><title>__rg_alloc (50 samples, 0.05%)</title><rect x="10.2442%" y="517" width="0.0459%" height="15" fill="rgb(239,112,37)" fg:x="11152" fg:w="50"/><text x="10.4942%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (50 samples, 0.05%)</title><rect x="10.2442%" y="501" width="0.0459%" height="15" fill="rgb(210,96,50)" fg:x="11152" fg:w="50"/><text x="10.4942%" y="511.50"></text></g><g><title>rust_alloc (50 samples, 0.05%)</title><rect x="10.2442%" y="485" width="0.0459%" height="15" fill="rgb(222,178,2)" fg:x="11152" fg:w="50"/><text x="10.4942%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="10.2442%" y="469" width="0.0459%" height="15" fill="rgb(226,74,18)" fg:x="11152" fg:w="50"/><text x="10.4942%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="10.2442%" y="453" width="0.0459%" height="15" fill="rgb(225,67,54)" fg:x="11152" fg:w="50"/><text x="10.4942%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="10.2442%" y="437" width="0.0459%" height="15" fill="rgb(251,92,32)" fg:x="11152" fg:w="50"/><text x="10.4942%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="10.2442%" y="421" width="0.0459%" height="15" fill="rgb(228,149,22)" fg:x="11152" fg:w="50"/><text x="10.4942%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (50 samples, 0.05%)</title><rect x="10.2442%" y="405" width="0.0459%" height="15" fill="rgb(243,54,13)" fg:x="11152" fg:w="50"/><text x="10.4942%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (39 samples, 0.04%)</title><rect x="10.2543%" y="389" width="0.0358%" height="15" fill="rgb(243,180,28)" fg:x="11163" fg:w="39"/><text x="10.5043%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (35 samples, 0.03%)</title><rect x="10.2579%" y="373" width="0.0322%" height="15" fill="rgb(208,167,24)" fg:x="11167" fg:w="35"/><text x="10.5079%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (35 samples, 0.03%)</title><rect x="10.2579%" y="357" width="0.0322%" height="15" fill="rgb(245,73,45)" fg:x="11167" fg:w="35"/><text x="10.5079%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (35 samples, 0.03%)</title><rect x="10.2579%" y="341" width="0.0322%" height="15" fill="rgb(237,203,48)" fg:x="11167" fg:w="35"/><text x="10.5079%" y="351.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (143 samples, 0.13%)</title><rect x="10.1642%" y="981" width="0.1314%" height="15" fill="rgb(211,197,16)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="991.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (143 samples, 0.13%)</title><rect x="10.1642%" y="965" width="0.1314%" height="15" fill="rgb(243,99,51)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="975.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (143 samples, 0.13%)</title><rect x="10.1642%" y="949" width="0.1314%" height="15" fill="rgb(215,123,29)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="959.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (143 samples, 0.13%)</title><rect x="10.1642%" y="933" width="0.1314%" height="15" fill="rgb(239,186,37)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (143 samples, 0.13%)</title><rect x="10.1642%" y="917" width="0.1314%" height="15" fill="rgb(252,136,39)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="927.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (143 samples, 0.13%)</title><rect x="10.1642%" y="901" width="0.1314%" height="15" fill="rgb(223,213,32)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="911.50"></text></g><g><title>std::panic::catch_unwind (143 samples, 0.13%)</title><rect x="10.1642%" y="885" width="0.1314%" height="15" fill="rgb(233,115,5)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="895.50"></text></g><g><title>std::panicking::try (143 samples, 0.13%)</title><rect x="10.1642%" y="869" width="0.1314%" height="15" fill="rgb(207,226,44)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="879.50"></text></g><g><title>std::panicking::try::do_call (143 samples, 0.13%)</title><rect x="10.1642%" y="853" width="0.1314%" height="15" fill="rgb(208,126,0)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (143 samples, 0.13%)</title><rect x="10.1642%" y="837" width="0.1314%" height="15" fill="rgb(244,66,21)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (143 samples, 0.13%)</title><rect x="10.1642%" y="821" width="0.1314%" height="15" fill="rgb(222,97,12)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="831.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (143 samples, 0.13%)</title><rect x="10.1642%" y="805" width="0.1314%" height="15" fill="rgb(219,213,19)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="815.50"></text></g><g><title>async_ffi::FfiContext::with_context (143 samples, 0.13%)</title><rect x="10.1642%" y="789" width="0.1314%" height="15" fill="rgb(252,169,30)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (143 samples, 0.13%)</title><rect x="10.1642%" y="773" width="0.1314%" height="15" fill="rgb(206,32,51)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (143 samples, 0.13%)</title><rect x="10.1642%" y="757" width="0.1314%" height="15" fill="rgb(250,172,42)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="767.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (143 samples, 0.13%)</title><rect x="10.1642%" y="741" width="0.1314%" height="15" fill="rgb(209,34,43)" fg:x="11065" fg:w="143"/><text x="10.4142%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (119 samples, 0.11%)</title><rect x="10.3158%" y="917" width="0.1093%" height="15" fill="rgb(223,11,35)" fg:x="11230" fg:w="119"/><text x="10.5658%" y="927.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="10.5978%" y="869" width="0.0110%" height="15" fill="rgb(251,219,26)" fg:x="11537" fg:w="12"/><text x="10.8478%" y="879.50"></text></g><g><title>concurrent_queue::full_fence (12 samples, 0.01%)</title><rect x="10.8661%" y="837" width="0.0110%" height="15" fill="rgb(231,119,3)" fg:x="11829" fg:w="12"/><text x="11.1161%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (341 samples, 0.31%)</title><rect x="10.8844%" y="837" width="0.3132%" height="15" fill="rgb(216,97,11)" fg:x="11849" fg:w="341"/><text x="11.1344%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (341 samples, 0.31%)</title><rect x="10.8844%" y="821" width="0.3132%" height="15" fill="rgb(223,59,9)" fg:x="11849" fg:w="341"/><text x="11.1344%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (484 samples, 0.44%)</title><rect x="11.1977%" y="837" width="0.4446%" height="15" fill="rgb(233,93,31)" fg:x="12190" fg:w="484"/><text x="11.4477%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (474 samples, 0.44%)</title><rect x="11.2068%" y="821" width="0.4354%" height="15" fill="rgb(239,81,33)" fg:x="12200" fg:w="474"/><text x="11.4568%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,131 samples, 1.04%)</title><rect x="10.6088%" y="869" width="1.0389%" height="15" fill="rgb(213,120,34)" fg:x="11549" fg:w="1131"/><text x="10.8588%" y="879.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (992 samples, 0.91%)</title><rect x="10.7365%" y="853" width="0.9112%" height="15" fill="rgb(243,49,53)" fg:x="11688" fg:w="992"/><text x="10.9865%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (52 samples, 0.05%)</title><rect x="11.6661%" y="773" width="0.0478%" height="15" fill="rgb(247,216,33)" fg:x="12700" fg:w="52"/><text x="11.9161%" y="783.50"></text></g><g><title>__GI___lll_lock_wake (13 samples, 0.01%)</title><rect x="11.7020%" y="757" width="0.0119%" height="15" fill="rgb(226,26,14)" fg:x="12739" fg:w="13"/><text x="11.9520%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (57 samples, 0.05%)</title><rect x="11.6634%" y="853" width="0.0524%" height="15" fill="rgb(215,49,53)" fg:x="12697" fg:w="57"/><text x="11.9134%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (55 samples, 0.05%)</title><rect x="11.6652%" y="837" width="0.0505%" height="15" fill="rgb(245,162,40)" fg:x="12699" fg:w="55"/><text x="11.9152%" y="847.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.05%)</title><rect x="11.6652%" y="821" width="0.0505%" height="15" fill="rgb(229,68,17)" fg:x="12699" fg:w="55"/><text x="11.9152%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (54 samples, 0.05%)</title><rect x="11.6661%" y="805" width="0.0496%" height="15" fill="rgb(213,182,10)" fg:x="12700" fg:w="54"/><text x="11.9161%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (54 samples, 0.05%)</title><rect x="11.6661%" y="789" width="0.0496%" height="15" fill="rgb(245,125,30)" fg:x="12700" fg:w="54"/><text x="11.9161%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (20 samples, 0.02%)</title><rect x="11.7158%" y="853" width="0.0184%" height="15" fill="rgb(232,202,2)" fg:x="12754" fg:w="20"/><text x="11.9658%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.02%)</title><rect x="11.7158%" y="837" width="0.0184%" height="15" fill="rgb(237,140,51)" fg:x="12754" fg:w="20"/><text x="11.9658%" y="847.50"></text></g><g><title>event_listener::Inner::lock (95 samples, 0.09%)</title><rect x="11.7378%" y="853" width="0.0873%" height="15" fill="rgb(236,157,25)" fg:x="12778" fg:w="95"/><text x="11.9878%" y="863.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (95 samples, 0.09%)</title><rect x="11.7378%" y="837" width="0.0873%" height="15" fill="rgb(219,209,0)" fg:x="12778" fg:w="95"/><text x="11.9878%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (91 samples, 0.08%)</title><rect x="11.7415%" y="821" width="0.0836%" height="15" fill="rgb(240,116,54)" fg:x="12782" fg:w="91"/><text x="11.9915%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (89 samples, 0.08%)</title><rect x="11.7433%" y="805" width="0.0818%" height="15" fill="rgb(216,10,36)" fg:x="12784" fg:w="89"/><text x="11.9933%" y="815.50"></text></g><g><title>___pthread_mutex_lock (89 samples, 0.08%)</title><rect x="11.7433%" y="789" width="0.0818%" height="15" fill="rgb(222,72,44)" fg:x="12784" fg:w="89"/><text x="11.9933%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (14 samples, 0.01%)</title><rect x="11.8306%" y="805" width="0.0129%" height="15" fill="rgb(232,159,9)" fg:x="12879" fg:w="14"/><text x="12.0806%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.01%)</title><rect x="11.8306%" y="789" width="0.0129%" height="15" fill="rgb(210,39,32)" fg:x="12879" fg:w="14"/><text x="12.0806%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.01%)</title><rect x="11.8306%" y="773" width="0.0129%" height="15" fill="rgb(216,194,45)" fg:x="12879" fg:w="14"/><text x="12.0806%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (62 samples, 0.06%)</title><rect x="11.8453%" y="789" width="0.0570%" height="15" fill="rgb(218,18,35)" fg:x="12895" fg:w="62"/><text x="12.0953%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (62 samples, 0.06%)</title><rect x="11.8453%" y="773" width="0.0570%" height="15" fill="rgb(207,83,51)" fg:x="12895" fg:w="62"/><text x="12.0953%" y="783.50"></text></g><g><title>event_listener::List::notify (98 samples, 0.09%)</title><rect x="11.8251%" y="853" width="0.0900%" height="15" fill="rgb(225,63,43)" fg:x="12873" fg:w="98"/><text x="12.0751%" y="863.50"></text></g><g><title>core::task::wake::Waker::wake (93 samples, 0.09%)</title><rect x="11.8297%" y="837" width="0.0854%" height="15" fill="rgb(207,57,36)" fg:x="12878" fg:w="93"/><text x="12.0797%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (93 samples, 0.09%)</title><rect x="11.8297%" y="821" width="0.0854%" height="15" fill="rgb(216,99,33)" fg:x="12878" fg:w="93"/><text x="12.0797%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (78 samples, 0.07%)</title><rect x="11.8434%" y="805" width="0.0717%" height="15" fill="rgb(225,42,16)" fg:x="12893" fg:w="78"/><text x="12.0934%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="11.9022%" y="789" width="0.0129%" height="15" fill="rgb(220,201,45)" fg:x="12957" fg:w="14"/><text x="12.1522%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="11.9022%" y="773" width="0.0129%" height="15" fill="rgb(225,33,4)" fg:x="12957" fg:w="14"/><text x="12.1522%" y="783.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,196 samples, 2.02%)</title><rect x="10.5758%" y="885" width="2.0172%" height="15" fill="rgb(224,33,50)" fg:x="11513" fg:w="2196"/><text x="10.8258%" y="895.50">a..</text></g><g><title>event_listener::Event::notify (1,029 samples, 0.95%)</title><rect x="11.6478%" y="869" width="0.9452%" height="15" fill="rgb(246,198,51)" fg:x="12680" fg:w="1029"/><text x="11.8978%" y="879.50"></text></g><g><title>event_listener::full_fence (738 samples, 0.68%)</title><rect x="11.9151%" y="853" width="0.6779%" height="15" fill="rgb(205,22,4)" fg:x="12971" fg:w="738"/><text x="12.1651%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (726 samples, 0.67%)</title><rect x="11.9261%" y="837" width="0.6669%" height="15" fill="rgb(206,3,8)" fg:x="12983" fg:w="726"/><text x="12.1761%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (726 samples, 0.67%)</title><rect x="11.9261%" y="821" width="0.6669%" height="15" fill="rgb(251,23,15)" fg:x="12983" fg:w="726"/><text x="12.1761%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (32 samples, 0.03%)</title><rect x="12.5930%" y="885" width="0.0294%" height="15" fill="rgb(252,88,28)" fg:x="13709" fg:w="32"/><text x="12.8430%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (20 samples, 0.02%)</title><rect x="12.6224%" y="885" width="0.0184%" height="15" fill="rgb(212,127,14)" fg:x="13741" fg:w="20"/><text x="12.8724%" y="895.50"></text></g><g><title>core::mem::replace (20 samples, 0.02%)</title><rect x="12.6224%" y="869" width="0.0184%" height="15" fill="rgb(247,145,37)" fg:x="13741" fg:w="20"/><text x="12.8724%" y="879.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="12.6288%" y="853" width="0.0119%" height="15" fill="rgb(209,117,53)" fg:x="13748" fg:w="13"/><text x="12.8788%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="12.6435%" y="869" width="0.0156%" height="15" fill="rgb(212,90,42)" fg:x="13764" fg:w="17"/><text x="12.8935%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.02%)</title><rect x="12.6435%" y="853" width="0.0156%" height="15" fill="rgb(218,164,37)" fg:x="13764" fg:w="17"/><text x="12.8935%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.02%)</title><rect x="12.6435%" y="837" width="0.0156%" height="15" fill="rgb(246,65,34)" fg:x="13764" fg:w="17"/><text x="12.8935%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (16 samples, 0.01%)</title><rect x="12.6591%" y="869" width="0.0147%" height="15" fill="rgb(231,100,33)" fg:x="13781" fg:w="16"/><text x="12.9091%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (16 samples, 0.01%)</title><rect x="12.6591%" y="853" width="0.0147%" height="15" fill="rgb(228,126,14)" fg:x="13781" fg:w="16"/><text x="12.9091%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="12.6591%" y="837" width="0.0147%" height="15" fill="rgb(215,173,21)" fg:x="13781" fg:w="16"/><text x="12.9091%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.01%)</title><rect x="12.6591%" y="821" width="0.0147%" height="15" fill="rgb(210,6,40)" fg:x="13781" fg:w="16"/><text x="12.9091%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (16 samples, 0.01%)</title><rect x="12.6591%" y="805" width="0.0147%" height="15" fill="rgb(212,48,18)" fg:x="13781" fg:w="16"/><text x="12.9091%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (16 samples, 0.01%)</title><rect x="12.6591%" y="789" width="0.0147%" height="15" fill="rgb(230,214,11)" fg:x="13781" fg:w="16"/><text x="12.9091%" y="799.50"></text></g><g><title>event_listener::Inner::lock (14 samples, 0.01%)</title><rect x="12.6738%" y="869" width="0.0129%" height="15" fill="rgb(254,105,39)" fg:x="13797" fg:w="14"/><text x="12.9238%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="12.6738%" y="853" width="0.0129%" height="15" fill="rgb(245,158,5)" fg:x="13797" fg:w="14"/><text x="12.9238%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="12.6738%" y="837" width="0.0129%" height="15" fill="rgb(249,208,11)" fg:x="13797" fg:w="14"/><text x="12.9238%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="12.6738%" y="821" width="0.0129%" height="15" fill="rgb(210,39,28)" fg:x="13797" fg:w="14"/><text x="12.9238%" y="831.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="12.6738%" y="805" width="0.0129%" height="15" fill="rgb(211,56,53)" fg:x="13797" fg:w="14"/><text x="12.9238%" y="815.50"></text></g><g><title>event_listener::Event::listen (58 samples, 0.05%)</title><rect x="12.6426%" y="885" width="0.0533%" height="15" fill="rgb(226,201,30)" fg:x="13763" fg:w="58"/><text x="12.8926%" y="895.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,588 samples, 2.38%)</title><rect x="10.5078%" y="901" width="2.3773%" height="15" fill="rgb(239,101,34)" fg:x="11439" fg:w="2588"/><text x="10.7578%" y="911.50">&lt;a..</text></g><g><title>event_listener::Event::notify (206 samples, 0.19%)</title><rect x="12.6959%" y="885" width="0.1892%" height="15" fill="rgb(226,209,5)" fg:x="13821" fg:w="206"/><text x="12.9459%" y="895.50"></text></g><g><title>event_listener::full_fence (181 samples, 0.17%)</title><rect x="12.7189%" y="869" width="0.1663%" height="15" fill="rgb(250,105,47)" fg:x="13846" fg:w="181"/><text x="12.9689%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (168 samples, 0.15%)</title><rect x="12.7308%" y="853" width="0.1543%" height="15" fill="rgb(230,72,3)" fg:x="13859" fg:w="168"/><text x="12.9808%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (168 samples, 0.15%)</title><rect x="12.7308%" y="837" width="0.1543%" height="15" fill="rgb(232,218,39)" fg:x="13859" fg:w="168"/><text x="12.9808%" y="847.50"></text></g><g><title>event_listener::Inner::lock (15 samples, 0.01%)</title><rect x="12.9090%" y="837" width="0.0138%" height="15" fill="rgb(248,166,6)" fg:x="14053" fg:w="15"/><text x="13.1590%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="12.9090%" y="821" width="0.0138%" height="15" fill="rgb(247,89,20)" fg:x="14053" fg:w="15"/><text x="13.1590%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="12.9090%" y="805" width="0.0138%" height="15" fill="rgb(248,130,54)" fg:x="14053" fg:w="15"/><text x="13.1590%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="12.9090%" y="789" width="0.0138%" height="15" fill="rgb(234,196,4)" fg:x="14053" fg:w="15"/><text x="13.1590%" y="799.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="12.9090%" y="773" width="0.0138%" height="15" fill="rgb(250,143,31)" fg:x="14053" fg:w="15"/><text x="13.1590%" y="783.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="12.9017%" y="853" width="0.0230%" height="15" fill="rgb(211,110,34)" fg:x="14045" fg:w="25"/><text x="13.1517%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,868 samples, 2.63%)</title><rect x="10.2956%" y="933" width="2.6345%" height="15" fill="rgb(215,124,48)" fg:x="11208" fg:w="2868"/><text x="10.5456%" y="943.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,727 samples, 2.51%)</title><rect x="10.4251%" y="917" width="2.5050%" height="15" fill="rgb(216,46,13)" fg:x="11349" fg:w="2727"/><text x="10.6751%" y="927.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (49 samples, 0.05%)</title><rect x="12.8851%" y="901" width="0.0450%" height="15" fill="rgb(205,184,25)" fg:x="14027" fg:w="49"/><text x="13.1351%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (31 samples, 0.03%)</title><rect x="12.9017%" y="885" width="0.0285%" height="15" fill="rgb(228,1,10)" fg:x="14045" fg:w="31"/><text x="13.1517%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (31 samples, 0.03%)</title><rect x="12.9017%" y="869" width="0.0285%" height="15" fill="rgb(213,116,27)" fg:x="14045" fg:w="31"/><text x="13.1517%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,891 samples, 2.66%)</title><rect x="10.2956%" y="965" width="2.6557%" height="15" fill="rgb(241,95,50)" fg:x="11208" fg:w="2891"/><text x="10.5456%" y="975.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (2,891 samples, 2.66%)</title><rect x="10.2956%" y="949" width="2.6557%" height="15" fill="rgb(238,48,32)" fg:x="11208" fg:w="2891"/><text x="10.5456%" y="959.50">tr..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (16 samples, 0.01%)</title><rect x="12.9366%" y="933" width="0.0147%" height="15" fill="rgb(235,113,49)" fg:x="14083" fg:w="16"/><text x="13.1866%" y="943.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="13.6182%" y="949" width="0.0367%" height="15" fill="rgb(205,127,43)" fg:x="14825" fg:w="40"/><text x="13.8682%" y="959.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="13.6549%" y="949" width="0.0156%" height="15" fill="rgb(250,162,2)" fg:x="14865" fg:w="17"/><text x="13.9049%" y="959.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (20 samples, 0.02%)</title><rect x="14.1803%" y="901" width="0.0184%" height="15" fill="rgb(220,13,41)" fg:x="15437" fg:w="20"/><text x="14.4303%" y="911.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="14.2318%" y="677" width="0.0110%" height="15" fill="rgb(249,221,25)" fg:x="15493" fg:w="12"/><text x="14.4818%" y="687.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="14.2520%" y="645" width="0.0156%" height="15" fill="rgb(215,208,19)" fg:x="15515" fg:w="17"/><text x="14.5020%" y="655.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="14.2676%" y="645" width="0.0110%" height="15" fill="rgb(236,175,2)" fg:x="15532" fg:w="12"/><text x="14.5176%" y="655.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="14.2676%" y="629" width="0.0110%" height="15" fill="rgb(241,52,2)" fg:x="15532" fg:w="12"/><text x="14.5176%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (277 samples, 0.25%)</title><rect x="14.2511%" y="677" width="0.2545%" height="15" fill="rgb(248,140,14)" fg:x="15514" fg:w="277"/><text x="14.5011%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (276 samples, 0.25%)</title><rect x="14.2520%" y="661" width="0.2535%" height="15" fill="rgb(253,22,42)" fg:x="15515" fg:w="276"/><text x="14.5020%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (247 samples, 0.23%)</title><rect x="14.2786%" y="645" width="0.2269%" height="15" fill="rgb(234,61,47)" fg:x="15544" fg:w="247"/><text x="14.5286%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::take (232 samples, 0.21%)</title><rect x="14.2924%" y="629" width="0.2131%" height="15" fill="rgb(208,226,15)" fg:x="15559" fg:w="232"/><text x="14.5424%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (232 samples, 0.21%)</title><rect x="14.2924%" y="613" width="0.2131%" height="15" fill="rgb(217,221,4)" fg:x="15559" fg:w="232"/><text x="14.5424%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (346 samples, 0.32%)</title><rect x="14.1987%" y="789" width="0.3178%" height="15" fill="rgb(212,174,34)" fg:x="15457" fg:w="346"/><text x="14.4487%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (346 samples, 0.32%)</title><rect x="14.1987%" y="773" width="0.3178%" height="15" fill="rgb(253,83,4)" fg:x="15457" fg:w="346"/><text x="14.4487%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (346 samples, 0.32%)</title><rect x="14.1987%" y="757" width="0.3178%" height="15" fill="rgb(250,195,49)" fg:x="15457" fg:w="346"/><text x="14.4487%" y="767.50"></text></g><g><title>alloc::alloc::alloc (335 samples, 0.31%)</title><rect x="14.2088%" y="741" width="0.3077%" height="15" fill="rgb(241,192,25)" fg:x="15468" fg:w="335"/><text x="14.4588%" y="751.50"></text></g><g><title>__rg_alloc (335 samples, 0.31%)</title><rect x="14.2088%" y="725" width="0.3077%" height="15" fill="rgb(208,124,10)" fg:x="15468" fg:w="335"/><text x="14.4588%" y="735.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (335 samples, 0.31%)</title><rect x="14.2088%" y="709" width="0.3077%" height="15" fill="rgb(222,33,0)" fg:x="15468" fg:w="335"/><text x="14.4588%" y="719.50"></text></g><g><title>rust_alloc (310 samples, 0.28%)</title><rect x="14.2318%" y="693" width="0.2848%" height="15" fill="rgb(234,209,28)" fg:x="15493" fg:w="310"/><text x="14.4818%" y="703.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="14.5055%" y="677" width="0.0110%" height="15" fill="rgb(224,11,23)" fg:x="15791" fg:w="12"/><text x="14.7555%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (356 samples, 0.33%)</title><rect x="14.1987%" y="821" width="0.3270%" height="15" fill="rgb(232,99,1)" fg:x="15457" fg:w="356"/><text x="14.4487%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (356 samples, 0.33%)</title><rect x="14.1987%" y="805" width="0.3270%" height="15" fill="rgb(237,95,45)" fg:x="15457" fg:w="356"/><text x="14.4487%" y="815.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (474 samples, 0.44%)</title><rect x="14.1647%" y="933" width="0.4354%" height="15" fill="rgb(208,109,11)" fg:x="15420" fg:w="474"/><text x="14.4147%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (465 samples, 0.43%)</title><rect x="14.1730%" y="917" width="0.4271%" height="15" fill="rgb(216,190,48)" fg:x="15429" fg:w="465"/><text x="14.4230%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (437 samples, 0.40%)</title><rect x="14.1987%" y="901" width="0.4014%" height="15" fill="rgb(251,171,36)" fg:x="15457" fg:w="437"/><text x="14.4487%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (437 samples, 0.40%)</title><rect x="14.1987%" y="885" width="0.4014%" height="15" fill="rgb(230,62,22)" fg:x="15457" fg:w="437"/><text x="14.4487%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (437 samples, 0.40%)</title><rect x="14.1987%" y="869" width="0.4014%" height="15" fill="rgb(225,114,35)" fg:x="15457" fg:w="437"/><text x="14.4487%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (437 samples, 0.40%)</title><rect x="14.1987%" y="853" width="0.4014%" height="15" fill="rgb(215,118,42)" fg:x="15457" fg:w="437"/><text x="14.4487%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (437 samples, 0.40%)</title><rect x="14.1987%" y="837" width="0.4014%" height="15" fill="rgb(243,119,21)" fg:x="15457" fg:w="437"/><text x="14.4487%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (81 samples, 0.07%)</title><rect x="14.5257%" y="821" width="0.0744%" height="15" fill="rgb(252,177,53)" fg:x="15813" fg:w="81"/><text x="14.7757%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (81 samples, 0.07%)</title><rect x="14.5257%" y="805" width="0.0744%" height="15" fill="rgb(237,209,29)" fg:x="15813" fg:w="81"/><text x="14.7757%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (62 samples, 0.06%)</title><rect x="14.5432%" y="789" width="0.0570%" height="15" fill="rgb(212,65,23)" fg:x="15832" fg:w="62"/><text x="14.7932%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (46 samples, 0.04%)</title><rect x="14.6185%" y="917" width="0.0423%" height="15" fill="rgb(230,222,46)" fg:x="15914" fg:w="46"/><text x="14.8685%" y="927.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (24 samples, 0.02%)</title><rect x="14.6387%" y="901" width="0.0220%" height="15" fill="rgb(215,135,32)" fg:x="15936" fg:w="24"/><text x="14.8887%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (15 samples, 0.01%)</title><rect x="14.6626%" y="693" width="0.0138%" height="15" fill="rgb(246,101,22)" fg:x="15962" fg:w="15"/><text x="14.9126%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (112 samples, 0.10%)</title><rect x="14.6929%" y="581" width="0.1029%" height="15" fill="rgb(206,107,13)" fg:x="15995" fg:w="112"/><text x="14.9429%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (112 samples, 0.10%)</title><rect x="14.6929%" y="565" width="0.1029%" height="15" fill="rgb(250,100,44)" fg:x="15995" fg:w="112"/><text x="14.9429%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (105 samples, 0.10%)</title><rect x="14.6993%" y="549" width="0.0965%" height="15" fill="rgb(231,147,38)" fg:x="16002" fg:w="105"/><text x="14.9493%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::take (91 samples, 0.08%)</title><rect x="14.7122%" y="533" width="0.0836%" height="15" fill="rgb(229,8,40)" fg:x="16016" fg:w="91"/><text x="14.9622%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (91 samples, 0.08%)</title><rect x="14.7122%" y="517" width="0.0836%" height="15" fill="rgb(221,135,30)" fg:x="16016" fg:w="91"/><text x="14.9622%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (154 samples, 0.14%)</title><rect x="14.6626%" y="725" width="0.1415%" height="15" fill="rgb(249,193,18)" fg:x="15962" fg:w="154"/><text x="14.9126%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (154 samples, 0.14%)</title><rect x="14.6626%" y="709" width="0.1415%" height="15" fill="rgb(209,133,39)" fg:x="15962" fg:w="154"/><text x="14.9126%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (139 samples, 0.13%)</title><rect x="14.6764%" y="693" width="0.1277%" height="15" fill="rgb(232,100,14)" fg:x="15977" fg:w="139"/><text x="14.9264%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (139 samples, 0.13%)</title><rect x="14.6764%" y="677" width="0.1277%" height="15" fill="rgb(224,185,1)" fg:x="15977" fg:w="139"/><text x="14.9264%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (139 samples, 0.13%)</title><rect x="14.6764%" y="661" width="0.1277%" height="15" fill="rgb(223,139,8)" fg:x="15977" fg:w="139"/><text x="14.9264%" y="671.50"></text></g><g><title>alloc::alloc::alloc (138 samples, 0.13%)</title><rect x="14.6773%" y="645" width="0.1268%" height="15" fill="rgb(232,213,38)" fg:x="15978" fg:w="138"/><text x="14.9273%" y="655.50"></text></g><g><title>__rg_alloc (138 samples, 0.13%)</title><rect x="14.6773%" y="629" width="0.1268%" height="15" fill="rgb(207,94,22)" fg:x="15978" fg:w="138"/><text x="14.9273%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (138 samples, 0.13%)</title><rect x="14.6773%" y="613" width="0.1268%" height="15" fill="rgb(219,183,54)" fg:x="15978" fg:w="138"/><text x="14.9273%" y="623.50"></text></g><g><title>rust_alloc (126 samples, 0.12%)</title><rect x="14.6883%" y="597" width="0.1157%" height="15" fill="rgb(216,185,54)" fg:x="15990" fg:w="126"/><text x="14.9383%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (212 samples, 0.19%)</title><rect x="14.6608%" y="837" width="0.1947%" height="15" fill="rgb(254,217,39)" fg:x="15960" fg:w="212"/><text x="14.9108%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (212 samples, 0.19%)</title><rect x="14.6608%" y="821" width="0.1947%" height="15" fill="rgb(240,178,23)" fg:x="15960" fg:w="212"/><text x="14.9108%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (210 samples, 0.19%)</title><rect x="14.6626%" y="805" width="0.1929%" height="15" fill="rgb(218,11,47)" fg:x="15962" fg:w="210"/><text x="14.9126%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (210 samples, 0.19%)</title><rect x="14.6626%" y="789" width="0.1929%" height="15" fill="rgb(218,51,51)" fg:x="15962" fg:w="210"/><text x="14.9126%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (210 samples, 0.19%)</title><rect x="14.6626%" y="773" width="0.1929%" height="15" fill="rgb(238,126,27)" fg:x="15962" fg:w="210"/><text x="14.9126%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (210 samples, 0.19%)</title><rect x="14.6626%" y="757" width="0.1929%" height="15" fill="rgb(249,202,22)" fg:x="15962" fg:w="210"/><text x="14.9126%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (210 samples, 0.19%)</title><rect x="14.6626%" y="741" width="0.1929%" height="15" fill="rgb(254,195,49)" fg:x="15962" fg:w="210"/><text x="14.9126%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (56 samples, 0.05%)</title><rect x="14.8041%" y="725" width="0.0514%" height="15" fill="rgb(208,123,14)" fg:x="16116" fg:w="56"/><text x="15.0541%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.05%)</title><rect x="14.8105%" y="709" width="0.0450%" height="15" fill="rgb(224,200,8)" fg:x="16123" fg:w="49"/><text x="15.0605%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (40 samples, 0.04%)</title><rect x="14.8188%" y="693" width="0.0367%" height="15" fill="rgb(217,61,36)" fg:x="16132" fg:w="40"/><text x="15.0688%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="14.8555%" y="837" width="0.0110%" height="15" fill="rgb(206,35,45)" fg:x="16172" fg:w="12"/><text x="15.1055%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (155 samples, 0.14%)</title><rect x="14.8968%" y="693" width="0.1424%" height="15" fill="rgb(217,65,33)" fg:x="16217" fg:w="155"/><text x="15.1468%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (155 samples, 0.14%)</title><rect x="14.8968%" y="677" width="0.1424%" height="15" fill="rgb(222,158,48)" fg:x="16217" fg:w="155"/><text x="15.1468%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (141 samples, 0.13%)</title><rect x="14.9097%" y="661" width="0.1295%" height="15" fill="rgb(254,2,54)" fg:x="16231" fg:w="141"/><text x="15.1597%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::take (129 samples, 0.12%)</title><rect x="14.9207%" y="645" width="0.1185%" height="15" fill="rgb(250,143,38)" fg:x="16243" fg:w="129"/><text x="15.1707%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (129 samples, 0.12%)</title><rect x="14.9207%" y="629" width="0.1185%" height="15" fill="rgb(248,25,0)" fg:x="16243" fg:w="129"/><text x="15.1707%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (177 samples, 0.16%)</title><rect x="14.8794%" y="789" width="0.1626%" height="15" fill="rgb(206,152,27)" fg:x="16198" fg:w="177"/><text x="15.1294%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (177 samples, 0.16%)</title><rect x="14.8794%" y="773" width="0.1626%" height="15" fill="rgb(240,77,30)" fg:x="16198" fg:w="177"/><text x="15.1294%" y="783.50"></text></g><g><title>alloc::alloc::alloc (167 samples, 0.15%)</title><rect x="14.8886%" y="757" width="0.1534%" height="15" fill="rgb(231,5,3)" fg:x="16208" fg:w="167"/><text x="15.1386%" y="767.50"></text></g><g><title>__rg_alloc (167 samples, 0.15%)</title><rect x="14.8886%" y="741" width="0.1534%" height="15" fill="rgb(207,226,32)" fg:x="16208" fg:w="167"/><text x="15.1386%" y="751.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (167 samples, 0.15%)</title><rect x="14.8886%" y="725" width="0.1534%" height="15" fill="rgb(222,207,47)" fg:x="16208" fg:w="167"/><text x="15.1386%" y="735.50"></text></g><g><title>rust_alloc (167 samples, 0.15%)</title><rect x="14.8886%" y="709" width="0.1534%" height="15" fill="rgb(229,115,45)" fg:x="16208" fg:w="167"/><text x="15.1386%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (193 samples, 0.18%)</title><rect x="14.8665%" y="837" width="0.1773%" height="15" fill="rgb(224,191,6)" fg:x="16184" fg:w="193"/><text x="15.1165%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (180 samples, 0.17%)</title><rect x="14.8785%" y="821" width="0.1653%" height="15" fill="rgb(230,227,24)" fg:x="16197" fg:w="180"/><text x="15.1285%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (179 samples, 0.16%)</title><rect x="14.8794%" y="805" width="0.1644%" height="15" fill="rgb(228,80,19)" fg:x="16198" fg:w="179"/><text x="15.1294%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (435 samples, 0.40%)</title><rect x="14.6608%" y="853" width="0.3996%" height="15" fill="rgb(247,229,0)" fg:x="15960" fg:w="435"/><text x="14.9108%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (18 samples, 0.02%)</title><rect x="15.0438%" y="837" width="0.0165%" height="15" fill="rgb(237,194,15)" fg:x="16377" fg:w="18"/><text x="15.2938%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (521 samples, 0.48%)</title><rect x="14.6001%" y="933" width="0.4786%" height="15" fill="rgb(219,203,20)" fg:x="15894" fg:w="521"/><text x="14.8501%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (455 samples, 0.42%)</title><rect x="14.6608%" y="917" width="0.4180%" height="15" fill="rgb(234,128,8)" fg:x="15960" fg:w="455"/><text x="14.9108%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (455 samples, 0.42%)</title><rect x="14.6608%" y="901" width="0.4180%" height="15" fill="rgb(248,202,8)" fg:x="15960" fg:w="455"/><text x="14.9108%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (455 samples, 0.42%)</title><rect x="14.6608%" y="885" width="0.4180%" height="15" fill="rgb(206,104,37)" fg:x="15960" fg:w="455"/><text x="14.9108%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (455 samples, 0.42%)</title><rect x="14.6608%" y="869" width="0.4180%" height="15" fill="rgb(223,8,27)" fg:x="15960" fg:w="455"/><text x="14.9108%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (20 samples, 0.02%)</title><rect x="15.0604%" y="853" width="0.0184%" height="15" fill="rgb(216,217,28)" fg:x="16395" fg:w="20"/><text x="15.3104%" y="863.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,539 samples, 1.41%)</title><rect x="13.6705%" y="949" width="1.4137%" height="15" fill="rgb(249,199,1)" fg:x="14882" fg:w="1539"/><text x="13.9205%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (196 samples, 0.18%)</title><rect x="15.0842%" y="949" width="0.1800%" height="15" fill="rgb(240,85,17)" fg:x="16421" fg:w="196"/><text x="15.3342%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (16 samples, 0.01%)</title><rect x="15.2643%" y="949" width="0.0147%" height="15" fill="rgb(206,108,45)" fg:x="16617" fg:w="16"/><text x="15.5143%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (16 samples, 0.01%)</title><rect x="15.2643%" y="933" width="0.0147%" height="15" fill="rgb(245,210,41)" fg:x="16617" fg:w="16"/><text x="15.5143%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.01%)</title><rect x="15.2670%" y="917" width="0.0119%" height="15" fill="rgb(206,13,37)" fg:x="16620" fg:w="13"/><text x="15.5170%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (412 samples, 0.38%)</title><rect x="15.2790%" y="949" width="0.3785%" height="15" fill="rgb(250,61,18)" fg:x="16633" fg:w="412"/><text x="15.5290%" y="959.50"></text></g><g><title>core::ptr::write (380 samples, 0.35%)</title><rect x="15.3084%" y="933" width="0.3491%" height="15" fill="rgb(235,172,48)" fg:x="16665" fg:w="380"/><text x="15.5584%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (372 samples, 0.34%)</title><rect x="15.3157%" y="917" width="0.3417%" height="15" fill="rgb(249,201,17)" fg:x="16673" fg:w="372"/><text x="15.5657%" y="927.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="15.6887%" y="757" width="0.0101%" height="15" fill="rgb(219,208,6)" fg:x="17079" fg:w="11"/><text x="15.9387%" y="767.50"></text></g><g><title>snmalloc::CDLLNodeBase&lt;snmalloc::CDLLNode&lt;snmalloc::CapPtrCBChunk&gt;, snmalloc::CapPtrCBChunk&gt;::is_empty (11 samples, 0.01%)</title><rect x="15.7153%" y="725" width="0.0101%" height="15" fill="rgb(248,31,23)" fg:x="17108" fg:w="11"/><text x="15.9653%" y="735.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (14 samples, 0.01%)</title><rect x="15.7263%" y="709" width="0.0129%" height="15" fill="rgb(245,15,42)" fg:x="17120" fg:w="14"/><text x="15.9763%" y="719.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (14 samples, 0.01%)</title><rect x="15.7263%" y="693" width="0.0129%" height="15" fill="rgb(222,217,39)" fg:x="17120" fg:w="14"/><text x="15.9763%" y="703.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="15.7282%" y="677" width="0.0110%" height="15" fill="rgb(210,219,27)" fg:x="17122" fg:w="12"/><text x="15.9782%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::take (40 samples, 0.04%)</title><rect x="15.7392%" y="709" width="0.0367%" height="15" fill="rgb(252,166,36)" fg:x="17134" fg:w="40"/><text x="15.9892%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (40 samples, 0.04%)</title><rect x="15.7392%" y="693" width="0.0367%" height="15" fill="rgb(245,132,34)" fg:x="17134" fg:w="40"/><text x="15.9892%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (70 samples, 0.06%)</title><rect x="15.7144%" y="741" width="0.0643%" height="15" fill="rgb(236,54,3)" fg:x="17107" fg:w="70"/><text x="15.9644%" y="751.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (58 samples, 0.05%)</title><rect x="15.7254%" y="725" width="0.0533%" height="15" fill="rgb(241,173,43)" fg:x="17119" fg:w="58"/><text x="15.9754%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::take (11 samples, 0.01%)</title><rect x="15.7796%" y="677" width="0.0101%" height="15" fill="rgb(215,190,9)" fg:x="17178" fg:w="11"/><text x="16.0296%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (11 samples, 0.01%)</title><rect x="15.7796%" y="661" width="0.0101%" height="15" fill="rgb(242,101,16)" fg:x="17178" fg:w="11"/><text x="16.0296%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (32 samples, 0.03%)</title><rect x="15.7787%" y="741" width="0.0294%" height="15" fill="rgb(223,190,21)" fg:x="17177" fg:w="32"/><text x="16.0287%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (32 samples, 0.03%)</title><rect x="15.7787%" y="725" width="0.0294%" height="15" fill="rgb(215,228,25)" fg:x="17177" fg:w="32"/><text x="16.0287%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="15.7796%" y="709" width="0.0285%" height="15" fill="rgb(225,36,22)" fg:x="17178" fg:w="31"/><text x="16.0296%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="15.7796%" y="693" width="0.0285%" height="15" fill="rgb(251,106,46)" fg:x="17178" fg:w="31"/><text x="16.0296%" y="703.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (20 samples, 0.02%)</title><rect x="15.7897%" y="677" width="0.0184%" height="15" fill="rgb(208,90,1)" fg:x="17189" fg:w="20"/><text x="16.0397%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (334 samples, 0.31%)</title><rect x="15.6878%" y="789" width="0.3068%" height="15" fill="rgb(243,10,4)" fg:x="17078" fg:w="334"/><text x="15.9378%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (334 samples, 0.31%)</title><rect x="15.6878%" y="773" width="0.3068%" height="15" fill="rgb(212,137,27)" fg:x="17078" fg:w="334"/><text x="15.9378%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (322 samples, 0.30%)</title><rect x="15.6988%" y="757" width="0.2958%" height="15" fill="rgb(231,220,49)" fg:x="17090" fg:w="322"/><text x="15.9488%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (196 samples, 0.18%)</title><rect x="15.8145%" y="741" width="0.1800%" height="15" fill="rgb(237,96,20)" fg:x="17216" fg:w="196"/><text x="16.0645%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (196 samples, 0.18%)</title><rect x="15.8145%" y="725" width="0.1800%" height="15" fill="rgb(239,229,30)" fg:x="17216" fg:w="196"/><text x="16.0645%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (360 samples, 0.33%)</title><rect x="15.6648%" y="885" width="0.3307%" height="15" fill="rgb(219,65,33)" fg:x="17053" fg:w="360"/><text x="15.9148%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (360 samples, 0.33%)</title><rect x="15.6648%" y="869" width="0.3307%" height="15" fill="rgb(243,134,7)" fg:x="17053" fg:w="360"/><text x="15.9148%" y="879.50"></text></g><g><title>alloc::alloc::alloc (349 samples, 0.32%)</title><rect x="15.6749%" y="853" width="0.3206%" height="15" fill="rgb(216,177,54)" fg:x="17064" fg:w="349"/><text x="15.9249%" y="863.50"></text></g><g><title>__rg_alloc (349 samples, 0.32%)</title><rect x="15.6749%" y="837" width="0.3206%" height="15" fill="rgb(211,160,20)" fg:x="17064" fg:w="349"/><text x="15.9249%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (349 samples, 0.32%)</title><rect x="15.6749%" y="821" width="0.3206%" height="15" fill="rgb(239,85,39)" fg:x="17064" fg:w="349"/><text x="15.9249%" y="831.50"></text></g><g><title>rust_alloc (347 samples, 0.32%)</title><rect x="15.6767%" y="805" width="0.3188%" height="15" fill="rgb(232,125,22)" fg:x="17066" fg:w="347"/><text x="15.9267%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (379 samples, 0.35%)</title><rect x="15.6648%" y="901" width="0.3481%" height="15" fill="rgb(244,57,34)" fg:x="17053" fg:w="379"/><text x="15.9148%" y="911.50"></text></g><g><title>core::alloc::layout::Layout::array (12 samples, 0.01%)</title><rect x="16.0019%" y="885" width="0.0110%" height="15" fill="rgb(214,203,32)" fg:x="17420" fg:w="12"/><text x="16.2519%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (12 samples, 0.01%)</title><rect x="16.0019%" y="869" width="0.0110%" height="15" fill="rgb(207,58,43)" fg:x="17420" fg:w="12"/><text x="16.2519%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (12 samples, 0.01%)</title><rect x="16.0019%" y="853" width="0.0110%" height="15" fill="rgb(215,193,15)" fg:x="17420" fg:w="12"/><text x="16.2519%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (396 samples, 0.36%)</title><rect x="15.6574%" y="949" width="0.3638%" height="15" fill="rgb(232,15,44)" fg:x="17045" fg:w="396"/><text x="15.9074%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (396 samples, 0.36%)</title><rect x="15.6574%" y="933" width="0.3638%" height="15" fill="rgb(212,3,48)" fg:x="17045" fg:w="396"/><text x="15.9074%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (388 samples, 0.36%)</title><rect x="15.6648%" y="917" width="0.3564%" height="15" fill="rgb(218,128,7)" fg:x="17053" fg:w="388"/><text x="15.9148%" y="927.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="16.0442%" y="693" width="0.0119%" height="15" fill="rgb(226,216,39)" fg:x="17466" fg:w="13"/><text x="16.2942%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (45 samples, 0.04%)</title><rect x="16.0956%" y="645" width="0.0413%" height="15" fill="rgb(243,47,51)" fg:x="17522" fg:w="45"/><text x="16.3456%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (43 samples, 0.04%)</title><rect x="16.0974%" y="629" width="0.0395%" height="15" fill="rgb(241,183,40)" fg:x="17524" fg:w="43"/><text x="16.3474%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (95 samples, 0.09%)</title><rect x="16.0589%" y="693" width="0.0873%" height="15" fill="rgb(231,217,32)" fg:x="17482" fg:w="95"/><text x="16.3089%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (95 samples, 0.09%)</title><rect x="16.0589%" y="677" width="0.0873%" height="15" fill="rgb(229,61,38)" fg:x="17482" fg:w="95"/><text x="16.3089%" y="687.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (95 samples, 0.09%)</title><rect x="16.0589%" y="661" width="0.0873%" height="15" fill="rgb(225,210,5)" fg:x="17482" fg:w="95"/><text x="16.3089%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (127 samples, 0.12%)</title><rect x="16.0442%" y="725" width="0.1167%" height="15" fill="rgb(231,79,45)" fg:x="17466" fg:w="127"/><text x="16.2942%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (127 samples, 0.12%)</title><rect x="16.0442%" y="709" width="0.1167%" height="15" fill="rgb(224,100,7)" fg:x="17466" fg:w="127"/><text x="16.2942%" y="719.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (16 samples, 0.01%)</title><rect x="16.1461%" y="693" width="0.0147%" height="15" fill="rgb(241,198,18)" fg:x="17577" fg:w="16"/><text x="16.3961%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (134 samples, 0.12%)</title><rect x="16.0442%" y="757" width="0.1231%" height="15" fill="rgb(252,97,53)" fg:x="17466" fg:w="134"/><text x="16.2942%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (134 samples, 0.12%)</title><rect x="16.0442%" y="741" width="0.1231%" height="15" fill="rgb(220,88,7)" fg:x="17466" fg:w="134"/><text x="16.2942%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (148 samples, 0.14%)</title><rect x="16.0350%" y="773" width="0.1360%" height="15" fill="rgb(213,176,14)" fg:x="17456" fg:w="148"/><text x="16.2850%" y="783.50"></text></g><g><title>rust_dealloc (171 samples, 0.16%)</title><rect x="16.0258%" y="789" width="0.1571%" height="15" fill="rgb(246,73,7)" fg:x="17446" fg:w="171"/><text x="16.2758%" y="799.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="16.1709%" y="773" width="0.0119%" height="15" fill="rgb(245,64,36)" fg:x="17604" fg:w="13"/><text x="16.4209%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (178 samples, 0.16%)</title><rect x="16.0212%" y="853" width="0.1635%" height="15" fill="rgb(245,80,10)" fg:x="17441" fg:w="178"/><text x="16.2712%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (176 samples, 0.16%)</title><rect x="16.0230%" y="837" width="0.1617%" height="15" fill="rgb(232,107,50)" fg:x="17443" fg:w="176"/><text x="16.2730%" y="847.50"></text></g><g><title>__rg_dealloc (176 samples, 0.16%)</title><rect x="16.0230%" y="821" width="0.1617%" height="15" fill="rgb(253,3,0)" fg:x="17443" fg:w="176"/><text x="16.2730%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (176 samples, 0.16%)</title><rect x="16.0230%" y="805" width="0.1617%" height="15" fill="rgb(212,99,53)" fg:x="17443" fg:w="176"/><text x="16.2730%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (184 samples, 0.17%)</title><rect x="16.0212%" y="917" width="0.1690%" height="15" fill="rgb(249,111,54)" fg:x="17441" fg:w="184"/><text x="16.2712%" y="927.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (184 samples, 0.17%)</title><rect x="16.0212%" y="901" width="0.1690%" height="15" fill="rgb(249,55,30)" fg:x="17441" fg:w="184"/><text x="16.2712%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (184 samples, 0.17%)</title><rect x="16.0212%" y="885" width="0.1690%" height="15" fill="rgb(237,47,42)" fg:x="17441" fg:w="184"/><text x="16.2712%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (184 samples, 0.17%)</title><rect x="16.0212%" y="869" width="0.1690%" height="15" fill="rgb(211,20,18)" fg:x="17441" fg:w="184"/><text x="16.2712%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (189 samples, 0.17%)</title><rect x="16.0212%" y="933" width="0.1736%" height="15" fill="rgb(231,203,46)" fg:x="17441" fg:w="189"/><text x="16.2712%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (192 samples, 0.18%)</title><rect x="16.0212%" y="949" width="0.1764%" height="15" fill="rgb(237,142,3)" fg:x="17441" fg:w="192"/><text x="16.2712%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="16.2233%" y="789" width="0.0129%" height="15" fill="rgb(241,107,1)" fg:x="17661" fg:w="14"/><text x="16.4733%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="16.2233%" y="773" width="0.0129%" height="15" fill="rgb(229,83,13)" fg:x="17661" fg:w="14"/><text x="16.4733%" y="783.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="16.2233%" y="757" width="0.0129%" height="15" fill="rgb(241,91,40)" fg:x="17661" fg:w="14"/><text x="16.4733%" y="767.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="16.2233%" y="741" width="0.0129%" height="15" fill="rgb(225,3,45)" fg:x="17661" fg:w="14"/><text x="16.4733%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (31 samples, 0.03%)</title><rect x="16.2104%" y="885" width="0.0285%" height="15" fill="rgb(244,223,14)" fg:x="17647" fg:w="31"/><text x="16.4604%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (31 samples, 0.03%)</title><rect x="16.2104%" y="869" width="0.0285%" height="15" fill="rgb(224,124,37)" fg:x="17647" fg:w="31"/><text x="16.4604%" y="879.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="16.2233%" y="853" width="0.0156%" height="15" fill="rgb(251,171,30)" fg:x="17661" fg:w="17"/><text x="16.4733%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="16.2233%" y="837" width="0.0156%" height="15" fill="rgb(236,46,54)" fg:x="17661" fg:w="17"/><text x="16.4733%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (17 samples, 0.02%)</title><rect x="16.2233%" y="821" width="0.0156%" height="15" fill="rgb(245,213,5)" fg:x="17661" fg:w="17"/><text x="16.4733%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="16.2233%" y="805" width="0.0156%" height="15" fill="rgb(230,144,27)" fg:x="17661" fg:w="17"/><text x="16.4733%" y="815.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (43 samples, 0.04%)</title><rect x="16.3225%" y="741" width="0.0395%" height="15" fill="rgb(220,86,6)" fg:x="17769" fg:w="43"/><text x="16.5725%" y="751.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (40 samples, 0.04%)</title><rect x="16.3253%" y="725" width="0.0367%" height="15" fill="rgb(240,20,13)" fg:x="17772" fg:w="40"/><text x="16.5753%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (109 samples, 0.10%)</title><rect x="16.2876%" y="789" width="0.1001%" height="15" fill="rgb(217,89,34)" fg:x="17731" fg:w="109"/><text x="16.5376%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (109 samples, 0.10%)</title><rect x="16.2876%" y="773" width="0.1001%" height="15" fill="rgb(229,13,5)" fg:x="17731" fg:w="109"/><text x="16.5376%" y="783.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (108 samples, 0.10%)</title><rect x="16.2885%" y="757" width="0.0992%" height="15" fill="rgb(244,67,35)" fg:x="17732" fg:w="108"/><text x="16.5385%" y="767.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (28 samples, 0.03%)</title><rect x="16.3620%" y="741" width="0.0257%" height="15" fill="rgb(221,40,2)" fg:x="17812" fg:w="28"/><text x="16.6120%" y="751.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (28 samples, 0.03%)</title><rect x="16.3620%" y="725" width="0.0257%" height="15" fill="rgb(237,157,21)" fg:x="17812" fg:w="28"/><text x="16.6120%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (155 samples, 0.14%)</title><rect x="16.2683%" y="821" width="0.1424%" height="15" fill="rgb(222,94,11)" fg:x="17710" fg:w="155"/><text x="16.5183%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (155 samples, 0.14%)</title><rect x="16.2683%" y="805" width="0.1424%" height="15" fill="rgb(249,113,6)" fg:x="17710" fg:w="155"/><text x="16.5183%" y="815.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (25 samples, 0.02%)</title><rect x="16.3877%" y="789" width="0.0230%" height="15" fill="rgb(238,137,36)" fg:x="17840" fg:w="25"/><text x="16.6377%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (166 samples, 0.15%)</title><rect x="16.2683%" y="853" width="0.1525%" height="15" fill="rgb(210,102,26)" fg:x="17710" fg:w="166"/><text x="16.5183%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (166 samples, 0.15%)</title><rect x="16.2683%" y="837" width="0.1525%" height="15" fill="rgb(218,30,30)" fg:x="17710" fg:w="166"/><text x="16.5183%" y="847.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="16.4107%" y="821" width="0.0101%" height="15" fill="rgb(214,67,26)" fg:x="17865" fg:w="11"/><text x="16.6607%" y="831.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="16.4107%" y="805" width="0.0101%" height="15" fill="rgb(251,9,53)" fg:x="17865" fg:w="11"/><text x="16.6607%" y="815.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="16.4107%" y="789" width="0.0101%" height="15" fill="rgb(228,204,25)" fg:x="17865" fg:w="11"/><text x="16.6607%" y="799.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="16.4107%" y="773" width="0.0101%" height="15" fill="rgb(207,153,8)" fg:x="17865" fg:w="11"/><text x="16.6607%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (186 samples, 0.17%)</title><rect x="16.2582%" y="869" width="0.1709%" height="15" fill="rgb(242,9,16)" fg:x="17699" fg:w="186"/><text x="16.5082%" y="879.50"></text></g><g><title>rust_dealloc (210 samples, 0.19%)</title><rect x="16.2389%" y="885" width="0.1929%" height="15" fill="rgb(217,211,10)" fg:x="17678" fg:w="210"/><text x="16.4889%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (262 samples, 0.24%)</title><rect x="16.1976%" y="933" width="0.2407%" height="15" fill="rgb(219,228,52)" fg:x="17633" fg:w="262"/><text x="16.4476%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (262 samples, 0.24%)</title><rect x="16.1976%" y="917" width="0.2407%" height="15" fill="rgb(231,92,29)" fg:x="17633" fg:w="262"/><text x="16.4476%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (262 samples, 0.24%)</title><rect x="16.1976%" y="901" width="0.2407%" height="15" fill="rgb(232,8,23)" fg:x="17633" fg:w="262"/><text x="16.4476%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (33 samples, 0.03%)</title><rect x="16.4520%" y="869" width="0.0303%" height="15" fill="rgb(216,211,34)" fg:x="17910" fg:w="33"/><text x="16.7020%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (33 samples, 0.03%)</title><rect x="16.4520%" y="853" width="0.0303%" height="15" fill="rgb(236,151,0)" fg:x="17910" fg:w="33"/><text x="16.7020%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="16.5126%" y="661" width="0.0119%" height="15" fill="rgb(209,168,3)" fg:x="17976" fg:w="13"/><text x="16.7626%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="16.5126%" y="645" width="0.0119%" height="15" fill="rgb(208,129,28)" fg:x="17976" fg:w="13"/><text x="16.7626%" y="655.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="16.5126%" y="629" width="0.0119%" height="15" fill="rgb(229,78,22)" fg:x="17976" fg:w="13"/><text x="16.7626%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="16.5126%" y="613" width="0.0119%" height="15" fill="rgb(228,187,13)" fg:x="17976" fg:w="13"/><text x="16.7626%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (19 samples, 0.02%)</title><rect x="16.5099%" y="757" width="0.0175%" height="15" fill="rgb(240,119,24)" fg:x="17973" fg:w="19"/><text x="16.7599%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (19 samples, 0.02%)</title><rect x="16.5099%" y="741" width="0.0175%" height="15" fill="rgb(209,194,42)" fg:x="17973" fg:w="19"/><text x="16.7599%" y="751.50"></text></g><g><title>core::mem::drop (16 samples, 0.01%)</title><rect x="16.5126%" y="725" width="0.0147%" height="15" fill="rgb(247,200,46)" fg:x="17976" fg:w="16"/><text x="16.7626%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (16 samples, 0.01%)</title><rect x="16.5126%" y="709" width="0.0147%" height="15" fill="rgb(218,76,16)" fg:x="17976" fg:w="16"/><text x="16.7626%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (16 samples, 0.01%)</title><rect x="16.5126%" y="693" width="0.0147%" height="15" fill="rgb(225,21,48)" fg:x="17976" fg:w="16"/><text x="16.7626%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="16.5126%" y="677" width="0.0147%" height="15" fill="rgb(239,223,50)" fg:x="17976" fg:w="16"/><text x="16.7626%" y="687.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="16.5420%" y="661" width="0.0101%" height="15" fill="rgb(244,45,21)" fg:x="18008" fg:w="11"/><text x="16.7920%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (22 samples, 0.02%)</title><rect x="16.5843%" y="613" width="0.0202%" height="15" fill="rgb(232,33,43)" fg:x="18054" fg:w="22"/><text x="16.8343%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="16.5907%" y="597" width="0.0138%" height="15" fill="rgb(209,8,3)" fg:x="18061" fg:w="15"/><text x="16.8407%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (56 samples, 0.05%)</title><rect x="16.5604%" y="661" width="0.0514%" height="15" fill="rgb(214,25,53)" fg:x="18028" fg:w="56"/><text x="16.8104%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (56 samples, 0.05%)</title><rect x="16.5604%" y="645" width="0.0514%" height="15" fill="rgb(254,186,54)" fg:x="18028" fg:w="56"/><text x="16.8104%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (55 samples, 0.05%)</title><rect x="16.5613%" y="629" width="0.0505%" height="15" fill="rgb(208,174,49)" fg:x="18029" fg:w="55"/><text x="16.8113%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (85 samples, 0.08%)</title><rect x="16.5402%" y="693" width="0.0781%" height="15" fill="rgb(233,191,51)" fg:x="18006" fg:w="85"/><text x="16.7902%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (85 samples, 0.08%)</title><rect x="16.5402%" y="677" width="0.0781%" height="15" fill="rgb(222,134,10)" fg:x="18006" fg:w="85"/><text x="16.7902%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (88 samples, 0.08%)</title><rect x="16.5402%" y="725" width="0.0808%" height="15" fill="rgb(230,226,20)" fg:x="18006" fg:w="88"/><text x="16.7902%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (88 samples, 0.08%)</title><rect x="16.5402%" y="709" width="0.0808%" height="15" fill="rgb(251,111,25)" fg:x="18006" fg:w="88"/><text x="16.7902%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (103 samples, 0.09%)</title><rect x="16.5301%" y="741" width="0.0946%" height="15" fill="rgb(224,40,46)" fg:x="17995" fg:w="103"/><text x="16.7801%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (150 samples, 0.14%)</title><rect x="16.4924%" y="773" width="0.1378%" height="15" fill="rgb(236,108,47)" fg:x="17954" fg:w="150"/><text x="16.7424%" y="783.50"></text></g><g><title>rust_dealloc (112 samples, 0.10%)</title><rect x="16.5273%" y="757" width="0.1029%" height="15" fill="rgb(234,93,0)" fg:x="17992" fg:w="112"/><text x="16.7773%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (162 samples, 0.15%)</title><rect x="16.4823%" y="837" width="0.1488%" height="15" fill="rgb(224,213,32)" fg:x="17943" fg:w="162"/><text x="16.7323%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (159 samples, 0.15%)</title><rect x="16.4851%" y="821" width="0.1461%" height="15" fill="rgb(251,11,48)" fg:x="17946" fg:w="159"/><text x="16.7351%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (151 samples, 0.14%)</title><rect x="16.4924%" y="805" width="0.1387%" height="15" fill="rgb(236,173,5)" fg:x="17954" fg:w="151"/><text x="16.7424%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (151 samples, 0.14%)</title><rect x="16.4924%" y="789" width="0.1387%" height="15" fill="rgb(230,95,12)" fg:x="17954" fg:w="151"/><text x="16.7424%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (220 samples, 0.20%)</title><rect x="16.4419%" y="901" width="0.2021%" height="15" fill="rgb(232,209,1)" fg:x="17899" fg:w="220"/><text x="16.6919%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (214 samples, 0.20%)</title><rect x="16.4474%" y="885" width="0.1966%" height="15" fill="rgb(232,6,1)" fg:x="17905" fg:w="214"/><text x="16.6974%" y="895.50"></text></g><g><title>core::mem::drop (176 samples, 0.16%)</title><rect x="16.4823%" y="869" width="0.1617%" height="15" fill="rgb(210,224,50)" fg:x="17943" fg:w="176"/><text x="16.7323%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (176 samples, 0.16%)</title><rect x="16.4823%" y="853" width="0.1617%" height="15" fill="rgb(228,127,35)" fg:x="17943" fg:w="176"/><text x="16.7323%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (14 samples, 0.01%)</title><rect x="16.6311%" y="837" width="0.0129%" height="15" fill="rgb(245,102,45)" fg:x="18105" fg:w="14"/><text x="16.8811%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="16.6311%" y="821" width="0.0129%" height="15" fill="rgb(214,1,49)" fg:x="18105" fg:w="14"/><text x="16.8811%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="16.6311%" y="805" width="0.0129%" height="15" fill="rgb(226,163,40)" fg:x="18105" fg:w="14"/><text x="16.8811%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="16.6311%" y="789" width="0.0129%" height="15" fill="rgb(239,212,28)" fg:x="18105" fg:w="14"/><text x="16.8811%" y="799.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="16.6311%" y="773" width="0.0129%" height="15" fill="rgb(220,20,13)" fg:x="18105" fg:w="14"/><text x="16.8811%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="16.6311%" y="757" width="0.0129%" height="15" fill="rgb(210,164,35)" fg:x="18105" fg:w="14"/><text x="16.8811%" y="767.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (16 samples, 0.01%)</title><rect x="16.7065%" y="757" width="0.0147%" height="15" fill="rgb(248,109,41)" fg:x="18187" fg:w="16"/><text x="16.9565%" y="767.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="16.7074%" y="741" width="0.0138%" height="15" fill="rgb(238,23,50)" fg:x="18188" fg:w="15"/><text x="16.9574%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (57 samples, 0.05%)</title><rect x="16.6789%" y="805" width="0.0524%" height="15" fill="rgb(211,48,49)" fg:x="18157" fg:w="57"/><text x="16.9289%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (57 samples, 0.05%)</title><rect x="16.6789%" y="789" width="0.0524%" height="15" fill="rgb(223,36,21)" fg:x="18157" fg:w="57"/><text x="16.9289%" y="799.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (56 samples, 0.05%)</title><rect x="16.6798%" y="773" width="0.0514%" height="15" fill="rgb(207,123,46)" fg:x="18158" fg:w="56"/><text x="16.9298%" y="783.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="16.7212%" y="757" width="0.0101%" height="15" fill="rgb(240,218,32)" fg:x="18203" fg:w="11"/><text x="16.9712%" y="767.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="16.7212%" y="741" width="0.0101%" height="15" fill="rgb(252,5,43)" fg:x="18203" fg:w="11"/><text x="16.9712%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (83 samples, 0.08%)</title><rect x="16.6642%" y="837" width="0.0762%" height="15" fill="rgb(252,84,19)" fg:x="18141" fg:w="83"/><text x="16.9142%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (83 samples, 0.08%)</title><rect x="16.6642%" y="821" width="0.0762%" height="15" fill="rgb(243,152,39)" fg:x="18141" fg:w="83"/><text x="16.9142%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (90 samples, 0.08%)</title><rect x="16.6642%" y="869" width="0.0827%" height="15" fill="rgb(234,160,15)" fg:x="18141" fg:w="90"/><text x="16.9142%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (90 samples, 0.08%)</title><rect x="16.6642%" y="853" width="0.0827%" height="15" fill="rgb(237,34,20)" fg:x="18141" fg:w="90"/><text x="16.9142%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (100 samples, 0.09%)</title><rect x="16.6559%" y="885" width="0.0919%" height="15" fill="rgb(229,97,13)" fg:x="18132" fg:w="100"/><text x="16.9059%" y="895.50"></text></g><g><title>rust_dealloc (121 samples, 0.11%)</title><rect x="16.6440%" y="901" width="0.1111%" height="15" fill="rgb(234,71,50)" fg:x="18119" fg:w="121"/><text x="16.8940%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (351 samples, 0.32%)</title><rect x="16.4382%" y="917" width="0.3224%" height="15" fill="rgb(253,155,4)" fg:x="17895" fg:w="351"/><text x="16.6882%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (626 samples, 0.58%)</title><rect x="16.1976%" y="949" width="0.5750%" height="15" fill="rgb(222,185,37)" fg:x="17633" fg:w="626"/><text x="16.4476%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (364 samples, 0.33%)</title><rect x="16.4382%" y="933" width="0.3344%" height="15" fill="rgb(251,177,13)" fg:x="17895" fg:w="364"/><text x="16.6882%" y="943.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (13 samples, 0.01%)</title><rect x="16.7607%" y="917" width="0.0119%" height="15" fill="rgb(250,179,40)" fg:x="18246" fg:w="13"/><text x="17.0107%" y="927.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (46 samples, 0.04%)</title><rect x="16.7726%" y="949" width="0.0423%" height="15" fill="rgb(242,44,2)" fg:x="18259" fg:w="46"/><text x="17.0226%" y="959.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,255 samples, 6.66%)</title><rect x="10.1642%" y="1013" width="6.6644%" height="15" fill="rgb(216,177,13)" fg:x="11065" fg:w="7255"/><text x="10.4142%" y="1023.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,255 samples, 6.66%)</title><rect x="10.1642%" y="997" width="6.6644%" height="15" fill="rgb(216,106,43)" fg:x="11065" fg:w="7255"/><text x="10.4142%" y="1007.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (7,112 samples, 6.53%)</title><rect x="10.2956%" y="981" width="6.5330%" height="15" fill="rgb(216,183,2)" fg:x="11208" fg:w="7112"/><text x="10.5456%" y="991.50">tremor_ru..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,221 samples, 3.88%)</title><rect x="12.9513%" y="965" width="3.8774%" height="15" fill="rgb(249,75,3)" fg:x="14099" fg:w="4221"/><text x="13.2013%" y="975.50">trem..</text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="16.9132%" y="901" width="0.0119%" height="15" fill="rgb(219,67,39)" fg:x="18412" fg:w="13"/><text x="17.1632%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (17 samples, 0.02%)</title><rect x="16.9251%" y="901" width="0.0156%" height="15" fill="rgb(253,228,2)" fg:x="18425" fg:w="17"/><text x="17.1751%" y="911.50"></text></g><g><title>core::mem::replace (17 samples, 0.02%)</title><rect x="16.9251%" y="885" width="0.0156%" height="15" fill="rgb(235,138,27)" fg:x="18425" fg:w="17"/><text x="17.1751%" y="895.50"></text></g><g><title>core::ptr::read (17 samples, 0.02%)</title><rect x="16.9251%" y="869" width="0.0156%" height="15" fill="rgb(236,97,51)" fg:x="18425" fg:w="17"/><text x="17.1751%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (176 samples, 0.16%)</title><rect x="16.9866%" y="885" width="0.1617%" height="15" fill="rgb(240,80,30)" fg:x="18492" fg:w="176"/><text x="17.2366%" y="895.50"></text></g><g><title>core::mem::replace (176 samples, 0.16%)</title><rect x="16.9866%" y="869" width="0.1617%" height="15" fill="rgb(230,178,19)" fg:x="18492" fg:w="176"/><text x="17.2366%" y="879.50"></text></g><g><title>core::ptr::read (176 samples, 0.16%)</title><rect x="16.9866%" y="853" width="0.1617%" height="15" fill="rgb(210,190,27)" fg:x="18492" fg:w="176"/><text x="17.2366%" y="863.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (274 samples, 0.25%)</title><rect x="16.9407%" y="901" width="0.2517%" height="15" fill="rgb(222,107,31)" fg:x="18442" fg:w="274"/><text x="17.1907%" y="911.50"></text></g><g><title>core::mem::drop (48 samples, 0.04%)</title><rect x="17.1483%" y="885" width="0.0441%" height="15" fill="rgb(216,127,34)" fg:x="18668" fg:w="48"/><text x="17.3983%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (48 samples, 0.04%)</title><rect x="17.1483%" y="869" width="0.0441%" height="15" fill="rgb(234,116,52)" fg:x="18668" fg:w="48"/><text x="17.3983%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="17.2154%" y="837" width="0.0110%" height="15" fill="rgb(222,124,15)" fg:x="18741" fg:w="12"/><text x="17.4654%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (232 samples, 0.21%)</title><rect x="17.2264%" y="821" width="0.2131%" height="15" fill="rgb(231,179,28)" fg:x="18753" fg:w="232"/><text x="17.4764%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (278 samples, 0.26%)</title><rect x="17.1924%" y="901" width="0.2554%" height="15" fill="rgb(226,93,45)" fg:x="18716" fg:w="278"/><text x="17.4424%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (269 samples, 0.25%)</title><rect x="17.2007%" y="885" width="0.2471%" height="15" fill="rgb(215,8,51)" fg:x="18725" fg:w="269"/><text x="17.4507%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (269 samples, 0.25%)</title><rect x="17.2007%" y="869" width="0.2471%" height="15" fill="rgb(223,106,5)" fg:x="18725" fg:w="269"/><text x="17.4507%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (253 samples, 0.23%)</title><rect x="17.2154%" y="853" width="0.2324%" height="15" fill="rgb(250,191,5)" fg:x="18741" fg:w="253"/><text x="17.4654%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (241 samples, 0.22%)</title><rect x="17.2264%" y="837" width="0.2214%" height="15" fill="rgb(242,132,44)" fg:x="18753" fg:w="241"/><text x="17.4764%" y="847.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (21 samples, 0.02%)</title><rect x="17.4597%" y="853" width="0.0193%" height="15" fill="rgb(251,152,29)" fg:x="19007" fg:w="21"/><text x="17.7097%" y="863.50"></text></g><g><title>core::task::wake::Waker::will_wake (47 samples, 0.04%)</title><rect x="17.4478%" y="901" width="0.0432%" height="15" fill="rgb(218,179,5)" fg:x="18994" fg:w="47"/><text x="17.6978%" y="911.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (47 samples, 0.04%)</title><rect x="17.4478%" y="885" width="0.0432%" height="15" fill="rgb(227,67,19)" fg:x="18994" fg:w="47"/><text x="17.6978%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (34 samples, 0.03%)</title><rect x="17.4597%" y="869" width="0.0312%" height="15" fill="rgb(233,119,31)" fg:x="19007" fg:w="34"/><text x="17.7097%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="17.4790%" y="853" width="0.0119%" height="15" fill="rgb(241,120,22)" fg:x="19028" fg:w="13"/><text x="17.7290%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,540 samples, 1.41%)</title><rect x="16.8286%" y="997" width="1.4146%" height="15" fill="rgb(224,102,30)" fg:x="18320" fg:w="1540"/><text x="17.0786%" y="1007.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,540 samples, 1.41%)</title><rect x="16.8286%" y="981" width="1.4146%" height="15" fill="rgb(210,164,37)" fg:x="18320" fg:w="1540"/><text x="17.0786%" y="991.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,540 samples, 1.41%)</title><rect x="16.8286%" y="965" width="1.4146%" height="15" fill="rgb(226,191,16)" fg:x="18320" fg:w="1540"/><text x="17.0786%" y="975.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,540 samples, 1.41%)</title><rect x="16.8286%" y="949" width="1.4146%" height="15" fill="rgb(214,40,45)" fg:x="18320" fg:w="1540"/><text x="17.0786%" y="959.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,540 samples, 1.41%)</title><rect x="16.8286%" y="933" width="1.4146%" height="15" fill="rgb(244,29,26)" fg:x="18320" fg:w="1540"/><text x="17.0786%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,540 samples, 1.41%)</title><rect x="16.8286%" y="917" width="1.4146%" height="15" fill="rgb(216,16,5)" fg:x="18320" fg:w="1540"/><text x="17.0786%" y="927.50"></text></g><g><title>event_listener::Inner::lock (819 samples, 0.75%)</title><rect x="17.4910%" y="901" width="0.7523%" height="15" fill="rgb(249,76,35)" fg:x="19041" fg:w="819"/><text x="17.7410%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (811 samples, 0.74%)</title><rect x="17.4983%" y="885" width="0.7450%" height="15" fill="rgb(207,11,44)" fg:x="19049" fg:w="811"/><text x="17.7483%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (805 samples, 0.74%)</title><rect x="17.5038%" y="869" width="0.7395%" height="15" fill="rgb(228,190,49)" fg:x="19055" fg:w="805"/><text x="17.7538%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (740 samples, 0.68%)</title><rect x="17.5635%" y="853" width="0.6798%" height="15" fill="rgb(214,173,12)" fg:x="19120" fg:w="740"/><text x="17.8135%" y="863.50"></text></g><g><title>___pthread_mutex_lock (740 samples, 0.68%)</title><rect x="17.5635%" y="837" width="0.6798%" height="15" fill="rgb(218,26,35)" fg:x="19120" fg:w="740"/><text x="17.8135%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="18.2598%" y="949" width="0.0211%" height="15" fill="rgb(220,200,19)" fg:x="19878" fg:w="23"/><text x="18.5098%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (287 samples, 0.26%)</title><rect x="18.2809%" y="949" width="0.2636%" height="15" fill="rgb(239,95,49)" fg:x="19901" fg:w="287"/><text x="18.5309%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="18.6998%" y="933" width="0.0101%" height="15" fill="rgb(235,85,53)" fg:x="20357" fg:w="11"/><text x="18.9498%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (790 samples, 0.73%)</title><rect x="18.7099%" y="933" width="0.7257%" height="15" fill="rgb(233,133,31)" fg:x="20368" fg:w="790"/><text x="18.9599%" y="943.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (56 samples, 0.05%)</title><rect x="19.4613%" y="789" width="0.0514%" height="15" fill="rgb(218,25,20)" fg:x="21186" fg:w="56"/><text x="19.7113%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (67 samples, 0.06%)</title><rect x="19.4522%" y="869" width="0.0615%" height="15" fill="rgb(252,210,38)" fg:x="21176" fg:w="67"/><text x="19.7022%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (65 samples, 0.06%)</title><rect x="19.4540%" y="853" width="0.0597%" height="15" fill="rgb(242,134,21)" fg:x="21178" fg:w="65"/><text x="19.7040%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.06%)</title><rect x="19.4540%" y="837" width="0.0597%" height="15" fill="rgb(213,28,48)" fg:x="21178" fg:w="65"/><text x="19.7040%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (62 samples, 0.06%)</title><rect x="19.4567%" y="821" width="0.0570%" height="15" fill="rgb(250,196,2)" fg:x="21181" fg:w="62"/><text x="19.7067%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (57 samples, 0.05%)</title><rect x="19.4613%" y="805" width="0.0524%" height="15" fill="rgb(227,5,17)" fg:x="21186" fg:w="57"/><text x="19.7113%" y="815.50"></text></g><g><title>event_listener::Inner::lock (101 samples, 0.09%)</title><rect x="19.5137%" y="869" width="0.0928%" height="15" fill="rgb(221,226,24)" fg:x="21243" fg:w="101"/><text x="19.7637%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (100 samples, 0.09%)</title><rect x="19.5146%" y="853" width="0.0919%" height="15" fill="rgb(211,5,48)" fg:x="21244" fg:w="100"/><text x="19.7646%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (98 samples, 0.09%)</title><rect x="19.5165%" y="837" width="0.0900%" height="15" fill="rgb(219,150,6)" fg:x="21246" fg:w="98"/><text x="19.7665%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (97 samples, 0.09%)</title><rect x="19.5174%" y="821" width="0.0891%" height="15" fill="rgb(251,46,16)" fg:x="21247" fg:w="97"/><text x="19.7674%" y="831.50"></text></g><g><title>___pthread_mutex_lock (97 samples, 0.09%)</title><rect x="19.5174%" y="805" width="0.0891%" height="15" fill="rgb(220,204,40)" fg:x="21247" fg:w="97"/><text x="19.7674%" y="815.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (189 samples, 0.17%)</title><rect x="19.4466%" y="885" width="0.1736%" height="15" fill="rgb(211,85,2)" fg:x="21170" fg:w="189"/><text x="19.6966%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (228 samples, 0.21%)</title><rect x="19.4356%" y="917" width="0.2094%" height="15" fill="rgb(229,17,7)" fg:x="21158" fg:w="228"/><text x="19.6856%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (216 samples, 0.20%)</title><rect x="19.4466%" y="901" width="0.1984%" height="15" fill="rgb(239,72,28)" fg:x="21170" fg:w="216"/><text x="19.6966%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (27 samples, 0.02%)</title><rect x="19.6203%" y="885" width="0.0248%" height="15" fill="rgb(230,47,54)" fg:x="21359" fg:w="27"/><text x="19.8703%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="19.6203%" y="869" width="0.0248%" height="15" fill="rgb(214,50,8)" fg:x="21359" fg:w="27"/><text x="19.8703%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (24 samples, 0.02%)</title><rect x="19.6230%" y="853" width="0.0220%" height="15" fill="rgb(216,198,43)" fg:x="21362" fg:w="24"/><text x="19.8730%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (24 samples, 0.02%)</title><rect x="19.6230%" y="837" width="0.0220%" height="15" fill="rgb(234,20,35)" fg:x="21362" fg:w="24"/><text x="19.8730%" y="847.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (13,380 samples, 12.29%)</title><rect x="7.3644%" y="1141" width="12.2908%" height="15" fill="rgb(254,45,19)" fg:x="8017" fg:w="13380"/><text x="7.6144%" y="1151.50">async_executor::Ex..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (13,380 samples, 12.29%)</title><rect x="7.3644%" y="1125" width="12.2908%" height="15" fill="rgb(219,14,44)" fg:x="8017" fg:w="13380"/><text x="7.6144%" y="1135.50">&lt;async_std::task::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (13,380 samples, 12.29%)</title><rect x="7.3644%" y="1109" width="12.2908%" height="15" fill="rgb(217,220,26)" fg:x="8017" fg:w="13380"/><text x="7.6144%" y="1119.50">async_std::task::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13,380 samples, 12.29%)</title><rect x="7.3644%" y="1093" width="12.2908%" height="15" fill="rgb(213,158,28)" fg:x="8017" fg:w="13380"/><text x="7.6144%" y="1103.50">std::thread::local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,380 samples, 12.29%)</title><rect x="7.3644%" y="1077" width="12.2908%" height="15" fill="rgb(252,51,52)" fg:x="8017" fg:w="13380"/><text x="7.6144%" y="1087.50">std::thread::local..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (13,380 samples, 12.29%)</title><rect x="7.3644%" y="1061" width="12.2908%" height="15" fill="rgb(246,89,16)" fg:x="8017" fg:w="13380"/><text x="7.6144%" y="1071.50">async_std::task::t..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (13,380 samples, 12.29%)</title><rect x="7.3644%" y="1045" width="12.2908%" height="15" fill="rgb(216,158,49)" fg:x="8017" fg:w="13380"/><text x="7.6144%" y="1055.50">&lt;async_std::task::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,380 samples, 12.29%)</title><rect x="7.3644%" y="1029" width="12.2908%" height="15" fill="rgb(236,107,19)" fg:x="8017" fg:w="13380"/><text x="7.6144%" y="1039.50">&lt;core::future::fro..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,077 samples, 2.83%)</title><rect x="16.8286%" y="1013" width="2.8265%" height="15" fill="rgb(228,185,30)" fg:x="18320" fg:w="3077"/><text x="17.0786%" y="1023.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,537 samples, 1.41%)</title><rect x="18.2433%" y="997" width="1.4119%" height="15" fill="rgb(246,134,8)" fg:x="19860" fg:w="1537"/><text x="18.4933%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,537 samples, 1.41%)</title><rect x="18.2433%" y="981" width="1.4119%" height="15" fill="rgb(214,143,50)" fg:x="19860" fg:w="1537"/><text x="18.4933%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,537 samples, 1.41%)</title><rect x="18.2433%" y="965" width="1.4119%" height="15" fill="rgb(228,75,8)" fg:x="19860" fg:w="1537"/><text x="18.4933%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (1,209 samples, 1.11%)</title><rect x="18.5446%" y="949" width="1.1106%" height="15" fill="rgb(207,175,4)" fg:x="20188" fg:w="1209"/><text x="18.7946%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (239 samples, 0.22%)</title><rect x="19.4356%" y="933" width="0.2195%" height="15" fill="rgb(205,108,24)" fg:x="21158" fg:w="239"/><text x="19.6856%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (11 samples, 0.01%)</title><rect x="19.6451%" y="917" width="0.0101%" height="15" fill="rgb(244,120,49)" fg:x="21386" fg:w="11"/><text x="19.8951%" y="927.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (31 samples, 0.03%)</title><rect x="19.6552%" y="1141" width="0.0285%" height="15" fill="rgb(223,47,38)" fg:x="21397" fg:w="31"/><text x="19.9052%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (31 samples, 0.03%)</title><rect x="19.6552%" y="1125" width="0.0285%" height="15" fill="rgb(229,179,11)" fg:x="21397" fg:w="31"/><text x="19.9052%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::pdk::PdkOpMeta&gt; (23 samples, 0.02%)</title><rect x="19.6625%" y="1109" width="0.0211%" height="15" fill="rgb(231,122,1)" fg:x="21405" fg:w="23"/><text x="19.9125%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (23 samples, 0.02%)</title><rect x="19.6625%" y="1093" width="0.0211%" height="15" fill="rgb(245,119,9)" fg:x="21405" fg:w="23"/><text x="19.9125%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="19.6625%" y="1077" width="0.0211%" height="15" fill="rgb(241,163,25)" fg:x="21405" fg:w="23"/><text x="19.9125%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (23 samples, 0.02%)</title><rect x="19.6625%" y="1061" width="0.0211%" height="15" fill="rgb(217,214,3)" fg:x="21405" fg:w="23"/><text x="19.9125%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,159 samples, 13.01%)</title><rect x="6.6782%" y="1157" width="13.0064%" height="15" fill="rgb(240,86,28)" fg:x="7270" fg:w="14159"/><text x="6.9282%" y="1167.50">&lt;core::future::from_..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 0.04%)</title><rect x="19.6846%" y="1157" width="0.0386%" height="15" fill="rgb(215,47,9)" fg:x="21429" fg:w="42"/><text x="19.9346%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (33 samples, 0.03%)</title><rect x="19.6928%" y="1141" width="0.0303%" height="15" fill="rgb(252,25,45)" fg:x="21438" fg:w="33"/><text x="19.9428%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt; (33 samples, 0.03%)</title><rect x="19.6928%" y="1125" width="0.0303%" height="15" fill="rgb(251,164,9)" fg:x="21438" fg:w="33"/><text x="19.9428%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (33 samples, 0.03%)</title><rect x="19.6928%" y="1109" width="0.0303%" height="15" fill="rgb(233,194,0)" fg:x="21438" fg:w="33"/><text x="19.9428%" y="1119.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="19.6928%" y="1093" width="0.0303%" height="15" fill="rgb(249,111,24)" fg:x="21438" fg:w="33"/><text x="19.9428%" y="1103.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="19.7231%" y="1157" width="0.0220%" height="15" fill="rgb(250,223,3)" fg:x="21471" fg:w="24"/><text x="19.9731%" y="1167.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (23 samples, 0.02%)</title><rect x="19.7507%" y="1157" width="0.0211%" height="15" fill="rgb(236,178,37)" fg:x="21501" fg:w="23"/><text x="20.0007%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (19 samples, 0.02%)</title><rect x="19.7746%" y="1157" width="0.0175%" height="15" fill="rgb(241,158,50)" fg:x="21527" fg:w="19"/><text x="20.0246%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (11 samples, 0.01%)</title><rect x="19.7920%" y="1157" width="0.0101%" height="15" fill="rgb(213,121,41)" fg:x="21546" fg:w="11"/><text x="20.0420%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (43 samples, 0.04%)</title><rect x="19.8021%" y="1157" width="0.0395%" height="15" fill="rgb(240,92,3)" fg:x="21557" fg:w="43"/><text x="20.0521%" y="1167.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (17 samples, 0.02%)</title><rect x="19.8416%" y="1157" width="0.0156%" height="15" fill="rgb(205,123,3)" fg:x="21600" fg:w="17"/><text x="20.0916%" y="1167.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (36 samples, 0.03%)</title><rect x="19.8573%" y="1157" width="0.0331%" height="15" fill="rgb(205,97,47)" fg:x="21617" fg:w="36"/><text x="20.1073%" y="1167.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="19.8903%" y="1157" width="0.0119%" height="15" fill="rgb(247,152,14)" fg:x="21653" fg:w="13"/><text x="20.1403%" y="1167.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="19.8903%" y="1141" width="0.0119%" height="15" fill="rgb(248,195,53)" fg:x="21653" fg:w="13"/><text x="20.1403%" y="1151.50"></text></g><g><title>___pthread_mutex_lock (18 samples, 0.02%)</title><rect x="19.9160%" y="1157" width="0.0165%" height="15" fill="rgb(226,201,16)" fg:x="21681" fg:w="18"/><text x="20.1660%" y="1167.50"></text></g><g><title>__clock_gettime_2 (77 samples, 0.07%)</title><rect x="19.9326%" y="1157" width="0.0707%" height="15" fill="rgb(205,98,0)" fg:x="21699" fg:w="77"/><text x="20.1826%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (60 samples, 0.06%)</title><rect x="20.0088%" y="1157" width="0.0551%" height="15" fill="rgb(214,191,48)" fg:x="21782" fg:w="60"/><text x="20.2588%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (17 samples, 0.02%)</title><rect x="20.0649%" y="1157" width="0.0156%" height="15" fill="rgb(237,112,39)" fg:x="21843" fg:w="17"/><text x="20.3149%" y="1167.50"></text></g><g><title>abi_stable::erased_types::iterator::next (13 samples, 0.01%)</title><rect x="20.0841%" y="1157" width="0.0119%" height="15" fill="rgb(247,203,27)" fg:x="21864" fg:w="13"/><text x="20.3341%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="20.1172%" y="1141" width="0.0184%" height="15" fill="rgb(235,124,28)" fg:x="21900" fg:w="20"/><text x="20.3672%" y="1151.50"></text></g><g><title>alloc::alloc::box_free (20 samples, 0.02%)</title><rect x="20.1172%" y="1125" width="0.0184%" height="15" fill="rgb(208,207,46)" fg:x="21900" fg:w="20"/><text x="20.3672%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="20.1172%" y="1109" width="0.0184%" height="15" fill="rgb(234,176,4)" fg:x="21900" fg:w="20"/><text x="20.3672%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="20.1172%" y="1093" width="0.0184%" height="15" fill="rgb(230,133,28)" fg:x="21900" fg:w="20"/><text x="20.3672%" y="1103.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="20.1172%" y="1077" width="0.0184%" height="15" fill="rgb(211,137,40)" fg:x="21900" fg:w="20"/><text x="20.3672%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="20.1172%" y="1061" width="0.0184%" height="15" fill="rgb(254,35,13)" fg:x="21900" fg:w="20"/><text x="20.3672%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (42 samples, 0.04%)</title><rect x="20.1025%" y="1157" width="0.0386%" height="15" fill="rgb(225,49,51)" fg:x="21884" fg:w="42"/><text x="20.3525%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (16 samples, 0.01%)</title><rect x="20.1457%" y="1157" width="0.0147%" height="15" fill="rgb(251,10,15)" fg:x="21931" fg:w="16"/><text x="20.3957%" y="1167.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="20.2229%" y="1061" width="0.0147%" height="15" fill="rgb(228,207,15)" fg:x="22015" fg:w="16"/><text x="20.4729%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (16 samples, 0.01%)</title><rect x="20.2229%" y="1045" width="0.0147%" height="15" fill="rgb(241,99,19)" fg:x="22015" fg:w="16"/><text x="20.4729%" y="1055.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (16 samples, 0.01%)</title><rect x="20.2229%" y="1029" width="0.0147%" height="15" fill="rgb(207,104,49)" fg:x="22015" fg:w="16"/><text x="20.4729%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 0.01%)</title><rect x="20.2229%" y="1013" width="0.0147%" height="15" fill="rgb(234,99,18)" fg:x="22015" fg:w="16"/><text x="20.4729%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.01%)</title><rect x="20.2229%" y="997" width="0.0147%" height="15" fill="rgb(213,191,49)" fg:x="22015" fg:w="16"/><text x="20.4729%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.01%)</title><rect x="20.2229%" y="981" width="0.0147%" height="15" fill="rgb(210,226,19)" fg:x="22015" fg:w="16"/><text x="20.4729%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.01%)</title><rect x="20.2229%" y="965" width="0.0147%" height="15" fill="rgb(229,97,18)" fg:x="22015" fg:w="16"/><text x="20.4729%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (95 samples, 0.09%)</title><rect x="20.1604%" y="1157" width="0.0873%" height="15" fill="rgb(211,167,15)" fg:x="21947" fg:w="95"/><text x="20.4104%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (27 samples, 0.02%)</title><rect x="20.2229%" y="1141" width="0.0248%" height="15" fill="rgb(210,169,34)" fg:x="22015" fg:w="27"/><text x="20.4729%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (27 samples, 0.02%)</title><rect x="20.2229%" y="1125" width="0.0248%" height="15" fill="rgb(241,121,31)" fg:x="22015" fg:w="27"/><text x="20.4729%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.02%)</title><rect x="20.2229%" y="1109" width="0.0248%" height="15" fill="rgb(232,40,11)" fg:x="22015" fg:w="27"/><text x="20.4729%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.02%)</title><rect x="20.2229%" y="1093" width="0.0248%" height="15" fill="rgb(205,86,26)" fg:x="22015" fg:w="27"/><text x="20.4729%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.02%)</title><rect x="20.2229%" y="1077" width="0.0248%" height="15" fill="rgb(231,126,28)" fg:x="22015" fg:w="27"/><text x="20.4729%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="20.2375%" y="1061" width="0.0101%" height="15" fill="rgb(219,221,18)" fg:x="22031" fg:w="11"/><text x="20.4875%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="20.2375%" y="1045" width="0.0101%" height="15" fill="rgb(211,40,0)" fg:x="22031" fg:w="11"/><text x="20.4875%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="20.2375%" y="1029" width="0.0101%" height="15" fill="rgb(239,85,43)" fg:x="22031" fg:w="11"/><text x="20.4875%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="20.2375%" y="1013" width="0.0101%" height="15" fill="rgb(231,55,21)" fg:x="22031" fg:w="11"/><text x="20.4875%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="20.2375%" y="997" width="0.0101%" height="15" fill="rgb(225,184,43)" fg:x="22031" fg:w="11"/><text x="20.4875%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="20.2375%" y="981" width="0.0101%" height="15" fill="rgb(251,158,41)" fg:x="22031" fg:w="11"/><text x="20.4875%" y="991.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="20.2375%" y="965" width="0.0101%" height="15" fill="rgb(234,159,37)" fg:x="22031" fg:w="11"/><text x="20.4875%" y="975.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="20.2375%" y="949" width="0.0101%" height="15" fill="rgb(216,204,22)" fg:x="22031" fg:w="11"/><text x="20.4875%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (17 samples, 0.02%)</title><rect x="20.3000%" y="1109" width="0.0156%" height="15" fill="rgb(214,17,3)" fg:x="22099" fg:w="17"/><text x="20.5500%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (17 samples, 0.02%)</title><rect x="20.3000%" y="1093" width="0.0156%" height="15" fill="rgb(212,111,17)" fg:x="22099" fg:w="17"/><text x="20.5500%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="20.3000%" y="1077" width="0.0156%" height="15" fill="rgb(221,157,24)" fg:x="22099" fg:w="17"/><text x="20.5500%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="20.3000%" y="1061" width="0.0156%" height="15" fill="rgb(252,16,13)" fg:x="22099" fg:w="17"/><text x="20.5500%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="20.3000%" y="1045" width="0.0156%" height="15" fill="rgb(221,62,2)" fg:x="22099" fg:w="17"/><text x="20.5500%" y="1055.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="20.3000%" y="1029" width="0.0156%" height="15" fill="rgb(247,87,22)" fg:x="22099" fg:w="17"/><text x="20.5500%" y="1039.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="20.3000%" y="1013" width="0.0156%" height="15" fill="rgb(215,73,9)" fg:x="22099" fg:w="17"/><text x="20.5500%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (83 samples, 0.08%)</title><rect x="20.2477%" y="1157" width="0.0762%" height="15" fill="rgb(207,175,33)" fg:x="22042" fg:w="83"/><text x="20.4977%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (35 samples, 0.03%)</title><rect x="20.2917%" y="1141" width="0.0322%" height="15" fill="rgb(243,129,54)" fg:x="22090" fg:w="35"/><text x="20.5417%" y="1151.50"></text></g><g><title>core::mem::drop (35 samples, 0.03%)</title><rect x="20.2917%" y="1125" width="0.0322%" height="15" fill="rgb(227,119,45)" fg:x="22090" fg:w="35"/><text x="20.5417%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (17 samples, 0.02%)</title><rect x="20.3239%" y="1157" width="0.0156%" height="15" fill="rgb(205,109,36)" fg:x="22125" fg:w="17"/><text x="20.5739%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (37 samples, 0.03%)</title><rect x="20.3395%" y="1157" width="0.0340%" height="15" fill="rgb(205,6,39)" fg:x="22142" fg:w="37"/><text x="20.5895%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="20.3570%" y="1141" width="0.0165%" height="15" fill="rgb(221,32,16)" fg:x="22161" fg:w="18"/><text x="20.6070%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (18 samples, 0.02%)</title><rect x="20.3570%" y="1125" width="0.0165%" height="15" fill="rgb(228,144,50)" fg:x="22161" fg:w="18"/><text x="20.6070%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (18 samples, 0.02%)</title><rect x="20.3570%" y="1109" width="0.0165%" height="15" fill="rgb(229,201,53)" fg:x="22161" fg:w="18"/><text x="20.6070%" y="1119.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (32 samples, 0.03%)</title><rect x="20.3735%" y="1157" width="0.0294%" height="15" fill="rgb(249,153,27)" fg:x="22179" fg:w="32"/><text x="20.6235%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.01%)</title><rect x="20.3882%" y="1141" width="0.0147%" height="15" fill="rgb(227,106,25)" fg:x="22195" fg:w="16"/><text x="20.6382%" y="1151.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (20 samples, 0.02%)</title><rect x="20.4084%" y="1157" width="0.0184%" height="15" fill="rgb(230,65,29)" fg:x="22217" fg:w="20"/><text x="20.6584%" y="1167.50"></text></g><g><title>async_ffi::DropBomb::with (12 samples, 0.01%)</title><rect x="20.4158%" y="1141" width="0.0110%" height="15" fill="rgb(221,57,46)" fg:x="22225" fg:w="12"/><text x="20.6658%" y="1151.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (12 samples, 0.01%)</title><rect x="20.4158%" y="1125" width="0.0110%" height="15" fill="rgb(229,161,17)" fg:x="22225" fg:w="12"/><text x="20.6658%" y="1135.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="20.4158%" y="1109" width="0.0110%" height="15" fill="rgb(222,213,11)" fg:x="22225" fg:w="12"/><text x="20.6658%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (14 samples, 0.01%)</title><rect x="20.4268%" y="1157" width="0.0129%" height="15" fill="rgb(235,35,13)" fg:x="22237" fg:w="14"/><text x="20.6768%" y="1167.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (14 samples, 0.01%)</title><rect x="20.4516%" y="597" width="0.0129%" height="15" fill="rgb(233,158,34)" fg:x="22264" fg:w="14"/><text x="20.7016%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="20.4516%" y="581" width="0.0129%" height="15" fill="rgb(215,151,48)" fg:x="22264" fg:w="14"/><text x="20.7016%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (14 samples, 0.01%)</title><rect x="20.4773%" y="581" width="0.0129%" height="15" fill="rgb(229,84,14)" fg:x="22292" fg:w="14"/><text x="20.7273%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (14 samples, 0.01%)</title><rect x="20.4773%" y="565" width="0.0129%" height="15" fill="rgb(229,68,14)" fg:x="22292" fg:w="14"/><text x="20.7273%" y="575.50"></text></g><g><title>core::mem::replace (14 samples, 0.01%)</title><rect x="20.4773%" y="549" width="0.0129%" height="15" fill="rgb(243,106,26)" fg:x="22292" fg:w="14"/><text x="20.7273%" y="559.50"></text></g><g><title>core::ptr::write (14 samples, 0.01%)</title><rect x="20.4773%" y="533" width="0.0129%" height="15" fill="rgb(206,45,38)" fg:x="22292" fg:w="14"/><text x="20.7273%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (56 samples, 0.05%)</title><rect x="20.4470%" y="661" width="0.0514%" height="15" fill="rgb(226,6,15)" fg:x="22259" fg:w="56"/><text x="20.6970%" y="671.50"></text></g><g><title>std::collections::hash::map::RandomState::new (56 samples, 0.05%)</title><rect x="20.4470%" y="645" width="0.0514%" height="15" fill="rgb(232,22,54)" fg:x="22259" fg:w="56"/><text x="20.6970%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (56 samples, 0.05%)</title><rect x="20.4470%" y="629" width="0.0514%" height="15" fill="rgb(229,222,32)" fg:x="22259" fg:w="56"/><text x="20.6970%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (56 samples, 0.05%)</title><rect x="20.4470%" y="613" width="0.0514%" height="15" fill="rgb(228,62,29)" fg:x="22259" fg:w="56"/><text x="20.6970%" y="623.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (37 samples, 0.03%)</title><rect x="20.4644%" y="597" width="0.0340%" height="15" fill="rgb(251,103,34)" fg:x="22278" fg:w="37"/><text x="20.7144%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (32 samples, 0.03%)</title><rect x="20.5370%" y="421" width="0.0294%" height="15" fill="rgb(233,12,30)" fg:x="22357" fg:w="32"/><text x="20.7870%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (32 samples, 0.03%)</title><rect x="20.5370%" y="405" width="0.0294%" height="15" fill="rgb(238,52,0)" fg:x="22357" fg:w="32"/><text x="20.7870%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (28 samples, 0.03%)</title><rect x="20.5407%" y="389" width="0.0257%" height="15" fill="rgb(223,98,5)" fg:x="22361" fg:w="28"/><text x="20.7907%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (24 samples, 0.02%)</title><rect x="20.5444%" y="373" width="0.0220%" height="15" fill="rgb(228,75,37)" fg:x="22365" fg:w="24"/><text x="20.7944%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (24 samples, 0.02%)</title><rect x="20.5444%" y="357" width="0.0220%" height="15" fill="rgb(205,115,49)" fg:x="22365" fg:w="24"/><text x="20.7944%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (24 samples, 0.02%)</title><rect x="20.5444%" y="341" width="0.0220%" height="15" fill="rgb(250,154,43)" fg:x="22365" fg:w="24"/><text x="20.7944%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="20.5664%" y="421" width="0.0129%" height="15" fill="rgb(226,43,29)" fg:x="22389" fg:w="14"/><text x="20.8164%" y="431.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (12 samples, 0.01%)</title><rect x="20.5682%" y="405" width="0.0110%" height="15" fill="rgb(249,228,39)" fg:x="22391" fg:w="12"/><text x="20.8182%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (121 samples, 0.11%)</title><rect x="20.5297%" y="469" width="0.1111%" height="15" fill="rgb(216,79,43)" fg:x="22349" fg:w="121"/><text x="20.7797%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (121 samples, 0.11%)</title><rect x="20.5297%" y="453" width="0.1111%" height="15" fill="rgb(228,95,12)" fg:x="22349" fg:w="121"/><text x="20.7797%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (113 samples, 0.10%)</title><rect x="20.5370%" y="437" width="0.1038%" height="15" fill="rgb(249,221,15)" fg:x="22357" fg:w="113"/><text x="20.7870%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (67 samples, 0.06%)</title><rect x="20.5793%" y="421" width="0.0615%" height="15" fill="rgb(233,34,13)" fg:x="22403" fg:w="67"/><text x="20.8293%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (67 samples, 0.06%)</title><rect x="20.5793%" y="405" width="0.0615%" height="15" fill="rgb(214,103,39)" fg:x="22403" fg:w="67"/><text x="20.8293%" y="415.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (220 samples, 0.20%)</title><rect x="20.4470%" y="677" width="0.2021%" height="15" fill="rgb(251,126,39)" fg:x="22259" fg:w="220"/><text x="20.6970%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (164 samples, 0.15%)</title><rect x="20.4984%" y="661" width="0.1506%" height="15" fill="rgb(214,216,36)" fg:x="22315" fg:w="164"/><text x="20.7484%" y="671.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (164 samples, 0.15%)</title><rect x="20.4984%" y="645" width="0.1506%" height="15" fill="rgb(220,221,8)" fg:x="22315" fg:w="164"/><text x="20.7484%" y="655.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (157 samples, 0.14%)</title><rect x="20.5049%" y="629" width="0.1442%" height="15" fill="rgb(240,216,3)" fg:x="22322" fg:w="157"/><text x="20.7549%" y="639.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (157 samples, 0.14%)</title><rect x="20.5049%" y="613" width="0.1442%" height="15" fill="rgb(232,218,17)" fg:x="22322" fg:w="157"/><text x="20.7549%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (157 samples, 0.14%)</title><rect x="20.5049%" y="597" width="0.1442%" height="15" fill="rgb(229,163,45)" fg:x="22322" fg:w="157"/><text x="20.7549%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (142 samples, 0.13%)</title><rect x="20.5186%" y="581" width="0.1304%" height="15" fill="rgb(231,110,42)" fg:x="22337" fg:w="142"/><text x="20.7686%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (142 samples, 0.13%)</title><rect x="20.5186%" y="565" width="0.1304%" height="15" fill="rgb(208,170,48)" fg:x="22337" fg:w="142"/><text x="20.7686%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (142 samples, 0.13%)</title><rect x="20.5186%" y="549" width="0.1304%" height="15" fill="rgb(239,116,25)" fg:x="22337" fg:w="142"/><text x="20.7686%" y="559.50"></text></g><g><title>alloc::alloc::alloc (140 samples, 0.13%)</title><rect x="20.5205%" y="533" width="0.1286%" height="15" fill="rgb(219,200,50)" fg:x="22339" fg:w="140"/><text x="20.7705%" y="543.50"></text></g><g><title>__rg_alloc (140 samples, 0.13%)</title><rect x="20.5205%" y="517" width="0.1286%" height="15" fill="rgb(245,200,0)" fg:x="22339" fg:w="140"/><text x="20.7705%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (140 samples, 0.13%)</title><rect x="20.5205%" y="501" width="0.1286%" height="15" fill="rgb(245,119,33)" fg:x="22339" fg:w="140"/><text x="20.7705%" y="511.50"></text></g><g><title>rust_alloc (140 samples, 0.13%)</title><rect x="20.5205%" y="485" width="0.1286%" height="15" fill="rgb(231,125,12)" fg:x="22339" fg:w="140"/><text x="20.7705%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (11 samples, 0.01%)</title><rect x="20.7887%" y="629" width="0.0101%" height="15" fill="rgb(216,96,41)" fg:x="22631" fg:w="11"/><text x="21.0387%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="20.7786%" y="645" width="0.0257%" height="15" fill="rgb(248,43,45)" fg:x="22620" fg:w="28"/><text x="21.0286%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.05%)</title><rect x="20.7694%" y="661" width="0.0468%" height="15" fill="rgb(217,222,7)" fg:x="22610" fg:w="51"/><text x="21.0194%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="20.8043%" y="645" width="0.0119%" height="15" fill="rgb(233,28,6)" fg:x="22648" fg:w="13"/><text x="21.0543%" y="655.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (11 samples, 0.01%)</title><rect x="20.8163%" y="661" width="0.0101%" height="15" fill="rgb(231,218,15)" fg:x="22661" fg:w="11"/><text x="21.0663%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (11 samples, 0.01%)</title><rect x="20.8163%" y="645" width="0.0101%" height="15" fill="rgb(226,171,48)" fg:x="22661" fg:w="11"/><text x="21.0663%" y="655.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (11 samples, 0.01%)</title><rect x="20.8163%" y="629" width="0.0101%" height="15" fill="rgb(235,201,9)" fg:x="22661" fg:w="11"/><text x="21.0663%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (227 samples, 0.21%)</title><rect x="20.6491%" y="677" width="0.2085%" height="15" fill="rgb(217,80,15)" fg:x="22479" fg:w="227"/><text x="20.8991%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;,&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from::{{closure}}&gt;&gt; (34 samples, 0.03%)</title><rect x="20.8264%" y="661" width="0.0312%" height="15" fill="rgb(219,152,8)" fg:x="22672" fg:w="34"/><text x="21.0764%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (34 samples, 0.03%)</title><rect x="20.8264%" y="645" width="0.0312%" height="15" fill="rgb(243,107,38)" fg:x="22672" fg:w="34"/><text x="21.0764%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="20.8310%" y="629" width="0.0266%" height="15" fill="rgb(231,17,5)" fg:x="22677" fg:w="29"/><text x="21.0810%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (29 samples, 0.03%)</title><rect x="20.8310%" y="613" width="0.0266%" height="15" fill="rgb(209,25,54)" fg:x="22677" fg:w="29"/><text x="21.0810%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (23 samples, 0.02%)</title><rect x="20.8365%" y="597" width="0.0211%" height="15" fill="rgb(219,0,2)" fg:x="22683" fg:w="23"/><text x="21.0865%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (23 samples, 0.02%)</title><rect x="20.8365%" y="581" width="0.0211%" height="15" fill="rgb(246,9,5)" fg:x="22683" fg:w="23"/><text x="21.0865%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (20 samples, 0.02%)</title><rect x="20.8392%" y="565" width="0.0184%" height="15" fill="rgb(226,159,4)" fg:x="22686" fg:w="20"/><text x="21.0892%" y="575.50"></text></g><g><title>core::mem::replace (20 samples, 0.02%)</title><rect x="20.8392%" y="549" width="0.0184%" height="15" fill="rgb(219,175,34)" fg:x="22686" fg:w="20"/><text x="21.0892%" y="559.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="20.8475%" y="533" width="0.0101%" height="15" fill="rgb(236,10,46)" fg:x="22695" fg:w="11"/><text x="21.0975%" y="543.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (459 samples, 0.42%)</title><rect x="20.4396%" y="725" width="0.4216%" height="15" fill="rgb(240,211,16)" fg:x="22251" fg:w="459"/><text x="20.6896%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (459 samples, 0.42%)</title><rect x="20.4396%" y="709" width="0.4216%" height="15" fill="rgb(205,3,43)" fg:x="22251" fg:w="459"/><text x="20.6896%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (459 samples, 0.42%)</title><rect x="20.4396%" y="693" width="0.4216%" height="15" fill="rgb(245,7,22)" fg:x="22251" fg:w="459"/><text x="20.6896%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::empty (20 samples, 0.02%)</title><rect x="21.4253%" y="453" width="0.0184%" height="15" fill="rgb(239,132,32)" fg:x="23324" fg:w="20"/><text x="21.6753%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (20 samples, 0.02%)</title><rect x="21.4253%" y="437" width="0.0184%" height="15" fill="rgb(228,202,34)" fg:x="23324" fg:w="20"/><text x="21.6753%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (219 samples, 0.20%)</title><rect x="21.4042%" y="501" width="0.2012%" height="15" fill="rgb(254,200,22)" fg:x="23301" fg:w="219"/><text x="21.6542%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (213 samples, 0.20%)</title><rect x="21.4097%" y="485" width="0.1957%" height="15" fill="rgb(219,10,39)" fg:x="23307" fg:w="213"/><text x="21.6597%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (211 samples, 0.19%)</title><rect x="21.4115%" y="469" width="0.1938%" height="15" fill="rgb(226,210,39)" fg:x="23309" fg:w="211"/><text x="21.6615%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (176 samples, 0.16%)</title><rect x="21.4437%" y="453" width="0.1617%" height="15" fill="rgb(208,219,16)" fg:x="23344" fg:w="176"/><text x="21.6937%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (176 samples, 0.16%)</title><rect x="21.4437%" y="437" width="0.1617%" height="15" fill="rgb(216,158,51)" fg:x="23344" fg:w="176"/><text x="21.6937%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (250 samples, 0.23%)</title><rect x="21.3867%" y="645" width="0.2296%" height="15" fill="rgb(233,14,44)" fg:x="23282" fg:w="250"/><text x="21.6367%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (250 samples, 0.23%)</title><rect x="21.3867%" y="629" width="0.2296%" height="15" fill="rgb(237,97,39)" fg:x="23282" fg:w="250"/><text x="21.6367%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (236 samples, 0.22%)</title><rect x="21.3996%" y="613" width="0.2168%" height="15" fill="rgb(218,198,43)" fg:x="23296" fg:w="236"/><text x="21.6496%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (236 samples, 0.22%)</title><rect x="21.3996%" y="597" width="0.2168%" height="15" fill="rgb(231,104,20)" fg:x="23296" fg:w="236"/><text x="21.6496%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (236 samples, 0.22%)</title><rect x="21.3996%" y="581" width="0.2168%" height="15" fill="rgb(254,36,13)" fg:x="23296" fg:w="236"/><text x="21.6496%" y="591.50"></text></g><g><title>alloc::alloc::alloc (236 samples, 0.22%)</title><rect x="21.3996%" y="565" width="0.2168%" height="15" fill="rgb(248,14,50)" fg:x="23296" fg:w="236"/><text x="21.6496%" y="575.50"></text></g><g><title>__rg_alloc (236 samples, 0.22%)</title><rect x="21.3996%" y="549" width="0.2168%" height="15" fill="rgb(217,107,29)" fg:x="23296" fg:w="236"/><text x="21.6496%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (236 samples, 0.22%)</title><rect x="21.3996%" y="533" width="0.2168%" height="15" fill="rgb(251,169,33)" fg:x="23296" fg:w="236"/><text x="21.6496%" y="543.50"></text></g><g><title>rust_alloc (231 samples, 0.21%)</title><rect x="21.4042%" y="517" width="0.2122%" height="15" fill="rgb(217,108,32)" fg:x="23301" fg:w="231"/><text x="21.6542%" y="527.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="21.6053%" y="501" width="0.0110%" height="15" fill="rgb(219,66,42)" fg:x="23520" fg:w="12"/><text x="21.8553%" y="511.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (17 samples, 0.02%)</title><rect x="21.6779%" y="437" width="0.0156%" height="15" fill="rgb(206,180,7)" fg:x="23599" fg:w="17"/><text x="21.9279%" y="447.50"></text></g><g><title> (17 samples, 0.02%)</title><rect x="21.6779%" y="421" width="0.0156%" height="15" fill="rgb(208,226,31)" fg:x="23599" fg:w="17"/><text x="21.9279%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (64 samples, 0.06%)</title><rect x="21.6402%" y="469" width="0.0588%" height="15" fill="rgb(218,26,49)" fg:x="23558" fg:w="64"/><text x="21.8902%" y="479.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (58 samples, 0.05%)</title><rect x="21.6458%" y="453" width="0.0533%" height="15" fill="rgb(233,197,48)" fg:x="23564" fg:w="58"/><text x="21.8958%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (91 samples, 0.08%)</title><rect x="21.6329%" y="501" width="0.0836%" height="15" fill="rgb(252,181,51)" fg:x="23550" fg:w="91"/><text x="21.8829%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (91 samples, 0.08%)</title><rect x="21.6329%" y="485" width="0.0836%" height="15" fill="rgb(253,90,19)" fg:x="23550" fg:w="91"/><text x="21.8829%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (18 samples, 0.02%)</title><rect x="21.7000%" y="469" width="0.0165%" height="15" fill="rgb(215,171,30)" fg:x="23623" fg:w="18"/><text x="21.9500%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (98 samples, 0.09%)</title><rect x="21.6329%" y="533" width="0.0900%" height="15" fill="rgb(214,222,9)" fg:x="23550" fg:w="98"/><text x="21.8829%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (98 samples, 0.09%)</title><rect x="21.6329%" y="517" width="0.0900%" height="15" fill="rgb(223,3,22)" fg:x="23550" fg:w="98"/><text x="21.8829%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (102 samples, 0.09%)</title><rect x="21.6320%" y="549" width="0.0937%" height="15" fill="rgb(225,196,46)" fg:x="23549" fg:w="102"/><text x="21.8820%" y="559.50"></text></g><g><title>rust_dealloc (116 samples, 0.11%)</title><rect x="21.6219%" y="565" width="0.1066%" height="15" fill="rgb(209,110,37)" fg:x="23538" fg:w="116"/><text x="21.8719%" y="575.50"></text></g><g><title>alloc::alloc::box_free (123 samples, 0.11%)</title><rect x="21.6164%" y="645" width="0.1130%" height="15" fill="rgb(249,89,12)" fg:x="23532" fg:w="123"/><text x="21.8664%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (123 samples, 0.11%)</title><rect x="21.6164%" y="629" width="0.1130%" height="15" fill="rgb(226,27,33)" fg:x="23532" fg:w="123"/><text x="21.8664%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (123 samples, 0.11%)</title><rect x="21.6164%" y="613" width="0.1130%" height="15" fill="rgb(213,82,22)" fg:x="23532" fg:w="123"/><text x="21.8664%" y="623.50"></text></g><g><title>__rg_dealloc (123 samples, 0.11%)</title><rect x="21.6164%" y="597" width="0.1130%" height="15" fill="rgb(248,140,0)" fg:x="23532" fg:w="123"/><text x="21.8664%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (123 samples, 0.11%)</title><rect x="21.6164%" y="581" width="0.1130%" height="15" fill="rgb(228,106,3)" fg:x="23532" fg:w="123"/><text x="21.8664%" y="591.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="21.7661%" y="517" width="0.0110%" height="15" fill="rgb(209,23,37)" fg:x="23695" fg:w="12"/><text x="22.0161%" y="527.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (22 samples, 0.02%)</title><rect x="21.7661%" y="533" width="0.0202%" height="15" fill="rgb(241,93,50)" fg:x="23695" fg:w="22"/><text x="22.0161%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (31 samples, 0.03%)</title><rect x="21.7652%" y="597" width="0.0285%" height="15" fill="rgb(253,46,43)" fg:x="23694" fg:w="31"/><text x="22.0152%" y="607.50"></text></g><g><title>std::collections::hash::map::RandomState::new (31 samples, 0.03%)</title><rect x="21.7652%" y="581" width="0.0285%" height="15" fill="rgb(226,206,43)" fg:x="23694" fg:w="31"/><text x="22.0152%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (31 samples, 0.03%)</title><rect x="21.7652%" y="565" width="0.0285%" height="15" fill="rgb(217,54,7)" fg:x="23694" fg:w="31"/><text x="22.0152%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 0.03%)</title><rect x="21.7652%" y="549" width="0.0285%" height="15" fill="rgb(223,5,52)" fg:x="23694" fg:w="31"/><text x="22.0152%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="21.8442%" y="357" width="0.0193%" height="15" fill="rgb(206,52,46)" fg:x="23780" fg:w="21"/><text x="22.0942%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (21 samples, 0.02%)</title><rect x="21.8442%" y="341" width="0.0193%" height="15" fill="rgb(253,136,11)" fg:x="23780" fg:w="21"/><text x="22.0942%" y="351.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (17 samples, 0.02%)</title><rect x="21.8478%" y="325" width="0.0156%" height="15" fill="rgb(208,106,33)" fg:x="23784" fg:w="17"/><text x="22.0978%" y="335.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="21.8506%" y="309" width="0.0129%" height="15" fill="rgb(206,54,4)" fg:x="23787" fg:w="14"/><text x="22.1006%" y="319.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="21.8506%" y="293" width="0.0129%" height="15" fill="rgb(213,3,15)" fg:x="23787" fg:w="14"/><text x="22.1006%" y="303.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="21.8506%" y="277" width="0.0129%" height="15" fill="rgb(252,211,39)" fg:x="23787" fg:w="14"/><text x="22.1006%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::empty (16 samples, 0.01%)</title><rect x="21.8653%" y="357" width="0.0147%" height="15" fill="rgb(223,6,36)" fg:x="23803" fg:w="16"/><text x="22.1153%" y="367.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (16 samples, 0.01%)</title><rect x="21.8653%" y="341" width="0.0147%" height="15" fill="rgb(252,169,45)" fg:x="23803" fg:w="16"/><text x="22.1153%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (100 samples, 0.09%)</title><rect x="21.8313%" y="405" width="0.0919%" height="15" fill="rgb(212,48,26)" fg:x="23766" fg:w="100"/><text x="22.0813%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="21.8368%" y="389" width="0.0863%" height="15" fill="rgb(251,102,48)" fg:x="23772" fg:w="94"/><text x="22.0868%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="21.8433%" y="373" width="0.0799%" height="15" fill="rgb(243,208,16)" fg:x="23779" fg:w="87"/><text x="22.0933%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::take (47 samples, 0.04%)</title><rect x="21.8800%" y="357" width="0.0432%" height="15" fill="rgb(219,96,24)" fg:x="23819" fg:w="47"/><text x="22.1300%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (47 samples, 0.04%)</title><rect x="21.8800%" y="341" width="0.0432%" height="15" fill="rgb(219,33,29)" fg:x="23819" fg:w="47"/><text x="22.1300%" y="351.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (178 samples, 0.16%)</title><rect x="21.7652%" y="613" width="0.1635%" height="15" fill="rgb(223,176,5)" fg:x="23694" fg:w="178"/><text x="22.0152%" y="623.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (147 samples, 0.14%)</title><rect x="21.7936%" y="597" width="0.1350%" height="15" fill="rgb(228,140,14)" fg:x="23725" fg:w="147"/><text x="22.0436%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (147 samples, 0.14%)</title><rect x="21.7936%" y="581" width="0.1350%" height="15" fill="rgb(217,179,31)" fg:x="23725" fg:w="147"/><text x="22.0436%" y="591.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (138 samples, 0.13%)</title><rect x="21.8019%" y="565" width="0.1268%" height="15" fill="rgb(230,9,30)" fg:x="23734" fg:w="138"/><text x="22.0519%" y="575.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (138 samples, 0.13%)</title><rect x="21.8019%" y="549" width="0.1268%" height="15" fill="rgb(230,136,20)" fg:x="23734" fg:w="138"/><text x="22.0519%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (132 samples, 0.12%)</title><rect x="21.8074%" y="533" width="0.1213%" height="15" fill="rgb(215,210,22)" fg:x="23740" fg:w="132"/><text x="22.0574%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (114 samples, 0.10%)</title><rect x="21.8240%" y="517" width="0.1047%" height="15" fill="rgb(218,43,5)" fg:x="23758" fg:w="114"/><text x="22.0740%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (114 samples, 0.10%)</title><rect x="21.8240%" y="501" width="0.1047%" height="15" fill="rgb(216,11,5)" fg:x="23758" fg:w="114"/><text x="22.0740%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (114 samples, 0.10%)</title><rect x="21.8240%" y="485" width="0.1047%" height="15" fill="rgb(209,82,29)" fg:x="23758" fg:w="114"/><text x="22.0740%" y="495.50"></text></g><g><title>alloc::alloc::alloc (114 samples, 0.10%)</title><rect x="21.8240%" y="469" width="0.1047%" height="15" fill="rgb(244,115,12)" fg:x="23758" fg:w="114"/><text x="22.0740%" y="479.50"></text></g><g><title>__rg_alloc (114 samples, 0.10%)</title><rect x="21.8240%" y="453" width="0.1047%" height="15" fill="rgb(222,82,18)" fg:x="23758" fg:w="114"/><text x="22.0740%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (114 samples, 0.10%)</title><rect x="21.8240%" y="437" width="0.1047%" height="15" fill="rgb(249,227,8)" fg:x="23758" fg:w="114"/><text x="22.0740%" y="447.50"></text></g><g><title>rust_alloc (107 samples, 0.10%)</title><rect x="21.8304%" y="421" width="0.0983%" height="15" fill="rgb(253,141,45)" fg:x="23765" fg:w="107"/><text x="22.0804%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="22.0012%" y="581" width="0.0165%" height="15" fill="rgb(234,184,4)" fg:x="23951" fg:w="18"/><text x="22.2512%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.04%)</title><rect x="22.0012%" y="597" width="0.0441%" height="15" fill="rgb(218,194,23)" fg:x="23951" fg:w="48"/><text x="22.2512%" y="607.50"></text></g><g><title>&lt;halfbrown::iter::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.03%)</title><rect x="22.0178%" y="581" width="0.0276%" height="15" fill="rgb(235,66,41)" fg:x="23969" fg:w="30"/><text x="22.2678%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (70 samples, 0.06%)</title><rect x="22.0453%" y="597" width="0.0643%" height="15" fill="rgb(245,217,1)" fg:x="23999" fg:w="70"/><text x="22.2953%" y="607.50"></text></g><g><title>&lt;halfbrown::iter::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (70 samples, 0.06%)</title><rect x="22.0453%" y="581" width="0.0643%" height="15" fill="rgb(229,91,1)" fg:x="23999" fg:w="70"/><text x="22.2953%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (33 samples, 0.03%)</title><rect x="22.0793%" y="565" width="0.0303%" height="15" fill="rgb(207,101,30)" fg:x="24036" fg:w="33"/><text x="22.3293%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (33 samples, 0.03%)</title><rect x="22.0793%" y="549" width="0.0303%" height="15" fill="rgb(223,82,49)" fg:x="24036" fg:w="33"/><text x="22.3293%" y="559.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (51 samples, 0.05%)</title><rect x="22.1096%" y="597" width="0.0468%" height="15" fill="rgb(218,167,17)" fg:x="24069" fg:w="51"/><text x="22.3596%" y="607.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (51 samples, 0.05%)</title><rect x="22.1096%" y="581" width="0.0468%" height="15" fill="rgb(208,103,14)" fg:x="24069" fg:w="51"/><text x="22.3596%" y="591.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (51 samples, 0.05%)</title><rect x="22.1096%" y="565" width="0.0468%" height="15" fill="rgb(238,20,8)" fg:x="24069" fg:w="51"/><text x="22.3596%" y="575.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (51 samples, 0.05%)</title><rect x="22.1096%" y="549" width="0.0468%" height="15" fill="rgb(218,80,54)" fg:x="24069" fg:w="51"/><text x="22.3596%" y="559.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (51 samples, 0.05%)</title><rect x="22.1096%" y="533" width="0.0468%" height="15" fill="rgb(240,144,17)" fg:x="24069" fg:w="51"/><text x="22.3596%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (51 samples, 0.05%)</title><rect x="22.1096%" y="517" width="0.0468%" height="15" fill="rgb(245,27,50)" fg:x="24069" fg:w="51"/><text x="22.3596%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (51 samples, 0.05%)</title><rect x="22.1096%" y="501" width="0.0468%" height="15" fill="rgb(251,51,7)" fg:x="24069" fg:w="51"/><text x="22.3596%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (51 samples, 0.05%)</title><rect x="22.1096%" y="485" width="0.0468%" height="15" fill="rgb(245,217,29)" fg:x="24069" fg:w="51"/><text x="22.3596%" y="495.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (12 samples, 0.01%)</title><rect x="22.1831%" y="517" width="0.0110%" height="15" fill="rgb(221,176,29)" fg:x="24149" fg:w="12"/><text x="22.4331%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="22.1795%" y="533" width="0.0303%" height="15" fill="rgb(212,180,24)" fg:x="24145" fg:w="33"/><text x="22.4295%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (12 samples, 0.01%)</title><rect x="22.1987%" y="517" width="0.0110%" height="15" fill="rgb(254,24,2)" fg:x="24166" fg:w="12"/><text x="22.4487%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (525 samples, 0.48%)</title><rect x="21.7293%" y="645" width="0.4823%" height="15" fill="rgb(230,100,2)" fg:x="23655" fg:w="525"/><text x="21.9793%" y="655.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (500 samples, 0.46%)</title><rect x="21.7523%" y="629" width="0.4593%" height="15" fill="rgb(219,142,25)" fg:x="23680" fg:w="500"/><text x="22.0023%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (308 samples, 0.28%)</title><rect x="21.9287%" y="613" width="0.2829%" height="15" fill="rgb(240,73,43)" fg:x="23872" fg:w="308"/><text x="22.1787%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;halfbrown::iter::IntoIter&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;,&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from::{{closure}}&gt;&gt; (60 samples, 0.06%)</title><rect x="22.1565%" y="597" width="0.0551%" height="15" fill="rgb(214,114,15)" fg:x="24120" fg:w="60"/><text x="22.4065%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::iter::IntoIter&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (60 samples, 0.06%)</title><rect x="22.1565%" y="581" width="0.0551%" height="15" fill="rgb(207,130,4)" fg:x="24120" fg:w="60"/><text x="22.4065%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::iter::IntoIterInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (60 samples, 0.06%)</title><rect x="22.1565%" y="565" width="0.0551%" height="15" fill="rgb(221,25,40)" fg:x="24120" fg:w="60"/><text x="22.4065%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (55 samples, 0.05%)</title><rect x="22.1611%" y="549" width="0.0505%" height="15" fill="rgb(241,184,7)" fg:x="24125" fg:w="55"/><text x="22.4111%" y="559.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::IntoIterator for halfbrown::HashMap&lt;K,V,S&gt;&gt;::into_iter (33 samples, 0.03%)</title><rect x="22.2116%" y="645" width="0.0303%" height="15" fill="rgb(235,159,4)" fg:x="24180" fg:w="33"/><text x="22.4616%" y="655.50"></text></g><g><title>halfbrown::vecmap::iter::&lt;impl core::iter::traits::collect::IntoIterator for halfbrown::vecmap::VecMap&lt;K,V,S&gt;&gt;::into_iter (30 samples, 0.03%)</title><rect x="22.2144%" y="629" width="0.0276%" height="15" fill="rgb(214,87,48)" fg:x="24183" fg:w="30"/><text x="22.4644%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (30 samples, 0.03%)</title><rect x="22.2144%" y="613" width="0.0276%" height="15" fill="rgb(246,198,24)" fg:x="24183" fg:w="30"/><text x="22.4644%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (30 samples, 0.03%)</title><rect x="22.2144%" y="597" width="0.0276%" height="15" fill="rgb(209,66,40)" fg:x="24183" fg:w="30"/><text x="22.4644%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (30 samples, 0.03%)</title><rect x="22.2144%" y="581" width="0.0276%" height="15" fill="rgb(233,147,39)" fg:x="24183" fg:w="30"/><text x="22.4644%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,968 samples, 1.81%)</title><rect x="20.4396%" y="773" width="1.8078%" height="15" fill="rgb(231,145,52)" fg:x="22251" fg:w="1968"/><text x="20.6896%" y="783.50">&lt;..</text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (1,968 samples, 1.81%)</title><rect x="20.4396%" y="757" width="1.8078%" height="15" fill="rgb(206,20,26)" fg:x="22251" fg:w="1968"/><text x="20.6896%" y="767.50">&lt;..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,968 samples, 1.81%)</title><rect x="20.4396%" y="741" width="1.8078%" height="15" fill="rgb(238,220,4)" fg:x="22251" fg:w="1968"/><text x="20.6896%" y="751.50">&lt;..</text></g><g><title>&lt;tremor_script::pdk::PdkEventPayload as core::convert::From&lt;tremor_script::srs::EventPayload&gt;&gt;::from (1,509 samples, 1.39%)</title><rect x="20.8613%" y="725" width="1.3862%" height="15" fill="rgb(252,195,42)" fg:x="22710" fg:w="1509"/><text x="21.1113%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,509 samples, 1.39%)</title><rect x="20.8613%" y="709" width="1.3862%" height="15" fill="rgb(209,10,6)" fg:x="22710" fg:w="1509"/><text x="21.1113%" y="719.50"></text></g><g><title>&lt;tremor_script::pdk::PdkValueAndMeta as core::convert::From&lt;tremor_script::srs::ValueAndMeta&gt;&gt;::from (1,509 samples, 1.39%)</title><rect x="20.8613%" y="693" width="1.3862%" height="15" fill="rgb(229,3,52)" fg:x="22710" fg:w="1509"/><text x="21.1113%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,509 samples, 1.39%)</title><rect x="20.8613%" y="677" width="1.3862%" height="15" fill="rgb(253,49,37)" fg:x="22710" fg:w="1509"/><text x="21.1113%" y="687.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (1,509 samples, 1.39%)</title><rect x="20.8613%" y="661" width="1.3862%" height="15" fill="rgb(240,103,49)" fg:x="22710" fg:w="1509"/><text x="21.1113%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.03%)</title><rect x="22.2640%" y="549" width="0.0331%" height="15" fill="rgb(250,182,30)" fg:x="24237" fg:w="36"/><text x="22.5140%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (254 samples, 0.23%)</title><rect x="22.5515%" y="533" width="0.2333%" height="15" fill="rgb(248,8,30)" fg:x="24550" fg:w="254"/><text x="22.8015%" y="543.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (75 samples, 0.07%)</title><rect x="22.7159%" y="517" width="0.0689%" height="15" fill="rgb(237,120,30)" fg:x="24729" fg:w="75"/><text x="22.9659%" y="527.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="22.7986%" y="517" width="0.0119%" height="15" fill="rgb(221,146,34)" fg:x="24819" fg:w="13"/><text x="23.0486%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="22.7986%" y="501" width="0.0119%" height="15" fill="rgb(242,55,13)" fg:x="24819" fg:w="13"/><text x="23.0486%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="22.7986%" y="485" width="0.0119%" height="15" fill="rgb(242,112,31)" fg:x="24819" fg:w="13"/><text x="23.0486%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (13 samples, 0.01%)</title><rect x="22.7986%" y="469" width="0.0119%" height="15" fill="rgb(249,192,27)" fg:x="24819" fg:w="13"/><text x="23.0486%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="22.7848%" y="533" width="0.0312%" height="15" fill="rgb(208,204,44)" fg:x="24804" fg:w="34"/><text x="23.0348%" y="543.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="22.8225%" y="533" width="0.0266%" height="15" fill="rgb(208,93,54)" fg:x="24845" fg:w="29"/><text x="23.0725%" y="543.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (66 samples, 0.06%)</title><rect x="22.8491%" y="533" width="0.0606%" height="15" fill="rgb(242,1,31)" fg:x="24874" fg:w="66"/><text x="23.0991%" y="543.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="22.8895%" y="517" width="0.0202%" height="15" fill="rgb(241,83,25)" fg:x="24918" fg:w="22"/><text x="23.1395%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (160 samples, 0.15%)</title><rect x="22.9097%" y="533" width="0.1470%" height="15" fill="rgb(205,169,50)" fg:x="24940" fg:w="160"/><text x="23.1597%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::deref::Deref for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::deref (36 samples, 0.03%)</title><rect x="23.0567%" y="533" width="0.0331%" height="15" fill="rgb(239,186,37)" fg:x="25100" fg:w="36"/><text x="23.3067%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (36 samples, 0.03%)</title><rect x="23.0567%" y="517" width="0.0331%" height="15" fill="rgb(205,221,10)" fg:x="25100" fg:w="36"/><text x="23.3067%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="23.0916%" y="469" width="0.0202%" height="15" fill="rgb(218,196,15)" fg:x="25138" fg:w="22"/><text x="23.3416%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (36 samples, 0.03%)</title><rect x="23.0907%" y="533" width="0.0331%" height="15" fill="rgb(218,196,35)" fg:x="25137" fg:w="36"/><text x="23.3407%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (36 samples, 0.03%)</title><rect x="23.0907%" y="517" width="0.0331%" height="15" fill="rgb(233,63,24)" fg:x="25137" fg:w="36"/><text x="23.3407%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36 samples, 0.03%)</title><rect x="23.0907%" y="501" width="0.0331%" height="15" fill="rgb(225,8,4)" fg:x="25137" fg:w="36"/><text x="23.3407%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (36 samples, 0.03%)</title><rect x="23.0907%" y="485" width="0.0331%" height="15" fill="rgb(234,105,35)" fg:x="25137" fg:w="36"/><text x="23.3407%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (13 samples, 0.01%)</title><rect x="23.1118%" y="469" width="0.0119%" height="15" fill="rgb(236,21,32)" fg:x="25160" fg:w="13"/><text x="23.3618%" y="479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (13 samples, 0.01%)</title><rect x="23.1118%" y="453" width="0.0119%" height="15" fill="rgb(228,109,6)" fg:x="25160" fg:w="13"/><text x="23.3618%" y="463.50"></text></g><g><title>rust_dealloc (16 samples, 0.01%)</title><rect x="23.1917%" y="277" width="0.0147%" height="15" fill="rgb(229,215,31)" fg:x="25247" fg:w="16"/><text x="23.4417%" y="287.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (24 samples, 0.02%)</title><rect x="23.2478%" y="229" width="0.0220%" height="15" fill="rgb(221,52,54)" fg:x="25308" fg:w="24"/><text x="23.4978%" y="239.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (23 samples, 0.02%)</title><rect x="23.2487%" y="213" width="0.0211%" height="15" fill="rgb(252,129,43)" fg:x="25309" fg:w="23"/><text x="23.4987%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (79 samples, 0.07%)</title><rect x="23.2074%" y="277" width="0.0726%" height="15" fill="rgb(248,183,27)" fg:x="25264" fg:w="79"/><text x="23.4574%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (79 samples, 0.07%)</title><rect x="23.2074%" y="261" width="0.0726%" height="15" fill="rgb(250,0,22)" fg:x="25264" fg:w="79"/><text x="23.4574%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (70 samples, 0.06%)</title><rect x="23.2156%" y="245" width="0.0643%" height="15" fill="rgb(213,166,10)" fg:x="25273" fg:w="70"/><text x="23.4656%" y="255.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="23.2698%" y="229" width="0.0101%" height="15" fill="rgb(207,163,36)" fg:x="25332" fg:w="11"/><text x="23.5198%" y="239.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="23.2698%" y="213" width="0.0101%" height="15" fill="rgb(208,122,22)" fg:x="25332" fg:w="11"/><text x="23.5198%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (107 samples, 0.10%)</title><rect x="23.1917%" y="309" width="0.0983%" height="15" fill="rgb(207,104,49)" fg:x="25247" fg:w="107"/><text x="23.4417%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (107 samples, 0.10%)</title><rect x="23.1917%" y="293" width="0.0983%" height="15" fill="rgb(248,211,50)" fg:x="25247" fg:w="107"/><text x="23.4417%" y="303.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="23.2799%" y="277" width="0.0101%" height="15" fill="rgb(217,13,45)" fg:x="25343" fg:w="11"/><text x="23.5299%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (114 samples, 0.10%)</title><rect x="23.1917%" y="341" width="0.1047%" height="15" fill="rgb(211,216,49)" fg:x="25247" fg:w="114"/><text x="23.4417%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (114 samples, 0.10%)</title><rect x="23.1917%" y="325" width="0.1047%" height="15" fill="rgb(221,58,53)" fg:x="25247" fg:w="114"/><text x="23.4417%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (118 samples, 0.11%)</title><rect x="23.1917%" y="357" width="0.1084%" height="15" fill="rgb(220,112,41)" fg:x="25247" fg:w="118"/><text x="23.4417%" y="367.50"></text></g><g><title>rust_dealloc (138 samples, 0.13%)</title><rect x="23.1826%" y="373" width="0.1268%" height="15" fill="rgb(236,38,28)" fg:x="25237" fg:w="138"/><text x="23.4326%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (32 samples, 0.03%)</title><rect x="23.3121%" y="357" width="0.0294%" height="15" fill="rgb(227,195,22)" fg:x="25378" fg:w="32"/><text x="23.5621%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (214 samples, 0.20%)</title><rect x="23.1504%" y="437" width="0.1966%" height="15" fill="rgb(214,55,33)" fg:x="25202" fg:w="214"/><text x="23.4004%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (210 samples, 0.19%)</title><rect x="23.1541%" y="421" width="0.1929%" height="15" fill="rgb(248,80,13)" fg:x="25206" fg:w="210"/><text x="23.4041%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (198 samples, 0.18%)</title><rect x="23.1651%" y="405" width="0.1819%" height="15" fill="rgb(238,52,6)" fg:x="25218" fg:w="198"/><text x="23.4151%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (198 samples, 0.18%)</title><rect x="23.1651%" y="389" width="0.1819%" height="15" fill="rgb(224,198,47)" fg:x="25218" fg:w="198"/><text x="23.4151%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (41 samples, 0.04%)</title><rect x="23.3093%" y="373" width="0.0377%" height="15" fill="rgb(233,171,20)" fg:x="25375" fg:w="41"/><text x="23.5593%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (248 samples, 0.23%)</title><rect x="23.1311%" y="501" width="0.2278%" height="15" fill="rgb(241,30,25)" fg:x="25181" fg:w="248"/><text x="23.3811%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (236 samples, 0.22%)</title><rect x="23.1421%" y="485" width="0.2168%" height="15" fill="rgb(207,171,38)" fg:x="25193" fg:w="236"/><text x="23.3921%" y="495.50"></text></g><g><title>core::mem::drop (227 samples, 0.21%)</title><rect x="23.1504%" y="469" width="0.2085%" height="15" fill="rgb(234,70,1)" fg:x="25202" fg:w="227"/><text x="23.4004%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (227 samples, 0.21%)</title><rect x="23.1504%" y="453" width="0.2085%" height="15" fill="rgb(232,178,18)" fg:x="25202" fg:w="227"/><text x="23.4004%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="23.3470%" y="437" width="0.0119%" height="15" fill="rgb(241,78,40)" fg:x="25416" fg:w="13"/><text x="23.5970%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="23.3470%" y="421" width="0.0119%" height="15" fill="rgb(222,35,25)" fg:x="25416" fg:w="13"/><text x="23.5970%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="23.3470%" y="405" width="0.0119%" height="15" fill="rgb(207,92,16)" fg:x="25416" fg:w="13"/><text x="23.5970%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="23.3470%" y="389" width="0.0119%" height="15" fill="rgb(216,59,51)" fg:x="25416" fg:w="13"/><text x="23.5970%" y="399.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="23.3470%" y="373" width="0.0119%" height="15" fill="rgb(213,80,28)" fg:x="25416" fg:w="13"/><text x="23.5970%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="23.3470%" y="357" width="0.0119%" height="15" fill="rgb(220,93,7)" fg:x="25416" fg:w="13"/><text x="23.5970%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (20 samples, 0.02%)</title><rect x="23.3801%" y="405" width="0.0184%" height="15" fill="rgb(225,24,44)" fg:x="25452" fg:w="20"/><text x="23.6301%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (20 samples, 0.02%)</title><rect x="23.3801%" y="389" width="0.0184%" height="15" fill="rgb(243,74,40)" fg:x="25452" fg:w="20"/><text x="23.6301%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (20 samples, 0.02%)</title><rect x="23.3801%" y="373" width="0.0184%" height="15" fill="rgb(228,39,7)" fg:x="25452" fg:w="20"/><text x="23.6301%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (34 samples, 0.03%)</title><rect x="23.3718%" y="437" width="0.0312%" height="15" fill="rgb(227,79,8)" fg:x="25443" fg:w="34"/><text x="23.6218%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (34 samples, 0.03%)</title><rect x="23.3718%" y="421" width="0.0312%" height="15" fill="rgb(236,58,11)" fg:x="25443" fg:w="34"/><text x="23.6218%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (44 samples, 0.04%)</title><rect x="23.3718%" y="469" width="0.0404%" height="15" fill="rgb(249,63,35)" fg:x="25443" fg:w="44"/><text x="23.6218%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (44 samples, 0.04%)</title><rect x="23.3718%" y="453" width="0.0404%" height="15" fill="rgb(252,114,16)" fg:x="25443" fg:w="44"/><text x="23.6218%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (54 samples, 0.05%)</title><rect x="23.3644%" y="485" width="0.0496%" height="15" fill="rgb(254,151,24)" fg:x="25435" fg:w="54"/><text x="23.6144%" y="495.50"></text></g><g><title>rust_dealloc (62 samples, 0.06%)</title><rect x="23.3589%" y="501" width="0.0570%" height="15" fill="rgb(253,54,39)" fg:x="25429" fg:w="62"/><text x="23.6089%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (319 samples, 0.29%)</title><rect x="23.1238%" y="533" width="0.2930%" height="15" fill="rgb(243,25,45)" fg:x="25173" fg:w="319"/><text x="23.3738%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (319 samples, 0.29%)</title><rect x="23.1238%" y="517" width="0.2930%" height="15" fill="rgb(234,134,9)" fg:x="25173" fg:w="319"/><text x="23.3738%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="23.4416%" y="341" width="0.0110%" height="15" fill="rgb(227,166,31)" fg:x="25519" fg:w="12"/><text x="23.6916%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="23.4416%" y="325" width="0.0110%" height="15" fill="rgb(245,143,41)" fg:x="25519" fg:w="12"/><text x="23.6916%" y="335.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="23.4416%" y="309" width="0.0110%" height="15" fill="rgb(238,181,32)" fg:x="25519" fg:w="12"/><text x="23.6916%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="23.4416%" y="293" width="0.0110%" height="15" fill="rgb(224,113,18)" fg:x="25519" fg:w="12"/><text x="23.6916%" y="303.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (32 samples, 0.03%)</title><rect x="23.4333%" y="437" width="0.0294%" height="15" fill="rgb(240,229,28)" fg:x="25510" fg:w="32"/><text x="23.6833%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (32 samples, 0.03%)</title><rect x="23.4333%" y="421" width="0.0294%" height="15" fill="rgb(250,185,3)" fg:x="25510" fg:w="32"/><text x="23.6833%" y="431.50"></text></g><g><title>core::mem::drop (23 samples, 0.02%)</title><rect x="23.4416%" y="405" width="0.0211%" height="15" fill="rgb(212,59,25)" fg:x="25519" fg:w="23"/><text x="23.6916%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (23 samples, 0.02%)</title><rect x="23.4416%" y="389" width="0.0211%" height="15" fill="rgb(221,87,20)" fg:x="25519" fg:w="23"/><text x="23.6916%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (23 samples, 0.02%)</title><rect x="23.4416%" y="373" width="0.0211%" height="15" fill="rgb(213,74,28)" fg:x="25519" fg:w="23"/><text x="23.6916%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="23.4416%" y="357" width="0.0211%" height="15" fill="rgb(224,132,34)" fg:x="25519" fg:w="23"/><text x="23.6916%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.01%)</title><rect x="23.4526%" y="341" width="0.0101%" height="15" fill="rgb(222,101,24)" fg:x="25531" fg:w="11"/><text x="23.7026%" y="351.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="23.4811%" y="405" width="0.0110%" height="15" fill="rgb(254,142,4)" fg:x="25562" fg:w="12"/><text x="23.7311%" y="415.50"></text></g><g><title>size_to_sizeclass (17 samples, 0.02%)</title><rect x="23.4921%" y="405" width="0.0156%" height="15" fill="rgb(230,229,49)" fg:x="25574" fg:w="17"/><text x="23.7421%" y="415.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="23.5178%" y="341" width="0.0119%" height="15" fill="rgb(238,70,47)" fg:x="25602" fg:w="13"/><text x="23.7678%" y="351.50"></text></g><g><title>sizeclass_to_size (18 samples, 0.02%)</title><rect x="23.5298%" y="341" width="0.0165%" height="15" fill="rgb(231,160,17)" fg:x="25615" fg:w="18"/><text x="23.7798%" y="351.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (18 samples, 0.02%)</title><rect x="23.5298%" y="325" width="0.0165%" height="15" fill="rgb(218,68,53)" fg:x="25615" fg:w="18"/><text x="23.7798%" y="335.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (24 samples, 0.02%)</title><rect x="23.6079%" y="309" width="0.0220%" height="15" fill="rgb(236,111,10)" fg:x="25700" fg:w="24"/><text x="23.8579%" y="319.50"></text></g><g><title> (24 samples, 0.02%)</title><rect x="23.6079%" y="293" width="0.0220%" height="15" fill="rgb(224,34,41)" fg:x="25700" fg:w="24"/><text x="23.8579%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (103 samples, 0.09%)</title><rect x="23.5491%" y="341" width="0.0946%" height="15" fill="rgb(241,118,19)" fg:x="25636" fg:w="103"/><text x="23.7991%" y="351.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (80 samples, 0.07%)</title><rect x="23.5702%" y="325" width="0.0735%" height="15" fill="rgb(238,129,25)" fg:x="25659" fg:w="80"/><text x="23.8202%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (153 samples, 0.14%)</title><rect x="23.5077%" y="373" width="0.1405%" height="15" fill="rgb(238,22,31)" fg:x="25591" fg:w="153"/><text x="23.7577%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (153 samples, 0.14%)</title><rect x="23.5077%" y="357" width="0.1405%" height="15" fill="rgb(222,174,48)" fg:x="25591" fg:w="153"/><text x="23.7577%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (155 samples, 0.14%)</title><rect x="23.5077%" y="405" width="0.1424%" height="15" fill="rgb(206,152,40)" fg:x="25591" fg:w="155"/><text x="23.7577%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (155 samples, 0.14%)</title><rect x="23.5077%" y="389" width="0.1424%" height="15" fill="rgb(218,99,54)" fg:x="25591" fg:w="155"/><text x="23.7577%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (195 samples, 0.18%)</title><rect x="23.4756%" y="421" width="0.1791%" height="15" fill="rgb(220,174,26)" fg:x="25556" fg:w="195"/><text x="23.7256%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (247 samples, 0.23%)</title><rect x="23.4306%" y="485" width="0.2269%" height="15" fill="rgb(245,116,9)" fg:x="25507" fg:w="247"/><text x="23.6806%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (247 samples, 0.23%)</title><rect x="23.4306%" y="469" width="0.2269%" height="15" fill="rgb(209,72,35)" fg:x="25507" fg:w="247"/><text x="23.6806%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (247 samples, 0.23%)</title><rect x="23.4306%" y="453" width="0.2269%" height="15" fill="rgb(226,126,21)" fg:x="25507" fg:w="247"/><text x="23.6806%" y="463.50"></text></g><g><title>rust_dealloc (212 samples, 0.19%)</title><rect x="23.4627%" y="437" width="0.1947%" height="15" fill="rgb(227,192,1)" fg:x="25542" fg:w="212"/><text x="23.7127%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (13 samples, 0.01%)</title><rect x="23.6740%" y="421" width="0.0119%" height="15" fill="rgb(237,180,29)" fg:x="25772" fg:w="13"/><text x="23.9240%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (13 samples, 0.01%)</title><rect x="23.6740%" y="405" width="0.0119%" height="15" fill="rgb(230,197,35)" fg:x="25772" fg:w="13"/><text x="23.9240%" y="415.50"></text></g><g><title>rust_dealloc (23 samples, 0.02%)</title><rect x="24.0323%" y="213" width="0.0211%" height="15" fill="rgb(246,193,31)" fg:x="26162" fg:w="23"/><text x="24.2823%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (14 samples, 0.01%)</title><rect x="24.1250%" y="181" width="0.0129%" height="15" fill="rgb(241,36,4)" fg:x="26263" fg:w="14"/><text x="24.3750%" y="191.50"></text></g><g><title> (14 samples, 0.01%)</title><rect x="24.1250%" y="165" width="0.0129%" height="15" fill="rgb(241,130,17)" fg:x="26263" fg:w="14"/><text x="24.3750%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (99 samples, 0.09%)</title><rect x="24.0580%" y="213" width="0.0909%" height="15" fill="rgb(206,137,32)" fg:x="26190" fg:w="99"/><text x="24.3080%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (87 samples, 0.08%)</title><rect x="24.0690%" y="197" width="0.0799%" height="15" fill="rgb(237,228,51)" fg:x="26202" fg:w="87"/><text x="24.3190%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (143 samples, 0.13%)</title><rect x="24.0323%" y="245" width="0.1314%" height="15" fill="rgb(243,6,42)" fg:x="26162" fg:w="143"/><text x="24.2823%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (143 samples, 0.13%)</title><rect x="24.0323%" y="229" width="0.1314%" height="15" fill="rgb(251,74,28)" fg:x="26162" fg:w="143"/><text x="24.2823%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (16 samples, 0.01%)</title><rect x="24.1489%" y="213" width="0.0147%" height="15" fill="rgb(218,20,49)" fg:x="26289" fg:w="16"/><text x="24.3989%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (146 samples, 0.13%)</title><rect x="24.0323%" y="277" width="0.1341%" height="15" fill="rgb(238,28,14)" fg:x="26162" fg:w="146"/><text x="24.2823%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (146 samples, 0.13%)</title><rect x="24.0323%" y="261" width="0.1341%" height="15" fill="rgb(229,40,46)" fg:x="26162" fg:w="146"/><text x="24.2823%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (161 samples, 0.15%)</title><rect x="24.0212%" y="293" width="0.1479%" height="15" fill="rgb(244,195,20)" fg:x="26150" fg:w="161"/><text x="24.2712%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (543 samples, 0.50%)</title><rect x="23.6860%" y="389" width="0.4988%" height="15" fill="rgb(253,56,35)" fg:x="25785" fg:w="543"/><text x="23.9360%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (540 samples, 0.50%)</title><rect x="23.6887%" y="373" width="0.4960%" height="15" fill="rgb(210,149,44)" fg:x="25788" fg:w="540"/><text x="23.9387%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (524 samples, 0.48%)</title><rect x="23.7034%" y="357" width="0.4813%" height="15" fill="rgb(240,135,12)" fg:x="25804" fg:w="524"/><text x="23.9534%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (524 samples, 0.48%)</title><rect x="23.7034%" y="341" width="0.4813%" height="15" fill="rgb(251,24,50)" fg:x="25804" fg:w="524"/><text x="23.9534%" y="351.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (524 samples, 0.48%)</title><rect x="23.7034%" y="325" width="0.4813%" height="15" fill="rgb(243,200,47)" fg:x="25804" fg:w="524"/><text x="23.9534%" y="335.50"></text></g><g><title>rust_dealloc (190 samples, 0.17%)</title><rect x="24.0102%" y="309" width="0.1745%" height="15" fill="rgb(224,166,26)" fg:x="26138" fg:w="190"/><text x="24.2602%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (17 samples, 0.02%)</title><rect x="24.1691%" y="293" width="0.0156%" height="15" fill="rgb(233,0,47)" fg:x="26311" fg:w="17"/><text x="24.4191%" y="303.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (590 samples, 0.54%)</title><rect x="23.6584%" y="453" width="0.5420%" height="15" fill="rgb(253,80,5)" fg:x="25755" fg:w="590"/><text x="23.9084%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (582 samples, 0.53%)</title><rect x="23.6657%" y="437" width="0.5346%" height="15" fill="rgb(214,133,25)" fg:x="25763" fg:w="582"/><text x="23.9157%" y="447.50"></text></g><g><title>core::mem::drop (560 samples, 0.51%)</title><rect x="23.6860%" y="421" width="0.5144%" height="15" fill="rgb(209,27,14)" fg:x="25785" fg:w="560"/><text x="23.9360%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (560 samples, 0.51%)</title><rect x="23.6860%" y="405" width="0.5144%" height="15" fill="rgb(219,102,51)" fg:x="25785" fg:w="560"/><text x="23.9360%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (17 samples, 0.02%)</title><rect x="24.1847%" y="389" width="0.0156%" height="15" fill="rgb(237,18,16)" fg:x="26328" fg:w="17"/><text x="24.4347%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="24.1847%" y="373" width="0.0156%" height="15" fill="rgb(241,85,17)" fg:x="26328" fg:w="17"/><text x="24.4347%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="24.1847%" y="357" width="0.0156%" height="15" fill="rgb(236,90,42)" fg:x="26328" fg:w="17"/><text x="24.4347%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="24.1847%" y="341" width="0.0156%" height="15" fill="rgb(249,57,21)" fg:x="26328" fg:w="17"/><text x="24.4347%" y="351.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="24.1847%" y="325" width="0.0156%" height="15" fill="rgb(243,12,36)" fg:x="26328" fg:w="17"/><text x="24.4347%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="24.1847%" y="309" width="0.0156%" height="15" fill="rgb(253,128,47)" fg:x="26328" fg:w="17"/><text x="24.4347%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (12 samples, 0.01%)</title><rect x="24.2160%" y="357" width="0.0110%" height="15" fill="rgb(207,33,20)" fg:x="26362" fg:w="12"/><text x="24.4660%" y="367.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (14 samples, 0.01%)</title><rect x="24.2564%" y="325" width="0.0129%" height="15" fill="rgb(233,215,35)" fg:x="26406" fg:w="14"/><text x="24.5064%" y="335.50"></text></g><g><title> (14 samples, 0.01%)</title><rect x="24.2564%" y="309" width="0.0129%" height="15" fill="rgb(249,188,52)" fg:x="26406" fg:w="14"/><text x="24.5064%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (54 samples, 0.05%)</title><rect x="24.2270%" y="357" width="0.0496%" height="15" fill="rgb(225,12,32)" fg:x="26374" fg:w="54"/><text x="24.4770%" y="367.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (46 samples, 0.04%)</title><rect x="24.2344%" y="341" width="0.0423%" height="15" fill="rgb(247,98,14)" fg:x="26382" fg:w="46"/><text x="24.4844%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (82 samples, 0.08%)</title><rect x="24.2160%" y="389" width="0.0753%" height="15" fill="rgb(247,219,48)" fg:x="26362" fg:w="82"/><text x="24.4660%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (82 samples, 0.08%)</title><rect x="24.2160%" y="373" width="0.0753%" height="15" fill="rgb(253,60,48)" fg:x="26362" fg:w="82"/><text x="24.4660%" y="383.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (16 samples, 0.01%)</title><rect x="24.2766%" y="357" width="0.0147%" height="15" fill="rgb(245,15,52)" fg:x="26428" fg:w="16"/><text x="24.5266%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (103 samples, 0.09%)</title><rect x="24.2077%" y="437" width="0.0946%" height="15" fill="rgb(220,133,28)" fg:x="26353" fg:w="103"/><text x="24.4577%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (94 samples, 0.09%)</title><rect x="24.2160%" y="421" width="0.0863%" height="15" fill="rgb(217,180,4)" fg:x="26362" fg:w="94"/><text x="24.4660%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (94 samples, 0.09%)</title><rect x="24.2160%" y="405" width="0.0863%" height="15" fill="rgb(251,24,1)" fg:x="26362" fg:w="94"/><text x="24.4660%" y="415.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="24.2913%" y="389" width="0.0110%" height="15" fill="rgb(212,185,49)" fg:x="26444" fg:w="12"/><text x="24.5413%" y="399.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="24.2913%" y="373" width="0.0110%" height="15" fill="rgb(215,175,22)" fg:x="26444" fg:w="12"/><text x="24.5413%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="24.2913%" y="357" width="0.0110%" height="15" fill="rgb(250,205,14)" fg:x="26444" fg:w="12"/><text x="24.5413%" y="367.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="24.2913%" y="341" width="0.0110%" height="15" fill="rgb(225,211,22)" fg:x="26444" fg:w="12"/><text x="24.5413%" y="351.50"></text></g><g><title>rust_dealloc (112 samples, 0.10%)</title><rect x="24.2004%" y="453" width="0.1029%" height="15" fill="rgb(251,179,42)" fg:x="26345" fg:w="112"/><text x="24.4504%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (959 samples, 0.88%)</title><rect x="23.4242%" y="517" width="0.8809%" height="15" fill="rgb(208,216,51)" fg:x="25500" fg:w="959"/><text x="23.6742%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (952 samples, 0.87%)</title><rect x="23.4306%" y="501" width="0.8745%" height="15" fill="rgb(235,36,11)" fg:x="25507" fg:w="952"/><text x="23.6806%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (705 samples, 0.65%)</title><rect x="23.6575%" y="485" width="0.6476%" height="15" fill="rgb(213,189,28)" fg:x="25754" fg:w="705"/><text x="23.9075%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (705 samples, 0.65%)</title><rect x="23.6575%" y="469" width="0.6476%" height="15" fill="rgb(227,203,42)" fg:x="25754" fg:w="705"/><text x="23.9075%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (17 samples, 0.02%)</title><rect x="24.3051%" y="517" width="0.0156%" height="15" fill="rgb(244,72,36)" fg:x="26459" fg:w="17"/><text x="24.5551%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (17 samples, 0.02%)</title><rect x="24.3051%" y="501" width="0.0156%" height="15" fill="rgb(213,53,17)" fg:x="26459" fg:w="17"/><text x="24.5551%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (17 samples, 0.02%)</title><rect x="24.3051%" y="485" width="0.0156%" height="15" fill="rgb(207,167,3)" fg:x="26459" fg:w="17"/><text x="24.5551%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (17 samples, 0.02%)</title><rect x="24.3051%" y="469" width="0.0156%" height="15" fill="rgb(216,98,30)" fg:x="26459" fg:w="17"/><text x="24.5551%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (17 samples, 0.02%)</title><rect x="24.3051%" y="453" width="0.0156%" height="15" fill="rgb(236,123,15)" fg:x="26459" fg:w="17"/><text x="24.5551%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (13 samples, 0.01%)</title><rect x="24.3207%" y="517" width="0.0119%" height="15" fill="rgb(248,81,50)" fg:x="26476" fg:w="13"/><text x="24.5707%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="24.3207%" y="501" width="0.0119%" height="15" fill="rgb(214,120,4)" fg:x="26476" fg:w="13"/><text x="24.5707%" y="511.50"></text></g><g><title>abi_stable::std_types::arc::private::RArc&lt;T&gt;::data (267 samples, 0.25%)</title><rect x="24.4089%" y="341" width="0.2453%" height="15" fill="rgb(208,179,34)" fg:x="26572" fg:w="267"/><text x="24.6589%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="24.6762%" y="213" width="0.0202%" height="15" fill="rgb(227,140,7)" fg:x="26863" fg:w="22"/><text x="24.9262%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="24.6762%" y="197" width="0.0202%" height="15" fill="rgb(214,22,6)" fg:x="26863" fg:w="22"/><text x="24.9262%" y="207.50"></text></g><g><title>__rg_dealloc (22 samples, 0.02%)</title><rect x="24.6762%" y="181" width="0.0202%" height="15" fill="rgb(207,137,27)" fg:x="26863" fg:w="22"/><text x="24.9262%" y="191.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (22 samples, 0.02%)</title><rect x="24.6762%" y="165" width="0.0202%" height="15" fill="rgb(210,8,46)" fg:x="26863" fg:w="22"/><text x="24.9262%" y="175.50"></text></g><g><title>core::mem::drop (429 samples, 0.39%)</title><rect x="24.6744%" y="261" width="0.3941%" height="15" fill="rgb(240,16,54)" fg:x="26861" fg:w="429"/><text x="24.9244%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (429 samples, 0.39%)</title><rect x="24.6744%" y="245" width="0.3941%" height="15" fill="rgb(211,209,29)" fg:x="26861" fg:w="429"/><text x="24.9244%" y="255.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (429 samples, 0.39%)</title><rect x="24.6744%" y="229" width="0.3941%" height="15" fill="rgb(226,228,24)" fg:x="26861" fg:w="429"/><text x="24.9244%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (405 samples, 0.37%)</title><rect x="24.6964%" y="213" width="0.3720%" height="15" fill="rgb(222,84,9)" fg:x="26885" fg:w="405"/><text x="24.9464%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_sub (405 samples, 0.37%)</title><rect x="24.6964%" y="197" width="0.3720%" height="15" fill="rgb(234,203,30)" fg:x="26885" fg:w="405"/><text x="24.9464%" y="207.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (22 samples, 0.02%)</title><rect x="25.1438%" y="85" width="0.0202%" height="15" fill="rgb(238,109,14)" fg:x="27372" fg:w="22"/><text x="25.3938%" y="95.50"></text></g><g><title> (22 samples, 0.02%)</title><rect x="25.1438%" y="69" width="0.0202%" height="15" fill="rgb(233,206,34)" fg:x="27372" fg:w="22"/><text x="25.3938%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (65 samples, 0.06%)</title><rect x="25.1190%" y="117" width="0.0597%" height="15" fill="rgb(220,167,47)" fg:x="27345" fg:w="65"/><text x="25.3690%" y="127.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (60 samples, 0.06%)</title><rect x="25.1236%" y="101" width="0.0551%" height="15" fill="rgb(238,105,10)" fg:x="27350" fg:w="60"/><text x="25.3736%" y="111.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (11 samples, 0.01%)</title><rect x="25.1686%" y="85" width="0.0101%" height="15" fill="rgb(213,227,17)" fg:x="27399" fg:w="11"/><text x="25.4186%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (92 samples, 0.08%)</title><rect x="25.1098%" y="149" width="0.0845%" height="15" fill="rgb(217,132,38)" fg:x="27335" fg:w="92"/><text x="25.3598%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (92 samples, 0.08%)</title><rect x="25.1098%" y="133" width="0.0845%" height="15" fill="rgb(242,146,4)" fg:x="27335" fg:w="92"/><text x="25.3598%" y="143.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (17 samples, 0.02%)</title><rect x="25.1787%" y="117" width="0.0156%" height="15" fill="rgb(212,61,9)" fg:x="27410" fg:w="17"/><text x="25.4287%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (98 samples, 0.09%)</title><rect x="25.1098%" y="181" width="0.0900%" height="15" fill="rgb(247,126,22)" fg:x="27335" fg:w="98"/><text x="25.3598%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (98 samples, 0.09%)</title><rect x="25.1098%" y="165" width="0.0900%" height="15" fill="rgb(220,196,2)" fg:x="27335" fg:w="98"/><text x="25.3598%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (111 samples, 0.10%)</title><rect x="25.1043%" y="197" width="0.1020%" height="15" fill="rgb(208,46,4)" fg:x="27329" fg:w="111"/><text x="25.3543%" y="207.50"></text></g><g><title>rust_dealloc (126 samples, 0.12%)</title><rect x="25.0969%" y="213" width="0.1157%" height="15" fill="rgb(252,104,46)" fg:x="27321" fg:w="126"/><text x="25.3469%" y="223.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (591 samples, 0.54%)</title><rect x="24.6707%" y="277" width="0.5429%" height="15" fill="rgb(237,152,48)" fg:x="26857" fg:w="591"/><text x="24.9207%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (158 samples, 0.15%)</title><rect x="25.0684%" y="261" width="0.1451%" height="15" fill="rgb(221,59,37)" fg:x="27290" fg:w="158"/><text x="25.3184%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (158 samples, 0.15%)</title><rect x="25.0684%" y="245" width="0.1451%" height="15" fill="rgb(209,202,51)" fg:x="27290" fg:w="158"/><text x="25.3184%" y="255.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (158 samples, 0.15%)</title><rect x="25.0684%" y="229" width="0.1451%" height="15" fill="rgb(228,81,30)" fg:x="27290" fg:w="158"/><text x="25.3184%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (552 samples, 0.51%)</title><rect x="25.2136%" y="277" width="0.5071%" height="15" fill="rgb(227,42,39)" fg:x="27448" fg:w="552"/><text x="25.4636%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_sub (552 samples, 0.51%)</title><rect x="25.2136%" y="261" width="0.5071%" height="15" fill="rgb(221,26,2)" fg:x="27448" fg:w="552"/><text x="25.4636%" y="271.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (12 samples, 0.01%)</title><rect x="25.7813%" y="149" width="0.0110%" height="15" fill="rgb(254,61,31)" fg:x="28066" fg:w="12"/><text x="26.0313%" y="159.50"></text></g><g><title> (12 samples, 0.01%)</title><rect x="25.7813%" y="133" width="0.0110%" height="15" fill="rgb(222,173,38)" fg:x="28066" fg:w="12"/><text x="26.0313%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (49 samples, 0.05%)</title><rect x="25.7629%" y="181" width="0.0450%" height="15" fill="rgb(218,50,12)" fg:x="28046" fg:w="49"/><text x="26.0129%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (37 samples, 0.03%)</title><rect x="25.7739%" y="165" width="0.0340%" height="15" fill="rgb(223,88,40)" fg:x="28058" fg:w="37"/><text x="26.0239%" y="175.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (17 samples, 0.02%)</title><rect x="25.7923%" y="149" width="0.0156%" height="15" fill="rgb(237,54,19)" fg:x="28078" fg:w="17"/><text x="26.0423%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (87 samples, 0.08%)</title><rect x="25.7307%" y="261" width="0.0799%" height="15" fill="rgb(251,129,25)" fg:x="28011" fg:w="87"/><text x="25.9807%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (69 samples, 0.06%)</title><rect x="25.7473%" y="245" width="0.0634%" height="15" fill="rgb(238,97,19)" fg:x="28029" fg:w="69"/><text x="25.9973%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (69 samples, 0.06%)</title><rect x="25.7473%" y="229" width="0.0634%" height="15" fill="rgb(240,169,18)" fg:x="28029" fg:w="69"/><text x="25.9973%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (69 samples, 0.06%)</title><rect x="25.7473%" y="213" width="0.0634%" height="15" fill="rgb(230,187,49)" fg:x="28029" fg:w="69"/><text x="25.9973%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (69 samples, 0.06%)</title><rect x="25.7473%" y="197" width="0.0634%" height="15" fill="rgb(209,44,26)" fg:x="28029" fg:w="69"/><text x="25.9973%" y="207.50"></text></g><g><title>rust_dealloc (100 samples, 0.09%)</title><rect x="25.7206%" y="277" width="0.0919%" height="15" fill="rgb(244,0,6)" fg:x="28000" fg:w="100"/><text x="25.9706%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,587 samples, 1.46%)</title><rect x="24.3602%" y="405" width="1.4578%" height="15" fill="rgb(248,18,21)" fg:x="26519" fg:w="1587"/><text x="24.6102%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (1,587 samples, 1.46%)</title><rect x="24.3602%" y="389" width="1.4578%" height="15" fill="rgb(245,180,19)" fg:x="26519" fg:w="1587"/><text x="24.6102%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,569 samples, 1.44%)</title><rect x="24.3767%" y="373" width="1.4413%" height="15" fill="rgb(252,118,36)" fg:x="26537" fg:w="1569"/><text x="24.6267%" y="383.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (1,569 samples, 1.44%)</title><rect x="24.3767%" y="357" width="1.4413%" height="15" fill="rgb(210,224,19)" fg:x="26537" fg:w="1569"/><text x="24.6267%" y="367.50"></text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (1,267 samples, 1.16%)</title><rect x="24.6541%" y="341" width="1.1639%" height="15" fill="rgb(218,30,24)" fg:x="26839" fg:w="1267"/><text x="24.9041%" y="351.50"></text></g><g><title>core::mem::drop (1,251 samples, 1.15%)</title><rect x="24.6688%" y="325" width="1.1492%" height="15" fill="rgb(219,75,50)" fg:x="26855" fg:w="1251"/><text x="24.9188%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,251 samples, 1.15%)</title><rect x="24.6688%" y="309" width="1.1492%" height="15" fill="rgb(234,72,50)" fg:x="26855" fg:w="1251"/><text x="24.9188%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,251 samples, 1.15%)</title><rect x="24.6688%" y="293" width="1.1492%" height="15" fill="rgb(219,100,48)" fg:x="26855" fg:w="1251"/><text x="24.9188%" y="303.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (1,625 samples, 1.49%)</title><rect x="24.3345%" y="469" width="1.4927%" height="15" fill="rgb(253,5,41)" fg:x="26491" fg:w="1625"/><text x="24.5845%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (1,610 samples, 1.48%)</title><rect x="24.3483%" y="453" width="1.4789%" height="15" fill="rgb(247,181,11)" fg:x="26506" fg:w="1610"/><text x="24.5983%" y="463.50"></text></g><g><title>core::mem::drop (1,597 samples, 1.47%)</title><rect x="24.3602%" y="437" width="1.4670%" height="15" fill="rgb(222,223,25)" fg:x="26519" fg:w="1597"/><text x="24.6102%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (1,597 samples, 1.47%)</title><rect x="24.3602%" y="421" width="1.4670%" height="15" fill="rgb(214,198,28)" fg:x="26519" fg:w="1597"/><text x="24.6102%" y="431.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="25.8281%" y="453" width="0.0129%" height="15" fill="rgb(230,46,43)" fg:x="28117" fg:w="14"/><text x="26.0781%" y="463.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="25.8410%" y="373" width="0.0101%" height="15" fill="rgb(233,65,53)" fg:x="28131" fg:w="11"/><text x="26.0910%" y="383.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (13 samples, 0.01%)</title><rect x="25.8805%" y="341" width="0.0119%" height="15" fill="rgb(221,121,27)" fg:x="28174" fg:w="13"/><text x="26.1305%" y="351.50"></text></g><g><title> (13 samples, 0.01%)</title><rect x="25.8805%" y="325" width="0.0119%" height="15" fill="rgb(247,70,47)" fg:x="28174" fg:w="13"/><text x="26.1305%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (60 samples, 0.06%)</title><rect x="25.8511%" y="373" width="0.0551%" height="15" fill="rgb(228,85,35)" fg:x="28142" fg:w="60"/><text x="26.1011%" y="383.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (48 samples, 0.04%)</title><rect x="25.8621%" y="357" width="0.0441%" height="15" fill="rgb(209,50,18)" fg:x="28154" fg:w="48"/><text x="26.1121%" y="367.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (15 samples, 0.01%)</title><rect x="25.8924%" y="341" width="0.0138%" height="15" fill="rgb(250,19,35)" fg:x="28187" fg:w="15"/><text x="26.1424%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (72 samples, 0.07%)</title><rect x="25.8410%" y="405" width="0.0661%" height="15" fill="rgb(253,107,29)" fg:x="28131" fg:w="72"/><text x="26.0910%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (72 samples, 0.07%)</title><rect x="25.8410%" y="389" width="0.0661%" height="15" fill="rgb(252,179,29)" fg:x="28131" fg:w="72"/><text x="26.0910%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (79 samples, 0.07%)</title><rect x="25.8410%" y="437" width="0.0726%" height="15" fill="rgb(238,194,6)" fg:x="28131" fg:w="79"/><text x="26.0910%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (79 samples, 0.07%)</title><rect x="25.8410%" y="421" width="0.0726%" height="15" fill="rgb(238,164,29)" fg:x="28131" fg:w="79"/><text x="26.0910%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (84 samples, 0.08%)</title><rect x="25.8410%" y="453" width="0.0772%" height="15" fill="rgb(224,25,9)" fg:x="28131" fg:w="84"/><text x="26.0910%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (1,739 samples, 1.60%)</title><rect x="24.3345%" y="501" width="1.5974%" height="15" fill="rgb(244,153,23)" fg:x="26491" fg:w="1739"/><text x="24.5845%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (1,739 samples, 1.60%)</title><rect x="24.3345%" y="485" width="1.5974%" height="15" fill="rgb(212,203,14)" fg:x="26491" fg:w="1739"/><text x="24.5845%" y="495.50"></text></g><g><title>rust_dealloc (114 samples, 0.10%)</title><rect x="25.8272%" y="469" width="0.1047%" height="15" fill="rgb(220,164,20)" fg:x="28116" fg:w="114"/><text x="26.0772%" y="479.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="25.9181%" y="453" width="0.0138%" height="15" fill="rgb(222,203,48)" fg:x="28215" fg:w="15"/><text x="26.1681%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (110 samples, 0.10%)</title><rect x="25.9319%" y="485" width="0.1010%" height="15" fill="rgb(215,159,22)" fg:x="28230" fg:w="110"/><text x="26.1819%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (48 samples, 0.04%)</title><rect x="25.9889%" y="469" width="0.0441%" height="15" fill="rgb(216,183,47)" fg:x="28292" fg:w="48"/><text x="26.2389%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (37 samples, 0.03%)</title><rect x="25.9990%" y="453" width="0.0340%" height="15" fill="rgb(229,195,25)" fg:x="28303" fg:w="37"/><text x="26.2490%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (37 samples, 0.03%)</title><rect x="25.9990%" y="437" width="0.0340%" height="15" fill="rgb(224,132,51)" fg:x="28303" fg:w="37"/><text x="26.2490%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="26.0155%" y="421" width="0.0175%" height="15" fill="rgb(240,63,7)" fg:x="28321" fg:w="19"/><text x="26.2655%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::inner::RawTable&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (19 samples, 0.02%)</title><rect x="26.0155%" y="405" width="0.0175%" height="15" fill="rgb(249,182,41)" fg:x="28321" fg:w="19"/><text x="26.2655%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="26.0155%" y="389" width="0.0175%" height="15" fill="rgb(243,47,26)" fg:x="28321" fg:w="19"/><text x="26.2655%" y="399.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="26.0477%" y="453" width="0.0110%" height="15" fill="rgb(233,48,2)" fg:x="28356" fg:w="12"/><text x="26.2977%" y="463.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (32 samples, 0.03%)</title><rect x="26.1055%" y="341" width="0.0294%" height="15" fill="rgb(244,165,34)" fg:x="28419" fg:w="32"/><text x="26.3555%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (31 samples, 0.03%)</title><rect x="26.1064%" y="325" width="0.0285%" height="15" fill="rgb(207,89,7)" fg:x="28420" fg:w="31"/><text x="26.3564%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (69 samples, 0.06%)</title><rect x="26.0798%" y="389" width="0.0634%" height="15" fill="rgb(244,117,36)" fg:x="28391" fg:w="69"/><text x="26.3298%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (69 samples, 0.06%)</title><rect x="26.0798%" y="373" width="0.0634%" height="15" fill="rgb(226,144,34)" fg:x="28391" fg:w="69"/><text x="26.3298%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (69 samples, 0.06%)</title><rect x="26.0798%" y="357" width="0.0634%" height="15" fill="rgb(213,23,19)" fg:x="28391" fg:w="69"/><text x="26.3298%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (111 samples, 0.10%)</title><rect x="26.0587%" y="421" width="0.1020%" height="15" fill="rgb(217,75,12)" fg:x="28368" fg:w="111"/><text x="26.3087%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (111 samples, 0.10%)</title><rect x="26.0587%" y="405" width="0.1020%" height="15" fill="rgb(224,159,17)" fg:x="28368" fg:w="111"/><text x="26.3087%" y="415.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (19 samples, 0.02%)</title><rect x="26.1432%" y="389" width="0.0175%" height="15" fill="rgb(217,118,1)" fg:x="28460" fg:w="19"/><text x="26.3932%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (131 samples, 0.12%)</title><rect x="26.0431%" y="469" width="0.1203%" height="15" fill="rgb(232,180,48)" fg:x="28351" fg:w="131"/><text x="26.2931%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (114 samples, 0.10%)</title><rect x="26.0587%" y="453" width="0.1047%" height="15" fill="rgb(230,27,33)" fg:x="28368" fg:w="114"/><text x="26.3087%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (114 samples, 0.10%)</title><rect x="26.0587%" y="437" width="0.1047%" height="15" fill="rgb(205,31,21)" fg:x="28368" fg:w="114"/><text x="26.3087%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (2,993 samples, 2.75%)</title><rect x="23.4168%" y="533" width="2.7494%" height="15" fill="rgb(253,59,4)" fg:x="25492" fg:w="2993"/><text x="23.6668%" y="543.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (1,996 samples, 1.83%)</title><rect x="24.3326%" y="517" width="1.8335%" height="15" fill="rgb(224,201,9)" fg:x="26489" fg:w="1996"/><text x="24.5826%" y="527.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (255 samples, 0.23%)</title><rect x="25.9319%" y="501" width="0.2342%" height="15" fill="rgb(229,206,30)" fg:x="28230" fg:w="255"/><text x="26.1819%" y="511.50"></text></g><g><title>rust_dealloc (145 samples, 0.13%)</title><rect x="26.0330%" y="485" width="0.1332%" height="15" fill="rgb(212,67,47)" fg:x="28340" fg:w="145"/><text x="26.2830%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::pdk::PdkValue&gt; (21 samples, 0.02%)</title><rect x="26.1662%" y="533" width="0.0193%" height="15" fill="rgb(211,96,50)" fg:x="28485" fg:w="21"/><text x="26.4162%" y="543.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (13 samples, 0.01%)</title><rect x="26.3168%" y="453" width="0.0119%" height="15" fill="rgb(252,114,18)" fg:x="28649" fg:w="13"/><text x="26.5668%" y="463.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (49 samples, 0.05%)</title><rect x="26.2911%" y="469" width="0.0450%" height="15" fill="rgb(223,58,37)" fg:x="28621" fg:w="49"/><text x="26.5411%" y="479.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (59 samples, 0.05%)</title><rect x="26.2856%" y="485" width="0.0542%" height="15" fill="rgb(237,70,4)" fg:x="28615" fg:w="59"/><text x="26.5356%" y="495.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (171 samples, 0.16%)</title><rect x="26.1946%" y="533" width="0.1571%" height="15" fill="rgb(244,85,46)" fg:x="28516" fg:w="171"/><text x="26.4446%" y="543.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (166 samples, 0.15%)</title><rect x="26.1992%" y="517" width="0.1525%" height="15" fill="rgb(223,39,52)" fg:x="28521" fg:w="166"/><text x="26.4492%" y="527.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (166 samples, 0.15%)</title><rect x="26.1992%" y="501" width="0.1525%" height="15" fill="rgb(218,200,14)" fg:x="28521" fg:w="166"/><text x="26.4492%" y="511.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::update_min_max (13 samples, 0.01%)</title><rect x="26.3398%" y="485" width="0.0119%" height="15" fill="rgb(208,171,16)" fg:x="28674" fg:w="13"/><text x="26.5898%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (64 samples, 0.06%)</title><rect x="26.4371%" y="469" width="0.0588%" height="15" fill="rgb(234,200,18)" fg:x="28780" fg:w="64"/><text x="26.6871%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::ge (64 samples, 0.06%)</title><rect x="26.4371%" y="453" width="0.0588%" height="15" fill="rgb(228,45,11)" fg:x="28780" fg:w="64"/><text x="26.6871%" y="463.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (62 samples, 0.06%)</title><rect x="26.4390%" y="437" width="0.0570%" height="15" fill="rgb(237,182,11)" fg:x="28782" fg:w="62"/><text x="26.6890%" y="447.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (62 samples, 0.06%)</title><rect x="26.4390%" y="421" width="0.0570%" height="15" fill="rgb(241,175,49)" fg:x="28782" fg:w="62"/><text x="26.6890%" y="431.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (62 samples, 0.06%)</title><rect x="26.4390%" y="405" width="0.0570%" height="15" fill="rgb(247,38,35)" fg:x="28782" fg:w="62"/><text x="26.6890%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (30 samples, 0.03%)</title><rect x="26.4684%" y="389" width="0.0276%" height="15" fill="rgb(228,39,49)" fg:x="28814" fg:w="30"/><text x="26.7184%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (130 samples, 0.12%)</title><rect x="26.3940%" y="501" width="0.1194%" height="15" fill="rgb(226,101,26)" fg:x="28733" fg:w="130"/><text x="26.6440%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (130 samples, 0.12%)</title><rect x="26.3940%" y="485" width="0.1194%" height="15" fill="rgb(206,141,19)" fg:x="28733" fg:w="130"/><text x="26.6440%" y="495.50"></text></g><g><title>core::time::Duration::new (19 samples, 0.02%)</title><rect x="26.4959%" y="469" width="0.0175%" height="15" fill="rgb(211,200,13)" fg:x="28844" fg:w="19"/><text x="26.7459%" y="479.50"></text></g><g><title>std::time::SystemTime::duration_since (137 samples, 0.13%)</title><rect x="26.3940%" y="517" width="0.1258%" height="15" fill="rgb(241,121,6)" fg:x="28733" fg:w="137"/><text x="26.6440%" y="527.50"></text></g><g><title>tremor_common::time::nanotime (802 samples, 0.74%)</title><rect x="26.3517%" y="533" width="0.7367%" height="15" fill="rgb(234,221,29)" fg:x="28687" fg:w="802"/><text x="26.6017%" y="543.50"></text></g><g><title>std::time::SystemTime::now (619 samples, 0.57%)</title><rect x="26.5198%" y="517" width="0.5686%" height="15" fill="rgb(229,136,5)" fg:x="28870" fg:w="619"/><text x="26.7698%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (619 samples, 0.57%)</title><rect x="26.5198%" y="501" width="0.5686%" height="15" fill="rgb(238,36,11)" fg:x="28870" fg:w="619"/><text x="26.7698%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::now (619 samples, 0.57%)</title><rect x="26.5198%" y="485" width="0.5686%" height="15" fill="rgb(251,55,41)" fg:x="28870" fg:w="619"/><text x="26.7698%" y="495.50"></text></g><g><title>__clock_gettime_2 (507 samples, 0.47%)</title><rect x="26.6227%" y="469" width="0.4657%" height="15" fill="rgb(242,34,40)" fg:x="28982" fg:w="507"/><text x="26.8727%" y="479.50"></text></g><g><title>__vdso_clock_gettime (476 samples, 0.44%)</title><rect x="26.6512%" y="453" width="0.4373%" height="15" fill="rgb(215,42,17)" fg:x="29013" fg:w="476"/><text x="26.9012%" y="463.50"></text></g><g><title>[[vdso]] (311 samples, 0.29%)</title><rect x="26.8027%" y="437" width="0.2857%" height="15" fill="rgb(207,44,46)" fg:x="29178" fg:w="311"/><text x="27.0527%" y="447.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (199 samples, 0.18%)</title><rect x="27.3401%" y="501" width="0.1828%" height="15" fill="rgb(211,206,28)" fg:x="29763" fg:w="199"/><text x="27.5901%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (20 samples, 0.02%)</title><rect x="27.6377%" y="485" width="0.0184%" height="15" fill="rgb(237,167,16)" fg:x="30087" fg:w="20"/><text x="27.8877%" y="495.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkOpMeta&gt; for tremor_pipeline::OpMeta&gt;::from (308 samples, 0.28%)</title><rect x="27.5229%" y="501" width="0.2829%" height="15" fill="rgb(233,66,6)" fg:x="29962" fg:w="308"/><text x="27.7729%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (163 samples, 0.15%)</title><rect x="27.6561%" y="485" width="0.1497%" height="15" fill="rgb(246,123,29)" fg:x="30107" fg:w="163"/><text x="27.9061%" y="495.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (1,344 samples, 1.23%)</title><rect x="27.0884%" y="533" width="1.2346%" height="15" fill="rgb(209,62,40)" fg:x="29489" fg:w="1344"/><text x="27.3384%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,156 samples, 1.06%)</title><rect x="27.2611%" y="517" width="1.0619%" height="15" fill="rgb(218,4,25)" fg:x="29677" fg:w="1156"/><text x="27.5111%" y="527.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkEventPayload&gt; for tremor_script::srs::EventPayload&gt;::from (563 samples, 0.52%)</title><rect x="27.8058%" y="501" width="0.5172%" height="15" fill="rgb(253,91,49)" fg:x="30270" fg:w="563"/><text x="28.0558%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (519 samples, 0.48%)</title><rect x="27.8463%" y="485" width="0.4768%" height="15" fill="rgb(228,155,29)" fg:x="30314" fg:w="519"/><text x="28.0963%" y="495.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkValueAndMeta&gt; for tremor_script::srs::ValueAndMeta&gt;::from (485 samples, 0.45%)</title><rect x="27.8775%" y="469" width="0.4455%" height="15" fill="rgb(243,57,37)" fg:x="30348" fg:w="485"/><text x="28.1275%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (241 samples, 0.22%)</title><rect x="28.1016%" y="453" width="0.2214%" height="15" fill="rgb(244,167,17)" fg:x="30592" fg:w="241"/><text x="28.3516%" y="463.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (25 samples, 0.02%)</title><rect x="28.3000%" y="437" width="0.0230%" height="15" fill="rgb(207,181,38)" fg:x="30808" fg:w="25"/><text x="28.5500%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (133 samples, 0.12%)</title><rect x="28.3377%" y="517" width="0.1222%" height="15" fill="rgb(211,8,23)" fg:x="30849" fg:w="133"/><text x="28.5877%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (8,739 samples, 8.03%)</title><rect x="20.4396%" y="789" width="8.0276%" height="15" fill="rgb(235,11,44)" fg:x="22251" fg:w="8739"/><text x="20.6896%" y="799.50">tremor_runt..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,771 samples, 6.22%)</title><rect x="22.2474%" y="773" width="6.2198%" height="15" fill="rgb(248,18,52)" fg:x="24219" fg:w="6771"/><text x="22.4974%" y="783.50">&lt;async_f..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,771 samples, 6.22%)</title><rect x="22.2474%" y="757" width="6.2198%" height="15" fill="rgb(208,4,7)" fg:x="24219" fg:w="6771"/><text x="22.4974%" y="767.50">&lt;async_f..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (6,771 samples, 6.22%)</title><rect x="22.2474%" y="741" width="6.2198%" height="15" fill="rgb(240,17,39)" fg:x="24219" fg:w="6771"/><text x="22.4974%" y="751.50">&lt;core::t..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,771 samples, 6.22%)</title><rect x="22.2474%" y="725" width="6.2198%" height="15" fill="rgb(207,170,3)" fg:x="24219" fg:w="6771"/><text x="22.4974%" y="735.50">&lt;async_f..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (6,771 samples, 6.22%)</title><rect x="22.2474%" y="709" width="6.2198%" height="15" fill="rgb(236,100,52)" fg:x="24219" fg:w="6771"/><text x="22.4974%" y="719.50">async_ff..</text></g><g><title>std::panic::catch_unwind (6,771 samples, 6.22%)</title><rect x="22.2474%" y="693" width="6.2198%" height="15" fill="rgb(246,78,51)" fg:x="24219" fg:w="6771"/><text x="22.4974%" y="703.50">std::pan..</text></g><g><title>std::panicking::try (6,771 samples, 6.22%)</title><rect x="22.2474%" y="677" width="6.2198%" height="15" fill="rgb(211,17,15)" fg:x="24219" fg:w="6771"/><text x="22.4974%" y="687.50">std::pan..</text></g><g><title>std::panicking::try::do_call (6,771 samples, 6.22%)</title><rect x="22.2474%" y="661" width="6.2198%" height="15" fill="rgb(209,59,46)" fg:x="24219" fg:w="6771"/><text x="22.4974%" y="671.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,771 samples, 6.22%)</title><rect x="22.2474%" y="645" width="6.2198%" height="15" fill="rgb(210,92,25)" fg:x="24219" fg:w="6771"/><text x="22.4974%" y="655.50">&lt;core::p..</text></g><g><title>core::ops::function::FnOnce::call_once (6,771 samples, 6.22%)</title><rect x="22.2474%" y="629" width="6.2198%" height="15" fill="rgb(238,174,52)" fg:x="24219" fg:w="6771"/><text x="22.4974%" y="639.50">core::op..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (6,771 samples, 6.22%)</title><rect x="22.2474%" y="613" width="6.2198%" height="15" fill="rgb(230,73,7)" fg:x="24219" fg:w="6771"/><text x="22.4974%" y="623.50">async_ff..</text></g><g><title>async_ffi::FfiContext::with_context (6,771 samples, 6.22%)</title><rect x="22.2474%" y="597" width="6.2198%" height="15" fill="rgb(243,124,40)" fg:x="24219" fg:w="6771"/><text x="22.4974%" y="607.50">async_ff..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (6,771 samples, 6.22%)</title><rect x="22.2474%" y="581" width="6.2198%" height="15" fill="rgb(244,170,11)" fg:x="24219" fg:w="6771"/><text x="22.4974%" y="591.50">async_ff..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,771 samples, 6.22%)</title><rect x="22.2474%" y="565" width="6.2198%" height="15" fill="rgb(207,114,54)" fg:x="24219" fg:w="6771"/><text x="22.4974%" y="575.50">&lt;core::f..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (6,717 samples, 6.17%)</title><rect x="22.2970%" y="549" width="6.1702%" height="15" fill="rgb(205,42,20)" fg:x="24273" fg:w="6717"/><text x="22.5470%" y="559.50">&lt;tremor_..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (157 samples, 0.14%)</title><rect x="28.3230%" y="533" width="0.1442%" height="15" fill="rgb(230,30,28)" fg:x="30833" fg:w="157"/><text x="28.5730%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,760 samples, 8.05%)</title><rect x="20.4396%" y="805" width="8.0469%" height="15" fill="rgb(205,73,54)" fg:x="22251" fg:w="8760"/><text x="20.6896%" y="815.50">&lt;core::futu..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (21 samples, 0.02%)</title><rect x="28.4672%" y="789" width="0.0193%" height="15" fill="rgb(254,227,23)" fg:x="30990" fg:w="21"/><text x="28.7172%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (21 samples, 0.02%)</title><rect x="28.4672%" y="773" width="0.0193%" height="15" fill="rgb(228,202,34)" fg:x="30990" fg:w="21"/><text x="28.7172%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::pdk::PdkOpMeta&gt; (21 samples, 0.02%)</title><rect x="28.4672%" y="757" width="0.0193%" height="15" fill="rgb(222,225,37)" fg:x="30990" fg:w="21"/><text x="28.7172%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (21 samples, 0.02%)</title><rect x="28.4672%" y="741" width="0.0193%" height="15" fill="rgb(221,14,54)" fg:x="30990" fg:w="21"/><text x="28.7172%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="28.4672%" y="725" width="0.0193%" height="15" fill="rgb(254,102,2)" fg:x="30990" fg:w="21"/><text x="28.7172%" y="735.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (21 samples, 0.02%)</title><rect x="28.4672%" y="709" width="0.0193%" height="15" fill="rgb(232,104,17)" fg:x="30990" fg:w="21"/><text x="28.7172%" y="719.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (21 samples, 0.02%)</title><rect x="28.4672%" y="693" width="0.0193%" height="15" fill="rgb(250,220,14)" fg:x="30990" fg:w="21"/><text x="28.7172%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt; (21 samples, 0.02%)</title><rect x="28.4672%" y="677" width="0.0193%" height="15" fill="rgb(241,158,9)" fg:x="30990" fg:w="21"/><text x="28.7172%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (21 samples, 0.02%)</title><rect x="28.4672%" y="661" width="0.0193%" height="15" fill="rgb(246,9,43)" fg:x="30990" fg:w="21"/><text x="28.7172%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt; (21 samples, 0.02%)</title><rect x="28.4672%" y="645" width="0.0193%" height="15" fill="rgb(206,73,33)" fg:x="30990" fg:w="21"/><text x="28.7172%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue)&gt;&gt; (21 samples, 0.02%)</title><rect x="28.4672%" y="629" width="0.0193%" height="15" fill="rgb(222,79,8)" fg:x="30990" fg:w="21"/><text x="28.7172%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="28.4672%" y="613" width="0.0193%" height="15" fill="rgb(234,8,54)" fg:x="30990" fg:w="21"/><text x="28.7172%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (12 samples, 0.01%)</title><rect x="28.4755%" y="597" width="0.0110%" height="15" fill="rgb(209,134,38)" fg:x="30999" fg:w="12"/><text x="28.7255%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (15 samples, 0.01%)</title><rect x="28.5040%" y="629" width="0.0138%" height="15" fill="rgb(230,127,29)" fg:x="31030" fg:w="15"/><text x="28.7540%" y="639.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (26 samples, 0.02%)</title><rect x="28.5040%" y="645" width="0.0239%" height="15" fill="rgb(242,44,41)" fg:x="31030" fg:w="26"/><text x="28.7540%" y="655.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (11 samples, 0.01%)</title><rect x="28.5178%" y="629" width="0.0101%" height="15" fill="rgb(222,56,43)" fg:x="31045" fg:w="11"/><text x="28.7678%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (50 samples, 0.05%)</title><rect x="28.4975%" y="709" width="0.0459%" height="15" fill="rgb(238,39,47)" fg:x="31023" fg:w="50"/><text x="28.7475%" y="719.50"></text></g><g><title>std::collections::hash::map::RandomState::new (50 samples, 0.05%)</title><rect x="28.4975%" y="693" width="0.0459%" height="15" fill="rgb(226,79,43)" fg:x="31023" fg:w="50"/><text x="28.7475%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 samples, 0.05%)</title><rect x="28.4975%" y="677" width="0.0459%" height="15" fill="rgb(242,105,53)" fg:x="31023" fg:w="50"/><text x="28.7475%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (50 samples, 0.05%)</title><rect x="28.4975%" y="661" width="0.0459%" height="15" fill="rgb(251,132,46)" fg:x="31023" fg:w="50"/><text x="28.7475%" y="671.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (17 samples, 0.02%)</title><rect x="28.5279%" y="645" width="0.0156%" height="15" fill="rgb(231,77,14)" fg:x="31056" fg:w="17"/><text x="28.7779%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::empty (23 samples, 0.02%)</title><rect x="28.6013%" y="469" width="0.0211%" height="15" fill="rgb(240,135,9)" fg:x="31136" fg:w="23"/><text x="28.8513%" y="479.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (23 samples, 0.02%)</title><rect x="28.6013%" y="453" width="0.0211%" height="15" fill="rgb(248,109,14)" fg:x="31136" fg:w="23"/><text x="28.8513%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (114 samples, 0.10%)</title><rect x="28.5876%" y="517" width="0.1047%" height="15" fill="rgb(227,146,52)" fg:x="31121" fg:w="114"/><text x="28.8376%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (114 samples, 0.10%)</title><rect x="28.5876%" y="501" width="0.1047%" height="15" fill="rgb(232,54,3)" fg:x="31121" fg:w="114"/><text x="28.8376%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (100 samples, 0.09%)</title><rect x="28.6004%" y="485" width="0.0919%" height="15" fill="rgb(229,201,43)" fg:x="31135" fg:w="100"/><text x="28.8504%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (76 samples, 0.07%)</title><rect x="28.6225%" y="469" width="0.0698%" height="15" fill="rgb(252,161,33)" fg:x="31159" fg:w="76"/><text x="28.8725%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (76 samples, 0.07%)</title><rect x="28.6225%" y="453" width="0.0698%" height="15" fill="rgb(226,146,40)" fg:x="31159" fg:w="76"/><text x="28.8725%" y="463.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (220 samples, 0.20%)</title><rect x="28.4975%" y="725" width="0.2021%" height="15" fill="rgb(219,47,25)" fg:x="31023" fg:w="220"/><text x="28.7475%" y="735.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (170 samples, 0.16%)</title><rect x="28.5435%" y="709" width="0.1562%" height="15" fill="rgb(250,135,13)" fg:x="31073" fg:w="170"/><text x="28.7935%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (170 samples, 0.16%)</title><rect x="28.5435%" y="693" width="0.1562%" height="15" fill="rgb(219,229,18)" fg:x="31073" fg:w="170"/><text x="28.7935%" y="703.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (162 samples, 0.15%)</title><rect x="28.5508%" y="677" width="0.1488%" height="15" fill="rgb(217,152,27)" fg:x="31081" fg:w="162"/><text x="28.8008%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (162 samples, 0.15%)</title><rect x="28.5508%" y="661" width="0.1488%" height="15" fill="rgb(225,71,47)" fg:x="31081" fg:w="162"/><text x="28.8008%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (160 samples, 0.15%)</title><rect x="28.5527%" y="645" width="0.1470%" height="15" fill="rgb(220,139,14)" fg:x="31083" fg:w="160"/><text x="28.8027%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (139 samples, 0.13%)</title><rect x="28.5720%" y="629" width="0.1277%" height="15" fill="rgb(247,54,32)" fg:x="31104" fg:w="139"/><text x="28.8220%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (139 samples, 0.13%)</title><rect x="28.5720%" y="613" width="0.1277%" height="15" fill="rgb(252,131,39)" fg:x="31104" fg:w="139"/><text x="28.8220%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (139 samples, 0.13%)</title><rect x="28.5720%" y="597" width="0.1277%" height="15" fill="rgb(210,108,39)" fg:x="31104" fg:w="139"/><text x="28.8220%" y="607.50"></text></g><g><title>alloc::alloc::alloc (131 samples, 0.12%)</title><rect x="28.5793%" y="581" width="0.1203%" height="15" fill="rgb(205,23,29)" fg:x="31112" fg:w="131"/><text x="28.8293%" y="591.50"></text></g><g><title>__rg_alloc (131 samples, 0.12%)</title><rect x="28.5793%" y="565" width="0.1203%" height="15" fill="rgb(246,139,46)" fg:x="31112" fg:w="131"/><text x="28.8293%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (131 samples, 0.12%)</title><rect x="28.5793%" y="549" width="0.1203%" height="15" fill="rgb(250,81,26)" fg:x="31112" fg:w="131"/><text x="28.8293%" y="559.50"></text></g><g><title>rust_alloc (131 samples, 0.12%)</title><rect x="28.5793%" y="533" width="0.1203%" height="15" fill="rgb(214,104,7)" fg:x="31112" fg:w="131"/><text x="28.8293%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (13 samples, 0.01%)</title><rect x="28.8034%" y="677" width="0.0119%" height="15" fill="rgb(233,189,8)" fg:x="31356" fg:w="13"/><text x="29.0534%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.03%)</title><rect x="28.7860%" y="693" width="0.0349%" height="15" fill="rgb(228,141,17)" fg:x="31337" fg:w="38"/><text x="29.0360%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.05%)</title><rect x="28.7713%" y="709" width="0.0542%" height="15" fill="rgb(247,157,1)" fg:x="31321" fg:w="59"/><text x="29.0213%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (16 samples, 0.01%)</title><rect x="28.8255%" y="709" width="0.0147%" height="15" fill="rgb(249,225,5)" fg:x="31380" fg:w="16"/><text x="29.0755%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (16 samples, 0.01%)</title><rect x="28.8255%" y="693" width="0.0147%" height="15" fill="rgb(242,55,13)" fg:x="31380" fg:w="16"/><text x="29.0755%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (16 samples, 0.01%)</title><rect x="28.8255%" y="677" width="0.0147%" height="15" fill="rgb(230,49,50)" fg:x="31380" fg:w="16"/><text x="29.0755%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (13 samples, 0.01%)</title><rect x="28.8282%" y="661" width="0.0119%" height="15" fill="rgb(241,111,38)" fg:x="31383" fg:w="13"/><text x="29.0782%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (13 samples, 0.01%)</title><rect x="28.8282%" y="645" width="0.0119%" height="15" fill="rgb(252,155,4)" fg:x="31383" fg:w="13"/><text x="29.0782%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (13 samples, 0.01%)</title><rect x="28.8282%" y="629" width="0.0119%" height="15" fill="rgb(212,69,32)" fg:x="31383" fg:w="13"/><text x="29.0782%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (13 samples, 0.01%)</title><rect x="28.8282%" y="613" width="0.0119%" height="15" fill="rgb(243,107,47)" fg:x="31383" fg:w="13"/><text x="29.0782%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="28.8282%" y="597" width="0.0119%" height="15" fill="rgb(247,130,12)" fg:x="31383" fg:w="13"/><text x="29.0782%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (184 samples, 0.17%)</title><rect x="28.6996%" y="725" width="0.1690%" height="15" fill="rgb(233,74,16)" fg:x="31243" fg:w="184"/><text x="28.9496%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;,&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from::{{closure}}&gt;&gt; (31 samples, 0.03%)</title><rect x="28.8402%" y="709" width="0.0285%" height="15" fill="rgb(208,58,18)" fg:x="31396" fg:w="31"/><text x="29.0902%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (31 samples, 0.03%)</title><rect x="28.8402%" y="693" width="0.0285%" height="15" fill="rgb(242,225,1)" fg:x="31396" fg:w="31"/><text x="29.0902%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="28.8457%" y="677" width="0.0230%" height="15" fill="rgb(249,39,40)" fg:x="31402" fg:w="25"/><text x="29.0957%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (24 samples, 0.02%)</title><rect x="28.8466%" y="661" width="0.0220%" height="15" fill="rgb(207,72,44)" fg:x="31403" fg:w="24"/><text x="29.0966%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (15 samples, 0.01%)</title><rect x="28.8549%" y="645" width="0.0138%" height="15" fill="rgb(215,193,12)" fg:x="31412" fg:w="15"/><text x="29.1049%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (15 samples, 0.01%)</title><rect x="28.8549%" y="629" width="0.0138%" height="15" fill="rgb(248,41,39)" fg:x="31412" fg:w="15"/><text x="29.1049%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (15 samples, 0.01%)</title><rect x="28.8549%" y="613" width="0.0138%" height="15" fill="rgb(253,85,4)" fg:x="31412" fg:w="15"/><text x="29.1049%" y="623.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="28.8549%" y="597" width="0.0138%" height="15" fill="rgb(243,70,31)" fg:x="31412" fg:w="15"/><text x="29.1049%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (9,187 samples, 8.44%)</title><rect x="20.4396%" y="821" width="8.4391%" height="15" fill="rgb(253,195,26)" fg:x="22251" fg:w="9187"/><text x="20.6896%" y="831.50">tremor_runti..</text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (427 samples, 0.39%)</title><rect x="28.4865%" y="805" width="0.3922%" height="15" fill="rgb(243,42,11)" fg:x="31011" fg:w="427"/><text x="28.7365%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (427 samples, 0.39%)</title><rect x="28.4865%" y="789" width="0.3922%" height="15" fill="rgb(239,66,17)" fg:x="31011" fg:w="427"/><text x="28.7365%" y="799.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (427 samples, 0.39%)</title><rect x="28.4865%" y="773" width="0.3922%" height="15" fill="rgb(217,132,21)" fg:x="31011" fg:w="427"/><text x="28.7365%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (427 samples, 0.39%)</title><rect x="28.4865%" y="757" width="0.3922%" height="15" fill="rgb(252,202,21)" fg:x="31011" fg:w="427"/><text x="28.7365%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (427 samples, 0.39%)</title><rect x="28.4865%" y="741" width="0.3922%" height="15" fill="rgb(233,98,36)" fg:x="31011" fg:w="427"/><text x="28.7365%" y="751.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="28.8687%" y="725" width="0.0101%" height="15" fill="rgb(216,153,54)" fg:x="31427" fg:w="11"/><text x="29.1187%" y="735.50"></text></g><g><title>size_to_sizeclass (37 samples, 0.03%)</title><rect x="28.9835%" y="773" width="0.0340%" height="15" fill="rgb(250,99,7)" fg:x="31552" fg:w="37"/><text x="29.2335%" y="783.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="29.0074%" y="757" width="0.0101%" height="15" fill="rgb(207,56,50)" fg:x="31578" fg:w="11"/><text x="29.2574%" y="767.50"></text></g><g><title>rust_dealloc (22 samples, 0.02%)</title><rect x="29.0175%" y="709" width="0.0202%" height="15" fill="rgb(244,61,34)" fg:x="31589" fg:w="22"/><text x="29.2675%" y="719.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (11 samples, 0.01%)</title><rect x="29.1139%" y="677" width="0.0101%" height="15" fill="rgb(241,50,38)" fg:x="31694" fg:w="11"/><text x="29.3639%" y="687.50"></text></g><g><title> (11 samples, 0.01%)</title><rect x="29.1139%" y="661" width="0.0101%" height="15" fill="rgb(212,166,30)" fg:x="31694" fg:w="11"/><text x="29.3639%" y="671.50"></text></g><g><title>snmalloc::Remote::set_info (17 samples, 0.02%)</title><rect x="29.1240%" y="677" width="0.0156%" height="15" fill="rgb(249,127,32)" fg:x="31705" fg:w="17"/><text x="29.3740%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (106 samples, 0.10%)</title><rect x="29.0478%" y="709" width="0.0974%" height="15" fill="rgb(209,103,0)" fg:x="31622" fg:w="106"/><text x="29.2978%" y="719.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (85 samples, 0.08%)</title><rect x="29.0671%" y="693" width="0.0781%" height="15" fill="rgb(238,209,51)" fg:x="31643" fg:w="85"/><text x="29.3171%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (191 samples, 0.18%)</title><rect x="29.0175%" y="773" width="0.1755%" height="15" fill="rgb(237,56,23)" fg:x="31589" fg:w="191"/><text x="29.2675%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (191 samples, 0.18%)</title><rect x="29.0175%" y="757" width="0.1755%" height="15" fill="rgb(215,153,46)" fg:x="31589" fg:w="191"/><text x="29.2675%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (191 samples, 0.18%)</title><rect x="29.0175%" y="741" width="0.1755%" height="15" fill="rgb(224,49,31)" fg:x="31589" fg:w="191"/><text x="29.2675%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (191 samples, 0.18%)</title><rect x="29.0175%" y="725" width="0.1755%" height="15" fill="rgb(250,18,42)" fg:x="31589" fg:w="191"/><text x="29.2675%" y="735.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (42 samples, 0.04%)</title><rect x="29.1543%" y="709" width="0.0386%" height="15" fill="rgb(215,176,39)" fg:x="31738" fg:w="42"/><text x="29.4043%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (240 samples, 0.22%)</title><rect x="28.9807%" y="789" width="0.2205%" height="15" fill="rgb(223,77,29)" fg:x="31549" fg:w="240"/><text x="29.2307%" y="799.50"></text></g><g><title>rust_dealloc (266 samples, 0.24%)</title><rect x="28.9771%" y="805" width="0.2443%" height="15" fill="rgb(234,94,52)" fg:x="31545" fg:w="266"/><text x="29.2271%" y="815.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (22 samples, 0.02%)</title><rect x="29.2012%" y="789" width="0.0202%" height="15" fill="rgb(220,154,50)" fg:x="31789" fg:w="22"/><text x="29.4512%" y="799.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (35 samples, 0.03%)</title><rect x="29.2297%" y="757" width="0.0322%" height="15" fill="rgb(212,11,10)" fg:x="31820" fg:w="35"/><text x="29.4797%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (27 samples, 0.02%)</title><rect x="29.2370%" y="741" width="0.0248%" height="15" fill="rgb(205,166,19)" fg:x="31828" fg:w="27"/><text x="29.4870%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (27 samples, 0.02%)</title><rect x="29.2370%" y="725" width="0.0248%" height="15" fill="rgb(244,198,16)" fg:x="31828" fg:w="27"/><text x="29.4870%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (27 samples, 0.02%)</title><rect x="29.2370%" y="709" width="0.0248%" height="15" fill="rgb(219,69,12)" fg:x="31828" fg:w="27"/><text x="29.4870%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (45 samples, 0.04%)</title><rect x="29.2214%" y="789" width="0.0413%" height="15" fill="rgb(245,30,7)" fg:x="31811" fg:w="45"/><text x="29.4714%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (45 samples, 0.04%)</title><rect x="29.2214%" y="773" width="0.0413%" height="15" fill="rgb(218,221,48)" fg:x="31811" fg:w="45"/><text x="29.4714%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (421 samples, 0.39%)</title><rect x="28.8788%" y="821" width="0.3867%" height="15" fill="rgb(216,66,15)" fg:x="31438" fg:w="421"/><text x="29.1288%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (48 samples, 0.04%)</title><rect x="29.2214%" y="805" width="0.0441%" height="15" fill="rgb(226,122,50)" fg:x="31811" fg:w="48"/><text x="29.4714%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.02%)</title><rect x="30.0555%" y="805" width="0.0248%" height="15" fill="rgb(239,156,16)" fg:x="32719" fg:w="27"/><text x="30.3055%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="30.2153%" y="789" width="0.0138%" height="15" fill="rgb(224,27,38)" fg:x="32893" fg:w="15"/><text x="30.4653%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (529 samples, 0.49%)</title><rect x="30.4817%" y="773" width="0.4859%" height="15" fill="rgb(224,39,27)" fg:x="33183" fg:w="529"/><text x="30.7317%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (412 samples, 0.38%)</title><rect x="30.9676%" y="773" width="0.3785%" height="15" fill="rgb(215,92,29)" fg:x="33712" fg:w="412"/><text x="31.2176%" y="783.50"></text></g><g><title>core::ptr::write (388 samples, 0.36%)</title><rect x="30.9897%" y="757" width="0.3564%" height="15" fill="rgb(207,159,16)" fg:x="33736" fg:w="388"/><text x="31.2397%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (386 samples, 0.35%)</title><rect x="30.9915%" y="741" width="0.3546%" height="15" fill="rgb(238,163,47)" fg:x="33738" fg:w="386"/><text x="31.2415%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (48 samples, 0.04%)</title><rect x="31.3461%" y="773" width="0.0441%" height="15" fill="rgb(219,91,49)" fg:x="34124" fg:w="48"/><text x="31.5961%" y="783.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (18 samples, 0.02%)</title><rect x="31.4141%" y="725" width="0.0165%" height="15" fill="rgb(227,167,31)" fg:x="34198" fg:w="18"/><text x="31.6641%" y="735.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (19 samples, 0.02%)</title><rect x="31.4141%" y="741" width="0.0175%" height="15" fill="rgb(234,80,54)" fg:x="34198" fg:w="19"/><text x="31.6641%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (702 samples, 0.64%)</title><rect x="31.4334%" y="677" width="0.6449%" height="15" fill="rgb(212,114,2)" fg:x="34219" fg:w="702"/><text x="31.6834%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (587 samples, 0.54%)</title><rect x="31.5390%" y="661" width="0.5392%" height="15" fill="rgb(234,50,24)" fg:x="34334" fg:w="587"/><text x="31.7890%" y="671.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (731 samples, 0.67%)</title><rect x="31.4141%" y="757" width="0.6715%" height="15" fill="rgb(221,68,8)" fg:x="34198" fg:w="731"/><text x="31.6641%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (710 samples, 0.65%)</title><rect x="31.4334%" y="741" width="0.6522%" height="15" fill="rgb(254,180,31)" fg:x="34219" fg:w="710"/><text x="31.6834%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (710 samples, 0.65%)</title><rect x="31.4334%" y="725" width="0.6522%" height="15" fill="rgb(247,130,50)" fg:x="34219" fg:w="710"/><text x="31.6834%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (710 samples, 0.65%)</title><rect x="31.4334%" y="709" width="0.6522%" height="15" fill="rgb(211,109,4)" fg:x="34219" fg:w="710"/><text x="31.6834%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (710 samples, 0.65%)</title><rect x="31.4334%" y="693" width="0.6522%" height="15" fill="rgb(238,50,21)" fg:x="34219" fg:w="710"/><text x="31.6834%" y="703.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (779 samples, 0.72%)</title><rect x="31.3902%" y="773" width="0.7156%" height="15" fill="rgb(225,57,45)" fg:x="34172" fg:w="779"/><text x="31.6402%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (22 samples, 0.02%)</title><rect x="32.0856%" y="757" width="0.0202%" height="15" fill="rgb(209,196,50)" fg:x="34929" fg:w="22"/><text x="32.3356%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="32.7644%" y="741" width="0.0322%" height="15" fill="rgb(242,140,13)" fg:x="35668" fg:w="35"/><text x="33.0144%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (18 samples, 0.02%)</title><rect x="32.7993%" y="741" width="0.0165%" height="15" fill="rgb(217,111,7)" fg:x="35706" fg:w="18"/><text x="33.0493%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (384 samples, 0.35%)</title><rect x="32.8159%" y="741" width="0.3527%" height="15" fill="rgb(253,193,51)" fg:x="35724" fg:w="384"/><text x="33.0659%" y="751.50"></text></g><g><title>core::ptr::write (377 samples, 0.35%)</title><rect x="32.8223%" y="725" width="0.3463%" height="15" fill="rgb(252,70,29)" fg:x="35731" fg:w="377"/><text x="33.0723%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (371 samples, 0.34%)</title><rect x="32.8278%" y="709" width="0.3408%" height="15" fill="rgb(232,127,12)" fg:x="35737" fg:w="371"/><text x="33.0778%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,147 samples, 1.05%)</title><rect x="32.1196%" y="757" width="1.0536%" height="15" fill="rgb(211,180,21)" fg:x="34966" fg:w="1147"/><text x="32.3696%" y="767.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,169 samples, 1.07%)</title><rect x="32.1058%" y="773" width="1.0738%" height="15" fill="rgb(229,72,13)" fg:x="34951" fg:w="1169"/><text x="32.3558%" y="783.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,228 samples, 2.97%)</title><rect x="30.2291%" y="789" width="2.9652%" height="15" fill="rgb(240,211,49)" fg:x="32908" fg:w="3228"/><text x="30.4791%" y="799.50">tre..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (16 samples, 0.01%)</title><rect x="33.1796%" y="773" width="0.0147%" height="15" fill="rgb(219,149,40)" fg:x="36120" fg:w="16"/><text x="33.4296%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (120 samples, 0.11%)</title><rect x="33.1943%" y="789" width="0.1102%" height="15" fill="rgb(210,127,46)" fg:x="36136" fg:w="120"/><text x="33.4443%" y="799.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (34 samples, 0.03%)</title><rect x="33.3046%" y="789" width="0.0312%" height="15" fill="rgb(220,106,7)" fg:x="36256" fg:w="34"/><text x="33.5546%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,544 samples, 3.26%)</title><rect x="30.0821%" y="805" width="3.2555%" height="15" fill="rgb(249,31,22)" fg:x="32748" fg:w="3544"/><text x="30.3321%" y="815.50">&lt;co..</text></g><g><title>__memcpy_avx_unaligned_erms (1,347 samples, 1.24%)</title><rect x="33.3376%" y="805" width="1.2373%" height="15" fill="rgb(253,1,49)" fg:x="36292" fg:w="1347"/><text x="33.5876%" y="815.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="34.5777%" y="789" width="0.0230%" height="15" fill="rgb(227,144,33)" fg:x="37642" fg:w="25"/><text x="34.8277%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (27 samples, 0.02%)</title><rect x="34.5777%" y="805" width="0.0248%" height="15" fill="rgb(249,163,44)" fg:x="37642" fg:w="27"/><text x="34.8277%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="34.6080%" y="805" width="0.0101%" height="15" fill="rgb(234,15,39)" fg:x="37675" fg:w="11"/><text x="34.8580%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (11 samples, 0.01%)</title><rect x="34.6080%" y="789" width="0.0101%" height="15" fill="rgb(207,66,16)" fg:x="37675" fg:w="11"/><text x="34.8580%" y="799.50"></text></g><g><title>async_global_executor::reactor::block_on (15,446 samples, 14.19%)</title><rect x="20.4396%" y="1157" width="14.1886%" height="15" fill="rgb(233,112,24)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="1167.50">async_global_executor:..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (15,446 samples, 14.19%)</title><rect x="20.4396%" y="1141" width="14.1886%" height="15" fill="rgb(230,90,22)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="1151.50">async_global_executor:..</text></g><g><title>async_io::driver::block_on (15,446 samples, 14.19%)</title><rect x="20.4396%" y="1125" width="14.1886%" height="15" fill="rgb(229,61,13)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="1135.50">async_io::driver::bloc..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (15,446 samples, 14.19%)</title><rect x="20.4396%" y="1109" width="14.1886%" height="15" fill="rgb(225,57,24)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="1119.50">&lt;futures_lite::future:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,446 samples, 14.19%)</title><rect x="20.4396%" y="1093" width="14.1886%" height="15" fill="rgb(208,169,48)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="1103.50">&lt;core::future::from_ge..</text></g><g><title>async_executor::Executor::run::{{closure}} (15,446 samples, 14.19%)</title><rect x="20.4396%" y="1077" width="14.1886%" height="15" fill="rgb(244,218,51)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="1087.50">async_executor::Execut..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (15,446 samples, 14.19%)</title><rect x="20.4396%" y="1061" width="14.1886%" height="15" fill="rgb(214,148,10)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="1071.50">&lt;futures_lite::future:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,446 samples, 14.19%)</title><rect x="20.4396%" y="1045" width="14.1886%" height="15" fill="rgb(225,174,27)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="1055.50">&lt;core::future::from_ge..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (15,446 samples, 14.19%)</title><rect x="20.4396%" y="1029" width="14.1886%" height="15" fill="rgb(230,96,26)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="1039.50">async_executor::Execut..</text></g><g><title>async_task::runnable::Runnable::run (15,446 samples, 14.19%)</title><rect x="20.4396%" y="1013" width="14.1886%" height="15" fill="rgb(232,10,30)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="1023.50">async_task::runnable::..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (15,446 samples, 14.19%)</title><rect x="20.4396%" y="997" width="14.1886%" height="15" fill="rgb(222,8,50)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="1007.50">async_task::raw::RawTa..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15,446 samples, 14.19%)</title><rect x="20.4396%" y="981" width="14.1886%" height="15" fill="rgb(213,81,27)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="991.50">&lt;core::pin::Pin&lt;P&gt; as ..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,446 samples, 14.19%)</title><rect x="20.4396%" y="965" width="14.1886%" height="15" fill="rgb(245,50,10)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="975.50">&lt;core::future::from_ge..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (15,446 samples, 14.19%)</title><rect x="20.4396%" y="949" width="14.1886%" height="15" fill="rgb(216,100,18)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="959.50">async_executor::Execut..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (15,446 samples, 14.19%)</title><rect x="20.4396%" y="933" width="14.1886%" height="15" fill="rgb(236,147,54)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="943.50">&lt;async_std::task::buil..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (15,446 samples, 14.19%)</title><rect x="20.4396%" y="917" width="14.1886%" height="15" fill="rgb(205,143,26)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="927.50">async_std::task::task_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15,446 samples, 14.19%)</title><rect x="20.4396%" y="901" width="14.1886%" height="15" fill="rgb(236,26,9)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="911.50">std::thread::local::Lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15,446 samples, 14.19%)</title><rect x="20.4396%" y="885" width="14.1886%" height="15" fill="rgb(221,165,53)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="895.50">std::thread::local::Lo..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (15,446 samples, 14.19%)</title><rect x="20.4396%" y="869" width="14.1886%" height="15" fill="rgb(214,110,17)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="879.50">async_std::task::task_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (15,446 samples, 14.19%)</title><rect x="20.4396%" y="853" width="14.1886%" height="15" fill="rgb(237,197,12)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="863.50">&lt;async_std::task::buil..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,446 samples, 14.19%)</title><rect x="20.4396%" y="837" width="14.1886%" height="15" fill="rgb(205,84,17)" fg:x="22251" fg:w="15446"/><text x="20.6896%" y="847.50">&lt;core::future::from_ge..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,838 samples, 5.36%)</title><rect x="29.2655%" y="821" width="5.3628%" height="15" fill="rgb(237,18,45)" fg:x="31859" fg:w="5838"/><text x="29.5155%" y="831.50">tremor_..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (19 samples, 0.02%)</title><rect x="34.6282%" y="693" width="0.0175%" height="15" fill="rgb(221,87,14)" fg:x="37697" fg:w="19"/><text x="34.8782%" y="703.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (50 samples, 0.05%)</title><rect x="36.2128%" y="597" width="0.0459%" height="15" fill="rgb(238,186,15)" fg:x="39422" fg:w="50"/><text x="36.4628%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 0.03%)</title><rect x="36.2275%" y="581" width="0.0312%" height="15" fill="rgb(208,115,11)" fg:x="39438" fg:w="34"/><text x="36.4775%" y="591.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (855 samples, 0.79%)</title><rect x="35.9437%" y="629" width="0.7854%" height="15" fill="rgb(254,175,0)" fg:x="39129" fg:w="855"/><text x="36.1937%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (607 samples, 0.56%)</title><rect x="36.1715%" y="613" width="0.5576%" height="15" fill="rgb(227,24,42)" fg:x="39377" fg:w="607"/><text x="36.4215%" y="623.50"></text></g><g><title>&lt;tremor_script::pdk::PdkEventPayload as core::convert::From&lt;tremor_script::srs::EventPayload&gt;&gt;::from (512 samples, 0.47%)</title><rect x="36.2587%" y="597" width="0.4703%" height="15" fill="rgb(223,211,37)" fg:x="39472" fg:w="512"/><text x="36.5087%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (129 samples, 0.12%)</title><rect x="36.6106%" y="581" width="0.1185%" height="15" fill="rgb(235,49,27)" fg:x="39855" fg:w="129"/><text x="36.8606%" y="591.50"></text></g><g><title>&lt;tremor_script::pdk::PdkValueAndMeta as core::convert::From&lt;tremor_script::srs::ValueAndMeta&gt;&gt;::from (115 samples, 0.11%)</title><rect x="36.6234%" y="565" width="0.1056%" height="15" fill="rgb(254,97,51)" fg:x="39869" fg:w="115"/><text x="36.8734%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (33 samples, 0.03%)</title><rect x="36.6988%" y="549" width="0.0303%" height="15" fill="rgb(249,51,40)" fg:x="39951" fg:w="33"/><text x="36.9488%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (281 samples, 0.26%)</title><rect x="36.7291%" y="629" width="0.2581%" height="15" fill="rgb(210,128,45)" fg:x="39984" fg:w="281"/><text x="36.9791%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,200 samples, 1.10%)</title><rect x="35.9363%" y="645" width="1.1023%" height="15" fill="rgb(224,137,50)" fg:x="39121" fg:w="1200"/><text x="36.1863%" y="655.50"></text></g><g><title>abi_stable::std_types::result::&lt;impl core::convert::From&lt;abi_stable::std_types::result::RResult&lt;T,E&gt;&gt; for core::result::Result&lt;T,E&gt;&gt;::from (56 samples, 0.05%)</title><rect x="36.9872%" y="629" width="0.0514%" height="15" fill="rgb(242,15,9)" fg:x="40265" fg:w="56"/><text x="37.2372%" y="639.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (155 samples, 0.14%)</title><rect x="37.0386%" y="613" width="0.1424%" height="15" fill="rgb(233,187,41)" fg:x="40321" fg:w="155"/><text x="37.2886%" y="623.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (149 samples, 0.14%)</title><rect x="37.0441%" y="597" width="0.1369%" height="15" fill="rgb(227,2,29)" fg:x="40327" fg:w="149"/><text x="37.2941%" y="607.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (149 samples, 0.14%)</title><rect x="37.0441%" y="581" width="0.1369%" height="15" fill="rgb(222,70,3)" fg:x="40327" fg:w="149"/><text x="37.2941%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (42 samples, 0.04%)</title><rect x="37.2058%" y="565" width="0.0386%" height="15" fill="rgb(213,11,42)" fg:x="40503" fg:w="42"/><text x="37.4558%" y="575.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (42 samples, 0.04%)</title><rect x="37.2058%" y="549" width="0.0386%" height="15" fill="rgb(225,150,9)" fg:x="40503" fg:w="42"/><text x="37.4558%" y="559.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (42 samples, 0.04%)</title><rect x="37.2058%" y="533" width="0.0386%" height="15" fill="rgb(230,162,45)" fg:x="40503" fg:w="42"/><text x="37.4558%" y="543.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34 samples, 0.03%)</title><rect x="37.2444%" y="517" width="0.0312%" height="15" fill="rgb(222,14,52)" fg:x="40545" fg:w="34"/><text x="37.4944%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (34 samples, 0.03%)</title><rect x="37.2444%" y="501" width="0.0312%" height="15" fill="rgb(254,198,14)" fg:x="40545" fg:w="34"/><text x="37.4944%" y="511.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (34 samples, 0.03%)</title><rect x="37.2444%" y="485" width="0.0312%" height="15" fill="rgb(220,217,30)" fg:x="40545" fg:w="34"/><text x="37.4944%" y="495.50"></text></g><g><title>async_ffi::FfiContext::with_context (24 samples, 0.02%)</title><rect x="37.2536%" y="469" width="0.0220%" height="15" fill="rgb(215,146,41)" fg:x="40555" fg:w="24"/><text x="37.5036%" y="479.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (826 samples, 0.76%)</title><rect x="37.1911%" y="597" width="0.7588%" height="15" fill="rgb(217,27,36)" fg:x="40487" fg:w="826"/><text x="37.4411%" y="607.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (819 samples, 0.75%)</title><rect x="37.1976%" y="581" width="0.7523%" height="15" fill="rgb(219,218,39)" fg:x="40494" fg:w="819"/><text x="37.4476%" y="591.50"></text></g><g><title>std::panic::catch_unwind (768 samples, 0.71%)</title><rect x="37.2444%" y="565" width="0.7055%" height="15" fill="rgb(219,4,42)" fg:x="40545" fg:w="768"/><text x="37.4944%" y="575.50"></text></g><g><title>std::panicking::try (768 samples, 0.71%)</title><rect x="37.2444%" y="549" width="0.7055%" height="15" fill="rgb(249,119,36)" fg:x="40545" fg:w="768"/><text x="37.4944%" y="559.50"></text></g><g><title>std::panicking::try::do_call (768 samples, 0.71%)</title><rect x="37.2444%" y="533" width="0.7055%" height="15" fill="rgb(209,23,33)" fg:x="40545" fg:w="768"/><text x="37.4944%" y="543.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (734 samples, 0.67%)</title><rect x="37.2756%" y="517" width="0.6742%" height="15" fill="rgb(211,10,0)" fg:x="40579" fg:w="734"/><text x="37.5256%" y="527.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (847 samples, 0.78%)</title><rect x="37.1810%" y="613" width="0.7780%" height="15" fill="rgb(208,99,37)" fg:x="40476" fg:w="847"/><text x="37.4310%" y="623.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,172 samples, 1.08%)</title><rect x="37.0386%" y="645" width="1.0766%" height="15" fill="rgb(213,132,31)" fg:x="40321" fg:w="1172"/><text x="37.2886%" y="655.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,172 samples, 1.08%)</title><rect x="37.0386%" y="629" width="1.0766%" height="15" fill="rgb(243,129,40)" fg:x="40321" fg:w="1172"/><text x="37.2886%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (170 samples, 0.16%)</title><rect x="37.9591%" y="613" width="0.1562%" height="15" fill="rgb(210,66,33)" fg:x="41323" fg:w="170"/><text x="38.2091%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (234 samples, 0.21%)</title><rect x="38.1152%" y="645" width="0.2150%" height="15" fill="rgb(209,189,4)" fg:x="41493" fg:w="234"/><text x="38.3652%" y="655.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (41 samples, 0.04%)</title><rect x="38.3302%" y="645" width="0.0377%" height="15" fill="rgb(214,107,37)" fg:x="41727" fg:w="41"/><text x="38.5802%" y="655.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (15 samples, 0.01%)</title><rect x="38.3678%" y="597" width="0.0138%" height="15" fill="rgb(245,88,54)" fg:x="41768" fg:w="15"/><text x="38.6178%" y="607.50"></text></g><g><title>async_ffi::DropBomb::with (15 samples, 0.01%)</title><rect x="38.3678%" y="581" width="0.0138%" height="15" fill="rgb(205,146,20)" fg:x="41768" fg:w="15"/><text x="38.6178%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (33 samples, 0.03%)</title><rect x="38.3963%" y="501" width="0.0303%" height="15" fill="rgb(220,161,25)" fg:x="41799" fg:w="33"/><text x="38.6463%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (33 samples, 0.03%)</title><rect x="38.3963%" y="485" width="0.0303%" height="15" fill="rgb(215,152,15)" fg:x="41799" fg:w="33"/><text x="38.6463%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (33 samples, 0.03%)</title><rect x="38.3963%" y="469" width="0.0303%" height="15" fill="rgb(233,192,44)" fg:x="41799" fg:w="33"/><text x="38.6463%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (43 samples, 0.04%)</title><rect x="38.3890%" y="533" width="0.0395%" height="15" fill="rgb(240,170,46)" fg:x="41791" fg:w="43"/><text x="38.6390%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (43 samples, 0.04%)</title><rect x="38.3890%" y="517" width="0.0395%" height="15" fill="rgb(207,104,33)" fg:x="41791" fg:w="43"/><text x="38.6390%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (53 samples, 0.05%)</title><rect x="38.3890%" y="565" width="0.0487%" height="15" fill="rgb(219,21,39)" fg:x="41791" fg:w="53"/><text x="38.6390%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (53 samples, 0.05%)</title><rect x="38.3890%" y="549" width="0.0487%" height="15" fill="rgb(214,133,29)" fg:x="41791" fg:w="53"/><text x="38.6390%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (61 samples, 0.06%)</title><rect x="38.3890%" y="581" width="0.0560%" height="15" fill="rgb(226,93,6)" fg:x="41791" fg:w="61"/><text x="38.6390%" y="591.50"></text></g><g><title>rust_dealloc (78 samples, 0.07%)</title><rect x="38.3816%" y="597" width="0.0717%" height="15" fill="rgb(252,222,34)" fg:x="41783" fg:w="78"/><text x="38.6316%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (106 samples, 0.10%)</title><rect x="38.3678%" y="645" width="0.0974%" height="15" fill="rgb(252,92,48)" fg:x="41768" fg:w="106"/><text x="38.6178%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (106 samples, 0.10%)</title><rect x="38.3678%" y="629" width="0.0974%" height="15" fill="rgb(245,223,24)" fg:x="41768" fg:w="106"/><text x="38.6178%" y="639.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 0.10%)</title><rect x="38.3678%" y="613" width="0.0974%" height="15" fill="rgb(205,176,3)" fg:x="41768" fg:w="106"/><text x="38.6178%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (13 samples, 0.01%)</title><rect x="38.4533%" y="597" width="0.0119%" height="15" fill="rgb(235,151,15)" fg:x="41861" fg:w="13"/><text x="38.7033%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (325 samples, 0.30%)</title><rect x="38.8446%" y="629" width="0.2985%" height="15" fill="rgb(237,209,11)" fg:x="42287" fg:w="325"/><text x="39.0946%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (198 samples, 0.18%)</title><rect x="39.1836%" y="533" width="0.1819%" height="15" fill="rgb(243,227,24)" fg:x="42656" fg:w="198"/><text x="39.4336%" y="543.50"></text></g><g><title>aligned_size (17 samples, 0.02%)</title><rect x="39.3709%" y="421" width="0.0156%" height="15" fill="rgb(239,193,16)" fg:x="42860" fg:w="17"/><text x="39.6209%" y="431.50"></text></g><g><title>rust_alloc (22 samples, 0.02%)</title><rect x="39.3875%" y="389" width="0.0202%" height="15" fill="rgb(231,27,9)" fg:x="42878" fg:w="22"/><text x="39.6375%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (11 samples, 0.01%)</title><rect x="39.4104%" y="373" width="0.0101%" height="15" fill="rgb(219,169,10)" fg:x="42903" fg:w="11"/><text x="39.6604%" y="383.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (11 samples, 0.01%)</title><rect x="39.4104%" y="357" width="0.0101%" height="15" fill="rgb(244,229,43)" fg:x="42903" fg:w="11"/><text x="39.6604%" y="367.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (11 samples, 0.01%)</title><rect x="39.4104%" y="341" width="0.0101%" height="15" fill="rgb(254,38,20)" fg:x="42903" fg:w="11"/><text x="39.6604%" y="351.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="39.4104%" y="325" width="0.0101%" height="15" fill="rgb(250,47,30)" fg:x="42903" fg:w="11"/><text x="39.6604%" y="335.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="39.4104%" y="309" width="0.0101%" height="15" fill="rgb(224,124,36)" fg:x="42903" fg:w="11"/><text x="39.6604%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="39.4233%" y="325" width="0.0119%" height="15" fill="rgb(246,68,51)" fg:x="42917" fg:w="13"/><text x="39.6733%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (21 samples, 0.02%)</title><rect x="39.4206%" y="341" width="0.0193%" height="15" fill="rgb(253,43,49)" fg:x="42914" fg:w="21"/><text x="39.6706%" y="351.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (13 samples, 0.01%)</title><rect x="39.4490%" y="325" width="0.0119%" height="15" fill="rgb(219,54,36)" fg:x="42945" fg:w="13"/><text x="39.6990%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (135 samples, 0.12%)</title><rect x="39.4206%" y="373" width="0.1240%" height="15" fill="rgb(227,133,34)" fg:x="42914" fg:w="135"/><text x="39.6706%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (135 samples, 0.12%)</title><rect x="39.4206%" y="357" width="0.1240%" height="15" fill="rgb(247,227,15)" fg:x="42914" fg:w="135"/><text x="39.6706%" y="367.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (114 samples, 0.10%)</title><rect x="39.4398%" y="341" width="0.1047%" height="15" fill="rgb(229,96,14)" fg:x="42935" fg:w="114"/><text x="39.6898%" y="351.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (91 samples, 0.08%)</title><rect x="39.4610%" y="325" width="0.0836%" height="15" fill="rgb(220,79,17)" fg:x="42958" fg:w="91"/><text x="39.7110%" y="335.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (91 samples, 0.08%)</title><rect x="39.4610%" y="309" width="0.0836%" height="15" fill="rgb(205,131,53)" fg:x="42958" fg:w="91"/><text x="39.7110%" y="319.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (91 samples, 0.08%)</title><rect x="39.4610%" y="293" width="0.0836%" height="15" fill="rgb(209,50,29)" fg:x="42958" fg:w="91"/><text x="39.7110%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="39.5639%" y="325" width="0.0101%" height="15" fill="rgb(245,86,46)" fg:x="43070" fg:w="11"/><text x="39.8139%" y="335.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (11 samples, 0.01%)</title><rect x="39.5639%" y="309" width="0.0101%" height="15" fill="rgb(235,66,46)" fg:x="43070" fg:w="11"/><text x="39.8139%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.02%)</title><rect x="39.5501%" y="373" width="0.0248%" height="15" fill="rgb(232,148,31)" fg:x="43055" fg:w="27"/><text x="39.8001%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="39.5519%" y="357" width="0.0230%" height="15" fill="rgb(217,149,8)" fg:x="43057" fg:w="25"/><text x="39.8019%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="39.5537%" y="341" width="0.0211%" height="15" fill="rgb(209,183,11)" fg:x="43059" fg:w="23"/><text x="39.8037%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (38 samples, 0.03%)</title><rect x="39.5749%" y="373" width="0.0349%" height="15" fill="rgb(208,55,20)" fg:x="43082" fg:w="38"/><text x="39.8249%" y="383.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (38 samples, 0.03%)</title><rect x="39.5749%" y="357" width="0.0349%" height="15" fill="rgb(218,39,14)" fg:x="43082" fg:w="38"/><text x="39.8249%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (403 samples, 0.37%)</title><rect x="39.3875%" y="421" width="0.3702%" height="15" fill="rgb(216,169,33)" fg:x="42878" fg:w="403"/><text x="39.6375%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (403 samples, 0.37%)</title><rect x="39.3875%" y="405" width="0.3702%" height="15" fill="rgb(233,80,24)" fg:x="42878" fg:w="403"/><text x="39.6375%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (381 samples, 0.35%)</title><rect x="39.4077%" y="389" width="0.3500%" height="15" fill="rgb(213,179,31)" fg:x="42900" fg:w="381"/><text x="39.6577%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::take (161 samples, 0.15%)</title><rect x="39.6098%" y="373" width="0.1479%" height="15" fill="rgb(209,19,5)" fg:x="43120" fg:w="161"/><text x="39.8598%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (161 samples, 0.15%)</title><rect x="39.6098%" y="357" width="0.1479%" height="15" fill="rgb(219,18,35)" fg:x="43120" fg:w="161"/><text x="39.8598%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (650 samples, 0.60%)</title><rect x="39.1643%" y="549" width="0.5971%" height="15" fill="rgb(209,169,16)" fg:x="42635" fg:w="650"/><text x="39.4143%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (431 samples, 0.40%)</title><rect x="39.3654%" y="533" width="0.3959%" height="15" fill="rgb(245,90,51)" fg:x="42854" fg:w="431"/><text x="39.6154%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (431 samples, 0.40%)</title><rect x="39.3654%" y="517" width="0.3959%" height="15" fill="rgb(220,99,45)" fg:x="42854" fg:w="431"/><text x="39.6154%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (431 samples, 0.40%)</title><rect x="39.3654%" y="501" width="0.3959%" height="15" fill="rgb(249,89,25)" fg:x="42854" fg:w="431"/><text x="39.6154%" y="511.50"></text></g><g><title>alloc::alloc::alloc (431 samples, 0.40%)</title><rect x="39.3654%" y="485" width="0.3959%" height="15" fill="rgb(239,193,0)" fg:x="42854" fg:w="431"/><text x="39.6154%" y="495.50"></text></g><g><title>__rg_alloc (431 samples, 0.40%)</title><rect x="39.3654%" y="469" width="0.3959%" height="15" fill="rgb(231,126,1)" fg:x="42854" fg:w="431"/><text x="39.6154%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (431 samples, 0.40%)</title><rect x="39.3654%" y="453" width="0.3959%" height="15" fill="rgb(243,166,3)" fg:x="42854" fg:w="431"/><text x="39.6154%" y="463.50"></text></g><g><title>rust_alloc (425 samples, 0.39%)</title><rect x="39.3709%" y="437" width="0.3904%" height="15" fill="rgb(223,22,34)" fg:x="42860" fg:w="425"/><text x="39.6209%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (676 samples, 0.62%)</title><rect x="39.1486%" y="629" width="0.6210%" height="15" fill="rgb(251,52,51)" fg:x="42618" fg:w="676"/><text x="39.3986%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (659 samples, 0.61%)</title><rect x="39.1643%" y="613" width="0.6054%" height="15" fill="rgb(221,165,28)" fg:x="42635" fg:w="659"/><text x="39.4143%" y="623.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (659 samples, 0.61%)</title><rect x="39.1643%" y="597" width="0.6054%" height="15" fill="rgb(218,121,47)" fg:x="42635" fg:w="659"/><text x="39.4143%" y="607.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (659 samples, 0.61%)</title><rect x="39.1643%" y="581" width="0.6054%" height="15" fill="rgb(209,120,9)" fg:x="42635" fg:w="659"/><text x="39.4143%" y="591.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (659 samples, 0.61%)</title><rect x="39.1643%" y="565" width="0.6054%" height="15" fill="rgb(236,68,12)" fg:x="42635" fg:w="659"/><text x="39.4143%" y="575.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (5,033 samples, 4.62%)</title><rect x="35.2024%" y="661" width="4.6233%" height="15" fill="rgb(225,194,26)" fg:x="38322" fg:w="5033"/><text x="35.4524%" y="671.50">tremo..</text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (1,481 samples, 1.36%)</title><rect x="38.4652%" y="645" width="1.3604%" height="15" fill="rgb(231,84,39)" fg:x="41874" fg:w="1481"/><text x="38.7152%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::_::&lt;impl tremor_runtime::connectors::sink::RawSink_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::on_event (55 samples, 0.05%)</title><rect x="39.7751%" y="629" width="0.0505%" height="15" fill="rgb(210,11,45)" fg:x="43300" fg:w="55"/><text x="40.0251%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (27 samples, 0.02%)</title><rect x="39.9993%" y="629" width="0.0248%" height="15" fill="rgb(224,54,52)" fg:x="43544" fg:w="27"/><text x="40.2493%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (27 samples, 0.02%)</title><rect x="39.9993%" y="613" width="0.0248%" height="15" fill="rgb(238,102,14)" fg:x="43544" fg:w="27"/><text x="40.2493%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (27 samples, 0.02%)</title><rect x="39.9993%" y="597" width="0.0248%" height="15" fill="rgb(243,160,52)" fg:x="43544" fg:w="27"/><text x="40.2493%" y="607.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (12 samples, 0.01%)</title><rect x="40.0130%" y="581" width="0.0110%" height="15" fill="rgb(216,114,19)" fg:x="43559" fg:w="12"/><text x="40.2630%" y="591.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (12 samples, 0.01%)</title><rect x="40.0130%" y="565" width="0.0110%" height="15" fill="rgb(244,166,37)" fg:x="43559" fg:w="12"/><text x="40.2630%" y="575.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (33 samples, 0.03%)</title><rect x="40.0323%" y="565" width="0.0303%" height="15" fill="rgb(246,29,44)" fg:x="43580" fg:w="33"/><text x="40.2823%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="40.0507%" y="549" width="0.0119%" height="15" fill="rgb(215,56,53)" fg:x="43600" fg:w="13"/><text x="40.3007%" y="559.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="40.0507%" y="533" width="0.0119%" height="15" fill="rgb(217,60,2)" fg:x="43600" fg:w="13"/><text x="40.3007%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="40.0507%" y="517" width="0.0119%" height="15" fill="rgb(207,26,24)" fg:x="43600" fg:w="13"/><text x="40.3007%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="40.0507%" y="501" width="0.0119%" height="15" fill="rgb(252,210,15)" fg:x="43600" fg:w="13"/><text x="40.3007%" y="511.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="40.0507%" y="485" width="0.0119%" height="15" fill="rgb(253,209,26)" fg:x="43600" fg:w="13"/><text x="40.3007%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="40.0507%" y="469" width="0.0119%" height="15" fill="rgb(238,170,14)" fg:x="43600" fg:w="13"/><text x="40.3007%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (28 samples, 0.03%)</title><rect x="40.1113%" y="421" width="0.0257%" height="15" fill="rgb(216,178,15)" fg:x="43666" fg:w="28"/><text x="40.3613%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (25 samples, 0.02%)</title><rect x="40.1141%" y="405" width="0.0230%" height="15" fill="rgb(250,197,2)" fg:x="43669" fg:w="25"/><text x="40.3641%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (54 samples, 0.05%)</title><rect x="40.0966%" y="469" width="0.0496%" height="15" fill="rgb(212,70,42)" fg:x="43650" fg:w="54"/><text x="40.3466%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (54 samples, 0.05%)</title><rect x="40.0966%" y="453" width="0.0496%" height="15" fill="rgb(227,213,9)" fg:x="43650" fg:w="54"/><text x="40.3466%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (54 samples, 0.05%)</title><rect x="40.0966%" y="437" width="0.0496%" height="15" fill="rgb(245,99,25)" fg:x="43650" fg:w="54"/><text x="40.3466%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (75 samples, 0.07%)</title><rect x="40.0865%" y="533" width="0.0689%" height="15" fill="rgb(250,82,29)" fg:x="43639" fg:w="75"/><text x="40.3365%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (75 samples, 0.07%)</title><rect x="40.0865%" y="517" width="0.0689%" height="15" fill="rgb(241,226,54)" fg:x="43639" fg:w="75"/><text x="40.3365%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (75 samples, 0.07%)</title><rect x="40.0865%" y="501" width="0.0689%" height="15" fill="rgb(221,99,41)" fg:x="43639" fg:w="75"/><text x="40.3365%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (75 samples, 0.07%)</title><rect x="40.0865%" y="485" width="0.0689%" height="15" fill="rgb(213,90,21)" fg:x="43639" fg:w="75"/><text x="40.3365%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (97 samples, 0.09%)</title><rect x="40.0746%" y="549" width="0.0891%" height="15" fill="rgb(205,208,24)" fg:x="43626" fg:w="97"/><text x="40.3246%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,698 samples, 5.23%)</title><rect x="34.9360%" y="677" width="5.2341%" height="15" fill="rgb(246,31,12)" fg:x="38032" fg:w="5698"/><text x="35.1860%" y="687.50">&lt;core:..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (370 samples, 0.34%)</title><rect x="39.8302%" y="661" width="0.3399%" height="15" fill="rgb(213,154,6)" fg:x="43360" fg:w="370"/><text x="40.0802%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (186 samples, 0.17%)</title><rect x="39.9993%" y="645" width="0.1709%" height="15" fill="rgb(222,163,29)" fg:x="43544" fg:w="186"/><text x="40.2493%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::pdk::PdkOpMeta&gt; (159 samples, 0.15%)</title><rect x="40.0241%" y="629" width="0.1461%" height="15" fill="rgb(227,201,8)" fg:x="43571" fg:w="159"/><text x="40.2741%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (159 samples, 0.15%)</title><rect x="40.0241%" y="613" width="0.1461%" height="15" fill="rgb(233,9,32)" fg:x="43571" fg:w="159"/><text x="40.2741%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt; (159 samples, 0.15%)</title><rect x="40.0241%" y="597" width="0.1461%" height="15" fill="rgb(217,54,24)" fg:x="43571" fg:w="159"/><text x="40.2741%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (159 samples, 0.15%)</title><rect x="40.0241%" y="581" width="0.1461%" height="15" fill="rgb(235,192,0)" fg:x="43571" fg:w="159"/><text x="40.2741%" y="591.50"></text></g><g><title>rust_dealloc (115 samples, 0.11%)</title><rect x="40.0645%" y="565" width="0.1056%" height="15" fill="rgb(235,45,9)" fg:x="43615" fg:w="115"/><text x="40.3145%" y="575.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (188 samples, 0.17%)</title><rect x="40.1701%" y="677" width="0.1727%" height="15" fill="rgb(246,42,40)" fg:x="43730" fg:w="188"/><text x="40.4201%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="40.3235%" y="661" width="0.0193%" height="15" fill="rgb(248,111,24)" fg:x="43897" fg:w="21"/><text x="40.5735%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (79 samples, 0.07%)</title><rect x="40.3759%" y="661" width="0.0726%" height="15" fill="rgb(249,65,22)" fg:x="43954" fg:w="79"/><text x="40.6259%" y="671.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (79 samples, 0.07%)</title><rect x="40.3759%" y="645" width="0.0726%" height="15" fill="rgb(238,111,51)" fg:x="43954" fg:w="79"/><text x="40.6259%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (31 samples, 0.03%)</title><rect x="40.4200%" y="629" width="0.0285%" height="15" fill="rgb(250,118,22)" fg:x="44002" fg:w="31"/><text x="40.6700%" y="639.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (223 samples, 0.20%)</title><rect x="40.4485%" y="661" width="0.2048%" height="15" fill="rgb(234,84,26)" fg:x="44033" fg:w="223"/><text x="40.6985%" y="671.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (45 samples, 0.04%)</title><rect x="40.6120%" y="645" width="0.0413%" height="15" fill="rgb(243,172,12)" fg:x="44211" fg:w="45"/><text x="40.8620%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (21 samples, 0.02%)</title><rect x="40.6340%" y="629" width="0.0193%" height="15" fill="rgb(236,150,49)" fg:x="44235" fg:w="21"/><text x="40.8840%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (21 samples, 0.02%)</title><rect x="40.6340%" y="613" width="0.0193%" height="15" fill="rgb(225,197,26)" fg:x="44235" fg:w="21"/><text x="40.8840%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.02%)</title><rect x="40.6340%" y="597" width="0.0193%" height="15" fill="rgb(214,17,42)" fg:x="44235" fg:w="21"/><text x="40.8840%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.02%)</title><rect x="40.6340%" y="581" width="0.0193%" height="15" fill="rgb(224,165,40)" fg:x="44235" fg:w="21"/><text x="40.8840%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.02%)</title><rect x="40.6340%" y="565" width="0.0193%" height="15" fill="rgb(246,100,4)" fg:x="44235" fg:w="21"/><text x="40.8840%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="40.6340%" y="549" width="0.0193%" height="15" fill="rgb(222,103,0)" fg:x="44235" fg:w="21"/><text x="40.8840%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="40.6395%" y="533" width="0.0138%" height="15" fill="rgb(227,189,26)" fg:x="44241" fg:w="15"/><text x="40.8895%" y="543.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (349 samples, 0.32%)</title><rect x="40.3428%" y="677" width="0.3206%" height="15" fill="rgb(214,202,17)" fg:x="43918" fg:w="349"/><text x="40.5928%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,700 samples, 1.56%)</title><rect x="40.6634%" y="677" width="1.5616%" height="15" fill="rgb(229,111,3)" fg:x="44267" fg:w="1700"/><text x="40.9134%" y="687.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (51 samples, 0.05%)</title><rect x="42.3692%" y="389" width="0.0468%" height="15" fill="rgb(229,172,15)" fg:x="46124" fg:w="51"/><text x="42.6192%" y="399.50"></text></g><g><title> (51 samples, 0.05%)</title><rect x="42.3692%" y="373" width="0.0468%" height="15" fill="rgb(230,224,35)" fg:x="46124" fg:w="51"/><text x="42.6192%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (171 samples, 0.16%)</title><rect x="42.2673%" y="421" width="0.1571%" height="15" fill="rgb(251,141,6)" fg:x="46013" fg:w="171"/><text x="42.5173%" y="431.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (164 samples, 0.15%)</title><rect x="42.2737%" y="405" width="0.1506%" height="15" fill="rgb(225,208,6)" fg:x="46020" fg:w="164"/><text x="42.5237%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (225 samples, 0.21%)</title><rect x="42.2599%" y="453" width="0.2067%" height="15" fill="rgb(246,181,16)" fg:x="46005" fg:w="225"/><text x="42.5099%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (225 samples, 0.21%)</title><rect x="42.2599%" y="437" width="0.2067%" height="15" fill="rgb(227,129,36)" fg:x="46005" fg:w="225"/><text x="42.5099%" y="447.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (46 samples, 0.04%)</title><rect x="42.4244%" y="421" width="0.0423%" height="15" fill="rgb(248,117,24)" fg:x="46184" fg:w="46"/><text x="42.6744%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (227 samples, 0.21%)</title><rect x="42.2599%" y="485" width="0.2085%" height="15" fill="rgb(214,185,35)" fg:x="46005" fg:w="227"/><text x="42.5099%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (227 samples, 0.21%)</title><rect x="42.2599%" y="469" width="0.2085%" height="15" fill="rgb(236,150,34)" fg:x="46005" fg:w="227"/><text x="42.5099%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (241 samples, 0.22%)</title><rect x="42.2480%" y="501" width="0.2214%" height="15" fill="rgb(243,228,27)" fg:x="45992" fg:w="241"/><text x="42.4980%" y="511.50"></text></g><g><title>rust_dealloc (258 samples, 0.24%)</title><rect x="42.2360%" y="517" width="0.2370%" height="15" fill="rgb(245,77,44)" fg:x="45979" fg:w="258"/><text x="42.4860%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (271 samples, 0.25%)</title><rect x="42.2250%" y="677" width="0.2489%" height="15" fill="rgb(235,214,42)" fg:x="45967" fg:w="271"/><text x="42.4750%" y="687.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (271 samples, 0.25%)</title><rect x="42.2250%" y="661" width="0.2489%" height="15" fill="rgb(221,74,3)" fg:x="45967" fg:w="271"/><text x="42.4750%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (259 samples, 0.24%)</title><rect x="42.2360%" y="645" width="0.2379%" height="15" fill="rgb(206,121,29)" fg:x="45979" fg:w="259"/><text x="42.4860%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (259 samples, 0.24%)</title><rect x="42.2360%" y="629" width="0.2379%" height="15" fill="rgb(249,131,53)" fg:x="45979" fg:w="259"/><text x="42.4860%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (259 samples, 0.24%)</title><rect x="42.2360%" y="613" width="0.2379%" height="15" fill="rgb(236,170,29)" fg:x="45979" fg:w="259"/><text x="42.4860%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (259 samples, 0.24%)</title><rect x="42.2360%" y="597" width="0.2379%" height="15" fill="rgb(247,96,15)" fg:x="45979" fg:w="259"/><text x="42.4860%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (259 samples, 0.24%)</title><rect x="42.2360%" y="581" width="0.2379%" height="15" fill="rgb(211,210,7)" fg:x="45979" fg:w="259"/><text x="42.4860%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (259 samples, 0.24%)</title><rect x="42.2360%" y="565" width="0.2379%" height="15" fill="rgb(240,88,50)" fg:x="45979" fg:w="259"/><text x="42.4860%" y="575.50"></text></g><g><title>__rg_dealloc (259 samples, 0.24%)</title><rect x="42.2360%" y="549" width="0.2379%" height="15" fill="rgb(209,229,26)" fg:x="45979" fg:w="259"/><text x="42.4860%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (259 samples, 0.24%)</title><rect x="42.2360%" y="533" width="0.2379%" height="15" fill="rgb(210,68,23)" fg:x="45979" fg:w="259"/><text x="42.4860%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="42.4740%" y="661" width="0.0147%" height="15" fill="rgb(229,180,13)" fg:x="46238" fg:w="16"/><text x="42.7240%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="42.4740%" y="677" width="0.0193%" height="15" fill="rgb(236,53,44)" fg:x="46238" fg:w="21"/><text x="42.7240%" y="687.50"></text></g><g><title>core::time::Duration::as_nanos (17 samples, 0.02%)</title><rect x="42.5383%" y="661" width="0.0156%" height="15" fill="rgb(244,214,29)" fg:x="46308" fg:w="17"/><text x="42.7883%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (129 samples, 0.12%)</title><rect x="42.6393%" y="613" width="0.1185%" height="15" fill="rgb(220,75,29)" fg:x="46418" fg:w="129"/><text x="42.8893%" y="623.50"></text></g><g><title>core::cmp::PartialOrd::ge (129 samples, 0.12%)</title><rect x="42.6393%" y="597" width="0.1185%" height="15" fill="rgb(214,183,37)" fg:x="46418" fg:w="129"/><text x="42.8893%" y="607.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (128 samples, 0.12%)</title><rect x="42.6402%" y="581" width="0.1176%" height="15" fill="rgb(239,117,29)" fg:x="46419" fg:w="128"/><text x="42.8902%" y="591.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (128 samples, 0.12%)</title><rect x="42.6402%" y="565" width="0.1176%" height="15" fill="rgb(237,171,35)" fg:x="46419" fg:w="128"/><text x="42.8902%" y="575.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (128 samples, 0.12%)</title><rect x="42.6402%" y="549" width="0.1176%" height="15" fill="rgb(229,178,53)" fg:x="46419" fg:w="128"/><text x="42.8902%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (75 samples, 0.07%)</title><rect x="42.6889%" y="533" width="0.0689%" height="15" fill="rgb(210,102,19)" fg:x="46472" fg:w="75"/><text x="42.9389%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (264 samples, 0.24%)</title><rect x="42.5539%" y="645" width="0.2425%" height="15" fill="rgb(235,127,22)" fg:x="46325" fg:w="264"/><text x="42.8039%" y="655.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (264 samples, 0.24%)</title><rect x="42.5539%" y="629" width="0.2425%" height="15" fill="rgb(244,31,31)" fg:x="46325" fg:w="264"/><text x="42.8039%" y="639.50"></text></g><g><title>core::time::Duration::new (42 samples, 0.04%)</title><rect x="42.7578%" y="613" width="0.0386%" height="15" fill="rgb(231,43,21)" fg:x="46547" fg:w="42"/><text x="43.0078%" y="623.50"></text></g><g><title>std::time::SystemTime::duration_since (277 samples, 0.25%)</title><rect x="42.5539%" y="661" width="0.2545%" height="15" fill="rgb(217,131,35)" fg:x="46325" fg:w="277"/><text x="42.8039%" y="671.50"></text></g><g><title>tremor_common::time::nanotime (13 samples, 0.01%)</title><rect x="42.7964%" y="645" width="0.0119%" height="15" fill="rgb(221,149,4)" fg:x="46589" fg:w="13"/><text x="43.0464%" y="655.50"></text></g><g><title>__clock_gettime_2 (1,036 samples, 0.95%)</title><rect x="43.0205%" y="613" width="0.9517%" height="15" fill="rgb(232,170,28)" fg:x="46833" fg:w="1036"/><text x="43.2705%" y="623.50"></text></g><g><title>__vdso_clock_gettime (967 samples, 0.89%)</title><rect x="43.0839%" y="597" width="0.8883%" height="15" fill="rgb(238,56,10)" fg:x="46902" fg:w="967"/><text x="43.3339%" y="607.50"></text></g><g><title>[[vdso]] (630 samples, 0.58%)</title><rect x="43.3935%" y="581" width="0.5787%" height="15" fill="rgb(235,196,14)" fg:x="47239" fg:w="630"/><text x="43.6435%" y="591.50"></text></g><g><title>tremor_common::time::nanotime (1,611 samples, 1.48%)</title><rect x="42.4932%" y="677" width="1.4799%" height="15" fill="rgb(216,45,48)" fg:x="46259" fg:w="1611"/><text x="42.7432%" y="687.50"></text></g><g><title>std::time::SystemTime::now (1,268 samples, 1.16%)</title><rect x="42.8083%" y="661" width="1.1648%" height="15" fill="rgb(238,213,17)" fg:x="46602" fg:w="1268"/><text x="43.0583%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,268 samples, 1.16%)</title><rect x="42.8083%" y="645" width="1.1648%" height="15" fill="rgb(212,13,2)" fg:x="46602" fg:w="1268"/><text x="43.0583%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::now (1,268 samples, 1.16%)</title><rect x="42.8083%" y="629" width="1.1648%" height="15" fill="rgb(240,114,20)" fg:x="46602" fg:w="1268"/><text x="43.0583%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.01%)</title><rect x="43.9850%" y="517" width="0.0119%" height="15" fill="rgb(228,41,40)" fg:x="47883" fg:w="13"/><text x="44.2350%" y="527.50"></text></g><g><title>core::mem::drop (20 samples, 0.02%)</title><rect x="43.9841%" y="613" width="0.0184%" height="15" fill="rgb(244,132,35)" fg:x="47882" fg:w="20"/><text x="44.2341%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (20 samples, 0.02%)</title><rect x="43.9841%" y="597" width="0.0184%" height="15" fill="rgb(253,189,4)" fg:x="47882" fg:w="20"/><text x="44.2341%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="43.9841%" y="581" width="0.0184%" height="15" fill="rgb(224,37,19)" fg:x="47882" fg:w="20"/><text x="44.2341%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (20 samples, 0.02%)</title><rect x="43.9841%" y="565" width="0.0184%" height="15" fill="rgb(235,223,18)" fg:x="47882" fg:w="20"/><text x="44.2341%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (19 samples, 0.02%)</title><rect x="43.9850%" y="549" width="0.0175%" height="15" fill="rgb(235,163,25)" fg:x="47883" fg:w="19"/><text x="44.2350%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (19 samples, 0.02%)</title><rect x="43.9850%" y="533" width="0.0175%" height="15" fill="rgb(217,145,28)" fg:x="47883" fg:w="19"/><text x="44.2350%" y="543.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (41 samples, 0.04%)</title><rect x="43.9731%" y="677" width="0.0377%" height="15" fill="rgb(223,223,32)" fg:x="47870" fg:w="41"/><text x="44.2231%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (35 samples, 0.03%)</title><rect x="43.9786%" y="661" width="0.0322%" height="15" fill="rgb(227,189,39)" fg:x="47876" fg:w="35"/><text x="44.2286%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (35 samples, 0.03%)</title><rect x="43.9786%" y="645" width="0.0322%" height="15" fill="rgb(248,10,22)" fg:x="47876" fg:w="35"/><text x="44.2286%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="43.9786%" y="629" width="0.0322%" height="15" fill="rgb(248,46,39)" fg:x="47876" fg:w="35"/><text x="44.2286%" y="639.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies (16 samples, 0.01%)</title><rect x="44.0108%" y="677" width="0.0147%" height="15" fill="rgb(248,113,48)" fg:x="47911" fg:w="16"/><text x="44.2608%" y="687.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (12 samples, 0.01%)</title><rect x="44.0255%" y="677" width="0.0110%" height="15" fill="rgb(245,16,25)" fg:x="47927" fg:w="12"/><text x="44.2755%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (10,232 samples, 9.40%)</title><rect x="34.6457%" y="693" width="9.3991%" height="15" fill="rgb(249,152,16)" fg:x="37716" fg:w="10232"/><text x="34.8957%" y="703.50">tremor_runtim..</text></g><g><title>async_global_executor::threading::thread_main_loop (10,257 samples, 9.42%)</title><rect x="34.6282%" y="1157" width="9.4220%" height="15" fill="rgb(250,16,1)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="1167.50">async_global_..</text></g><g><title>std::panic::catch_unwind (10,257 samples, 9.42%)</title><rect x="34.6282%" y="1141" width="9.4220%" height="15" fill="rgb(249,138,3)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="1151.50">std::panic::c..</text></g><g><title>std::panicking::try (10,257 samples, 9.42%)</title><rect x="34.6282%" y="1125" width="9.4220%" height="15" fill="rgb(227,71,41)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="1135.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (10,257 samples, 9.42%)</title><rect x="34.6282%" y="1109" width="9.4220%" height="15" fill="rgb(209,184,23)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="1119.50">std::panickin..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (10,257 samples, 9.42%)</title><rect x="34.6282%" y="1093" width="9.4220%" height="15" fill="rgb(223,215,31)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="1103.50">async_global_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10,257 samples, 9.42%)</title><rect x="34.6282%" y="1077" width="9.4220%" height="15" fill="rgb(210,146,28)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="1087.50">std::thread::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,257 samples, 9.42%)</title><rect x="34.6282%" y="1061" width="9.4220%" height="15" fill="rgb(209,183,41)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="1071.50">std::thread::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (10,257 samples, 9.42%)</title><rect x="34.6282%" y="1045" width="9.4220%" height="15" fill="rgb(209,224,45)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="1055.50">async_global_..</text></g><g><title>async_global_executor::reactor::block_on (10,257 samples, 9.42%)</title><rect x="34.6282%" y="1029" width="9.4220%" height="15" fill="rgb(224,209,51)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="1039.50">async_global_..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (10,257 samples, 9.42%)</title><rect x="34.6282%" y="1013" width="9.4220%" height="15" fill="rgb(223,17,39)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="1023.50">async_global_..</text></g><g><title>async_io::driver::block_on (10,257 samples, 9.42%)</title><rect x="34.6282%" y="997" width="9.4220%" height="15" fill="rgb(234,204,37)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="1007.50">async_io::dri..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10,257 samples, 9.42%)</title><rect x="34.6282%" y="981" width="9.4220%" height="15" fill="rgb(236,120,5)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="991.50">&lt;futures_lite..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,257 samples, 9.42%)</title><rect x="34.6282%" y="965" width="9.4220%" height="15" fill="rgb(248,97,27)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="975.50">&lt;core::future..</text></g><g><title>async_executor::Executor::run::{{closure}} (10,257 samples, 9.42%)</title><rect x="34.6282%" y="949" width="9.4220%" height="15" fill="rgb(240,66,17)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="959.50">async_executo..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10,257 samples, 9.42%)</title><rect x="34.6282%" y="933" width="9.4220%" height="15" fill="rgb(210,79,3)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="943.50">&lt;futures_lite..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,257 samples, 9.42%)</title><rect x="34.6282%" y="917" width="9.4220%" height="15" fill="rgb(214,176,27)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="927.50">&lt;core::future..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (10,257 samples, 9.42%)</title><rect x="34.6282%" y="901" width="9.4220%" height="15" fill="rgb(235,185,3)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="911.50">async_executo..</text></g><g><title>async_task::runnable::Runnable::run (10,257 samples, 9.42%)</title><rect x="34.6282%" y="885" width="9.4220%" height="15" fill="rgb(227,24,12)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="895.50">async_task::r..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (10,257 samples, 9.42%)</title><rect x="34.6282%" y="869" width="9.4220%" height="15" fill="rgb(252,169,48)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="879.50">async_task::r..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10,257 samples, 9.42%)</title><rect x="34.6282%" y="853" width="9.4220%" height="15" fill="rgb(212,65,1)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="863.50">&lt;core::pin::P..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,257 samples, 9.42%)</title><rect x="34.6282%" y="837" width="9.4220%" height="15" fill="rgb(242,39,24)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="847.50">&lt;core::future..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (10,257 samples, 9.42%)</title><rect x="34.6282%" y="821" width="9.4220%" height="15" fill="rgb(249,32,23)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="831.50">async_executo..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (10,257 samples, 9.42%)</title><rect x="34.6282%" y="805" width="9.4220%" height="15" fill="rgb(251,195,23)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="815.50">&lt;async_std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (10,257 samples, 9.42%)</title><rect x="34.6282%" y="789" width="9.4220%" height="15" fill="rgb(236,174,8)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="799.50">async_std::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10,257 samples, 9.42%)</title><rect x="34.6282%" y="773" width="9.4220%" height="15" fill="rgb(220,197,8)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="783.50">std::thread::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,257 samples, 9.42%)</title><rect x="34.6282%" y="757" width="9.4220%" height="15" fill="rgb(240,108,37)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="767.50">std::thread::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (10,257 samples, 9.42%)</title><rect x="34.6282%" y="741" width="9.4220%" height="15" fill="rgb(232,176,24)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="751.50">async_std::ta..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (10,257 samples, 9.42%)</title><rect x="34.6282%" y="725" width="9.4220%" height="15" fill="rgb(243,35,29)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="735.50">&lt;async_std::t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,257 samples, 9.42%)</title><rect x="34.6282%" y="709" width="9.4220%" height="15" fill="rgb(210,37,18)" fg:x="37697" fg:w="10257"/><text x="34.8782%" y="719.50">&lt;core::future..</text></g><g><title>__memcpy_avx_unaligned_erms (592 samples, 0.54%)</title><rect x="44.1228%" y="773" width="0.5438%" height="15" fill="rgb(224,184,40)" fg:x="48033" fg:w="592"/><text x="44.3728%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (634 samples, 0.58%)</title><rect x="44.0953%" y="789" width="0.5824%" height="15" fill="rgb(236,39,29)" fg:x="48003" fg:w="634"/><text x="44.3453%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="44.6666%" y="773" width="0.0110%" height="15" fill="rgb(232,48,39)" fg:x="48625" fg:w="12"/><text x="44.9166%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (898 samples, 0.82%)</title><rect x="44.0751%" y="805" width="0.8249%" height="15" fill="rgb(236,34,42)" fg:x="47981" fg:w="898"/><text x="44.3251%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (242 samples, 0.22%)</title><rect x="44.6777%" y="789" width="0.2223%" height="15" fill="rgb(243,106,37)" fg:x="48637" fg:w="242"/><text x="44.9277%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (929 samples, 0.85%)</title><rect x="44.0539%" y="837" width="0.8534%" height="15" fill="rgb(218,96,6)" fg:x="47958" fg:w="929"/><text x="44.3039%" y="847.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (929 samples, 0.85%)</title><rect x="44.0539%" y="821" width="0.8534%" height="15" fill="rgb(235,130,12)" fg:x="47958" fg:w="929"/><text x="44.3039%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (33 samples, 0.03%)</title><rect x="45.3703%" y="389" width="0.0303%" height="15" fill="rgb(231,95,0)" fg:x="49391" fg:w="33"/><text x="45.6203%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (39 samples, 0.04%)</title><rect x="45.4034%" y="357" width="0.0358%" height="15" fill="rgb(228,12,23)" fg:x="49427" fg:w="39"/><text x="45.6534%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (39 samples, 0.04%)</title><rect x="45.4034%" y="341" width="0.0358%" height="15" fill="rgb(216,12,1)" fg:x="49427" fg:w="39"/><text x="45.6534%" y="351.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (15 samples, 0.01%)</title><rect x="45.4392%" y="341" width="0.0138%" height="15" fill="rgb(219,59,3)" fg:x="49466" fg:w="15"/><text x="45.6892%" y="351.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (72 samples, 0.07%)</title><rect x="45.4024%" y="373" width="0.0661%" height="15" fill="rgb(215,208,46)" fg:x="49426" fg:w="72"/><text x="45.6524%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (32 samples, 0.03%)</title><rect x="45.4392%" y="357" width="0.0294%" height="15" fill="rgb(254,224,29)" fg:x="49466" fg:w="32"/><text x="45.6892%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (17 samples, 0.02%)</title><rect x="45.4530%" y="341" width="0.0156%" height="15" fill="rgb(232,14,29)" fg:x="49481" fg:w="17"/><text x="45.7030%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (17 samples, 0.02%)</title><rect x="45.4530%" y="325" width="0.0156%" height="15" fill="rgb(208,45,52)" fg:x="49481" fg:w="17"/><text x="45.7030%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (616 samples, 0.57%)</title><rect x="44.9165%" y="437" width="0.5659%" height="15" fill="rgb(234,191,28)" fg:x="48897" fg:w="616"/><text x="45.1665%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (543 samples, 0.50%)</title><rect x="44.9836%" y="421" width="0.4988%" height="15" fill="rgb(244,67,43)" fg:x="48970" fg:w="543"/><text x="45.2336%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (131 samples, 0.12%)</title><rect x="45.3620%" y="405" width="0.1203%" height="15" fill="rgb(236,189,24)" fg:x="49382" fg:w="131"/><text x="45.6120%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (89 samples, 0.08%)</title><rect x="45.4006%" y="389" width="0.0818%" height="15" fill="rgb(239,214,33)" fg:x="49424" fg:w="89"/><text x="45.6506%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (15 samples, 0.01%)</title><rect x="45.4686%" y="373" width="0.0138%" height="15" fill="rgb(226,176,41)" fg:x="49498" fg:w="15"/><text x="45.7186%" y="383.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="45.4989%" y="277" width="0.0110%" height="15" fill="rgb(248,47,8)" fg:x="49531" fg:w="12"/><text x="45.7489%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="45.5136%" y="229" width="0.0138%" height="15" fill="rgb(218,81,44)" fg:x="49547" fg:w="15"/><text x="45.7636%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (15 samples, 0.01%)</title><rect x="45.5136%" y="213" width="0.0138%" height="15" fill="rgb(213,98,6)" fg:x="49547" fg:w="15"/><text x="45.7636%" y="223.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (12 samples, 0.01%)</title><rect x="45.5163%" y="197" width="0.0110%" height="15" fill="rgb(222,85,22)" fg:x="49550" fg:w="12"/><text x="45.7663%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="45.5099%" y="277" width="0.0358%" height="15" fill="rgb(239,46,39)" fg:x="49543" fg:w="39"/><text x="45.7599%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="45.5099%" y="261" width="0.0358%" height="15" fill="rgb(237,12,29)" fg:x="49543" fg:w="39"/><text x="45.7599%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (35 samples, 0.03%)</title><rect x="45.5136%" y="245" width="0.0322%" height="15" fill="rgb(214,77,8)" fg:x="49547" fg:w="35"/><text x="45.7636%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::take (18 samples, 0.02%)</title><rect x="45.5292%" y="229" width="0.0165%" height="15" fill="rgb(217,168,37)" fg:x="49564" fg:w="18"/><text x="45.7792%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (18 samples, 0.02%)</title><rect x="45.5292%" y="213" width="0.0165%" height="15" fill="rgb(221,217,23)" fg:x="49564" fg:w="18"/><text x="45.7792%" y="223.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (74 samples, 0.07%)</title><rect x="45.4824%" y="437" width="0.0680%" height="15" fill="rgb(243,229,36)" fg:x="49513" fg:w="74"/><text x="45.7324%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (74 samples, 0.07%)</title><rect x="45.4824%" y="421" width="0.0680%" height="15" fill="rgb(251,163,40)" fg:x="49513" fg:w="74"/><text x="45.7324%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (74 samples, 0.07%)</title><rect x="45.4824%" y="405" width="0.0680%" height="15" fill="rgb(237,222,12)" fg:x="49513" fg:w="74"/><text x="45.7324%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (65 samples, 0.06%)</title><rect x="45.4906%" y="389" width="0.0597%" height="15" fill="rgb(248,132,6)" fg:x="49522" fg:w="65"/><text x="45.7406%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (65 samples, 0.06%)</title><rect x="45.4906%" y="373" width="0.0597%" height="15" fill="rgb(227,167,50)" fg:x="49522" fg:w="65"/><text x="45.7406%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (65 samples, 0.06%)</title><rect x="45.4906%" y="357" width="0.0597%" height="15" fill="rgb(242,84,37)" fg:x="49522" fg:w="65"/><text x="45.7406%" y="367.50"></text></g><g><title>alloc::alloc::alloc (60 samples, 0.06%)</title><rect x="45.4952%" y="341" width="0.0551%" height="15" fill="rgb(212,4,50)" fg:x="49527" fg:w="60"/><text x="45.7452%" y="351.50"></text></g><g><title>__rg_alloc (60 samples, 0.06%)</title><rect x="45.4952%" y="325" width="0.0551%" height="15" fill="rgb(230,228,32)" fg:x="49527" fg:w="60"/><text x="45.7452%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (60 samples, 0.06%)</title><rect x="45.4952%" y="309" width="0.0551%" height="15" fill="rgb(248,217,23)" fg:x="49527" fg:w="60"/><text x="45.7452%" y="319.50"></text></g><g><title>rust_alloc (56 samples, 0.05%)</title><rect x="45.4989%" y="293" width="0.0514%" height="15" fill="rgb(238,197,32)" fg:x="49531" fg:w="56"/><text x="45.7489%" y="303.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (21 samples, 0.02%)</title><rect x="45.5659%" y="373" width="0.0193%" height="15" fill="rgb(236,106,1)" fg:x="49604" fg:w="21"/><text x="45.8159%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (34 samples, 0.03%)</title><rect x="45.6009%" y="309" width="0.0312%" height="15" fill="rgb(219,228,13)" fg:x="49642" fg:w="34"/><text x="45.8509%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (34 samples, 0.03%)</title><rect x="45.6009%" y="293" width="0.0312%" height="15" fill="rgb(238,30,35)" fg:x="49642" fg:w="34"/><text x="45.8509%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (21 samples, 0.02%)</title><rect x="45.6128%" y="277" width="0.0193%" height="15" fill="rgb(236,70,23)" fg:x="49655" fg:w="21"/><text x="45.8628%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (21 samples, 0.02%)</title><rect x="45.6128%" y="261" width="0.0193%" height="15" fill="rgb(249,104,48)" fg:x="49655" fg:w="21"/><text x="45.8628%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (20 samples, 0.02%)</title><rect x="45.6137%" y="245" width="0.0184%" height="15" fill="rgb(254,117,50)" fg:x="49656" fg:w="20"/><text x="45.8637%" y="255.50"></text></g><g><title>rust_dealloc (52 samples, 0.05%)</title><rect x="45.5852%" y="373" width="0.0478%" height="15" fill="rgb(223,152,4)" fg:x="49625" fg:w="52"/><text x="45.8352%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (49 samples, 0.05%)</title><rect x="45.5880%" y="357" width="0.0450%" height="15" fill="rgb(245,6,2)" fg:x="49628" fg:w="49"/><text x="45.8380%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (35 samples, 0.03%)</title><rect x="45.6009%" y="341" width="0.0322%" height="15" fill="rgb(249,150,24)" fg:x="49642" fg:w="35"/><text x="45.8509%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (35 samples, 0.03%)</title><rect x="45.6009%" y="325" width="0.0322%" height="15" fill="rgb(228,185,42)" fg:x="49642" fg:w="35"/><text x="45.8509%" y="335.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (86 samples, 0.08%)</title><rect x="45.5568%" y="389" width="0.0790%" height="15" fill="rgb(226,39,33)" fg:x="49594" fg:w="86"/><text x="45.8068%" y="399.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (816 samples, 0.75%)</title><rect x="44.9073%" y="517" width="0.7496%" height="15" fill="rgb(221,166,19)" fg:x="48887" fg:w="816"/><text x="45.1573%" y="527.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (816 samples, 0.75%)</title><rect x="44.9073%" y="501" width="0.7496%" height="15" fill="rgb(209,109,2)" fg:x="48887" fg:w="816"/><text x="45.1573%" y="511.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (806 samples, 0.74%)</title><rect x="44.9165%" y="485" width="0.7404%" height="15" fill="rgb(252,216,26)" fg:x="48897" fg:w="806"/><text x="45.1665%" y="495.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (806 samples, 0.74%)</title><rect x="44.9165%" y="469" width="0.7404%" height="15" fill="rgb(227,173,36)" fg:x="48897" fg:w="806"/><text x="45.1665%" y="479.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (806 samples, 0.74%)</title><rect x="44.9165%" y="453" width="0.7404%" height="15" fill="rgb(209,90,7)" fg:x="48897" fg:w="806"/><text x="45.1665%" y="463.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (109 samples, 0.10%)</title><rect x="45.5568%" y="437" width="0.1001%" height="15" fill="rgb(250,194,11)" fg:x="49594" fg:w="109"/><text x="45.8068%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (109 samples, 0.10%)</title><rect x="45.5568%" y="421" width="0.1001%" height="15" fill="rgb(220,72,50)" fg:x="49594" fg:w="109"/><text x="45.8068%" y="431.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (109 samples, 0.10%)</title><rect x="45.5568%" y="405" width="0.1001%" height="15" fill="rgb(222,106,48)" fg:x="49594" fg:w="109"/><text x="45.8068%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (23 samples, 0.02%)</title><rect x="45.6358%" y="389" width="0.0211%" height="15" fill="rgb(216,220,45)" fg:x="49680" fg:w="23"/><text x="45.8858%" y="399.50"></text></g><g><title>core::ptr::read (23 samples, 0.02%)</title><rect x="45.6358%" y="373" width="0.0211%" height="15" fill="rgb(234,112,18)" fg:x="49680" fg:w="23"/><text x="45.8858%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (13 samples, 0.01%)</title><rect x="45.6596%" y="485" width="0.0119%" height="15" fill="rgb(206,179,9)" fg:x="49706" fg:w="13"/><text x="45.9096%" y="495.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_mut (19 samples, 0.02%)</title><rect x="45.7368%" y="373" width="0.0175%" height="15" fill="rgb(215,115,40)" fg:x="49790" fg:w="19"/><text x="45.9868%" y="383.50"></text></g><g><title>&lt;abi_stable::std_types::boxed::private::RBox&lt;T&gt; as abi_stable::pointer_trait::AsMutPtr&gt;::as_mut_ptr (19 samples, 0.02%)</title><rect x="45.7368%" y="357" width="0.0175%" height="15" fill="rgb(222,69,34)" fg:x="49790" fg:w="19"/><text x="45.9868%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.03%)</title><rect x="45.7754%" y="261" width="0.0340%" height="15" fill="rgb(209,161,10)" fg:x="49832" fg:w="37"/><text x="46.0254%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="45.7754%" y="341" width="0.0367%" height="15" fill="rgb(217,6,38)" fg:x="49832" fg:w="40"/><text x="46.0254%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="45.7754%" y="325" width="0.0367%" height="15" fill="rgb(229,229,48)" fg:x="49832" fg:w="40"/><text x="46.0254%" y="335.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="45.7754%" y="309" width="0.0367%" height="15" fill="rgb(225,21,28)" fg:x="49832" fg:w="40"/><text x="46.0254%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="45.7754%" y="293" width="0.0367%" height="15" fill="rgb(206,33,13)" fg:x="49832" fg:w="40"/><text x="46.0254%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="45.7754%" y="277" width="0.0367%" height="15" fill="rgb(242,178,17)" fg:x="49832" fg:w="40"/><text x="46.0254%" y="287.50"></text></g><g><title>abi_stable::erased_types::iterator::next (72 samples, 0.07%)</title><rect x="45.7543%" y="373" width="0.0661%" height="15" fill="rgb(220,162,5)" fg:x="49809" fg:w="72"/><text x="46.0043%" y="383.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (49 samples, 0.05%)</title><rect x="45.7754%" y="357" width="0.0450%" height="15" fill="rgb(210,33,43)" fg:x="49832" fg:w="49"/><text x="46.0254%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 samples, 0.10%)</title><rect x="45.7285%" y="421" width="0.0974%" height="15" fill="rgb(216,116,54)" fg:x="49781" fg:w="106"/><text x="45.9785%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 samples, 0.10%)</title><rect x="45.7285%" y="405" width="0.0974%" height="15" fill="rgb(249,92,24)" fg:x="49781" fg:w="106"/><text x="45.9785%" y="415.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (106 samples, 0.10%)</title><rect x="45.7285%" y="389" width="0.0974%" height="15" fill="rgb(231,189,14)" fg:x="49781" fg:w="106"/><text x="45.9785%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="45.8792%" y="277" width="0.0129%" height="15" fill="rgb(230,8,41)" fg:x="49945" fg:w="14"/><text x="46.1292%" y="287.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="45.8792%" y="261" width="0.0129%" height="15" fill="rgb(249,7,27)" fg:x="49945" fg:w="14"/><text x="46.1292%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="45.8792%" y="245" width="0.0129%" height="15" fill="rgb(232,86,5)" fg:x="49945" fg:w="14"/><text x="46.1292%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="45.8792%" y="229" width="0.0129%" height="15" fill="rgb(224,175,18)" fg:x="49945" fg:w="14"/><text x="46.1292%" y="239.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="45.8792%" y="213" width="0.0129%" height="15" fill="rgb(220,129,12)" fg:x="49945" fg:w="14"/><text x="46.1292%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="45.8792%" y="197" width="0.0129%" height="15" fill="rgb(210,19,36)" fg:x="49945" fg:w="14"/><text x="46.1292%" y="207.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (48 samples, 0.04%)</title><rect x="45.8599%" y="293" width="0.0441%" height="15" fill="rgb(219,96,14)" fg:x="49924" fg:w="48"/><text x="46.1099%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="45.8920%" y="277" width="0.0119%" height="15" fill="rgb(249,106,1)" fg:x="49959" fg:w="13"/><text x="46.1420%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (13 samples, 0.01%)</title><rect x="45.8920%" y="261" width="0.0119%" height="15" fill="rgb(249,155,20)" fg:x="49959" fg:w="13"/><text x="46.1420%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (13 samples, 0.01%)</title><rect x="45.8920%" y="245" width="0.0119%" height="15" fill="rgb(244,168,9)" fg:x="49959" fg:w="13"/><text x="46.1420%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue)&gt;&gt; (13 samples, 0.01%)</title><rect x="45.8920%" y="229" width="0.0119%" height="15" fill="rgb(216,23,50)" fg:x="49959" fg:w="13"/><text x="46.1420%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="45.8920%" y="213" width="0.0119%" height="15" fill="rgb(224,219,20)" fg:x="49959" fg:w="13"/><text x="46.1420%" y="223.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (11 samples, 0.01%)</title><rect x="45.9398%" y="149" width="0.0101%" height="15" fill="rgb(222,156,15)" fg:x="50011" fg:w="11"/><text x="46.1898%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (30 samples, 0.03%)</title><rect x="45.9279%" y="197" width="0.0276%" height="15" fill="rgb(231,97,17)" fg:x="49998" fg:w="30"/><text x="46.1779%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (30 samples, 0.03%)</title><rect x="45.9279%" y="181" width="0.0276%" height="15" fill="rgb(218,70,48)" fg:x="49998" fg:w="30"/><text x="46.1779%" y="191.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (30 samples, 0.03%)</title><rect x="45.9279%" y="165" width="0.0276%" height="15" fill="rgb(212,196,52)" fg:x="49998" fg:w="30"/><text x="46.1779%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (48 samples, 0.04%)</title><rect x="45.9141%" y="261" width="0.0441%" height="15" fill="rgb(243,203,18)" fg:x="49983" fg:w="48"/><text x="46.1641%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (48 samples, 0.04%)</title><rect x="45.9141%" y="245" width="0.0441%" height="15" fill="rgb(252,125,41)" fg:x="49983" fg:w="48"/><text x="46.1641%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (48 samples, 0.04%)</title><rect x="45.9141%" y="229" width="0.0441%" height="15" fill="rgb(223,180,33)" fg:x="49983" fg:w="48"/><text x="46.1641%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (48 samples, 0.04%)</title><rect x="45.9141%" y="213" width="0.0441%" height="15" fill="rgb(254,159,46)" fg:x="49983" fg:w="48"/><text x="46.1641%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (56 samples, 0.05%)</title><rect x="45.9095%" y="277" width="0.0514%" height="15" fill="rgb(254,38,10)" fg:x="49978" fg:w="56"/><text x="46.1595%" y="287.50"></text></g><g><title>rust_dealloc (74 samples, 0.07%)</title><rect x="45.9049%" y="293" width="0.0680%" height="15" fill="rgb(208,217,32)" fg:x="49973" fg:w="74"/><text x="46.1549%" y="303.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="45.9609%" y="277" width="0.0119%" height="15" fill="rgb(221,120,13)" fg:x="50034" fg:w="13"/><text x="46.2109%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (330 samples, 0.30%)</title><rect x="45.6716%" y="485" width="0.3031%" height="15" fill="rgb(246,54,52)" fg:x="49719" fg:w="330"/><text x="45.9216%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (330 samples, 0.30%)</title><rect x="45.6716%" y="469" width="0.3031%" height="15" fill="rgb(242,34,25)" fg:x="49719" fg:w="330"/><text x="45.9216%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (293 samples, 0.27%)</title><rect x="45.7056%" y="453" width="0.2691%" height="15" fill="rgb(247,209,9)" fg:x="49756" fg:w="293"/><text x="45.9556%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (268 samples, 0.25%)</title><rect x="45.7285%" y="437" width="0.2462%" height="15" fill="rgb(228,71,26)" fg:x="49781" fg:w="268"/><text x="45.9785%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;,tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkOpMeta&gt; for tremor_pipeline::OpMeta&gt;::from::{{closure}}&gt;&gt; (155 samples, 0.14%)</title><rect x="45.8323%" y="421" width="0.1424%" height="15" fill="rgb(222,145,49)" fg:x="49894" fg:w="155"/><text x="46.0823%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (155 samples, 0.14%)</title><rect x="45.8323%" y="405" width="0.1424%" height="15" fill="rgb(218,121,17)" fg:x="49894" fg:w="155"/><text x="46.0823%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (155 samples, 0.14%)</title><rect x="45.8323%" y="389" width="0.1424%" height="15" fill="rgb(244,50,7)" fg:x="49894" fg:w="155"/><text x="46.0823%" y="399.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (155 samples, 0.14%)</title><rect x="45.8323%" y="373" width="0.1424%" height="15" fill="rgb(246,229,37)" fg:x="49894" fg:w="155"/><text x="46.0823%" y="383.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (147 samples, 0.14%)</title><rect x="45.8397%" y="357" width="0.1350%" height="15" fill="rgb(225,18,5)" fg:x="49902" fg:w="147"/><text x="46.0897%" y="367.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (140 samples, 0.13%)</title><rect x="45.8461%" y="341" width="0.1286%" height="15" fill="rgb(213,204,8)" fg:x="49909" fg:w="140"/><text x="46.0961%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (140 samples, 0.13%)</title><rect x="45.8461%" y="325" width="0.1286%" height="15" fill="rgb(238,103,6)" fg:x="49909" fg:w="140"/><text x="46.0961%" y="335.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (140 samples, 0.13%)</title><rect x="45.8461%" y="309" width="0.1286%" height="15" fill="rgb(222,25,35)" fg:x="49909" fg:w="140"/><text x="46.0961%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="45.9747%" y="469" width="0.0156%" height="15" fill="rgb(213,203,35)" fg:x="50049" fg:w="17"/><text x="46.2247%" y="479.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkOpMeta&gt; for tremor_pipeline::OpMeta&gt;::from (1,188 samples, 1.09%)</title><rect x="44.9073%" y="533" width="1.0913%" height="15" fill="rgb(221,79,53)" fg:x="48887" fg:w="1188"/><text x="45.1573%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (372 samples, 0.34%)</title><rect x="45.6569%" y="517" width="0.3417%" height="15" fill="rgb(243,200,35)" fg:x="49703" fg:w="372"/><text x="45.9069%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (372 samples, 0.34%)</title><rect x="45.6569%" y="501" width="0.3417%" height="15" fill="rgb(248,60,25)" fg:x="49703" fg:w="372"/><text x="45.9069%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value)&gt;&gt; (26 samples, 0.02%)</title><rect x="45.9747%" y="485" width="0.0239%" height="15" fill="rgb(227,53,46)" fg:x="50049" fg:w="26"/><text x="46.2247%" y="495.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (12 samples, 0.01%)</title><rect x="46.1116%" y="277" width="0.0110%" height="15" fill="rgb(216,120,32)" fg:x="50198" fg:w="12"/><text x="46.3616%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (13 samples, 0.01%)</title><rect x="46.1116%" y="293" width="0.0119%" height="15" fill="rgb(220,134,1)" fg:x="50198" fg:w="13"/><text x="46.3616%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (19 samples, 0.02%)</title><rect x="46.1107%" y="341" width="0.0175%" height="15" fill="rgb(237,168,5)" fg:x="50197" fg:w="19"/><text x="46.3607%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (18 samples, 0.02%)</title><rect x="46.1116%" y="325" width="0.0165%" height="15" fill="rgb(231,100,33)" fg:x="50198" fg:w="18"/><text x="46.3616%" y="335.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="46.1116%" y="309" width="0.0165%" height="15" fill="rgb(236,177,47)" fg:x="50198" fg:w="18"/><text x="46.3616%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (51 samples, 0.05%)</title><rect x="46.1061%" y="373" width="0.0468%" height="15" fill="rgb(235,7,49)" fg:x="50192" fg:w="51"/><text x="46.3561%" y="383.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (46 samples, 0.04%)</title><rect x="46.1107%" y="357" width="0.0423%" height="15" fill="rgb(232,119,22)" fg:x="50197" fg:w="46"/><text x="46.3607%" y="367.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (27 samples, 0.02%)</title><rect x="46.1281%" y="341" width="0.0248%" height="15" fill="rgb(254,73,53)" fg:x="50216" fg:w="27"/><text x="46.3781%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (20 samples, 0.02%)</title><rect x="46.1979%" y="165" width="0.0184%" height="15" fill="rgb(251,35,20)" fg:x="50292" fg:w="20"/><text x="46.4479%" y="175.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (20 samples, 0.02%)</title><rect x="46.1979%" y="149" width="0.0184%" height="15" fill="rgb(241,119,20)" fg:x="50292" fg:w="20"/><text x="46.4479%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (123 samples, 0.11%)</title><rect x="46.1796%" y="213" width="0.1130%" height="15" fill="rgb(207,102,14)" fg:x="50272" fg:w="123"/><text x="46.4296%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (121 samples, 0.11%)</title><rect x="46.1814%" y="197" width="0.1111%" height="15" fill="rgb(248,201,50)" fg:x="50274" fg:w="121"/><text x="46.4314%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (115 samples, 0.11%)</title><rect x="46.1869%" y="181" width="0.1056%" height="15" fill="rgb(222,185,44)" fg:x="50280" fg:w="115"/><text x="46.4369%" y="191.50"></text></g><g><title>snmalloc::FreeListIter::take (83 samples, 0.08%)</title><rect x="46.2163%" y="165" width="0.0762%" height="15" fill="rgb(218,107,18)" fg:x="50312" fg:w="83"/><text x="46.4663%" y="175.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (83 samples, 0.08%)</title><rect x="46.2163%" y="149" width="0.0762%" height="15" fill="rgb(237,177,39)" fg:x="50312" fg:w="83"/><text x="46.4663%" y="159.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (155 samples, 0.14%)</title><rect x="46.1529%" y="373" width="0.1424%" height="15" fill="rgb(246,69,6)" fg:x="50243" fg:w="155"/><text x="46.4029%" y="383.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (155 samples, 0.14%)</title><rect x="46.1529%" y="357" width="0.1424%" height="15" fill="rgb(234,208,37)" fg:x="50243" fg:w="155"/><text x="46.4029%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (155 samples, 0.14%)</title><rect x="46.1529%" y="341" width="0.1424%" height="15" fill="rgb(225,4,6)" fg:x="50243" fg:w="155"/><text x="46.4029%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (136 samples, 0.12%)</title><rect x="46.1704%" y="325" width="0.1249%" height="15" fill="rgb(233,45,0)" fg:x="50262" fg:w="136"/><text x="46.4204%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (136 samples, 0.12%)</title><rect x="46.1704%" y="309" width="0.1249%" height="15" fill="rgb(226,136,5)" fg:x="50262" fg:w="136"/><text x="46.4204%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (136 samples, 0.12%)</title><rect x="46.1704%" y="293" width="0.1249%" height="15" fill="rgb(211,91,47)" fg:x="50262" fg:w="136"/><text x="46.4204%" y="303.50"></text></g><g><title>alloc::alloc::alloc (136 samples, 0.12%)</title><rect x="46.1704%" y="277" width="0.1249%" height="15" fill="rgb(242,88,51)" fg:x="50262" fg:w="136"/><text x="46.4204%" y="287.50"></text></g><g><title>__rg_alloc (136 samples, 0.12%)</title><rect x="46.1704%" y="261" width="0.1249%" height="15" fill="rgb(230,91,28)" fg:x="50262" fg:w="136"/><text x="46.4204%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (136 samples, 0.12%)</title><rect x="46.1704%" y="245" width="0.1249%" height="15" fill="rgb(254,186,29)" fg:x="50262" fg:w="136"/><text x="46.4204%" y="255.50"></text></g><g><title>rust_alloc (129 samples, 0.12%)</title><rect x="46.1768%" y="229" width="0.1185%" height="15" fill="rgb(238,6,4)" fg:x="50269" fg:w="129"/><text x="46.4268%" y="239.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (25 samples, 0.02%)</title><rect x="46.3219%" y="309" width="0.0230%" height="15" fill="rgb(221,151,16)" fg:x="50427" fg:w="25"/><text x="46.5719%" y="319.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="46.3614%" y="213" width="0.0101%" height="15" fill="rgb(251,143,52)" fg:x="50470" fg:w="11"/><text x="46.6114%" y="223.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="46.3908%" y="165" width="0.0138%" height="15" fill="rgb(206,90,15)" fg:x="50502" fg:w="15"/><text x="46.6408%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (37 samples, 0.03%)</title><rect x="46.3752%" y="213" width="0.0340%" height="15" fill="rgb(218,35,8)" fg:x="50485" fg:w="37"/><text x="46.6252%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (37 samples, 0.03%)</title><rect x="46.3752%" y="197" width="0.0340%" height="15" fill="rgb(239,215,6)" fg:x="50485" fg:w="37"/><text x="46.6252%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (37 samples, 0.03%)</title><rect x="46.3752%" y="181" width="0.0340%" height="15" fill="rgb(245,116,39)" fg:x="50485" fg:w="37"/><text x="46.6252%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (58 samples, 0.05%)</title><rect x="46.3614%" y="245" width="0.0533%" height="15" fill="rgb(242,65,28)" fg:x="50470" fg:w="58"/><text x="46.6114%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (58 samples, 0.05%)</title><rect x="46.3614%" y="229" width="0.0533%" height="15" fill="rgb(252,132,53)" fg:x="50470" fg:w="58"/><text x="46.6114%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (66 samples, 0.06%)</title><rect x="46.3614%" y="277" width="0.0606%" height="15" fill="rgb(224,159,50)" fg:x="50470" fg:w="66"/><text x="46.6114%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (66 samples, 0.06%)</title><rect x="46.3614%" y="261" width="0.0606%" height="15" fill="rgb(224,93,4)" fg:x="50470" fg:w="66"/><text x="46.6114%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (84 samples, 0.08%)</title><rect x="46.3559%" y="293" width="0.0772%" height="15" fill="rgb(208,81,34)" fg:x="50464" fg:w="84"/><text x="46.6059%" y="303.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="46.4221%" y="277" width="0.0110%" height="15" fill="rgb(233,92,54)" fg:x="50536" fg:w="12"/><text x="46.6721%" y="287.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="46.4221%" y="261" width="0.0110%" height="15" fill="rgb(237,21,14)" fg:x="50536" fg:w="12"/><text x="46.6721%" y="271.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="46.4221%" y="245" width="0.0110%" height="15" fill="rgb(249,128,51)" fg:x="50536" fg:w="12"/><text x="46.6721%" y="255.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="46.4221%" y="229" width="0.0110%" height="15" fill="rgb(223,129,24)" fg:x="50536" fg:w="12"/><text x="46.6721%" y="239.50"></text></g><g><title>rust_dealloc (101 samples, 0.09%)</title><rect x="46.3449%" y="309" width="0.0928%" height="15" fill="rgb(231,168,25)" fg:x="50452" fg:w="101"/><text x="46.5949%" y="319.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (148 samples, 0.14%)</title><rect x="46.3063%" y="325" width="0.1360%" height="15" fill="rgb(224,39,20)" fg:x="50410" fg:w="148"/><text x="46.5563%" y="335.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (411 samples, 0.38%)</title><rect x="46.0987%" y="453" width="0.3775%" height="15" fill="rgb(225,152,53)" fg:x="50184" fg:w="411"/><text x="46.3487%" y="463.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (411 samples, 0.38%)</title><rect x="46.0987%" y="437" width="0.3775%" height="15" fill="rgb(252,17,24)" fg:x="50184" fg:w="411"/><text x="46.3487%" y="447.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (405 samples, 0.37%)</title><rect x="46.1042%" y="421" width="0.3720%" height="15" fill="rgb(250,114,30)" fg:x="50190" fg:w="405"/><text x="46.3542%" y="431.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (403 samples, 0.37%)</title><rect x="46.1061%" y="405" width="0.3702%" height="15" fill="rgb(229,5,4)" fg:x="50192" fg:w="403"/><text x="46.3561%" y="415.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (403 samples, 0.37%)</title><rect x="46.1061%" y="389" width="0.3702%" height="15" fill="rgb(225,176,49)" fg:x="50192" fg:w="403"/><text x="46.3561%" y="399.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (185 samples, 0.17%)</title><rect x="46.3063%" y="373" width="0.1699%" height="15" fill="rgb(224,221,49)" fg:x="50410" fg:w="185"/><text x="46.5563%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (185 samples, 0.17%)</title><rect x="46.3063%" y="357" width="0.1699%" height="15" fill="rgb(253,169,27)" fg:x="50410" fg:w="185"/><text x="46.5563%" y="367.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (185 samples, 0.17%)</title><rect x="46.3063%" y="341" width="0.1699%" height="15" fill="rgb(211,206,16)" fg:x="50410" fg:w="185"/><text x="46.5563%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (37 samples, 0.03%)</title><rect x="46.4423%" y="325" width="0.0340%" height="15" fill="rgb(244,87,35)" fg:x="50558" fg:w="37"/><text x="46.6923%" y="335.50"></text></g><g><title>core::ptr::read (37 samples, 0.03%)</title><rect x="46.4423%" y="309" width="0.0340%" height="15" fill="rgb(246,28,10)" fg:x="50558" fg:w="37"/><text x="46.6923%" y="319.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (17 samples, 0.02%)</title><rect x="46.4799%" y="421" width="0.0156%" height="15" fill="rgb(229,12,44)" fg:x="50599" fg:w="17"/><text x="46.7299%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (51 samples, 0.05%)</title><rect x="46.5534%" y="277" width="0.0468%" height="15" fill="rgb(210,145,37)" fg:x="50679" fg:w="51"/><text x="46.8034%" y="287.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (48 samples, 0.04%)</title><rect x="46.5562%" y="261" width="0.0441%" height="15" fill="rgb(227,112,52)" fg:x="50682" fg:w="48"/><text x="46.8062%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (97 samples, 0.09%)</title><rect x="46.5240%" y="325" width="0.0891%" height="15" fill="rgb(238,155,34)" fg:x="50647" fg:w="97"/><text x="46.7740%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (97 samples, 0.09%)</title><rect x="46.5240%" y="309" width="0.0891%" height="15" fill="rgb(239,226,36)" fg:x="50647" fg:w="97"/><text x="46.7740%" y="319.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (97 samples, 0.09%)</title><rect x="46.5240%" y="293" width="0.0891%" height="15" fill="rgb(230,16,23)" fg:x="50647" fg:w="97"/><text x="46.7740%" y="303.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="46.6003%" y="277" width="0.0129%" height="15" fill="rgb(236,171,36)" fg:x="50730" fg:w="14"/><text x="46.8503%" y="287.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="46.6003%" y="261" width="0.0129%" height="15" fill="rgb(221,22,14)" fg:x="50730" fg:w="14"/><text x="46.8503%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (143 samples, 0.13%)</title><rect x="46.5103%" y="357" width="0.1314%" height="15" fill="rgb(242,43,11)" fg:x="50632" fg:w="143"/><text x="46.7603%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (143 samples, 0.13%)</title><rect x="46.5103%" y="341" width="0.1314%" height="15" fill="rgb(232,69,23)" fg:x="50632" fg:w="143"/><text x="46.7603%" y="351.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (31 samples, 0.03%)</title><rect x="46.6131%" y="325" width="0.0285%" height="15" fill="rgb(216,180,54)" fg:x="50744" fg:w="31"/><text x="46.8631%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (149 samples, 0.14%)</title><rect x="46.5103%" y="389" width="0.1369%" height="15" fill="rgb(216,5,24)" fg:x="50632" fg:w="149"/><text x="46.7603%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (149 samples, 0.14%)</title><rect x="46.5103%" y="373" width="0.1369%" height="15" fill="rgb(225,89,9)" fg:x="50632" fg:w="149"/><text x="46.7603%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (165 samples, 0.15%)</title><rect x="46.5047%" y="405" width="0.1516%" height="15" fill="rgb(243,75,33)" fg:x="50626" fg:w="165"/><text x="46.7547%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (210 samples, 0.19%)</title><rect x="46.4763%" y="437" width="0.1929%" height="15" fill="rgb(247,141,45)" fg:x="50595" fg:w="210"/><text x="46.7263%" y="447.50"></text></g><g><title>rust_dealloc (189 samples, 0.17%)</title><rect x="46.4956%" y="421" width="0.1736%" height="15" fill="rgb(232,177,36)" fg:x="50616" fg:w="189"/><text x="46.7456%" y="431.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="46.6563%" y="405" width="0.0129%" height="15" fill="rgb(219,125,36)" fg:x="50791" fg:w="14"/><text x="46.9063%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (233 samples, 0.21%)</title><rect x="46.4763%" y="453" width="0.2140%" height="15" fill="rgb(227,94,9)" fg:x="50595" fg:w="233"/><text x="46.7263%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (23 samples, 0.02%)</title><rect x="46.6692%" y="437" width="0.0211%" height="15" fill="rgb(240,34,52)" fg:x="50805" fg:w="23"/><text x="46.9192%" y="447.50"></text></g><g><title>core::ptr::read (23 samples, 0.02%)</title><rect x="46.6692%" y="421" width="0.0211%" height="15" fill="rgb(216,45,12)" fg:x="50805" fg:w="23"/><text x="46.9192%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="46.7335%" y="277" width="0.0147%" height="15" fill="rgb(246,21,19)" fg:x="50875" fg:w="16"/><text x="46.9835%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (16 samples, 0.01%)</title><rect x="46.7335%" y="261" width="0.0147%" height="15" fill="rgb(213,98,42)" fg:x="50875" fg:w="16"/><text x="46.9835%" y="271.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (15 samples, 0.01%)</title><rect x="46.7344%" y="245" width="0.0138%" height="15" fill="rgb(250,136,47)" fg:x="50876" fg:w="15"/><text x="46.9844%" y="255.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (13 samples, 0.01%)</title><rect x="46.7362%" y="229" width="0.0119%" height="15" fill="rgb(251,124,27)" fg:x="50878" fg:w="13"/><text x="46.9862%" y="239.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (13 samples, 0.01%)</title><rect x="46.7362%" y="213" width="0.0119%" height="15" fill="rgb(229,180,14)" fg:x="50878" fg:w="13"/><text x="46.9862%" y="223.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (13 samples, 0.01%)</title><rect x="46.7362%" y="197" width="0.0119%" height="15" fill="rgb(245,216,25)" fg:x="50878" fg:w="13"/><text x="46.9862%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (289 samples, 0.27%)</title><rect x="46.7179%" y="325" width="0.2655%" height="15" fill="rgb(251,43,5)" fg:x="50858" fg:w="289"/><text x="46.9679%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (286 samples, 0.26%)</title><rect x="46.7206%" y="309" width="0.2627%" height="15" fill="rgb(250,128,24)" fg:x="50861" fg:w="286"/><text x="46.9706%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (277 samples, 0.25%)</title><rect x="46.7289%" y="293" width="0.2545%" height="15" fill="rgb(217,117,27)" fg:x="50870" fg:w="277"/><text x="46.9789%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (243 samples, 0.22%)</title><rect x="46.7601%" y="277" width="0.2232%" height="15" fill="rgb(245,147,4)" fg:x="50904" fg:w="243"/><text x="47.0101%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (243 samples, 0.22%)</title><rect x="46.7601%" y="261" width="0.2232%" height="15" fill="rgb(242,201,35)" fg:x="50904" fg:w="243"/><text x="47.0101%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (321 samples, 0.29%)</title><rect x="46.6903%" y="453" width="0.2949%" height="15" fill="rgb(218,181,1)" fg:x="50828" fg:w="321"/><text x="46.9403%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (301 samples, 0.28%)</title><rect x="46.7087%" y="437" width="0.2765%" height="15" fill="rgb(222,6,29)" fg:x="50848" fg:w="301"/><text x="46.9587%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (301 samples, 0.28%)</title><rect x="46.7087%" y="421" width="0.2765%" height="15" fill="rgb(208,186,3)" fg:x="50848" fg:w="301"/><text x="46.9587%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (301 samples, 0.28%)</title><rect x="46.7087%" y="405" width="0.2765%" height="15" fill="rgb(216,36,26)" fg:x="50848" fg:w="301"/><text x="46.9587%" y="415.50"></text></g><g><title>alloc::alloc::alloc (301 samples, 0.28%)</title><rect x="46.7087%" y="389" width="0.2765%" height="15" fill="rgb(248,201,23)" fg:x="50848" fg:w="301"/><text x="46.9587%" y="399.50"></text></g><g><title>__rg_alloc (301 samples, 0.28%)</title><rect x="46.7087%" y="373" width="0.2765%" height="15" fill="rgb(251,170,31)" fg:x="50848" fg:w="301"/><text x="46.9587%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (301 samples, 0.28%)</title><rect x="46.7087%" y="357" width="0.2765%" height="15" fill="rgb(207,110,25)" fg:x="50848" fg:w="301"/><text x="46.9587%" y="367.50"></text></g><g><title>rust_alloc (297 samples, 0.27%)</title><rect x="46.7124%" y="341" width="0.2728%" height="15" fill="rgb(250,54,15)" fg:x="50852" fg:w="297"/><text x="46.9624%" y="351.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_ref (13 samples, 0.01%)</title><rect x="47.2240%" y="373" width="0.0119%" height="15" fill="rgb(227,68,33)" fg:x="51409" fg:w="13"/><text x="47.4740%" y="383.50"></text></g><g><title>&lt;abi_stable::std_types::boxed::private::RBox&lt;T&gt; as abi_stable::pointer_trait::AsPtr&gt;::as_ptr (13 samples, 0.01%)</title><rect x="47.2240%" y="357" width="0.0119%" height="15" fill="rgb(238,34,41)" fg:x="51409" fg:w="13"/><text x="47.4740%" y="367.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (89 samples, 0.08%)</title><rect x="47.2360%" y="373" width="0.0818%" height="15" fill="rgb(220,11,15)" fg:x="51422" fg:w="89"/><text x="47.4860%" y="383.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (77 samples, 0.07%)</title><rect x="47.2470%" y="357" width="0.0707%" height="15" fill="rgb(246,111,35)" fg:x="51434" fg:w="77"/><text x="47.4970%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (47 samples, 0.04%)</title><rect x="47.2745%" y="341" width="0.0432%" height="15" fill="rgb(209,88,53)" fg:x="51464" fg:w="47"/><text x="47.5245%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (47 samples, 0.04%)</title><rect x="47.2745%" y="325" width="0.0432%" height="15" fill="rgb(231,185,47)" fg:x="51464" fg:w="47"/><text x="47.5245%" y="335.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (47 samples, 0.04%)</title><rect x="47.2745%" y="309" width="0.0432%" height="15" fill="rgb(233,154,1)" fg:x="51464" fg:w="47"/><text x="47.5245%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (47 samples, 0.04%)</title><rect x="47.2745%" y="293" width="0.0432%" height="15" fill="rgb(225,15,46)" fg:x="51464" fg:w="47"/><text x="47.5245%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (47 samples, 0.04%)</title><rect x="47.2745%" y="277" width="0.0432%" height="15" fill="rgb(211,135,41)" fg:x="51464" fg:w="47"/><text x="47.5245%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (119 samples, 0.11%)</title><rect x="47.2222%" y="421" width="0.1093%" height="15" fill="rgb(208,54,0)" fg:x="51407" fg:w="119"/><text x="47.4722%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (119 samples, 0.11%)</title><rect x="47.2222%" y="405" width="0.1093%" height="15" fill="rgb(244,136,14)" fg:x="51407" fg:w="119"/><text x="47.4722%" y="415.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (119 samples, 0.11%)</title><rect x="47.2222%" y="389" width="0.1093%" height="15" fill="rgb(241,56,14)" fg:x="51407" fg:w="119"/><text x="47.4722%" y="399.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (15 samples, 0.01%)</title><rect x="47.3177%" y="373" width="0.0138%" height="15" fill="rgb(205,80,24)" fg:x="51511" fg:w="15"/><text x="47.5677%" y="383.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (15 samples, 0.01%)</title><rect x="47.3177%" y="357" width="0.0138%" height="15" fill="rgb(220,57,4)" fg:x="51511" fg:w="15"/><text x="47.5677%" y="367.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (11 samples, 0.01%)</title><rect x="47.3214%" y="341" width="0.0101%" height="15" fill="rgb(226,193,50)" fg:x="51515" fg:w="11"/><text x="47.5714%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.01%)</title><rect x="47.3315%" y="421" width="0.0101%" height="15" fill="rgb(231,168,22)" fg:x="51526" fg:w="11"/><text x="47.5815%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="47.3563%" y="341" width="0.0101%" height="15" fill="rgb(254,215,14)" fg:x="51553" fg:w="11"/><text x="47.6063%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (429 samples, 0.39%)</title><rect x="46.9852%" y="453" width="0.3941%" height="15" fill="rgb(211,115,16)" fg:x="51149" fg:w="429"/><text x="47.2352%" y="463.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::FromIterator&lt;(K,V)&gt; for halfbrown::HashMap&lt;K,V,S&gt;&gt;::from_iter (429 samples, 0.39%)</title><rect x="46.9852%" y="437" width="0.3941%" height="15" fill="rgb(236,210,16)" fg:x="51149" fg:w="429"/><text x="47.2352%" y="447.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (41 samples, 0.04%)</title><rect x="47.3416%" y="421" width="0.0377%" height="15" fill="rgb(221,94,12)" fg:x="51537" fg:w="41"/><text x="47.5916%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (25 samples, 0.02%)</title><rect x="47.3563%" y="405" width="0.0230%" height="15" fill="rgb(235,218,49)" fg:x="51553" fg:w="25"/><text x="47.6063%" y="415.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::with_capacity (25 samples, 0.02%)</title><rect x="47.3563%" y="389" width="0.0230%" height="15" fill="rgb(217,114,14)" fg:x="51553" fg:w="25"/><text x="47.6063%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::with_capacity_in (25 samples, 0.02%)</title><rect x="47.3563%" y="373" width="0.0230%" height="15" fill="rgb(216,145,22)" fg:x="51553" fg:w="25"/><text x="47.6063%" y="383.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::fallible_with_capacity (25 samples, 0.02%)</title><rect x="47.3563%" y="357" width="0.0230%" height="15" fill="rgb(217,112,39)" fg:x="51553" fg:w="25"/><text x="47.6063%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (14 samples, 0.01%)</title><rect x="47.3664%" y="341" width="0.0129%" height="15" fill="rgb(225,85,32)" fg:x="51564" fg:w="14"/><text x="47.6164%" y="351.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (2,706 samples, 2.49%)</title><rect x="44.9073%" y="565" width="2.4857%" height="15" fill="rgb(245,209,47)" fg:x="48887" fg:w="2706"/><text x="45.1573%" y="575.50">tr..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2,706 samples, 2.49%)</title><rect x="44.9073%" y="549" width="2.4857%" height="15" fill="rgb(218,220,15)" fg:x="48887" fg:w="2706"/><text x="45.1573%" y="559.50">&lt;T..</text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkEventPayload&gt; for tremor_script::srs::EventPayload&gt;::from (1,518 samples, 1.39%)</title><rect x="45.9986%" y="533" width="1.3944%" height="15" fill="rgb(222,202,31)" fg:x="50075" fg:w="1518"/><text x="46.2486%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,518 samples, 1.39%)</title><rect x="45.9986%" y="517" width="1.3944%" height="15" fill="rgb(243,203,4)" fg:x="50075" fg:w="1518"/><text x="46.2486%" y="527.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkValueAndMeta&gt; for tremor_script::srs::ValueAndMeta&gt;::from (1,518 samples, 1.39%)</title><rect x="45.9986%" y="501" width="1.3944%" height="15" fill="rgb(237,92,17)" fg:x="50075" fg:w="1518"/><text x="46.2486%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,518 samples, 1.39%)</title><rect x="45.9986%" y="485" width="1.3944%" height="15" fill="rgb(231,119,7)" fg:x="50075" fg:w="1518"/><text x="46.2486%" y="495.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (1,518 samples, 1.39%)</title><rect x="45.9986%" y="469" width="1.3944%" height="15" fill="rgb(237,82,41)" fg:x="50075" fg:w="1518"/><text x="46.2486%" y="479.50"></text></g><g><title>tremor_value::pdk::conv_u8_inv (15 samples, 0.01%)</title><rect x="47.3793%" y="453" width="0.0138%" height="15" fill="rgb(226,81,48)" fg:x="51578" fg:w="15"/><text x="47.6293%" y="463.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="47.3793%" y="437" width="0.0138%" height="15" fill="rgb(234,70,51)" fg:x="51578" fg:w="15"/><text x="47.6293%" y="447.50"></text></g><g><title>abi_stable::std_types::cow::&lt;impl core::convert::From&lt;abi_stable::std_types::cow::RCow&lt;B&gt;&gt; for alloc::borrow::Cow&lt;B&gt;&gt;::from (15 samples, 0.01%)</title><rect x="47.3793%" y="421" width="0.0138%" height="15" fill="rgb(251,86,4)" fg:x="51578" fg:w="15"/><text x="47.6293%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (20 samples, 0.02%)</title><rect x="47.4031%" y="501" width="0.0184%" height="15" fill="rgb(244,144,28)" fg:x="51604" fg:w="20"/><text x="47.6531%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::result::RResult&lt;T,E&gt; as core::convert::From&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::from (20 samples, 0.02%)</title><rect x="47.4031%" y="485" width="0.0184%" height="15" fill="rgb(232,161,39)" fg:x="51604" fg:w="20"/><text x="47.6531%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (53 samples, 0.05%)</title><rect x="47.4215%" y="501" width="0.0487%" height="15" fill="rgb(247,34,51)" fg:x="51624" fg:w="53"/><text x="47.6715%" y="511.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (48 samples, 0.04%)</title><rect x="47.4261%" y="485" width="0.0441%" height="15" fill="rgb(225,132,2)" fg:x="51629" fg:w="48"/><text x="47.6761%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (45 samples, 0.04%)</title><rect x="47.4289%" y="469" width="0.0413%" height="15" fill="rgb(209,159,44)" fg:x="51632" fg:w="45"/><text x="47.6789%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (45 samples, 0.04%)</title><rect x="47.4289%" y="453" width="0.0413%" height="15" fill="rgb(251,214,1)" fg:x="51632" fg:w="45"/><text x="47.6789%" y="463.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (45 samples, 0.04%)</title><rect x="47.4289%" y="437" width="0.0413%" height="15" fill="rgb(247,84,47)" fg:x="51632" fg:w="45"/><text x="47.6789%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 0.02%)</title><rect x="47.4546%" y="421" width="0.0156%" height="15" fill="rgb(240,111,43)" fg:x="51660" fg:w="17"/><text x="47.7046%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="47.4546%" y="405" width="0.0156%" height="15" fill="rgb(215,214,35)" fg:x="51660" fg:w="17"/><text x="47.7046%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (176 samples, 0.16%)</title><rect x="47.5060%" y="485" width="0.1617%" height="15" fill="rgb(248,207,23)" fg:x="51716" fg:w="176"/><text x="47.7560%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (12 samples, 0.01%)</title><rect x="47.6677%" y="485" width="0.0110%" height="15" fill="rgb(214,186,4)" fg:x="51892" fg:w="12"/><text x="47.9177%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (488 samples, 0.45%)</title><rect x="47.6787%" y="485" width="0.4483%" height="15" fill="rgb(220,133,22)" fg:x="51904" fg:w="488"/><text x="47.9287%" y="495.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::clone::Clone&gt;::clone (72 samples, 0.07%)</title><rect x="48.1398%" y="485" width="0.0661%" height="15" fill="rgb(239,134,19)" fg:x="52406" fg:w="72"/><text x="48.3898%" y="495.50"></text></g><g><title>&lt;abi_stable::std_types::cow::RCow&lt;B&gt; as core::clone::Clone&gt;::clone (51 samples, 0.05%)</title><rect x="48.1591%" y="469" width="0.0468%" height="15" fill="rgb(250,140,9)" fg:x="52427" fg:w="51"/><text x="48.4091%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (20 samples, 0.02%)</title><rect x="48.2060%" y="485" width="0.0184%" height="15" fill="rgb(225,59,14)" fg:x="52478" fg:w="20"/><text x="48.4560%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (4,545 samples, 4.18%)</title><rect x="44.0539%" y="853" width="4.1750%" height="15" fill="rgb(214,152,51)" fg:x="47958" fg:w="4545"/><text x="44.3039%" y="863.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,616 samples, 3.32%)</title><rect x="44.9073%" y="837" width="3.3216%" height="15" fill="rgb(251,227,43)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="847.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (3,616 samples, 3.32%)</title><rect x="44.9073%" y="821" width="3.3216%" height="15" fill="rgb(241,96,17)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="831.50">tre..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,616 samples, 3.32%)</title><rect x="44.9073%" y="805" width="3.3216%" height="15" fill="rgb(234,198,43)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="815.50">&lt;as..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,616 samples, 3.32%)</title><rect x="44.9073%" y="789" width="3.3216%" height="15" fill="rgb(220,108,29)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="799.50">&lt;as..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (3,616 samples, 3.32%)</title><rect x="44.9073%" y="773" width="3.3216%" height="15" fill="rgb(226,163,33)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="783.50">&lt;co..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,616 samples, 3.32%)</title><rect x="44.9073%" y="757" width="3.3216%" height="15" fill="rgb(205,194,45)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="767.50">&lt;as..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (3,616 samples, 3.32%)</title><rect x="44.9073%" y="741" width="3.3216%" height="15" fill="rgb(206,143,44)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="751.50">asy..</text></g><g><title>std::panic::catch_unwind (3,616 samples, 3.32%)</title><rect x="44.9073%" y="725" width="3.3216%" height="15" fill="rgb(236,136,36)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="735.50">std..</text></g><g><title>std::panicking::try (3,616 samples, 3.32%)</title><rect x="44.9073%" y="709" width="3.3216%" height="15" fill="rgb(249,172,42)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="719.50">std..</text></g><g><title>std::panicking::try::do_call (3,616 samples, 3.32%)</title><rect x="44.9073%" y="693" width="3.3216%" height="15" fill="rgb(216,139,23)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="703.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,616 samples, 3.32%)</title><rect x="44.9073%" y="677" width="3.3216%" height="15" fill="rgb(207,166,20)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="687.50">&lt;co..</text></g><g><title>core::ops::function::FnOnce::call_once (3,616 samples, 3.32%)</title><rect x="44.9073%" y="661" width="3.3216%" height="15" fill="rgb(210,209,22)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="671.50">cor..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (3,616 samples, 3.32%)</title><rect x="44.9073%" y="645" width="3.3216%" height="15" fill="rgb(232,118,20)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="655.50">asy..</text></g><g><title>async_ffi::FfiContext::with_context (3,616 samples, 3.32%)</title><rect x="44.9073%" y="629" width="3.3216%" height="15" fill="rgb(238,113,42)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="639.50">asy..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (3,616 samples, 3.32%)</title><rect x="44.9073%" y="613" width="3.3216%" height="15" fill="rgb(231,42,5)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="623.50">asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,616 samples, 3.32%)</title><rect x="44.9073%" y="597" width="3.3216%" height="15" fill="rgb(243,166,24)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="607.50">&lt;co..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (3,616 samples, 3.32%)</title><rect x="44.9073%" y="581" width="3.3216%" height="15" fill="rgb(237,226,12)" fg:x="48887" fg:w="3616"/><text x="45.1573%" y="591.50">&lt;tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (909 samples, 0.84%)</title><rect x="47.3939%" y="565" width="0.8350%" height="15" fill="rgb(229,133,24)" fg:x="51594" fg:w="909"/><text x="47.6439%" y="575.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (909 samples, 0.84%)</title><rect x="47.3939%" y="549" width="0.8350%" height="15" fill="rgb(238,33,43)" fg:x="51594" fg:w="909"/><text x="47.6439%" y="559.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (909 samples, 0.84%)</title><rect x="47.3939%" y="533" width="0.8350%" height="15" fill="rgb(227,59,38)" fg:x="51594" fg:w="909"/><text x="47.6439%" y="543.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (909 samples, 0.84%)</title><rect x="47.3939%" y="517" width="0.8350%" height="15" fill="rgb(230,97,0)" fg:x="51594" fg:w="909"/><text x="47.6439%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (826 samples, 0.76%)</title><rect x="47.4702%" y="501" width="0.7588%" height="15" fill="rgb(250,173,50)" fg:x="51677" fg:w="826"/><text x="47.7202%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (50 samples, 0.05%)</title><rect x="48.2290%" y="853" width="0.0459%" height="15" fill="rgb(240,15,50)" fg:x="52503" fg:w="50"/><text x="48.4790%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (275 samples, 0.25%)</title><rect x="49.7217%" y="805" width="0.2526%" height="15" fill="rgb(221,93,22)" fg:x="54128" fg:w="275"/><text x="49.9717%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (267 samples, 0.25%)</title><rect x="49.7290%" y="789" width="0.2453%" height="15" fill="rgb(245,180,53)" fg:x="54136" fg:w="267"/><text x="49.9790%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (250 samples, 0.23%)</title><rect x="49.7446%" y="773" width="0.2296%" height="15" fill="rgb(231,88,51)" fg:x="54153" fg:w="250"/><text x="49.9946%" y="783.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (307 samples, 0.28%)</title><rect x="49.9825%" y="741" width="0.2820%" height="15" fill="rgb(240,58,21)" fg:x="54412" fg:w="307"/><text x="50.2325%" y="751.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (337 samples, 0.31%)</title><rect x="49.9743%" y="773" width="0.3096%" height="15" fill="rgb(237,21,10)" fg:x="54403" fg:w="337"/><text x="50.2243%" y="783.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (328 samples, 0.30%)</title><rect x="49.9825%" y="757" width="0.3013%" height="15" fill="rgb(218,43,11)" fg:x="54412" fg:w="328"/><text x="50.2325%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (21 samples, 0.02%)</title><rect x="50.2646%" y="741" width="0.0193%" height="15" fill="rgb(218,221,29)" fg:x="54719" fg:w="21"/><text x="50.5146%" y="751.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (292 samples, 0.27%)</title><rect x="50.3463%" y="693" width="0.2682%" height="15" fill="rgb(214,118,42)" fg:x="54808" fg:w="292"/><text x="50.5963%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (267 samples, 0.25%)</title><rect x="50.3693%" y="677" width="0.2453%" height="15" fill="rgb(251,200,26)" fg:x="54833" fg:w="267"/><text x="50.6193%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (293 samples, 0.27%)</title><rect x="50.3463%" y="725" width="0.2691%" height="15" fill="rgb(237,101,39)" fg:x="54808" fg:w="293"/><text x="50.5963%" y="735.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (293 samples, 0.27%)</title><rect x="50.3463%" y="709" width="0.2691%" height="15" fill="rgb(251,117,11)" fg:x="54808" fg:w="293"/><text x="50.5963%" y="719.50"></text></g><g><title>async_ffi::FfiContext::with_context (14 samples, 0.01%)</title><rect x="50.6155%" y="629" width="0.0129%" height="15" fill="rgb(216,223,23)" fg:x="55101" fg:w="14"/><text x="50.8655%" y="639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.02%)</title><rect x="50.6155%" y="677" width="0.0230%" height="15" fill="rgb(251,54,12)" fg:x="55101" fg:w="25"/><text x="50.8655%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (25 samples, 0.02%)</title><rect x="50.6155%" y="661" width="0.0230%" height="15" fill="rgb(254,176,54)" fg:x="55101" fg:w="25"/><text x="50.8655%" y="671.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (25 samples, 0.02%)</title><rect x="50.6155%" y="645" width="0.0230%" height="15" fill="rgb(210,32,8)" fg:x="55101" fg:w="25"/><text x="50.8655%" y="655.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (11 samples, 0.01%)</title><rect x="50.6283%" y="629" width="0.0101%" height="15" fill="rgb(235,52,38)" fg:x="55115" fg:w="11"/><text x="50.8783%" y="639.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (857 samples, 0.79%)</title><rect x="50.3013%" y="757" width="0.7872%" height="15" fill="rgb(231,4,44)" fg:x="54759" fg:w="857"/><text x="50.5513%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (829 samples, 0.76%)</title><rect x="50.3270%" y="741" width="0.7615%" height="15" fill="rgb(249,2,32)" fg:x="54787" fg:w="829"/><text x="50.5770%" y="751.50"></text></g><g><title>std::panic::catch_unwind (515 samples, 0.47%)</title><rect x="50.6155%" y="725" width="0.4731%" height="15" fill="rgb(224,65,26)" fg:x="55101" fg:w="515"/><text x="50.8655%" y="735.50"></text></g><g><title>std::panicking::try (515 samples, 0.47%)</title><rect x="50.6155%" y="709" width="0.4731%" height="15" fill="rgb(250,73,40)" fg:x="55101" fg:w="515"/><text x="50.8655%" y="719.50"></text></g><g><title>std::panicking::try::do_call (515 samples, 0.47%)</title><rect x="50.6155%" y="693" width="0.4731%" height="15" fill="rgb(253,177,16)" fg:x="55101" fg:w="515"/><text x="50.8655%" y="703.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (490 samples, 0.45%)</title><rect x="50.6384%" y="677" width="0.4501%" height="15" fill="rgb(217,32,34)" fg:x="55126" fg:w="490"/><text x="50.8884%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned_erms (150 samples, 0.14%)</title><rect x="50.9507%" y="661" width="0.1378%" height="15" fill="rgb(212,7,10)" fg:x="55466" fg:w="150"/><text x="51.2007%" y="671.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (877 samples, 0.81%)</title><rect x="50.2838%" y="773" width="0.8056%" height="15" fill="rgb(245,89,8)" fg:x="54740" fg:w="877"/><text x="50.5338%" y="783.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,477 samples, 1.36%)</title><rect x="49.9743%" y="805" width="1.3568%" height="15" fill="rgb(237,16,53)" fg:x="54403" fg:w="1477"/><text x="50.2243%" y="815.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,477 samples, 1.36%)</title><rect x="49.9743%" y="789" width="1.3568%" height="15" fill="rgb(250,204,30)" fg:x="54403" fg:w="1477"/><text x="50.2243%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (263 samples, 0.24%)</title><rect x="51.0895%" y="773" width="0.2416%" height="15" fill="rgb(208,77,27)" fg:x="55617" fg:w="263"/><text x="51.3395%" y="783.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (74 samples, 0.07%)</title><rect x="51.3310%" y="805" width="0.0680%" height="15" fill="rgb(250,204,28)" fg:x="55880" fg:w="74"/><text x="51.5810%" y="815.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (31 samples, 0.03%)</title><rect x="51.4128%" y="757" width="0.0285%" height="15" fill="rgb(244,63,21)" fg:x="55969" fg:w="31"/><text x="51.6628%" y="767.50"></text></g><g><title>async_ffi::DropBomb::with (20 samples, 0.02%)</title><rect x="51.4229%" y="741" width="0.0184%" height="15" fill="rgb(236,85,44)" fg:x="55980" fg:w="20"/><text x="51.6729%" y="751.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (19 samples, 0.02%)</title><rect x="51.4238%" y="725" width="0.0175%" height="15" fill="rgb(215,98,4)" fg:x="55981" fg:w="19"/><text x="51.6738%" y="735.50"></text></g><g><title>core::mem::drop (19 samples, 0.02%)</title><rect x="51.4238%" y="709" width="0.0175%" height="15" fill="rgb(235,38,11)" fg:x="55981" fg:w="19"/><text x="51.6738%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}}&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="51.4238%" y="693" width="0.0175%" height="15" fill="rgb(254,186,25)" fg:x="55981" fg:w="19"/><text x="51.6738%" y="703.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="51.4514%" y="661" width="0.0119%" height="15" fill="rgb(225,55,31)" fg:x="56011" fg:w="13"/><text x="51.7014%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="51.4642%" y="661" width="0.0285%" height="15" fill="rgb(211,15,21)" fg:x="56025" fg:w="31"/><text x="51.7142%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="51.4642%" y="645" width="0.0285%" height="15" fill="rgb(215,187,41)" fg:x="56025" fg:w="31"/><text x="51.7142%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (30 samples, 0.03%)</title><rect x="51.4652%" y="629" width="0.0276%" height="15" fill="rgb(248,69,32)" fg:x="56026" fg:w="30"/><text x="51.7152%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (49 samples, 0.05%)</title><rect x="51.4514%" y="693" width="0.0450%" height="15" fill="rgb(252,102,52)" fg:x="56011" fg:w="49"/><text x="51.7014%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (49 samples, 0.05%)</title><rect x="51.4514%" y="677" width="0.0450%" height="15" fill="rgb(253,140,32)" fg:x="56011" fg:w="49"/><text x="51.7014%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (54 samples, 0.05%)</title><rect x="51.4514%" y="725" width="0.0496%" height="15" fill="rgb(216,56,42)" fg:x="56011" fg:w="54"/><text x="51.7014%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (54 samples, 0.05%)</title><rect x="51.4514%" y="709" width="0.0496%" height="15" fill="rgb(216,184,14)" fg:x="56011" fg:w="54"/><text x="51.7014%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (63 samples, 0.06%)</title><rect x="51.4505%" y="741" width="0.0579%" height="15" fill="rgb(237,187,27)" fg:x="56010" fg:w="63"/><text x="51.7005%" y="751.50"></text></g><g><title>rust_dealloc (91 samples, 0.08%)</title><rect x="51.4413%" y="757" width="0.0836%" height="15" fill="rgb(219,65,3)" fg:x="56000" fg:w="91"/><text x="51.6913%" y="767.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (18 samples, 0.02%)</title><rect x="51.5083%" y="741" width="0.0165%" height="15" fill="rgb(245,83,25)" fg:x="56073" fg:w="18"/><text x="51.7583%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (148 samples, 0.14%)</title><rect x="51.3990%" y="805" width="0.1360%" height="15" fill="rgb(214,205,45)" fg:x="55954" fg:w="148"/><text x="51.6490%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (148 samples, 0.14%)</title><rect x="51.3990%" y="789" width="0.1360%" height="15" fill="rgb(241,20,18)" fg:x="55954" fg:w="148"/><text x="51.6490%" y="799.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (148 samples, 0.14%)</title><rect x="51.3990%" y="773" width="0.1360%" height="15" fill="rgb(232,163,23)" fg:x="55954" fg:w="148"/><text x="51.6490%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (11 samples, 0.01%)</title><rect x="51.5249%" y="757" width="0.0101%" height="15" fill="rgb(214,5,46)" fg:x="56091" fg:w="11"/><text x="51.7749%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="51.6075%" y="501" width="0.0138%" height="15" fill="rgb(229,78,17)" fg:x="56181" fg:w="15"/><text x="51.8575%" y="511.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (13 samples, 0.01%)</title><rect x="51.6305%" y="485" width="0.0119%" height="15" fill="rgb(248,89,10)" fg:x="56206" fg:w="13"/><text x="51.8805%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (116 samples, 0.11%)</title><rect x="51.6066%" y="533" width="0.1066%" height="15" fill="rgb(248,54,15)" fg:x="56180" fg:w="116"/><text x="51.8566%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (116 samples, 0.11%)</title><rect x="51.6066%" y="517" width="0.1066%" height="15" fill="rgb(223,116,6)" fg:x="56180" fg:w="116"/><text x="51.8566%" y="527.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (100 samples, 0.09%)</title><rect x="51.6213%" y="501" width="0.0919%" height="15" fill="rgb(205,125,38)" fg:x="56196" fg:w="100"/><text x="51.8713%" y="511.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (77 samples, 0.07%)</title><rect x="51.6424%" y="485" width="0.0707%" height="15" fill="rgb(251,78,38)" fg:x="56219" fg:w="77"/><text x="51.8924%" y="495.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (77 samples, 0.07%)</title><rect x="51.6424%" y="469" width="0.0707%" height="15" fill="rgb(253,78,28)" fg:x="56219" fg:w="77"/><text x="51.8924%" y="479.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (77 samples, 0.07%)</title><rect x="51.6424%" y="453" width="0.0707%" height="15" fill="rgb(209,120,3)" fg:x="56219" fg:w="77"/><text x="51.8924%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="51.7169%" y="533" width="0.0404%" height="15" fill="rgb(238,229,9)" fg:x="56300" fg:w="44"/><text x="51.9669%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="51.7169%" y="517" width="0.0404%" height="15" fill="rgb(253,159,18)" fg:x="56300" fg:w="44"/><text x="51.9669%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="51.7169%" y="501" width="0.0404%" height="15" fill="rgb(244,42,34)" fg:x="56300" fg:w="44"/><text x="51.9669%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="51.7224%" y="485" width="0.0349%" height="15" fill="rgb(224,8,7)" fg:x="56306" fg:w="38"/><text x="51.9724%" y="495.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (34 samples, 0.03%)</title><rect x="51.7260%" y="469" width="0.0312%" height="15" fill="rgb(210,201,45)" fg:x="56310" fg:w="34"/><text x="51.9760%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (16 samples, 0.01%)</title><rect x="51.7426%" y="453" width="0.0147%" height="15" fill="rgb(252,185,21)" fg:x="56328" fg:w="16"/><text x="51.9926%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="51.7426%" y="437" width="0.0147%" height="15" fill="rgb(223,131,1)" fg:x="56328" fg:w="16"/><text x="51.9926%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (247 samples, 0.23%)</title><rect x="51.5956%" y="581" width="0.2269%" height="15" fill="rgb(245,141,16)" fg:x="56168" fg:w="247"/><text x="51.8456%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (247 samples, 0.23%)</title><rect x="51.5956%" y="565" width="0.2269%" height="15" fill="rgb(229,55,45)" fg:x="56168" fg:w="247"/><text x="51.8456%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (238 samples, 0.22%)</title><rect x="51.6039%" y="549" width="0.2186%" height="15" fill="rgb(208,92,15)" fg:x="56177" fg:w="238"/><text x="51.8539%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::take (64 samples, 0.06%)</title><rect x="51.7637%" y="533" width="0.0588%" height="15" fill="rgb(234,185,47)" fg:x="56351" fg:w="64"/><text x="52.0137%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (64 samples, 0.06%)</title><rect x="51.7637%" y="517" width="0.0588%" height="15" fill="rgb(253,104,50)" fg:x="56351" fg:w="64"/><text x="52.0137%" y="527.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (306 samples, 0.28%)</title><rect x="51.5497%" y="789" width="0.2811%" height="15" fill="rgb(205,70,7)" fg:x="56118" fg:w="306"/><text x="51.7997%" y="799.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (278 samples, 0.26%)</title><rect x="51.5754%" y="773" width="0.2554%" height="15" fill="rgb(240,178,43)" fg:x="56146" fg:w="278"/><text x="51.8254%" y="783.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (278 samples, 0.26%)</title><rect x="51.5754%" y="757" width="0.2554%" height="15" fill="rgb(214,112,2)" fg:x="56146" fg:w="278"/><text x="51.8254%" y="767.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (278 samples, 0.26%)</title><rect x="51.5754%" y="741" width="0.2554%" height="15" fill="rgb(206,46,17)" fg:x="56146" fg:w="278"/><text x="51.8254%" y="751.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (278 samples, 0.26%)</title><rect x="51.5754%" y="725" width="0.2554%" height="15" fill="rgb(225,220,16)" fg:x="56146" fg:w="278"/><text x="51.8254%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (278 samples, 0.26%)</title><rect x="51.5754%" y="709" width="0.2554%" height="15" fill="rgb(238,65,40)" fg:x="56146" fg:w="278"/><text x="51.8254%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (270 samples, 0.25%)</title><rect x="51.5827%" y="693" width="0.2480%" height="15" fill="rgb(230,151,21)" fg:x="56154" fg:w="270"/><text x="51.8327%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (270 samples, 0.25%)</title><rect x="51.5827%" y="677" width="0.2480%" height="15" fill="rgb(218,58,49)" fg:x="56154" fg:w="270"/><text x="51.8327%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (270 samples, 0.25%)</title><rect x="51.5827%" y="661" width="0.2480%" height="15" fill="rgb(219,179,14)" fg:x="56154" fg:w="270"/><text x="51.8327%" y="671.50"></text></g><g><title>alloc::alloc::alloc (265 samples, 0.24%)</title><rect x="51.5873%" y="645" width="0.2434%" height="15" fill="rgb(223,72,1)" fg:x="56159" fg:w="265"/><text x="51.8373%" y="655.50"></text></g><g><title>__rg_alloc (265 samples, 0.24%)</title><rect x="51.5873%" y="629" width="0.2434%" height="15" fill="rgb(238,126,10)" fg:x="56159" fg:w="265"/><text x="51.8373%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (265 samples, 0.24%)</title><rect x="51.5873%" y="613" width="0.2434%" height="15" fill="rgb(224,206,38)" fg:x="56159" fg:w="265"/><text x="51.8373%" y="623.50"></text></g><g><title>rust_alloc (264 samples, 0.24%)</title><rect x="51.5882%" y="597" width="0.2425%" height="15" fill="rgb(212,201,54)" fg:x="56160" fg:w="264"/><text x="51.8382%" y="607.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (3,117 samples, 2.86%)</title><rect x="49.0235%" y="821" width="2.8633%" height="15" fill="rgb(218,154,48)" fg:x="53368" fg:w="3117"/><text x="49.2735%" y="831.50">tr..</text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_TO&lt;_ErasedPtr&gt;::pull_data (383 samples, 0.35%)</title><rect x="51.5350%" y="805" width="0.3518%" height="15" fill="rgb(232,93,24)" fg:x="56102" fg:w="383"/><text x="51.7850%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::_::&lt;impl tremor_runtime::connectors::source::RawSource_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::pull_data (56 samples, 0.05%)</title><rect x="51.8354%" y="789" width="0.0514%" height="15" fill="rgb(245,30,21)" fg:x="56429" fg:w="56"/><text x="52.0854%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::needs_control_plane_msg (325 samples, 0.30%)</title><rect x="51.9373%" y="805" width="0.2985%" height="15" fill="rgb(242,148,29)" fg:x="56540" fg:w="325"/><text x="52.1873%" y="815.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (313 samples, 0.29%)</title><rect x="51.9483%" y="789" width="0.2875%" height="15" fill="rgb(244,153,54)" fg:x="56552" fg:w="313"/><text x="52.1983%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (299 samples, 0.27%)</title><rect x="51.9612%" y="773" width="0.2747%" height="15" fill="rgb(252,87,22)" fg:x="56566" fg:w="299"/><text x="52.2112%" y="783.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (181 samples, 0.17%)</title><rect x="52.0696%" y="757" width="0.1663%" height="15" fill="rgb(210,51,29)" fg:x="56684" fg:w="181"/><text x="52.3196%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (170 samples, 0.16%)</title><rect x="52.0797%" y="741" width="0.1562%" height="15" fill="rgb(242,136,47)" fg:x="56695" fg:w="170"/><text x="52.3297%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (170 samples, 0.16%)</title><rect x="52.0797%" y="725" width="0.1562%" height="15" fill="rgb(238,68,4)" fg:x="56695" fg:w="170"/><text x="52.3297%" y="735.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::control_plane::{{closure}} (381 samples, 0.35%)</title><rect x="51.8868%" y="821" width="0.3500%" height="15" fill="rgb(242,161,30)" fg:x="56485" fg:w="381"/><text x="52.1368%" y="831.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (12 samples, 0.01%)</title><rect x="53.1940%" y="789" width="0.0110%" height="15" fill="rgb(218,58,44)" fg:x="57908" fg:w="12"/><text x="53.4440%" y="799.50"></text></g><g><title>&lt;abi_stable::std_types::utypeid::UTypeId as core::cmp::PartialEq&gt;::eq (252 samples, 0.23%)</title><rect x="53.2610%" y="741" width="0.2315%" height="15" fill="rgb(252,125,32)" fg:x="57981" fg:w="252"/><text x="53.5110%" y="751.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (244 samples, 0.22%)</title><rect x="53.2684%" y="725" width="0.2241%" height="15" fill="rgb(219,178,0)" fg:x="57989" fg:w="244"/><text x="53.5184%" y="735.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (244 samples, 0.22%)</title><rect x="53.2684%" y="709" width="0.2241%" height="15" fill="rgb(213,152,7)" fg:x="57989" fg:w="244"/><text x="53.5184%" y="719.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (44 samples, 0.04%)</title><rect x="53.4925%" y="741" width="0.0404%" height="15" fill="rgb(249,109,34)" fg:x="58233" fg:w="44"/><text x="53.7425%" y="751.50"></text></g><g><title>abi_stable::std_types::utypeid::new_utypeid (30 samples, 0.03%)</title><rect x="53.5054%" y="725" width="0.0276%" height="15" fill="rgb(232,96,21)" fg:x="58247" fg:w="30"/><text x="53.7554%" y="735.50"></text></g><g><title>abi_stable::std_types::utypeid::UTypeId::new (20 samples, 0.02%)</title><rect x="53.5145%" y="709" width="0.0184%" height="15" fill="rgb(228,27,39)" fg:x="58257" fg:w="20"/><text x="53.7645%" y="719.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (304 samples, 0.28%)</title><rect x="53.2610%" y="757" width="0.2793%" height="15" fill="rgb(211,182,52)" fg:x="57981" fg:w="304"/><text x="53.5110%" y="767.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (409 samples, 0.38%)</title><rect x="53.1811%" y="805" width="0.3757%" height="15" fill="rgb(234,178,38)" fg:x="57894" fg:w="409"/><text x="53.4311%" y="815.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::convert::From&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (383 samples, 0.35%)</title><rect x="53.2050%" y="789" width="0.3518%" height="15" fill="rgb(221,111,3)" fg:x="57920" fg:w="383"/><text x="53.4550%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (362 samples, 0.33%)</title><rect x="53.2243%" y="773" width="0.3325%" height="15" fill="rgb(228,175,21)" fg:x="57941" fg:w="362"/><text x="53.4743%" y="783.50"></text></g><g><title>core::ptr::eq (11 samples, 0.01%)</title><rect x="53.5467%" y="757" width="0.0101%" height="15" fill="rgb(228,174,43)" fg:x="58292" fg:w="11"/><text x="53.7967%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="53.5568%" y="805" width="0.0119%" height="15" fill="rgb(211,191,0)" fg:x="58303" fg:w="13"/><text x="53.8068%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="53.5687%" y="805" width="0.0101%" height="15" fill="rgb(253,117,3)" fg:x="58316" fg:w="11"/><text x="53.8187%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (783 samples, 0.72%)</title><rect x="53.5788%" y="805" width="0.7193%" height="15" fill="rgb(241,127,19)" fg:x="58327" fg:w="783"/><text x="53.8288%" y="815.50"></text></g><g><title>abi_stable::std_types::option::ROption&lt;T&gt;::map (22 samples, 0.02%)</title><rect x="54.2981%" y="805" width="0.0202%" height="15" fill="rgb(218,103,12)" fg:x="59110" fg:w="22"/><text x="54.5481%" y="815.50"></text></g><g><title>rust_alloc (16 samples, 0.01%)</title><rect x="54.3541%" y="613" width="0.0147%" height="15" fill="rgb(236,214,43)" fg:x="59171" fg:w="16"/><text x="54.6041%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="54.3808%" y="533" width="0.0138%" height="15" fill="rgb(244,144,19)" fg:x="59200" fg:w="15"/><text x="54.6308%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.08%)</title><rect x="54.3808%" y="565" width="0.0818%" height="15" fill="rgb(246,188,10)" fg:x="59200" fg:w="89"/><text x="54.6308%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (89 samples, 0.08%)</title><rect x="54.3808%" y="549" width="0.0818%" height="15" fill="rgb(212,193,33)" fg:x="59200" fg:w="89"/><text x="54.6308%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (74 samples, 0.07%)</title><rect x="54.3946%" y="533" width="0.0680%" height="15" fill="rgb(241,51,29)" fg:x="59215" fg:w="74"/><text x="54.6446%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (60 samples, 0.06%)</title><rect x="54.4074%" y="517" width="0.0551%" height="15" fill="rgb(211,58,19)" fg:x="59229" fg:w="60"/><text x="54.6574%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (60 samples, 0.06%)</title><rect x="54.4074%" y="501" width="0.0551%" height="15" fill="rgb(229,111,26)" fg:x="59229" fg:w="60"/><text x="54.6574%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (60 samples, 0.06%)</title><rect x="54.4074%" y="485" width="0.0551%" height="15" fill="rgb(213,115,40)" fg:x="59229" fg:w="60"/><text x="54.6574%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::empty (12 samples, 0.01%)</title><rect x="54.4754%" y="565" width="0.0110%" height="15" fill="rgb(209,56,44)" fg:x="59303" fg:w="12"/><text x="54.7254%" y="575.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (12 samples, 0.01%)</title><rect x="54.4754%" y="549" width="0.0110%" height="15" fill="rgb(230,108,32)" fg:x="59303" fg:w="12"/><text x="54.7254%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (262 samples, 0.24%)</title><rect x="54.3688%" y="613" width="0.2407%" height="15" fill="rgb(216,165,31)" fg:x="59187" fg:w="262"/><text x="54.6188%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (262 samples, 0.24%)</title><rect x="54.3688%" y="597" width="0.2407%" height="15" fill="rgb(218,122,21)" fg:x="59187" fg:w="262"/><text x="54.6188%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (252 samples, 0.23%)</title><rect x="54.3780%" y="581" width="0.2315%" height="15" fill="rgb(223,224,47)" fg:x="59197" fg:w="252"/><text x="54.6280%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (134 samples, 0.12%)</title><rect x="54.4864%" y="565" width="0.1231%" height="15" fill="rgb(238,102,44)" fg:x="59315" fg:w="134"/><text x="54.7364%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (134 samples, 0.12%)</title><rect x="54.4864%" y="549" width="0.1231%" height="15" fill="rgb(236,46,40)" fg:x="59315" fg:w="134"/><text x="54.7364%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (310 samples, 0.28%)</title><rect x="54.3303%" y="741" width="0.2848%" height="15" fill="rgb(247,202,50)" fg:x="59145" fg:w="310"/><text x="54.5803%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (298 samples, 0.27%)</title><rect x="54.3413%" y="725" width="0.2737%" height="15" fill="rgb(209,99,20)" fg:x="59157" fg:w="298"/><text x="54.5913%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (298 samples, 0.27%)</title><rect x="54.3413%" y="709" width="0.2737%" height="15" fill="rgb(252,27,34)" fg:x="59157" fg:w="298"/><text x="54.5913%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (298 samples, 0.27%)</title><rect x="54.3413%" y="693" width="0.2737%" height="15" fill="rgb(215,206,23)" fg:x="59157" fg:w="298"/><text x="54.5913%" y="703.50"></text></g><g><title>alloc::alloc::alloc (293 samples, 0.27%)</title><rect x="54.3459%" y="677" width="0.2691%" height="15" fill="rgb(212,135,36)" fg:x="59162" fg:w="293"/><text x="54.5959%" y="687.50"></text></g><g><title>__rg_alloc (293 samples, 0.27%)</title><rect x="54.3459%" y="661" width="0.2691%" height="15" fill="rgb(240,189,1)" fg:x="59162" fg:w="293"/><text x="54.5959%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (293 samples, 0.27%)</title><rect x="54.3459%" y="645" width="0.2691%" height="15" fill="rgb(242,56,20)" fg:x="59162" fg:w="293"/><text x="54.5959%" y="655.50"></text></g><g><title>rust_alloc (284 samples, 0.26%)</title><rect x="54.3541%" y="629" width="0.2609%" height="15" fill="rgb(247,132,33)" fg:x="59171" fg:w="284"/><text x="54.6041%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (331 samples, 0.30%)</title><rect x="54.3220%" y="805" width="0.3041%" height="15" fill="rgb(208,149,11)" fg:x="59136" fg:w="331"/><text x="54.5720%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (322 samples, 0.30%)</title><rect x="54.3303%" y="789" width="0.2958%" height="15" fill="rgb(211,33,11)" fg:x="59145" fg:w="322"/><text x="54.5803%" y="799.50"></text></g><g><title>value_trait::Builder::object (322 samples, 0.30%)</title><rect x="54.3303%" y="773" width="0.2958%" height="15" fill="rgb(221,29,38)" fg:x="59145" fg:w="322"/><text x="54.5803%" y="783.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (322 samples, 0.30%)</title><rect x="54.3303%" y="757" width="0.2958%" height="15" fill="rgb(206,182,49)" fg:x="59145" fg:w="322"/><text x="54.5803%" y="767.50"></text></g><g><title>tremor_value::value::Value::Object (12 samples, 0.01%)</title><rect x="54.6150%" y="741" width="0.0110%" height="15" fill="rgb(216,140,1)" fg:x="59455" fg:w="12"/><text x="54.8650%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="54.6334%" y="805" width="0.0211%" height="15" fill="rgb(232,57,40)" fg:x="59475" fg:w="23"/><text x="54.8834%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="54.7298%" y="709" width="0.0165%" height="15" fill="rgb(224,186,18)" fg:x="59580" fg:w="18"/><text x="54.9798%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (18 samples, 0.02%)</title><rect x="54.7298%" y="693" width="0.0165%" height="15" fill="rgb(215,121,11)" fg:x="59580" fg:w="18"/><text x="54.9798%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (107 samples, 0.10%)</title><rect x="54.6545%" y="805" width="0.0983%" height="15" fill="rgb(245,147,10)" fg:x="59498" fg:w="107"/><text x="54.9045%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (56 samples, 0.05%)</title><rect x="54.7014%" y="789" width="0.0514%" height="15" fill="rgb(238,153,13)" fg:x="59549" fg:w="56"/><text x="54.9514%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (45 samples, 0.04%)</title><rect x="54.7115%" y="773" width="0.0413%" height="15" fill="rgb(233,108,0)" fg:x="59560" fg:w="45"/><text x="54.9615%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (45 samples, 0.04%)</title><rect x="54.7115%" y="757" width="0.0413%" height="15" fill="rgb(212,157,17)" fg:x="59560" fg:w="45"/><text x="54.9615%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (25 samples, 0.02%)</title><rect x="54.7298%" y="741" width="0.0230%" height="15" fill="rgb(225,213,38)" fg:x="59580" fg:w="25"/><text x="54.9798%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (25 samples, 0.02%)</title><rect x="54.7298%" y="725" width="0.0230%" height="15" fill="rgb(248,16,11)" fg:x="59580" fg:w="25"/><text x="54.9798%" y="735.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="54.7776%" y="709" width="0.0138%" height="15" fill="rgb(241,33,4)" fg:x="59632" fg:w="15"/><text x="55.0276%" y="719.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (36 samples, 0.03%)</title><rect x="54.8208%" y="661" width="0.0331%" height="15" fill="rgb(222,26,43)" fg:x="59679" fg:w="36"/><text x="55.0708%" y="671.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (36 samples, 0.03%)</title><rect x="54.8208%" y="645" width="0.0331%" height="15" fill="rgb(243,29,36)" fg:x="59679" fg:w="36"/><text x="55.0708%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (70 samples, 0.06%)</title><rect x="54.7978%" y="709" width="0.0643%" height="15" fill="rgb(241,9,27)" fg:x="59654" fg:w="70"/><text x="55.0478%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (70 samples, 0.06%)</title><rect x="54.7978%" y="693" width="0.0643%" height="15" fill="rgb(205,117,26)" fg:x="59654" fg:w="70"/><text x="55.0478%" y="703.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (70 samples, 0.06%)</title><rect x="54.7978%" y="677" width="0.0643%" height="15" fill="rgb(209,80,39)" fg:x="59654" fg:w="70"/><text x="55.0478%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (97 samples, 0.09%)</title><rect x="54.7749%" y="741" width="0.0891%" height="15" fill="rgb(239,155,6)" fg:x="59629" fg:w="97"/><text x="55.0249%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (97 samples, 0.09%)</title><rect x="54.7749%" y="725" width="0.0891%" height="15" fill="rgb(212,104,12)" fg:x="59629" fg:w="97"/><text x="55.0249%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (116 samples, 0.11%)</title><rect x="54.7583%" y="789" width="0.1066%" height="15" fill="rgb(234,204,3)" fg:x="59611" fg:w="116"/><text x="55.0083%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (98 samples, 0.09%)</title><rect x="54.7749%" y="773" width="0.0900%" height="15" fill="rgb(251,218,7)" fg:x="59629" fg:w="98"/><text x="55.0249%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (98 samples, 0.09%)</title><rect x="54.7749%" y="757" width="0.0900%" height="15" fill="rgb(221,81,32)" fg:x="59629" fg:w="98"/><text x="55.0249%" y="767.50"></text></g><g><title>rust_dealloc (123 samples, 0.11%)</title><rect x="54.7528%" y="805" width="0.1130%" height="15" fill="rgb(214,152,26)" fg:x="59605" fg:w="123"/><text x="55.0028%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (79 samples, 0.07%)</title><rect x="54.9687%" y="741" width="0.0726%" height="15" fill="rgb(223,22,3)" fg:x="59840" fg:w="79"/><text x="55.2187%" y="751.50"></text></g><g><title>core::cmp::PartialOrd::ge (79 samples, 0.07%)</title><rect x="54.9687%" y="725" width="0.0726%" height="15" fill="rgb(207,174,7)" fg:x="59840" fg:w="79"/><text x="55.2187%" y="735.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (78 samples, 0.07%)</title><rect x="54.9696%" y="709" width="0.0717%" height="15" fill="rgb(224,19,52)" fg:x="59841" fg:w="78"/><text x="55.2196%" y="719.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (78 samples, 0.07%)</title><rect x="54.9696%" y="693" width="0.0717%" height="15" fill="rgb(228,24,14)" fg:x="59841" fg:w="78"/><text x="55.2196%" y="703.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (78 samples, 0.07%)</title><rect x="54.9696%" y="677" width="0.0717%" height="15" fill="rgb(230,153,43)" fg:x="59841" fg:w="78"/><text x="55.2196%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (41 samples, 0.04%)</title><rect x="55.0036%" y="661" width="0.0377%" height="15" fill="rgb(231,106,12)" fg:x="59878" fg:w="41"/><text x="55.2536%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (153 samples, 0.14%)</title><rect x="54.9108%" y="773" width="0.1405%" height="15" fill="rgb(215,92,2)" fg:x="59777" fg:w="153"/><text x="55.1608%" y="783.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (153 samples, 0.14%)</title><rect x="54.9108%" y="757" width="0.1405%" height="15" fill="rgb(249,143,25)" fg:x="59777" fg:w="153"/><text x="55.1608%" y="767.50"></text></g><g><title>core::time::Duration::new (11 samples, 0.01%)</title><rect x="55.0412%" y="741" width="0.0101%" height="15" fill="rgb(252,7,35)" fg:x="59919" fg:w="11"/><text x="55.2912%" y="751.50"></text></g><g><title>std::time::SystemTime::duration_since (161 samples, 0.15%)</title><rect x="54.9108%" y="789" width="0.1479%" height="15" fill="rgb(216,69,40)" fg:x="59777" fg:w="161"/><text x="55.1608%" y="799.50"></text></g><g><title>tremor_common::time::nanotime (882 samples, 0.81%)</title><rect x="54.8731%" y="805" width="0.8102%" height="15" fill="rgb(240,36,33)" fg:x="59736" fg:w="882"/><text x="55.1231%" y="815.50"></text></g><g><title>std::time::SystemTime::now (680 samples, 0.62%)</title><rect x="55.0587%" y="789" width="0.6246%" height="15" fill="rgb(231,128,14)" fg:x="59938" fg:w="680"/><text x="55.3087%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (680 samples, 0.62%)</title><rect x="55.0587%" y="773" width="0.6246%" height="15" fill="rgb(245,143,14)" fg:x="59938" fg:w="680"/><text x="55.3087%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::now (680 samples, 0.62%)</title><rect x="55.0587%" y="757" width="0.6246%" height="15" fill="rgb(222,130,28)" fg:x="59938" fg:w="680"/><text x="55.3087%" y="767.50"></text></g><g><title>__clock_gettime_2 (554 samples, 0.51%)</title><rect x="55.1744%" y="741" width="0.5089%" height="15" fill="rgb(212,10,48)" fg:x="60064" fg:w="554"/><text x="55.4244%" y="751.50"></text></g><g><title>__vdso_clock_gettime (495 samples, 0.45%)</title><rect x="55.2286%" y="725" width="0.4547%" height="15" fill="rgb(254,118,45)" fg:x="60123" fg:w="495"/><text x="55.4786%" y="735.50"></text></g><g><title>[[vdso]] (341 samples, 0.31%)</title><rect x="55.3701%" y="709" width="0.3132%" height="15" fill="rgb(228,6,45)" fg:x="60277" fg:w="341"/><text x="55.6201%" y="719.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,771 samples, 3.46%)</title><rect x="52.2368%" y="821" width="3.4640%" height="15" fill="rgb(241,18,35)" fg:x="56866" fg:w="3771"/><text x="52.4868%" y="831.50">tre..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (19 samples, 0.02%)</title><rect x="55.6833%" y="805" width="0.0175%" height="15" fill="rgb(227,214,53)" fg:x="60618" fg:w="19"/><text x="55.9333%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,607 samples, 6.99%)</title><rect x="48.7627%" y="837" width="6.9877%" height="15" fill="rgb(224,107,51)" fg:x="53084" fg:w="7607"/><text x="49.0127%" y="847.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (54 samples, 0.05%)</title><rect x="55.7008%" y="821" width="0.0496%" height="15" fill="rgb(248,60,28)" fg:x="60637" fg:w="54"/><text x="55.9508%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (879 samples, 0.81%)</title><rect x="55.7541%" y="837" width="0.8074%" height="15" fill="rgb(249,101,23)" fg:x="60695" fg:w="879"/><text x="56.0041%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (32 samples, 0.03%)</title><rect x="56.5661%" y="821" width="0.0294%" height="15" fill="rgb(228,51,19)" fg:x="61579" fg:w="32"/><text x="56.8161%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (38 samples, 0.03%)</title><rect x="56.5661%" y="837" width="0.0349%" height="15" fill="rgb(213,20,6)" fg:x="61579" fg:w="38"/><text x="56.8161%" y="847.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (9,107 samples, 8.37%)</title><rect x="48.2749%" y="853" width="8.3656%" height="15" fill="rgb(212,124,10)" fg:x="52553" fg:w="9107"/><text x="48.5249%" y="863.50">tremor_runti..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::should_pull_data (43 samples, 0.04%)</title><rect x="56.6010%" y="837" width="0.0395%" height="15" fill="rgb(248,3,40)" fg:x="61617" fg:w="43"/><text x="56.8510%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="56.6736%" y="821" width="0.0156%" height="15" fill="rgb(223,178,23)" fg:x="61696" fg:w="17"/><text x="56.9236%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (363 samples, 0.33%)</title><rect x="56.6892%" y="821" width="0.3334%" height="15" fill="rgb(240,132,45)" fg:x="61713" fg:w="363"/><text x="56.9392%" y="831.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.01%)</title><rect x="57.2826%" y="805" width="0.0119%" height="15" fill="rgb(245,164,36)" fg:x="62359" fg:w="13"/><text x="57.5326%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.04%)</title><rect x="57.2991%" y="789" width="0.0404%" height="15" fill="rgb(231,188,53)" fg:x="62377" fg:w="44"/><text x="57.5491%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (344 samples, 0.32%)</title><rect x="57.2991%" y="805" width="0.3160%" height="15" fill="rgb(237,198,39)" fg:x="62377" fg:w="344"/><text x="57.5491%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (300 samples, 0.28%)</title><rect x="57.3396%" y="789" width="0.2756%" height="15" fill="rgb(223,120,35)" fg:x="62421" fg:w="300"/><text x="57.5896%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (296 samples, 0.27%)</title><rect x="57.3432%" y="773" width="0.2719%" height="15" fill="rgb(253,107,49)" fg:x="62425" fg:w="296"/><text x="57.5932%" y="783.50"></text></g><g><title>core::ptr::read (296 samples, 0.27%)</title><rect x="57.3432%" y="757" width="0.2719%" height="15" fill="rgb(216,44,31)" fg:x="62425" fg:w="296"/><text x="57.5932%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (286 samples, 0.26%)</title><rect x="57.3524%" y="741" width="0.2627%" height="15" fill="rgb(253,87,21)" fg:x="62435" fg:w="286"/><text x="57.6024%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="57.6207%" y="645" width="0.0138%" height="15" fill="rgb(226,18,2)" fg:x="62727" fg:w="15"/><text x="57.8707%" y="655.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="57.6455%" y="533" width="0.0110%" height="15" fill="rgb(216,8,46)" fg:x="62754" fg:w="12"/><text x="57.8955%" y="543.50"></text></g><g><title>rust_alloc (58 samples, 0.05%)</title><rect x="57.6565%" y="501" width="0.0533%" height="15" fill="rgb(226,140,39)" fg:x="62766" fg:w="58"/><text x="57.9065%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="57.7291%" y="373" width="0.0165%" height="15" fill="rgb(221,194,54)" fg:x="62845" fg:w="18"/><text x="57.9791%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="57.7300%" y="357" width="0.0156%" height="15" fill="rgb(213,92,11)" fg:x="62846" fg:w="17"/><text x="57.9800%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (35 samples, 0.03%)</title><rect x="57.7217%" y="421" width="0.0322%" height="15" fill="rgb(229,162,46)" fg:x="62837" fg:w="35"/><text x="57.9717%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (35 samples, 0.03%)</title><rect x="57.7217%" y="405" width="0.0322%" height="15" fill="rgb(214,111,36)" fg:x="62837" fg:w="35"/><text x="57.9717%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (32 samples, 0.03%)</title><rect x="57.7245%" y="389" width="0.0294%" height="15" fill="rgb(207,6,21)" fg:x="62840" fg:w="32"/><text x="57.9745%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (46 samples, 0.04%)</title><rect x="57.7217%" y="437" width="0.0423%" height="15" fill="rgb(213,127,38)" fg:x="62837" fg:w="46"/><text x="57.9717%" y="447.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="57.7539%" y="421" width="0.0101%" height="15" fill="rgb(238,118,32)" fg:x="62872" fg:w="11"/><text x="58.0039%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="57.7539%" y="405" width="0.0101%" height="15" fill="rgb(240,139,39)" fg:x="62872" fg:w="11"/><text x="58.0039%" y="415.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="57.7539%" y="389" width="0.0101%" height="15" fill="rgb(235,10,37)" fg:x="62872" fg:w="11"/><text x="58.0039%" y="399.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="57.7539%" y="373" width="0.0101%" height="15" fill="rgb(249,171,38)" fg:x="62872" fg:w="11"/><text x="58.0039%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (61 samples, 0.06%)</title><rect x="57.7180%" y="453" width="0.0560%" height="15" fill="rgb(242,144,32)" fg:x="62833" fg:w="61"/><text x="57.9680%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (31 samples, 0.03%)</title><rect x="57.7842%" y="437" width="0.0285%" height="15" fill="rgb(217,117,21)" fg:x="62905" fg:w="31"/><text x="58.0342%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (302 samples, 0.28%)</title><rect x="57.7180%" y="485" width="0.2774%" height="15" fill="rgb(249,87,1)" fg:x="62833" fg:w="302"/><text x="57.9680%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (302 samples, 0.28%)</title><rect x="57.7180%" y="469" width="0.2774%" height="15" fill="rgb(248,196,48)" fg:x="62833" fg:w="302"/><text x="57.9680%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (241 samples, 0.22%)</title><rect x="57.7741%" y="453" width="0.2214%" height="15" fill="rgb(251,206,33)" fg:x="62894" fg:w="241"/><text x="58.0241%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (199 samples, 0.18%)</title><rect x="57.8126%" y="437" width="0.1828%" height="15" fill="rgb(232,141,28)" fg:x="62936" fg:w="199"/><text x="58.0626%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (199 samples, 0.18%)</title><rect x="57.8126%" y="421" width="0.1828%" height="15" fill="rgb(209,167,14)" fg:x="62936" fg:w="199"/><text x="58.0626%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (199 samples, 0.18%)</title><rect x="57.8126%" y="405" width="0.1828%" height="15" fill="rgb(225,11,50)" fg:x="62936" fg:w="199"/><text x="58.0626%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (82 samples, 0.08%)</title><rect x="58.0028%" y="485" width="0.0753%" height="15" fill="rgb(209,50,20)" fg:x="63143" fg:w="82"/><text x="58.2528%" y="495.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (82 samples, 0.08%)</title><rect x="58.0028%" y="469" width="0.0753%" height="15" fill="rgb(212,17,46)" fg:x="63143" fg:w="82"/><text x="58.2528%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (1,028 samples, 0.94%)</title><rect x="57.6565%" y="533" width="0.9443%" height="15" fill="rgb(216,101,39)" fg:x="62766" fg:w="1028"/><text x="57.9065%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (1,028 samples, 0.94%)</title><rect x="57.6565%" y="517" width="0.9443%" height="15" fill="rgb(212,228,48)" fg:x="62766" fg:w="1028"/><text x="57.9065%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (968 samples, 0.89%)</title><rect x="57.7116%" y="501" width="0.8892%" height="15" fill="rgb(250,6,50)" fg:x="62826" fg:w="968"/><text x="57.9616%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (569 samples, 0.52%)</title><rect x="58.0781%" y="485" width="0.5227%" height="15" fill="rgb(250,160,48)" fg:x="63225" fg:w="569"/><text x="58.3281%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (569 samples, 0.52%)</title><rect x="58.0781%" y="469" width="0.5227%" height="15" fill="rgb(244,216,33)" fg:x="63225" fg:w="569"/><text x="58.3281%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,077 samples, 0.99%)</title><rect x="57.6207%" y="677" width="0.9893%" height="15" fill="rgb(207,157,5)" fg:x="62727" fg:w="1077"/><text x="57.8707%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,077 samples, 0.99%)</title><rect x="57.6207%" y="661" width="0.9893%" height="15" fill="rgb(228,199,8)" fg:x="62727" fg:w="1077"/><text x="57.8707%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,062 samples, 0.98%)</title><rect x="57.6344%" y="645" width="0.9755%" height="15" fill="rgb(227,80,20)" fg:x="62742" fg:w="1062"/><text x="57.8844%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,062 samples, 0.98%)</title><rect x="57.6344%" y="629" width="0.9755%" height="15" fill="rgb(222,9,33)" fg:x="62742" fg:w="1062"/><text x="57.8844%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,062 samples, 0.98%)</title><rect x="57.6344%" y="613" width="0.9755%" height="15" fill="rgb(239,44,28)" fg:x="62742" fg:w="1062"/><text x="57.8844%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1,052 samples, 0.97%)</title><rect x="57.6436%" y="597" width="0.9664%" height="15" fill="rgb(249,187,43)" fg:x="62752" fg:w="1052"/><text x="57.8936%" y="607.50"></text></g><g><title>__rg_alloc (1,052 samples, 0.97%)</title><rect x="57.6436%" y="581" width="0.9664%" height="15" fill="rgb(216,141,28)" fg:x="62752" fg:w="1052"/><text x="57.8936%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,052 samples, 0.97%)</title><rect x="57.6436%" y="565" width="0.9664%" height="15" fill="rgb(230,154,53)" fg:x="62752" fg:w="1052"/><text x="57.8936%" y="575.50"></text></g><g><title>rust_alloc (1,051 samples, 0.97%)</title><rect x="57.6445%" y="549" width="0.9654%" height="15" fill="rgb(227,82,4)" fg:x="62753" fg:w="1051"/><text x="57.8945%" y="559.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1,111 samples, 1.02%)</title><rect x="57.6207%" y="805" width="1.0206%" height="15" fill="rgb(220,107,16)" fg:x="62727" fg:w="1111"/><text x="57.8707%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,111 samples, 1.02%)</title><rect x="57.6207%" y="789" width="1.0206%" height="15" fill="rgb(207,187,2)" fg:x="62727" fg:w="1111"/><text x="57.8707%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,111 samples, 1.02%)</title><rect x="57.6207%" y="773" width="1.0206%" height="15" fill="rgb(210,162,52)" fg:x="62727" fg:w="1111"/><text x="57.8707%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,111 samples, 1.02%)</title><rect x="57.6207%" y="757" width="1.0206%" height="15" fill="rgb(217,216,49)" fg:x="62727" fg:w="1111"/><text x="57.8707%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,111 samples, 1.02%)</title><rect x="57.6207%" y="741" width="1.0206%" height="15" fill="rgb(218,146,49)" fg:x="62727" fg:w="1111"/><text x="57.8707%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,111 samples, 1.02%)</title><rect x="57.6207%" y="725" width="1.0206%" height="15" fill="rgb(216,55,40)" fg:x="62727" fg:w="1111"/><text x="57.8707%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1,111 samples, 1.02%)</title><rect x="57.6207%" y="709" width="1.0206%" height="15" fill="rgb(208,196,21)" fg:x="62727" fg:w="1111"/><text x="57.8707%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,111 samples, 1.02%)</title><rect x="57.6207%" y="693" width="1.0206%" height="15" fill="rgb(242,117,42)" fg:x="62727" fg:w="1111"/><text x="57.8707%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (34 samples, 0.03%)</title><rect x="58.6100%" y="677" width="0.0312%" height="15" fill="rgb(210,11,23)" fg:x="63804" fg:w="34"/><text x="58.8600%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.03%)</title><rect x="58.6100%" y="661" width="0.0312%" height="15" fill="rgb(217,110,2)" fg:x="63804" fg:w="34"/><text x="58.8600%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (27 samples, 0.02%)</title><rect x="58.6164%" y="645" width="0.0248%" height="15" fill="rgb(229,77,54)" fg:x="63811" fg:w="27"/><text x="58.8664%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,110 samples, 1.02%)</title><rect x="58.6412%" y="805" width="1.0196%" height="15" fill="rgb(218,53,16)" fg:x="63838" fg:w="1110"/><text x="58.8912%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (12 samples, 0.01%)</title><rect x="59.6609%" y="805" width="0.0110%" height="15" fill="rgb(215,38,13)" fg:x="64948" fg:w="12"/><text x="59.9109%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (13 samples, 0.01%)</title><rect x="59.6719%" y="805" width="0.0119%" height="15" fill="rgb(235,42,18)" fg:x="64960" fg:w="13"/><text x="59.9219%" y="815.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="59.6719%" y="789" width="0.0119%" height="15" fill="rgb(219,66,54)" fg:x="64960" fg:w="13"/><text x="59.9219%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (16 samples, 0.01%)</title><rect x="59.6838%" y="805" width="0.0147%" height="15" fill="rgb(222,205,4)" fg:x="64973" fg:w="16"/><text x="59.9338%" y="815.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="59.6838%" y="789" width="0.0147%" height="15" fill="rgb(227,213,46)" fg:x="64973" fg:w="16"/><text x="59.9338%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (24 samples, 0.02%)</title><rect x="59.6985%" y="805" width="0.0220%" height="15" fill="rgb(250,145,42)" fg:x="64989" fg:w="24"/><text x="59.9485%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt; (17 samples, 0.02%)</title><rect x="59.7049%" y="789" width="0.0156%" height="15" fill="rgb(219,15,2)" fg:x="64996" fg:w="17"/><text x="59.9549%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (18 samples, 0.02%)</title><rect x="59.7206%" y="805" width="0.0165%" height="15" fill="rgb(231,181,52)" fg:x="65013" fg:w="18"/><text x="59.9706%" y="815.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (21 samples, 0.02%)</title><rect x="59.7794%" y="757" width="0.0193%" height="15" fill="rgb(235,1,42)" fg:x="65077" fg:w="21"/><text x="60.0294%" y="767.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (238 samples, 0.22%)</title><rect x="59.7371%" y="805" width="0.2186%" height="15" fill="rgb(249,88,27)" fg:x="65031" fg:w="238"/><text x="59.9871%" y="815.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (193 samples, 0.18%)</title><rect x="59.7784%" y="789" width="0.1773%" height="15" fill="rgb(235,145,16)" fg:x="65076" fg:w="193"/><text x="60.0284%" y="799.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (192 samples, 0.18%)</title><rect x="59.7794%" y="773" width="0.1764%" height="15" fill="rgb(237,114,19)" fg:x="65077" fg:w="192"/><text x="60.0294%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (171 samples, 0.16%)</title><rect x="59.7986%" y="757" width="0.1571%" height="15" fill="rgb(238,51,50)" fg:x="65098" fg:w="171"/><text x="60.0486%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (171 samples, 0.16%)</title><rect x="59.7986%" y="741" width="0.1571%" height="15" fill="rgb(205,194,25)" fg:x="65098" fg:w="171"/><text x="60.0486%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (171 samples, 0.16%)</title><rect x="59.7986%" y="725" width="0.1571%" height="15" fill="rgb(215,203,17)" fg:x="65098" fg:w="171"/><text x="60.0486%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (171 samples, 0.16%)</title><rect x="59.7986%" y="709" width="0.1571%" height="15" fill="rgb(233,112,49)" fg:x="65098" fg:w="171"/><text x="60.0486%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (171 samples, 0.16%)</title><rect x="59.7986%" y="693" width="0.1571%" height="15" fill="rgb(241,130,26)" fg:x="65098" fg:w="171"/><text x="60.0486%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (96 samples, 0.09%)</title><rect x="59.8675%" y="677" width="0.0882%" height="15" fill="rgb(252,223,19)" fg:x="65173" fg:w="96"/><text x="60.1175%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,705 samples, 3.40%)</title><rect x="56.6405%" y="837" width="3.4034%" height="15" fill="rgb(211,95,25)" fg:x="61660" fg:w="3705"/><text x="56.8905%" y="847.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,289 samples, 3.02%)</title><rect x="57.0227%" y="821" width="3.0213%" height="15" fill="rgb(251,182,27)" fg:x="62076" fg:w="3289"/><text x="57.2727%" y="831.50">tre..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (96 samples, 0.09%)</title><rect x="59.9557%" y="805" width="0.0882%" height="15" fill="rgb(238,24,4)" fg:x="65269" fg:w="96"/><text x="60.2057%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (96 samples, 0.09%)</title><rect x="59.9557%" y="789" width="0.0882%" height="15" fill="rgb(224,220,25)" fg:x="65269" fg:w="96"/><text x="60.2057%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (96 samples, 0.09%)</title><rect x="59.9557%" y="773" width="0.0882%" height="15" fill="rgb(239,133,26)" fg:x="65269" fg:w="96"/><text x="60.2057%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (73 samples, 0.07%)</title><rect x="59.9769%" y="757" width="0.0671%" height="15" fill="rgb(211,94,48)" fg:x="65292" fg:w="73"/><text x="60.2269%" y="767.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17,420 samples, 16.00%)</title><rect x="44.0512%" y="1141" width="16.0019%" height="15" fill="rgb(239,87,6)" fg:x="47955" fg:w="17420"/><text x="44.3012%" y="1151.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,417 samples, 16.00%)</title><rect x="44.0539%" y="1125" width="15.9992%" height="15" fill="rgb(227,62,0)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="1135.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}} (17,417 samples, 16.00%)</title><rect x="44.0539%" y="1109" width="15.9992%" height="15" fill="rgb(211,226,4)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="1119.50">async_executor::Executor:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17,417 samples, 16.00%)</title><rect x="44.0539%" y="1093" width="15.9992%" height="15" fill="rgb(253,38,52)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="1103.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,417 samples, 16.00%)</title><rect x="44.0539%" y="1077" width="15.9992%" height="15" fill="rgb(229,126,40)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="1087.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (17,417 samples, 16.00%)</title><rect x="44.0539%" y="1061" width="15.9992%" height="15" fill="rgb(229,165,44)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="1071.50">async_executor::Executor:..</text></g><g><title>async_task::runnable::Runnable::run (17,417 samples, 16.00%)</title><rect x="44.0539%" y="1045" width="15.9992%" height="15" fill="rgb(247,95,47)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="1055.50">async_task::runnable::Run..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (17,417 samples, 16.00%)</title><rect x="44.0539%" y="1029" width="15.9992%" height="15" fill="rgb(216,140,30)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="1039.50">async_task::raw::RawTask&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (17,417 samples, 16.00%)</title><rect x="44.0539%" y="1013" width="15.9992%" height="15" fill="rgb(246,214,8)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="1023.50">&lt;core::pin::Pin&lt;P&gt; as cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,417 samples, 16.00%)</title><rect x="44.0539%" y="997" width="15.9992%" height="15" fill="rgb(227,224,15)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="1007.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (17,417 samples, 16.00%)</title><rect x="44.0539%" y="981" width="15.9992%" height="15" fill="rgb(233,175,4)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="991.50">async_executor::Executor:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (17,417 samples, 16.00%)</title><rect x="44.0539%" y="965" width="15.9992%" height="15" fill="rgb(221,66,45)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="975.50">&lt;async_std::task::builder..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (17,417 samples, 16.00%)</title><rect x="44.0539%" y="949" width="15.9992%" height="15" fill="rgb(221,178,18)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="959.50">async_std::task::task_loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17,417 samples, 16.00%)</title><rect x="44.0539%" y="933" width="15.9992%" height="15" fill="rgb(213,81,29)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="943.50">std::thread::local::Local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17,417 samples, 16.00%)</title><rect x="44.0539%" y="917" width="15.9992%" height="15" fill="rgb(220,89,49)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="927.50">std::thread::local::Local..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (17,417 samples, 16.00%)</title><rect x="44.0539%" y="901" width="15.9992%" height="15" fill="rgb(227,60,33)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="911.50">async_std::task::task_loc..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (17,417 samples, 16.00%)</title><rect x="44.0539%" y="885" width="15.9992%" height="15" fill="rgb(205,113,12)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="895.50">&lt;async_std::task::builder..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,417 samples, 16.00%)</title><rect x="44.0539%" y="869" width="15.9992%" height="15" fill="rgb(211,32,1)" fg:x="47958" fg:w="17417"/><text x="44.3039%" y="879.50">&lt;core::future::from_gener..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,715 samples, 3.41%)</title><rect x="56.6405%" y="853" width="3.4126%" height="15" fill="rgb(246,2,12)" fg:x="61660" fg:w="3715"/><text x="56.8905%" y="863.50">tre..</text></g><g><title>async_io::driver::block_on (17,429 samples, 16.01%)</title><rect x="44.0503%" y="1157" width="16.0102%" height="15" fill="rgb(243,37,27)" fg:x="47954" fg:w="17429"/><text x="44.3003%" y="1167.50">async_io::driver::block_on</text></g><g><title>__memcpy_avx_unaligned_erms (536 samples, 0.49%)</title><rect x="60.1137%" y="885" width="0.4924%" height="15" fill="rgb(248,211,31)" fg:x="65441" fg:w="536"/><text x="60.3637%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (567 samples, 0.52%)</title><rect x="60.6235%" y="869" width="0.5208%" height="15" fill="rgb(242,146,47)" fg:x="65996" fg:w="567"/><text x="60.8735%" y="879.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (72 samples, 0.07%)</title><rect x="61.1444%" y="869" width="0.0661%" height="15" fill="rgb(206,70,20)" fg:x="66563" fg:w="72"/><text x="61.3944%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (68 samples, 0.06%)</title><rect x="61.2206%" y="773" width="0.0625%" height="15" fill="rgb(215,10,51)" fg:x="66646" fg:w="68"/><text x="61.4706%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (73 samples, 0.07%)</title><rect x="61.2170%" y="853" width="0.0671%" height="15" fill="rgb(243,178,53)" fg:x="66642" fg:w="73"/><text x="61.4670%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (71 samples, 0.07%)</title><rect x="61.2188%" y="837" width="0.0652%" height="15" fill="rgb(233,221,20)" fg:x="66644" fg:w="71"/><text x="61.4688%" y="847.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.07%)</title><rect x="61.2188%" y="821" width="0.0652%" height="15" fill="rgb(218,95,35)" fg:x="66644" fg:w="71"/><text x="61.4688%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (71 samples, 0.07%)</title><rect x="61.2188%" y="805" width="0.0652%" height="15" fill="rgb(229,13,5)" fg:x="66644" fg:w="71"/><text x="61.4688%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (69 samples, 0.06%)</title><rect x="61.2206%" y="789" width="0.0634%" height="15" fill="rgb(252,164,30)" fg:x="66646" fg:w="69"/><text x="61.4706%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (36 samples, 0.03%)</title><rect x="61.2840%" y="853" width="0.0331%" height="15" fill="rgb(232,68,36)" fg:x="66715" fg:w="36"/><text x="61.5340%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (36 samples, 0.03%)</title><rect x="61.2840%" y="837" width="0.0331%" height="15" fill="rgb(219,59,54)" fg:x="66715" fg:w="36"/><text x="61.5340%" y="847.50"></text></g><g><title>event_listener::Inner::lock (169 samples, 0.16%)</title><rect x="61.3171%" y="853" width="0.1552%" height="15" fill="rgb(250,92,33)" fg:x="66751" fg:w="169"/><text x="61.5671%" y="863.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (167 samples, 0.15%)</title><rect x="61.3189%" y="837" width="0.1534%" height="15" fill="rgb(229,162,54)" fg:x="66753" fg:w="167"/><text x="61.5689%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (166 samples, 0.15%)</title><rect x="61.3198%" y="821" width="0.1525%" height="15" fill="rgb(244,114,52)" fg:x="66754" fg:w="166"/><text x="61.5698%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (158 samples, 0.15%)</title><rect x="61.3272%" y="805" width="0.1451%" height="15" fill="rgb(212,211,43)" fg:x="66762" fg:w="158"/><text x="61.5772%" y="815.50"></text></g><g><title>___pthread_mutex_lock (158 samples, 0.15%)</title><rect x="61.3272%" y="789" width="0.1451%" height="15" fill="rgb(226,147,8)" fg:x="66762" fg:w="158"/><text x="61.5772%" y="799.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,198 samples, 1.10%)</title><rect x="60.6061%" y="885" width="1.1005%" height="15" fill="rgb(226,23,13)" fg:x="65977" fg:w="1198"/><text x="60.8561%" y="895.50"></text></g><g><title>event_listener::Event::notify (540 samples, 0.50%)</title><rect x="61.2105%" y="869" width="0.4960%" height="15" fill="rgb(240,63,4)" fg:x="66635" fg:w="540"/><text x="61.4605%" y="879.50"></text></g><g><title>event_listener::full_fence (255 samples, 0.23%)</title><rect x="61.4723%" y="853" width="0.2342%" height="15" fill="rgb(221,1,32)" fg:x="66920" fg:w="255"/><text x="61.7223%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (249 samples, 0.23%)</title><rect x="61.4778%" y="837" width="0.2287%" height="15" fill="rgb(242,117,10)" fg:x="66926" fg:w="249"/><text x="61.7278%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (249 samples, 0.23%)</title><rect x="61.4778%" y="821" width="0.2287%" height="15" fill="rgb(249,172,44)" fg:x="66926" fg:w="249"/><text x="61.7278%" y="831.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,804 samples, 1.66%)</title><rect x="60.0614%" y="965" width="1.6571%" height="15" fill="rgb(244,46,45)" fg:x="65384" fg:w="1804"/><text x="60.3114%" y="975.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,804 samples, 1.66%)</title><rect x="60.0614%" y="949" width="1.6571%" height="15" fill="rgb(206,43,17)" fg:x="65384" fg:w="1804"/><text x="60.3114%" y="959.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,804 samples, 1.66%)</title><rect x="60.0614%" y="933" width="1.6571%" height="15" fill="rgb(239,218,39)" fg:x="65384" fg:w="1804"/><text x="60.3114%" y="943.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,804 samples, 1.66%)</title><rect x="60.0614%" y="917" width="1.6571%" height="15" fill="rgb(208,169,54)" fg:x="65384" fg:w="1804"/><text x="60.3114%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,804 samples, 1.66%)</title><rect x="60.0614%" y="901" width="1.6571%" height="15" fill="rgb(247,25,42)" fg:x="65384" fg:w="1804"/><text x="60.3114%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.02%)</title><rect x="61.7286%" y="517" width="0.0156%" height="15" fill="rgb(226,23,31)" fg:x="67199" fg:w="17"/><text x="61.9786%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="61.7736%" y="357" width="0.0129%" height="15" fill="rgb(247,16,28)" fg:x="67248" fg:w="14"/><text x="62.0236%" y="367.50"></text></g><g><title>abi_stable::erased_types::iterator::next (25 samples, 0.02%)</title><rect x="61.7644%" y="469" width="0.0230%" height="15" fill="rgb(231,147,38)" fg:x="67238" fg:w="25"/><text x="62.0144%" y="479.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (15 samples, 0.01%)</title><rect x="61.7736%" y="453" width="0.0138%" height="15" fill="rgb(253,81,48)" fg:x="67248" fg:w="15"/><text x="62.0236%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="61.7736%" y="437" width="0.0138%" height="15" fill="rgb(249,222,43)" fg:x="67248" fg:w="15"/><text x="62.0236%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="61.7736%" y="421" width="0.0138%" height="15" fill="rgb(221,3,27)" fg:x="67248" fg:w="15"/><text x="62.0236%" y="431.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="61.7736%" y="405" width="0.0138%" height="15" fill="rgb(228,180,5)" fg:x="67248" fg:w="15"/><text x="62.0236%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="61.7736%" y="389" width="0.0138%" height="15" fill="rgb(227,131,42)" fg:x="67248" fg:w="15"/><text x="62.0236%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="61.7736%" y="373" width="0.0138%" height="15" fill="rgb(212,3,39)" fg:x="67248" fg:w="15"/><text x="62.0236%" y="383.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.07%)</title><rect x="61.7442%" y="501" width="0.0744%" height="15" fill="rgb(226,45,5)" fg:x="67216" fg:w="81"/><text x="61.9942%" y="511.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (81 samples, 0.07%)</title><rect x="61.7442%" y="485" width="0.0744%" height="15" fill="rgb(215,167,45)" fg:x="67216" fg:w="81"/><text x="61.9942%" y="495.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (34 samples, 0.03%)</title><rect x="61.7874%" y="469" width="0.0312%" height="15" fill="rgb(250,218,53)" fg:x="67263" fg:w="34"/><text x="62.0374%" y="479.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (34 samples, 0.03%)</title><rect x="61.7874%" y="453" width="0.0312%" height="15" fill="rgb(207,140,0)" fg:x="67263" fg:w="34"/><text x="62.0374%" y="463.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (24 samples, 0.02%)</title><rect x="61.7966%" y="437" width="0.0220%" height="15" fill="rgb(238,133,51)" fg:x="67273" fg:w="24"/><text x="62.0466%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (39 samples, 0.04%)</title><rect x="61.8453%" y="389" width="0.0358%" height="15" fill="rgb(218,203,53)" fg:x="67326" fg:w="39"/><text x="62.0953%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="61.8682%" y="373" width="0.0129%" height="15" fill="rgb(226,184,25)" fg:x="67351" fg:w="14"/><text x="62.1182%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (14 samples, 0.01%)</title><rect x="61.8682%" y="357" width="0.0129%" height="15" fill="rgb(231,121,21)" fg:x="67351" fg:w="14"/><text x="62.1182%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (14 samples, 0.01%)</title><rect x="61.8682%" y="341" width="0.0129%" height="15" fill="rgb(251,14,34)" fg:x="67351" fg:w="14"/><text x="62.1182%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue)&gt;&gt; (14 samples, 0.01%)</title><rect x="61.8682%" y="325" width="0.0129%" height="15" fill="rgb(249,193,11)" fg:x="67351" fg:w="14"/><text x="62.1182%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="61.8692%" y="309" width="0.0119%" height="15" fill="rgb(220,172,37)" fg:x="67352" fg:w="13"/><text x="62.1192%" y="319.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="61.9105%" y="293" width="0.0101%" height="15" fill="rgb(231,229,43)" fg:x="67397" fg:w="11"/><text x="62.1605%" y="303.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="61.9105%" y="277" width="0.0101%" height="15" fill="rgb(250,161,5)" fg:x="67397" fg:w="11"/><text x="62.1605%" y="287.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.02%)</title><rect x="61.9527%" y="245" width="0.0156%" height="15" fill="rgb(218,225,18)" fg:x="67443" fg:w="17"/><text x="62.2027%" y="255.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="61.9527%" y="229" width="0.0156%" height="15" fill="rgb(245,45,42)" fg:x="67443" fg:w="17"/><text x="62.2027%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (70 samples, 0.06%)</title><rect x="61.9206%" y="293" width="0.0643%" height="15" fill="rgb(211,115,1)" fg:x="67408" fg:w="70"/><text x="62.1706%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (70 samples, 0.06%)</title><rect x="61.9206%" y="277" width="0.0643%" height="15" fill="rgb(248,133,52)" fg:x="67408" fg:w="70"/><text x="62.1706%" y="287.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (70 samples, 0.06%)</title><rect x="61.9206%" y="261" width="0.0643%" height="15" fill="rgb(238,100,21)" fg:x="67408" fg:w="70"/><text x="62.1706%" y="271.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (18 samples, 0.02%)</title><rect x="61.9684%" y="245" width="0.0165%" height="15" fill="rgb(247,144,11)" fg:x="67460" fg:w="18"/><text x="62.2184%" y="255.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (18 samples, 0.02%)</title><rect x="61.9684%" y="229" width="0.0165%" height="15" fill="rgb(206,164,16)" fg:x="67460" fg:w="18"/><text x="62.2184%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (97 samples, 0.09%)</title><rect x="61.8995%" y="325" width="0.0891%" height="15" fill="rgb(222,34,3)" fg:x="67385" fg:w="97"/><text x="62.1495%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (97 samples, 0.09%)</title><rect x="61.8995%" y="309" width="0.0891%" height="15" fill="rgb(248,82,4)" fg:x="67385" fg:w="97"/><text x="62.1495%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (99 samples, 0.09%)</title><rect x="61.8995%" y="357" width="0.0909%" height="15" fill="rgb(228,81,46)" fg:x="67385" fg:w="99"/><text x="62.1495%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (99 samples, 0.09%)</title><rect x="61.8995%" y="341" width="0.0909%" height="15" fill="rgb(227,67,47)" fg:x="67385" fg:w="99"/><text x="62.1495%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (118 samples, 0.11%)</title><rect x="61.8866%" y="373" width="0.1084%" height="15" fill="rgb(215,93,53)" fg:x="67371" fg:w="118"/><text x="62.1366%" y="383.50"></text></g><g><title>rust_dealloc (134 samples, 0.12%)</title><rect x="61.8811%" y="389" width="0.1231%" height="15" fill="rgb(248,194,39)" fg:x="67365" fg:w="134"/><text x="62.1311%" y="399.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (312 samples, 0.29%)</title><rect x="61.7185%" y="693" width="0.2866%" height="15" fill="rgb(215,5,19)" fg:x="67188" fg:w="312"/><text x="61.9685%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (312 samples, 0.29%)</title><rect x="61.7185%" y="677" width="0.2866%" height="15" fill="rgb(226,215,51)" fg:x="67188" fg:w="312"/><text x="61.9685%" y="687.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkEventPayload&gt; for tremor_script::srs::EventPayload&gt;::from (312 samples, 0.29%)</title><rect x="61.7185%" y="661" width="0.2866%" height="15" fill="rgb(225,56,26)" fg:x="67188" fg:w="312"/><text x="61.9685%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (312 samples, 0.29%)</title><rect x="61.7185%" y="645" width="0.2866%" height="15" fill="rgb(222,75,29)" fg:x="67188" fg:w="312"/><text x="61.9685%" y="655.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkValueAndMeta&gt; for tremor_script::srs::ValueAndMeta&gt;::from (312 samples, 0.29%)</title><rect x="61.7185%" y="629" width="0.2866%" height="15" fill="rgb(236,139,6)" fg:x="67188" fg:w="312"/><text x="61.9685%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (312 samples, 0.29%)</title><rect x="61.7185%" y="613" width="0.2866%" height="15" fill="rgb(223,137,36)" fg:x="67188" fg:w="312"/><text x="61.9685%" y="623.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (312 samples, 0.29%)</title><rect x="61.7185%" y="597" width="0.2866%" height="15" fill="rgb(226,99,2)" fg:x="67188" fg:w="312"/><text x="61.9685%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (312 samples, 0.29%)</title><rect x="61.7185%" y="581" width="0.2866%" height="15" fill="rgb(206,133,23)" fg:x="67188" fg:w="312"/><text x="61.9685%" y="591.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::FromIterator&lt;(K,V)&gt; for halfbrown::HashMap&lt;K,V,S&gt;&gt;::from_iter (312 samples, 0.29%)</title><rect x="61.7185%" y="565" width="0.2866%" height="15" fill="rgb(243,173,15)" fg:x="67188" fg:w="312"/><text x="61.9685%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (312 samples, 0.29%)</title><rect x="61.7185%" y="549" width="0.2866%" height="15" fill="rgb(228,69,28)" fg:x="67188" fg:w="312"/><text x="61.9685%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (312 samples, 0.29%)</title><rect x="61.7185%" y="533" width="0.2866%" height="15" fill="rgb(212,51,22)" fg:x="67188" fg:w="312"/><text x="61.9685%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (284 samples, 0.26%)</title><rect x="61.7442%" y="517" width="0.2609%" height="15" fill="rgb(227,113,0)" fg:x="67216" fg:w="284"/><text x="61.9942%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt; (203 samples, 0.19%)</title><rect x="61.8186%" y="501" width="0.1865%" height="15" fill="rgb(252,84,27)" fg:x="67297" fg:w="203"/><text x="62.0686%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (203 samples, 0.19%)</title><rect x="61.8186%" y="485" width="0.1865%" height="15" fill="rgb(223,145,39)" fg:x="67297" fg:w="203"/><text x="62.0686%" y="495.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (203 samples, 0.19%)</title><rect x="61.8186%" y="469" width="0.1865%" height="15" fill="rgb(239,219,30)" fg:x="67297" fg:w="203"/><text x="62.0686%" y="479.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (190 samples, 0.17%)</title><rect x="61.8306%" y="453" width="0.1745%" height="15" fill="rgb(224,196,39)" fg:x="67310" fg:w="190"/><text x="62.0806%" y="463.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (177 samples, 0.16%)</title><rect x="61.8425%" y="437" width="0.1626%" height="15" fill="rgb(205,35,43)" fg:x="67323" fg:w="177"/><text x="62.0925%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (177 samples, 0.16%)</title><rect x="61.8425%" y="421" width="0.1626%" height="15" fill="rgb(228,201,21)" fg:x="67323" fg:w="177"/><text x="62.0925%" y="431.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (177 samples, 0.16%)</title><rect x="61.8425%" y="405" width="0.1626%" height="15" fill="rgb(237,118,16)" fg:x="67323" fg:w="177"/><text x="62.0925%" y="415.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="62.0170%" y="293" width="0.0101%" height="15" fill="rgb(241,17,19)" fg:x="67513" fg:w="11"/><text x="62.2670%" y="303.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="62.0272%" y="293" width="0.0110%" height="15" fill="rgb(214,10,25)" fg:x="67524" fg:w="12"/><text x="62.2772%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::empty (22 samples, 0.02%)</title><rect x="62.0529%" y="277" width="0.0202%" height="15" fill="rgb(238,37,29)" fg:x="67552" fg:w="22"/><text x="62.3029%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (22 samples, 0.02%)</title><rect x="62.0529%" y="261" width="0.0202%" height="15" fill="rgb(253,83,25)" fg:x="67552" fg:w="22"/><text x="62.3029%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (311 samples, 0.29%)</title><rect x="62.0170%" y="325" width="0.2857%" height="15" fill="rgb(234,192,12)" fg:x="67513" fg:w="311"/><text x="62.2670%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (311 samples, 0.29%)</title><rect x="62.0170%" y="309" width="0.2857%" height="15" fill="rgb(241,216,45)" fg:x="67513" fg:w="311"/><text x="62.2670%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (288 samples, 0.26%)</title><rect x="62.0382%" y="293" width="0.2646%" height="15" fill="rgb(242,22,33)" fg:x="67536" fg:w="288"/><text x="62.2882%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (250 samples, 0.23%)</title><rect x="62.0731%" y="277" width="0.2296%" height="15" fill="rgb(231,105,49)" fg:x="67574" fg:w="250"/><text x="62.3231%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (250 samples, 0.23%)</title><rect x="62.0731%" y="261" width="0.2296%" height="15" fill="rgb(218,204,15)" fg:x="67574" fg:w="250"/><text x="62.3231%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (330 samples, 0.30%)</title><rect x="62.0051%" y="629" width="0.3031%" height="15" fill="rgb(235,138,41)" fg:x="67500" fg:w="330"/><text x="62.2551%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (330 samples, 0.30%)</title><rect x="62.0051%" y="613" width="0.3031%" height="15" fill="rgb(246,0,9)" fg:x="67500" fg:w="330"/><text x="62.2551%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (330 samples, 0.30%)</title><rect x="62.0051%" y="597" width="0.3031%" height="15" fill="rgb(210,74,4)" fg:x="67500" fg:w="330"/><text x="62.2551%" y="607.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (330 samples, 0.30%)</title><rect x="62.0051%" y="581" width="0.3031%" height="15" fill="rgb(250,60,41)" fg:x="67500" fg:w="330"/><text x="62.2551%" y="591.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (330 samples, 0.30%)</title><rect x="62.0051%" y="565" width="0.3031%" height="15" fill="rgb(220,115,12)" fg:x="67500" fg:w="330"/><text x="62.2551%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (330 samples, 0.30%)</title><rect x="62.0051%" y="549" width="0.3031%" height="15" fill="rgb(237,100,13)" fg:x="67500" fg:w="330"/><text x="62.2551%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (330 samples, 0.30%)</title><rect x="62.0051%" y="533" width="0.3031%" height="15" fill="rgb(213,55,26)" fg:x="67500" fg:w="330"/><text x="62.2551%" y="543.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (330 samples, 0.30%)</title><rect x="62.0051%" y="517" width="0.3031%" height="15" fill="rgb(216,17,4)" fg:x="67500" fg:w="330"/><text x="62.2551%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (330 samples, 0.30%)</title><rect x="62.0051%" y="501" width="0.3031%" height="15" fill="rgb(220,153,47)" fg:x="67500" fg:w="330"/><text x="62.2551%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (329 samples, 0.30%)</title><rect x="62.0060%" y="485" width="0.3022%" height="15" fill="rgb(215,131,9)" fg:x="67501" fg:w="329"/><text x="62.2560%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (329 samples, 0.30%)</title><rect x="62.0060%" y="469" width="0.3022%" height="15" fill="rgb(233,46,42)" fg:x="67501" fg:w="329"/><text x="62.2560%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (329 samples, 0.30%)</title><rect x="62.0060%" y="453" width="0.3022%" height="15" fill="rgb(226,86,7)" fg:x="67501" fg:w="329"/><text x="62.2560%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (329 samples, 0.30%)</title><rect x="62.0060%" y="437" width="0.3022%" height="15" fill="rgb(239,226,21)" fg:x="67501" fg:w="329"/><text x="62.2560%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (329 samples, 0.30%)</title><rect x="62.0060%" y="421" width="0.3022%" height="15" fill="rgb(244,137,22)" fg:x="67501" fg:w="329"/><text x="62.2560%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (329 samples, 0.30%)</title><rect x="62.0060%" y="405" width="0.3022%" height="15" fill="rgb(211,139,35)" fg:x="67501" fg:w="329"/><text x="62.2560%" y="415.50"></text></g><g><title>alloc::alloc::alloc (329 samples, 0.30%)</title><rect x="62.0060%" y="389" width="0.3022%" height="15" fill="rgb(214,62,50)" fg:x="67501" fg:w="329"/><text x="62.2560%" y="399.50"></text></g><g><title>__rg_alloc (329 samples, 0.30%)</title><rect x="62.0060%" y="373" width="0.3022%" height="15" fill="rgb(212,113,44)" fg:x="67501" fg:w="329"/><text x="62.2560%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (329 samples, 0.30%)</title><rect x="62.0060%" y="357" width="0.3022%" height="15" fill="rgb(226,150,43)" fg:x="67501" fg:w="329"/><text x="62.2560%" y="367.50"></text></g><g><title>rust_alloc (329 samples, 0.30%)</title><rect x="62.0060%" y="341" width="0.3022%" height="15" fill="rgb(250,71,37)" fg:x="67501" fg:w="329"/><text x="62.2560%" y="351.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (27 samples, 0.02%)</title><rect x="62.3082%" y="613" width="0.0248%" height="15" fill="rgb(219,76,19)" fg:x="67830" fg:w="27"/><text x="62.5582%" y="623.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (27 samples, 0.02%)</title><rect x="62.3082%" y="597" width="0.0248%" height="15" fill="rgb(250,39,11)" fg:x="67830" fg:w="27"/><text x="62.5582%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (572 samples, 0.53%)</title><rect x="62.3597%" y="597" width="0.5254%" height="15" fill="rgb(230,64,31)" fg:x="67886" fg:w="572"/><text x="62.6097%" y="607.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="62.8998%" y="549" width="0.0156%" height="15" fill="rgb(208,222,23)" fg:x="68474" fg:w="17"/><text x="63.1498%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (17 samples, 0.02%)</title><rect x="62.9320%" y="501" width="0.0156%" height="15" fill="rgb(227,125,18)" fg:x="68509" fg:w="17"/><text x="63.1820%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (122 samples, 0.11%)</title><rect x="62.9320%" y="533" width="0.1121%" height="15" fill="rgb(234,210,9)" fg:x="68509" fg:w="122"/><text x="63.1820%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (122 samples, 0.11%)</title><rect x="62.9320%" y="517" width="0.1121%" height="15" fill="rgb(217,127,24)" fg:x="68509" fg:w="122"/><text x="63.1820%" y="527.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (105 samples, 0.10%)</title><rect x="62.9476%" y="501" width="0.0965%" height="15" fill="rgb(239,141,48)" fg:x="68526" fg:w="105"/><text x="63.1976%" y="511.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (94 samples, 0.09%)</title><rect x="62.9577%" y="485" width="0.0863%" height="15" fill="rgb(227,109,8)" fg:x="68537" fg:w="94"/><text x="63.2077%" y="495.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (94 samples, 0.09%)</title><rect x="62.9577%" y="469" width="0.0863%" height="15" fill="rgb(235,184,23)" fg:x="68537" fg:w="94"/><text x="63.2077%" y="479.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (94 samples, 0.09%)</title><rect x="62.9577%" y="453" width="0.0863%" height="15" fill="rgb(227,226,48)" fg:x="68537" fg:w="94"/><text x="63.2077%" y="463.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (13 samples, 0.01%)</title><rect x="63.0505%" y="501" width="0.0119%" height="15" fill="rgb(206,150,11)" fg:x="68638" fg:w="13"/><text x="63.3005%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (13 samples, 0.01%)</title><rect x="63.0505%" y="485" width="0.0119%" height="15" fill="rgb(254,2,33)" fg:x="68638" fg:w="13"/><text x="63.3005%" y="495.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="63.0505%" y="469" width="0.0119%" height="15" fill="rgb(243,160,20)" fg:x="68638" fg:w="13"/><text x="63.3005%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="63.0440%" y="533" width="0.0257%" height="15" fill="rgb(218,208,30)" fg:x="68631" fg:w="28"/><text x="63.2940%" y="543.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (23 samples, 0.02%)</title><rect x="63.0486%" y="517" width="0.0211%" height="15" fill="rgb(224,120,49)" fg:x="68636" fg:w="23"/><text x="63.2986%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="63.0826%" y="485" width="0.0101%" height="15" fill="rgb(246,12,2)" fg:x="68673" fg:w="11"/><text x="63.3326%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.02%)</title><rect x="63.0698%" y="533" width="0.0248%" height="15" fill="rgb(236,117,3)" fg:x="68659" fg:w="27"/><text x="63.3198%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.02%)</title><rect x="63.0707%" y="517" width="0.0239%" height="15" fill="rgb(216,128,52)" fg:x="68660" fg:w="26"/><text x="63.3207%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="63.0744%" y="501" width="0.0202%" height="15" fill="rgb(246,145,19)" fg:x="68664" fg:w="22"/><text x="63.3244%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (32 samples, 0.03%)</title><rect x="63.0946%" y="533" width="0.0294%" height="15" fill="rgb(222,11,46)" fg:x="68686" fg:w="32"/><text x="63.3446%" y="543.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (32 samples, 0.03%)</title><rect x="63.0946%" y="517" width="0.0294%" height="15" fill="rgb(245,82,36)" fg:x="68686" fg:w="32"/><text x="63.3446%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (477 samples, 0.44%)</title><rect x="62.8998%" y="581" width="0.4382%" height="15" fill="rgb(250,73,51)" fg:x="68474" fg:w="477"/><text x="63.1498%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (477 samples, 0.44%)</title><rect x="62.8998%" y="565" width="0.4382%" height="15" fill="rgb(221,189,23)" fg:x="68474" fg:w="477"/><text x="63.1498%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (456 samples, 0.42%)</title><rect x="62.9191%" y="549" width="0.4189%" height="15" fill="rgb(210,33,7)" fg:x="68495" fg:w="456"/><text x="63.1691%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::take (233 samples, 0.21%)</title><rect x="63.1240%" y="533" width="0.2140%" height="15" fill="rgb(210,107,22)" fg:x="68718" fg:w="233"/><text x="63.3740%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (233 samples, 0.21%)</title><rect x="63.1240%" y="517" width="0.2140%" height="15" fill="rgb(222,116,37)" fg:x="68718" fg:w="233"/><text x="63.3740%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (3,580 samples, 3.29%)</title><rect x="60.0614%" y="981" width="3.2886%" height="15" fill="rgb(254,17,48)" fg:x="65384" fg:w="3580"/><text x="60.3114%" y="991.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,776 samples, 1.63%)</title><rect x="61.7185%" y="965" width="1.6314%" height="15" fill="rgb(224,36,32)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="975.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,776 samples, 1.63%)</title><rect x="61.7185%" y="949" width="1.6314%" height="15" fill="rgb(232,90,46)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="959.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,776 samples, 1.63%)</title><rect x="61.7185%" y="933" width="1.6314%" height="15" fill="rgb(241,66,40)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,776 samples, 1.63%)</title><rect x="61.7185%" y="917" width="1.6314%" height="15" fill="rgb(249,184,29)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="927.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,776 samples, 1.63%)</title><rect x="61.7185%" y="901" width="1.6314%" height="15" fill="rgb(231,181,1)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,776 samples, 1.63%)</title><rect x="61.7185%" y="885" width="1.6314%" height="15" fill="rgb(224,94,2)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="895.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,776 samples, 1.63%)</title><rect x="61.7185%" y="869" width="1.6314%" height="15" fill="rgb(229,170,15)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="879.50"></text></g><g><title>std::panic::catch_unwind (1,776 samples, 1.63%)</title><rect x="61.7185%" y="853" width="1.6314%" height="15" fill="rgb(240,127,35)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="863.50"></text></g><g><title>std::panicking::try (1,776 samples, 1.63%)</title><rect x="61.7185%" y="837" width="1.6314%" height="15" fill="rgb(248,196,34)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="847.50"></text></g><g><title>std::panicking::try::do_call (1,776 samples, 1.63%)</title><rect x="61.7185%" y="821" width="1.6314%" height="15" fill="rgb(236,137,7)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,776 samples, 1.63%)</title><rect x="61.7185%" y="805" width="1.6314%" height="15" fill="rgb(235,127,16)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,776 samples, 1.63%)</title><rect x="61.7185%" y="789" width="1.6314%" height="15" fill="rgb(250,192,54)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,776 samples, 1.63%)</title><rect x="61.7185%" y="773" width="1.6314%" height="15" fill="rgb(218,98,20)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="783.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,776 samples, 1.63%)</title><rect x="61.7185%" y="757" width="1.6314%" height="15" fill="rgb(230,176,47)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,776 samples, 1.63%)</title><rect x="61.7185%" y="741" width="1.6314%" height="15" fill="rgb(244,2,33)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,776 samples, 1.63%)</title><rect x="61.7185%" y="725" width="1.6314%" height="15" fill="rgb(231,100,17)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,776 samples, 1.63%)</title><rect x="61.7185%" y="709" width="1.6314%" height="15" fill="rgb(245,23,12)" fg:x="67188" fg:w="1776"/><text x="61.9685%" y="719.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,464 samples, 1.34%)</title><rect x="62.0051%" y="693" width="1.3448%" height="15" fill="rgb(249,55,22)" fg:x="67500" fg:w="1464"/><text x="62.2551%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,464 samples, 1.34%)</title><rect x="62.0051%" y="677" width="1.3448%" height="15" fill="rgb(207,134,9)" fg:x="67500" fg:w="1464"/><text x="62.2551%" y="687.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,464 samples, 1.34%)</title><rect x="62.0051%" y="661" width="1.3448%" height="15" fill="rgb(218,134,0)" fg:x="67500" fg:w="1464"/><text x="62.2551%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,464 samples, 1.34%)</title><rect x="62.0051%" y="645" width="1.3448%" height="15" fill="rgb(213,212,33)" fg:x="67500" fg:w="1464"/><text x="62.2551%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,134 samples, 1.04%)</title><rect x="62.3082%" y="629" width="1.0417%" height="15" fill="rgb(252,106,18)" fg:x="67830" fg:w="1134"/><text x="62.5582%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (1,107 samples, 1.02%)</title><rect x="62.3330%" y="613" width="1.0169%" height="15" fill="rgb(208,126,42)" fg:x="67857" fg:w="1107"/><text x="62.5830%" y="623.50"></text></g><g><title>rust_alloc (497 samples, 0.46%)</title><rect x="62.8934%" y="597" width="0.4565%" height="15" fill="rgb(246,175,29)" fg:x="68467" fg:w="497"/><text x="63.1434%" y="607.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="63.3380%" y="581" width="0.0119%" height="15" fill="rgb(215,13,50)" fg:x="68951" fg:w="13"/><text x="63.5880%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="64.9529%" y="645" width="0.0129%" height="15" fill="rgb(216,172,15)" fg:x="70709" fg:w="14"/><text x="65.2029%" y="655.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (14 samples, 0.01%)</title><rect x="64.9529%" y="629" width="0.0129%" height="15" fill="rgb(212,103,13)" fg:x="70709" fg:w="14"/><text x="65.2029%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (60 samples, 0.06%)</title><rect x="65.0401%" y="373" width="0.0551%" height="15" fill="rgb(231,171,36)" fg:x="70804" fg:w="60"/><text x="65.2901%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (60 samples, 0.06%)</title><rect x="65.0401%" y="357" width="0.0551%" height="15" fill="rgb(250,123,20)" fg:x="70804" fg:w="60"/><text x="65.2901%" y="367.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (56 samples, 0.05%)</title><rect x="65.0438%" y="341" width="0.0514%" height="15" fill="rgb(212,53,50)" fg:x="70808" fg:w="56"/><text x="65.2938%" y="351.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (40 samples, 0.04%)</title><rect x="65.0585%" y="325" width="0.0367%" height="15" fill="rgb(243,54,12)" fg:x="70824" fg:w="40"/><text x="65.3085%" y="335.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (40 samples, 0.04%)</title><rect x="65.0585%" y="309" width="0.0367%" height="15" fill="rgb(234,101,34)" fg:x="70824" fg:w="40"/><text x="65.3085%" y="319.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (40 samples, 0.04%)</title><rect x="65.0585%" y="293" width="0.0367%" height="15" fill="rgb(254,67,22)" fg:x="70824" fg:w="40"/><text x="65.3085%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::empty (70 samples, 0.06%)</title><rect x="65.1017%" y="373" width="0.0643%" height="15" fill="rgb(250,35,47)" fg:x="70871" fg:w="70"/><text x="65.3517%" y="383.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (70 samples, 0.06%)</title><rect x="65.1017%" y="357" width="0.0643%" height="15" fill="rgb(226,126,38)" fg:x="70871" fg:w="70"/><text x="65.3517%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (758 samples, 0.70%)</title><rect x="65.0025%" y="421" width="0.6963%" height="15" fill="rgb(216,138,53)" fg:x="70763" fg:w="758"/><text x="65.2525%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (745 samples, 0.68%)</title><rect x="65.0144%" y="405" width="0.6844%" height="15" fill="rgb(246,199,43)" fg:x="70776" fg:w="745"/><text x="65.2644%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (726 samples, 0.67%)</title><rect x="65.0319%" y="389" width="0.6669%" height="15" fill="rgb(232,125,11)" fg:x="70795" fg:w="726"/><text x="65.2819%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::take (580 samples, 0.53%)</title><rect x="65.1660%" y="373" width="0.5328%" height="15" fill="rgb(218,219,45)" fg:x="70941" fg:w="580"/><text x="65.4160%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (580 samples, 0.53%)</title><rect x="65.1660%" y="357" width="0.5328%" height="15" fill="rgb(216,102,54)" fg:x="70941" fg:w="580"/><text x="65.4160%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (808 samples, 0.74%)</title><rect x="64.9657%" y="565" width="0.7422%" height="15" fill="rgb(250,228,7)" fg:x="70723" fg:w="808"/><text x="65.2157%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (808 samples, 0.74%)</title><rect x="64.9657%" y="549" width="0.7422%" height="15" fill="rgb(226,125,25)" fg:x="70723" fg:w="808"/><text x="65.2157%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (801 samples, 0.74%)</title><rect x="64.9722%" y="533" width="0.7358%" height="15" fill="rgb(224,165,27)" fg:x="70730" fg:w="801"/><text x="65.2222%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (801 samples, 0.74%)</title><rect x="64.9722%" y="517" width="0.7358%" height="15" fill="rgb(233,86,3)" fg:x="70730" fg:w="801"/><text x="65.2222%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (801 samples, 0.74%)</title><rect x="64.9722%" y="501" width="0.7358%" height="15" fill="rgb(228,116,20)" fg:x="70730" fg:w="801"/><text x="65.2222%" y="511.50"></text></g><g><title>alloc::alloc::alloc (793 samples, 0.73%)</title><rect x="64.9795%" y="485" width="0.7284%" height="15" fill="rgb(209,192,17)" fg:x="70738" fg:w="793"/><text x="65.2295%" y="495.50"></text></g><g><title>__rg_alloc (793 samples, 0.73%)</title><rect x="64.9795%" y="469" width="0.7284%" height="15" fill="rgb(224,88,34)" fg:x="70738" fg:w="793"/><text x="65.2295%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (793 samples, 0.73%)</title><rect x="64.9795%" y="453" width="0.7284%" height="15" fill="rgb(233,38,6)" fg:x="70738" fg:w="793"/><text x="65.2295%" y="463.50"></text></g><g><title>rust_alloc (776 samples, 0.71%)</title><rect x="64.9951%" y="437" width="0.7128%" height="15" fill="rgb(212,59,30)" fg:x="70755" fg:w="776"/><text x="65.2451%" y="447.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (932 samples, 0.86%)</title><rect x="64.9014%" y="677" width="0.8561%" height="15" fill="rgb(213,80,3)" fg:x="70653" fg:w="932"/><text x="65.1514%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (903 samples, 0.83%)</title><rect x="64.9281%" y="661" width="0.8295%" height="15" fill="rgb(251,178,7)" fg:x="70682" fg:w="903"/><text x="65.1781%" y="671.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (862 samples, 0.79%)</title><rect x="64.9657%" y="645" width="0.7918%" height="15" fill="rgb(213,154,26)" fg:x="70723" fg:w="862"/><text x="65.2157%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (862 samples, 0.79%)</title><rect x="64.9657%" y="629" width="0.7918%" height="15" fill="rgb(238,165,49)" fg:x="70723" fg:w="862"/><text x="65.2157%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (862 samples, 0.79%)</title><rect x="64.9657%" y="613" width="0.7918%" height="15" fill="rgb(248,91,46)" fg:x="70723" fg:w="862"/><text x="65.2157%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (862 samples, 0.79%)</title><rect x="64.9657%" y="597" width="0.7918%" height="15" fill="rgb(244,21,52)" fg:x="70723" fg:w="862"/><text x="65.2157%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (862 samples, 0.79%)</title><rect x="64.9657%" y="581" width="0.7918%" height="15" fill="rgb(247,122,20)" fg:x="70723" fg:w="862"/><text x="65.2157%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (54 samples, 0.05%)</title><rect x="65.7080%" y="565" width="0.0496%" height="15" fill="rgb(218,27,9)" fg:x="71531" fg:w="54"/><text x="65.9580%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54 samples, 0.05%)</title><rect x="65.7080%" y="549" width="0.0496%" height="15" fill="rgb(246,7,6)" fg:x="71531" fg:w="54"/><text x="65.9580%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (51 samples, 0.05%)</title><rect x="65.7107%" y="533" width="0.0468%" height="15" fill="rgb(227,135,54)" fg:x="71534" fg:w="51"/><text x="65.9607%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (34 samples, 0.03%)</title><rect x="65.7713%" y="661" width="0.0312%" height="15" fill="rgb(247,14,11)" fg:x="71600" fg:w="34"/><text x="66.0213%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (17 samples, 0.02%)</title><rect x="65.7870%" y="645" width="0.0156%" height="15" fill="rgb(206,149,34)" fg:x="71617" fg:w="17"/><text x="66.0370%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (16 samples, 0.01%)</title><rect x="65.8108%" y="437" width="0.0147%" height="15" fill="rgb(227,228,4)" fg:x="71643" fg:w="16"/><text x="66.0608%" y="447.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="65.8485%" y="293" width="0.0101%" height="15" fill="rgb(238,218,28)" fg:x="71684" fg:w="11"/><text x="66.0985%" y="303.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="65.8485%" y="277" width="0.0101%" height="15" fill="rgb(252,86,40)" fg:x="71684" fg:w="11"/><text x="66.0985%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (152 samples, 0.14%)</title><rect x="65.8467%" y="325" width="0.1396%" height="15" fill="rgb(251,225,11)" fg:x="71682" fg:w="152"/><text x="66.0967%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (152 samples, 0.14%)</title><rect x="65.8467%" y="309" width="0.1396%" height="15" fill="rgb(206,46,49)" fg:x="71682" fg:w="152"/><text x="66.0967%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (139 samples, 0.13%)</title><rect x="65.8586%" y="293" width="0.1277%" height="15" fill="rgb(245,128,24)" fg:x="71695" fg:w="139"/><text x="66.1086%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (117 samples, 0.11%)</title><rect x="65.8788%" y="277" width="0.1075%" height="15" fill="rgb(219,177,34)" fg:x="71717" fg:w="117"/><text x="66.1288%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (117 samples, 0.11%)</title><rect x="65.8788%" y="261" width="0.1075%" height="15" fill="rgb(218,60,48)" fg:x="71717" fg:w="117"/><text x="66.1288%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (205 samples, 0.19%)</title><rect x="65.8108%" y="469" width="0.1883%" height="15" fill="rgb(221,11,5)" fg:x="71643" fg:w="205"/><text x="66.0608%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (205 samples, 0.19%)</title><rect x="65.8108%" y="453" width="0.1883%" height="15" fill="rgb(220,148,13)" fg:x="71643" fg:w="205"/><text x="66.0608%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (189 samples, 0.17%)</title><rect x="65.8255%" y="437" width="0.1736%" height="15" fill="rgb(210,16,3)" fg:x="71659" fg:w="189"/><text x="66.0755%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (189 samples, 0.17%)</title><rect x="65.8255%" y="421" width="0.1736%" height="15" fill="rgb(236,80,2)" fg:x="71659" fg:w="189"/><text x="66.0755%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (189 samples, 0.17%)</title><rect x="65.8255%" y="405" width="0.1736%" height="15" fill="rgb(239,129,19)" fg:x="71659" fg:w="189"/><text x="66.0755%" y="415.50"></text></g><g><title>alloc::alloc::alloc (185 samples, 0.17%)</title><rect x="65.8292%" y="389" width="0.1699%" height="15" fill="rgb(220,106,35)" fg:x="71663" fg:w="185"/><text x="66.0792%" y="399.50"></text></g><g><title>__rg_alloc (185 samples, 0.17%)</title><rect x="65.8292%" y="373" width="0.1699%" height="15" fill="rgb(252,139,45)" fg:x="71663" fg:w="185"/><text x="66.0792%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (185 samples, 0.17%)</title><rect x="65.8292%" y="357" width="0.1699%" height="15" fill="rgb(229,8,36)" fg:x="71663" fg:w="185"/><text x="66.0792%" y="367.50"></text></g><g><title>rust_alloc (176 samples, 0.16%)</title><rect x="65.8375%" y="341" width="0.1617%" height="15" fill="rgb(230,126,33)" fg:x="71672" fg:w="176"/><text x="66.0875%" y="351.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="65.9863%" y="325" width="0.0129%" height="15" fill="rgb(239,140,21)" fg:x="71834" fg:w="14"/><text x="66.2363%" y="335.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (265 samples, 0.24%)</title><rect x="65.8026%" y="581" width="0.2434%" height="15" fill="rgb(254,104,9)" fg:x="71634" fg:w="265"/><text x="66.0526%" y="591.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (265 samples, 0.24%)</title><rect x="65.8026%" y="565" width="0.2434%" height="15" fill="rgb(239,52,14)" fg:x="71634" fg:w="265"/><text x="66.0526%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (256 samples, 0.24%)</title><rect x="65.8108%" y="549" width="0.2352%" height="15" fill="rgb(208,227,44)" fg:x="71643" fg:w="256"/><text x="66.0608%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (256 samples, 0.24%)</title><rect x="65.8108%" y="533" width="0.2352%" height="15" fill="rgb(246,18,19)" fg:x="71643" fg:w="256"/><text x="66.0608%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (256 samples, 0.24%)</title><rect x="65.8108%" y="517" width="0.2352%" height="15" fill="rgb(235,228,25)" fg:x="71643" fg:w="256"/><text x="66.0608%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (256 samples, 0.24%)</title><rect x="65.8108%" y="501" width="0.2352%" height="15" fill="rgb(240,156,20)" fg:x="71643" fg:w="256"/><text x="66.0608%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (256 samples, 0.24%)</title><rect x="65.8108%" y="485" width="0.2352%" height="15" fill="rgb(224,8,20)" fg:x="71643" fg:w="256"/><text x="66.0608%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (51 samples, 0.05%)</title><rect x="65.9992%" y="469" width="0.0468%" height="15" fill="rgb(214,12,52)" fg:x="71848" fg:w="51"/><text x="66.2492%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (46 samples, 0.04%)</title><rect x="66.0037%" y="453" width="0.0423%" height="15" fill="rgb(211,220,47)" fg:x="71853" fg:w="46"/><text x="66.2537%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned_erms (36 samples, 0.03%)</title><rect x="66.0129%" y="437" width="0.0331%" height="15" fill="rgb(250,173,5)" fg:x="71863" fg:w="36"/><text x="66.2629%" y="447.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="66.0782%" y="437" width="0.0129%" height="15" fill="rgb(250,125,52)" fg:x="71934" fg:w="14"/><text x="66.3282%" y="447.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="66.0910%" y="405" width="0.0101%" height="15" fill="rgb(209,133,18)" fg:x="71948" fg:w="11"/><text x="66.3410%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (151 samples, 0.14%)</title><rect x="66.0910%" y="437" width="0.1387%" height="15" fill="rgb(216,173,22)" fg:x="71948" fg:w="151"/><text x="66.3410%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (151 samples, 0.14%)</title><rect x="66.0910%" y="421" width="0.1387%" height="15" fill="rgb(205,3,22)" fg:x="71948" fg:w="151"/><text x="66.3410%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (139 samples, 0.13%)</title><rect x="66.1020%" y="405" width="0.1277%" height="15" fill="rgb(248,22,20)" fg:x="71960" fg:w="139"/><text x="66.3520%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (131 samples, 0.12%)</title><rect x="66.1094%" y="389" width="0.1203%" height="15" fill="rgb(233,6,29)" fg:x="71968" fg:w="131"/><text x="66.3594%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (131 samples, 0.12%)</title><rect x="66.1094%" y="373" width="0.1203%" height="15" fill="rgb(240,22,54)" fg:x="71968" fg:w="131"/><text x="66.3594%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (185 samples, 0.17%)</title><rect x="66.0607%" y="533" width="0.1699%" height="15" fill="rgb(231,133,32)" fg:x="71915" fg:w="185"/><text x="66.3107%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (185 samples, 0.17%)</title><rect x="66.0607%" y="517" width="0.1699%" height="15" fill="rgb(248,193,4)" fg:x="71915" fg:w="185"/><text x="66.3107%" y="527.50"></text></g><g><title>alloc::alloc::alloc (175 samples, 0.16%)</title><rect x="66.0699%" y="501" width="0.1608%" height="15" fill="rgb(211,178,46)" fg:x="71925" fg:w="175"/><text x="66.3199%" y="511.50"></text></g><g><title>__rg_alloc (175 samples, 0.16%)</title><rect x="66.0699%" y="485" width="0.1608%" height="15" fill="rgb(224,5,42)" fg:x="71925" fg:w="175"/><text x="66.3199%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (175 samples, 0.16%)</title><rect x="66.0699%" y="469" width="0.1608%" height="15" fill="rgb(239,176,25)" fg:x="71925" fg:w="175"/><text x="66.3199%" y="479.50"></text></g><g><title>rust_alloc (166 samples, 0.15%)</title><rect x="66.0782%" y="453" width="0.1525%" height="15" fill="rgb(245,187,50)" fg:x="71934" fg:w="166"/><text x="66.3282%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (202 samples, 0.19%)</title><rect x="66.0524%" y="581" width="0.1856%" height="15" fill="rgb(248,24,15)" fg:x="71906" fg:w="202"/><text x="66.3024%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (193 samples, 0.18%)</title><rect x="66.0607%" y="565" width="0.1773%" height="15" fill="rgb(205,166,13)" fg:x="71915" fg:w="193"/><text x="66.3107%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (193 samples, 0.18%)</title><rect x="66.0607%" y="549" width="0.1773%" height="15" fill="rgb(208,114,23)" fg:x="71915" fg:w="193"/><text x="66.3107%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (485 samples, 0.45%)</title><rect x="65.8026%" y="597" width="0.4455%" height="15" fill="rgb(239,127,18)" fg:x="71634" fg:w="485"/><text x="66.0526%" y="607.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (11 samples, 0.01%)</title><rect x="66.2380%" y="581" width="0.0101%" height="15" fill="rgb(219,154,28)" fg:x="72108" fg:w="11"/><text x="66.4880%" y="591.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (2,027 samples, 1.86%)</title><rect x="64.4081%" y="693" width="1.8620%" height="15" fill="rgb(225,157,23)" fg:x="70116" fg:w="2027"/><text x="64.6581%" y="703.50">&lt;..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (558 samples, 0.51%)</title><rect x="65.7576%" y="677" width="0.5126%" height="15" fill="rgb(219,8,6)" fg:x="71585" fg:w="558"/><text x="66.0076%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (509 samples, 0.47%)</title><rect x="65.8026%" y="661" width="0.4676%" height="15" fill="rgb(212,47,6)" fg:x="71634" fg:w="509"/><text x="66.0526%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (509 samples, 0.47%)</title><rect x="65.8026%" y="645" width="0.4676%" height="15" fill="rgb(224,190,4)" fg:x="71634" fg:w="509"/><text x="66.0526%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (509 samples, 0.47%)</title><rect x="65.8026%" y="629" width="0.4676%" height="15" fill="rgb(239,183,29)" fg:x="71634" fg:w="509"/><text x="66.0526%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (509 samples, 0.47%)</title><rect x="65.8026%" y="613" width="0.4676%" height="15" fill="rgb(213,57,7)" fg:x="71634" fg:w="509"/><text x="66.0526%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (24 samples, 0.02%)</title><rect x="66.2481%" y="597" width="0.0220%" height="15" fill="rgb(216,148,1)" fg:x="72119" fg:w="24"/><text x="66.4981%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (80 samples, 0.07%)</title><rect x="66.3923%" y="661" width="0.0735%" height="15" fill="rgb(236,182,29)" fg:x="72276" fg:w="80"/><text x="66.6423%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (37 samples, 0.03%)</title><rect x="66.4318%" y="645" width="0.0340%" height="15" fill="rgb(244,120,48)" fg:x="72319" fg:w="37"/><text x="66.6818%" y="655.50"></text></g><g><title>aligned_size (21 samples, 0.02%)</title><rect x="66.4924%" y="469" width="0.0193%" height="15" fill="rgb(206,71,34)" fg:x="72385" fg:w="21"/><text x="66.7424%" y="479.50"></text></g><g><title>rust_alloc (47 samples, 0.04%)</title><rect x="66.5117%" y="437" width="0.0432%" height="15" fill="rgb(242,32,6)" fg:x="72406" fg:w="47"/><text x="66.7617%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (11 samples, 0.01%)</title><rect x="66.5623%" y="421" width="0.0101%" height="15" fill="rgb(241,35,3)" fg:x="72461" fg:w="11"/><text x="66.8123%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (11 samples, 0.01%)</title><rect x="66.5623%" y="405" width="0.0101%" height="15" fill="rgb(222,62,19)" fg:x="72461" fg:w="11"/><text x="66.8123%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (11 samples, 0.01%)</title><rect x="66.5623%" y="389" width="0.0101%" height="15" fill="rgb(223,110,41)" fg:x="72461" fg:w="11"/><text x="66.8123%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="66.5623%" y="373" width="0.0101%" height="15" fill="rgb(208,224,4)" fg:x="72461" fg:w="11"/><text x="66.8123%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="66.5623%" y="357" width="0.0101%" height="15" fill="rgb(241,137,19)" fg:x="72461" fg:w="11"/><text x="66.8123%" y="367.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (16 samples, 0.01%)</title><rect x="66.6008%" y="309" width="0.0147%" height="15" fill="rgb(244,24,17)" fg:x="72503" fg:w="16"/><text x="66.8508%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="66.6008%" y="293" width="0.0147%" height="15" fill="rgb(245,178,49)" fg:x="72503" fg:w="16"/><text x="66.8508%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (42 samples, 0.04%)</title><rect x="66.5907%" y="357" width="0.0386%" height="15" fill="rgb(219,160,38)" fg:x="72492" fg:w="42"/><text x="66.8407%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (42 samples, 0.04%)</title><rect x="66.5907%" y="341" width="0.0386%" height="15" fill="rgb(228,137,14)" fg:x="72492" fg:w="42"/><text x="66.8407%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (38 samples, 0.03%)</title><rect x="66.5944%" y="325" width="0.0349%" height="15" fill="rgb(237,134,11)" fg:x="72496" fg:w="38"/><text x="66.8444%" y="335.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="66.6155%" y="309" width="0.0138%" height="15" fill="rgb(211,126,44)" fg:x="72519" fg:w="15"/><text x="66.8655%" y="319.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="66.6155%" y="293" width="0.0138%" height="15" fill="rgb(226,171,33)" fg:x="72519" fg:w="15"/><text x="66.8655%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (53 samples, 0.05%)</title><rect x="66.5907%" y="373" width="0.0487%" height="15" fill="rgb(253,99,13)" fg:x="72492" fg:w="53"/><text x="66.8407%" y="383.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="66.6293%" y="357" width="0.0101%" height="15" fill="rgb(244,48,7)" fg:x="72534" fg:w="11"/><text x="66.8793%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="66.6293%" y="341" width="0.0101%" height="15" fill="rgb(244,217,54)" fg:x="72534" fg:w="11"/><text x="66.8793%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="66.6293%" y="325" width="0.0101%" height="15" fill="rgb(224,15,18)" fg:x="72534" fg:w="11"/><text x="66.8793%" y="335.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="66.6293%" y="309" width="0.0101%" height="15" fill="rgb(244,99,12)" fg:x="72534" fg:w="11"/><text x="66.8793%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (93 samples, 0.09%)</title><rect x="66.5724%" y="389" width="0.0854%" height="15" fill="rgb(233,226,8)" fg:x="72472" fg:w="93"/><text x="66.8224%" y="399.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="66.6431%" y="373" width="0.0147%" height="15" fill="rgb(229,211,3)" fg:x="72549" fg:w="16"/><text x="66.8931%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="66.6431%" y="357" width="0.0147%" height="15" fill="rgb(216,140,21)" fg:x="72549" fg:w="16"/><text x="66.8931%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (16 samples, 0.01%)</title><rect x="66.6431%" y="341" width="0.0147%" height="15" fill="rgb(234,122,30)" fg:x="72549" fg:w="16"/><text x="66.8931%" y="351.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.01%)</title><rect x="66.6431%" y="325" width="0.0147%" height="15" fill="rgb(236,25,46)" fg:x="72549" fg:w="16"/><text x="66.8931%" y="335.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (61 samples, 0.06%)</title><rect x="66.6844%" y="373" width="0.0560%" height="15" fill="rgb(217,52,54)" fg:x="72594" fg:w="61"/><text x="66.9344%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (553 samples, 0.51%)</title><rect x="66.5724%" y="421" width="0.5080%" height="15" fill="rgb(222,29,26)" fg:x="72472" fg:w="553"/><text x="66.8224%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (553 samples, 0.51%)</title><rect x="66.5724%" y="405" width="0.5080%" height="15" fill="rgb(216,177,29)" fg:x="72472" fg:w="553"/><text x="66.8224%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (460 samples, 0.42%)</title><rect x="66.6578%" y="389" width="0.4226%" height="15" fill="rgb(247,136,51)" fg:x="72565" fg:w="460"/><text x="66.9078%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (370 samples, 0.34%)</title><rect x="66.7405%" y="373" width="0.3399%" height="15" fill="rgb(231,47,47)" fg:x="72655" fg:w="370"/><text x="66.9905%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (370 samples, 0.34%)</title><rect x="66.7405%" y="357" width="0.3399%" height="15" fill="rgb(211,192,36)" fg:x="72655" fg:w="370"/><text x="66.9905%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (370 samples, 0.34%)</title><rect x="66.7405%" y="341" width="0.3399%" height="15" fill="rgb(229,156,32)" fg:x="72655" fg:w="370"/><text x="66.9905%" y="351.50"></text></g><g><title>snmalloc::CDLLNodeBase&lt;snmalloc::CDLLNode&lt;snmalloc::CapPtrCBChunk&gt;, snmalloc::CapPtrCBChunk&gt;::is_empty (11 samples, 0.01%)</title><rect x="67.0831%" y="405" width="0.0101%" height="15" fill="rgb(248,213,20)" fg:x="73028" fg:w="11"/><text x="67.3331%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (15 samples, 0.01%)</title><rect x="67.0987%" y="389" width="0.0138%" height="15" fill="rgb(217,64,7)" fg:x="73045" fg:w="15"/><text x="67.3487%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (15 samples, 0.01%)</title><rect x="67.0987%" y="373" width="0.0138%" height="15" fill="rgb(232,142,8)" fg:x="73045" fg:w="15"/><text x="67.3487%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="67.0803%" y="421" width="0.0377%" height="15" fill="rgb(224,92,44)" fg:x="73025" fg:w="41"/><text x="67.3303%" y="431.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (27 samples, 0.02%)</title><rect x="67.0932%" y="405" width="0.0248%" height="15" fill="rgb(214,169,17)" fg:x="73039" fg:w="27"/><text x="67.3432%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (27 samples, 0.02%)</title><rect x="67.1217%" y="373" width="0.0248%" height="15" fill="rgb(210,59,37)" fg:x="73070" fg:w="27"/><text x="67.3717%" y="383.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (23 samples, 0.02%)</title><rect x="67.1254%" y="357" width="0.0211%" height="15" fill="rgb(214,116,48)" fg:x="73074" fg:w="23"/><text x="67.3754%" y="367.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (18 samples, 0.02%)</title><rect x="67.1299%" y="341" width="0.0165%" height="15" fill="rgb(244,191,6)" fg:x="73079" fg:w="18"/><text x="67.3799%" y="351.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (14 samples, 0.01%)</title><rect x="67.1593%" y="341" width="0.0129%" height="15" fill="rgb(241,50,52)" fg:x="73111" fg:w="14"/><text x="67.4093%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="67.1593%" y="325" width="0.0129%" height="15" fill="rgb(236,75,39)" fg:x="73111" fg:w="14"/><text x="67.4093%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="67.1465%" y="373" width="0.0276%" height="15" fill="rgb(236,99,0)" fg:x="73097" fg:w="30"/><text x="67.3965%" y="383.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (24 samples, 0.02%)</title><rect x="67.1520%" y="357" width="0.0220%" height="15" fill="rgb(207,202,15)" fg:x="73103" fg:w="24"/><text x="67.4020%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="67.1217%" y="389" width="0.0533%" height="15" fill="rgb(233,207,14)" fg:x="73070" fg:w="58"/><text x="67.3717%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (65 samples, 0.06%)</title><rect x="67.1180%" y="421" width="0.0597%" height="15" fill="rgb(226,27,51)" fg:x="73066" fg:w="65"/><text x="67.3680%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (62 samples, 0.06%)</title><rect x="67.1208%" y="405" width="0.0570%" height="15" fill="rgb(206,104,42)" fg:x="73069" fg:w="62"/><text x="67.3708%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (52 samples, 0.05%)</title><rect x="67.1777%" y="421" width="0.0478%" height="15" fill="rgb(212,225,4)" fg:x="73131" fg:w="52"/><text x="67.4277%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (52 samples, 0.05%)</title><rect x="67.1777%" y="405" width="0.0478%" height="15" fill="rgb(233,96,42)" fg:x="73131" fg:w="52"/><text x="67.4277%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,048 samples, 0.96%)</title><rect x="66.4658%" y="613" width="0.9627%" height="15" fill="rgb(229,21,32)" fg:x="72356" fg:w="1048"/><text x="66.7158%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,048 samples, 0.96%)</title><rect x="66.4658%" y="597" width="0.9627%" height="15" fill="rgb(226,216,24)" fg:x="72356" fg:w="1048"/><text x="66.7158%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,046 samples, 0.96%)</title><rect x="66.4676%" y="581" width="0.9608%" height="15" fill="rgb(221,163,17)" fg:x="72358" fg:w="1046"/><text x="66.7176%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,046 samples, 0.96%)</title><rect x="66.4676%" y="565" width="0.9608%" height="15" fill="rgb(216,216,42)" fg:x="72358" fg:w="1046"/><text x="66.7176%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,036 samples, 0.95%)</title><rect x="66.4768%" y="549" width="0.9517%" height="15" fill="rgb(240,118,7)" fg:x="72368" fg:w="1036"/><text x="66.7268%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1,036 samples, 0.95%)</title><rect x="66.4768%" y="533" width="0.9517%" height="15" fill="rgb(221,67,37)" fg:x="72368" fg:w="1036"/><text x="66.7268%" y="543.50"></text></g><g><title>__rg_alloc (1,036 samples, 0.95%)</title><rect x="66.4768%" y="517" width="0.9517%" height="15" fill="rgb(241,32,44)" fg:x="72368" fg:w="1036"/><text x="66.7268%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,032 samples, 0.95%)</title><rect x="66.4805%" y="501" width="0.9480%" height="15" fill="rgb(235,204,43)" fg:x="72372" fg:w="1032"/><text x="66.7305%" y="511.50"></text></g><g><title>rust_alloc (1,019 samples, 0.94%)</title><rect x="66.4924%" y="485" width="0.9360%" height="15" fill="rgb(213,116,10)" fg:x="72385" fg:w="1019"/><text x="66.7424%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (998 samples, 0.92%)</title><rect x="66.5117%" y="469" width="0.9168%" height="15" fill="rgb(239,15,48)" fg:x="72406" fg:w="998"/><text x="66.7617%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (998 samples, 0.92%)</title><rect x="66.5117%" y="453" width="0.9168%" height="15" fill="rgb(207,123,36)" fg:x="72406" fg:w="998"/><text x="66.7617%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (944 samples, 0.87%)</title><rect x="66.5613%" y="437" width="0.8672%" height="15" fill="rgb(209,103,30)" fg:x="72460" fg:w="944"/><text x="66.8113%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (221 samples, 0.20%)</title><rect x="67.2255%" y="421" width="0.2030%" height="15" fill="rgb(238,100,19)" fg:x="73183" fg:w="221"/><text x="67.4755%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (221 samples, 0.20%)</title><rect x="67.2255%" y="405" width="0.2030%" height="15" fill="rgb(244,30,14)" fg:x="73183" fg:w="221"/><text x="67.4755%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,515 samples, 1.39%)</title><rect x="66.4658%" y="629" width="1.3917%" height="15" fill="rgb(249,174,6)" fg:x="72356" fg:w="1515"/><text x="66.7158%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (467 samples, 0.43%)</title><rect x="67.4285%" y="613" width="0.4290%" height="15" fill="rgb(235,213,41)" fg:x="73404" fg:w="467"/><text x="67.6785%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (467 samples, 0.43%)</title><rect x="67.4285%" y="597" width="0.4290%" height="15" fill="rgb(213,118,6)" fg:x="73404" fg:w="467"/><text x="67.6785%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (456 samples, 0.42%)</title><rect x="67.4386%" y="581" width="0.4189%" height="15" fill="rgb(235,44,51)" fg:x="73415" fg:w="456"/><text x="67.6886%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,607 samples, 1.48%)</title><rect x="66.3923%" y="677" width="1.4762%" height="15" fill="rgb(217,9,53)" fg:x="72276" fg:w="1607"/><text x="66.6423%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,527 samples, 1.40%)</title><rect x="66.4658%" y="661" width="1.4027%" height="15" fill="rgb(237,172,34)" fg:x="72356" fg:w="1527"/><text x="66.7158%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1,527 samples, 1.40%)</title><rect x="66.4658%" y="645" width="1.4027%" height="15" fill="rgb(206,206,11)" fg:x="72356" fg:w="1527"/><text x="66.7158%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="67.8575%" y="629" width="0.0110%" height="15" fill="rgb(214,149,29)" fg:x="73871" fg:w="12"/><text x="68.1075%" y="639.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (4,926 samples, 4.52%)</title><rect x="63.3499%" y="949" width="4.5250%" height="15" fill="rgb(208,123,3)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="959.50">tremo..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,926 samples, 4.52%)</title><rect x="63.3499%" y="933" width="4.5250%" height="15" fill="rgb(229,126,4)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="943.50">&lt;asyn..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,926 samples, 4.52%)</title><rect x="63.3499%" y="917" width="4.5250%" height="15" fill="rgb(222,92,36)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="927.50">&lt;asyn..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (4,926 samples, 4.52%)</title><rect x="63.3499%" y="901" width="4.5250%" height="15" fill="rgb(216,39,41)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="911.50">&lt;core..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,926 samples, 4.52%)</title><rect x="63.3499%" y="885" width="4.5250%" height="15" fill="rgb(253,127,28)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="895.50">&lt;asyn..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (4,926 samples, 4.52%)</title><rect x="63.3499%" y="869" width="4.5250%" height="15" fill="rgb(249,152,51)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="879.50">async..</text></g><g><title>std::panic::catch_unwind (4,926 samples, 4.52%)</title><rect x="63.3499%" y="853" width="4.5250%" height="15" fill="rgb(209,123,42)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="863.50">std::..</text></g><g><title>std::panicking::try (4,926 samples, 4.52%)</title><rect x="63.3499%" y="837" width="4.5250%" height="15" fill="rgb(241,118,22)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="847.50">std::..</text></g><g><title>std::panicking::try::do_call (4,926 samples, 4.52%)</title><rect x="63.3499%" y="821" width="4.5250%" height="15" fill="rgb(208,25,7)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="831.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,926 samples, 4.52%)</title><rect x="63.3499%" y="805" width="4.5250%" height="15" fill="rgb(243,144,39)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="815.50">&lt;core..</text></g><g><title>core::ops::function::FnOnce::call_once (4,926 samples, 4.52%)</title><rect x="63.3499%" y="789" width="4.5250%" height="15" fill="rgb(250,50,5)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="799.50">core:..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (4,926 samples, 4.52%)</title><rect x="63.3499%" y="773" width="4.5250%" height="15" fill="rgb(207,67,11)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="783.50">async..</text></g><g><title>async_ffi::FfiContext::with_context (4,926 samples, 4.52%)</title><rect x="63.3499%" y="757" width="4.5250%" height="15" fill="rgb(245,204,40)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="767.50">async..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (4,926 samples, 4.52%)</title><rect x="63.3499%" y="741" width="4.5250%" height="15" fill="rgb(238,228,24)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="751.50">async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,926 samples, 4.52%)</title><rect x="63.3499%" y="725" width="4.5250%" height="15" fill="rgb(217,116,22)" fg:x="68964" fg:w="4926"/><text x="63.5999%" y="735.50">&lt;core..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (4,807 samples, 4.42%)</title><rect x="63.4592%" y="709" width="4.4157%" height="15" fill="rgb(234,98,12)" fg:x="69083" fg:w="4807"/><text x="63.7092%" y="719.50">&lt;trem..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,747 samples, 1.60%)</title><rect x="66.2701%" y="693" width="1.6048%" height="15" fill="rgb(242,170,50)" fg:x="72143" fg:w="1747"/><text x="66.5201%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.02%)</title><rect x="67.8814%" y="917" width="0.0230%" height="15" fill="rgb(235,7,5)" fg:x="73897" fg:w="25"/><text x="68.1314%" y="927.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (643 samples, 0.59%)</title><rect x="68.1790%" y="901" width="0.5907%" height="15" fill="rgb(241,114,28)" fg:x="74221" fg:w="643"/><text x="68.4290%" y="911.50"></text></g><g><title>core::ptr::read (603 samples, 0.55%)</title><rect x="68.2157%" y="885" width="0.5539%" height="15" fill="rgb(246,112,42)" fg:x="74261" fg:w="603"/><text x="68.4657%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (584 samples, 0.54%)</title><rect x="68.2332%" y="869" width="0.5365%" height="15" fill="rgb(248,228,14)" fg:x="74280" fg:w="584"/><text x="68.4832%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="68.7696%" y="901" width="0.0211%" height="15" fill="rgb(208,133,18)" fg:x="74864" fg:w="23"/><text x="69.0196%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="68.7981%" y="741" width="0.0101%" height="15" fill="rgb(207,35,49)" fg:x="74895" fg:w="11"/><text x="69.0481%" y="751.50"></text></g><g><title>rust_alloc (23 samples, 0.02%)</title><rect x="68.8229%" y="597" width="0.0211%" height="15" fill="rgb(205,68,36)" fg:x="74922" fg:w="23"/><text x="69.0729%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="68.8560%" y="581" width="0.0175%" height="15" fill="rgb(245,62,40)" fg:x="74958" fg:w="19"/><text x="69.1060%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (19 samples, 0.02%)</title><rect x="68.8560%" y="565" width="0.0175%" height="15" fill="rgb(228,27,24)" fg:x="74958" fg:w="19"/><text x="69.1060%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (17 samples, 0.02%)</title><rect x="68.8578%" y="549" width="0.0156%" height="15" fill="rgb(253,19,12)" fg:x="74960" fg:w="17"/><text x="69.1078%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="68.8606%" y="533" width="0.0129%" height="15" fill="rgb(232,28,20)" fg:x="74963" fg:w="14"/><text x="69.1106%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="68.8606%" y="517" width="0.0129%" height="15" fill="rgb(218,35,51)" fg:x="74963" fg:w="14"/><text x="69.1106%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="68.8606%" y="501" width="0.0129%" height="15" fill="rgb(212,90,40)" fg:x="74963" fg:w="14"/><text x="69.1106%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (54 samples, 0.05%)</title><rect x="68.8744%" y="581" width="0.0496%" height="15" fill="rgb(220,172,12)" fg:x="74978" fg:w="54"/><text x="69.1244%" y="591.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (54 samples, 0.05%)</title><rect x="68.8744%" y="565" width="0.0496%" height="15" fill="rgb(226,159,20)" fg:x="74978" fg:w="54"/><text x="69.1244%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (392 samples, 0.36%)</title><rect x="68.8229%" y="629" width="0.3601%" height="15" fill="rgb(234,205,16)" fg:x="74922" fg:w="392"/><text x="69.0729%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (392 samples, 0.36%)</title><rect x="68.8229%" y="613" width="0.3601%" height="15" fill="rgb(207,9,39)" fg:x="74922" fg:w="392"/><text x="69.0729%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (360 samples, 0.33%)</title><rect x="68.8523%" y="597" width="0.3307%" height="15" fill="rgb(249,143,15)" fg:x="74954" fg:w="360"/><text x="69.1023%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::take (282 samples, 0.26%)</title><rect x="68.9240%" y="581" width="0.2590%" height="15" fill="rgb(253,133,29)" fg:x="75032" fg:w="282"/><text x="69.1740%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (282 samples, 0.26%)</title><rect x="68.9240%" y="565" width="0.2590%" height="15" fill="rgb(221,187,0)" fg:x="75032" fg:w="282"/><text x="69.1740%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (427 samples, 0.39%)</title><rect x="68.7981%" y="773" width="0.3922%" height="15" fill="rgb(205,204,26)" fg:x="74895" fg:w="427"/><text x="69.0481%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (427 samples, 0.39%)</title><rect x="68.7981%" y="757" width="0.3922%" height="15" fill="rgb(224,68,54)" fg:x="74895" fg:w="427"/><text x="69.0481%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (416 samples, 0.38%)</title><rect x="68.8082%" y="741" width="0.3821%" height="15" fill="rgb(209,67,4)" fg:x="74906" fg:w="416"/><text x="69.0582%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (416 samples, 0.38%)</title><rect x="68.8082%" y="725" width="0.3821%" height="15" fill="rgb(228,229,18)" fg:x="74906" fg:w="416"/><text x="69.0582%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (416 samples, 0.38%)</title><rect x="68.8082%" y="709" width="0.3821%" height="15" fill="rgb(231,89,13)" fg:x="74906" fg:w="416"/><text x="69.0582%" y="719.50"></text></g><g><title>alloc::alloc::alloc (410 samples, 0.38%)</title><rect x="68.8137%" y="693" width="0.3766%" height="15" fill="rgb(210,182,18)" fg:x="74912" fg:w="410"/><text x="69.0637%" y="703.50"></text></g><g><title>__rg_alloc (410 samples, 0.38%)</title><rect x="68.8137%" y="677" width="0.3766%" height="15" fill="rgb(240,105,2)" fg:x="74912" fg:w="410"/><text x="69.0637%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (410 samples, 0.38%)</title><rect x="68.8137%" y="661" width="0.3766%" height="15" fill="rgb(207,170,50)" fg:x="74912" fg:w="410"/><text x="69.0637%" y="671.50"></text></g><g><title>rust_alloc (410 samples, 0.38%)</title><rect x="68.8137%" y="645" width="0.3766%" height="15" fill="rgb(232,133,24)" fg:x="74912" fg:w="410"/><text x="69.0637%" y="655.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (470 samples, 0.43%)</title><rect x="68.7981%" y="901" width="0.4317%" height="15" fill="rgb(235,166,27)" fg:x="74895" fg:w="470"/><text x="69.0481%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (470 samples, 0.43%)</title><rect x="68.7981%" y="885" width="0.4317%" height="15" fill="rgb(209,19,13)" fg:x="74895" fg:w="470"/><text x="69.0481%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (470 samples, 0.43%)</title><rect x="68.7981%" y="869" width="0.4317%" height="15" fill="rgb(226,79,39)" fg:x="74895" fg:w="470"/><text x="69.0481%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (470 samples, 0.43%)</title><rect x="68.7981%" y="853" width="0.4317%" height="15" fill="rgb(222,163,10)" fg:x="74895" fg:w="470"/><text x="69.0481%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (470 samples, 0.43%)</title><rect x="68.7981%" y="837" width="0.4317%" height="15" fill="rgb(214,44,19)" fg:x="74895" fg:w="470"/><text x="69.0481%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (470 samples, 0.43%)</title><rect x="68.7981%" y="821" width="0.4317%" height="15" fill="rgb(210,217,13)" fg:x="74895" fg:w="470"/><text x="69.0481%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (470 samples, 0.43%)</title><rect x="68.7981%" y="805" width="0.4317%" height="15" fill="rgb(237,61,54)" fg:x="74895" fg:w="470"/><text x="69.0481%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (470 samples, 0.43%)</title><rect x="68.7981%" y="789" width="0.4317%" height="15" fill="rgb(226,184,24)" fg:x="74895" fg:w="470"/><text x="69.0481%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (43 samples, 0.04%)</title><rect x="69.1904%" y="773" width="0.0395%" height="15" fill="rgb(223,226,4)" fg:x="75322" fg:w="43"/><text x="69.4404%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (43 samples, 0.04%)</title><rect x="69.1904%" y="757" width="0.0395%" height="15" fill="rgb(210,26,41)" fg:x="75322" fg:w="43"/><text x="69.4404%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (34 samples, 0.03%)</title><rect x="69.1986%" y="741" width="0.0312%" height="15" fill="rgb(220,221,6)" fg:x="75331" fg:w="34"/><text x="69.4486%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (631 samples, 0.58%)</title><rect x="69.2299%" y="901" width="0.5796%" height="15" fill="rgb(225,89,49)" fg:x="75365" fg:w="631"/><text x="69.4799%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (316 samples, 0.29%)</title><rect x="69.8306%" y="885" width="0.2903%" height="15" fill="rgb(218,70,45)" fg:x="76019" fg:w="316"/><text x="70.0806%" y="895.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (29 samples, 0.03%)</title><rect x="70.1742%" y="613" width="0.0266%" height="15" fill="rgb(238,166,21)" fg:x="76393" fg:w="29"/><text x="70.4242%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (28 samples, 0.03%)</title><rect x="70.1751%" y="597" width="0.0257%" height="15" fill="rgb(224,141,44)" fg:x="76394" fg:w="28"/><text x="70.4251%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (51 samples, 0.05%)</title><rect x="70.1696%" y="661" width="0.0468%" height="15" fill="rgb(230,12,49)" fg:x="76388" fg:w="51"/><text x="70.4196%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (51 samples, 0.05%)</title><rect x="70.1696%" y="645" width="0.0468%" height="15" fill="rgb(212,174,12)" fg:x="76388" fg:w="51"/><text x="70.4196%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (51 samples, 0.05%)</title><rect x="70.1696%" y="629" width="0.0468%" height="15" fill="rgb(246,67,9)" fg:x="76388" fg:w="51"/><text x="70.4196%" y="639.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (17 samples, 0.02%)</title><rect x="70.2008%" y="613" width="0.0156%" height="15" fill="rgb(239,35,23)" fg:x="76422" fg:w="17"/><text x="70.4508%" y="623.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (17 samples, 0.02%)</title><rect x="70.2008%" y="597" width="0.0156%" height="15" fill="rgb(211,167,0)" fg:x="76422" fg:w="17"/><text x="70.4508%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (65 samples, 0.06%)</title><rect x="70.1696%" y="677" width="0.0597%" height="15" fill="rgb(225,119,45)" fg:x="76388" fg:w="65"/><text x="70.4196%" y="687.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="70.2164%" y="661" width="0.0129%" height="15" fill="rgb(210,162,6)" fg:x="76439" fg:w="14"/><text x="70.4664%" y="671.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="70.2164%" y="645" width="0.0129%" height="15" fill="rgb(208,118,35)" fg:x="76439" fg:w="14"/><text x="70.4664%" y="655.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (14 samples, 0.01%)</title><rect x="70.2164%" y="629" width="0.0129%" height="15" fill="rgb(239,4,53)" fg:x="76439" fg:w="14"/><text x="70.4664%" y="639.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="70.2164%" y="613" width="0.0129%" height="15" fill="rgb(213,130,21)" fg:x="76439" fg:w="14"/><text x="70.4664%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (102 samples, 0.09%)</title><rect x="70.1558%" y="693" width="0.0937%" height="15" fill="rgb(235,148,0)" fg:x="76373" fg:w="102"/><text x="70.4058%" y="703.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (18 samples, 0.02%)</title><rect x="70.2330%" y="677" width="0.0165%" height="15" fill="rgb(244,224,18)" fg:x="76457" fg:w="18"/><text x="70.4830%" y="687.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (18 samples, 0.02%)</title><rect x="70.2330%" y="661" width="0.0165%" height="15" fill="rgb(211,214,4)" fg:x="76457" fg:w="18"/><text x="70.4830%" y="671.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (18 samples, 0.02%)</title><rect x="70.2330%" y="645" width="0.0165%" height="15" fill="rgb(206,119,25)" fg:x="76457" fg:w="18"/><text x="70.4830%" y="655.50"></text></g><g><title>snmalloc::bits::align_down (18 samples, 0.02%)</title><rect x="70.2330%" y="629" width="0.0165%" height="15" fill="rgb(243,93,47)" fg:x="76457" fg:w="18"/><text x="70.4830%" y="639.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (67 samples, 0.06%)</title><rect x="70.2826%" y="677" width="0.0615%" height="15" fill="rgb(224,194,6)" fg:x="76511" fg:w="67"/><text x="70.5326%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (629 samples, 0.58%)</title><rect x="70.1558%" y="725" width="0.5778%" height="15" fill="rgb(243,229,6)" fg:x="76373" fg:w="629"/><text x="70.4058%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (629 samples, 0.58%)</title><rect x="70.1558%" y="709" width="0.5778%" height="15" fill="rgb(207,23,50)" fg:x="76373" fg:w="629"/><text x="70.4058%" y="719.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (527 samples, 0.48%)</title><rect x="70.2495%" y="693" width="0.4841%" height="15" fill="rgb(253,192,32)" fg:x="76475" fg:w="527"/><text x="70.4995%" y="703.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (424 samples, 0.39%)</title><rect x="70.3441%" y="677" width="0.3895%" height="15" fill="rgb(213,21,6)" fg:x="76578" fg:w="424"/><text x="70.5941%" y="687.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (424 samples, 0.39%)</title><rect x="70.3441%" y="661" width="0.3895%" height="15" fill="rgb(243,151,13)" fg:x="76578" fg:w="424"/><text x="70.5941%" y="671.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (424 samples, 0.39%)</title><rect x="70.3441%" y="645" width="0.3895%" height="15" fill="rgb(233,165,41)" fg:x="76578" fg:w="424"/><text x="70.5941%" y="655.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (20 samples, 0.02%)</title><rect x="70.7373%" y="693" width="0.0184%" height="15" fill="rgb(246,176,45)" fg:x="77006" fg:w="20"/><text x="70.9873%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (19 samples, 0.02%)</title><rect x="70.7382%" y="677" width="0.0175%" height="15" fill="rgb(217,170,52)" fg:x="77007" fg:w="19"/><text x="70.9882%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="70.7400%" y="661" width="0.0156%" height="15" fill="rgb(214,203,54)" fg:x="77009" fg:w="17"/><text x="70.9900%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::take (36 samples, 0.03%)</title><rect x="70.7556%" y="693" width="0.0331%" height="15" fill="rgb(248,215,49)" fg:x="77026" fg:w="36"/><text x="71.0056%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (36 samples, 0.03%)</title><rect x="70.7556%" y="677" width="0.0331%" height="15" fill="rgb(208,46,10)" fg:x="77026" fg:w="36"/><text x="71.0056%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (69 samples, 0.06%)</title><rect x="70.7336%" y="725" width="0.0634%" height="15" fill="rgb(254,5,31)" fg:x="77002" fg:w="69"/><text x="70.9836%" y="735.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (65 samples, 0.06%)</title><rect x="70.7373%" y="709" width="0.0597%" height="15" fill="rgb(222,104,33)" fg:x="77006" fg:w="65"/><text x="70.9873%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (978 samples, 0.90%)</title><rect x="70.1337%" y="773" width="0.8984%" height="15" fill="rgb(248,49,16)" fg:x="76349" fg:w="978"/><text x="70.3837%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (977 samples, 0.90%)</title><rect x="70.1347%" y="757" width="0.8975%" height="15" fill="rgb(232,198,41)" fg:x="76350" fg:w="977"/><text x="70.3847%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (966 samples, 0.89%)</title><rect x="70.1448%" y="741" width="0.8874%" height="15" fill="rgb(214,125,3)" fg:x="76361" fg:w="966"/><text x="70.3948%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::take (246 samples, 0.23%)</title><rect x="70.8062%" y="725" width="0.2260%" height="15" fill="rgb(229,220,28)" fg:x="77081" fg:w="246"/><text x="71.0562%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (246 samples, 0.23%)</title><rect x="70.8062%" y="709" width="0.2260%" height="15" fill="rgb(222,64,37)" fg:x="77081" fg:w="246"/><text x="71.0562%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,342 samples, 1.23%)</title><rect x="69.8095%" y="901" width="1.2328%" height="15" fill="rgb(249,184,13)" fg:x="75996" fg:w="1342"/><text x="70.0595%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,003 samples, 0.92%)</title><rect x="70.1209%" y="885" width="0.9213%" height="15" fill="rgb(252,176,6)" fg:x="76335" fg:w="1003"/><text x="70.3709%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,003 samples, 0.92%)</title><rect x="70.1209%" y="869" width="0.9213%" height="15" fill="rgb(228,153,7)" fg:x="76335" fg:w="1003"/><text x="70.3709%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003 samples, 0.92%)</title><rect x="70.1209%" y="853" width="0.9213%" height="15" fill="rgb(242,193,5)" fg:x="76335" fg:w="1003"/><text x="70.3709%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1,003 samples, 0.92%)</title><rect x="70.1209%" y="837" width="0.9213%" height="15" fill="rgb(232,140,9)" fg:x="76335" fg:w="1003"/><text x="70.3709%" y="847.50"></text></g><g><title>__rg_alloc (1,003 samples, 0.92%)</title><rect x="70.1209%" y="821" width="0.9213%" height="15" fill="rgb(213,222,16)" fg:x="76335" fg:w="1003"/><text x="70.3709%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,003 samples, 0.92%)</title><rect x="70.1209%" y="805" width="0.9213%" height="15" fill="rgb(222,75,50)" fg:x="76335" fg:w="1003"/><text x="70.3709%" y="815.50"></text></g><g><title>rust_alloc (998 samples, 0.92%)</title><rect x="70.1255%" y="789" width="0.9168%" height="15" fill="rgb(205,180,2)" fg:x="76340" fg:w="998"/><text x="70.3755%" y="799.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="71.0321%" y="773" width="0.0101%" height="15" fill="rgb(216,34,7)" fg:x="77327" fg:w="11"/><text x="71.2821%" y="783.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (14 samples, 0.01%)</title><rect x="71.0487%" y="869" width="0.0129%" height="15" fill="rgb(253,16,32)" fg:x="77345" fg:w="14"/><text x="71.2987%" y="879.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (12 samples, 0.01%)</title><rect x="71.0505%" y="853" width="0.0110%" height="15" fill="rgb(208,97,28)" fg:x="77347" fg:w="12"/><text x="71.3005%" y="863.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (12 samples, 0.01%)</title><rect x="71.0505%" y="837" width="0.0110%" height="15" fill="rgb(225,92,11)" fg:x="77347" fg:w="12"/><text x="71.3005%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="71.0505%" y="821" width="0.0110%" height="15" fill="rgb(243,38,12)" fg:x="77347" fg:w="12"/><text x="71.3005%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (12 samples, 0.01%)</title><rect x="71.0505%" y="805" width="0.0110%" height="15" fill="rgb(208,139,16)" fg:x="77347" fg:w="12"/><text x="71.3005%" y="815.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="71.0615%" y="853" width="0.0147%" height="15" fill="rgb(227,24,9)" fg:x="77359" fg:w="16"/><text x="71.3115%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (14 samples, 0.01%)</title><rect x="71.0634%" y="837" width="0.0129%" height="15" fill="rgb(206,62,11)" fg:x="77361" fg:w="14"/><text x="71.3134%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="71.0634%" y="821" width="0.0129%" height="15" fill="rgb(228,134,27)" fg:x="77361" fg:w="14"/><text x="71.3134%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (17 samples, 0.02%)</title><rect x="71.0615%" y="869" width="0.0156%" height="15" fill="rgb(205,55,33)" fg:x="77359" fg:w="17"/><text x="71.3115%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.05%)</title><rect x="71.0422%" y="885" width="0.0450%" height="15" fill="rgb(243,75,43)" fg:x="77338" fg:w="49"/><text x="71.2922%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)]&gt; (11 samples, 0.01%)</title><rect x="71.0771%" y="869" width="0.0101%" height="15" fill="rgb(223,27,42)" fg:x="77376" fg:w="11"/><text x="71.3271%" y="879.50"></text></g><g><title>rust_dealloc (25 samples, 0.02%)</title><rect x="71.1001%" y="789" width="0.0230%" height="15" fill="rgb(232,189,33)" fg:x="77401" fg:w="25"/><text x="71.3501%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (13 samples, 0.01%)</title><rect x="71.1286%" y="789" width="0.0119%" height="15" fill="rgb(210,9,39)" fg:x="77432" fg:w="13"/><text x="71.3786%" y="799.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (11 samples, 0.01%)</title><rect x="71.1304%" y="773" width="0.0101%" height="15" fill="rgb(242,85,26)" fg:x="77434" fg:w="11"/><text x="71.3804%" y="783.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (22 samples, 0.02%)</title><rect x="71.1708%" y="741" width="0.0202%" height="15" fill="rgb(248,44,4)" fg:x="77478" fg:w="22"/><text x="71.4208%" y="751.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="71.1773%" y="725" width="0.0138%" height="15" fill="rgb(250,96,46)" fg:x="77485" fg:w="15"/><text x="71.4273%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (63 samples, 0.06%)</title><rect x="71.1405%" y="789" width="0.0579%" height="15" fill="rgb(229,116,26)" fg:x="77445" fg:w="63"/><text x="71.3905%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (63 samples, 0.06%)</title><rect x="71.1405%" y="773" width="0.0579%" height="15" fill="rgb(246,94,34)" fg:x="77445" fg:w="63"/><text x="71.3905%" y="783.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (54 samples, 0.05%)</title><rect x="71.1488%" y="757" width="0.0496%" height="15" fill="rgb(251,73,21)" fg:x="77454" fg:w="54"/><text x="71.3988%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (119 samples, 0.11%)</title><rect x="71.1001%" y="821" width="0.1093%" height="15" fill="rgb(254,121,25)" fg:x="77401" fg:w="119"/><text x="71.3501%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (119 samples, 0.11%)</title><rect x="71.1001%" y="805" width="0.1093%" height="15" fill="rgb(215,161,49)" fg:x="77401" fg:w="119"/><text x="71.3501%" y="815.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="71.1984%" y="789" width="0.0110%" height="15" fill="rgb(221,43,13)" fg:x="77508" fg:w="12"/><text x="71.4484%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (134 samples, 0.12%)</title><rect x="71.1001%" y="853" width="0.1231%" height="15" fill="rgb(249,5,37)" fg:x="77401" fg:w="134"/><text x="71.3501%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (134 samples, 0.12%)</title><rect x="71.1001%" y="837" width="0.1231%" height="15" fill="rgb(226,25,44)" fg:x="77401" fg:w="134"/><text x="71.3501%" y="847.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="71.2094%" y="821" width="0.0138%" height="15" fill="rgb(238,189,16)" fg:x="77520" fg:w="15"/><text x="71.4594%" y="831.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="71.2094%" y="805" width="0.0138%" height="15" fill="rgb(251,186,8)" fg:x="77520" fg:w="15"/><text x="71.4594%" y="815.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (15 samples, 0.01%)</title><rect x="71.2094%" y="789" width="0.0138%" height="15" fill="rgb(254,34,31)" fg:x="77520" fg:w="15"/><text x="71.4594%" y="799.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="71.2094%" y="773" width="0.0138%" height="15" fill="rgb(225,215,27)" fg:x="77520" fg:w="15"/><text x="71.4594%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (150 samples, 0.14%)</title><rect x="71.0900%" y="869" width="0.1378%" height="15" fill="rgb(221,192,48)" fg:x="77390" fg:w="150"/><text x="71.3400%" y="879.50"></text></g><g><title>rust_dealloc (169 samples, 0.16%)</title><rect x="71.0872%" y="885" width="0.1552%" height="15" fill="rgb(219,137,20)" fg:x="77387" fg:w="169"/><text x="71.3372%" y="895.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (16 samples, 0.01%)</title><rect x="71.2278%" y="869" width="0.0147%" height="15" fill="rgb(219,84,11)" fg:x="77540" fg:w="16"/><text x="71.4778%" y="879.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (24 samples, 0.02%)</title><rect x="71.2517%" y="869" width="0.0220%" height="15" fill="rgb(224,10,23)" fg:x="77566" fg:w="24"/><text x="71.5017%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (258 samples, 0.24%)</title><rect x="71.0422%" y="901" width="0.2370%" height="15" fill="rgb(248,22,39)" fg:x="77338" fg:w="258"/><text x="71.2922%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (39 samples, 0.04%)</title><rect x="71.2434%" y="885" width="0.0358%" height="15" fill="rgb(212,154,20)" fg:x="77557" fg:w="39"/><text x="71.4934%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (17 samples, 0.02%)</title><rect x="71.2792%" y="901" width="0.0156%" height="15" fill="rgb(236,199,50)" fg:x="77596" fg:w="17"/><text x="71.5292%" y="911.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="71.2792%" y="885" width="0.0156%" height="15" fill="rgb(211,9,17)" fg:x="77596" fg:w="17"/><text x="71.5292%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="71.2949%" y="901" width="0.0110%" height="15" fill="rgb(243,216,36)" fg:x="77613" fg:w="12"/><text x="71.5449%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt; (11 samples, 0.01%)</title><rect x="71.2958%" y="885" width="0.0101%" height="15" fill="rgb(250,2,10)" fg:x="77614" fg:w="11"/><text x="71.5458%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (15 samples, 0.01%)</title><rect x="71.3059%" y="901" width="0.0138%" height="15" fill="rgb(226,50,48)" fg:x="77625" fg:w="15"/><text x="71.5559%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (57 samples, 0.05%)</title><rect x="71.3197%" y="901" width="0.0524%" height="15" fill="rgb(243,81,16)" fg:x="77640" fg:w="57"/><text x="71.5697%" y="911.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (57 samples, 0.05%)</title><rect x="71.3197%" y="885" width="0.0524%" height="15" fill="rgb(250,14,2)" fg:x="77640" fg:w="57"/><text x="71.5697%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (56 samples, 0.05%)</title><rect x="71.3206%" y="869" width="0.0514%" height="15" fill="rgb(233,135,29)" fg:x="77641" fg:w="56"/><text x="71.5706%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (56 samples, 0.05%)</title><rect x="71.3206%" y="853" width="0.0514%" height="15" fill="rgb(224,64,43)" fg:x="77641" fg:w="56"/><text x="71.5706%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (41 samples, 0.04%)</title><rect x="71.3343%" y="837" width="0.0377%" height="15" fill="rgb(238,84,13)" fg:x="77656" fg:w="41"/><text x="71.5843%" y="847.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (41 samples, 0.04%)</title><rect x="71.3343%" y="821" width="0.0377%" height="15" fill="rgb(253,48,26)" fg:x="77656" fg:w="41"/><text x="71.5843%" y="831.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (41 samples, 0.04%)</title><rect x="71.3343%" y="805" width="0.0377%" height="15" fill="rgb(205,223,31)" fg:x="77656" fg:w="41"/><text x="71.5843%" y="815.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (40 samples, 0.04%)</title><rect x="71.3353%" y="789" width="0.0367%" height="15" fill="rgb(221,41,32)" fg:x="77657" fg:w="40"/><text x="71.5853%" y="799.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (24 samples, 0.02%)</title><rect x="71.3500%" y="773" width="0.0220%" height="15" fill="rgb(213,158,31)" fg:x="77673" fg:w="24"/><text x="71.6000%" y="783.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::increment_out (12 samples, 0.01%)</title><rect x="71.3720%" y="901" width="0.0110%" height="15" fill="rgb(245,126,43)" fg:x="77697" fg:w="12"/><text x="71.6220%" y="911.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (8,829 samples, 8.11%)</title><rect x="63.3499%" y="981" width="8.1103%" height="15" fill="rgb(227,7,22)" fg:x="68964" fg:w="8829"/><text x="63.5999%" y="991.50">tremor_runt..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,829 samples, 8.11%)</title><rect x="63.3499%" y="965" width="8.1103%" height="15" fill="rgb(252,90,44)" fg:x="68964" fg:w="8829"/><text x="63.5999%" y="975.50">&lt;core::futu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,903 samples, 3.59%)</title><rect x="67.8749%" y="949" width="3.5853%" height="15" fill="rgb(253,91,0)" fg:x="73890" fg:w="3903"/><text x="68.1249%" y="959.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,903 samples, 3.59%)</title><rect x="67.8749%" y="933" width="3.5853%" height="15" fill="rgb(252,175,49)" fg:x="73890" fg:w="3903"/><text x="68.1249%" y="943.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,871 samples, 3.56%)</title><rect x="67.9043%" y="917" width="3.5559%" height="15" fill="rgb(246,150,1)" fg:x="73922" fg:w="3871"/><text x="68.1543%" y="927.50">trem..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (84 samples, 0.08%)</title><rect x="71.3830%" y="901" width="0.0772%" height="15" fill="rgb(241,192,25)" fg:x="77709" fg:w="84"/><text x="71.6330%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (84 samples, 0.08%)</title><rect x="71.3830%" y="885" width="0.0772%" height="15" fill="rgb(239,187,11)" fg:x="77709" fg:w="84"/><text x="71.6330%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (84 samples, 0.08%)</title><rect x="71.3830%" y="869" width="0.0772%" height="15" fill="rgb(218,202,51)" fg:x="77709" fg:w="84"/><text x="71.6330%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (50 samples, 0.05%)</title><rect x="71.4143%" y="853" width="0.0459%" height="15" fill="rgb(225,176,8)" fg:x="77743" fg:w="50"/><text x="71.6643%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (76 samples, 0.07%)</title><rect x="71.5713%" y="917" width="0.0698%" height="15" fill="rgb(219,122,41)" fg:x="77914" fg:w="76"/><text x="71.8213%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (59 samples, 0.05%)</title><rect x="71.5870%" y="901" width="0.0542%" height="15" fill="rgb(248,140,20)" fg:x="77931" fg:w="59"/><text x="71.8370%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (12 samples, 0.01%)</title><rect x="71.6301%" y="885" width="0.0110%" height="15" fill="rgb(245,41,37)" fg:x="77978" fg:w="12"/><text x="71.8801%" y="895.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.01%)</title><rect x="71.6412%" y="917" width="0.0147%" height="15" fill="rgb(235,82,39)" fg:x="77990" fg:w="16"/><text x="71.8912%" y="927.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (878 samples, 0.81%)</title><rect x="71.4767%" y="933" width="0.8065%" height="15" fill="rgb(230,108,42)" fg:x="77811" fg:w="878"/><text x="71.7267%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (683 samples, 0.63%)</title><rect x="71.6559%" y="917" width="0.6274%" height="15" fill="rgb(215,150,50)" fg:x="78006" fg:w="683"/><text x="71.9059%" y="927.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,310 samples, 1.20%)</title><rect x="71.4602%" y="965" width="1.2034%" height="15" fill="rgb(233,212,5)" fg:x="77793" fg:w="1310"/><text x="71.7102%" y="975.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,310 samples, 1.20%)</title><rect x="71.4602%" y="949" width="1.2034%" height="15" fill="rgb(245,80,22)" fg:x="77793" fg:w="1310"/><text x="71.7102%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (414 samples, 0.38%)</title><rect x="72.2833%" y="933" width="0.3803%" height="15" fill="rgb(238,129,16)" fg:x="78689" fg:w="414"/><text x="72.5333%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (13,773 samples, 12.65%)</title><rect x="60.0614%" y="1157" width="12.6518%" height="15" fill="rgb(240,19,0)" fg:x="65384" fg:w="13773"/><text x="60.3114%" y="1167.50">async_task::raw::Ra..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (13,773 samples, 12.65%)</title><rect x="60.0614%" y="1141" width="12.6518%" height="15" fill="rgb(232,42,35)" fg:x="65384" fg:w="13773"/><text x="60.3114%" y="1151.50">&lt;core::pin::Pin&lt;P&gt; ..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,773 samples, 12.65%)</title><rect x="60.0614%" y="1125" width="12.6518%" height="15" fill="rgb(223,130,24)" fg:x="65384" fg:w="13773"/><text x="60.3114%" y="1135.50">&lt;core::future::from..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (13,773 samples, 12.65%)</title><rect x="60.0614%" y="1109" width="12.6518%" height="15" fill="rgb(237,16,22)" fg:x="65384" fg:w="13773"/><text x="60.3114%" y="1119.50">async_executor::Exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (13,773 samples, 12.65%)</title><rect x="60.0614%" y="1093" width="12.6518%" height="15" fill="rgb(248,192,20)" fg:x="65384" fg:w="13773"/><text x="60.3114%" y="1103.50">&lt;async_std::task::b..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (13,773 samples, 12.65%)</title><rect x="60.0614%" y="1077" width="12.6518%" height="15" fill="rgb(233,167,2)" fg:x="65384" fg:w="13773"/><text x="60.3114%" y="1087.50">async_std::task::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13,773 samples, 12.65%)</title><rect x="60.0614%" y="1061" width="12.6518%" height="15" fill="rgb(252,71,44)" fg:x="65384" fg:w="13773"/><text x="60.3114%" y="1071.50">std::thread::local:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,773 samples, 12.65%)</title><rect x="60.0614%" y="1045" width="12.6518%" height="15" fill="rgb(238,37,47)" fg:x="65384" fg:w="13773"/><text x="60.3114%" y="1055.50">std::thread::local:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (13,773 samples, 12.65%)</title><rect x="60.0614%" y="1029" width="12.6518%" height="15" fill="rgb(214,202,54)" fg:x="65384" fg:w="13773"/><text x="60.3114%" y="1039.50">async_std::task::ta..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (13,773 samples, 12.65%)</title><rect x="60.0614%" y="1013" width="12.6518%" height="15" fill="rgb(254,165,40)" fg:x="65384" fg:w="13773"/><text x="60.3114%" y="1023.50">&lt;async_std::task::b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,773 samples, 12.65%)</title><rect x="60.0614%" y="997" width="12.6518%" height="15" fill="rgb(246,173,38)" fg:x="65384" fg:w="13773"/><text x="60.3114%" y="1007.50">&lt;core::future::from..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,364 samples, 1.25%)</title><rect x="71.4602%" y="981" width="1.2530%" height="15" fill="rgb(215,3,27)" fg:x="77793" fg:w="1364"/><text x="71.7102%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (54 samples, 0.05%)</title><rect x="72.6636%" y="965" width="0.0496%" height="15" fill="rgb(239,169,51)" fg:x="79103" fg:w="54"/><text x="72.9136%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (54 samples, 0.05%)</title><rect x="72.6636%" y="949" width="0.0496%" height="15" fill="rgb(212,5,25)" fg:x="79103" fg:w="54"/><text x="72.9136%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (54 samples, 0.05%)</title><rect x="72.6636%" y="933" width="0.0496%" height="15" fill="rgb(243,45,17)" fg:x="79103" fg:w="54"/><text x="72.9136%" y="943.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="72.6636%" y="917" width="0.0496%" height="15" fill="rgb(242,97,9)" fg:x="79103" fg:w="54"/><text x="72.9136%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (54 samples, 0.05%)</title><rect x="72.6636%" y="901" width="0.0496%" height="15" fill="rgb(228,71,31)" fg:x="79103" fg:w="54"/><text x="72.9136%" y="911.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="72.6636%" y="885" width="0.0496%" height="15" fill="rgb(252,184,16)" fg:x="79103" fg:w="54"/><text x="72.9136%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (25 samples, 0.02%)</title><rect x="72.6902%" y="869" width="0.0230%" height="15" fill="rgb(236,169,46)" fg:x="79132" fg:w="25"/><text x="72.9402%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (25 samples, 0.02%)</title><rect x="72.6902%" y="853" width="0.0230%" height="15" fill="rgb(207,17,47)" fg:x="79132" fg:w="25"/><text x="72.9402%" y="863.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="72.6939%" y="837" width="0.0193%" height="15" fill="rgb(206,201,28)" fg:x="79136" fg:w="21"/><text x="72.9439%" y="847.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="72.6939%" y="821" width="0.0193%" height="15" fill="rgb(224,184,23)" fg:x="79136" fg:w="21"/><text x="72.9439%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="72.6939%" y="805" width="0.0193%" height="15" fill="rgb(208,139,48)" fg:x="79136" fg:w="21"/><text x="72.9439%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (20 samples, 0.02%)</title><rect x="72.7150%" y="1157" width="0.0184%" height="15" fill="rgb(208,130,10)" fg:x="79159" fg:w="20"/><text x="72.9650%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (24 samples, 0.02%)</title><rect x="72.7334%" y="1157" width="0.0220%" height="15" fill="rgb(211,213,45)" fg:x="79179" fg:w="24"/><text x="72.9834%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="72.7655%" y="1157" width="0.0202%" height="15" fill="rgb(235,100,30)" fg:x="79214" fg:w="22"/><text x="73.0155%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (27 samples, 0.02%)</title><rect x="72.7857%" y="1157" width="0.0248%" height="15" fill="rgb(206,144,31)" fg:x="79236" fg:w="27"/><text x="73.0357%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (62 samples, 0.06%)</title><rect x="72.8105%" y="1157" width="0.0570%" height="15" fill="rgb(224,200,26)" fg:x="79263" fg:w="62"/><text x="73.0605%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (26 samples, 0.02%)</title><rect x="72.8675%" y="1157" width="0.0239%" height="15" fill="rgb(247,104,53)" fg:x="79325" fg:w="26"/><text x="73.1175%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (42 samples, 0.04%)</title><rect x="72.9079%" y="1157" width="0.0386%" height="15" fill="rgb(220,14,17)" fg:x="79369" fg:w="42"/><text x="73.1579%" y="1167.50"></text></g><g><title>event_listener::Event::notify (38 samples, 0.03%)</title><rect x="72.9465%" y="1157" width="0.0349%" height="15" fill="rgb(230,140,40)" fg:x="79411" fg:w="38"/><text x="73.1965%" y="1167.50"></text></g><g><title>event_listener::full_fence (28 samples, 0.03%)</title><rect x="72.9557%" y="1141" width="0.0257%" height="15" fill="rgb(229,2,41)" fg:x="79421" fg:w="28"/><text x="73.2057%" y="1151.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (15 samples, 0.01%)</title><rect x="72.9860%" y="1157" width="0.0138%" height="15" fill="rgb(232,89,16)" fg:x="79454" fg:w="15"/><text x="73.2360%" y="1167.50"></text></g><g><title>polling::epoll::Poller::wait (23 samples, 0.02%)</title><rect x="73.0154%" y="1157" width="0.0211%" height="15" fill="rgb(247,59,52)" fg:x="79486" fg:w="23"/><text x="73.2654%" y="1167.50"></text></g><g><title>rust_alloc (95 samples, 0.09%)</title><rect x="73.0365%" y="1157" width="0.0873%" height="15" fill="rgb(226,110,21)" fg:x="79509" fg:w="95"/><text x="73.2865%" y="1167.50"></text></g><g><title>rust_dealloc (23 samples, 0.02%)</title><rect x="73.1238%" y="1157" width="0.0211%" height="15" fill="rgb(224,176,43)" fg:x="79604" fg:w="23"/><text x="73.3738%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (22 samples, 0.02%)</title><rect x="73.1247%" y="1141" width="0.0202%" height="15" fill="rgb(221,73,6)" fg:x="79605" fg:w="22"/><text x="73.3747%" y="1151.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (22 samples, 0.02%)</title><rect x="73.1247%" y="1125" width="0.0202%" height="15" fill="rgb(232,78,19)" fg:x="79605" fg:w="22"/><text x="73.3747%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (22 samples, 0.02%)</title><rect x="73.1247%" y="1109" width="0.0202%" height="15" fill="rgb(233,112,48)" fg:x="79605" fg:w="22"/><text x="73.3747%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (22 samples, 0.02%)</title><rect x="73.1247%" y="1093" width="0.0202%" height="15" fill="rgb(243,131,47)" fg:x="79605" fg:w="22"/><text x="73.3747%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (22 samples, 0.02%)</title><rect x="73.1247%" y="1077" width="0.0202%" height="15" fill="rgb(226,51,1)" fg:x="79605" fg:w="22"/><text x="73.3747%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (22 samples, 0.02%)</title><rect x="73.1247%" y="1061" width="0.0202%" height="15" fill="rgb(247,58,7)" fg:x="79605" fg:w="22"/><text x="73.3747%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (22 samples, 0.02%)</title><rect x="73.1247%" y="1045" width="0.0202%" height="15" fill="rgb(209,7,32)" fg:x="79605" fg:w="22"/><text x="73.3747%" y="1055.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (22 samples, 0.02%)</title><rect x="73.1247%" y="1029" width="0.0202%" height="15" fill="rgb(209,39,41)" fg:x="79605" fg:w="22"/><text x="73.3747%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (17 samples, 0.02%)</title><rect x="73.1495%" y="1157" width="0.0156%" height="15" fill="rgb(226,182,46)" fg:x="79632" fg:w="17"/><text x="73.3995%" y="1167.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (36 samples, 0.03%)</title><rect x="73.1725%" y="1157" width="0.0331%" height="15" fill="rgb(230,219,10)" fg:x="79657" fg:w="36"/><text x="73.4225%" y="1167.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="73.2074%" y="949" width="0.0138%" height="15" fill="rgb(227,175,30)" fg:x="79695" fg:w="15"/><text x="73.4574%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (35 samples, 0.03%)</title><rect x="73.2322%" y="757" width="0.0322%" height="15" fill="rgb(217,2,50)" fg:x="79722" fg:w="35"/><text x="73.4822%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (36 samples, 0.03%)</title><rect x="73.2322%" y="821" width="0.0331%" height="15" fill="rgb(229,160,0)" fg:x="79722" fg:w="36"/><text x="73.4822%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="73.2322%" y="805" width="0.0331%" height="15" fill="rgb(207,78,37)" fg:x="79722" fg:w="36"/><text x="73.4822%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (36 samples, 0.03%)</title><rect x="73.2322%" y="789" width="0.0331%" height="15" fill="rgb(225,57,0)" fg:x="79722" fg:w="36"/><text x="73.4822%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (36 samples, 0.03%)</title><rect x="73.2322%" y="773" width="0.0331%" height="15" fill="rgb(232,154,2)" fg:x="79722" fg:w="36"/><text x="73.4822%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (19 samples, 0.02%)</title><rect x="73.2652%" y="821" width="0.0175%" height="15" fill="rgb(241,212,25)" fg:x="79758" fg:w="19"/><text x="73.5152%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="73.2652%" y="805" width="0.0175%" height="15" fill="rgb(226,69,20)" fg:x="79758" fg:w="19"/><text x="73.5152%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (30 samples, 0.03%)</title><rect x="73.3204%" y="741" width="0.0276%" height="15" fill="rgb(247,184,54)" fg:x="79818" fg:w="30"/><text x="73.5704%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (30 samples, 0.03%)</title><rect x="73.3204%" y="725" width="0.0276%" height="15" fill="rgb(210,145,0)" fg:x="79818" fg:w="30"/><text x="73.5704%" y="735.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (49 samples, 0.05%)</title><rect x="73.3479%" y="741" width="0.0450%" height="15" fill="rgb(253,82,12)" fg:x="79848" fg:w="49"/><text x="73.5979%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (49 samples, 0.05%)</title><rect x="73.3479%" y="725" width="0.0450%" height="15" fill="rgb(245,42,11)" fg:x="79848" fg:w="49"/><text x="73.5979%" y="735.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (49 samples, 0.05%)</title><rect x="73.3479%" y="709" width="0.0450%" height="15" fill="rgb(219,147,32)" fg:x="79848" fg:w="49"/><text x="73.5979%" y="719.50"></text></g><g><title>__GI___pthread_cond_signal (49 samples, 0.05%)</title><rect x="73.3479%" y="693" width="0.0450%" height="15" fill="rgb(246,12,7)" fg:x="79848" fg:w="49"/><text x="73.5979%" y="703.50"></text></g><g><title>parking::Unparker::unpark (136 samples, 0.12%)</title><rect x="73.2965%" y="773" width="0.1249%" height="15" fill="rgb(243,50,9)" fg:x="79792" fg:w="136"/><text x="73.5465%" y="783.50"></text></g><g><title>parking::Inner::unpark (120 samples, 0.11%)</title><rect x="73.3112%" y="757" width="0.1102%" height="15" fill="rgb(219,149,6)" fg:x="79808" fg:w="120"/><text x="73.5612%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 0.03%)</title><rect x="73.3929%" y="741" width="0.0285%" height="15" fill="rgb(241,51,42)" fg:x="79897" fg:w="31"/><text x="73.6429%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (31 samples, 0.03%)</title><rect x="73.3929%" y="725" width="0.0285%" height="15" fill="rgb(226,128,27)" fg:x="79897" fg:w="31"/><text x="73.6429%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (31 samples, 0.03%)</title><rect x="73.3929%" y="709" width="0.0285%" height="15" fill="rgb(244,144,4)" fg:x="79897" fg:w="31"/><text x="73.6429%" y="719.50"></text></g><g><title>___pthread_mutex_lock (31 samples, 0.03%)</title><rect x="73.3929%" y="693" width="0.0285%" height="15" fill="rgb(221,4,13)" fg:x="79897" fg:w="31"/><text x="73.6429%" y="703.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (157 samples, 0.14%)</title><rect x="73.2845%" y="789" width="0.1442%" height="15" fill="rgb(208,170,28)" fg:x="79779" fg:w="157"/><text x="73.5345%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (178 samples, 0.16%)</title><rect x="73.2827%" y="821" width="0.1635%" height="15" fill="rgb(226,131,13)" fg:x="79777" fg:w="178"/><text x="73.5327%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (178 samples, 0.16%)</title><rect x="73.2827%" y="805" width="0.1635%" height="15" fill="rgb(215,72,41)" fg:x="79777" fg:w="178"/><text x="73.5327%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="73.4287%" y="789" width="0.0175%" height="15" fill="rgb(243,108,20)" fg:x="79936" fg:w="19"/><text x="73.6787%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="73.4287%" y="773" width="0.0175%" height="15" fill="rgb(230,189,17)" fg:x="79936" fg:w="19"/><text x="73.6787%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.02%)</title><rect x="73.4297%" y="757" width="0.0165%" height="15" fill="rgb(220,50,17)" fg:x="79937" fg:w="18"/><text x="73.6797%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (18 samples, 0.02%)</title><rect x="73.4297%" y="741" width="0.0165%" height="15" fill="rgb(248,152,48)" fg:x="79937" fg:w="18"/><text x="73.6797%" y="751.50"></text></g><g><title>async_executor::State::notify (285 samples, 0.26%)</title><rect x="73.2221%" y="837" width="0.2618%" height="15" fill="rgb(244,91,11)" fg:x="79711" fg:w="285"/><text x="73.4721%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (41 samples, 0.04%)</title><rect x="73.4462%" y="821" width="0.0377%" height="15" fill="rgb(220,157,5)" fg:x="79955" fg:w="41"/><text x="73.6962%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (40 samples, 0.04%)</title><rect x="73.4471%" y="805" width="0.0367%" height="15" fill="rgb(253,137,8)" fg:x="79956" fg:w="40"/><text x="73.6971%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (36 samples, 0.03%)</title><rect x="73.4508%" y="789" width="0.0331%" height="15" fill="rgb(217,137,51)" fg:x="79960" fg:w="36"/><text x="73.7008%" y="799.50"></text></g><g><title>___pthread_mutex_lock (36 samples, 0.03%)</title><rect x="73.4508%" y="773" width="0.0331%" height="15" fill="rgb(218,209,53)" fg:x="79960" fg:w="36"/><text x="73.7008%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (54 samples, 0.05%)</title><rect x="73.4976%" y="805" width="0.0496%" height="15" fill="rgb(249,137,25)" fg:x="80011" fg:w="54"/><text x="73.7476%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (54 samples, 0.05%)</title><rect x="73.4976%" y="789" width="0.0496%" height="15" fill="rgb(239,155,26)" fg:x="80011" fg:w="54"/><text x="73.7476%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (21 samples, 0.02%)</title><rect x="73.5482%" y="805" width="0.0193%" height="15" fill="rgb(227,85,46)" fg:x="80066" fg:w="21"/><text x="73.7982%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_or (21 samples, 0.02%)</title><rect x="73.5482%" y="789" width="0.0193%" height="15" fill="rgb(251,107,43)" fg:x="80066" fg:w="21"/><text x="73.7982%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (396 samples, 0.36%)</title><rect x="73.2074%" y="1029" width="0.3638%" height="15" fill="rgb(234,170,33)" fg:x="79695" fg:w="396"/><text x="73.4574%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (396 samples, 0.36%)</title><rect x="73.2074%" y="1013" width="0.3638%" height="15" fill="rgb(206,29,35)" fg:x="79695" fg:w="396"/><text x="73.4574%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (396 samples, 0.36%)</title><rect x="73.2074%" y="997" width="0.3638%" height="15" fill="rgb(227,138,25)" fg:x="79695" fg:w="396"/><text x="73.4574%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (396 samples, 0.36%)</title><rect x="73.2074%" y="981" width="0.3638%" height="15" fill="rgb(249,131,35)" fg:x="79695" fg:w="396"/><text x="73.4574%" y="991.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (396 samples, 0.36%)</title><rect x="73.2074%" y="965" width="0.3638%" height="15" fill="rgb(239,6,40)" fg:x="79695" fg:w="396"/><text x="73.4574%" y="975.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (381 samples, 0.35%)</title><rect x="73.2211%" y="949" width="0.3500%" height="15" fill="rgb(246,136,47)" fg:x="79710" fg:w="381"/><text x="73.4711%" y="959.50"></text></g><g><title>event_listener::Event::notify (381 samples, 0.35%)</title><rect x="73.2211%" y="933" width="0.3500%" height="15" fill="rgb(253,58,26)" fg:x="79710" fg:w="381"/><text x="73.4711%" y="943.50"></text></g><g><title>event_listener::List::notify (381 samples, 0.35%)</title><rect x="73.2211%" y="917" width="0.3500%" height="15" fill="rgb(237,141,10)" fg:x="79710" fg:w="381"/><text x="73.4711%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (381 samples, 0.35%)</title><rect x="73.2211%" y="901" width="0.3500%" height="15" fill="rgb(234,156,12)" fg:x="79710" fg:w="381"/><text x="73.4711%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (381 samples, 0.35%)</title><rect x="73.2211%" y="885" width="0.3500%" height="15" fill="rgb(243,224,36)" fg:x="79710" fg:w="381"/><text x="73.4711%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (381 samples, 0.35%)</title><rect x="73.2211%" y="869" width="0.3500%" height="15" fill="rgb(205,229,51)" fg:x="79710" fg:w="381"/><text x="73.4711%" y="879.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (381 samples, 0.35%)</title><rect x="73.2211%" y="853" width="0.3500%" height="15" fill="rgb(223,189,4)" fg:x="79710" fg:w="381"/><text x="73.4711%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (95 samples, 0.09%)</title><rect x="73.4839%" y="837" width="0.0873%" height="15" fill="rgb(249,167,54)" fg:x="79996" fg:w="95"/><text x="73.7339%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (89 samples, 0.08%)</title><rect x="73.4894%" y="821" width="0.0818%" height="15" fill="rgb(218,34,28)" fg:x="80002" fg:w="89"/><text x="73.7394%" y="831.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (49 samples, 0.05%)</title><rect x="73.5711%" y="997" width="0.0450%" height="15" fill="rgb(232,109,42)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="1007.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (49 samples, 0.05%)</title><rect x="73.5711%" y="981" width="0.0450%" height="15" fill="rgb(248,214,46)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (49 samples, 0.05%)</title><rect x="73.5711%" y="965" width="0.0450%" height="15" fill="rgb(244,216,40)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (49 samples, 0.05%)</title><rect x="73.5711%" y="949" width="0.0450%" height="15" fill="rgb(231,226,31)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (49 samples, 0.05%)</title><rect x="73.5711%" y="933" width="0.0450%" height="15" fill="rgb(238,38,43)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (49 samples, 0.05%)</title><rect x="73.5711%" y="917" width="0.0450%" height="15" fill="rgb(208,88,43)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (49 samples, 0.05%)</title><rect x="73.5711%" y="901" width="0.0450%" height="15" fill="rgb(205,136,37)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (49 samples, 0.05%)</title><rect x="73.5711%" y="885" width="0.0450%" height="15" fill="rgb(237,34,14)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (49 samples, 0.05%)</title><rect x="73.5711%" y="869" width="0.0450%" height="15" fill="rgb(236,193,44)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (49 samples, 0.05%)</title><rect x="73.5711%" y="853" width="0.0450%" height="15" fill="rgb(231,48,10)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.05%)</title><rect x="73.5711%" y="837" width="0.0450%" height="15" fill="rgb(213,141,34)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.05%)</title><rect x="73.5711%" y="821" width="0.0450%" height="15" fill="rgb(249,130,34)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="831.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.05%)</title><rect x="73.5711%" y="805" width="0.0450%" height="15" fill="rgb(219,42,41)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="815.50"></text></g><g><title>__rg_alloc (49 samples, 0.05%)</title><rect x="73.5711%" y="789" width="0.0450%" height="15" fill="rgb(224,100,54)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (49 samples, 0.05%)</title><rect x="73.5711%" y="773" width="0.0450%" height="15" fill="rgb(229,200,27)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="783.50"></text></g><g><title>rust_alloc (49 samples, 0.05%)</title><rect x="73.5711%" y="757" width="0.0450%" height="15" fill="rgb(217,118,10)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.05%)</title><rect x="73.5711%" y="741" width="0.0450%" height="15" fill="rgb(206,22,3)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.05%)</title><rect x="73.5711%" y="725" width="0.0450%" height="15" fill="rgb(232,163,46)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.05%)</title><rect x="73.5711%" y="709" width="0.0450%" height="15" fill="rgb(206,95,13)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.05%)</title><rect x="73.5711%" y="693" width="0.0450%" height="15" fill="rgb(253,154,18)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (49 samples, 0.05%)</title><rect x="73.5711%" y="677" width="0.0450%" height="15" fill="rgb(219,32,23)" fg:x="80091" fg:w="49"/><text x="73.8211%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (42 samples, 0.04%)</title><rect x="73.5776%" y="661" width="0.0386%" height="15" fill="rgb(230,191,45)" fg:x="80098" fg:w="42"/><text x="73.8276%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (34 samples, 0.03%)</title><rect x="73.5849%" y="645" width="0.0312%" height="15" fill="rgb(229,64,36)" fg:x="80106" fg:w="34"/><text x="73.8349%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="73.5849%" y="629" width="0.0312%" height="15" fill="rgb(205,129,25)" fg:x="80106" fg:w="34"/><text x="73.8349%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="73.5849%" y="613" width="0.0312%" height="15" fill="rgb(254,112,7)" fg:x="80106" fg:w="34"/><text x="73.8349%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="73.6161%" y="597" width="0.0358%" height="15" fill="rgb(226,53,48)" fg:x="80140" fg:w="39"/><text x="73.8661%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (39 samples, 0.04%)</title><rect x="73.6161%" y="581" width="0.0358%" height="15" fill="rgb(214,153,38)" fg:x="80140" fg:w="39"/><text x="73.8661%" y="591.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (31 samples, 0.03%)</title><rect x="73.6235%" y="565" width="0.0285%" height="15" fill="rgb(243,101,7)" fg:x="80148" fg:w="31"/><text x="73.8735%" y="575.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (28 samples, 0.03%)</title><rect x="73.6262%" y="549" width="0.0257%" height="15" fill="rgb(240,140,22)" fg:x="80151" fg:w="28"/><text x="73.8762%" y="559.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (28 samples, 0.03%)</title><rect x="73.6262%" y="533" width="0.0257%" height="15" fill="rgb(235,114,2)" fg:x="80151" fg:w="28"/><text x="73.8762%" y="543.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (28 samples, 0.03%)</title><rect x="73.6262%" y="517" width="0.0257%" height="15" fill="rgb(242,59,12)" fg:x="80151" fg:w="28"/><text x="73.8762%" y="527.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (61 samples, 0.06%)</title><rect x="73.6161%" y="901" width="0.0560%" height="15" fill="rgb(252,134,9)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (61 samples, 0.06%)</title><rect x="73.6161%" y="885" width="0.0560%" height="15" fill="rgb(236,4,44)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (61 samples, 0.06%)</title><rect x="73.6161%" y="869" width="0.0560%" height="15" fill="rgb(254,172,41)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (61 samples, 0.06%)</title><rect x="73.6161%" y="853" width="0.0560%" height="15" fill="rgb(244,63,20)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (61 samples, 0.06%)</title><rect x="73.6161%" y="837" width="0.0560%" height="15" fill="rgb(250,73,31)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (61 samples, 0.06%)</title><rect x="73.6161%" y="821" width="0.0560%" height="15" fill="rgb(241,38,36)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (61 samples, 0.06%)</title><rect x="73.6161%" y="805" width="0.0560%" height="15" fill="rgb(245,211,2)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (61 samples, 0.06%)</title><rect x="73.6161%" y="789" width="0.0560%" height="15" fill="rgb(206,120,28)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (61 samples, 0.06%)</title><rect x="73.6161%" y="773" width="0.0560%" height="15" fill="rgb(211,59,34)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (61 samples, 0.06%)</title><rect x="73.6161%" y="757" width="0.0560%" height="15" fill="rgb(233,168,5)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (61 samples, 0.06%)</title><rect x="73.6161%" y="741" width="0.0560%" height="15" fill="rgb(234,33,13)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (61 samples, 0.06%)</title><rect x="73.6161%" y="725" width="0.0560%" height="15" fill="rgb(231,150,26)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="735.50"></text></g><g><title>alloc::alloc::alloc (61 samples, 0.06%)</title><rect x="73.6161%" y="709" width="0.0560%" height="15" fill="rgb(217,191,4)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="719.50"></text></g><g><title>__rg_alloc (61 samples, 0.06%)</title><rect x="73.6161%" y="693" width="0.0560%" height="15" fill="rgb(246,198,38)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="703.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (61 samples, 0.06%)</title><rect x="73.6161%" y="677" width="0.0560%" height="15" fill="rgb(245,64,37)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="687.50"></text></g><g><title>rust_alloc (61 samples, 0.06%)</title><rect x="73.6161%" y="661" width="0.0560%" height="15" fill="rgb(250,30,36)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (61 samples, 0.06%)</title><rect x="73.6161%" y="645" width="0.0560%" height="15" fill="rgb(217,86,53)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (61 samples, 0.06%)</title><rect x="73.6161%" y="629" width="0.0560%" height="15" fill="rgb(228,157,16)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (61 samples, 0.06%)</title><rect x="73.6161%" y="613" width="0.0560%" height="15" fill="rgb(217,59,31)" fg:x="80140" fg:w="61"/><text x="73.8661%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="73.6520%" y="597" width="0.0202%" height="15" fill="rgb(237,138,41)" fg:x="80179" fg:w="22"/><text x="73.9020%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="73.6529%" y="581" width="0.0193%" height="15" fill="rgb(227,91,49)" fg:x="80180" fg:w="21"/><text x="73.9029%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="73.6529%" y="565" width="0.0193%" height="15" fill="rgb(247,21,44)" fg:x="80180" fg:w="21"/><text x="73.9029%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="73.6529%" y="549" width="0.0193%" height="15" fill="rgb(219,210,51)" fg:x="80180" fg:w="21"/><text x="73.9029%" y="559.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (21 samples, 0.02%)</title><rect x="73.6529%" y="533" width="0.0193%" height="15" fill="rgb(209,140,6)" fg:x="80180" fg:w="21"/><text x="73.9029%" y="543.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (11 samples, 0.01%)</title><rect x="73.6621%" y="517" width="0.0101%" height="15" fill="rgb(221,188,24)" fg:x="80190" fg:w="11"/><text x="73.9121%" y="527.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="73.6621%" y="501" width="0.0101%" height="15" fill="rgb(232,154,20)" fg:x="80190" fg:w="11"/><text x="73.9121%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="73.6722%" y="709" width="0.0459%" height="15" fill="rgb(244,137,50)" fg:x="80201" fg:w="50"/><text x="73.9222%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (50 samples, 0.05%)</title><rect x="73.6722%" y="693" width="0.0459%" height="15" fill="rgb(225,185,43)" fg:x="80201" fg:w="50"/><text x="73.9222%" y="703.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (40 samples, 0.04%)</title><rect x="73.6814%" y="677" width="0.0367%" height="15" fill="rgb(213,205,38)" fg:x="80211" fg:w="40"/><text x="73.9314%" y="687.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (28 samples, 0.03%)</title><rect x="73.6924%" y="661" width="0.0257%" height="15" fill="rgb(236,73,12)" fg:x="80223" fg:w="28"/><text x="73.9424%" y="671.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (28 samples, 0.03%)</title><rect x="73.6924%" y="645" width="0.0257%" height="15" fill="rgb(235,219,13)" fg:x="80223" fg:w="28"/><text x="73.9424%" y="655.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (28 samples, 0.03%)</title><rect x="73.6924%" y="629" width="0.0257%" height="15" fill="rgb(218,59,36)" fg:x="80223" fg:w="28"/><text x="73.9424%" y="639.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (163 samples, 0.15%)</title><rect x="73.5711%" y="1013" width="0.1497%" height="15" fill="rgb(205,110,39)" fg:x="80091" fg:w="163"/><text x="73.8211%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (114 samples, 0.10%)</title><rect x="73.6161%" y="997" width="0.1047%" height="15" fill="rgb(218,206,42)" fg:x="80140" fg:w="114"/><text x="73.8661%" y="1007.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (114 samples, 0.10%)</title><rect x="73.6161%" y="981" width="0.1047%" height="15" fill="rgb(248,125,24)" fg:x="80140" fg:w="114"/><text x="73.8661%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (114 samples, 0.10%)</title><rect x="73.6161%" y="965" width="0.1047%" height="15" fill="rgb(242,28,27)" fg:x="80140" fg:w="114"/><text x="73.8661%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (114 samples, 0.10%)</title><rect x="73.6161%" y="949" width="0.1047%" height="15" fill="rgb(216,228,15)" fg:x="80140" fg:w="114"/><text x="73.8661%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (114 samples, 0.10%)</title><rect x="73.6161%" y="933" width="0.1047%" height="15" fill="rgb(235,116,46)" fg:x="80140" fg:w="114"/><text x="73.8661%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (114 samples, 0.10%)</title><rect x="73.6161%" y="917" width="0.1047%" height="15" fill="rgb(224,18,32)" fg:x="80140" fg:w="114"/><text x="73.8661%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (53 samples, 0.05%)</title><rect x="73.6722%" y="901" width="0.0487%" height="15" fill="rgb(252,5,12)" fg:x="80201" fg:w="53"/><text x="73.9222%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (53 samples, 0.05%)</title><rect x="73.6722%" y="885" width="0.0487%" height="15" fill="rgb(251,36,5)" fg:x="80201" fg:w="53"/><text x="73.9222%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (53 samples, 0.05%)</title><rect x="73.6722%" y="869" width="0.0487%" height="15" fill="rgb(217,53,14)" fg:x="80201" fg:w="53"/><text x="73.9222%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (53 samples, 0.05%)</title><rect x="73.6722%" y="853" width="0.0487%" height="15" fill="rgb(215,86,45)" fg:x="80201" fg:w="53"/><text x="73.9222%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53 samples, 0.05%)</title><rect x="73.6722%" y="837" width="0.0487%" height="15" fill="rgb(242,169,11)" fg:x="80201" fg:w="53"/><text x="73.9222%" y="847.50"></text></g><g><title>alloc::alloc::alloc (53 samples, 0.05%)</title><rect x="73.6722%" y="821" width="0.0487%" height="15" fill="rgb(211,213,45)" fg:x="80201" fg:w="53"/><text x="73.9222%" y="831.50"></text></g><g><title>__rg_alloc (53 samples, 0.05%)</title><rect x="73.6722%" y="805" width="0.0487%" height="15" fill="rgb(205,88,11)" fg:x="80201" fg:w="53"/><text x="73.9222%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (53 samples, 0.05%)</title><rect x="73.6722%" y="789" width="0.0487%" height="15" fill="rgb(252,69,26)" fg:x="80201" fg:w="53"/><text x="73.9222%" y="799.50"></text></g><g><title>rust_alloc (53 samples, 0.05%)</title><rect x="73.6722%" y="773" width="0.0487%" height="15" fill="rgb(246,123,37)" fg:x="80201" fg:w="53"/><text x="73.9222%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (53 samples, 0.05%)</title><rect x="73.6722%" y="757" width="0.0487%" height="15" fill="rgb(212,205,5)" fg:x="80201" fg:w="53"/><text x="73.9222%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (53 samples, 0.05%)</title><rect x="73.6722%" y="741" width="0.0487%" height="15" fill="rgb(253,148,0)" fg:x="80201" fg:w="53"/><text x="73.9222%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (53 samples, 0.05%)</title><rect x="73.6722%" y="725" width="0.0487%" height="15" fill="rgb(239,22,4)" fg:x="80201" fg:w="53"/><text x="73.9222%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (11 samples, 0.01%)</title><rect x="73.7365%" y="709" width="0.0101%" height="15" fill="rgb(226,26,53)" fg:x="80271" fg:w="11"/><text x="73.9865%" y="719.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (34 samples, 0.03%)</title><rect x="73.7530%" y="693" width="0.0312%" height="15" fill="rgb(225,229,45)" fg:x="80289" fg:w="34"/><text x="74.0030%" y="703.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (33 samples, 0.03%)</title><rect x="73.7539%" y="677" width="0.0303%" height="15" fill="rgb(220,60,37)" fg:x="80290" fg:w="33"/><text x="74.0039%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (66 samples, 0.06%)</title><rect x="73.7365%" y="741" width="0.0606%" height="15" fill="rgb(217,180,35)" fg:x="80271" fg:w="66"/><text x="73.9865%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (66 samples, 0.06%)</title><rect x="73.7365%" y="725" width="0.0606%" height="15" fill="rgb(229,7,53)" fg:x="80271" fg:w="66"/><text x="73.9865%" y="735.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (55 samples, 0.05%)</title><rect x="73.7466%" y="709" width="0.0505%" height="15" fill="rgb(254,137,3)" fg:x="80282" fg:w="55"/><text x="73.9966%" y="719.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="73.7842%" y="693" width="0.0129%" height="15" fill="rgb(215,140,41)" fg:x="80323" fg:w="14"/><text x="74.0342%" y="703.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="73.7842%" y="677" width="0.0129%" height="15" fill="rgb(250,80,15)" fg:x="80323" fg:w="14"/><text x="74.0342%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (76 samples, 0.07%)</title><rect x="73.7356%" y="757" width="0.0698%" height="15" fill="rgb(252,191,6)" fg:x="80270" fg:w="76"/><text x="73.9856%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (118 samples, 0.11%)</title><rect x="73.7209%" y="773" width="0.1084%" height="15" fill="rgb(246,217,18)" fg:x="80254" fg:w="118"/><text x="73.9709%" y="783.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (21 samples, 0.02%)</title><rect x="73.8100%" y="757" width="0.0193%" height="15" fill="rgb(223,93,7)" fg:x="80351" fg:w="21"/><text x="74.0600%" y="767.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (21 samples, 0.02%)</title><rect x="73.8100%" y="741" width="0.0193%" height="15" fill="rgb(225,55,52)" fg:x="80351" fg:w="21"/><text x="74.0600%" y="751.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (21 samples, 0.02%)</title><rect x="73.8100%" y="725" width="0.0193%" height="15" fill="rgb(240,31,24)" fg:x="80351" fg:w="21"/><text x="74.0600%" y="735.50"></text></g><g><title>snmalloc::bits::align_down (21 samples, 0.02%)</title><rect x="73.8100%" y="709" width="0.0193%" height="15" fill="rgb(205,56,52)" fg:x="80351" fg:w="21"/><text x="74.0600%" y="719.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (65 samples, 0.06%)</title><rect x="73.8678%" y="757" width="0.0597%" height="15" fill="rgb(246,146,12)" fg:x="80414" fg:w="65"/><text x="74.1178%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (639 samples, 0.59%)</title><rect x="73.7209%" y="805" width="0.5870%" height="15" fill="rgb(239,84,36)" fg:x="80254" fg:w="639"/><text x="73.9709%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (639 samples, 0.59%)</title><rect x="73.7209%" y="789" width="0.5870%" height="15" fill="rgb(207,41,40)" fg:x="80254" fg:w="639"/><text x="73.9709%" y="799.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (521 samples, 0.48%)</title><rect x="73.8293%" y="773" width="0.4786%" height="15" fill="rgb(241,179,25)" fg:x="80372" fg:w="521"/><text x="74.0793%" y="783.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (414 samples, 0.38%)</title><rect x="73.9275%" y="757" width="0.3803%" height="15" fill="rgb(210,0,34)" fg:x="80479" fg:w="414"/><text x="74.1775%" y="767.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (414 samples, 0.38%)</title><rect x="73.9275%" y="741" width="0.3803%" height="15" fill="rgb(225,217,29)" fg:x="80479" fg:w="414"/><text x="74.1775%" y="751.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (414 samples, 0.38%)</title><rect x="73.9275%" y="725" width="0.3803%" height="15" fill="rgb(216,191,38)" fg:x="80479" fg:w="414"/><text x="74.1775%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (648 samples, 0.60%)</title><rect x="73.7209%" y="1013" width="0.5952%" height="15" fill="rgb(232,140,52)" fg:x="80254" fg:w="648"/><text x="73.9709%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (648 samples, 0.60%)</title><rect x="73.7209%" y="997" width="0.5952%" height="15" fill="rgb(223,158,51)" fg:x="80254" fg:w="648"/><text x="73.9709%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (648 samples, 0.60%)</title><rect x="73.7209%" y="981" width="0.5952%" height="15" fill="rgb(235,29,51)" fg:x="80254" fg:w="648"/><text x="73.9709%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (648 samples, 0.60%)</title><rect x="73.7209%" y="965" width="0.5952%" height="15" fill="rgb(215,181,18)" fg:x="80254" fg:w="648"/><text x="73.9709%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (648 samples, 0.60%)</title><rect x="73.7209%" y="949" width="0.5952%" height="15" fill="rgb(227,125,34)" fg:x="80254" fg:w="648"/><text x="73.9709%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (648 samples, 0.60%)</title><rect x="73.7209%" y="933" width="0.5952%" height="15" fill="rgb(230,197,49)" fg:x="80254" fg:w="648"/><text x="73.9709%" y="943.50"></text></g><g><title>alloc::alloc::alloc (648 samples, 0.60%)</title><rect x="73.7209%" y="917" width="0.5952%" height="15" fill="rgb(239,141,16)" fg:x="80254" fg:w="648"/><text x="73.9709%" y="927.50"></text></g><g><title>__rg_alloc (648 samples, 0.60%)</title><rect x="73.7209%" y="901" width="0.5952%" height="15" fill="rgb(225,105,43)" fg:x="80254" fg:w="648"/><text x="73.9709%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (648 samples, 0.60%)</title><rect x="73.7209%" y="885" width="0.5952%" height="15" fill="rgb(214,131,14)" fg:x="80254" fg:w="648"/><text x="73.9709%" y="895.50"></text></g><g><title>rust_alloc (648 samples, 0.60%)</title><rect x="73.7209%" y="869" width="0.5952%" height="15" fill="rgb(229,177,11)" fg:x="80254" fg:w="648"/><text x="73.9709%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (648 samples, 0.60%)</title><rect x="73.7209%" y="853" width="0.5952%" height="15" fill="rgb(231,180,14)" fg:x="80254" fg:w="648"/><text x="73.9709%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (648 samples, 0.60%)</title><rect x="73.7209%" y="837" width="0.5952%" height="15" fill="rgb(232,88,2)" fg:x="80254" fg:w="648"/><text x="73.9709%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (648 samples, 0.60%)</title><rect x="73.7209%" y="821" width="0.5952%" height="15" fill="rgb(205,220,8)" fg:x="80254" fg:w="648"/><text x="73.9709%" y="831.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (360 samples, 0.33%)</title><rect x="74.5650%" y="981" width="0.3307%" height="15" fill="rgb(225,23,53)" fg:x="81173" fg:w="360"/><text x="74.8150%" y="991.50"></text></g><g><title>aligned_size (28 samples, 0.03%)</title><rect x="74.9389%" y="789" width="0.0257%" height="15" fill="rgb(213,62,29)" fg:x="81580" fg:w="28"/><text x="75.1889%" y="799.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="74.9683%" y="757" width="0.0119%" height="15" fill="rgb(227,75,7)" fg:x="81612" fg:w="13"/><text x="75.2183%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="74.9858%" y="693" width="0.0119%" height="15" fill="rgb(207,105,14)" fg:x="81631" fg:w="13"/><text x="75.2358%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (20 samples, 0.02%)</title><rect x="74.9839%" y="709" width="0.0184%" height="15" fill="rgb(245,62,29)" fg:x="81629" fg:w="20"/><text x="75.2339%" y="719.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="75.0069%" y="693" width="0.0110%" height="15" fill="rgb(236,202,4)" fg:x="81654" fg:w="12"/><text x="75.2569%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (107 samples, 0.10%)</title><rect x="74.9839%" y="741" width="0.0983%" height="15" fill="rgb(250,67,1)" fg:x="81629" fg:w="107"/><text x="75.2339%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (107 samples, 0.10%)</title><rect x="74.9839%" y="725" width="0.0983%" height="15" fill="rgb(253,115,44)" fg:x="81629" fg:w="107"/><text x="75.2339%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (87 samples, 0.08%)</title><rect x="75.0023%" y="709" width="0.0799%" height="15" fill="rgb(251,139,18)" fg:x="81649" fg:w="87"/><text x="75.2523%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (70 samples, 0.06%)</title><rect x="75.0179%" y="693" width="0.0643%" height="15" fill="rgb(218,22,32)" fg:x="81666" fg:w="70"/><text x="75.2679%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (70 samples, 0.06%)</title><rect x="75.0179%" y="677" width="0.0643%" height="15" fill="rgb(243,53,5)" fg:x="81666" fg:w="70"/><text x="75.2679%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (70 samples, 0.06%)</title><rect x="75.0179%" y="661" width="0.0643%" height="15" fill="rgb(227,56,16)" fg:x="81666" fg:w="70"/><text x="75.2679%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::take (11 samples, 0.01%)</title><rect x="75.0850%" y="709" width="0.0101%" height="15" fill="rgb(245,53,0)" fg:x="81739" fg:w="11"/><text x="75.3350%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (11 samples, 0.01%)</title><rect x="75.0850%" y="693" width="0.0101%" height="15" fill="rgb(216,170,35)" fg:x="81739" fg:w="11"/><text x="75.3350%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="75.0822%" y="741" width="0.0138%" height="15" fill="rgb(211,200,8)" fg:x="81736" fg:w="15"/><text x="75.3322%" y="751.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (15 samples, 0.01%)</title><rect x="75.0822%" y="725" width="0.0138%" height="15" fill="rgb(228,204,44)" fg:x="81736" fg:w="15"/><text x="75.3322%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (311 samples, 0.29%)</title><rect x="74.9683%" y="789" width="0.2857%" height="15" fill="rgb(214,121,17)" fg:x="81612" fg:w="311"/><text x="75.2183%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (311 samples, 0.29%)</title><rect x="74.9683%" y="773" width="0.2857%" height="15" fill="rgb(233,64,38)" fg:x="81612" fg:w="311"/><text x="75.2183%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (294 samples, 0.27%)</title><rect x="74.9839%" y="757" width="0.2701%" height="15" fill="rgb(253,54,19)" fg:x="81629" fg:w="294"/><text x="75.2339%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (165 samples, 0.15%)</title><rect x="75.1024%" y="741" width="0.1516%" height="15" fill="rgb(253,94,18)" fg:x="81758" fg:w="165"/><text x="75.3524%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (165 samples, 0.15%)</title><rect x="75.1024%" y="725" width="0.1516%" height="15" fill="rgb(227,57,52)" fg:x="81758" fg:w="165"/><text x="75.3524%" y="735.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (796 samples, 0.73%)</title><rect x="74.5246%" y="997" width="0.7312%" height="15" fill="rgb(230,228,50)" fg:x="81129" fg:w="796"/><text x="74.7746%" y="1007.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (392 samples, 0.36%)</title><rect x="74.8957%" y="981" width="0.3601%" height="15" fill="rgb(217,205,27)" fg:x="81533" fg:w="392"/><text x="75.1457%" y="991.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (390 samples, 0.36%)</title><rect x="74.8976%" y="965" width="0.3583%" height="15" fill="rgb(252,71,50)" fg:x="81535" fg:w="390"/><text x="75.1476%" y="975.50"></text></g><g><title>value_trait::Builder::object (390 samples, 0.36%)</title><rect x="74.8976%" y="949" width="0.3583%" height="15" fill="rgb(209,86,4)" fg:x="81535" fg:w="390"/><text x="75.1476%" y="959.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (390 samples, 0.36%)</title><rect x="74.8976%" y="933" width="0.3583%" height="15" fill="rgb(229,94,0)" fg:x="81535" fg:w="390"/><text x="75.1476%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (390 samples, 0.36%)</title><rect x="74.8976%" y="917" width="0.3583%" height="15" fill="rgb(252,223,21)" fg:x="81535" fg:w="390"/><text x="75.1476%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (376 samples, 0.35%)</title><rect x="74.9104%" y="901" width="0.3454%" height="15" fill="rgb(230,210,4)" fg:x="81549" fg:w="376"/><text x="75.1604%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (374 samples, 0.34%)</title><rect x="74.9123%" y="885" width="0.3436%" height="15" fill="rgb(240,149,38)" fg:x="81551" fg:w="374"/><text x="75.1623%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (374 samples, 0.34%)</title><rect x="74.9123%" y="869" width="0.3436%" height="15" fill="rgb(254,105,20)" fg:x="81551" fg:w="374"/><text x="75.1623%" y="879.50"></text></g><g><title>alloc::alloc::alloc (374 samples, 0.34%)</title><rect x="74.9123%" y="853" width="0.3436%" height="15" fill="rgb(253,87,46)" fg:x="81551" fg:w="374"/><text x="75.1623%" y="863.50"></text></g><g><title>__rg_alloc (374 samples, 0.34%)</title><rect x="74.9123%" y="837" width="0.3436%" height="15" fill="rgb(253,116,33)" fg:x="81551" fg:w="374"/><text x="75.1623%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (374 samples, 0.34%)</title><rect x="74.9123%" y="821" width="0.3436%" height="15" fill="rgb(229,198,5)" fg:x="81551" fg:w="374"/><text x="75.1623%" y="831.50"></text></g><g><title>rust_alloc (345 samples, 0.32%)</title><rect x="74.9389%" y="805" width="0.3169%" height="15" fill="rgb(242,38,37)" fg:x="81580" fg:w="345"/><text x="75.1889%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (26 samples, 0.02%)</title><rect x="75.2650%" y="997" width="0.0239%" height="15" fill="rgb(242,69,53)" fg:x="81935" fg:w="26"/><text x="75.5150%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (26 samples, 0.02%)</title><rect x="75.2650%" y="981" width="0.0239%" height="15" fill="rgb(249,80,16)" fg:x="81935" fg:w="26"/><text x="75.5150%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (26 samples, 0.02%)</title><rect x="75.2650%" y="965" width="0.0239%" height="15" fill="rgb(206,128,11)" fg:x="81935" fg:w="26"/><text x="75.5150%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (15 samples, 0.01%)</title><rect x="75.2751%" y="949" width="0.0138%" height="15" fill="rgb(212,35,20)" fg:x="81946" fg:w="15"/><text x="75.5251%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (15 samples, 0.01%)</title><rect x="75.2751%" y="933" width="0.0138%" height="15" fill="rgb(236,79,13)" fg:x="81946" fg:w="15"/><text x="75.5251%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (12 samples, 0.01%)</title><rect x="75.3367%" y="917" width="0.0110%" height="15" fill="rgb(233,123,3)" fg:x="82013" fg:w="12"/><text x="75.5867%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (12 samples, 0.01%)</title><rect x="75.3367%" y="901" width="0.0110%" height="15" fill="rgb(214,93,52)" fg:x="82013" fg:w="12"/><text x="75.5867%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (84 samples, 0.08%)</title><rect x="75.2889%" y="981" width="0.0772%" height="15" fill="rgb(251,37,40)" fg:x="81961" fg:w="84"/><text x="75.5389%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (84 samples, 0.08%)</title><rect x="75.2889%" y="965" width="0.0772%" height="15" fill="rgb(227,80,54)" fg:x="81961" fg:w="84"/><text x="75.5389%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (50 samples, 0.05%)</title><rect x="75.3201%" y="949" width="0.0459%" height="15" fill="rgb(254,48,11)" fg:x="81995" fg:w="50"/><text x="75.5701%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (40 samples, 0.04%)</title><rect x="75.3293%" y="933" width="0.0367%" height="15" fill="rgb(235,193,26)" fg:x="82005" fg:w="40"/><text x="75.5793%" y="943.50"></text></g><g><title>core::mem::drop (20 samples, 0.02%)</title><rect x="75.3477%" y="917" width="0.0184%" height="15" fill="rgb(229,99,21)" fg:x="82025" fg:w="20"/><text x="75.5977%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="75.3477%" y="901" width="0.0184%" height="15" fill="rgb(211,140,41)" fg:x="82025" fg:w="20"/><text x="75.5977%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="75.3532%" y="885" width="0.0129%" height="15" fill="rgb(240,227,30)" fg:x="82031" fg:w="14"/><text x="75.6032%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="75.3532%" y="869" width="0.0129%" height="15" fill="rgb(215,224,45)" fg:x="82031" fg:w="14"/><text x="75.6032%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="75.3532%" y="853" width="0.0129%" height="15" fill="rgb(206,123,31)" fg:x="82031" fg:w="14"/><text x="75.6032%" y="863.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="75.5287%" y="933" width="0.0119%" height="15" fill="rgb(210,138,16)" fg:x="82222" fg:w="13"/><text x="75.7787%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="75.5287%" y="917" width="0.0119%" height="15" fill="rgb(228,57,28)" fg:x="82222" fg:w="13"/><text x="75.7787%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="75.5287%" y="901" width="0.0119%" height="15" fill="rgb(242,170,10)" fg:x="82222" fg:w="13"/><text x="75.7787%" y="911.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="75.5287%" y="885" width="0.0119%" height="15" fill="rgb(228,214,39)" fg:x="82222" fg:w="13"/><text x="75.7787%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="75.5287%" y="869" width="0.0119%" height="15" fill="rgb(218,179,33)" fg:x="82222" fg:w="13"/><text x="75.7787%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="75.5691%" y="869" width="0.0377%" height="15" fill="rgb(235,193,39)" fg:x="82266" fg:w="41"/><text x="75.8191%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (37 samples, 0.03%)</title><rect x="75.5727%" y="853" width="0.0340%" height="15" fill="rgb(219,221,36)" fg:x="82270" fg:w="37"/><text x="75.8227%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (261 samples, 0.24%)</title><rect x="75.3863%" y="965" width="0.2398%" height="15" fill="rgb(248,218,19)" fg:x="82067" fg:w="261"/><text x="75.6363%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (117 samples, 0.11%)</title><rect x="75.5185%" y="949" width="0.1075%" height="15" fill="rgb(205,50,9)" fg:x="82211" fg:w="117"/><text x="75.7685%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (93 samples, 0.09%)</title><rect x="75.5406%" y="933" width="0.0854%" height="15" fill="rgb(238,81,28)" fg:x="82235" fg:w="93"/><text x="75.7906%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (93 samples, 0.09%)</title><rect x="75.5406%" y="917" width="0.0854%" height="15" fill="rgb(235,110,19)" fg:x="82235" fg:w="93"/><text x="75.7906%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (62 samples, 0.06%)</title><rect x="75.5691%" y="901" width="0.0570%" height="15" fill="rgb(214,7,14)" fg:x="82266" fg:w="62"/><text x="75.8191%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (62 samples, 0.06%)</title><rect x="75.5691%" y="885" width="0.0570%" height="15" fill="rgb(211,77,3)" fg:x="82266" fg:w="62"/><text x="75.8191%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (21 samples, 0.02%)</title><rect x="75.6067%" y="869" width="0.0193%" height="15" fill="rgb(229,5,9)" fg:x="82307" fg:w="21"/><text x="75.8567%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="75.6067%" y="853" width="0.0193%" height="15" fill="rgb(225,90,11)" fg:x="82307" fg:w="21"/><text x="75.8567%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (19 samples, 0.02%)</title><rect x="75.6086%" y="837" width="0.0175%" height="15" fill="rgb(242,56,8)" fg:x="82309" fg:w="19"/><text x="75.8586%" y="847.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="75.6407%" y="933" width="0.0119%" height="15" fill="rgb(249,212,39)" fg:x="82344" fg:w="13"/><text x="75.8907%" y="943.50"></text></g><g><title>size_to_sizeclass (21 samples, 0.02%)</title><rect x="75.6527%" y="933" width="0.0193%" height="15" fill="rgb(236,90,9)" fg:x="82357" fg:w="21"/><text x="75.9027%" y="943.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="75.6830%" y="869" width="0.0119%" height="15" fill="rgb(206,88,35)" fg:x="82390" fg:w="13"/><text x="75.9330%" y="879.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="75.6949%" y="869" width="0.0101%" height="15" fill="rgb(205,126,30)" fg:x="82403" fg:w="11"/><text x="75.9449%" y="879.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="75.6949%" y="853" width="0.0101%" height="15" fill="rgb(230,176,12)" fg:x="82403" fg:w="11"/><text x="75.9449%" y="863.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (51 samples, 0.05%)</title><rect x="75.7620%" y="821" width="0.0468%" height="15" fill="rgb(243,19,9)" fg:x="82476" fg:w="51"/><text x="76.0120%" y="831.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (50 samples, 0.05%)</title><rect x="75.7629%" y="805" width="0.0459%" height="15" fill="rgb(245,171,17)" fg:x="82477" fg:w="50"/><text x="76.0129%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (126 samples, 0.12%)</title><rect x="75.7087%" y="869" width="0.1157%" height="15" fill="rgb(227,52,21)" fg:x="82418" fg:w="126"/><text x="75.9587%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (126 samples, 0.12%)</title><rect x="75.7087%" y="853" width="0.1157%" height="15" fill="rgb(238,69,14)" fg:x="82418" fg:w="126"/><text x="75.9587%" y="863.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (120 samples, 0.11%)</title><rect x="75.7142%" y="837" width="0.1102%" height="15" fill="rgb(241,156,39)" fg:x="82424" fg:w="120"/><text x="75.9642%" y="847.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (17 samples, 0.02%)</title><rect x="75.8088%" y="821" width="0.0156%" height="15" fill="rgb(212,227,28)" fg:x="82527" fg:w="17"/><text x="76.0588%" y="831.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (17 samples, 0.02%)</title><rect x="75.8088%" y="805" width="0.0156%" height="15" fill="rgb(209,118,27)" fg:x="82527" fg:w="17"/><text x="76.0588%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (211 samples, 0.19%)</title><rect x="75.6720%" y="901" width="0.1938%" height="15" fill="rgb(226,102,5)" fg:x="82378" fg:w="211"/><text x="75.9220%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (211 samples, 0.19%)</title><rect x="75.6720%" y="885" width="0.1938%" height="15" fill="rgb(223,34,3)" fg:x="82378" fg:w="211"/><text x="75.9220%" y="895.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (45 samples, 0.04%)</title><rect x="75.8244%" y="869" width="0.0413%" height="15" fill="rgb(221,81,38)" fg:x="82544" fg:w="45"/><text x="76.0744%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (212 samples, 0.19%)</title><rect x="75.6720%" y="933" width="0.1947%" height="15" fill="rgb(236,219,28)" fg:x="82378" fg:w="212"/><text x="75.9220%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (212 samples, 0.19%)</title><rect x="75.6720%" y="917" width="0.1947%" height="15" fill="rgb(213,200,14)" fg:x="82378" fg:w="212"/><text x="75.9220%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (249 samples, 0.23%)</title><rect x="75.6407%" y="949" width="0.2287%" height="15" fill="rgb(240,33,19)" fg:x="82344" fg:w="249"/><text x="75.8907%" y="959.50"></text></g><g><title>rust_dealloc (272 samples, 0.25%)</title><rect x="75.6260%" y="965" width="0.2499%" height="15" fill="rgb(233,113,27)" fg:x="82328" fg:w="272"/><text x="75.8760%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (644 samples, 0.59%)</title><rect x="75.2889%" y="997" width="0.5916%" height="15" fill="rgb(220,221,18)" fg:x="81961" fg:w="644"/><text x="75.5389%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (560 samples, 0.51%)</title><rect x="75.3661%" y="981" width="0.5144%" height="15" fill="rgb(238,92,8)" fg:x="82045" fg:w="560"/><text x="75.6161%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,929 samples, 2.69%)</title><rect x="73.2055%" y="1157" width="2.6906%" height="15" fill="rgb(222,164,16)" fg:x="79693" fg:w="2929"/><text x="73.4555%" y="1167.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,927 samples, 2.69%)</title><rect x="73.2074%" y="1141" width="2.6887%" height="15" fill="rgb(241,119,3)" fg:x="79695" fg:w="2927"/><text x="73.4574%" y="1151.50">st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,927 samples, 2.69%)</title><rect x="73.2074%" y="1125" width="2.6887%" height="15" fill="rgb(241,44,8)" fg:x="79695" fg:w="2927"/><text x="73.4574%" y="1135.50">as..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,927 samples, 2.69%)</title><rect x="73.2074%" y="1109" width="2.6887%" height="15" fill="rgb(230,36,40)" fg:x="79695" fg:w="2927"/><text x="73.4574%" y="1119.50">&lt;a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,927 samples, 2.69%)</title><rect x="73.2074%" y="1093" width="2.6887%" height="15" fill="rgb(243,16,36)" fg:x="79695" fg:w="2927"/><text x="73.4574%" y="1103.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (2,927 samples, 2.69%)</title><rect x="73.2074%" y="1077" width="2.6887%" height="15" fill="rgb(231,4,26)" fg:x="79695" fg:w="2927"/><text x="73.4574%" y="1087.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,927 samples, 2.69%)</title><rect x="73.2074%" y="1061" width="2.6887%" height="15" fill="rgb(240,9,31)" fg:x="79695" fg:w="2927"/><text x="73.4574%" y="1071.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (2,927 samples, 2.69%)</title><rect x="73.2074%" y="1045" width="2.6887%" height="15" fill="rgb(207,173,15)" fg:x="79695" fg:w="2927"/><text x="73.4574%" y="1055.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_events (2,531 samples, 2.32%)</title><rect x="73.5711%" y="1029" width="2.3250%" height="15" fill="rgb(224,192,53)" fg:x="80091" fg:w="2531"/><text x="73.8211%" y="1039.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_event (1,715 samples, 1.58%)</title><rect x="74.3207%" y="1013" width="1.5754%" height="15" fill="rgb(223,67,28)" fg:x="80907" fg:w="1715"/><text x="74.5707%" y="1023.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (28 samples, 0.03%)</title><rect x="75.9044%" y="1157" width="0.0257%" height="15" fill="rgb(211,20,47)" fg:x="82631" fg:w="28"/><text x="76.1544%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (14 samples, 0.01%)</title><rect x="75.9301%" y="1157" width="0.0129%" height="15" fill="rgb(240,228,2)" fg:x="82659" fg:w="14"/><text x="76.1801%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (24 samples, 0.02%)</title><rect x="75.9429%" y="1157" width="0.0220%" height="15" fill="rgb(248,151,12)" fg:x="82673" fg:w="24"/><text x="76.1929%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (12 samples, 0.01%)</title><rect x="75.9659%" y="1157" width="0.0110%" height="15" fill="rgb(244,8,39)" fg:x="82698" fg:w="12"/><text x="76.2159%" y="1167.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="76.4289%" y="933" width="0.0110%" height="15" fill="rgb(222,26,8)" fg:x="83202" fg:w="12"/><text x="76.6789%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (46 samples, 0.04%)</title><rect x="76.4482%" y="917" width="0.0423%" height="15" fill="rgb(213,106,44)" fg:x="83223" fg:w="46"/><text x="76.6982%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (46 samples, 0.04%)</title><rect x="76.4482%" y="901" width="0.0423%" height="15" fill="rgb(214,129,20)" fg:x="83223" fg:w="46"/><text x="76.6982%" y="911.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (38 samples, 0.03%)</title><rect x="76.4555%" y="885" width="0.0349%" height="15" fill="rgb(212,32,13)" fg:x="83231" fg:w="38"/><text x="76.7055%" y="895.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (34 samples, 0.03%)</title><rect x="76.4592%" y="869" width="0.0312%" height="15" fill="rgb(208,168,33)" fg:x="83235" fg:w="34"/><text x="76.7092%" y="879.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="76.4592%" y="853" width="0.0312%" height="15" fill="rgb(231,207,8)" fg:x="83235" fg:w="34"/><text x="76.7092%" y="863.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="76.4592%" y="837" width="0.0312%" height="15" fill="rgb(235,219,23)" fg:x="83235" fg:w="34"/><text x="76.7092%" y="847.50"></text></g><g><title>snmalloc::FreeListIter::empty (13 samples, 0.01%)</title><rect x="76.4978%" y="917" width="0.0119%" height="15" fill="rgb(226,216,26)" fg:x="83277" fg:w="13"/><text x="76.7478%" y="927.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (13 samples, 0.01%)</title><rect x="76.4978%" y="901" width="0.0119%" height="15" fill="rgb(239,137,16)" fg:x="83277" fg:w="13"/><text x="76.7478%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (310 samples, 0.28%)</title><rect x="76.4289%" y="965" width="0.2848%" height="15" fill="rgb(207,12,36)" fg:x="83202" fg:w="310"/><text x="76.6789%" y="975.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (310 samples, 0.28%)</title><rect x="76.4289%" y="949" width="0.2848%" height="15" fill="rgb(210,214,24)" fg:x="83202" fg:w="310"/><text x="76.6789%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (292 samples, 0.27%)</title><rect x="76.4454%" y="933" width="0.2682%" height="15" fill="rgb(206,56,30)" fg:x="83220" fg:w="292"/><text x="76.6954%" y="943.50"></text></g><g><title>snmalloc::FreeListIter::take (222 samples, 0.20%)</title><rect x="76.5097%" y="917" width="0.2039%" height="15" fill="rgb(228,143,26)" fg:x="83290" fg:w="222"/><text x="76.7597%" y="927.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (222 samples, 0.20%)</title><rect x="76.5097%" y="901" width="0.2039%" height="15" fill="rgb(216,218,46)" fg:x="83290" fg:w="222"/><text x="76.7597%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (333 samples, 0.31%)</title><rect x="76.4179%" y="1077" width="0.3059%" height="15" fill="rgb(206,6,19)" fg:x="83190" fg:w="333"/><text x="76.6679%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (333 samples, 0.31%)</title><rect x="76.4179%" y="1061" width="0.3059%" height="15" fill="rgb(239,177,51)" fg:x="83190" fg:w="333"/><text x="76.6679%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (333 samples, 0.31%)</title><rect x="76.4179%" y="1045" width="0.3059%" height="15" fill="rgb(216,55,25)" fg:x="83190" fg:w="333"/><text x="76.6679%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (331 samples, 0.30%)</title><rect x="76.4197%" y="1029" width="0.3041%" height="15" fill="rgb(231,163,29)" fg:x="83192" fg:w="331"/><text x="76.6697%" y="1039.50"></text></g><g><title>__rg_alloc (331 samples, 0.30%)</title><rect x="76.4197%" y="1013" width="0.3041%" height="15" fill="rgb(232,149,50)" fg:x="83192" fg:w="331"/><text x="76.6697%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (331 samples, 0.30%)</title><rect x="76.4197%" y="997" width="0.3041%" height="15" fill="rgb(223,142,48)" fg:x="83192" fg:w="331"/><text x="76.6697%" y="1007.50"></text></g><g><title>rust_alloc (331 samples, 0.30%)</title><rect x="76.4197%" y="981" width="0.3041%" height="15" fill="rgb(245,83,23)" fg:x="83192" fg:w="331"/><text x="76.6697%" y="991.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="76.7136%" y="965" width="0.0101%" height="15" fill="rgb(224,63,2)" fg:x="83512" fg:w="11"/><text x="76.9636%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="76.7311%" y="1077" width="0.0119%" height="15" fill="rgb(218,65,53)" fg:x="83531" fg:w="13"/><text x="76.9811%" y="1087.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (850 samples, 0.78%)</title><rect x="75.9788%" y="1093" width="0.7808%" height="15" fill="rgb(221,84,29)" fg:x="82712" fg:w="850"/><text x="76.2288%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (163 samples, 0.15%)</title><rect x="76.9607%" y="1077" width="0.1497%" height="15" fill="rgb(234,0,32)" fg:x="83781" fg:w="163"/><text x="77.2107%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (63 samples, 0.06%)</title><rect x="77.1555%" y="885" width="0.0579%" height="15" fill="rgb(206,20,16)" fg:x="83993" fg:w="63"/><text x="77.4055%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (63 samples, 0.06%)</title><rect x="77.1555%" y="869" width="0.0579%" height="15" fill="rgb(244,172,18)" fg:x="83993" fg:w="63"/><text x="77.4055%" y="879.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (54 samples, 0.05%)</title><rect x="77.1637%" y="853" width="0.0496%" height="15" fill="rgb(254,133,1)" fg:x="84002" fg:w="54"/><text x="77.4137%" y="863.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (48 samples, 0.04%)</title><rect x="77.1693%" y="837" width="0.0441%" height="15" fill="rgb(222,206,41)" fg:x="84008" fg:w="48"/><text x="77.4193%" y="847.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (48 samples, 0.04%)</title><rect x="77.1693%" y="821" width="0.0441%" height="15" fill="rgb(212,3,42)" fg:x="84008" fg:w="48"/><text x="77.4193%" y="831.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (48 samples, 0.04%)</title><rect x="77.1693%" y="805" width="0.0441%" height="15" fill="rgb(241,11,4)" fg:x="84008" fg:w="48"/><text x="77.4193%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="77.2189%" y="885" width="0.0285%" height="15" fill="rgb(205,19,26)" fg:x="84062" fg:w="31"/><text x="77.4689%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="77.2189%" y="869" width="0.0285%" height="15" fill="rgb(210,179,32)" fg:x="84062" fg:w="31"/><text x="77.4689%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="77.2189%" y="853" width="0.0285%" height="15" fill="rgb(227,116,49)" fg:x="84062" fg:w="31"/><text x="77.4689%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="77.2198%" y="837" width="0.0276%" height="15" fill="rgb(211,146,6)" fg:x="84063" fg:w="30"/><text x="77.4698%" y="847.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (30 samples, 0.03%)</title><rect x="77.2198%" y="821" width="0.0276%" height="15" fill="rgb(219,44,39)" fg:x="84063" fg:w="30"/><text x="77.4698%" y="831.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (15 samples, 0.01%)</title><rect x="77.2336%" y="805" width="0.0138%" height="15" fill="rgb(234,128,11)" fg:x="84078" fg:w="15"/><text x="77.4836%" y="815.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="77.2336%" y="789" width="0.0138%" height="15" fill="rgb(220,183,53)" fg:x="84078" fg:w="15"/><text x="77.4836%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (167 samples, 0.15%)</title><rect x="77.1426%" y="933" width="0.1534%" height="15" fill="rgb(213,219,32)" fg:x="83979" fg:w="167"/><text x="77.3926%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (164 samples, 0.15%)</title><rect x="77.1454%" y="917" width="0.1506%" height="15" fill="rgb(232,156,16)" fg:x="83982" fg:w="164"/><text x="77.3954%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (154 samples, 0.14%)</title><rect x="77.1546%" y="901" width="0.1415%" height="15" fill="rgb(246,135,34)" fg:x="83992" fg:w="154"/><text x="77.4046%" y="911.50"></text></g><g><title>snmalloc::FreeListIter::take (51 samples, 0.05%)</title><rect x="77.2492%" y="885" width="0.0468%" height="15" fill="rgb(241,99,0)" fg:x="84095" fg:w="51"/><text x="77.4992%" y="895.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (51 samples, 0.05%)</title><rect x="77.2492%" y="869" width="0.0468%" height="15" fill="rgb(222,103,45)" fg:x="84095" fg:w="51"/><text x="77.4992%" y="879.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (206 samples, 0.19%)</title><rect x="77.1105%" y="1077" width="0.1892%" height="15" fill="rgb(212,57,4)" fg:x="83944" fg:w="206"/><text x="77.3605%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (206 samples, 0.19%)</title><rect x="77.1105%" y="1061" width="0.1892%" height="15" fill="rgb(215,68,47)" fg:x="83944" fg:w="206"/><text x="77.3605%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (184 samples, 0.17%)</title><rect x="77.1307%" y="1045" width="0.1690%" height="15" fill="rgb(230,84,2)" fg:x="83966" fg:w="184"/><text x="77.3807%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (184 samples, 0.17%)</title><rect x="77.1307%" y="1029" width="0.1690%" height="15" fill="rgb(220,102,14)" fg:x="83966" fg:w="184"/><text x="77.3807%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (184 samples, 0.17%)</title><rect x="77.1307%" y="1013" width="0.1690%" height="15" fill="rgb(240,10,32)" fg:x="83966" fg:w="184"/><text x="77.3807%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (183 samples, 0.17%)</title><rect x="77.1316%" y="997" width="0.1681%" height="15" fill="rgb(215,47,27)" fg:x="83967" fg:w="183"/><text x="77.3816%" y="1007.50"></text></g><g><title>__rg_alloc (183 samples, 0.17%)</title><rect x="77.1316%" y="981" width="0.1681%" height="15" fill="rgb(233,188,43)" fg:x="83967" fg:w="183"/><text x="77.3816%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (183 samples, 0.17%)</title><rect x="77.1316%" y="965" width="0.1681%" height="15" fill="rgb(253,190,1)" fg:x="83967" fg:w="183"/><text x="77.3816%" y="975.50"></text></g><g><title>rust_alloc (179 samples, 0.16%)</title><rect x="77.1353%" y="949" width="0.1644%" height="15" fill="rgb(206,114,52)" fg:x="83971" fg:w="179"/><text x="77.3853%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="77.3392%" y="917" width="0.0193%" height="15" fill="rgb(233,120,37)" fg:x="84193" fg:w="21"/><text x="77.5892%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (21 samples, 0.02%)</title><rect x="77.3392%" y="901" width="0.0193%" height="15" fill="rgb(214,52,39)" fg:x="84193" fg:w="21"/><text x="77.5892%" y="911.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (17 samples, 0.02%)</title><rect x="77.3429%" y="885" width="0.0156%" height="15" fill="rgb(223,80,29)" fg:x="84197" fg:w="17"/><text x="77.5929%" y="895.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (15 samples, 0.01%)</title><rect x="77.3447%" y="869" width="0.0138%" height="15" fill="rgb(230,101,40)" fg:x="84199" fg:w="15"/><text x="77.5947%" y="879.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="77.3447%" y="853" width="0.0138%" height="15" fill="rgb(219,211,8)" fg:x="84199" fg:w="15"/><text x="77.5947%" y="863.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="77.3447%" y="837" width="0.0138%" height="15" fill="rgb(252,126,28)" fg:x="84199" fg:w="15"/><text x="77.5947%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (219 samples, 0.20%)</title><rect x="77.3208%" y="965" width="0.2012%" height="15" fill="rgb(215,56,38)" fg:x="84173" fg:w="219"/><text x="77.5708%" y="975.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (214 samples, 0.20%)</title><rect x="77.3254%" y="949" width="0.1966%" height="15" fill="rgb(249,55,44)" fg:x="84178" fg:w="214"/><text x="77.5754%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (206 samples, 0.19%)</title><rect x="77.3328%" y="933" width="0.1892%" height="15" fill="rgb(220,221,32)" fg:x="84186" fg:w="206"/><text x="77.5828%" y="943.50"></text></g><g><title>snmalloc::FreeListIter::take (161 samples, 0.15%)</title><rect x="77.3741%" y="917" width="0.1479%" height="15" fill="rgb(212,216,41)" fg:x="84231" fg:w="161"/><text x="77.6241%" y="927.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (161 samples, 0.15%)</title><rect x="77.3741%" y="901" width="0.1479%" height="15" fill="rgb(228,213,43)" fg:x="84231" fg:w="161"/><text x="77.6241%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (253 samples, 0.23%)</title><rect x="77.2997%" y="1077" width="0.2324%" height="15" fill="rgb(211,31,26)" fg:x="84150" fg:w="253"/><text x="77.5497%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (253 samples, 0.23%)</title><rect x="77.2997%" y="1061" width="0.2324%" height="15" fill="rgb(229,202,19)" fg:x="84150" fg:w="253"/><text x="77.5497%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (253 samples, 0.23%)</title><rect x="77.2997%" y="1045" width="0.2324%" height="15" fill="rgb(229,105,46)" fg:x="84150" fg:w="253"/><text x="77.5497%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (253 samples, 0.23%)</title><rect x="77.2997%" y="1029" width="0.2324%" height="15" fill="rgb(235,108,1)" fg:x="84150" fg:w="253"/><text x="77.5497%" y="1039.50"></text></g><g><title>__rg_alloc (253 samples, 0.23%)</title><rect x="77.2997%" y="1013" width="0.2324%" height="15" fill="rgb(245,111,35)" fg:x="84150" fg:w="253"/><text x="77.5497%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (253 samples, 0.23%)</title><rect x="77.2997%" y="997" width="0.2324%" height="15" fill="rgb(219,185,31)" fg:x="84150" fg:w="253"/><text x="77.5497%" y="1007.50"></text></g><g><title>rust_alloc (231 samples, 0.21%)</title><rect x="77.3199%" y="981" width="0.2122%" height="15" fill="rgb(214,4,43)" fg:x="84172" fg:w="231"/><text x="77.5699%" y="991.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="77.5220%" y="965" width="0.0101%" height="15" fill="rgb(235,227,40)" fg:x="84392" fg:w="11"/><text x="77.7720%" y="975.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::new (43 samples, 0.04%)</title><rect x="77.5321%" y="1077" width="0.0395%" height="15" fill="rgb(230,88,30)" fg:x="84403" fg:w="43"/><text x="77.7821%" y="1087.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (40 samples, 0.04%)</title><rect x="77.9289%" y="1061" width="0.0367%" height="15" fill="rgb(216,217,1)" fg:x="84835" fg:w="40"/><text x="78.1789%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42 samples, 0.04%)</title><rect x="78.2606%" y="917" width="0.0386%" height="15" fill="rgb(248,139,50)" fg:x="85196" fg:w="42"/><text x="78.5106%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (33 samples, 0.03%)</title><rect x="78.2688%" y="901" width="0.0303%" height="15" fill="rgb(233,1,21)" fg:x="85205" fg:w="33"/><text x="78.5188%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.02%)</title><rect x="78.2780%" y="885" width="0.0211%" height="15" fill="rgb(215,183,12)" fg:x="85215" fg:w="23"/><text x="78.5280%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.01%)</title><rect x="78.2854%" y="869" width="0.0138%" height="15" fill="rgb(229,104,42)" fg:x="85223" fg:w="15"/><text x="78.5354%" y="879.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (326 samples, 0.30%)</title><rect x="78.0061%" y="1013" width="0.2995%" height="15" fill="rgb(243,34,48)" fg:x="84919" fg:w="326"/><text x="78.2561%" y="1023.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (275 samples, 0.25%)</title><rect x="78.0529%" y="997" width="0.2526%" height="15" fill="rgb(239,11,44)" fg:x="84970" fg:w="275"/><text x="78.3029%" y="1007.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (265 samples, 0.24%)</title><rect x="78.0621%" y="981" width="0.2434%" height="15" fill="rgb(231,98,35)" fg:x="84980" fg:w="265"/><text x="78.3121%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (73 samples, 0.07%)</title><rect x="78.2385%" y="965" width="0.0671%" height="15" fill="rgb(233,28,25)" fg:x="85172" fg:w="73"/><text x="78.4885%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (49 samples, 0.05%)</title><rect x="78.2606%" y="949" width="0.0450%" height="15" fill="rgb(234,123,11)" fg:x="85196" fg:w="49"/><text x="78.5106%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (49 samples, 0.05%)</title><rect x="78.2606%" y="933" width="0.0450%" height="15" fill="rgb(220,69,3)" fg:x="85196" fg:w="49"/><text x="78.5106%" y="943.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (374 samples, 0.34%)</title><rect x="78.0061%" y="1029" width="0.3436%" height="15" fill="rgb(214,64,36)" fg:x="84919" fg:w="374"/><text x="78.2561%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (48 samples, 0.04%)</title><rect x="78.3056%" y="1013" width="0.0441%" height="15" fill="rgb(211,138,32)" fg:x="85245" fg:w="48"/><text x="78.5556%" y="1023.50"></text></g><g><title>core::ptr::write (48 samples, 0.04%)</title><rect x="78.3056%" y="997" width="0.0441%" height="15" fill="rgb(213,118,47)" fg:x="85245" fg:w="48"/><text x="78.5556%" y="1007.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="78.3497%" y="901" width="0.0101%" height="15" fill="rgb(243,124,49)" fg:x="85293" fg:w="11"/><text x="78.5997%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="78.3763%" y="821" width="0.0138%" height="15" fill="rgb(221,30,28)" fg:x="85322" fg:w="15"/><text x="78.6263%" y="831.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="78.3919%" y="805" width="0.0101%" height="15" fill="rgb(246,37,13)" fg:x="85339" fg:w="11"/><text x="78.6419%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (93 samples, 0.09%)</title><rect x="78.3754%" y="853" width="0.0854%" height="15" fill="rgb(249,66,14)" fg:x="85321" fg:w="93"/><text x="78.6254%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (93 samples, 0.09%)</title><rect x="78.3754%" y="837" width="0.0854%" height="15" fill="rgb(213,166,5)" fg:x="85321" fg:w="93"/><text x="78.6254%" y="847.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (77 samples, 0.07%)</title><rect x="78.3901%" y="821" width="0.0707%" height="15" fill="rgb(221,66,24)" fg:x="85337" fg:w="77"/><text x="78.6401%" y="831.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (64 samples, 0.06%)</title><rect x="78.4020%" y="805" width="0.0588%" height="15" fill="rgb(210,132,17)" fg:x="85350" fg:w="64"/><text x="78.6520%" y="815.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (64 samples, 0.06%)</title><rect x="78.4020%" y="789" width="0.0588%" height="15" fill="rgb(243,202,5)" fg:x="85350" fg:w="64"/><text x="78.6520%" y="799.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (64 samples, 0.06%)</title><rect x="78.4020%" y="773" width="0.0588%" height="15" fill="rgb(233,70,48)" fg:x="85350" fg:w="64"/><text x="78.6520%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="78.4682%" y="853" width="0.0211%" height="15" fill="rgb(238,41,26)" fg:x="85422" fg:w="23"/><text x="78.7182%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="78.4682%" y="837" width="0.0211%" height="15" fill="rgb(241,19,31)" fg:x="85422" fg:w="23"/><text x="78.7182%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="78.4682%" y="821" width="0.0211%" height="15" fill="rgb(214,76,10)" fg:x="85422" fg:w="23"/><text x="78.7182%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="78.4691%" y="805" width="0.0202%" height="15" fill="rgb(254,202,22)" fg:x="85423" fg:w="22"/><text x="78.7191%" y="815.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (22 samples, 0.02%)</title><rect x="78.4691%" y="789" width="0.0202%" height="15" fill="rgb(214,72,24)" fg:x="85423" fg:w="22"/><text x="78.7191%" y="799.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (13 samples, 0.01%)</title><rect x="78.4773%" y="773" width="0.0119%" height="15" fill="rgb(221,92,46)" fg:x="85432" fg:w="13"/><text x="78.7273%" y="783.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="78.4773%" y="757" width="0.0119%" height="15" fill="rgb(246,13,50)" fg:x="85432" fg:w="13"/><text x="78.7273%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (205 samples, 0.19%)</title><rect x="78.3607%" y="901" width="0.1883%" height="15" fill="rgb(240,165,38)" fg:x="85305" fg:w="205"/><text x="78.6107%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (205 samples, 0.19%)</title><rect x="78.3607%" y="885" width="0.1883%" height="15" fill="rgb(241,24,51)" fg:x="85305" fg:w="205"/><text x="78.6107%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (201 samples, 0.18%)</title><rect x="78.3644%" y="869" width="0.1846%" height="15" fill="rgb(227,51,44)" fg:x="85309" fg:w="201"/><text x="78.6144%" y="879.50"></text></g><g><title>snmalloc::FreeListIter::take (62 samples, 0.06%)</title><rect x="78.4920%" y="853" width="0.0570%" height="15" fill="rgb(231,121,3)" fg:x="85448" fg:w="62"/><text x="78.7420%" y="863.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (62 samples, 0.06%)</title><rect x="78.4920%" y="837" width="0.0570%" height="15" fill="rgb(245,3,41)" fg:x="85448" fg:w="62"/><text x="78.7420%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (592 samples, 0.54%)</title><rect x="78.0061%" y="1045" width="0.5438%" height="15" fill="rgb(214,13,26)" fg:x="84919" fg:w="592"/><text x="78.2561%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (218 samples, 0.20%)</title><rect x="78.3497%" y="1029" width="0.2003%" height="15" fill="rgb(252,75,11)" fg:x="85293" fg:w="218"/><text x="78.5997%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (218 samples, 0.20%)</title><rect x="78.3497%" y="1013" width="0.2003%" height="15" fill="rgb(218,226,17)" fg:x="85293" fg:w="218"/><text x="78.5997%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (218 samples, 0.20%)</title><rect x="78.3497%" y="997" width="0.2003%" height="15" fill="rgb(248,89,38)" fg:x="85293" fg:w="218"/><text x="78.5997%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (218 samples, 0.20%)</title><rect x="78.3497%" y="981" width="0.2003%" height="15" fill="rgb(237,73,46)" fg:x="85293" fg:w="218"/><text x="78.5997%" y="991.50"></text></g><g><title>alloc::alloc::alloc (218 samples, 0.20%)</title><rect x="78.3497%" y="965" width="0.2003%" height="15" fill="rgb(242,78,33)" fg:x="85293" fg:w="218"/><text x="78.5997%" y="975.50"></text></g><g><title>__rg_alloc (218 samples, 0.20%)</title><rect x="78.3497%" y="949" width="0.2003%" height="15" fill="rgb(235,60,3)" fg:x="85293" fg:w="218"/><text x="78.5997%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (218 samples, 0.20%)</title><rect x="78.3497%" y="933" width="0.2003%" height="15" fill="rgb(216,172,19)" fg:x="85293" fg:w="218"/><text x="78.5997%" y="943.50"></text></g><g><title>rust_alloc (218 samples, 0.20%)</title><rect x="78.3497%" y="917" width="0.2003%" height="15" fill="rgb(227,6,42)" fg:x="85293" fg:w="218"/><text x="78.5997%" y="927.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (640 samples, 0.59%)</title><rect x="77.9657%" y="1061" width="0.5879%" height="15" fill="rgb(223,207,42)" fg:x="84875" fg:w="640"/><text x="78.2157%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (1,371 samples, 1.26%)</title><rect x="77.5716%" y="1077" width="1.2594%" height="15" fill="rgb(246,138,30)" fg:x="84446" fg:w="1371"/><text x="77.8216%" y="1087.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (302 samples, 0.28%)</title><rect x="78.5536%" y="1061" width="0.2774%" height="15" fill="rgb(251,199,47)" fg:x="85515" fg:w="302"/><text x="78.8036%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (3,108 samples, 2.85%)</title><rect x="75.9769%" y="1157" width="2.8550%" height="15" fill="rgb(228,218,44)" fg:x="82710" fg:w="3108"/><text x="76.2269%" y="1167.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,108 samples, 2.85%)</title><rect x="75.9769%" y="1141" width="2.8550%" height="15" fill="rgb(220,68,6)" fg:x="82710" fg:w="3108"/><text x="76.2269%" y="1151.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,107 samples, 2.85%)</title><rect x="75.9778%" y="1125" width="2.8541%" height="15" fill="rgb(240,60,26)" fg:x="82711" fg:w="3107"/><text x="76.2278%" y="1135.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,107 samples, 2.85%)</title><rect x="75.9778%" y="1109" width="2.8541%" height="15" fill="rgb(211,200,19)" fg:x="82711" fg:w="3107"/><text x="76.2278%" y="1119.50">tr..</text></g><g><title>tremor_script::srs::EventPayload::try_new (2,256 samples, 2.07%)</title><rect x="76.7596%" y="1093" width="2.0723%" height="15" fill="rgb(242,145,30)" fg:x="83562" fg:w="2256"/><text x="77.0096%" y="1103.50">t..</text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (27 samples, 0.02%)</title><rect x="78.8319%" y="1157" width="0.0248%" height="15" fill="rgb(225,64,13)" fg:x="85818" fg:w="27"/><text x="79.0819%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.02%)</title><rect x="79.1112%" y="981" width="0.0156%" height="15" fill="rgb(218,103,35)" fg:x="86122" fg:w="17"/><text x="79.3612%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.02%)</title><rect x="79.1112%" y="965" width="0.0156%" height="15" fill="rgb(216,93,46)" fg:x="86122" fg:w="17"/><text x="79.3612%" y="975.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="79.1112%" y="1013" width="0.0175%" height="15" fill="rgb(225,159,27)" fg:x="86122" fg:w="19"/><text x="79.3612%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (19 samples, 0.02%)</title><rect x="79.1112%" y="997" width="0.0175%" height="15" fill="rgb(225,204,11)" fg:x="86122" fg:w="19"/><text x="79.3612%" y="1007.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (19 samples, 0.02%)</title><rect x="79.1369%" y="1013" width="0.0175%" height="15" fill="rgb(205,56,4)" fg:x="86150" fg:w="19"/><text x="79.3869%" y="1023.50"></text></g><g><title>core::mem::replace (19 samples, 0.02%)</title><rect x="79.1369%" y="997" width="0.0175%" height="15" fill="rgb(206,6,35)" fg:x="86150" fg:w="19"/><text x="79.3869%" y="1007.50"></text></g><g><title>core::ptr::read (19 samples, 0.02%)</title><rect x="79.1369%" y="981" width="0.0175%" height="15" fill="rgb(247,73,52)" fg:x="86150" fg:w="19"/><text x="79.3869%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (185 samples, 0.17%)</title><rect x="79.2030%" y="997" width="0.1699%" height="15" fill="rgb(246,97,4)" fg:x="86222" fg:w="185"/><text x="79.4530%" y="1007.50"></text></g><g><title>core::mem::replace (185 samples, 0.17%)</title><rect x="79.2030%" y="981" width="0.1699%" height="15" fill="rgb(212,37,15)" fg:x="86222" fg:w="185"/><text x="79.4530%" y="991.50"></text></g><g><title>core::ptr::read (185 samples, 0.17%)</title><rect x="79.2030%" y="965" width="0.1699%" height="15" fill="rgb(208,130,40)" fg:x="86222" fg:w="185"/><text x="79.4530%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (291 samples, 0.27%)</title><rect x="79.1543%" y="1013" width="0.2673%" height="15" fill="rgb(236,55,29)" fg:x="86169" fg:w="291"/><text x="79.4043%" y="1023.50"></text></g><g><title>core::mem::drop (53 samples, 0.05%)</title><rect x="79.3730%" y="997" width="0.0487%" height="15" fill="rgb(209,156,45)" fg:x="86407" fg:w="53"/><text x="79.6230%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (53 samples, 0.05%)</title><rect x="79.3730%" y="981" width="0.0487%" height="15" fill="rgb(249,107,4)" fg:x="86407" fg:w="53"/><text x="79.6230%" y="991.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (27 samples, 0.02%)</title><rect x="79.4235%" y="917" width="0.0248%" height="15" fill="rgb(227,7,13)" fg:x="86462" fg:w="27"/><text x="79.6735%" y="927.50"></text></g><g><title>__GI___lll_lock_wake (12 samples, 0.01%)</title><rect x="79.4373%" y="901" width="0.0110%" height="15" fill="rgb(250,129,14)" fg:x="86477" fg:w="12"/><text x="79.6873%" y="911.50"></text></g><g><title>core::mem::drop (31 samples, 0.03%)</title><rect x="79.4217%" y="1013" width="0.0285%" height="15" fill="rgb(229,92,13)" fg:x="86460" fg:w="31"/><text x="79.6717%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (31 samples, 0.03%)</title><rect x="79.4217%" y="997" width="0.0285%" height="15" fill="rgb(245,98,39)" fg:x="86460" fg:w="31"/><text x="79.6717%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (29 samples, 0.03%)</title><rect x="79.4235%" y="981" width="0.0266%" height="15" fill="rgb(234,135,48)" fg:x="86462" fg:w="29"/><text x="79.6735%" y="991.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="79.4235%" y="965" width="0.0266%" height="15" fill="rgb(230,98,28)" fg:x="86462" fg:w="29"/><text x="79.6735%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (29 samples, 0.03%)</title><rect x="79.4235%" y="949" width="0.0266%" height="15" fill="rgb(223,121,0)" fg:x="86462" fg:w="29"/><text x="79.6735%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (29 samples, 0.03%)</title><rect x="79.4235%" y="933" width="0.0266%" height="15" fill="rgb(234,173,33)" fg:x="86462" fg:w="29"/><text x="79.6735%" y="943.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="79.4501%" y="997" width="0.0147%" height="15" fill="rgb(245,47,8)" fg:x="86491" fg:w="16"/><text x="79.7001%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (320 samples, 0.29%)</title><rect x="79.4850%" y="933" width="0.2940%" height="15" fill="rgb(205,17,20)" fg:x="86529" fg:w="320"/><text x="79.7350%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (366 samples, 0.34%)</title><rect x="79.4501%" y="1013" width="0.3362%" height="15" fill="rgb(232,151,16)" fg:x="86491" fg:w="366"/><text x="79.7001%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (350 samples, 0.32%)</title><rect x="79.4648%" y="997" width="0.3215%" height="15" fill="rgb(208,30,32)" fg:x="86507" fg:w="350"/><text x="79.7148%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (350 samples, 0.32%)</title><rect x="79.4648%" y="981" width="0.3215%" height="15" fill="rgb(254,26,3)" fg:x="86507" fg:w="350"/><text x="79.7148%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (336 samples, 0.31%)</title><rect x="79.4777%" y="965" width="0.3086%" height="15" fill="rgb(240,177,30)" fg:x="86521" fg:w="336"/><text x="79.7277%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (328 samples, 0.30%)</title><rect x="79.4850%" y="949" width="0.3013%" height="15" fill="rgb(248,76,44)" fg:x="86529" fg:w="328"/><text x="79.7350%" y="959.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (19 samples, 0.02%)</title><rect x="79.8047%" y="965" width="0.0175%" height="15" fill="rgb(241,186,54)" fg:x="86877" fg:w="19"/><text x="80.0547%" y="975.50"></text></g><g><title>core::task::wake::Waker::will_wake (45 samples, 0.04%)</title><rect x="79.7882%" y="1013" width="0.0413%" height="15" fill="rgb(249,171,29)" fg:x="86859" fg:w="45"/><text x="80.0382%" y="1023.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (45 samples, 0.04%)</title><rect x="79.7882%" y="997" width="0.0413%" height="15" fill="rgb(237,151,44)" fg:x="86859" fg:w="45"/><text x="80.0382%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (27 samples, 0.02%)</title><rect x="79.8047%" y="981" width="0.0248%" height="15" fill="rgb(228,174,30)" fg:x="86877" fg:w="27"/><text x="80.0547%" y="991.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="79.8369%" y="981" width="0.0211%" height="15" fill="rgb(252,14,37)" fg:x="86912" fg:w="23"/><text x="80.0869%" y="991.50"></text></g><g><title>std::sync::poison::Flag::borrow (23 samples, 0.02%)</title><rect x="79.8369%" y="965" width="0.0211%" height="15" fill="rgb(207,111,40)" fg:x="86912" fg:w="23"/><text x="80.0869%" y="975.50"></text></g><g><title>std::thread::panicking (20 samples, 0.02%)</title><rect x="79.8396%" y="949" width="0.0184%" height="15" fill="rgb(248,171,54)" fg:x="86915" fg:w="20"/><text x="80.0896%" y="959.50"></text></g><g><title>std::panicking::panicking (20 samples, 0.02%)</title><rect x="79.8396%" y="933" width="0.0184%" height="15" fill="rgb(211,127,2)" fg:x="86915" fg:w="20"/><text x="80.0896%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (20 samples, 0.02%)</title><rect x="79.8396%" y="917" width="0.0184%" height="15" fill="rgb(236,87,47)" fg:x="86915" fg:w="20"/><text x="80.0896%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (20 samples, 0.02%)</title><rect x="79.8396%" y="901" width="0.0184%" height="15" fill="rgb(223,190,45)" fg:x="86915" fg:w="20"/><text x="80.0896%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.02%)</title><rect x="79.8396%" y="885" width="0.0184%" height="15" fill="rgb(215,5,16)" fg:x="86915" fg:w="20"/><text x="80.0896%" y="895.50"></text></g><g><title>event_listener::Inner::lock (569 samples, 0.52%)</title><rect x="79.8295%" y="1013" width="0.5227%" height="15" fill="rgb(252,82,33)" fg:x="86904" fg:w="569"/><text x="80.0795%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (561 samples, 0.52%)</title><rect x="79.8369%" y="997" width="0.5153%" height="15" fill="rgb(247,213,44)" fg:x="86912" fg:w="561"/><text x="80.0869%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (538 samples, 0.49%)</title><rect x="79.8580%" y="981" width="0.4942%" height="15" fill="rgb(205,196,44)" fg:x="86935" fg:w="538"/><text x="80.1080%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (527 samples, 0.48%)</title><rect x="79.8681%" y="965" width="0.4841%" height="15" fill="rgb(237,96,54)" fg:x="86946" fg:w="527"/><text x="80.1181%" y="975.50"></text></g><g><title>___pthread_mutex_lock (527 samples, 0.48%)</title><rect x="79.8681%" y="949" width="0.4841%" height="15" fill="rgb(230,113,34)" fg:x="86946" fg:w="527"/><text x="80.1181%" y="959.50"></text></g><g><title>__GI___lll_lock_wait (48 samples, 0.04%)</title><rect x="80.3081%" y="933" width="0.0441%" height="15" fill="rgb(221,224,12)" fg:x="87425" fg:w="48"/><text x="80.5581%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,463 samples, 1.34%)</title><rect x="79.0414%" y="1029" width="1.3439%" height="15" fill="rgb(219,112,44)" fg:x="86046" fg:w="1463"/><text x="79.2914%" y="1039.50"></text></g><g><title>event_listener::List::remove (36 samples, 0.03%)</title><rect x="80.3522%" y="1013" width="0.0331%" height="15" fill="rgb(210,31,13)" fg:x="87473" fg:w="36"/><text x="80.6022%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (27 samples, 0.02%)</title><rect x="80.3605%" y="997" width="0.0248%" height="15" fill="rgb(230,25,16)" fg:x="87482" fg:w="27"/><text x="80.6105%" y="1007.50"></text></g><g><title>core::mem::replace (27 samples, 0.02%)</title><rect x="80.3605%" y="981" width="0.0248%" height="15" fill="rgb(246,108,53)" fg:x="87482" fg:w="27"/><text x="80.6105%" y="991.50"></text></g><g><title>core::ptr::read (26 samples, 0.02%)</title><rect x="80.3614%" y="965" width="0.0239%" height="15" fill="rgb(241,172,50)" fg:x="87483" fg:w="26"/><text x="80.6114%" y="975.50"></text></g><g><title>concurrent_queue::full_fence (48 samples, 0.04%)</title><rect x="80.5855%" y="981" width="0.0441%" height="15" fill="rgb(235,141,10)" fg:x="87727" fg:w="48"/><text x="80.8355%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (43 samples, 0.04%)</title><rect x="80.5901%" y="965" width="0.0395%" height="15" fill="rgb(220,174,43)" fg:x="87732" fg:w="43"/><text x="80.8401%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (43 samples, 0.04%)</title><rect x="80.5901%" y="949" width="0.0395%" height="15" fill="rgb(215,181,40)" fg:x="87732" fg:w="43"/><text x="80.8401%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (43 samples, 0.04%)</title><rect x="80.5901%" y="933" width="0.0395%" height="15" fill="rgb(230,97,2)" fg:x="87732" fg:w="43"/><text x="80.8401%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (205 samples, 0.19%)</title><rect x="80.6314%" y="981" width="0.1883%" height="15" fill="rgb(211,25,27)" fg:x="87777" fg:w="205"/><text x="80.8814%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (205 samples, 0.19%)</title><rect x="80.6314%" y="965" width="0.1883%" height="15" fill="rgb(230,87,26)" fg:x="87777" fg:w="205"/><text x="80.8814%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (368 samples, 0.34%)</title><rect x="80.8198%" y="981" width="0.3380%" height="15" fill="rgb(227,160,17)" fg:x="87982" fg:w="368"/><text x="81.0698%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (365 samples, 0.34%)</title><rect x="80.8225%" y="965" width="0.3353%" height="15" fill="rgb(244,85,34)" fg:x="87985" fg:w="365"/><text x="81.0725%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (824 samples, 0.76%)</title><rect x="80.4091%" y="1013" width="0.7569%" height="15" fill="rgb(207,70,0)" fg:x="87535" fg:w="824"/><text x="80.6591%" y="1023.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (778 samples, 0.71%)</title><rect x="80.4514%" y="997" width="0.7147%" height="15" fill="rgb(223,129,7)" fg:x="87581" fg:w="778"/><text x="80.7014%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="81.1835%" y="917" width="0.0119%" height="15" fill="rgb(246,105,7)" fg:x="88378" fg:w="13"/><text x="81.4335%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (17 samples, 0.02%)</title><rect x="81.1808%" y="997" width="0.0156%" height="15" fill="rgb(215,154,42)" fg:x="88375" fg:w="17"/><text x="81.4308%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (17 samples, 0.02%)</title><rect x="81.1808%" y="981" width="0.0156%" height="15" fill="rgb(220,215,30)" fg:x="88375" fg:w="17"/><text x="81.4308%" y="991.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="81.1808%" y="965" width="0.0156%" height="15" fill="rgb(228,81,51)" fg:x="88375" fg:w="17"/><text x="81.4308%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="81.1826%" y="949" width="0.0138%" height="15" fill="rgb(247,71,54)" fg:x="88377" fg:w="15"/><text x="81.4326%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (14 samples, 0.01%)</title><rect x="81.1835%" y="933" width="0.0129%" height="15" fill="rgb(234,176,34)" fg:x="88378" fg:w="14"/><text x="81.4335%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="81.1964%" y="997" width="0.0110%" height="15" fill="rgb(241,103,54)" fg:x="88392" fg:w="12"/><text x="81.4464%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="81.1964%" y="981" width="0.0110%" height="15" fill="rgb(228,22,34)" fg:x="88392" fg:w="12"/><text x="81.4464%" y="991.50"></text></g><g><title>event_listener::Inner::lock (21 samples, 0.02%)</title><rect x="81.2092%" y="997" width="0.0193%" height="15" fill="rgb(241,179,48)" fg:x="88406" fg:w="21"/><text x="81.4592%" y="1007.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.02%)</title><rect x="81.2092%" y="981" width="0.0193%" height="15" fill="rgb(235,167,37)" fg:x="88406" fg:w="21"/><text x="81.4592%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (21 samples, 0.02%)</title><rect x="81.2092%" y="965" width="0.0193%" height="15" fill="rgb(213,109,30)" fg:x="88406" fg:w="21"/><text x="81.4592%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.02%)</title><rect x="81.2102%" y="949" width="0.0184%" height="15" fill="rgb(222,172,16)" fg:x="88407" fg:w="20"/><text x="81.4602%" y="959.50"></text></g><g><title>___pthread_mutex_lock (20 samples, 0.02%)</title><rect x="81.2102%" y="933" width="0.0184%" height="15" fill="rgb(233,192,5)" fg:x="88407" fg:w="20"/><text x="81.4602%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (19 samples, 0.02%)</title><rect x="81.2717%" y="821" width="0.0175%" height="15" fill="rgb(247,189,41)" fg:x="88474" fg:w="19"/><text x="81.5217%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_swap (19 samples, 0.02%)</title><rect x="81.2717%" y="805" width="0.0175%" height="15" fill="rgb(218,134,47)" fg:x="88474" fg:w="19"/><text x="81.5217%" y="815.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (24 samples, 0.02%)</title><rect x="81.2892%" y="821" width="0.0220%" height="15" fill="rgb(216,29,3)" fg:x="88493" fg:w="24"/><text x="81.5392%" y="831.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (24 samples, 0.02%)</title><rect x="81.2892%" y="805" width="0.0220%" height="15" fill="rgb(246,140,12)" fg:x="88493" fg:w="24"/><text x="81.5392%" y="815.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (24 samples, 0.02%)</title><rect x="81.2892%" y="789" width="0.0220%" height="15" fill="rgb(230,136,11)" fg:x="88493" fg:w="24"/><text x="81.5392%" y="799.50"></text></g><g><title>__GI___pthread_cond_signal (24 samples, 0.02%)</title><rect x="81.2892%" y="773" width="0.0220%" height="15" fill="rgb(247,22,47)" fg:x="88493" fg:w="24"/><text x="81.5392%" y="783.50"></text></g><g><title>parking::Unparker::unpark (86 samples, 0.08%)</title><rect x="81.2579%" y="853" width="0.0790%" height="15" fill="rgb(218,84,22)" fg:x="88459" fg:w="86"/><text x="81.5079%" y="863.50"></text></g><g><title>parking::Inner::unpark (80 samples, 0.07%)</title><rect x="81.2634%" y="837" width="0.0735%" height="15" fill="rgb(216,87,39)" fg:x="88465" fg:w="80"/><text x="81.5134%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (28 samples, 0.03%)</title><rect x="81.3112%" y="821" width="0.0257%" height="15" fill="rgb(221,178,8)" fg:x="88517" fg:w="28"/><text x="81.5612%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (26 samples, 0.02%)</title><rect x="81.3130%" y="805" width="0.0239%" height="15" fill="rgb(230,42,11)" fg:x="88519" fg:w="26"/><text x="81.5630%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (26 samples, 0.02%)</title><rect x="81.3130%" y="789" width="0.0239%" height="15" fill="rgb(237,229,4)" fg:x="88519" fg:w="26"/><text x="81.5630%" y="799.50"></text></g><g><title>___pthread_mutex_lock (26 samples, 0.02%)</title><rect x="81.3130%" y="773" width="0.0239%" height="15" fill="rgb(222,31,33)" fg:x="88519" fg:w="26"/><text x="81.5630%" y="783.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (97 samples, 0.09%)</title><rect x="81.2506%" y="869" width="0.0891%" height="15" fill="rgb(210,17,39)" fg:x="88451" fg:w="97"/><text x="81.5006%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (109 samples, 0.10%)</title><rect x="81.2506%" y="901" width="0.1001%" height="15" fill="rgb(244,93,20)" fg:x="88451" fg:w="109"/><text x="81.5006%" y="911.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (109 samples, 0.10%)</title><rect x="81.2506%" y="885" width="0.1001%" height="15" fill="rgb(210,40,47)" fg:x="88451" fg:w="109"/><text x="81.5006%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="81.3397%" y="869" width="0.0110%" height="15" fill="rgb(239,211,47)" fg:x="88548" fg:w="12"/><text x="81.5897%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="81.3397%" y="853" width="0.0110%" height="15" fill="rgb(251,223,49)" fg:x="88548" fg:w="12"/><text x="81.5897%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.01%)</title><rect x="81.3406%" y="837" width="0.0101%" height="15" fill="rgb(221,149,5)" fg:x="88549" fg:w="11"/><text x="81.5906%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.01%)</title><rect x="81.3406%" y="821" width="0.0101%" height="15" fill="rgb(219,224,51)" fg:x="88549" fg:w="11"/><text x="81.5906%" y="831.50"></text></g><g><title>async_executor::State::notify (143 samples, 0.13%)</title><rect x="81.2368%" y="917" width="0.1314%" height="15" fill="rgb(223,7,8)" fg:x="88436" fg:w="143"/><text x="81.4868%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (19 samples, 0.02%)</title><rect x="81.3507%" y="901" width="0.0175%" height="15" fill="rgb(241,217,22)" fg:x="88560" fg:w="19"/><text x="81.6007%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (18 samples, 0.02%)</title><rect x="81.3516%" y="885" width="0.0165%" height="15" fill="rgb(248,209,0)" fg:x="88561" fg:w="18"/><text x="81.6016%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="81.3544%" y="869" width="0.0138%" height="15" fill="rgb(217,205,4)" fg:x="88564" fg:w="15"/><text x="81.6044%" y="879.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="81.3544%" y="853" width="0.0138%" height="15" fill="rgb(228,124,39)" fg:x="88564" fg:w="15"/><text x="81.6044%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (19 samples, 0.02%)</title><rect x="81.3755%" y="885" width="0.0175%" height="15" fill="rgb(250,116,42)" fg:x="88587" fg:w="19"/><text x="81.6255%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.02%)</title><rect x="81.3755%" y="869" width="0.0175%" height="15" fill="rgb(223,202,9)" fg:x="88587" fg:w="19"/><text x="81.6255%" y="879.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (177 samples, 0.16%)</title><rect x="81.2368%" y="933" width="0.1626%" height="15" fill="rgb(242,222,40)" fg:x="88436" fg:w="177"/><text x="81.4868%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (34 samples, 0.03%)</title><rect x="81.3682%" y="917" width="0.0312%" height="15" fill="rgb(229,99,46)" fg:x="88579" fg:w="34"/><text x="81.6182%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (32 samples, 0.03%)</title><rect x="81.3700%" y="901" width="0.0294%" height="15" fill="rgb(225,56,46)" fg:x="88581" fg:w="32"/><text x="81.6200%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (22 samples, 0.02%)</title><rect x="81.3994%" y="933" width="0.0202%" height="15" fill="rgb(227,94,5)" fg:x="88613" fg:w="22"/><text x="81.6494%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (22 samples, 0.02%)</title><rect x="81.3994%" y="917" width="0.0202%" height="15" fill="rgb(205,112,38)" fg:x="88613" fg:w="22"/><text x="81.6494%" y="927.50"></text></g><g><title>event_listener::List::notify (218 samples, 0.20%)</title><rect x="81.2285%" y="997" width="0.2003%" height="15" fill="rgb(231,133,46)" fg:x="88427" fg:w="218"/><text x="81.4785%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (214 samples, 0.20%)</title><rect x="81.2322%" y="981" width="0.1966%" height="15" fill="rgb(217,16,9)" fg:x="88431" fg:w="214"/><text x="81.4822%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (214 samples, 0.20%)</title><rect x="81.2322%" y="965" width="0.1966%" height="15" fill="rgb(249,173,9)" fg:x="88431" fg:w="214"/><text x="81.4822%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (209 samples, 0.19%)</title><rect x="81.2368%" y="949" width="0.1920%" height="15" fill="rgb(205,163,53)" fg:x="88436" fg:w="209"/><text x="81.4868%" y="959.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,755 samples, 1.61%)</title><rect x="80.3853%" y="1029" width="1.6121%" height="15" fill="rgb(217,54,41)" fg:x="87509" fg:w="1755"/><text x="80.6353%" y="1039.50"></text></g><g><title>event_listener::Event::notify (905 samples, 0.83%)</title><rect x="81.1661%" y="1013" width="0.8313%" height="15" fill="rgb(228,216,12)" fg:x="88359" fg:w="905"/><text x="81.4161%" y="1023.50"></text></g><g><title>event_listener::full_fence (619 samples, 0.57%)</title><rect x="81.4288%" y="997" width="0.5686%" height="15" fill="rgb(244,228,15)" fg:x="88645" fg:w="619"/><text x="81.6788%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (619 samples, 0.57%)</title><rect x="81.4288%" y="981" width="0.5686%" height="15" fill="rgb(221,176,53)" fg:x="88645" fg:w="619"/><text x="81.6788%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (619 samples, 0.57%)</title><rect x="81.4288%" y="965" width="0.5686%" height="15" fill="rgb(205,94,34)" fg:x="88645" fg:w="619"/><text x="81.6788%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (18 samples, 0.02%)</title><rect x="81.9974%" y="1029" width="0.0165%" height="15" fill="rgb(213,110,48)" fg:x="89264" fg:w="18"/><text x="82.2474%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (12 samples, 0.01%)</title><rect x="82.0277%" y="981" width="0.0110%" height="15" fill="rgb(236,142,28)" fg:x="89297" fg:w="12"/><text x="82.2777%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (12 samples, 0.01%)</title><rect x="82.0277%" y="965" width="0.0110%" height="15" fill="rgb(225,135,29)" fg:x="89297" fg:w="12"/><text x="82.2777%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="82.0277%" y="949" width="0.0110%" height="15" fill="rgb(252,45,31)" fg:x="89297" fg:w="12"/><text x="82.2777%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="82.0277%" y="933" width="0.0110%" height="15" fill="rgb(211,187,50)" fg:x="89297" fg:w="12"/><text x="82.2777%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (11 samples, 0.01%)</title><rect x="82.0286%" y="917" width="0.0101%" height="15" fill="rgb(229,109,7)" fg:x="89298" fg:w="11"/><text x="82.2786%" y="927.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="82.0286%" y="901" width="0.0101%" height="15" fill="rgb(251,131,51)" fg:x="89298" fg:w="11"/><text x="82.2786%" y="911.50"></text></g><g><title>event_listener::Inner::lock (33 samples, 0.03%)</title><rect x="82.0406%" y="981" width="0.0303%" height="15" fill="rgb(251,180,35)" fg:x="89311" fg:w="33"/><text x="82.2906%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (33 samples, 0.03%)</title><rect x="82.0406%" y="965" width="0.0303%" height="15" fill="rgb(211,46,32)" fg:x="89311" fg:w="33"/><text x="82.2906%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (30 samples, 0.03%)</title><rect x="82.0433%" y="949" width="0.0276%" height="15" fill="rgb(248,123,17)" fg:x="89314" fg:w="30"/><text x="82.2933%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.02%)</title><rect x="82.0461%" y="933" width="0.0248%" height="15" fill="rgb(227,141,18)" fg:x="89317" fg:w="27"/><text x="82.2961%" y="943.50"></text></g><g><title>___pthread_mutex_lock (27 samples, 0.02%)</title><rect x="82.0461%" y="917" width="0.0248%" height="15" fill="rgb(216,102,9)" fg:x="89317" fg:w="27"/><text x="82.2961%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="82.0259%" y="997" width="0.0496%" height="15" fill="rgb(253,47,13)" fg:x="89295" fg:w="54"/><text x="82.2759%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (94 samples, 0.09%)</title><rect x="82.0139%" y="1029" width="0.0863%" height="15" fill="rgb(226,93,23)" fg:x="89282" fg:w="94"/><text x="82.2639%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (81 samples, 0.07%)</title><rect x="82.0259%" y="1013" width="0.0744%" height="15" fill="rgb(247,104,17)" fg:x="89295" fg:w="81"/><text x="82.2759%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (27 samples, 0.02%)</title><rect x="82.0755%" y="997" width="0.0248%" height="15" fill="rgb(233,203,26)" fg:x="89349" fg:w="27"/><text x="82.3255%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="82.0755%" y="981" width="0.0248%" height="15" fill="rgb(244,98,49)" fg:x="89349" fg:w="27"/><text x="82.3255%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (26 samples, 0.02%)</title><rect x="82.0764%" y="965" width="0.0239%" height="15" fill="rgb(235,134,22)" fg:x="89350" fg:w="26"/><text x="82.3264%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (26 samples, 0.02%)</title><rect x="82.0764%" y="949" width="0.0239%" height="15" fill="rgb(221,70,32)" fg:x="89350" fg:w="26"/><text x="82.3264%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="82.1067%" y="1013" width="0.0230%" height="15" fill="rgb(238,15,50)" fg:x="89383" fg:w="25"/><text x="82.3567%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.02%)</title><rect x="82.1067%" y="997" width="0.0230%" height="15" fill="rgb(215,221,48)" fg:x="89383" fg:w="25"/><text x="82.3567%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.02%)</title><rect x="82.1067%" y="981" width="0.0230%" height="15" fill="rgb(236,73,3)" fg:x="89383" fg:w="25"/><text x="82.3567%" y="991.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (33 samples, 0.03%)</title><rect x="82.1306%" y="933" width="0.0303%" height="15" fill="rgb(250,107,11)" fg:x="89409" fg:w="33"/><text x="82.3806%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (35 samples, 0.03%)</title><rect x="82.1297%" y="1013" width="0.0322%" height="15" fill="rgb(242,39,14)" fg:x="89408" fg:w="35"/><text x="82.3797%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (34 samples, 0.03%)</title><rect x="82.1306%" y="997" width="0.0312%" height="15" fill="rgb(248,164,37)" fg:x="89409" fg:w="34"/><text x="82.3806%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="82.1306%" y="981" width="0.0312%" height="15" fill="rgb(217,60,12)" fg:x="89409" fg:w="34"/><text x="82.3806%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (34 samples, 0.03%)</title><rect x="82.1306%" y="965" width="0.0312%" height="15" fill="rgb(240,125,29)" fg:x="89409" fg:w="34"/><text x="82.3806%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (34 samples, 0.03%)</title><rect x="82.1306%" y="949" width="0.0312%" height="15" fill="rgb(208,207,28)" fg:x="89409" fg:w="34"/><text x="82.3806%" y="959.50"></text></g><g><title>event_listener::Inner::lock (16 samples, 0.01%)</title><rect x="82.1637%" y="1013" width="0.0147%" height="15" fill="rgb(209,159,27)" fg:x="89445" fg:w="16"/><text x="82.4137%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="82.1637%" y="997" width="0.0147%" height="15" fill="rgb(251,176,53)" fg:x="89445" fg:w="16"/><text x="82.4137%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (16 samples, 0.01%)</title><rect x="82.1637%" y="981" width="0.0147%" height="15" fill="rgb(211,85,7)" fg:x="89445" fg:w="16"/><text x="82.4137%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (16 samples, 0.01%)</title><rect x="82.1637%" y="965" width="0.0147%" height="15" fill="rgb(216,64,54)" fg:x="89445" fg:w="16"/><text x="82.4137%" y="975.50"></text></g><g><title>___pthread_mutex_lock (16 samples, 0.01%)</title><rect x="82.1637%" y="949" width="0.0147%" height="15" fill="rgb(217,54,24)" fg:x="89445" fg:w="16"/><text x="82.4137%" y="959.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3,506 samples, 3.22%)</title><rect x="78.9816%" y="1045" width="3.2206%" height="15" fill="rgb(208,206,53)" fg:x="85981" fg:w="3506"/><text x="79.2316%" y="1055.50">&lt;as..</text></g><g><title>event_listener::Event::listen (111 samples, 0.10%)</title><rect x="82.1003%" y="1029" width="0.1020%" height="15" fill="rgb(251,74,39)" fg:x="89376" fg:w="111"/><text x="82.3503%" y="1039.50"></text></g><g><title>event_listener::full_fence (21 samples, 0.02%)</title><rect x="82.1829%" y="1013" width="0.0193%" height="15" fill="rgb(226,47,5)" fg:x="89466" fg:w="21"/><text x="82.4329%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (21 samples, 0.02%)</title><rect x="82.1829%" y="997" width="0.0193%" height="15" fill="rgb(234,111,33)" fg:x="89466" fg:w="21"/><text x="82.4329%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (21 samples, 0.02%)</title><rect x="82.1829%" y="981" width="0.0193%" height="15" fill="rgb(251,14,10)" fg:x="89466" fg:w="21"/><text x="82.4329%" y="991.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.01%)</title><rect x="82.2022%" y="1045" width="0.0110%" height="15" fill="rgb(232,43,0)" fg:x="89487" fg:w="12"/><text x="82.4522%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (618 samples, 0.57%)</title><rect x="82.2133%" y="1045" width="0.5677%" height="15" fill="rgb(222,68,43)" fg:x="89499" fg:w="618"/><text x="82.4633%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (204 samples, 0.19%)</title><rect x="82.7920%" y="1029" width="0.1874%" height="15" fill="rgb(217,24,23)" fg:x="90129" fg:w="204"/><text x="83.0420%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (679 samples, 0.62%)</title><rect x="82.9959%" y="997" width="0.6237%" height="15" fill="rgb(229,209,14)" fg:x="90351" fg:w="679"/><text x="83.2459%" y="1007.50"></text></g><g><title>size_to_sizeclass (19 samples, 0.02%)</title><rect x="83.6435%" y="885" width="0.0175%" height="15" fill="rgb(250,149,48)" fg:x="91056" fg:w="19"/><text x="83.8935%" y="895.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="83.6646%" y="821" width="0.0129%" height="15" fill="rgb(210,120,37)" fg:x="91079" fg:w="14"/><text x="83.9146%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (69 samples, 0.06%)</title><rect x="83.6904%" y="821" width="0.0634%" height="15" fill="rgb(210,21,8)" fg:x="91107" fg:w="69"/><text x="83.9404%" y="831.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (57 samples, 0.05%)</title><rect x="83.7014%" y="805" width="0.0524%" height="15" fill="rgb(243,145,7)" fg:x="91119" fg:w="57"/><text x="83.9514%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (121 samples, 0.11%)</title><rect x="83.6610%" y="853" width="0.1111%" height="15" fill="rgb(238,178,32)" fg:x="91075" fg:w="121"/><text x="83.9110%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (121 samples, 0.11%)</title><rect x="83.6610%" y="837" width="0.1111%" height="15" fill="rgb(222,4,10)" fg:x="91075" fg:w="121"/><text x="83.9110%" y="847.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="83.7620%" y="821" width="0.0101%" height="15" fill="rgb(239,7,37)" fg:x="91185" fg:w="11"/><text x="84.0120%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (127 samples, 0.12%)</title><rect x="83.6610%" y="885" width="0.1167%" height="15" fill="rgb(215,31,37)" fg:x="91075" fg:w="127"/><text x="83.9110%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (127 samples, 0.12%)</title><rect x="83.6610%" y="869" width="0.1167%" height="15" fill="rgb(224,83,33)" fg:x="91075" fg:w="127"/><text x="83.9110%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (152 samples, 0.14%)</title><rect x="83.6398%" y="901" width="0.1396%" height="15" fill="rgb(239,55,3)" fg:x="91052" fg:w="152"/><text x="83.8898%" y="911.50"></text></g><g><title>rust_dealloc (167 samples, 0.15%)</title><rect x="83.6288%" y="917" width="0.1534%" height="15" fill="rgb(247,92,11)" fg:x="91040" fg:w="167"/><text x="83.8788%" y="927.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,277 samples, 4.85%)</title><rect x="78.9385%" y="1061" width="4.8474%" height="15" fill="rgb(239,200,7)" fg:x="85934" fg:w="5277"/><text x="79.1885%" y="1071.50">&lt;async..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,094 samples, 1.00%)</title><rect x="82.7810%" y="1045" width="1.0049%" height="15" fill="rgb(227,115,8)" fg:x="90117" fg:w="1094"/><text x="83.0310%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (878 samples, 0.81%)</title><rect x="82.9794%" y="1029" width="0.8065%" height="15" fill="rgb(215,189,27)" fg:x="90333" fg:w="878"/><text x="83.2294%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (878 samples, 0.81%)</title><rect x="82.9794%" y="1013" width="0.8065%" height="15" fill="rgb(251,216,39)" fg:x="90333" fg:w="878"/><text x="83.2294%" y="1023.50"></text></g><g><title>alloc::alloc::box_free (181 samples, 0.17%)</title><rect x="83.6196%" y="997" width="0.1663%" height="15" fill="rgb(207,29,47)" fg:x="91030" fg:w="181"/><text x="83.8696%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (181 samples, 0.17%)</title><rect x="83.6196%" y="981" width="0.1663%" height="15" fill="rgb(210,71,34)" fg:x="91030" fg:w="181"/><text x="83.8696%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (181 samples, 0.17%)</title><rect x="83.6196%" y="965" width="0.1663%" height="15" fill="rgb(253,217,51)" fg:x="91030" fg:w="181"/><text x="83.8696%" y="975.50"></text></g><g><title>__rg_dealloc (181 samples, 0.17%)</title><rect x="83.6196%" y="949" width="0.1663%" height="15" fill="rgb(222,117,46)" fg:x="91030" fg:w="181"/><text x="83.8696%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (181 samples, 0.17%)</title><rect x="83.6196%" y="933" width="0.1663%" height="15" fill="rgb(226,132,6)" fg:x="91030" fg:w="181"/><text x="83.8696%" y="943.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,645 samples, 5.19%)</title><rect x="78.9008%" y="1077" width="5.1855%" height="15" fill="rgb(254,145,51)" fg:x="85893" fg:w="5645"/><text x="79.1508%" y="1087.50">&lt;async..</text></g><g><title>__memcpy_avx_unaligned_erms (327 samples, 0.30%)</title><rect x="83.7859%" y="1061" width="0.3004%" height="15" fill="rgb(231,199,27)" fg:x="91211" fg:w="327"/><text x="84.0359%" y="1071.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,057 samples, 5.56%)</title><rect x="78.8751%" y="1141" width="5.5639%" height="15" fill="rgb(245,158,14)" fg:x="85865" fg:w="6057"/><text x="79.1251%" y="1151.50">&lt;async_..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,057 samples, 5.56%)</title><rect x="78.8751%" y="1125" width="5.5639%" height="15" fill="rgb(240,113,14)" fg:x="85865" fg:w="6057"/><text x="79.1251%" y="1135.50">&lt;tremor..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,057 samples, 5.56%)</title><rect x="78.8751%" y="1109" width="5.5639%" height="15" fill="rgb(210,20,13)" fg:x="85865" fg:w="6057"/><text x="79.1251%" y="1119.50">&lt;async_..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,057 samples, 5.56%)</title><rect x="78.8751%" y="1093" width="5.5639%" height="15" fill="rgb(241,144,13)" fg:x="85865" fg:w="6057"/><text x="79.1251%" y="1103.50">&lt;tremor..</text></g><g><title>__memcpy_avx_unaligned_erms (384 samples, 0.35%)</title><rect x="84.0863%" y="1077" width="0.3527%" height="15" fill="rgb(235,43,34)" fg:x="91538" fg:w="384"/><text x="84.3363%" y="1087.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.04%)</title><rect x="84.5042%" y="1061" width="0.0358%" height="15" fill="rgb(208,36,20)" fg:x="91993" fg:w="39"/><text x="84.7542%" y="1071.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="84.5428%" y="1045" width="0.0193%" height="15" fill="rgb(239,204,10)" fg:x="92035" fg:w="21"/><text x="84.7928%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (21 samples, 0.02%)</title><rect x="84.5428%" y="1029" width="0.0193%" height="15" fill="rgb(217,84,43)" fg:x="92035" fg:w="21"/><text x="84.7928%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (21 samples, 0.02%)</title><rect x="84.5428%" y="1013" width="0.0193%" height="15" fill="rgb(241,170,50)" fg:x="92035" fg:w="21"/><text x="84.7928%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (21 samples, 0.02%)</title><rect x="84.5428%" y="997" width="0.0193%" height="15" fill="rgb(226,205,29)" fg:x="92035" fg:w="21"/><text x="84.7928%" y="1007.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (12 samples, 0.01%)</title><rect x="84.5639%" y="1045" width="0.0110%" height="15" fill="rgb(233,113,1)" fg:x="92058" fg:w="12"/><text x="84.8139%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (29 samples, 0.03%)</title><rect x="84.5750%" y="1045" width="0.0266%" height="15" fill="rgb(253,98,13)" fg:x="92070" fg:w="29"/><text x="84.8250%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (26 samples, 0.02%)</title><rect x="84.5777%" y="1029" width="0.0239%" height="15" fill="rgb(211,115,12)" fg:x="92073" fg:w="26"/><text x="84.8277%" y="1039.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="84.5777%" y="1013" width="0.0239%" height="15" fill="rgb(208,12,16)" fg:x="92073" fg:w="26"/><text x="84.8277%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (25 samples, 0.02%)</title><rect x="84.5786%" y="997" width="0.0230%" height="15" fill="rgb(237,193,54)" fg:x="92074" fg:w="25"/><text x="84.8286%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (25 samples, 0.02%)</title><rect x="84.5786%" y="981" width="0.0230%" height="15" fill="rgb(243,22,42)" fg:x="92074" fg:w="25"/><text x="84.8286%" y="991.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (25 samples, 0.02%)</title><rect x="84.5786%" y="965" width="0.0230%" height="15" fill="rgb(233,151,36)" fg:x="92074" fg:w="25"/><text x="84.8286%" y="975.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (109 samples, 0.10%)</title><rect x="84.5401%" y="1061" width="0.1001%" height="15" fill="rgb(237,57,45)" fg:x="92032" fg:w="109"/><text x="84.7901%" y="1071.50"></text></g><g><title>event_listener::Inner::lock (40 samples, 0.04%)</title><rect x="84.6034%" y="1045" width="0.0367%" height="15" fill="rgb(221,88,17)" fg:x="92101" fg:w="40"/><text x="84.8534%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (39 samples, 0.04%)</title><rect x="84.6044%" y="1029" width="0.0358%" height="15" fill="rgb(230,79,15)" fg:x="92102" fg:w="39"/><text x="84.8544%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (38 samples, 0.03%)</title><rect x="84.6053%" y="1013" width="0.0349%" height="15" fill="rgb(213,57,13)" fg:x="92103" fg:w="38"/><text x="84.8553%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (37 samples, 0.03%)</title><rect x="84.6062%" y="997" width="0.0340%" height="15" fill="rgb(222,116,39)" fg:x="92104" fg:w="37"/><text x="84.8562%" y="1007.50"></text></g><g><title>___pthread_mutex_lock (37 samples, 0.03%)</title><rect x="84.6062%" y="981" width="0.0340%" height="15" fill="rgb(245,107,2)" fg:x="92104" fg:w="37"/><text x="84.8562%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (74 samples, 0.07%)</title><rect x="84.6402%" y="1061" width="0.0680%" height="15" fill="rgb(238,1,10)" fg:x="92141" fg:w="74"/><text x="84.8902%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (66 samples, 0.06%)</title><rect x="84.7284%" y="1045" width="0.0606%" height="15" fill="rgb(249,4,48)" fg:x="92237" fg:w="66"/><text x="84.9784%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (307 samples, 0.28%)</title><rect x="84.8900%" y="1029" width="0.2820%" height="15" fill="rgb(223,151,18)" fg:x="92413" fg:w="307"/><text x="85.1400%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (35 samples, 0.03%)</title><rect x="85.2869%" y="1013" width="0.0322%" height="15" fill="rgb(227,65,43)" fg:x="92845" fg:w="35"/><text x="85.5369%" y="1023.50"></text></g><g><title>concurrent_queue::full_fence (58 samples, 0.05%)</title><rect x="85.3190%" y="1013" width="0.0533%" height="15" fill="rgb(218,40,45)" fg:x="92880" fg:w="58"/><text x="85.5690%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (49 samples, 0.05%)</title><rect x="85.3273%" y="997" width="0.0450%" height="15" fill="rgb(252,121,31)" fg:x="92889" fg:w="49"/><text x="85.5773%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (49 samples, 0.05%)</title><rect x="85.3273%" y="981" width="0.0450%" height="15" fill="rgb(219,158,43)" fg:x="92889" fg:w="49"/><text x="85.5773%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (49 samples, 0.05%)</title><rect x="85.3273%" y="965" width="0.0450%" height="15" fill="rgb(231,162,42)" fg:x="92889" fg:w="49"/><text x="85.5773%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (20 samples, 0.02%)</title><rect x="85.3723%" y="1013" width="0.0184%" height="15" fill="rgb(217,179,25)" fg:x="92938" fg:w="20"/><text x="85.6223%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (203 samples, 0.19%)</title><rect x="85.3907%" y="1013" width="0.1865%" height="15" fill="rgb(206,212,31)" fg:x="92958" fg:w="203"/><text x="85.6407%" y="1023.50"></text></g><g><title>core::ptr::write (203 samples, 0.19%)</title><rect x="85.3907%" y="997" width="0.1865%" height="15" fill="rgb(235,144,12)" fg:x="92958" fg:w="203"/><text x="85.6407%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (192 samples, 0.18%)</title><rect x="85.4008%" y="981" width="0.1764%" height="15" fill="rgb(213,51,10)" fg:x="92969" fg:w="192"/><text x="85.6508%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (258 samples, 0.24%)</title><rect x="85.5772%" y="1013" width="0.2370%" height="15" fill="rgb(231,145,14)" fg:x="93161" fg:w="258"/><text x="85.8272%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (258 samples, 0.24%)</title><rect x="85.5772%" y="997" width="0.2370%" height="15" fill="rgb(235,15,28)" fg:x="93161" fg:w="258"/><text x="85.8272%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (410 samples, 0.38%)</title><rect x="85.8142%" y="1013" width="0.3766%" height="15" fill="rgb(237,206,10)" fg:x="93419" fg:w="410"/><text x="86.0642%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (405 samples, 0.37%)</title><rect x="85.8187%" y="997" width="0.3720%" height="15" fill="rgb(236,227,27)" fg:x="93424" fg:w="405"/><text x="86.0687%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,536 samples, 1.41%)</title><rect x="84.7890%" y="1045" width="1.4110%" height="15" fill="rgb(246,83,35)" fg:x="92303" fg:w="1536"/><text x="85.0390%" y="1055.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,119 samples, 1.03%)</title><rect x="85.1721%" y="1029" width="1.0279%" height="15" fill="rgb(220,136,24)" fg:x="92720" fg:w="1119"/><text x="85.4221%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (11 samples, 0.01%)</title><rect x="86.2376%" y="1029" width="0.0101%" height="15" fill="rgb(217,3,25)" fg:x="93880" fg:w="11"/><text x="86.4876%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="86.2376%" y="1013" width="0.0101%" height="15" fill="rgb(239,24,14)" fg:x="93880" fg:w="11"/><text x="86.4876%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.01%)</title><rect x="86.2376%" y="997" width="0.0101%" height="15" fill="rgb(244,16,53)" fg:x="93880" fg:w="11"/><text x="86.4876%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (11 samples, 0.01%)</title><rect x="86.2376%" y="981" width="0.0101%" height="15" fill="rgb(208,175,44)" fg:x="93880" fg:w="11"/><text x="86.4876%" y="991.50"></text></g><g><title>___pthread_mutex_lock (11 samples, 0.01%)</title><rect x="86.2376%" y="965" width="0.0101%" height="15" fill="rgb(252,18,48)" fg:x="93880" fg:w="11"/><text x="86.4876%" y="975.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (31 samples, 0.03%)</title><rect x="86.2560%" y="901" width="0.0285%" height="15" fill="rgb(234,199,32)" fg:x="93900" fg:w="31"/><text x="86.5060%" y="911.50"></text></g><g><title>parking::Unparker::unpark (27 samples, 0.02%)</title><rect x="86.2597%" y="885" width="0.0248%" height="15" fill="rgb(225,77,54)" fg:x="93904" fg:w="27"/><text x="86.5097%" y="895.50"></text></g><g><title>parking::Inner::unpark (24 samples, 0.02%)</title><rect x="86.2624%" y="869" width="0.0220%" height="15" fill="rgb(225,42,25)" fg:x="93907" fg:w="24"/><text x="86.5124%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="86.2725%" y="853" width="0.0119%" height="15" fill="rgb(242,227,46)" fg:x="93918" fg:w="13"/><text x="86.5225%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="86.2725%" y="837" width="0.0119%" height="15" fill="rgb(246,197,35)" fg:x="93918" fg:w="13"/><text x="86.5225%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="86.2725%" y="821" width="0.0119%" height="15" fill="rgb(215,159,26)" fg:x="93918" fg:w="13"/><text x="86.5225%" y="831.50"></text></g><g><title>___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="86.2725%" y="805" width="0.0119%" height="15" fill="rgb(212,194,50)" fg:x="93918" fg:w="13"/><text x="86.5225%" y="815.50"></text></g><g><title>core::task::wake::Waker::wake (39 samples, 0.04%)</title><rect x="86.2560%" y="933" width="0.0358%" height="15" fill="rgb(246,132,1)" fg:x="93900" fg:w="39"/><text x="86.5060%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (39 samples, 0.04%)</title><rect x="86.2560%" y="917" width="0.0358%" height="15" fill="rgb(217,71,7)" fg:x="93900" fg:w="39"/><text x="86.5060%" y="927.50"></text></g><g><title>async_executor::State::notify (49 samples, 0.05%)</title><rect x="86.2496%" y="949" width="0.0450%" height="15" fill="rgb(252,59,32)" fg:x="93893" fg:w="49"/><text x="86.4996%" y="959.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (62 samples, 0.06%)</title><rect x="86.2496%" y="965" width="0.0570%" height="15" fill="rgb(253,204,25)" fg:x="93893" fg:w="62"/><text x="86.4996%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (13 samples, 0.01%)</title><rect x="86.2946%" y="949" width="0.0119%" height="15" fill="rgb(232,21,16)" fg:x="93942" fg:w="13"/><text x="86.5446%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (12 samples, 0.01%)</title><rect x="86.2955%" y="933" width="0.0110%" height="15" fill="rgb(248,90,29)" fg:x="93943" fg:w="12"/><text x="86.5455%" y="943.50"></text></g><g><title>event_listener::List::notify (70 samples, 0.06%)</title><rect x="86.2477%" y="1029" width="0.0643%" height="15" fill="rgb(249,223,7)" fg:x="93891" fg:w="70"/><text x="86.4977%" y="1039.50"></text></g><g><title>core::task::wake::Waker::wake (69 samples, 0.06%)</title><rect x="86.2486%" y="1013" width="0.0634%" height="15" fill="rgb(231,119,42)" fg:x="93892" fg:w="69"/><text x="86.4986%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (69 samples, 0.06%)</title><rect x="86.2486%" y="997" width="0.0634%" height="15" fill="rgb(215,41,35)" fg:x="93892" fg:w="69"/><text x="86.4986%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (69 samples, 0.06%)</title><rect x="86.2486%" y="981" width="0.0634%" height="15" fill="rgb(220,44,45)" fg:x="93892" fg:w="69"/><text x="86.4986%" y="991.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,903 samples, 2.67%)</title><rect x="84.7082%" y="1061" width="2.6667%" height="15" fill="rgb(253,197,36)" fg:x="92215" fg:w="2903"/><text x="84.9582%" y="1071.50">as..</text></g><g><title>event_listener::Event::notify (1,279 samples, 1.17%)</title><rect x="86.2000%" y="1045" width="1.1749%" height="15" fill="rgb(245,225,54)" fg:x="93839" fg:w="1279"/><text x="86.4500%" y="1055.50"></text></g><g><title>event_listener::full_fence (1,157 samples, 1.06%)</title><rect x="86.3120%" y="1029" width="1.0628%" height="15" fill="rgb(239,94,37)" fg:x="93961" fg:w="1157"/><text x="86.5620%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,148 samples, 1.05%)</title><rect x="86.3203%" y="1013" width="1.0545%" height="15" fill="rgb(242,217,10)" fg:x="93970" fg:w="1148"/><text x="86.5703%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,148 samples, 1.05%)</title><rect x="86.3203%" y="997" width="1.0545%" height="15" fill="rgb(250,193,7)" fg:x="93970" fg:w="1148"/><text x="86.5703%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (444 samples, 0.41%)</title><rect x="87.3840%" y="1061" width="0.4079%" height="15" fill="rgb(230,104,19)" fg:x="95128" fg:w="444"/><text x="87.6340%" y="1071.50"></text></g><g><title>core::mem::replace (444 samples, 0.41%)</title><rect x="87.3840%" y="1045" width="0.4079%" height="15" fill="rgb(230,181,4)" fg:x="95128" fg:w="444"/><text x="87.6340%" y="1055.50"></text></g><g><title>core::ptr::read (432 samples, 0.40%)</title><rect x="87.3951%" y="1029" width="0.3968%" height="15" fill="rgb(216,219,49)" fg:x="95140" fg:w="432"/><text x="87.6451%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (400 samples, 0.37%)</title><rect x="87.4244%" y="1013" width="0.3674%" height="15" fill="rgb(254,144,0)" fg:x="95172" fg:w="400"/><text x="87.6744%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (406 samples, 0.37%)</title><rect x="87.7919%" y="1061" width="0.3729%" height="15" fill="rgb(205,209,38)" fg:x="95572" fg:w="406"/><text x="88.0419%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (388 samples, 0.36%)</title><rect x="87.8084%" y="1045" width="0.3564%" height="15" fill="rgb(240,21,42)" fg:x="95590" fg:w="388"/><text x="88.0584%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="88.1694%" y="1045" width="0.0579%" height="15" fill="rgb(241,132,3)" fg:x="95983" fg:w="63"/><text x="88.4194%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (63 samples, 0.06%)</title><rect x="88.1694%" y="1029" width="0.0579%" height="15" fill="rgb(225,14,2)" fg:x="95983" fg:w="63"/><text x="88.4194%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_add (63 samples, 0.06%)</title><rect x="88.1694%" y="1013" width="0.0579%" height="15" fill="rgb(210,141,35)" fg:x="95983" fg:w="63"/><text x="88.4194%" y="1023.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (48 samples, 0.04%)</title><rect x="88.2273%" y="965" width="0.0441%" height="15" fill="rgb(251,14,44)" fg:x="96046" fg:w="48"/><text x="88.4773%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (49 samples, 0.05%)</title><rect x="88.2273%" y="1045" width="0.0450%" height="15" fill="rgb(247,48,18)" fg:x="96046" fg:w="49"/><text x="88.4773%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (49 samples, 0.05%)</title><rect x="88.2273%" y="1029" width="0.0450%" height="15" fill="rgb(225,0,40)" fg:x="96046" fg:w="49"/><text x="88.4773%" y="1039.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.05%)</title><rect x="88.2273%" y="1013" width="0.0450%" height="15" fill="rgb(221,31,33)" fg:x="96046" fg:w="49"/><text x="88.4773%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (49 samples, 0.05%)</title><rect x="88.2273%" y="997" width="0.0450%" height="15" fill="rgb(237,42,40)" fg:x="96046" fg:w="49"/><text x="88.4773%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (49 samples, 0.05%)</title><rect x="88.2273%" y="981" width="0.0450%" height="15" fill="rgb(233,51,29)" fg:x="96046" fg:w="49"/><text x="88.4773%" y="991.50"></text></g><g><title>event_listener::Inner::lock (36 samples, 0.03%)</title><rect x="88.2769%" y="1045" width="0.0331%" height="15" fill="rgb(226,58,20)" fg:x="96100" fg:w="36"/><text x="88.5269%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (36 samples, 0.03%)</title><rect x="88.2769%" y="1029" width="0.0331%" height="15" fill="rgb(208,98,7)" fg:x="96100" fg:w="36"/><text x="88.5269%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (33 samples, 0.03%)</title><rect x="88.2797%" y="1013" width="0.0303%" height="15" fill="rgb(228,143,44)" fg:x="96103" fg:w="33"/><text x="88.5297%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (33 samples, 0.03%)</title><rect x="88.2797%" y="997" width="0.0303%" height="15" fill="rgb(246,55,38)" fg:x="96103" fg:w="33"/><text x="88.5297%" y="1007.50"></text></g><g><title>___pthread_mutex_lock (33 samples, 0.03%)</title><rect x="88.2797%" y="981" width="0.0303%" height="15" fill="rgb(247,87,16)" fg:x="96103" fg:w="33"/><text x="88.5297%" y="991.50"></text></g><g><title>event_listener::Event::listen (186 samples, 0.17%)</title><rect x="88.1667%" y="1061" width="0.1709%" height="15" fill="rgb(234,129,42)" fg:x="95980" fg:w="186"/><text x="88.4167%" y="1071.50"></text></g><g><title>event_listener::full_fence (26 samples, 0.02%)</title><rect x="88.3136%" y="1045" width="0.0239%" height="15" fill="rgb(220,82,16)" fg:x="96140" fg:w="26"/><text x="88.5636%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (25 samples, 0.02%)</title><rect x="88.3146%" y="1029" width="0.0230%" height="15" fill="rgb(211,88,4)" fg:x="96141" fg:w="25"/><text x="88.5646%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (25 samples, 0.02%)</title><rect x="88.3146%" y="1013" width="0.0230%" height="15" fill="rgb(248,151,21)" fg:x="96141" fg:w="25"/><text x="88.5646%" y="1023.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (47 samples, 0.04%)</title><rect x="88.3550%" y="965" width="0.0432%" height="15" fill="rgb(238,163,6)" fg:x="96185" fg:w="47"/><text x="88.6050%" y="975.50"></text></g><g><title>__GI___lll_lock_wake (18 samples, 0.02%)</title><rect x="88.3816%" y="949" width="0.0165%" height="15" fill="rgb(209,183,11)" fg:x="96214" fg:w="18"/><text x="88.6316%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (57 samples, 0.05%)</title><rect x="88.3513%" y="1045" width="0.0524%" height="15" fill="rgb(219,37,20)" fg:x="96181" fg:w="57"/><text x="88.6013%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (54 samples, 0.05%)</title><rect x="88.3541%" y="1029" width="0.0496%" height="15" fill="rgb(210,158,4)" fg:x="96184" fg:w="54"/><text x="88.6041%" y="1039.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="88.3541%" y="1013" width="0.0496%" height="15" fill="rgb(221,167,53)" fg:x="96184" fg:w="54"/><text x="88.6041%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (54 samples, 0.05%)</title><rect x="88.3541%" y="997" width="0.0496%" height="15" fill="rgb(237,151,45)" fg:x="96184" fg:w="54"/><text x="88.6041%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (53 samples, 0.05%)</title><rect x="88.3550%" y="981" width="0.0487%" height="15" fill="rgb(231,39,3)" fg:x="96185" fg:w="53"/><text x="88.6050%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (23 samples, 0.02%)</title><rect x="88.4037%" y="1045" width="0.0211%" height="15" fill="rgb(212,167,28)" fg:x="96238" fg:w="23"/><text x="88.6537%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.02%)</title><rect x="88.4037%" y="1029" width="0.0211%" height="15" fill="rgb(232,178,8)" fg:x="96238" fg:w="23"/><text x="88.6537%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (93 samples, 0.09%)</title><rect x="88.4248%" y="1045" width="0.0854%" height="15" fill="rgb(225,151,20)" fg:x="96261" fg:w="93"/><text x="88.6748%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (93 samples, 0.09%)</title><rect x="88.4248%" y="1029" width="0.0854%" height="15" fill="rgb(238,3,37)" fg:x="96261" fg:w="93"/><text x="88.6748%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (83 samples, 0.08%)</title><rect x="88.4340%" y="1013" width="0.0762%" height="15" fill="rgb(251,147,42)" fg:x="96271" fg:w="83"/><text x="88.6840%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (83 samples, 0.08%)</title><rect x="88.4340%" y="997" width="0.0762%" height="15" fill="rgb(208,173,10)" fg:x="96271" fg:w="83"/><text x="88.6840%" y="1007.50"></text></g><g><title>___pthread_mutex_lock (83 samples, 0.08%)</title><rect x="88.4340%" y="981" width="0.0762%" height="15" fill="rgb(246,225,4)" fg:x="96271" fg:w="83"/><text x="88.6840%" y="991.50"></text></g><g><title>__GI___lll_lock_wait (52 samples, 0.05%)</title><rect x="88.4625%" y="965" width="0.0478%" height="15" fill="rgb(248,102,6)" fg:x="96302" fg:w="52"/><text x="88.7125%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (10,751 samples, 9.88%)</title><rect x="78.8751%" y="1157" width="9.8758%" height="15" fill="rgb(232,6,21)" fg:x="85865" fg:w="10751"/><text x="79.1251%" y="1167.50">tremor_runtime..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,694 samples, 4.31%)</title><rect x="84.4390%" y="1141" width="4.3119%" height="15" fill="rgb(221,179,22)" fg:x="91922" fg:w="4694"/><text x="84.6890%" y="1151.50">&lt;core..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (4,694 samples, 4.31%)</title><rect x="84.4390%" y="1125" width="4.3119%" height="15" fill="rgb(252,50,20)" fg:x="91922" fg:w="4694"/><text x="84.6890%" y="1135.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,694 samples, 4.31%)</title><rect x="84.4390%" y="1109" width="4.3119%" height="15" fill="rgb(222,56,38)" fg:x="91922" fg:w="4694"/><text x="84.6890%" y="1119.50">&lt;core..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (4,694 samples, 4.31%)</title><rect x="84.4390%" y="1093" width="4.3119%" height="15" fill="rgb(206,193,29)" fg:x="91922" fg:w="4694"/><text x="84.6890%" y="1103.50">tremo..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (4,694 samples, 4.31%)</title><rect x="84.4390%" y="1077" width="4.3119%" height="15" fill="rgb(239,192,45)" fg:x="91922" fg:w="4694"/><text x="84.6890%" y="1087.50">&lt;asyn..</text></g><g><title>event_listener::Event::notify (450 samples, 0.41%)</title><rect x="88.3375%" y="1061" width="0.4134%" height="15" fill="rgb(254,18,36)" fg:x="96166" fg:w="450"/><text x="88.5875%" y="1071.50"></text></g><g><title>event_listener::full_fence (262 samples, 0.24%)</title><rect x="88.5102%" y="1045" width="0.2407%" height="15" fill="rgb(221,127,11)" fg:x="96354" fg:w="262"/><text x="88.7602%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (255 samples, 0.23%)</title><rect x="88.5167%" y="1029" width="0.2342%" height="15" fill="rgb(234,146,35)" fg:x="96361" fg:w="255"/><text x="88.7667%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (255 samples, 0.23%)</title><rect x="88.5167%" y="1013" width="0.2342%" height="15" fill="rgb(254,201,37)" fg:x="96361" fg:w="255"/><text x="88.7667%" y="1023.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (43 samples, 0.04%)</title><rect x="88.7509%" y="1157" width="0.0395%" height="15" fill="rgb(211,202,23)" fg:x="96616" fg:w="43"/><text x="89.0009%" y="1167.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (79 samples, 0.07%)</title><rect x="88.7904%" y="1157" width="0.0726%" height="15" fill="rgb(237,91,2)" fg:x="96659" fg:w="79"/><text x="89.0404%" y="1167.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (12 samples, 0.01%)</title><rect x="88.8648%" y="1157" width="0.0110%" height="15" fill="rgb(226,228,36)" fg:x="96740" fg:w="12"/><text x="89.1148%" y="1167.50"></text></g><g><title>[unknown] (90,041 samples, 82.71%)</title><rect x="6.1867%" y="1173" width="82.7111%" height="15" fill="rgb(213,63,50)" fg:x="6735" fg:w="90041"/><text x="6.4367%" y="1183.50">[unknown]</text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (24 samples, 0.02%)</title><rect x="88.8758%" y="1157" width="0.0220%" height="15" fill="rgb(235,194,19)" fg:x="96752" fg:w="24"/><text x="89.1258%" y="1167.50"></text></g><g><title>async_channel::bounded (24 samples, 0.02%)</title><rect x="88.9071%" y="933" width="0.0220%" height="15" fill="rgb(207,204,18)" fg:x="96786" fg:w="24"/><text x="89.1571%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (24 samples, 0.02%)</title><rect x="88.9071%" y="917" width="0.0220%" height="15" fill="rgb(248,8,7)" fg:x="96786" fg:w="24"/><text x="89.1571%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (24 samples, 0.02%)</title><rect x="88.9071%" y="901" width="0.0220%" height="15" fill="rgb(223,145,47)" fg:x="96786" fg:w="24"/><text x="89.1571%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.02%)</title><rect x="88.9071%" y="885" width="0.0220%" height="15" fill="rgb(228,84,11)" fg:x="96786" fg:w="24"/><text x="89.1571%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.02%)</title><rect x="88.9071%" y="869" width="0.0220%" height="15" fill="rgb(218,76,45)" fg:x="96786" fg:w="24"/><text x="89.1571%" y="879.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.02%)</title><rect x="88.9071%" y="853" width="0.0220%" height="15" fill="rgb(223,80,15)" fg:x="96786" fg:w="24"/><text x="89.1571%" y="863.50"></text></g><g><title>__rg_alloc (24 samples, 0.02%)</title><rect x="88.9071%" y="837" width="0.0220%" height="15" fill="rgb(219,218,33)" fg:x="96786" fg:w="24"/><text x="89.1571%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (24 samples, 0.02%)</title><rect x="88.9071%" y="821" width="0.0220%" height="15" fill="rgb(208,51,11)" fg:x="96786" fg:w="24"/><text x="89.1571%" y="831.50"></text></g><g><title>rust_alloc (24 samples, 0.02%)</title><rect x="88.9071%" y="805" width="0.0220%" height="15" fill="rgb(229,165,39)" fg:x="96786" fg:w="24"/><text x="89.1571%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="88.9071%" y="789" width="0.0220%" height="15" fill="rgb(241,100,24)" fg:x="96786" fg:w="24"/><text x="89.1571%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="88.9071%" y="773" width="0.0220%" height="15" fill="rgb(228,14,23)" fg:x="96786" fg:w="24"/><text x="89.1571%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="88.9071%" y="757" width="0.0220%" height="15" fill="rgb(247,116,52)" fg:x="96786" fg:w="24"/><text x="89.1571%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="88.9071%" y="741" width="0.0220%" height="15" fill="rgb(216,149,33)" fg:x="96786" fg:w="24"/><text x="89.1571%" y="751.50"></text></g><g><title>snmalloc::init_thread_allocator (24 samples, 0.02%)</title><rect x="88.9071%" y="725" width="0.0220%" height="15" fill="rgb(238,142,29)" fg:x="96786" fg:w="24"/><text x="89.1571%" y="735.50"></text></g><g><title>snmalloc::function_ref&lt;void* (void*)&gt;::operator (16 samples, 0.01%)</title><rect x="88.9144%" y="709" width="0.0147%" height="15" fill="rgb(224,83,40)" fg:x="96794" fg:w="16"/><text x="89.1644%" y="719.50"></text></g><g><title>snmalloc::function_ref&lt;void* (void*)&gt;::execute&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long, unsigned long)::{lambda(void*)#1}&gt; (16 samples, 0.01%)</title><rect x="88.9144%" y="693" width="0.0147%" height="15" fill="rgb(234,165,11)" fg:x="96794" fg:w="16"/><text x="89.1644%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="88.9144%" y="677" width="0.0147%" height="15" fill="rgb(215,96,23)" fg:x="96794" fg:w="16"/><text x="89.1644%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="88.9144%" y="661" width="0.0147%" height="15" fill="rgb(233,179,26)" fg:x="96794" fg:w="16"/><text x="89.1644%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="88.9144%" y="645" width="0.0147%" height="15" fill="rgb(225,129,33)" fg:x="96794" fg:w="16"/><text x="89.1644%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="88.9144%" y="629" width="0.0147%" height="15" fill="rgb(237,49,13)" fg:x="96794" fg:w="16"/><text x="89.1644%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="88.9144%" y="613" width="0.0147%" height="15" fill="rgb(211,3,31)" fg:x="96794" fg:w="16"/><text x="89.1644%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="88.9144%" y="597" width="0.0147%" height="15" fill="rgb(216,152,19)" fg:x="96794" fg:w="16"/><text x="89.1644%" y="607.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (16 samples, 0.01%)</title><rect x="88.9144%" y="581" width="0.0147%" height="15" fill="rgb(251,121,35)" fg:x="96794" fg:w="16"/><text x="89.1644%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (16 samples, 0.01%)</title><rect x="88.9144%" y="565" width="0.0147%" height="15" fill="rgb(210,217,47)" fg:x="96794" fg:w="16"/><text x="89.1644%" y="575.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="88.9144%" y="549" width="0.0147%" height="15" fill="rgb(244,116,22)" fg:x="96794" fg:w="16"/><text x="89.1644%" y="559.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="89.1266%" y="581" width="0.0138%" height="15" fill="rgb(228,17,21)" fg:x="97025" fg:w="15"/><text x="89.3766%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (19 samples, 0.02%)</title><rect x="89.2194%" y="565" width="0.0175%" height="15" fill="rgb(240,149,34)" fg:x="97126" fg:w="19"/><text x="89.4694%" y="575.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="89.3021%" y="485" width="0.0147%" height="15" fill="rgb(208,125,47)" fg:x="97216" fg:w="16"/><text x="89.5521%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (33 samples, 0.03%)</title><rect x="89.3250%" y="469" width="0.0303%" height="15" fill="rgb(249,186,39)" fg:x="97241" fg:w="33"/><text x="89.5750%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (26 samples, 0.02%)</title><rect x="89.3314%" y="453" width="0.0239%" height="15" fill="rgb(240,220,33)" fg:x="97248" fg:w="26"/><text x="89.5814%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14 samples, 0.01%)</title><rect x="89.3425%" y="437" width="0.0129%" height="15" fill="rgb(243,110,23)" fg:x="97260" fg:w="14"/><text x="89.5925%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.03%)</title><rect x="89.3553%" y="469" width="0.0349%" height="15" fill="rgb(219,163,46)" fg:x="97274" fg:w="38"/><text x="89.6053%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (14 samples, 0.01%)</title><rect x="89.3774%" y="453" width="0.0129%" height="15" fill="rgb(216,126,30)" fg:x="97298" fg:w="14"/><text x="89.6274%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (14 samples, 0.01%)</title><rect x="89.3774%" y="437" width="0.0129%" height="15" fill="rgb(208,139,11)" fg:x="97298" fg:w="14"/><text x="89.6274%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="89.3902%" y="469" width="0.0101%" height="15" fill="rgb(213,118,36)" fg:x="97312" fg:w="11"/><text x="89.6402%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (205 samples, 0.19%)</title><rect x="89.2368%" y="533" width="0.1883%" height="15" fill="rgb(226,43,17)" fg:x="97145" fg:w="205"/><text x="89.4868%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (178 samples, 0.16%)</title><rect x="89.2616%" y="517" width="0.1635%" height="15" fill="rgb(254,217,4)" fg:x="97172" fg:w="178"/><text x="89.5116%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (149 samples, 0.14%)</title><rect x="89.2883%" y="501" width="0.1369%" height="15" fill="rgb(210,134,47)" fg:x="97201" fg:w="149"/><text x="89.5383%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (118 samples, 0.11%)</title><rect x="89.3167%" y="485" width="0.1084%" height="15" fill="rgb(237,24,49)" fg:x="97232" fg:w="118"/><text x="89.5667%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (27 samples, 0.02%)</title><rect x="89.4003%" y="469" width="0.0248%" height="15" fill="rgb(251,39,46)" fg:x="97323" fg:w="27"/><text x="89.6503%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (27 samples, 0.02%)</title><rect x="89.4003%" y="453" width="0.0248%" height="15" fill="rgb(251,220,3)" fg:x="97323" fg:w="27"/><text x="89.6503%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (24 samples, 0.02%)</title><rect x="89.4031%" y="437" width="0.0220%" height="15" fill="rgb(228,105,12)" fg:x="97326" fg:w="24"/><text x="89.6531%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (24 samples, 0.02%)</title><rect x="89.4031%" y="421" width="0.0220%" height="15" fill="rgb(215,196,1)" fg:x="97326" fg:w="24"/><text x="89.6531%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (224 samples, 0.21%)</title><rect x="89.2368%" y="565" width="0.2058%" height="15" fill="rgb(214,33,39)" fg:x="97145" fg:w="224"/><text x="89.4868%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (224 samples, 0.21%)</title><rect x="89.2368%" y="549" width="0.2058%" height="15" fill="rgb(220,19,52)" fg:x="97145" fg:w="224"/><text x="89.4868%" y="559.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="89.4251%" y="533" width="0.0175%" height="15" fill="rgb(221,78,38)" fg:x="97350" fg:w="19"/><text x="89.6751%" y="543.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (549 samples, 0.50%)</title><rect x="89.6291%" y="533" width="0.5043%" height="15" fill="rgb(253,30,16)" fg:x="97572" fg:w="549"/><text x="89.8791%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (379 samples, 0.35%)</title><rect x="89.7852%" y="517" width="0.3481%" height="15" fill="rgb(242,65,0)" fg:x="97742" fg:w="379"/><text x="90.0352%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (379 samples, 0.35%)</title><rect x="89.7852%" y="501" width="0.3481%" height="15" fill="rgb(235,201,12)" fg:x="97742" fg:w="379"/><text x="90.0352%" y="511.50"></text></g><g><title>async_executor::steal (765 samples, 0.70%)</title><rect x="89.4426%" y="565" width="0.7027%" height="15" fill="rgb(233,161,9)" fg:x="97369" fg:w="765"/><text x="89.6926%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (742 samples, 0.68%)</title><rect x="89.4637%" y="549" width="0.6816%" height="15" fill="rgb(241,207,41)" fg:x="97392" fg:w="742"/><text x="89.7137%" y="559.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (13 samples, 0.01%)</title><rect x="90.1334%" y="533" width="0.0119%" height="15" fill="rgb(212,69,46)" fg:x="98121" fg:w="13"/><text x="90.3834%" y="543.50"></text></g><g><title>concurrent_queue::full_fence (860 samples, 0.79%)</title><rect x="90.6257%" y="533" width="0.7900%" height="15" fill="rgb(239,69,45)" fg:x="98657" fg:w="860"/><text x="90.8757%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (855 samples, 0.79%)</title><rect x="90.6303%" y="517" width="0.7854%" height="15" fill="rgb(242,117,48)" fg:x="98662" fg:w="855"/><text x="90.8803%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (855 samples, 0.79%)</title><rect x="90.6303%" y="501" width="0.7854%" height="15" fill="rgb(228,41,36)" fg:x="98662" fg:w="855"/><text x="90.8803%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (855 samples, 0.79%)</title><rect x="90.6303%" y="485" width="0.7854%" height="15" fill="rgb(212,3,32)" fg:x="98662" fg:w="855"/><text x="90.8803%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,279 samples, 1.17%)</title><rect x="90.3254%" y="549" width="1.1749%" height="15" fill="rgb(233,41,49)" fg:x="98330" fg:w="1279"/><text x="90.5754%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (92 samples, 0.08%)</title><rect x="91.4157%" y="533" width="0.0845%" height="15" fill="rgb(252,170,49)" fg:x="99517" fg:w="92"/><text x="91.6657%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (89 samples, 0.08%)</title><rect x="91.4185%" y="517" width="0.0818%" height="15" fill="rgb(229,53,26)" fg:x="99520" fg:w="89"/><text x="91.6685%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (344 samples, 0.32%)</title><rect x="91.5572%" y="533" width="0.3160%" height="15" fill="rgb(217,157,12)" fg:x="99671" fg:w="344"/><text x="91.8072%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (342 samples, 0.31%)</title><rect x="91.5590%" y="517" width="0.3142%" height="15" fill="rgb(227,17,9)" fg:x="99673" fg:w="342"/><text x="91.8090%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (342 samples, 0.31%)</title><rect x="91.5590%" y="501" width="0.3142%" height="15" fill="rgb(218,84,12)" fg:x="99673" fg:w="342"/><text x="91.8090%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (342 samples, 0.31%)</title><rect x="91.5590%" y="485" width="0.3142%" height="15" fill="rgb(212,79,24)" fg:x="99673" fg:w="342"/><text x="91.8090%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (29 samples, 0.03%)</title><rect x="91.8815%" y="517" width="0.0266%" height="15" fill="rgb(217,222,37)" fg:x="100024" fg:w="29"/><text x="92.1315%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (29 samples, 0.03%)</title><rect x="91.8815%" y="501" width="0.0266%" height="15" fill="rgb(246,208,8)" fg:x="100024" fg:w="29"/><text x="92.1315%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (31 samples, 0.03%)</title><rect x="91.8805%" y="533" width="0.0285%" height="15" fill="rgb(244,133,10)" fg:x="100023" fg:w="31"/><text x="92.1305%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (26 samples, 0.02%)</title><rect x="91.9136%" y="533" width="0.0239%" height="15" fill="rgb(209,219,41)" fg:x="100059" fg:w="26"/><text x="92.1636%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (26 samples, 0.02%)</title><rect x="91.9136%" y="517" width="0.0239%" height="15" fill="rgb(253,175,45)" fg:x="100059" fg:w="26"/><text x="92.1636%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (95 samples, 0.09%)</title><rect x="91.9375%" y="533" width="0.0873%" height="15" fill="rgb(235,100,37)" fg:x="100085" fg:w="95"/><text x="92.1875%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (95 samples, 0.09%)</title><rect x="91.9375%" y="517" width="0.0873%" height="15" fill="rgb(225,87,19)" fg:x="100085" fg:w="95"/><text x="92.1875%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (112 samples, 0.10%)</title><rect x="92.0248%" y="533" width="0.1029%" height="15" fill="rgb(217,152,17)" fg:x="100180" fg:w="112"/><text x="92.2748%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_or (112 samples, 0.10%)</title><rect x="92.0248%" y="517" width="0.1029%" height="15" fill="rgb(235,72,13)" fg:x="100180" fg:w="112"/><text x="92.2748%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,376 samples, 2.18%)</title><rect x="90.1453%" y="565" width="2.1826%" height="15" fill="rgb(233,140,18)" fg:x="98134" fg:w="2376"/><text x="90.3953%" y="575.50">c..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (901 samples, 0.83%)</title><rect x="91.5002%" y="549" width="0.8277%" height="15" fill="rgb(207,212,28)" fg:x="99609" fg:w="901"/><text x="91.7502%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (218 samples, 0.20%)</title><rect x="92.1276%" y="533" width="0.2003%" height="15" fill="rgb(220,130,25)" fg:x="100292" fg:w="218"/><text x="92.3776%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (218 samples, 0.20%)</title><rect x="92.1276%" y="517" width="0.2003%" height="15" fill="rgb(205,55,34)" fg:x="100292" fg:w="218"/><text x="92.3776%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (147 samples, 0.14%)</title><rect x="92.3555%" y="501" width="0.1350%" height="15" fill="rgb(237,54,35)" fg:x="100540" fg:w="147"/><text x="92.6055%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (147 samples, 0.14%)</title><rect x="92.3555%" y="485" width="0.1350%" height="15" fill="rgb(208,67,23)" fg:x="100540" fg:w="147"/><text x="92.6055%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (327 samples, 0.30%)</title><rect x="92.3279%" y="565" width="0.3004%" height="15" fill="rgb(206,207,50)" fg:x="100510" fg:w="327"/><text x="92.5779%" y="575.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (327 samples, 0.30%)</title><rect x="92.3279%" y="549" width="0.3004%" height="15" fill="rgb(213,211,42)" fg:x="100510" fg:w="327"/><text x="92.5779%" y="559.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (321 samples, 0.29%)</title><rect x="92.3334%" y="533" width="0.2949%" height="15" fill="rgb(252,197,50)" fg:x="100516" fg:w="321"/><text x="92.5834%" y="543.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (301 samples, 0.28%)</title><rect x="92.3518%" y="517" width="0.2765%" height="15" fill="rgb(251,211,41)" fg:x="100536" fg:w="301"/><text x="92.6018%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (150 samples, 0.14%)</title><rect x="92.4905%" y="501" width="0.1378%" height="15" fill="rgb(229,211,5)" fg:x="100687" fg:w="150"/><text x="92.7405%" y="511.50"></text></g><g><title>___pthread_rwlock_unlock (150 samples, 0.14%)</title><rect x="92.4905%" y="485" width="0.1378%" height="15" fill="rgb(239,36,31)" fg:x="100687" fg:w="150"/><text x="92.7405%" y="495.50"></text></g><g><title>fastrand::Rng::usize (19 samples, 0.02%)</title><rect x="92.6494%" y="501" width="0.0175%" height="15" fill="rgb(248,67,31)" fg:x="100860" fg:w="19"/><text x="92.8994%" y="511.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (14 samples, 0.01%)</title><rect x="92.6540%" y="485" width="0.0129%" height="15" fill="rgb(249,55,44)" fg:x="100865" fg:w="14"/><text x="92.9040%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.02%)</title><rect x="92.6430%" y="533" width="0.0248%" height="15" fill="rgb(216,82,12)" fg:x="100853" fg:w="27"/><text x="92.8930%" y="543.50"></text></g><g><title>fastrand::usize::{{closure}} (20 samples, 0.02%)</title><rect x="92.6494%" y="517" width="0.0184%" height="15" fill="rgb(242,174,1)" fg:x="100860" fg:w="20"/><text x="92.8994%" y="527.50"></text></g><g><title>fastrand::usize (38 samples, 0.03%)</title><rect x="92.6356%" y="565" width="0.0349%" height="15" fill="rgb(208,120,29)" fg:x="100845" fg:w="38"/><text x="92.8856%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32 samples, 0.03%)</title><rect x="92.6411%" y="549" width="0.0294%" height="15" fill="rgb(221,105,43)" fg:x="100851" fg:w="32"/><text x="92.8911%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="92.6705%" y="549" width="0.0119%" height="15" fill="rgb(234,124,22)" fg:x="100883" fg:w="13"/><text x="92.9205%" y="559.50"></text></g><g><title>std::sync::poison::Flag::borrow (13 samples, 0.01%)</title><rect x="92.6705%" y="533" width="0.0119%" height="15" fill="rgb(212,23,30)" fg:x="100883" fg:w="13"/><text x="92.9205%" y="543.50"></text></g><g><title>___pthread_rwlock_rdlock (223 samples, 0.20%)</title><rect x="92.6972%" y="517" width="0.2048%" height="15" fill="rgb(219,122,53)" fg:x="100912" fg:w="223"/><text x="92.9472%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (4,176 samples, 3.84%)</title><rect x="89.1404%" y="581" width="3.8360%" height="15" fill="rgb(248,84,24)" fg:x="97040" fg:w="4176"/><text x="89.3904%" y="591.50">asyn..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (333 samples, 0.31%)</title><rect x="92.6705%" y="565" width="0.3059%" height="15" fill="rgb(245,115,18)" fg:x="100883" fg:w="333"/><text x="92.9205%" y="575.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (320 samples, 0.29%)</title><rect x="92.6825%" y="549" width="0.2940%" height="15" fill="rgb(227,176,51)" fg:x="100896" fg:w="320"/><text x="92.9325%" y="559.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (320 samples, 0.29%)</title><rect x="92.6825%" y="533" width="0.2940%" height="15" fill="rgb(229,63,42)" fg:x="100896" fg:w="320"/><text x="92.9325%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (81 samples, 0.07%)</title><rect x="92.9020%" y="517" width="0.0744%" height="15" fill="rgb(247,202,24)" fg:x="101135" fg:w="81"/><text x="93.1520%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (81 samples, 0.07%)</title><rect x="92.9020%" y="501" width="0.0744%" height="15" fill="rgb(244,173,20)" fg:x="101135" fg:w="81"/><text x="93.1520%" y="511.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (40 samples, 0.04%)</title><rect x="92.9819%" y="501" width="0.0367%" height="15" fill="rgb(242,81,47)" fg:x="101222" fg:w="40"/><text x="93.2319%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (43 samples, 0.04%)</title><rect x="92.9810%" y="565" width="0.0395%" height="15" fill="rgb(231,185,54)" fg:x="101221" fg:w="43"/><text x="93.2310%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="92.9810%" y="549" width="0.0395%" height="15" fill="rgb(243,55,32)" fg:x="101221" fg:w="43"/><text x="93.2310%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (42 samples, 0.04%)</title><rect x="92.9819%" y="533" width="0.0386%" height="15" fill="rgb(208,167,19)" fg:x="101222" fg:w="42"/><text x="93.2319%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (42 samples, 0.04%)</title><rect x="92.9819%" y="517" width="0.0386%" height="15" fill="rgb(231,72,35)" fg:x="101222" fg:w="42"/><text x="93.2319%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (61 samples, 0.06%)</title><rect x="93.0205%" y="565" width="0.0560%" height="15" fill="rgb(250,173,51)" fg:x="101264" fg:w="61"/><text x="93.2705%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (61 samples, 0.06%)</title><rect x="93.0205%" y="549" width="0.0560%" height="15" fill="rgb(209,5,22)" fg:x="101264" fg:w="61"/><text x="93.2705%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::notify (24 samples, 0.02%)</title><rect x="93.0922%" y="517" width="0.0220%" height="15" fill="rgb(250,174,19)" fg:x="101342" fg:w="24"/><text x="93.3422%" y="527.50"></text></g><g><title>polling::Poller::notify (23 samples, 0.02%)</title><rect x="93.0931%" y="501" width="0.0211%" height="15" fill="rgb(217,3,49)" fg:x="101343" fg:w="23"/><text x="93.3431%" y="511.50"></text></g><g><title>polling::epoll::Poller::notify (11 samples, 0.01%)</title><rect x="93.1041%" y="485" width="0.0101%" height="15" fill="rgb(218,225,5)" fg:x="101355" fg:w="11"/><text x="93.3541%" y="495.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (16 samples, 0.01%)</title><rect x="93.1703%" y="405" width="0.0147%" height="15" fill="rgb(236,89,11)" fg:x="101427" fg:w="16"/><text x="93.4203%" y="415.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="93.1703%" y="485" width="0.0156%" height="15" fill="rgb(206,33,28)" fg:x="101427" fg:w="17"/><text x="93.4203%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (17 samples, 0.02%)</title><rect x="93.1703%" y="469" width="0.0156%" height="15" fill="rgb(241,56,42)" fg:x="101427" fg:w="17"/><text x="93.4203%" y="479.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="93.1703%" y="453" width="0.0156%" height="15" fill="rgb(222,44,11)" fg:x="101427" fg:w="17"/><text x="93.4203%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (17 samples, 0.02%)</title><rect x="93.1703%" y="437" width="0.0156%" height="15" fill="rgb(234,111,20)" fg:x="101427" fg:w="17"/><text x="93.4203%" y="447.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (17 samples, 0.02%)</title><rect x="93.1703%" y="421" width="0.0156%" height="15" fill="rgb(237,77,6)" fg:x="101427" fg:w="17"/><text x="93.4203%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (116 samples, 0.11%)</title><rect x="93.1859%" y="485" width="0.1066%" height="15" fill="rgb(235,111,23)" fg:x="101444" fg:w="116"/><text x="93.4359%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (116 samples, 0.11%)</title><rect x="93.1859%" y="469" width="0.1066%" height="15" fill="rgb(251,135,29)" fg:x="101444" fg:w="116"/><text x="93.4359%" y="479.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (105 samples, 0.10%)</title><rect x="93.2924%" y="485" width="0.0965%" height="15" fill="rgb(217,57,1)" fg:x="101560" fg:w="105"/><text x="93.5424%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (105 samples, 0.10%)</title><rect x="93.2924%" y="469" width="0.0965%" height="15" fill="rgb(249,119,31)" fg:x="101560" fg:w="105"/><text x="93.5424%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (105 samples, 0.10%)</title><rect x="93.2924%" y="453" width="0.0965%" height="15" fill="rgb(233,164,33)" fg:x="101560" fg:w="105"/><text x="93.5424%" y="463.50"></text></g><g><title>__GI___pthread_cond_signal (105 samples, 0.10%)</title><rect x="93.2924%" y="437" width="0.0965%" height="15" fill="rgb(250,217,43)" fg:x="101560" fg:w="105"/><text x="93.5424%" y="447.50"></text></g><g><title>parking::Unparker::unpark (394 samples, 0.36%)</title><rect x="93.1225%" y="517" width="0.3619%" height="15" fill="rgb(232,154,50)" fg:x="101375" fg:w="394"/><text x="93.3725%" y="527.50"></text></g><g><title>parking::Inner::unpark (347 samples, 0.32%)</title><rect x="93.1657%" y="501" width="0.3188%" height="15" fill="rgb(227,190,8)" fg:x="101422" fg:w="347"/><text x="93.4157%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (104 samples, 0.10%)</title><rect x="93.3889%" y="485" width="0.0955%" height="15" fill="rgb(209,217,32)" fg:x="101665" fg:w="104"/><text x="93.6389%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (104 samples, 0.10%)</title><rect x="93.3889%" y="469" width="0.0955%" height="15" fill="rgb(243,203,50)" fg:x="101665" fg:w="104"/><text x="93.6389%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (103 samples, 0.09%)</title><rect x="93.3898%" y="453" width="0.0946%" height="15" fill="rgb(232,152,27)" fg:x="101666" fg:w="103"/><text x="93.6398%" y="463.50"></text></g><g><title>___pthread_mutex_lock (103 samples, 0.09%)</title><rect x="93.3898%" y="437" width="0.0946%" height="15" fill="rgb(240,34,29)" fg:x="101666" fg:w="103"/><text x="93.6398%" y="447.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (20 samples, 0.02%)</title><rect x="93.4844%" y="485" width="0.0184%" height="15" fill="rgb(215,185,52)" fg:x="101769" fg:w="20"/><text x="93.7344%" y="495.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (20 samples, 0.02%)</title><rect x="93.4844%" y="469" width="0.0184%" height="15" fill="rgb(240,89,49)" fg:x="101769" fg:w="20"/><text x="93.7344%" y="479.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (17 samples, 0.02%)</title><rect x="93.4872%" y="453" width="0.0156%" height="15" fill="rgb(225,12,52)" fg:x="101772" fg:w="17"/><text x="93.7372%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (17 samples, 0.02%)</title><rect x="93.4872%" y="437" width="0.0156%" height="15" fill="rgb(239,128,45)" fg:x="101772" fg:w="17"/><text x="93.7372%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (461 samples, 0.42%)</title><rect x="93.0811%" y="533" width="0.4235%" height="15" fill="rgb(211,78,47)" fg:x="101330" fg:w="461"/><text x="93.3311%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.02%)</title><rect x="93.4844%" y="517" width="0.0202%" height="15" fill="rgb(232,31,21)" fg:x="101769" fg:w="22"/><text x="93.7344%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.02%)</title><rect x="93.4844%" y="501" width="0.0202%" height="15" fill="rgb(222,168,14)" fg:x="101769" fg:w="22"/><text x="93.7344%" y="511.50"></text></g><g><title>core::task::wake::Waker::wake (546 samples, 0.50%)</title><rect x="93.0766%" y="565" width="0.5016%" height="15" fill="rgb(209,128,24)" fg:x="101325" fg:w="546"/><text x="93.3266%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (545 samples, 0.50%)</title><rect x="93.0775%" y="549" width="0.5006%" height="15" fill="rgb(249,35,13)" fg:x="101326" fg:w="545"/><text x="93.3275%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (80 samples, 0.07%)</title><rect x="93.5046%" y="533" width="0.0735%" height="15" fill="rgb(218,7,2)" fg:x="101791" fg:w="80"/><text x="93.7546%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.07%)</title><rect x="93.5046%" y="517" width="0.0735%" height="15" fill="rgb(238,107,27)" fg:x="101791" fg:w="80"/><text x="93.7546%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (80 samples, 0.07%)</title><rect x="93.5046%" y="501" width="0.0735%" height="15" fill="rgb(217,88,38)" fg:x="101791" fg:w="80"/><text x="93.7546%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (80 samples, 0.07%)</title><rect x="93.5046%" y="485" width="0.0735%" height="15" fill="rgb(230,207,0)" fg:x="101791" fg:w="80"/><text x="93.7546%" y="495.50"></text></g><g><title>async_executor::State::notify (690 samples, 0.63%)</title><rect x="92.9764%" y="581" width="0.6338%" height="15" fill="rgb(249,64,54)" fg:x="101216" fg:w="690"/><text x="93.2264%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (35 samples, 0.03%)</title><rect x="93.5781%" y="565" width="0.0322%" height="15" fill="rgb(231,7,11)" fg:x="101871" fg:w="35"/><text x="93.8281%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (32 samples, 0.03%)</title><rect x="93.5809%" y="549" width="0.0294%" height="15" fill="rgb(205,149,21)" fg:x="101874" fg:w="32"/><text x="93.8309%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (31 samples, 0.03%)</title><rect x="93.5818%" y="533" width="0.0285%" height="15" fill="rgb(215,126,34)" fg:x="101875" fg:w="31"/><text x="93.8318%" y="543.50"></text></g><g><title>___pthread_mutex_lock (31 samples, 0.03%)</title><rect x="93.5818%" y="517" width="0.0285%" height="15" fill="rgb(241,132,45)" fg:x="101875" fg:w="31"/><text x="93.8318%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (101 samples, 0.09%)</title><rect x="93.6240%" y="549" width="0.0928%" height="15" fill="rgb(252,69,32)" fg:x="101921" fg:w="101"/><text x="93.8740%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (100 samples, 0.09%)</title><rect x="93.6250%" y="533" width="0.0919%" height="15" fill="rgb(232,204,19)" fg:x="101922" fg:w="100"/><text x="93.8750%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (100 samples, 0.09%)</title><rect x="93.6250%" y="517" width="0.0919%" height="15" fill="rgb(249,15,47)" fg:x="101922" fg:w="100"/><text x="93.8750%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (100 samples, 0.09%)</title><rect x="93.6250%" y="501" width="0.0919%" height="15" fill="rgb(209,227,23)" fg:x="101922" fg:w="100"/><text x="93.8750%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (100 samples, 0.09%)</title><rect x="93.6250%" y="485" width="0.0919%" height="15" fill="rgb(248,92,24)" fg:x="101922" fg:w="100"/><text x="93.8750%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (100 samples, 0.09%)</title><rect x="93.6250%" y="469" width="0.0919%" height="15" fill="rgb(247,59,2)" fg:x="101922" fg:w="100"/><text x="93.8750%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (44 samples, 0.04%)</title><rect x="93.7168%" y="549" width="0.0404%" height="15" fill="rgb(221,30,5)" fg:x="102022" fg:w="44"/><text x="93.9668%" y="559.50"></text></g><g><title>async_executor::Sleepers::insert (184 samples, 0.17%)</title><rect x="93.6213%" y="565" width="0.1690%" height="15" fill="rgb(208,108,53)" fg:x="101918" fg:w="184"/><text x="93.8713%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (36 samples, 0.03%)</title><rect x="93.7572%" y="549" width="0.0331%" height="15" fill="rgb(211,183,26)" fg:x="102066" fg:w="36"/><text x="94.0072%" y="559.50"></text></g><g><title>core::ptr::write (32 samples, 0.03%)</title><rect x="93.7609%" y="533" width="0.0294%" height="15" fill="rgb(232,132,4)" fg:x="102070" fg:w="32"/><text x="94.0109%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (59 samples, 0.05%)</title><rect x="93.8372%" y="549" width="0.0542%" height="15" fill="rgb(253,128,37)" fg:x="102153" fg:w="59"/><text x="94.0872%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (57 samples, 0.05%)</title><rect x="93.8390%" y="533" width="0.0524%" height="15" fill="rgb(221,58,24)" fg:x="102155" fg:w="57"/><text x="94.0890%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (57 samples, 0.05%)</title><rect x="93.8390%" y="517" width="0.0524%" height="15" fill="rgb(230,54,45)" fg:x="102155" fg:w="57"/><text x="94.0890%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (57 samples, 0.05%)</title><rect x="93.8390%" y="501" width="0.0524%" height="15" fill="rgb(254,21,18)" fg:x="102155" fg:w="57"/><text x="94.0890%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (57 samples, 0.05%)</title><rect x="93.8390%" y="485" width="0.0524%" height="15" fill="rgb(221,108,0)" fg:x="102155" fg:w="57"/><text x="94.0890%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (57 samples, 0.05%)</title><rect x="93.8390%" y="469" width="0.0524%" height="15" fill="rgb(206,95,1)" fg:x="102155" fg:w="57"/><text x="94.0890%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.02%)</title><rect x="93.8913%" y="549" width="0.0156%" height="15" fill="rgb(237,52,5)" fg:x="102212" fg:w="17"/><text x="94.1413%" y="559.50"></text></g><g><title>core::ptr::write (14 samples, 0.01%)</title><rect x="93.8941%" y="533" width="0.0129%" height="15" fill="rgb(218,150,34)" fg:x="102215" fg:w="14"/><text x="94.1441%" y="543.50"></text></g><g><title>async_executor::Sleepers::update (124 samples, 0.11%)</title><rect x="93.7977%" y="565" width="0.1139%" height="15" fill="rgb(235,194,28)" fg:x="102110" fg:w="124"/><text x="94.0477%" y="575.50"></text></g><g><title>std::sync::poison::Flag::done (11 samples, 0.01%)</title><rect x="93.9125%" y="533" width="0.0101%" height="15" fill="rgb(245,92,18)" fg:x="102235" fg:w="11"/><text x="94.1625%" y="543.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (195 samples, 0.18%)</title><rect x="93.9263%" y="501" width="0.1791%" height="15" fill="rgb(253,203,53)" fg:x="102250" fg:w="195"/><text x="94.1763%" y="511.50"></text></g><g><title>__GI___lll_lock_wake (14 samples, 0.01%)</title><rect x="94.0925%" y="485" width="0.0129%" height="15" fill="rgb(249,185,47)" fg:x="102431" fg:w="14"/><text x="94.3425%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (216 samples, 0.20%)</title><rect x="93.9116%" y="565" width="0.1984%" height="15" fill="rgb(252,194,52)" fg:x="102234" fg:w="216"/><text x="94.1616%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (216 samples, 0.20%)</title><rect x="93.9116%" y="549" width="0.1984%" height="15" fill="rgb(210,53,36)" fg:x="102234" fg:w="216"/><text x="94.1616%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (204 samples, 0.19%)</title><rect x="93.9226%" y="533" width="0.1874%" height="15" fill="rgb(237,37,25)" fg:x="102246" fg:w="204"/><text x="94.1726%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (200 samples, 0.18%)</title><rect x="93.9263%" y="517" width="0.1837%" height="15" fill="rgb(242,116,27)" fg:x="102250" fg:w="200"/><text x="94.1763%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (156 samples, 0.14%)</title><rect x="94.1100%" y="565" width="0.1433%" height="15" fill="rgb(213,185,26)" fg:x="102450" fg:w="156"/><text x="94.3600%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (156 samples, 0.14%)</title><rect x="94.1100%" y="549" width="0.1433%" height="15" fill="rgb(225,204,8)" fg:x="102450" fg:w="156"/><text x="94.3600%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (95 samples, 0.09%)</title><rect x="94.2533%" y="565" width="0.0873%" height="15" fill="rgb(254,111,37)" fg:x="102606" fg:w="95"/><text x="94.5033%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_store (95 samples, 0.09%)</title><rect x="94.2533%" y="549" width="0.0873%" height="15" fill="rgb(242,35,9)" fg:x="102606" fg:w="95"/><text x="94.5033%" y="559.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="94.3405%" y="549" width="0.0138%" height="15" fill="rgb(232,138,49)" fg:x="102701" fg:w="15"/><text x="94.5905%" y="559.50"></text></g><g><title>std::sync::poison::Flag::borrow (14 samples, 0.01%)</title><rect x="94.3415%" y="533" width="0.0129%" height="15" fill="rgb(247,56,4)" fg:x="102702" fg:w="14"/><text x="94.5915%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (1,475 samples, 1.35%)</title><rect x="93.6103%" y="581" width="1.3549%" height="15" fill="rgb(226,179,17)" fg:x="101906" fg:w="1475"/><text x="93.8603%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (680 samples, 0.62%)</title><rect x="94.3405%" y="565" width="0.6246%" height="15" fill="rgb(216,163,45)" fg:x="102701" fg:w="680"/><text x="94.5905%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (665 samples, 0.61%)</title><rect x="94.3543%" y="549" width="0.6109%" height="15" fill="rgb(211,157,3)" fg:x="102716" fg:w="665"/><text x="94.6043%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (609 samples, 0.56%)</title><rect x="94.4058%" y="533" width="0.5594%" height="15" fill="rgb(234,44,20)" fg:x="102772" fg:w="609"/><text x="94.6558%" y="543.50"></text></g><g><title>___pthread_mutex_lock (609 samples, 0.56%)</title><rect x="94.4058%" y="517" width="0.5594%" height="15" fill="rgb(254,138,23)" fg:x="102772" fg:w="609"/><text x="94.6558%" y="527.50"></text></g><g><title>__GI___lll_lock_wait (43 samples, 0.04%)</title><rect x="94.9257%" y="501" width="0.0395%" height="15" fill="rgb(206,119,39)" fg:x="103338" fg:w="43"/><text x="95.1757%" y="511.50"></text></g><g><title>async_executor::Sleepers::remove (80 samples, 0.07%)</title><rect x="94.9744%" y="565" width="0.0735%" height="15" fill="rgb(231,105,52)" fg:x="103391" fg:w="80"/><text x="95.2244%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (44 samples, 0.04%)</title><rect x="95.0074%" y="549" width="0.0404%" height="15" fill="rgb(250,20,5)" fg:x="103427" fg:w="44"/><text x="95.2574%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (44 samples, 0.04%)</title><rect x="95.0074%" y="533" width="0.0404%" height="15" fill="rgb(215,198,30)" fg:x="103427" fg:w="44"/><text x="95.2574%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="95.0074%" y="517" width="0.0404%" height="15" fill="rgb(246,142,8)" fg:x="103427" fg:w="44"/><text x="95.2574%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (44 samples, 0.04%)</title><rect x="95.0074%" y="501" width="0.0404%" height="15" fill="rgb(243,26,38)" fg:x="103427" fg:w="44"/><text x="95.2574%" y="511.50"></text></g><g><title>core::mem::drop (44 samples, 0.04%)</title><rect x="95.0074%" y="485" width="0.0404%" height="15" fill="rgb(205,133,28)" fg:x="103427" fg:w="44"/><text x="95.2574%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (44 samples, 0.04%)</title><rect x="95.0074%" y="469" width="0.0404%" height="15" fill="rgb(212,34,0)" fg:x="103427" fg:w="44"/><text x="95.2574%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="95.0074%" y="453" width="0.0404%" height="15" fill="rgb(251,226,22)" fg:x="103427" fg:w="44"/><text x="95.2574%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (44 samples, 0.04%)</title><rect x="95.0074%" y="437" width="0.0404%" height="15" fill="rgb(252,119,9)" fg:x="103427" fg:w="44"/><text x="95.2574%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (44 samples, 0.04%)</title><rect x="95.0074%" y="421" width="0.0404%" height="15" fill="rgb(213,150,50)" fg:x="103427" fg:w="44"/><text x="95.2574%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (54 samples, 0.05%)</title><rect x="95.0479%" y="565" width="0.0496%" height="15" fill="rgb(212,24,39)" fg:x="103471" fg:w="54"/><text x="95.2979%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="95.0479%" y="549" width="0.0496%" height="15" fill="rgb(213,46,39)" fg:x="103471" fg:w="54"/><text x="95.2979%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (53 samples, 0.05%)</title><rect x="95.0488%" y="533" width="0.0487%" height="15" fill="rgb(239,106,12)" fg:x="103472" fg:w="53"/><text x="95.2988%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (53 samples, 0.05%)</title><rect x="95.0488%" y="517" width="0.0487%" height="15" fill="rgb(249,229,21)" fg:x="103472" fg:w="53"/><text x="95.2988%" y="527.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (53 samples, 0.05%)</title><rect x="95.0488%" y="501" width="0.0487%" height="15" fill="rgb(212,158,3)" fg:x="103472" fg:w="53"/><text x="95.2988%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (58 samples, 0.05%)</title><rect x="95.0975%" y="565" width="0.0533%" height="15" fill="rgb(253,26,48)" fg:x="103525" fg:w="58"/><text x="95.3475%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (58 samples, 0.05%)</title><rect x="95.0975%" y="549" width="0.0533%" height="15" fill="rgb(238,178,20)" fg:x="103525" fg:w="58"/><text x="95.3475%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (56 samples, 0.05%)</title><rect x="95.1507%" y="565" width="0.0514%" height="15" fill="rgb(208,86,15)" fg:x="103583" fg:w="56"/><text x="95.4007%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (56 samples, 0.05%)</title><rect x="95.1507%" y="549" width="0.0514%" height="15" fill="rgb(239,42,53)" fg:x="103583" fg:w="56"/><text x="95.4007%" y="559.50"></text></g><g><title>async_executor::Ticker::wake (357 samples, 0.33%)</title><rect x="94.9652%" y="581" width="0.3279%" height="15" fill="rgb(245,226,8)" fg:x="103381" fg:w="357"/><text x="95.2152%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (99 samples, 0.09%)</title><rect x="95.2022%" y="565" width="0.0909%" height="15" fill="rgb(216,176,32)" fg:x="103639" fg:w="99"/><text x="95.4522%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (96 samples, 0.09%)</title><rect x="95.2049%" y="549" width="0.0882%" height="15" fill="rgb(231,186,21)" fg:x="103642" fg:w="96"/><text x="95.4549%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (89 samples, 0.08%)</title><rect x="95.2114%" y="533" width="0.0818%" height="15" fill="rgb(205,95,49)" fg:x="103649" fg:w="89"/><text x="95.4614%" y="543.50"></text></g><g><title>___pthread_mutex_lock (89 samples, 0.08%)</title><rect x="95.2114%" y="517" width="0.0818%" height="15" fill="rgb(217,145,8)" fg:x="103649" fg:w="89"/><text x="95.4614%" y="527.50"></text></g><g><title>__GI___lll_lock_wait (19 samples, 0.02%)</title><rect x="95.2757%" y="501" width="0.0175%" height="15" fill="rgb(239,144,48)" fg:x="103719" fg:w="19"/><text x="95.5257%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,839 samples, 6.28%)</title><rect x="89.0118%" y="645" width="6.2823%" height="15" fill="rgb(214,189,23)" fg:x="96900" fg:w="6839"/><text x="89.2618%" y="655.50">&lt;core::f..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (6,837 samples, 6.28%)</title><rect x="89.0136%" y="629" width="6.2804%" height="15" fill="rgb(229,157,17)" fg:x="96902" fg:w="6837"/><text x="89.2636%" y="639.50">async_ex..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (6,826 samples, 6.27%)</title><rect x="89.0237%" y="613" width="6.2703%" height="15" fill="rgb(230,5,48)" fg:x="96913" fg:w="6826"/><text x="89.2737%" y="623.50">&lt;futures..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (6,808 samples, 6.25%)</title><rect x="89.0403%" y="597" width="6.2538%" height="15" fill="rgb(224,156,48)" fg:x="96931" fg:w="6808"/><text x="89.2903%" y="607.50">async_ex..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,918 samples, 6.35%)</title><rect x="88.9870%" y="677" width="6.3548%" height="15" fill="rgb(223,14,29)" fg:x="96873" fg:w="6918"/><text x="89.2370%" y="687.50">&lt;core::f..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (6,915 samples, 6.35%)</title><rect x="88.9897%" y="661" width="6.3521%" height="15" fill="rgb(229,96,36)" fg:x="96876" fg:w="6915"/><text x="89.2397%" y="671.50">async_ex..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (51 samples, 0.05%)</title><rect x="95.2950%" y="645" width="0.0468%" height="15" fill="rgb(231,102,53)" fg:x="103740" fg:w="51"/><text x="95.5450%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (51 samples, 0.05%)</title><rect x="95.2950%" y="629" width="0.0468%" height="15" fill="rgb(210,77,38)" fg:x="103740" fg:w="51"/><text x="95.5450%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (55 samples, 0.05%)</title><rect x="95.4576%" y="549" width="0.0505%" height="15" fill="rgb(235,131,6)" fg:x="103917" fg:w="55"/><text x="95.7076%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (54 samples, 0.05%)</title><rect x="95.4585%" y="533" width="0.0496%" height="15" fill="rgb(252,55,38)" fg:x="103918" fg:w="54"/><text x="95.7085%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (51 samples, 0.05%)</title><rect x="95.5117%" y="533" width="0.0468%" height="15" fill="rgb(246,38,14)" fg:x="103976" fg:w="51"/><text x="95.7617%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="95.5650%" y="501" width="0.0101%" height="15" fill="rgb(242,27,5)" fg:x="104034" fg:w="11"/><text x="95.8150%" y="511.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (13 samples, 0.01%)</title><rect x="95.5650%" y="517" width="0.0119%" height="15" fill="rgb(228,65,35)" fg:x="104034" fg:w="13"/><text x="95.8150%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (205 samples, 0.19%)</title><rect x="95.3933%" y="629" width="0.1883%" height="15" fill="rgb(245,93,11)" fg:x="103847" fg:w="205"/><text x="95.6433%" y="639.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (201 samples, 0.18%)</title><rect x="95.3969%" y="613" width="0.1846%" height="15" fill="rgb(213,1,31)" fg:x="103851" fg:w="201"/><text x="95.6469%" y="623.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (144 samples, 0.13%)</title><rect x="95.4493%" y="597" width="0.1323%" height="15" fill="rgb(237,205,14)" fg:x="103908" fg:w="144"/><text x="95.6993%" y="607.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (144 samples, 0.13%)</title><rect x="95.4493%" y="581" width="0.1323%" height="15" fill="rgb(232,118,45)" fg:x="103908" fg:w="144"/><text x="95.6993%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (140 samples, 0.13%)</title><rect x="95.4530%" y="565" width="0.1286%" height="15" fill="rgb(218,5,6)" fg:x="103912" fg:w="140"/><text x="95.7030%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (80 samples, 0.07%)</title><rect x="95.5081%" y="549" width="0.0735%" height="15" fill="rgb(251,87,51)" fg:x="103972" fg:w="80"/><text x="95.7581%" y="559.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (20 samples, 0.02%)</title><rect x="95.5632%" y="533" width="0.0184%" height="15" fill="rgb(207,225,20)" fg:x="104032" fg:w="20"/><text x="95.8132%" y="543.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (208 samples, 0.19%)</title><rect x="95.3933%" y="645" width="0.1911%" height="15" fill="rgb(222,78,54)" fg:x="103847" fg:w="208"/><text x="95.6433%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (31 samples, 0.03%)</title><rect x="95.5843%" y="645" width="0.0285%" height="15" fill="rgb(232,85,16)" fg:x="104055" fg:w="31"/><text x="95.8343%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (29 samples, 0.03%)</title><rect x="95.5862%" y="629" width="0.0266%" height="15" fill="rgb(244,25,33)" fg:x="104057" fg:w="29"/><text x="95.8362%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (29 samples, 0.03%)</title><rect x="95.5862%" y="613" width="0.0266%" height="15" fill="rgb(233,24,36)" fg:x="104057" fg:w="29"/><text x="95.8362%" y="623.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (32 samples, 0.03%)</title><rect x="95.6211%" y="565" width="0.0294%" height="15" fill="rgb(253,49,54)" fg:x="104095" fg:w="32"/><text x="95.8711%" y="575.50"></text></g><g><title>parking::Unparker::unpark (28 samples, 0.03%)</title><rect x="95.6247%" y="549" width="0.0257%" height="15" fill="rgb(245,12,22)" fg:x="104099" fg:w="28"/><text x="95.8747%" y="559.50"></text></g><g><title>parking::Inner::unpark (24 samples, 0.02%)</title><rect x="95.6284%" y="533" width="0.0220%" height="15" fill="rgb(253,141,28)" fg:x="104103" fg:w="24"/><text x="95.8784%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (38 samples, 0.03%)</title><rect x="95.6211%" y="597" width="0.0349%" height="15" fill="rgb(225,207,27)" fg:x="104095" fg:w="38"/><text x="95.8711%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (38 samples, 0.03%)</title><rect x="95.6211%" y="581" width="0.0349%" height="15" fill="rgb(220,84,2)" fg:x="104095" fg:w="38"/><text x="95.8711%" y="591.50"></text></g><g><title>async_executor::State::notify (50 samples, 0.05%)</title><rect x="95.6146%" y="613" width="0.0459%" height="15" fill="rgb(224,37,37)" fg:x="104088" fg:w="50"/><text x="95.8646%" y="623.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (65 samples, 0.06%)</title><rect x="95.6146%" y="629" width="0.0597%" height="15" fill="rgb(220,143,18)" fg:x="104088" fg:w="65"/><text x="95.8646%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (15 samples, 0.01%)</title><rect x="95.6606%" y="613" width="0.0138%" height="15" fill="rgb(210,88,33)" fg:x="104138" fg:w="15"/><text x="95.9106%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (15 samples, 0.01%)</title><rect x="95.6606%" y="597" width="0.0138%" height="15" fill="rgb(219,87,51)" fg:x="104138" fg:w="15"/><text x="95.9106%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (71 samples, 0.07%)</title><rect x="95.6137%" y="645" width="0.0652%" height="15" fill="rgb(211,7,35)" fg:x="104087" fg:w="71"/><text x="95.8637%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (191 samples, 0.18%)</title><rect x="95.6789%" y="645" width="0.1755%" height="15" fill="rgb(232,77,2)" fg:x="104158" fg:w="191"/><text x="95.9289%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (191 samples, 0.18%)</title><rect x="95.6789%" y="629" width="0.1755%" height="15" fill="rgb(249,94,25)" fg:x="104158" fg:w="191"/><text x="95.9289%" y="639.50"></text></g><g><title>async_task::runnable::Runnable::run (560 samples, 0.51%)</title><rect x="95.3418%" y="677" width="0.5144%" height="15" fill="rgb(215,112,2)" fg:x="103791" fg:w="560"/><text x="95.5918%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (542 samples, 0.50%)</title><rect x="95.3583%" y="661" width="0.4979%" height="15" fill="rgb(226,115,48)" fg:x="103809" fg:w="542"/><text x="95.6083%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (7,519 samples, 6.91%)</title><rect x="88.9640%" y="741" width="6.9069%" height="15" fill="rgb(249,196,10)" fg:x="96848" fg:w="7519"/><text x="89.2140%" y="751.50">async_exe..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (7,515 samples, 6.90%)</title><rect x="88.9677%" y="725" width="6.9032%" height="15" fill="rgb(237,109,14)" fg:x="96852" fg:w="7515"/><text x="89.2177%" y="735.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,515 samples, 6.90%)</title><rect x="88.9677%" y="709" width="6.9032%" height="15" fill="rgb(217,103,53)" fg:x="96852" fg:w="7515"/><text x="89.2177%" y="719.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (7,506 samples, 6.89%)</title><rect x="88.9760%" y="693" width="6.8950%" height="15" fill="rgb(244,137,9)" fg:x="96861" fg:w="7506"/><text x="89.2260%" y="703.50">async_exe..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (16 samples, 0.01%)</title><rect x="95.8562%" y="677" width="0.0147%" height="15" fill="rgb(227,201,3)" fg:x="104351" fg:w="16"/><text x="96.1062%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (16 samples, 0.01%)</title><rect x="95.8562%" y="661" width="0.0147%" height="15" fill="rgb(243,94,6)" fg:x="104351" fg:w="16"/><text x="96.1062%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (51 samples, 0.05%)</title><rect x="95.9674%" y="469" width="0.0468%" height="15" fill="rgb(235,118,5)" fg:x="104472" fg:w="51"/><text x="96.2174%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (50 samples, 0.05%)</title><rect x="95.9683%" y="453" width="0.0459%" height="15" fill="rgb(247,10,30)" fg:x="104473" fg:w="50"/><text x="96.2183%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (47 samples, 0.04%)</title><rect x="95.9710%" y="437" width="0.0432%" height="15" fill="rgb(205,26,28)" fg:x="104476" fg:w="47"/><text x="96.2210%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (47 samples, 0.04%)</title><rect x="95.9710%" y="421" width="0.0432%" height="15" fill="rgb(206,99,35)" fg:x="104476" fg:w="47"/><text x="96.2210%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (47 samples, 0.04%)</title><rect x="95.9710%" y="405" width="0.0432%" height="15" fill="rgb(238,130,40)" fg:x="104476" fg:w="47"/><text x="96.2210%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (47 samples, 0.04%)</title><rect x="95.9710%" y="389" width="0.0432%" height="15" fill="rgb(224,126,31)" fg:x="104476" fg:w="47"/><text x="96.2210%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.05%)</title><rect x="95.9646%" y="533" width="0.0505%" height="15" fill="rgb(254,105,17)" fg:x="104469" fg:w="55"/><text x="96.2146%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (55 samples, 0.05%)</title><rect x="95.9646%" y="517" width="0.0505%" height="15" fill="rgb(216,87,36)" fg:x="104469" fg:w="55"/><text x="96.2146%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (55 samples, 0.05%)</title><rect x="95.9646%" y="501" width="0.0505%" height="15" fill="rgb(240,21,12)" fg:x="104469" fg:w="55"/><text x="96.2146%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (53 samples, 0.05%)</title><rect x="95.9665%" y="485" width="0.0487%" height="15" fill="rgb(245,192,34)" fg:x="104471" fg:w="53"/><text x="96.2165%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (43 samples, 0.04%)</title><rect x="96.0445%" y="501" width="0.0395%" height="15" fill="rgb(226,100,49)" fg:x="104556" fg:w="43"/><text x="96.2945%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (43 samples, 0.04%)</title><rect x="96.0445%" y="485" width="0.0395%" height="15" fill="rgb(245,188,27)" fg:x="104556" fg:w="43"/><text x="96.2945%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (43 samples, 0.04%)</title><rect x="96.0445%" y="469" width="0.0395%" height="15" fill="rgb(212,170,8)" fg:x="104556" fg:w="43"/><text x="96.2945%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (43 samples, 0.04%)</title><rect x="96.0445%" y="453" width="0.0395%" height="15" fill="rgb(217,113,29)" fg:x="104556" fg:w="43"/><text x="96.2945%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (149 samples, 0.14%)</title><rect x="96.0234%" y="517" width="0.1369%" height="15" fill="rgb(237,30,3)" fg:x="104533" fg:w="149"/><text x="96.2734%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (83 samples, 0.08%)</title><rect x="96.0840%" y="501" width="0.0762%" height="15" fill="rgb(227,19,28)" fg:x="104599" fg:w="83"/><text x="96.3340%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (83 samples, 0.08%)</title><rect x="96.0840%" y="485" width="0.0762%" height="15" fill="rgb(239,172,45)" fg:x="104599" fg:w="83"/><text x="96.3340%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (56 samples, 0.05%)</title><rect x="96.1704%" y="501" width="0.0514%" height="15" fill="rgb(254,55,39)" fg:x="104693" fg:w="56"/><text x="96.4204%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (54 samples, 0.05%)</title><rect x="96.1722%" y="485" width="0.0496%" height="15" fill="rgb(249,208,12)" fg:x="104695" fg:w="54"/><text x="96.4222%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (54 samples, 0.05%)</title><rect x="96.1722%" y="469" width="0.0496%" height="15" fill="rgb(240,52,13)" fg:x="104695" fg:w="54"/><text x="96.4222%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (54 samples, 0.05%)</title><rect x="96.1722%" y="453" width="0.0496%" height="15" fill="rgb(252,149,13)" fg:x="104695" fg:w="54"/><text x="96.4222%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (238 samples, 0.22%)</title><rect x="96.0151%" y="533" width="0.2186%" height="15" fill="rgb(232,81,48)" fg:x="104524" fg:w="238"/><text x="96.2651%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (80 samples, 0.07%)</title><rect x="96.1603%" y="517" width="0.0735%" height="15" fill="rgb(222,144,2)" fg:x="104682" fg:w="80"/><text x="96.4103%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (42 samples, 0.04%)</title><rect x="96.2393%" y="469" width="0.0386%" height="15" fill="rgb(216,81,32)" fg:x="104768" fg:w="42"/><text x="96.4893%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (42 samples, 0.04%)</title><rect x="96.2393%" y="453" width="0.0386%" height="15" fill="rgb(244,78,51)" fg:x="104768" fg:w="42"/><text x="96.4893%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (92 samples, 0.08%)</title><rect x="96.2338%" y="533" width="0.0845%" height="15" fill="rgb(217,66,21)" fg:x="104762" fg:w="92"/><text x="96.4838%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (92 samples, 0.08%)</title><rect x="96.2338%" y="517" width="0.0845%" height="15" fill="rgb(247,101,42)" fg:x="104762" fg:w="92"/><text x="96.4838%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (90 samples, 0.08%)</title><rect x="96.2356%" y="501" width="0.0827%" height="15" fill="rgb(227,81,39)" fg:x="104764" fg:w="90"/><text x="96.4856%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (88 samples, 0.08%)</title><rect x="96.2374%" y="485" width="0.0808%" height="15" fill="rgb(220,223,44)" fg:x="104766" fg:w="88"/><text x="96.4874%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (44 samples, 0.04%)</title><rect x="96.2779%" y="469" width="0.0404%" height="15" fill="rgb(205,218,2)" fg:x="104810" fg:w="44"/><text x="96.5279%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (44 samples, 0.04%)</title><rect x="96.2779%" y="453" width="0.0404%" height="15" fill="rgb(212,207,28)" fg:x="104810" fg:w="44"/><text x="96.5279%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.01%)</title><rect x="96.3210%" y="501" width="0.0138%" height="15" fill="rgb(224,12,41)" fg:x="104857" fg:w="15"/><text x="96.5710%" y="511.50"></text></g><g><title>fastrand::usize::{{closure}} (12 samples, 0.01%)</title><rect x="96.3238%" y="485" width="0.0110%" height="15" fill="rgb(216,118,12)" fg:x="104860" fg:w="12"/><text x="96.5738%" y="495.50"></text></g><g><title>fastrand::Rng::usize (12 samples, 0.01%)</title><rect x="96.3238%" y="469" width="0.0110%" height="15" fill="rgb(252,97,46)" fg:x="104860" fg:w="12"/><text x="96.5738%" y="479.50"></text></g><g><title>fastrand::usize (19 samples, 0.02%)</title><rect x="96.3192%" y="533" width="0.0175%" height="15" fill="rgb(244,206,19)" fg:x="104855" fg:w="19"/><text x="96.5692%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.02%)</title><rect x="96.3192%" y="517" width="0.0175%" height="15" fill="rgb(231,84,31)" fg:x="104855" fg:w="19"/><text x="96.5692%" y="527.50"></text></g><g><title>___pthread_rwlock_rdlock (40 samples, 0.04%)</title><rect x="96.3449%" y="485" width="0.0367%" height="15" fill="rgb(244,133,0)" fg:x="104883" fg:w="40"/><text x="96.5949%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (499 samples, 0.46%)</title><rect x="95.9563%" y="549" width="0.4584%" height="15" fill="rgb(223,15,50)" fg:x="104460" fg:w="499"/><text x="96.2063%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (85 samples, 0.08%)</title><rect x="96.3366%" y="533" width="0.0781%" height="15" fill="rgb(250,118,49)" fg:x="104874" fg:w="85"/><text x="96.5866%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (79 samples, 0.07%)</title><rect x="96.3422%" y="517" width="0.0726%" height="15" fill="rgb(248,25,38)" fg:x="104880" fg:w="79"/><text x="96.5922%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (79 samples, 0.07%)</title><rect x="96.3422%" y="501" width="0.0726%" height="15" fill="rgb(215,70,14)" fg:x="104880" fg:w="79"/><text x="96.5922%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (36 samples, 0.03%)</title><rect x="96.3817%" y="485" width="0.0331%" height="15" fill="rgb(215,28,15)" fg:x="104923" fg:w="36"/><text x="96.6317%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (36 samples, 0.03%)</title><rect x="96.3817%" y="469" width="0.0331%" height="15" fill="rgb(243,6,28)" fg:x="104923" fg:w="36"/><text x="96.6317%" y="479.50"></text></g><g><title>async_executor::Sleepers::update (28 samples, 0.03%)</title><rect x="96.4193%" y="533" width="0.0257%" height="15" fill="rgb(222,130,1)" fg:x="104964" fg:w="28"/><text x="96.6693%" y="543.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (48 samples, 0.04%)</title><rect x="96.4506%" y="469" width="0.0441%" height="15" fill="rgb(236,166,44)" fg:x="104998" fg:w="48"/><text x="96.7006%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (58 samples, 0.05%)</title><rect x="96.4450%" y="533" width="0.0533%" height="15" fill="rgb(221,108,14)" fg:x="104992" fg:w="58"/><text x="96.6950%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.05%)</title><rect x="96.4450%" y="517" width="0.0533%" height="15" fill="rgb(252,3,45)" fg:x="104992" fg:w="58"/><text x="96.6950%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (56 samples, 0.05%)</title><rect x="96.4469%" y="501" width="0.0514%" height="15" fill="rgb(237,68,30)" fg:x="104994" fg:w="56"/><text x="96.6969%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (52 samples, 0.05%)</title><rect x="96.4506%" y="485" width="0.0478%" height="15" fill="rgb(211,79,22)" fg:x="104998" fg:w="52"/><text x="96.7006%" y="495.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (703 samples, 0.65%)</title><rect x="95.9205%" y="661" width="0.6458%" height="15" fill="rgb(252,185,21)" fg:x="104421" fg:w="703"/><text x="96.1705%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (697 samples, 0.64%)</title><rect x="95.9260%" y="645" width="0.6403%" height="15" fill="rgb(225,189,26)" fg:x="104427" fg:w="697"/><text x="96.1760%" y="655.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (695 samples, 0.64%)</title><rect x="95.9279%" y="629" width="0.6384%" height="15" fill="rgb(241,30,40)" fg:x="104429" fg:w="695"/><text x="96.1779%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (691 samples, 0.63%)</title><rect x="95.9315%" y="613" width="0.6347%" height="15" fill="rgb(235,215,44)" fg:x="104433" fg:w="691"/><text x="96.1815%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (687 samples, 0.63%)</title><rect x="95.9352%" y="597" width="0.6311%" height="15" fill="rgb(205,8,29)" fg:x="104437" fg:w="687"/><text x="96.1852%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (681 samples, 0.63%)</title><rect x="95.9407%" y="581" width="0.6256%" height="15" fill="rgb(241,137,42)" fg:x="104443" fg:w="681"/><text x="96.1907%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (666 samples, 0.61%)</title><rect x="95.9545%" y="565" width="0.6118%" height="15" fill="rgb(237,155,2)" fg:x="104458" fg:w="666"/><text x="96.2045%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (165 samples, 0.15%)</title><rect x="96.4147%" y="549" width="0.1516%" height="15" fill="rgb(245,29,42)" fg:x="104959" fg:w="165"/><text x="96.6647%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (74 samples, 0.07%)</title><rect x="96.4983%" y="533" width="0.0680%" height="15" fill="rgb(234,101,35)" fg:x="105050" fg:w="74"/><text x="96.7483%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (65 samples, 0.06%)</title><rect x="96.5066%" y="517" width="0.0597%" height="15" fill="rgb(228,64,37)" fg:x="105059" fg:w="65"/><text x="96.7566%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (65 samples, 0.06%)</title><rect x="96.5066%" y="501" width="0.0597%" height="15" fill="rgb(217,214,36)" fg:x="105059" fg:w="65"/><text x="96.7566%" y="511.50"></text></g><g><title>___pthread_mutex_lock (65 samples, 0.06%)</title><rect x="96.5066%" y="485" width="0.0597%" height="15" fill="rgb(243,70,3)" fg:x="105059" fg:w="65"/><text x="96.7566%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (30 samples, 0.03%)</title><rect x="96.6278%" y="597" width="0.0276%" height="15" fill="rgb(253,158,52)" fg:x="105191" fg:w="30"/><text x="96.8778%" y="607.50"></text></g><g><title>core::mem::replace (30 samples, 0.03%)</title><rect x="96.6278%" y="581" width="0.0276%" height="15" fill="rgb(234,111,54)" fg:x="105191" fg:w="30"/><text x="96.8778%" y="591.50"></text></g><g><title>core::ptr::read (30 samples, 0.03%)</title><rect x="96.6278%" y="565" width="0.0276%" height="15" fill="rgb(217,70,32)" fg:x="105191" fg:w="30"/><text x="96.8778%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (39 samples, 0.04%)</title><rect x="96.6242%" y="613" width="0.0358%" height="15" fill="rgb(234,18,33)" fg:x="105187" fg:w="39"/><text x="96.8742%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (43 samples, 0.04%)</title><rect x="96.6600%" y="613" width="0.0395%" height="15" fill="rgb(234,12,49)" fg:x="105226" fg:w="43"/><text x="96.9100%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (41 samples, 0.04%)</title><rect x="96.6618%" y="597" width="0.0377%" height="15" fill="rgb(236,10,21)" fg:x="105228" fg:w="41"/><text x="96.9118%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="96.6618%" y="581" width="0.0377%" height="15" fill="rgb(248,182,45)" fg:x="105228" fg:w="41"/><text x="96.9118%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (36 samples, 0.03%)</title><rect x="96.6664%" y="565" width="0.0331%" height="15" fill="rgb(217,95,36)" fg:x="105233" fg:w="36"/><text x="96.9164%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (35 samples, 0.03%)</title><rect x="96.6673%" y="549" width="0.0322%" height="15" fill="rgb(212,110,31)" fg:x="105234" fg:w="35"/><text x="96.9173%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (35 samples, 0.03%)</title><rect x="96.6673%" y="533" width="0.0322%" height="15" fill="rgb(206,32,53)" fg:x="105234" fg:w="35"/><text x="96.9173%" y="543.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (204 samples, 0.19%)</title><rect x="96.6122%" y="629" width="0.1874%" height="15" fill="rgb(246,141,37)" fg:x="105174" fg:w="204"/><text x="96.8622%" y="639.50"></text></g><g><title>event_listener::Inner::lock (101 samples, 0.09%)</title><rect x="96.7068%" y="613" width="0.0928%" height="15" fill="rgb(219,16,7)" fg:x="105277" fg:w="101"/><text x="96.9568%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (100 samples, 0.09%)</title><rect x="96.7078%" y="597" width="0.0919%" height="15" fill="rgb(230,205,45)" fg:x="105278" fg:w="100"/><text x="96.9578%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (99 samples, 0.09%)</title><rect x="96.7087%" y="581" width="0.0909%" height="15" fill="rgb(231,43,49)" fg:x="105279" fg:w="99"/><text x="96.9587%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (93 samples, 0.09%)</title><rect x="96.7142%" y="565" width="0.0854%" height="15" fill="rgb(212,106,34)" fg:x="105285" fg:w="93"/><text x="96.9642%" y="575.50"></text></g><g><title>___pthread_mutex_lock (93 samples, 0.09%)</title><rect x="96.7142%" y="549" width="0.0854%" height="15" fill="rgb(206,83,17)" fg:x="105285" fg:w="93"/><text x="96.9642%" y="559.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (103 samples, 0.09%)</title><rect x="96.7996%" y="629" width="0.0946%" height="15" fill="rgb(244,154,49)" fg:x="105378" fg:w="103"/><text x="97.0496%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (103 samples, 0.09%)</title><rect x="96.7996%" y="613" width="0.0946%" height="15" fill="rgb(244,149,49)" fg:x="105378" fg:w="103"/><text x="97.0496%" y="623.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (65 samples, 0.06%)</title><rect x="96.8345%" y="597" width="0.0597%" height="15" fill="rgb(227,134,18)" fg:x="105416" fg:w="65"/><text x="97.0845%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (64 samples, 0.06%)</title><rect x="96.8354%" y="581" width="0.0588%" height="15" fill="rgb(237,116,36)" fg:x="105417" fg:w="64"/><text x="97.0854%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (64 samples, 0.06%)</title><rect x="96.8354%" y="565" width="0.0588%" height="15" fill="rgb(205,129,40)" fg:x="105417" fg:w="64"/><text x="97.0854%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (64 samples, 0.06%)</title><rect x="96.8354%" y="549" width="0.0588%" height="15" fill="rgb(236,178,4)" fg:x="105417" fg:w="64"/><text x="97.0854%" y="559.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,064 samples, 0.98%)</title><rect x="95.9178%" y="693" width="0.9774%" height="15" fill="rgb(251,76,53)" fg:x="104418" fg:w="1064"/><text x="96.1678%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,062 samples, 0.98%)</title><rect x="95.9196%" y="677" width="0.9755%" height="15" fill="rgb(242,92,40)" fg:x="104420" fg:w="1062"/><text x="96.1696%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (358 samples, 0.33%)</title><rect x="96.5663%" y="661" width="0.3289%" height="15" fill="rgb(209,45,30)" fg:x="105124" fg:w="358"/><text x="96.8163%" y="671.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (333 samples, 0.31%)</title><rect x="96.5893%" y="645" width="0.3059%" height="15" fill="rgb(218,157,36)" fg:x="105149" fg:w="333"/><text x="96.8393%" y="655.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,663 samples, 7.96%)</title><rect x="88.9383%" y="773" width="7.9578%" height="15" fill="rgb(222,186,16)" fg:x="96820" fg:w="8663"/><text x="89.1883%" y="783.50">&lt;futures_li..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,645 samples, 7.94%)</title><rect x="88.9548%" y="757" width="7.9412%" height="15" fill="rgb(254,72,35)" fg:x="96838" fg:w="8645"/><text x="89.2048%" y="767.50">&lt;core::futu..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,116 samples, 1.03%)</title><rect x="95.8709%" y="741" width="1.0252%" height="15" fill="rgb(224,25,35)" fg:x="104367" fg:w="1116"/><text x="96.1209%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,068 samples, 0.98%)</title><rect x="95.9150%" y="725" width="0.9811%" height="15" fill="rgb(206,135,52)" fg:x="104415" fg:w="1068"/><text x="96.1650%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,068 samples, 0.98%)</title><rect x="95.9150%" y="709" width="0.9811%" height="15" fill="rgb(229,174,47)" fg:x="104415" fg:w="1068"/><text x="96.1650%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::get (17 samples, 0.02%)</title><rect x="96.8961%" y="773" width="0.0156%" height="15" fill="rgb(242,184,21)" fg:x="105483" fg:w="17"/><text x="97.1461%" y="783.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.02%)</title><rect x="96.8961%" y="757" width="0.0156%" height="15" fill="rgb(213,22,45)" fg:x="105483" fg:w="17"/><text x="97.1461%" y="767.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (17 samples, 0.02%)</title><rect x="96.8961%" y="741" width="0.0156%" height="15" fill="rgb(237,81,54)" fg:x="105483" fg:w="17"/><text x="97.1461%" y="751.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (17 samples, 0.02%)</title><rect x="96.8961%" y="725" width="0.0156%" height="15" fill="rgb(248,177,18)" fg:x="105483" fg:w="17"/><text x="97.1461%" y="735.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (17 samples, 0.02%)</title><rect x="96.8961%" y="709" width="0.0156%" height="15" fill="rgb(254,31,16)" fg:x="105483" fg:w="17"/><text x="97.1461%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (183 samples, 0.17%)</title><rect x="96.9117%" y="773" width="0.1681%" height="15" fill="rgb(235,20,31)" fg:x="105500" fg:w="183"/><text x="97.1617%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (182 samples, 0.17%)</title><rect x="96.9126%" y="757" width="0.1672%" height="15" fill="rgb(240,56,43)" fg:x="105501" fg:w="182"/><text x="97.1626%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (182 samples, 0.17%)</title><rect x="96.9126%" y="741" width="0.1672%" height="15" fill="rgb(237,197,51)" fg:x="105501" fg:w="182"/><text x="97.1626%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (178 samples, 0.16%)</title><rect x="96.9163%" y="725" width="0.1635%" height="15" fill="rgb(241,162,44)" fg:x="105505" fg:w="178"/><text x="97.1663%" y="735.50"></text></g><g><title>__GI___pthread_mutex_trylock (178 samples, 0.16%)</title><rect x="96.9163%" y="709" width="0.1635%" height="15" fill="rgb(224,23,20)" fg:x="105505" fg:w="178"/><text x="97.1663%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (23 samples, 0.02%)</title><rect x="97.1129%" y="581" width="0.0211%" height="15" fill="rgb(250,109,34)" fg:x="105719" fg:w="23"/><text x="97.3629%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (22 samples, 0.02%)</title><rect x="97.1138%" y="565" width="0.0202%" height="15" fill="rgb(214,175,50)" fg:x="105720" fg:w="22"/><text x="97.3638%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (22 samples, 0.02%)</title><rect x="97.1138%" y="549" width="0.0202%" height="15" fill="rgb(213,182,5)" fg:x="105720" fg:w="22"/><text x="97.3638%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (22 samples, 0.02%)</title><rect x="97.1138%" y="533" width="0.0202%" height="15" fill="rgb(209,199,19)" fg:x="105720" fg:w="22"/><text x="97.3638%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (22 samples, 0.02%)</title><rect x="97.1138%" y="517" width="0.0202%" height="15" fill="rgb(236,224,42)" fg:x="105720" fg:w="22"/><text x="97.3638%" y="527.50"></text></g><g><title>rust_dealloc (26 samples, 0.02%)</title><rect x="97.1129%" y="597" width="0.0239%" height="15" fill="rgb(246,226,29)" fg:x="105719" fg:w="26"/><text x="97.3629%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (37 samples, 0.03%)</title><rect x="97.1110%" y="693" width="0.0340%" height="15" fill="rgb(227,223,11)" fg:x="105717" fg:w="37"/><text x="97.3610%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (37 samples, 0.03%)</title><rect x="97.1110%" y="677" width="0.0340%" height="15" fill="rgb(219,7,51)" fg:x="105717" fg:w="37"/><text x="97.3610%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (36 samples, 0.03%)</title><rect x="97.1119%" y="661" width="0.0331%" height="15" fill="rgb(245,167,10)" fg:x="105718" fg:w="36"/><text x="97.3619%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (36 samples, 0.03%)</title><rect x="97.1119%" y="645" width="0.0331%" height="15" fill="rgb(237,224,16)" fg:x="105718" fg:w="36"/><text x="97.3619%" y="655.50"></text></g><g><title>__rg_dealloc (36 samples, 0.03%)</title><rect x="97.1119%" y="629" width="0.0331%" height="15" fill="rgb(226,132,13)" fg:x="105718" fg:w="36"/><text x="97.3619%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (35 samples, 0.03%)</title><rect x="97.1129%" y="613" width="0.0322%" height="15" fill="rgb(214,140,3)" fg:x="105719" fg:w="35"/><text x="97.3629%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (39 samples, 0.04%)</title><rect x="97.1110%" y="725" width="0.0358%" height="15" fill="rgb(221,177,4)" fg:x="105717" fg:w="39"/><text x="97.3610%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (39 samples, 0.04%)</title><rect x="97.1110%" y="709" width="0.0358%" height="15" fill="rgb(238,139,3)" fg:x="105717" fg:w="39"/><text x="97.3610%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="97.1110%" y="741" width="0.0367%" height="15" fill="rgb(216,17,39)" fg:x="105717" fg:w="40"/><text x="97.3610%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (15 samples, 0.01%)</title><rect x="97.1698%" y="709" width="0.0138%" height="15" fill="rgb(238,120,9)" fg:x="105781" fg:w="15"/><text x="97.4198%" y="719.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (12 samples, 0.01%)</title><rect x="97.1726%" y="693" width="0.0110%" height="15" fill="rgb(244,92,53)" fg:x="105784" fg:w="12"/><text x="97.4226%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="97.1726%" y="677" width="0.0110%" height="15" fill="rgb(224,148,33)" fg:x="105784" fg:w="12"/><text x="97.4226%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.01%)</title><rect x="97.1845%" y="709" width="0.0138%" height="15" fill="rgb(243,6,36)" fg:x="105797" fg:w="15"/><text x="97.4345%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (15 samples, 0.01%)</title><rect x="97.1845%" y="693" width="0.0138%" height="15" fill="rgb(230,102,11)" fg:x="105797" fg:w="15"/><text x="97.4345%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (11 samples, 0.01%)</title><rect x="97.2240%" y="341" width="0.0101%" height="15" fill="rgb(234,148,36)" fg:x="105840" fg:w="11"/><text x="97.4740%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="97.2240%" y="325" width="0.0101%" height="15" fill="rgb(251,153,25)" fg:x="105840" fg:w="11"/><text x="97.4740%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (25 samples, 0.02%)</title><rect x="97.2176%" y="389" width="0.0230%" height="15" fill="rgb(215,129,8)" fg:x="105833" fg:w="25"/><text x="97.4676%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (25 samples, 0.02%)</title><rect x="97.2176%" y="373" width="0.0230%" height="15" fill="rgb(224,128,35)" fg:x="105833" fg:w="25"/><text x="97.4676%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (21 samples, 0.02%)</title><rect x="97.2213%" y="357" width="0.0193%" height="15" fill="rgb(237,56,52)" fg:x="105837" fg:w="21"/><text x="97.4713%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (34 samples, 0.03%)</title><rect x="97.2157%" y="405" width="0.0312%" height="15" fill="rgb(234,213,19)" fg:x="105831" fg:w="34"/><text x="97.4657%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (55 samples, 0.05%)</title><rect x="97.2093%" y="421" width="0.0505%" height="15" fill="rgb(252,82,23)" fg:x="105824" fg:w="55"/><text x="97.4593%" y="431.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (36 samples, 0.03%)</title><rect x="97.2810%" y="405" width="0.0331%" height="15" fill="rgb(254,201,21)" fg:x="105902" fg:w="36"/><text x="97.5310%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (395 samples, 0.36%)</title><rect x="97.2075%" y="453" width="0.3628%" height="15" fill="rgb(250,186,11)" fg:x="105822" fg:w="395"/><text x="97.4575%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (395 samples, 0.36%)</title><rect x="97.2075%" y="437" width="0.3628%" height="15" fill="rgb(211,174,5)" fg:x="105822" fg:w="395"/><text x="97.4575%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (338 samples, 0.31%)</title><rect x="97.2598%" y="421" width="0.3105%" height="15" fill="rgb(214,121,10)" fg:x="105879" fg:w="338"/><text x="97.5098%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (279 samples, 0.26%)</title><rect x="97.3140%" y="405" width="0.2563%" height="15" fill="rgb(241,66,2)" fg:x="105938" fg:w="279"/><text x="97.5640%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (279 samples, 0.26%)</title><rect x="97.3140%" y="389" width="0.2563%" height="15" fill="rgb(220,167,19)" fg:x="105938" fg:w="279"/><text x="97.5640%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (279 samples, 0.26%)</title><rect x="97.3140%" y="373" width="0.2563%" height="15" fill="rgb(231,54,50)" fg:x="105938" fg:w="279"/><text x="97.5640%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::empty (13 samples, 0.01%)</title><rect x="97.5777%" y="453" width="0.0119%" height="15" fill="rgb(239,217,53)" fg:x="106225" fg:w="13"/><text x="97.8277%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (13 samples, 0.01%)</title><rect x="97.5777%" y="437" width="0.0119%" height="15" fill="rgb(248,8,0)" fg:x="106225" fg:w="13"/><text x="97.8277%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (481 samples, 0.44%)</title><rect x="97.1983%" y="501" width="0.4418%" height="15" fill="rgb(229,118,37)" fg:x="105812" fg:w="481"/><text x="97.4483%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (479 samples, 0.44%)</title><rect x="97.2001%" y="485" width="0.4400%" height="15" fill="rgb(253,223,43)" fg:x="105814" fg:w="479"/><text x="97.4501%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (475 samples, 0.44%)</title><rect x="97.2038%" y="469" width="0.4363%" height="15" fill="rgb(211,77,36)" fg:x="105818" fg:w="475"/><text x="97.4538%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (55 samples, 0.05%)</title><rect x="97.5896%" y="453" width="0.0505%" height="15" fill="rgb(219,3,53)" fg:x="106238" fg:w="55"/><text x="97.8396%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (55 samples, 0.05%)</title><rect x="97.5896%" y="437" width="0.0505%" height="15" fill="rgb(244,45,42)" fg:x="106238" fg:w="55"/><text x="97.8396%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (531 samples, 0.49%)</title><rect x="97.1551%" y="741" width="0.4878%" height="15" fill="rgb(225,95,27)" fg:x="105765" fg:w="531"/><text x="97.4051%" y="751.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (521 samples, 0.48%)</title><rect x="97.1643%" y="725" width="0.4786%" height="15" fill="rgb(207,74,8)" fg:x="105775" fg:w="521"/><text x="97.4143%" y="735.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (484 samples, 0.44%)</title><rect x="97.1983%" y="709" width="0.4446%" height="15" fill="rgb(243,63,36)" fg:x="105812" fg:w="484"/><text x="97.4483%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (484 samples, 0.44%)</title><rect x="97.1983%" y="693" width="0.4446%" height="15" fill="rgb(211,180,12)" fg:x="105812" fg:w="484"/><text x="97.4483%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (484 samples, 0.44%)</title><rect x="97.1983%" y="677" width="0.4446%" height="15" fill="rgb(254,166,49)" fg:x="105812" fg:w="484"/><text x="97.4483%" y="687.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (484 samples, 0.44%)</title><rect x="97.1983%" y="661" width="0.4446%" height="15" fill="rgb(205,19,0)" fg:x="105812" fg:w="484"/><text x="97.4483%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (484 samples, 0.44%)</title><rect x="97.1983%" y="645" width="0.4446%" height="15" fill="rgb(224,172,32)" fg:x="105812" fg:w="484"/><text x="97.4483%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (484 samples, 0.44%)</title><rect x="97.1983%" y="629" width="0.4446%" height="15" fill="rgb(254,136,30)" fg:x="105812" fg:w="484"/><text x="97.4483%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (484 samples, 0.44%)</title><rect x="97.1983%" y="613" width="0.4446%" height="15" fill="rgb(246,19,35)" fg:x="105812" fg:w="484"/><text x="97.4483%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (484 samples, 0.44%)</title><rect x="97.1983%" y="597" width="0.4446%" height="15" fill="rgb(219,24,36)" fg:x="105812" fg:w="484"/><text x="97.4483%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (484 samples, 0.44%)</title><rect x="97.1983%" y="581" width="0.4446%" height="15" fill="rgb(251,55,1)" fg:x="105812" fg:w="484"/><text x="97.4483%" y="591.50"></text></g><g><title>alloc::alloc::alloc (484 samples, 0.44%)</title><rect x="97.1983%" y="565" width="0.4446%" height="15" fill="rgb(218,117,39)" fg:x="105812" fg:w="484"/><text x="97.4483%" y="575.50"></text></g><g><title>__rg_alloc (484 samples, 0.44%)</title><rect x="97.1983%" y="549" width="0.4446%" height="15" fill="rgb(248,169,11)" fg:x="105812" fg:w="484"/><text x="97.4483%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (484 samples, 0.44%)</title><rect x="97.1983%" y="533" width="0.4446%" height="15" fill="rgb(244,40,44)" fg:x="105812" fg:w="484"/><text x="97.4483%" y="543.50"></text></g><g><title>rust_alloc (484 samples, 0.44%)</title><rect x="97.1983%" y="517" width="0.4446%" height="15" fill="rgb(234,62,37)" fg:x="105812" fg:w="484"/><text x="97.4483%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (18 samples, 0.02%)</title><rect x="97.6548%" y="693" width="0.0165%" height="15" fill="rgb(207,117,42)" fg:x="106309" fg:w="18"/><text x="97.9048%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (18 samples, 0.02%)</title><rect x="97.6548%" y="677" width="0.0165%" height="15" fill="rgb(213,43,2)" fg:x="106309" fg:w="18"/><text x="97.9048%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (18 samples, 0.02%)</title><rect x="97.6548%" y="661" width="0.0165%" height="15" fill="rgb(244,202,51)" fg:x="106309" fg:w="18"/><text x="97.9048%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="97.6548%" y="645" width="0.0165%" height="15" fill="rgb(253,174,46)" fg:x="106309" fg:w="18"/><text x="97.9048%" y="655.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (38 samples, 0.03%)</title><rect x="97.6484%" y="725" width="0.0349%" height="15" fill="rgb(251,23,1)" fg:x="106302" fg:w="38"/><text x="97.8984%" y="735.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (35 samples, 0.03%)</title><rect x="97.6512%" y="709" width="0.0322%" height="15" fill="rgb(253,26,1)" fg:x="106305" fg:w="35"/><text x="97.9012%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="97.6714%" y="693" width="0.0119%" height="15" fill="rgb(216,89,31)" fg:x="106327" fg:w="13"/><text x="97.9214%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="97.6714%" y="677" width="0.0119%" height="15" fill="rgb(209,109,5)" fg:x="106327" fg:w="13"/><text x="97.9214%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (45 samples, 0.04%)</title><rect x="97.6429%" y="741" width="0.0413%" height="15" fill="rgb(229,63,13)" fg:x="106296" fg:w="45"/><text x="97.8929%" y="751.50"></text></g><g><title>core::mem::drop (63 samples, 0.06%)</title><rect x="97.6842%" y="741" width="0.0579%" height="15" fill="rgb(238,137,54)" fg:x="106341" fg:w="63"/><text x="97.9342%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (63 samples, 0.06%)</title><rect x="97.6842%" y="725" width="0.0579%" height="15" fill="rgb(228,1,9)" fg:x="106341" fg:w="63"/><text x="97.9342%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.06%)</title><rect x="97.6842%" y="709" width="0.0579%" height="15" fill="rgb(249,120,48)" fg:x="106341" fg:w="63"/><text x="97.9342%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (61 samples, 0.06%)</title><rect x="97.6861%" y="693" width="0.0560%" height="15" fill="rgb(209,72,36)" fg:x="106343" fg:w="61"/><text x="97.9361%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (60 samples, 0.06%)</title><rect x="97.6870%" y="677" width="0.0551%" height="15" fill="rgb(247,98,49)" fg:x="106344" fg:w="60"/><text x="97.9370%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (60 samples, 0.06%)</title><rect x="97.6870%" y="661" width="0.0551%" height="15" fill="rgb(233,75,36)" fg:x="106344" fg:w="60"/><text x="97.9370%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.03%)</title><rect x="97.7577%" y="741" width="0.0276%" height="15" fill="rgb(225,14,24)" fg:x="106421" fg:w="30"/><text x="98.0077%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (29 samples, 0.03%)</title><rect x="97.7586%" y="725" width="0.0266%" height="15" fill="rgb(237,193,20)" fg:x="106422" fg:w="29"/><text x="98.0086%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (29 samples, 0.03%)</title><rect x="97.7586%" y="709" width="0.0266%" height="15" fill="rgb(239,122,19)" fg:x="106422" fg:w="29"/><text x="98.0086%" y="719.50"></text></g><g><title>___pthread_mutex_lock (29 samples, 0.03%)</title><rect x="97.7586%" y="693" width="0.0266%" height="15" fill="rgb(231,220,10)" fg:x="106422" fg:w="29"/><text x="98.0086%" y="703.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (793 samples, 0.73%)</title><rect x="97.0991%" y="757" width="0.7284%" height="15" fill="rgb(220,66,15)" fg:x="105704" fg:w="793"/><text x="97.3491%" y="767.50"></text></g><g><title>std::time::Instant::now (46 samples, 0.04%)</title><rect x="97.7853%" y="741" width="0.0423%" height="15" fill="rgb(215,171,52)" fg:x="106451" fg:w="46"/><text x="98.0353%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (46 samples, 0.04%)</title><rect x="97.7853%" y="725" width="0.0423%" height="15" fill="rgb(241,169,50)" fg:x="106451" fg:w="46"/><text x="98.0353%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (46 samples, 0.04%)</title><rect x="97.7853%" y="709" width="0.0423%" height="15" fill="rgb(236,189,0)" fg:x="106451" fg:w="46"/><text x="98.0353%" y="719.50"></text></g><g><title>__clock_gettime_2 (42 samples, 0.04%)</title><rect x="97.7889%" y="693" width="0.0386%" height="15" fill="rgb(217,147,20)" fg:x="106455" fg:w="42"/><text x="98.0389%" y="703.50"></text></g><g><title>__vdso_clock_gettime (36 samples, 0.03%)</title><rect x="97.7945%" y="677" width="0.0331%" height="15" fill="rgb(206,188,39)" fg:x="106461" fg:w="36"/><text x="98.0445%" y="687.50"></text></g><g><title>[[vdso]] (21 samples, 0.02%)</title><rect x="97.8082%" y="661" width="0.0193%" height="15" fill="rgb(227,118,25)" fg:x="106476" fg:w="21"/><text x="98.0582%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.02%)</title><rect x="97.8275%" y="757" width="0.0184%" height="15" fill="rgb(248,171,40)" fg:x="106497" fg:w="20"/><text x="98.0775%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.02%)</title><rect x="97.8275%" y="741" width="0.0184%" height="15" fill="rgb(251,90,54)" fg:x="106497" fg:w="20"/><text x="98.0775%" y="751.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (37 samples, 0.03%)</title><rect x="97.8597%" y="677" width="0.0340%" height="15" fill="rgb(234,11,46)" fg:x="106532" fg:w="37"/><text x="98.1097%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (38 samples, 0.03%)</title><rect x="97.8597%" y="741" width="0.0349%" height="15" fill="rgb(229,134,13)" fg:x="106532" fg:w="38"/><text x="98.1097%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="97.8597%" y="725" width="0.0349%" height="15" fill="rgb(223,129,3)" fg:x="106532" fg:w="38"/><text x="98.1097%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (38 samples, 0.03%)</title><rect x="97.8597%" y="709" width="0.0349%" height="15" fill="rgb(221,124,13)" fg:x="106532" fg:w="38"/><text x="98.1097%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (38 samples, 0.03%)</title><rect x="97.8597%" y="693" width="0.0349%" height="15" fill="rgb(234,3,18)" fg:x="106532" fg:w="38"/><text x="98.1097%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (37 samples, 0.03%)</title><rect x="97.8946%" y="741" width="0.0340%" height="15" fill="rgb(249,199,20)" fg:x="106570" fg:w="37"/><text x="98.1446%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (37 samples, 0.03%)</title><rect x="97.8946%" y="725" width="0.0340%" height="15" fill="rgb(224,134,6)" fg:x="106570" fg:w="37"/><text x="98.1446%" y="735.50"></text></g><g><title>__libc_read (32 samples, 0.03%)</title><rect x="97.9653%" y="725" width="0.0294%" height="15" fill="rgb(254,83,26)" fg:x="106647" fg:w="32"/><text x="98.2153%" y="735.50"></text></g><g><title>__GI___pthread_disable_asynccancel (11 samples, 0.01%)</title><rect x="98.0535%" y="709" width="0.0101%" height="15" fill="rgb(217,88,9)" fg:x="106743" fg:w="11"/><text x="98.3035%" y="719.50"></text></g><g><title>epoll_wait (84 samples, 0.08%)</title><rect x="97.9947%" y="725" width="0.0772%" height="15" fill="rgb(225,73,2)" fg:x="106679" fg:w="84"/><text x="98.2447%" y="735.50"></text></g><g><title>__GI_epoll_ctl (42 samples, 0.04%)</title><rect x="98.0847%" y="693" width="0.0386%" height="15" fill="rgb(226,44,39)" fg:x="106777" fg:w="42"/><text x="98.3347%" y="703.50"></text></g><g><title>polling::epoll::Poller::ctl (55 samples, 0.05%)</title><rect x="98.0792%" y="709" width="0.0505%" height="15" fill="rgb(228,53,17)" fg:x="106771" fg:w="55"/><text x="98.3292%" y="719.50"></text></g><g><title>polling::epoll::Poller::modify (64 samples, 0.06%)</title><rect x="98.0728%" y="725" width="0.0588%" height="15" fill="rgb(212,27,27)" fg:x="106764" fg:w="64"/><text x="98.3228%" y="735.50"></text></g><g><title>polling::epoll::Poller::wait (246 samples, 0.23%)</title><rect x="97.9295%" y="741" width="0.2260%" height="15" fill="rgb(241,50,6)" fg:x="106608" fg:w="246"/><text x="98.1795%" y="751.50"></text></g><g><title>syscall (23 samples, 0.02%)</title><rect x="98.1343%" y="725" width="0.0211%" height="15" fill="rgb(225,28,51)" fg:x="106831" fg:w="23"/><text x="98.3843%" y="735.50"></text></g><g><title>polling::Poller::wait (357 samples, 0.33%)</title><rect x="97.8459%" y="757" width="0.3279%" height="15" fill="rgb(215,33,16)" fg:x="106517" fg:w="357"/><text x="98.0959%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (20 samples, 0.02%)</title><rect x="98.1555%" y="741" width="0.0184%" height="15" fill="rgb(243,40,39)" fg:x="106854" fg:w="20"/><text x="98.4055%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (19 samples, 0.02%)</title><rect x="98.1564%" y="725" width="0.0175%" height="15" fill="rgb(225,11,42)" fg:x="106855" fg:w="19"/><text x="98.4064%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (19 samples, 0.02%)</title><rect x="98.1564%" y="709" width="0.0175%" height="15" fill="rgb(241,220,38)" fg:x="106855" fg:w="19"/><text x="98.4064%" y="719.50"></text></g><g><title>__GI___pthread_mutex_trylock (19 samples, 0.02%)</title><rect x="98.1564%" y="693" width="0.0175%" height="15" fill="rgb(244,52,35)" fg:x="106855" fg:w="19"/><text x="98.4064%" y="703.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,193 samples, 1.10%)</title><rect x="97.0798%" y="773" width="1.0959%" height="15" fill="rgb(246,42,46)" fg:x="105683" fg:w="1193"/><text x="97.3298%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (14 samples, 0.01%)</title><rect x="98.1757%" y="725" width="0.0129%" height="15" fill="rgb(205,184,13)" fg:x="106876" fg:w="14"/><text x="98.4257%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_store (14 samples, 0.01%)</title><rect x="98.1757%" y="709" width="0.0129%" height="15" fill="rgb(209,48,36)" fg:x="106876" fg:w="14"/><text x="98.4257%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (15 samples, 0.01%)</title><rect x="98.1757%" y="773" width="0.0138%" height="15" fill="rgb(244,34,51)" fg:x="106876" fg:w="15"/><text x="98.4257%" y="783.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="98.1757%" y="757" width="0.0138%" height="15" fill="rgb(221,107,33)" fg:x="106876" fg:w="15"/><text x="98.4257%" y="767.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (15 samples, 0.01%)</title><rect x="98.1757%" y="741" width="0.0138%" height="15" fill="rgb(224,203,12)" fg:x="106876" fg:w="15"/><text x="98.4257%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::reactor::ReactorLock&gt; (14 samples, 0.01%)</title><rect x="98.1895%" y="773" width="0.0129%" height="15" fill="rgb(230,215,18)" fg:x="106891" fg:w="14"/><text x="98.4395%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;polling::Event&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="98.1895%" y="757" width="0.0129%" height="15" fill="rgb(206,185,35)" fg:x="106891" fg:w="14"/><text x="98.4395%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="98.1895%" y="741" width="0.0129%" height="15" fill="rgb(228,140,34)" fg:x="106891" fg:w="14"/><text x="98.4395%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="98.1904%" y="725" width="0.0119%" height="15" fill="rgb(208,93,13)" fg:x="106892" fg:w="13"/><text x="98.4404%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="98.1904%" y="709" width="0.0119%" height="15" fill="rgb(221,193,39)" fg:x="106892" fg:w="13"/><text x="98.4404%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="98.1913%" y="693" width="0.0110%" height="15" fill="rgb(241,132,34)" fg:x="106893" fg:w="12"/><text x="98.4413%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (12 samples, 0.01%)</title><rect x="98.2051%" y="773" width="0.0110%" height="15" fill="rgb(221,141,10)" fg:x="106908" fg:w="12"/><text x="98.4551%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_store (12 samples, 0.01%)</title><rect x="98.2051%" y="757" width="0.0110%" height="15" fill="rgb(226,90,31)" fg:x="106908" fg:w="12"/><text x="98.4551%" y="767.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (67 samples, 0.06%)</title><rect x="98.2372%" y="741" width="0.0615%" height="15" fill="rgb(243,75,5)" fg:x="106943" fg:w="67"/><text x="98.4872%" y="751.50"></text></g><g><title>__GI___lll_lock_wake (36 samples, 0.03%)</title><rect x="98.2657%" y="725" width="0.0331%" height="15" fill="rgb(227,156,21)" fg:x="106974" fg:w="36"/><text x="98.5157%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (102 samples, 0.09%)</title><rect x="98.3015%" y="741" width="0.0937%" height="15" fill="rgb(250,195,8)" fg:x="107013" fg:w="102"/><text x="98.5515%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (102 samples, 0.09%)</title><rect x="98.3015%" y="725" width="0.0937%" height="15" fill="rgb(220,134,5)" fg:x="107013" fg:w="102"/><text x="98.5515%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (20 samples, 0.02%)</title><rect x="98.5165%" y="677" width="0.0184%" height="15" fill="rgb(246,106,34)" fg:x="107247" fg:w="20"/><text x="98.7665%" y="687.50"></text></g><g><title>__condvar_confirm_wakeup (22 samples, 0.02%)</title><rect x="98.5348%" y="677" width="0.0202%" height="15" fill="rgb(205,1,4)" fg:x="107267" fg:w="22"/><text x="98.7848%" y="687.50"></text></g><g><title>__condvar_dec_grefs (173 samples, 0.16%)</title><rect x="98.5551%" y="677" width="0.1589%" height="15" fill="rgb(224,151,29)" fg:x="107289" fg:w="173"/><text x="98.8051%" y="687.50"></text></g><g><title>__GI___pthread_disable_asynccancel (26 samples, 0.02%)</title><rect x="98.9381%" y="661" width="0.0239%" height="15" fill="rgb(251,196,0)" fg:x="107706" fg:w="26"/><text x="99.1881%" y="671.50"></text></g><g><title>__futex_abstimed_wait_common (281 samples, 0.26%)</title><rect x="98.7140%" y="677" width="0.2581%" height="15" fill="rgb(212,127,0)" fg:x="107462" fg:w="281"/><text x="98.9640%" y="687.50"></text></g><g><title>__GI___pthread_enable_asynccancel (11 samples, 0.01%)</title><rect x="98.9620%" y="661" width="0.0101%" height="15" fill="rgb(236,71,53)" fg:x="107732" fg:w="11"/><text x="99.2120%" y="671.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (648 samples, 0.60%)</title><rect x="98.4016%" y="709" width="0.5952%" height="15" fill="rgb(227,99,0)" fg:x="107122" fg:w="648"/><text x="98.6516%" y="719.50"></text></g><g><title>__GI___pthread_cond_wait (648 samples, 0.60%)</title><rect x="98.4016%" y="693" width="0.5952%" height="15" fill="rgb(239,89,21)" fg:x="107122" fg:w="648"/><text x="98.6516%" y="703.50"></text></g><g><title>__pthread_mutex_cond_lock (19 samples, 0.02%)</title><rect x="98.9794%" y="677" width="0.0175%" height="15" fill="rgb(243,122,19)" fg:x="107751" fg:w="19"/><text x="99.2294%" y="687.50"></text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (27 samples, 0.02%)</title><rect x="98.9969%" y="709" width="0.0248%" height="15" fill="rgb(229,192,45)" fg:x="107770" fg:w="27"/><text x="99.2469%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (26 samples, 0.02%)</title><rect x="98.9978%" y="693" width="0.0239%" height="15" fill="rgb(235,165,35)" fg:x="107771" fg:w="26"/><text x="99.2478%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.02%)</title><rect x="98.9978%" y="677" width="0.0239%" height="15" fill="rgb(253,202,0)" fg:x="107771" fg:w="26"/><text x="99.2478%" y="687.50"></text></g><g><title>std::sync::condvar::Condvar::wait (685 samples, 0.63%)</title><rect x="98.3952%" y="741" width="0.6292%" height="15" fill="rgb(235,51,20)" fg:x="107115" fg:w="685"/><text x="98.6452%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (678 samples, 0.62%)</title><rect x="98.4016%" y="725" width="0.6228%" height="15" fill="rgb(218,95,46)" fg:x="107122" fg:w="678"/><text x="98.6516%" y="735.50"></text></g><g><title>parking::Parker::park (911 samples, 0.84%)</title><rect x="98.2216%" y="773" width="0.8368%" height="15" fill="rgb(212,81,10)" fg:x="106926" fg:w="911"/><text x="98.4716%" y="783.50"></text></g><g><title>parking::Inner::park (910 samples, 0.84%)</title><rect x="98.2225%" y="757" width="0.8359%" height="15" fill="rgb(240,59,0)" fg:x="106927" fg:w="910"/><text x="98.4725%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (37 samples, 0.03%)</title><rect x="99.0245%" y="741" width="0.0340%" height="15" fill="rgb(212,191,42)" fg:x="107800" fg:w="37"/><text x="99.2745%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (35 samples, 0.03%)</title><rect x="99.0263%" y="725" width="0.0322%" height="15" fill="rgb(233,140,3)" fg:x="107802" fg:w="35"/><text x="99.2763%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (35 samples, 0.03%)</title><rect x="99.0263%" y="709" width="0.0322%" height="15" fill="rgb(215,69,23)" fg:x="107802" fg:w="35"/><text x="99.2763%" y="719.50"></text></g><g><title>___pthread_mutex_lock (35 samples, 0.03%)</title><rect x="99.0263%" y="693" width="0.0322%" height="15" fill="rgb(240,202,20)" fg:x="107802" fg:w="35"/><text x="99.2763%" y="703.50"></text></g><g><title>parking::Parker::park_timeout (166 samples, 0.15%)</title><rect x="99.0584%" y="773" width="0.1525%" height="15" fill="rgb(209,146,50)" fg:x="107837" fg:w="166"/><text x="99.3084%" y="783.50"></text></g><g><title>parking::Inner::park (160 samples, 0.15%)</title><rect x="99.0640%" y="757" width="0.1470%" height="15" fill="rgb(253,102,54)" fg:x="107843" fg:w="160"/><text x="99.3140%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (148 samples, 0.14%)</title><rect x="99.0750%" y="741" width="0.1360%" height="15" fill="rgb(250,173,47)" fg:x="107855" fg:w="148"/><text x="99.3250%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (148 samples, 0.14%)</title><rect x="99.0750%" y="725" width="0.1360%" height="15" fill="rgb(232,142,7)" fg:x="107855" fg:w="148"/><text x="99.3250%" y="735.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (11,223 samples, 10.31%)</title><rect x="88.9291%" y="805" width="10.3094%" height="15" fill="rgb(230,157,47)" fg:x="96810" fg:w="11223"/><text x="89.1791%" y="815.50">async_global_ex..</text></g><g><title>async_io::driver::block_on (11,223 samples, 10.31%)</title><rect x="88.9291%" y="789" width="10.3094%" height="15" fill="rgb(214,177,35)" fg:x="96810" fg:w="11223"/><text x="89.1791%" y="799.50">async_io::drive..</text></g><g><title>std::time::Instant::now (21 samples, 0.02%)</title><rect x="99.2192%" y="773" width="0.0193%" height="15" fill="rgb(234,119,46)" fg:x="108012" fg:w="21"/><text x="99.4692%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (21 samples, 0.02%)</title><rect x="99.2192%" y="757" width="0.0193%" height="15" fill="rgb(241,180,50)" fg:x="108012" fg:w="21"/><text x="99.4692%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::now (21 samples, 0.02%)</title><rect x="99.2192%" y="741" width="0.0193%" height="15" fill="rgb(221,54,25)" fg:x="108012" fg:w="21"/><text x="99.4692%" y="751.50"></text></g><g><title>__clock_gettime_2 (16 samples, 0.01%)</title><rect x="99.2238%" y="725" width="0.0147%" height="15" fill="rgb(209,157,44)" fg:x="108017" fg:w="16"/><text x="99.4738%" y="735.50"></text></g><g><title>__vdso_clock_gettime (12 samples, 0.01%)</title><rect x="99.2275%" y="709" width="0.0110%" height="15" fill="rgb(246,115,41)" fg:x="108021" fg:w="12"/><text x="99.4775%" y="719.50"></text></g><g><title>std::panic::catch_unwind (11,249 samples, 10.33%)</title><rect x="88.9071%" y="1061" width="10.3333%" height="15" fill="rgb(229,86,1)" fg:x="96786" fg:w="11249"/><text x="89.1571%" y="1071.50">std::panic::cat..</text></g><g><title>std::panicking::try (11,249 samples, 10.33%)</title><rect x="88.9071%" y="1045" width="10.3333%" height="15" fill="rgb(240,108,53)" fg:x="96786" fg:w="11249"/><text x="89.1571%" y="1055.50">std::panicking:..</text></g><g><title>std::panicking::try::do_call (11,249 samples, 10.33%)</title><rect x="88.9071%" y="1029" width="10.3333%" height="15" fill="rgb(227,134,2)" fg:x="96786" fg:w="11249"/><text x="89.1571%" y="1039.50">std::panicking:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11,249 samples, 10.33%)</title><rect x="88.9071%" y="1013" width="10.3333%" height="15" fill="rgb(213,129,25)" fg:x="96786" fg:w="11249"/><text x="89.1571%" y="1023.50">&lt;core::panic::u..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (11,249 samples, 10.33%)</title><rect x="88.9071%" y="997" width="10.3333%" height="15" fill="rgb(226,35,21)" fg:x="96786" fg:w="11249"/><text x="89.1571%" y="1007.50">std::thread::Bu..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11,249 samples, 10.33%)</title><rect x="88.9071%" y="981" width="10.3333%" height="15" fill="rgb(208,129,26)" fg:x="96786" fg:w="11249"/><text x="89.1571%" y="991.50">std::sys_common..</text></g><g><title>core::ops::function::FnOnce::call_once (11,249 samples, 10.33%)</title><rect x="88.9071%" y="965" width="10.3333%" height="15" fill="rgb(224,83,6)" fg:x="96786" fg:w="11249"/><text x="89.1571%" y="975.50">core::ops::func..</text></g><g><title>async_global_executor::threading::thread_main_loop (11,249 samples, 10.33%)</title><rect x="88.9071%" y="949" width="10.3333%" height="15" fill="rgb(227,52,39)" fg:x="96786" fg:w="11249"/><text x="89.1571%" y="959.50">async_global_ex..</text></g><g><title>std::panic::catch_unwind (11,225 samples, 10.31%)</title><rect x="88.9291%" y="933" width="10.3112%" height="15" fill="rgb(241,30,17)" fg:x="96810" fg:w="11225"/><text x="89.1791%" y="943.50">std::panic::cat..</text></g><g><title>std::panicking::try (11,225 samples, 10.31%)</title><rect x="88.9291%" y="917" width="10.3112%" height="15" fill="rgb(246,186,42)" fg:x="96810" fg:w="11225"/><text x="89.1791%" y="927.50">std::panicking:..</text></g><g><title>std::panicking::try::do_call (11,225 samples, 10.31%)</title><rect x="88.9291%" y="901" width="10.3112%" height="15" fill="rgb(221,169,15)" fg:x="96810" fg:w="11225"/><text x="89.1791%" y="911.50">std::panicking:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (11,225 samples, 10.31%)</title><rect x="88.9291%" y="885" width="10.3112%" height="15" fill="rgb(235,108,21)" fg:x="96810" fg:w="11225"/><text x="89.1791%" y="895.50">async_global_ex..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,225 samples, 10.31%)</title><rect x="88.9291%" y="869" width="10.3112%" height="15" fill="rgb(219,148,30)" fg:x="96810" fg:w="11225"/><text x="89.1791%" y="879.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,225 samples, 10.31%)</title><rect x="88.9291%" y="853" width="10.3112%" height="15" fill="rgb(220,109,5)" fg:x="96810" fg:w="11225"/><text x="89.1791%" y="863.50">std::thread::lo..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (11,225 samples, 10.31%)</title><rect x="88.9291%" y="837" width="10.3112%" height="15" fill="rgb(213,203,48)" fg:x="96810" fg:w="11225"/><text x="89.1791%" y="847.50">async_global_ex..</text></g><g><title>async_global_executor::reactor::block_on (11,225 samples, 10.31%)</title><rect x="88.9291%" y="821" width="10.3112%" height="15" fill="rgb(244,71,33)" fg:x="96810" fg:w="11225"/><text x="89.1791%" y="831.50">async_global_ex..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11,256 samples, 10.34%)</title><rect x="88.9071%" y="1125" width="10.3397%" height="15" fill="rgb(209,23,2)" fg:x="96786" fg:w="11256"/><text x="89.1571%" y="1135.50">&lt;alloc::boxed::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11,256 samples, 10.34%)</title><rect x="88.9071%" y="1109" width="10.3397%" height="15" fill="rgb(219,97,7)" fg:x="96786" fg:w="11256"/><text x="89.1571%" y="1119.50">&lt;alloc::boxed::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (11,256 samples, 10.34%)</title><rect x="88.9071%" y="1093" width="10.3397%" height="15" fill="rgb(216,161,23)" fg:x="96786" fg:w="11256"/><text x="89.1571%" y="1103.50">core::ops::func..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (11,256 samples, 10.34%)</title><rect x="88.9071%" y="1077" width="10.3397%" height="15" fill="rgb(207,45,42)" fg:x="96786" fg:w="11256"/><text x="89.1571%" y="1087.50">std::thread::Bu..</text></g><g><title>__GI___clone (11,271 samples, 10.35%)</title><rect x="88.8979%" y="1173" width="10.3535%" height="15" fill="rgb(241,61,4)" fg:x="96776" fg:w="11271"/><text x="89.1479%" y="1183.50">__GI___clone</text></g><g><title>start_thread (11,261 samples, 10.34%)</title><rect x="88.9071%" y="1157" width="10.3443%" height="15" fill="rgb(236,170,1)" fg:x="96786" fg:w="11261"/><text x="89.1571%" y="1167.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (11,261 samples, 10.34%)</title><rect x="88.9071%" y="1141" width="10.3443%" height="15" fill="rgb(239,72,5)" fg:x="96786" fg:w="11261"/><text x="89.1571%" y="1151.50">std::sys::unix:..</text></g><g><title>abi_stable::erased_types::iterator::next (14 samples, 0.01%)</title><rect x="99.2817%" y="1173" width="0.0129%" height="15" fill="rgb(214,13,50)" fg:x="108080" fg:w="14"/><text x="99.5317%" y="1183.50"></text></g><g><title>anon.1a665750e55f61771b0c5208d2cf66ff.127.llvm.6912954030877323883 (11 samples, 0.01%)</title><rect x="99.3046%" y="1173" width="0.0101%" height="15" fill="rgb(224,88,9)" fg:x="108105" fg:w="11"/><text x="99.5546%" y="1183.50"></text></g><g><title>anon.704b378fac5dc6238355d8a8086309c7.10.llvm.11899312567597393491 (19 samples, 0.02%)</title><rect x="99.3175%" y="1173" width="0.0175%" height="15" fill="rgb(238,192,34)" fg:x="108119" fg:w="19"/><text x="99.5675%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="99.3175%" y="1157" width="0.0175%" height="15" fill="rgb(217,203,50)" fg:x="108119" fg:w="19"/><text x="99.5675%" y="1167.50"></text></g><g><title>anon.71e5b5c751f2f55dad6b0b336b32f453.18.llvm.8327217511132763441 (16 samples, 0.01%)</title><rect x="99.3349%" y="1173" width="0.0147%" height="15" fill="rgb(241,123,32)" fg:x="108138" fg:w="16"/><text x="99.5849%" y="1183.50"></text></g><g><title>abi_stable::erased_types::iterator::next (11 samples, 0.01%)</title><rect x="99.3395%" y="1157" width="0.0101%" height="15" fill="rgb(248,151,39)" fg:x="108143" fg:w="11"/><text x="99.5895%" y="1167.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (11 samples, 0.01%)</title><rect x="99.3496%" y="1157" width="0.0101%" height="15" fill="rgb(208,89,6)" fg:x="108154" fg:w="11"/><text x="99.5996%" y="1167.50"></text></g><g><title>anon.85f7c209b708c8dfe64168938a9edec2.15.llvm.4679518330183379261 (12 samples, 0.01%)</title><rect x="99.3496%" y="1173" width="0.0110%" height="15" fill="rgb(254,43,26)" fg:x="108154" fg:w="12"/><text x="99.5996%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="99.3607%" y="1157" width="0.0110%" height="15" fill="rgb(216,158,13)" fg:x="108166" fg:w="12"/><text x="99.6107%" y="1167.50"></text></g><g><title>anon.abc78cc5583050b6b67ff97e820827fc.14.llvm.14730796635267274446 (32 samples, 0.03%)</title><rect x="99.3607%" y="1173" width="0.0294%" height="15" fill="rgb(212,47,37)" fg:x="108166" fg:w="32"/><text x="99.6107%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="99.3717%" y="1157" width="0.0184%" height="15" fill="rgb(254,16,10)" fg:x="108178" fg:w="20"/><text x="99.6217%" y="1167.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (30 samples, 0.03%)</title><rect x="99.3919%" y="1157" width="0.0276%" height="15" fill="rgb(223,228,16)" fg:x="108200" fg:w="30"/><text x="99.6419%" y="1167.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (30 samples, 0.03%)</title><rect x="99.3919%" y="1141" width="0.0276%" height="15" fill="rgb(249,108,50)" fg:x="108200" fg:w="30"/><text x="99.6419%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (30 samples, 0.03%)</title><rect x="99.3919%" y="1125" width="0.0276%" height="15" fill="rgb(208,220,5)" fg:x="108200" fg:w="30"/><text x="99.6419%" y="1135.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (30 samples, 0.03%)</title><rect x="99.3919%" y="1109" width="0.0276%" height="15" fill="rgb(217,89,48)" fg:x="108200" fg:w="30"/><text x="99.6419%" y="1119.50"></text></g><g><title>anon.cf5b369754f469a95f7b3df78c6a1de7.35.llvm.13184787943170355473 (40 samples, 0.04%)</title><rect x="99.3919%" y="1173" width="0.0367%" height="15" fill="rgb(212,113,41)" fg:x="108200" fg:w="40"/><text x="99.6419%" y="1183.50"></text></g><g><title>async_executor::steal (62 samples, 0.06%)</title><rect x="99.4498%" y="1173" width="0.0570%" height="15" fill="rgb(231,127,5)" fg:x="108263" fg:w="62"/><text x="99.6998%" y="1183.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (26 samples, 0.02%)</title><rect x="99.5168%" y="1173" width="0.0239%" height="15" fill="rgb(217,141,17)" fg:x="108336" fg:w="26"/><text x="99.7668%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (35 samples, 0.03%)</title><rect x="99.5453%" y="1173" width="0.0322%" height="15" fill="rgb(245,125,54)" fg:x="108367" fg:w="35"/><text x="99.7953%" y="1183.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (13 samples, 0.01%)</title><rect x="99.5774%" y="1173" width="0.0119%" height="15" fill="rgb(248,125,3)" fg:x="108402" fg:w="13"/><text x="99.8274%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="99.5949%" y="1173" width="0.0110%" height="15" fill="rgb(236,119,51)" fg:x="108421" fg:w="12"/><text x="99.8449%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (12 samples, 0.01%)</title><rect x="99.5949%" y="1157" width="0.0110%" height="15" fill="rgb(239,99,8)" fg:x="108421" fg:w="12"/><text x="99.8449%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (61 samples, 0.06%)</title><rect x="99.6059%" y="1173" width="0.0560%" height="15" fill="rgb(224,228,4)" fg:x="108433" fg:w="61"/><text x="99.8559%" y="1183.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (12 samples, 0.01%)</title><rect x="99.6693%" y="1173" width="0.0110%" height="15" fill="rgb(220,131,45)" fg:x="108502" fg:w="12"/><text x="99.9193%" y="1183.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (11 samples, 0.01%)</title><rect x="99.6812%" y="1173" width="0.0101%" height="15" fill="rgb(215,62,5)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="99.6812%" y="1157" width="0.0101%" height="15" fill="rgb(253,12,24)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (11 samples, 0.01%)</title><rect x="99.6812%" y="1141" width="0.0101%" height="15" fill="rgb(248,120,50)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="1151.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="99.6812%" y="1125" width="0.0101%" height="15" fill="rgb(245,194,10)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="1135.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="99.6812%" y="1109" width="0.0101%" height="15" fill="rgb(241,149,38)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="1119.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (11 samples, 0.01%)</title><rect x="99.6812%" y="1093" width="0.0101%" height="15" fill="rgb(219,215,7)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="1103.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (11 samples, 0.01%)</title><rect x="99.6812%" y="1077" width="0.0101%" height="15" fill="rgb(208,120,31)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (11 samples, 0.01%)</title><rect x="99.6812%" y="1061" width="0.0101%" height="15" fill="rgb(244,30,8)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="99.6812%" y="1045" width="0.0101%" height="15" fill="rgb(238,35,44)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="1055.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="99.6812%" y="1029" width="0.0101%" height="15" fill="rgb(243,218,37)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="99.6812%" y="1013" width="0.0101%" height="15" fill="rgb(218,169,10)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="99.6812%" y="997" width="0.0101%" height="15" fill="rgb(221,144,10)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.01%)</title><rect x="99.6812%" y="981" width="0.0101%" height="15" fill="rgb(226,41,38)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="991.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (11 samples, 0.01%)</title><rect x="99.6812%" y="965" width="0.0101%" height="15" fill="rgb(228,3,1)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="975.50"></text></g><g><title>async_ffi::FfiContext::with_context (11 samples, 0.01%)</title><rect x="99.6812%" y="949" width="0.0101%" height="15" fill="rgb(209,129,12)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="959.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="99.6812%" y="933" width="0.0101%" height="15" fill="rgb(213,136,33)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="99.6812%" y="917" width="0.0101%" height="15" fill="rgb(209,181,29)" fg:x="108515" fg:w="11"/><text x="99.9312%" y="927.50"></text></g><g><title>async-std/runti (108,442 samples, 99.61%)</title><rect x="0.0781%" y="1189" width="99.6142%" height="15" fill="rgb(234,173,18)" fg:x="85" fg:w="108442"/><text x="0.3281%" y="1199.50">async-std/runti</text></g><g><title>__futex_abstimed_wait_common (15 samples, 0.01%)</title><rect x="99.6996%" y="869" width="0.0138%" height="15" fill="rgb(227,73,47)" fg:x="108535" fg:w="15"/><text x="99.9496%" y="879.50"></text></g><g><title>blocking-1 (24 samples, 0.02%)</title><rect x="99.6923%" y="1189" width="0.0220%" height="15" fill="rgb(234,9,34)" fg:x="108527" fg:w="24"/><text x="99.9423%" y="1199.50"></text></g><g><title>__GI___clone (24 samples, 0.02%)</title><rect x="99.6923%" y="1173" width="0.0220%" height="15" fill="rgb(235,172,15)" fg:x="108527" fg:w="24"/><text x="99.9423%" y="1183.50"></text></g><g><title>start_thread (20 samples, 0.02%)</title><rect x="99.6959%" y="1157" width="0.0184%" height="15" fill="rgb(245,61,2)" fg:x="108531" fg:w="20"/><text x="99.9459%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (19 samples, 0.02%)</title><rect x="99.6969%" y="1141" width="0.0175%" height="15" fill="rgb(238,39,47)" fg:x="108532" fg:w="19"/><text x="99.9469%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="99.6969%" y="1125" width="0.0175%" height="15" fill="rgb(234,37,24)" fg:x="108532" fg:w="19"/><text x="99.9469%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="99.6969%" y="1109" width="0.0175%" height="15" fill="rgb(248,223,24)" fg:x="108532" fg:w="19"/><text x="99.9469%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (19 samples, 0.02%)</title><rect x="99.6969%" y="1093" width="0.0175%" height="15" fill="rgb(223,12,15)" fg:x="108532" fg:w="19"/><text x="99.9469%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (19 samples, 0.02%)</title><rect x="99.6969%" y="1077" width="0.0175%" height="15" fill="rgb(249,6,3)" fg:x="108532" fg:w="19"/><text x="99.9469%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="99.6969%" y="1061" width="0.0175%" height="15" fill="rgb(237,105,33)" fg:x="108532" fg:w="19"/><text x="99.9469%" y="1071.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="99.6969%" y="1045" width="0.0175%" height="15" fill="rgb(252,208,35)" fg:x="108532" fg:w="19"/><text x="99.9469%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="99.6969%" y="1029" width="0.0175%" height="15" fill="rgb(215,181,35)" fg:x="108532" fg:w="19"/><text x="99.9469%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="99.6969%" y="1013" width="0.0175%" height="15" fill="rgb(246,212,3)" fg:x="108532" fg:w="19"/><text x="99.9469%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="99.6969%" y="997" width="0.0175%" height="15" fill="rgb(247,156,24)" fg:x="108532" fg:w="19"/><text x="99.9469%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 0.02%)</title><rect x="99.6969%" y="981" width="0.0175%" height="15" fill="rgb(248,9,31)" fg:x="108532" fg:w="19"/><text x="99.9469%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (19 samples, 0.02%)</title><rect x="99.6969%" y="965" width="0.0175%" height="15" fill="rgb(234,26,45)" fg:x="108532" fg:w="19"/><text x="99.9469%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (19 samples, 0.02%)</title><rect x="99.6969%" y="949" width="0.0175%" height="15" fill="rgb(249,11,32)" fg:x="108532" fg:w="19"/><text x="99.9469%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (16 samples, 0.01%)</title><rect x="99.6996%" y="933" width="0.0147%" height="15" fill="rgb(249,162,33)" fg:x="108535" fg:w="16"/><text x="99.9496%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (16 samples, 0.01%)</title><rect x="99.6996%" y="917" width="0.0147%" height="15" fill="rgb(232,4,32)" fg:x="108535" fg:w="16"/><text x="99.9496%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (16 samples, 0.01%)</title><rect x="99.6996%" y="901" width="0.0147%" height="15" fill="rgb(212,5,45)" fg:x="108535" fg:w="16"/><text x="99.9496%" y="911.50"></text></g><g><title>___pthread_cond_timedwait (16 samples, 0.01%)</title><rect x="99.6996%" y="885" width="0.0147%" height="15" fill="rgb(227,95,13)" fg:x="108535" fg:w="16"/><text x="99.9496%" y="895.50"></text></g><g><title>blocking-2 (25 samples, 0.02%)</title><rect x="99.7143%" y="1189" width="0.0230%" height="15" fill="rgb(223,205,10)" fg:x="108551" fg:w="25"/><text x="99.9643%" y="1199.50"></text></g><g><title>__GI___clone (25 samples, 0.02%)</title><rect x="99.7143%" y="1173" width="0.0230%" height="15" fill="rgb(222,178,8)" fg:x="108551" fg:w="25"/><text x="99.9643%" y="1183.50"></text></g><g><title>start_thread (25 samples, 0.02%)</title><rect x="99.7143%" y="1157" width="0.0230%" height="15" fill="rgb(216,13,22)" fg:x="108551" fg:w="25"/><text x="99.9643%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (25 samples, 0.02%)</title><rect x="99.7143%" y="1141" width="0.0230%" height="15" fill="rgb(240,167,12)" fg:x="108551" fg:w="25"/><text x="99.9643%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 0.02%)</title><rect x="99.7143%" y="1125" width="0.0230%" height="15" fill="rgb(235,68,35)" fg:x="108551" fg:w="25"/><text x="99.9643%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 0.02%)</title><rect x="99.7143%" y="1109" width="0.0230%" height="15" fill="rgb(253,40,27)" fg:x="108551" fg:w="25"/><text x="99.9643%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (24 samples, 0.02%)</title><rect x="99.7152%" y="1093" width="0.0220%" height="15" fill="rgb(214,19,28)" fg:x="108552" fg:w="24"/><text x="99.9652%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (24 samples, 0.02%)</title><rect x="99.7152%" y="1077" width="0.0220%" height="15" fill="rgb(210,167,45)" fg:x="108552" fg:w="24"/><text x="99.9652%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (24 samples, 0.02%)</title><rect x="99.7152%" y="1061" width="0.0220%" height="15" fill="rgb(232,97,40)" fg:x="108552" fg:w="24"/><text x="99.9652%" y="1071.50"></text></g><g><title>std::panicking::try (24 samples, 0.02%)</title><rect x="99.7152%" y="1045" width="0.0220%" height="15" fill="rgb(250,35,23)" fg:x="108552" fg:w="24"/><text x="99.9652%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (24 samples, 0.02%)</title><rect x="99.7152%" y="1029" width="0.0220%" height="15" fill="rgb(248,47,53)" fg:x="108552" fg:w="24"/><text x="99.9652%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24 samples, 0.02%)</title><rect x="99.7152%" y="1013" width="0.0220%" height="15" fill="rgb(226,58,50)" fg:x="108552" fg:w="24"/><text x="99.9652%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (24 samples, 0.02%)</title><rect x="99.7152%" y="997" width="0.0220%" height="15" fill="rgb(217,105,26)" fg:x="108552" fg:w="24"/><text x="99.9652%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (24 samples, 0.02%)</title><rect x="99.7152%" y="981" width="0.0220%" height="15" fill="rgb(208,64,1)" fg:x="108552" fg:w="24"/><text x="99.9652%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (24 samples, 0.02%)</title><rect x="99.7152%" y="965" width="0.0220%" height="15" fill="rgb(214,80,1)" fg:x="108552" fg:w="24"/><text x="99.9652%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (24 samples, 0.02%)</title><rect x="99.7152%" y="949" width="0.0220%" height="15" fill="rgb(206,175,26)" fg:x="108552" fg:w="24"/><text x="99.9652%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (15 samples, 0.01%)</title><rect x="99.7235%" y="933" width="0.0138%" height="15" fill="rgb(235,156,37)" fg:x="108561" fg:w="15"/><text x="99.9735%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (15 samples, 0.01%)</title><rect x="99.7235%" y="917" width="0.0138%" height="15" fill="rgb(213,100,9)" fg:x="108561" fg:w="15"/><text x="99.9735%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (15 samples, 0.01%)</title><rect x="99.7235%" y="901" width="0.0138%" height="15" fill="rgb(241,15,13)" fg:x="108561" fg:w="15"/><text x="99.9735%" y="911.50"></text></g><g><title>___pthread_cond_timedwait (15 samples, 0.01%)</title><rect x="99.7235%" y="885" width="0.0138%" height="15" fill="rgb(205,97,43)" fg:x="108561" fg:w="15"/><text x="99.9735%" y="895.50"></text></g><g><title>__futex_abstimed_wait_common (13 samples, 0.01%)</title><rect x="99.7253%" y="869" width="0.0119%" height="15" fill="rgb(216,106,32)" fg:x="108563" fg:w="13"/><text x="99.9753%" y="879.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (69 samples, 0.06%)</title><rect x="99.7474%" y="933" width="0.0634%" height="15" fill="rgb(226,200,8)" fg:x="108587" fg:w="69"/><text x="99.9974%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (69 samples, 0.06%)</title><rect x="99.7474%" y="917" width="0.0634%" height="15" fill="rgb(244,54,29)" fg:x="108587" fg:w="69"/><text x="99.9974%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (68 samples, 0.06%)</title><rect x="99.7483%" y="901" width="0.0625%" height="15" fill="rgb(252,169,12)" fg:x="108588" fg:w="68"/><text x="99.9983%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (68 samples, 0.06%)</title><rect x="99.7483%" y="885" width="0.0625%" height="15" fill="rgb(231,199,11)" fg:x="108588" fg:w="68"/><text x="99.9983%" y="895.50"></text></g><g><title>___pthread_mutex_lock (68 samples, 0.06%)</title><rect x="99.7483%" y="869" width="0.0625%" height="15" fill="rgb(233,191,18)" fg:x="108588" fg:w="68"/><text x="99.9983%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (65 samples, 0.06%)</title><rect x="99.7511%" y="853" width="0.0597%" height="15" fill="rgb(215,83,47)" fg:x="108591" fg:w="65"/><text x="100.0011%" y="863.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (72 samples, 0.07%)</title><rect x="99.7474%" y="949" width="0.0661%" height="15" fill="rgb(251,67,19)" fg:x="108587" fg:w="72"/><text x="99.9974%" y="959.50"></text></g><g><title>std::panic::catch_unwind (73 samples, 0.07%)</title><rect x="99.7474%" y="1061" width="0.0671%" height="15" fill="rgb(240,7,20)" fg:x="108587" fg:w="73"/><text x="99.9974%" y="1071.50"></text></g><g><title>std::panicking::try (73 samples, 0.07%)</title><rect x="99.7474%" y="1045" width="0.0671%" height="15" fill="rgb(210,150,26)" fg:x="108587" fg:w="73"/><text x="99.9974%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (73 samples, 0.07%)</title><rect x="99.7474%" y="1029" width="0.0671%" height="15" fill="rgb(228,75,42)" fg:x="108587" fg:w="73"/><text x="99.9974%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (73 samples, 0.07%)</title><rect x="99.7474%" y="1013" width="0.0671%" height="15" fill="rgb(237,134,48)" fg:x="108587" fg:w="73"/><text x="99.9974%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (73 samples, 0.07%)</title><rect x="99.7474%" y="997" width="0.0671%" height="15" fill="rgb(205,80,50)" fg:x="108587" fg:w="73"/><text x="99.9974%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (73 samples, 0.07%)</title><rect x="99.7474%" y="981" width="0.0671%" height="15" fill="rgb(217,74,48)" fg:x="108587" fg:w="73"/><text x="99.9974%" y="991.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (73 samples, 0.07%)</title><rect x="99.7474%" y="965" width="0.0671%" height="15" fill="rgb(205,82,50)" fg:x="108587" fg:w="73"/><text x="99.9974%" y="975.50"></text></g><g><title>tokio-runtime-w (75 samples, 0.07%)</title><rect x="99.7474%" y="1189" width="0.0689%" height="15" fill="rgb(228,1,33)" fg:x="108587" fg:w="75"/><text x="99.9974%" y="1199.50"></text></g><g><title>__GI___clone (75 samples, 0.07%)</title><rect x="99.7474%" y="1173" width="0.0689%" height="15" fill="rgb(214,50,23)" fg:x="108587" fg:w="75"/><text x="99.9974%" y="1183.50"></text></g><g><title>start_thread (75 samples, 0.07%)</title><rect x="99.7474%" y="1157" width="0.0689%" height="15" fill="rgb(210,62,9)" fg:x="108587" fg:w="75"/><text x="99.9974%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (75 samples, 0.07%)</title><rect x="99.7474%" y="1141" width="0.0689%" height="15" fill="rgb(210,104,37)" fg:x="108587" fg:w="75"/><text x="99.9974%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (75 samples, 0.07%)</title><rect x="99.7474%" y="1125" width="0.0689%" height="15" fill="rgb(232,104,43)" fg:x="108587" fg:w="75"/><text x="99.9974%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (75 samples, 0.07%)</title><rect x="99.7474%" y="1109" width="0.0689%" height="15" fill="rgb(244,52,6)" fg:x="108587" fg:w="75"/><text x="99.9974%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (75 samples, 0.07%)</title><rect x="99.7474%" y="1093" width="0.0689%" height="15" fill="rgb(211,174,52)" fg:x="108587" fg:w="75"/><text x="99.9974%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (75 samples, 0.07%)</title><rect x="99.7474%" y="1077" width="0.0689%" height="15" fill="rgb(229,48,4)" fg:x="108587" fg:w="75"/><text x="99.9974%" y="1087.50"></text></g><g><title>[unknown] (27 samples, 0.02%)</title><rect x="99.8190%" y="1173" width="0.0248%" height="15" fill="rgb(205,155,16)" fg:x="108665" fg:w="27"/><text x="100.0690%" y="1183.50"></text></g><g><title>__GI___clone (161 samples, 0.15%)</title><rect x="99.8438%" y="1173" width="0.1479%" height="15" fill="rgb(211,141,53)" fg:x="108692" fg:w="161"/><text x="100.0938%" y="1183.50"></text></g><g><title>start_thread (14 samples, 0.01%)</title><rect x="99.9789%" y="1157" width="0.0129%" height="15" fill="rgb(240,148,11)" fg:x="108839" fg:w="14"/><text x="100.2289%" y="1167.50"></text></g><g><title>all (108,862 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(214,45,23)" fg:x="0" fg:w="108862"/><text x="0.2500%" y="1215.50"></text></g><g><title>tremor-pdk (200 samples, 0.18%)</title><rect x="99.8163%" y="1189" width="0.1837%" height="15" fill="rgb(248,74,26)" fg:x="108662" fg:w="200"/><text x="100.0663%" y="1199.50"></text></g></svg></svg>